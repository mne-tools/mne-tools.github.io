Search.setIndex({"docnames": ["api/connectivity", "api/covariance", "api/creating_from_arrays", "api/datasets", "api/decoding", "api/events", "api/export", "api/file_io", "api/forward", "api/inverse", "api/logging", "api/most_used_classes", "api/mri", "api/preprocessing", "api/python_reference", "api/reading_raw_data", "api/realtime", "api/report", "api/sensor_space", "api/simulation", "api/source_space", "api/statistics", "api/time_frequency", "api/visualization", "auto_examples/connectivity/index", "auto_examples/connectivity/sg_execution_times", "auto_examples/datasets/brainstorm_data", "auto_examples/datasets/hf_sef_data", "auto_examples/datasets/index", "auto_examples/datasets/kernel_phantom", "auto_examples/datasets/limo_data", "auto_examples/datasets/opm_data", "auto_examples/datasets/sg_execution_times", "auto_examples/datasets/spm_faces_dataset_sgskip", "auto_examples/decoding/decoding_csp_eeg", "auto_examples/decoding/decoding_csp_timefreq", "auto_examples/decoding/decoding_rsa_sgskip", "auto_examples/decoding/decoding_spatio_temporal_source", "auto_examples/decoding/decoding_spoc_CMC", "auto_examples/decoding/decoding_time_generalization_conditions", "auto_examples/decoding/decoding_unsupervised_spatial_filter", "auto_examples/decoding/decoding_xdawn_eeg", "auto_examples/decoding/ems_filtering", "auto_examples/decoding/index", "auto_examples/decoding/linear_model_patterns", "auto_examples/decoding/receptive_field_mtrf", "auto_examples/decoding/sg_execution_times", "auto_examples/decoding/ssd_spatial_filters", "auto_examples/forward/forward_sensitivity_maps", "auto_examples/forward/index", "auto_examples/forward/left_cerebellum_volume_source", "auto_examples/forward/sg_execution_times", "auto_examples/forward/source_space_morphing", "auto_examples/index", "auto_examples/inverse/compute_mne_inverse_epochs_in_label", "auto_examples/inverse/compute_mne_inverse_raw_in_label", "auto_examples/inverse/compute_mne_inverse_volume", "auto_examples/inverse/custom_inverse_solver", "auto_examples/inverse/dics_epochs", "auto_examples/inverse/dics_source_power", "auto_examples/inverse/evoked_ers_source_power", "auto_examples/inverse/gamma_map_inverse", "auto_examples/inverse/index", "auto_examples/inverse/label_activation_from_stc", "auto_examples/inverse/label_from_stc", "auto_examples/inverse/label_source_activations", "auto_examples/inverse/mixed_norm_inverse", "auto_examples/inverse/mixed_source_space_inverse", "auto_examples/inverse/mne_cov_power", "auto_examples/inverse/morph_surface_stc", "auto_examples/inverse/morph_volume_stc", "auto_examples/inverse/multi_dipole_model", "auto_examples/inverse/multidict_reweighted_tfmxne", "auto_examples/inverse/psf_ctf_label_leakage", "auto_examples/inverse/psf_ctf_vertices", "auto_examples/inverse/psf_ctf_vertices_lcmv", "auto_examples/inverse/psf_volume", "auto_examples/inverse/rap_music", "auto_examples/inverse/read_inverse", "auto_examples/inverse/read_stc", "auto_examples/inverse/resolution_metrics", "auto_examples/inverse/resolution_metrics_eegmeg", "auto_examples/inverse/sg_execution_times", "auto_examples/inverse/snr_estimate", "auto_examples/inverse/source_space_snr", "auto_examples/inverse/time_frequency_mixed_norm_inverse", "auto_examples/inverse/trap_music", "auto_examples/inverse/vector_mne_solution", "auto_examples/io/elekta_epochs", "auto_examples/io/index", "auto_examples/io/read_neo_format", "auto_examples/io/read_noise_covariance_matrix", "auto_examples/io/read_xdf", "auto_examples/io/sg_execution_times", "auto_examples/preprocessing/contralateral_referencing", "auto_examples/preprocessing/css", "auto_examples/preprocessing/define_target_events", "auto_examples/preprocessing/eeg_bridging", "auto_examples/preprocessing/eeg_csd", "auto_examples/preprocessing/eog_artifact_histogram", "auto_examples/preprocessing/eog_regression", "auto_examples/preprocessing/find_ref_artifacts", "auto_examples/preprocessing/fnirs_artifact_removal", "auto_examples/preprocessing/ica_comparison", "auto_examples/preprocessing/index", "auto_examples/preprocessing/interpolate_bad_channels", "auto_examples/preprocessing/movement_compensation", "auto_examples/preprocessing/movement_detection", "auto_examples/preprocessing/muscle_detection", "auto_examples/preprocessing/muscle_ica", "auto_examples/preprocessing/otp", "auto_examples/preprocessing/sg_execution_times", "auto_examples/preprocessing/shift_evoked", "auto_examples/preprocessing/virtual_evoked", "auto_examples/preprocessing/xdawn_denoising", "auto_examples/sg_execution_times", "auto_examples/simulation/index", "auto_examples/simulation/plot_stc_metrics", "auto_examples/simulation/sg_execution_times", "auto_examples/simulation/simulate_evoked_data", "auto_examples/simulation/simulate_raw_data", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy", "auto_examples/simulation/source_simulator", "auto_examples/stats/cluster_stats_evoked", "auto_examples/stats/fdr_stats_evoked", "auto_examples/stats/index", "auto_examples/stats/linear_regression_raw", "auto_examples/stats/sensor_permutation_test", "auto_examples/stats/sensor_regression", "auto_examples/stats/sg_execution_times", "auto_examples/time_frequency/compute_csd", "auto_examples/time_frequency/compute_source_psd_epochs", "auto_examples/time_frequency/index", "auto_examples/time_frequency/sg_execution_times", "auto_examples/time_frequency/source_label_time_frequency", "auto_examples/time_frequency/source_power_spectrum", "auto_examples/time_frequency/source_power_spectrum_opm", "auto_examples/time_frequency/source_space_time_frequency", "auto_examples/time_frequency/temporal_whitening", "auto_examples/time_frequency/time_frequency_erds", "auto_examples/time_frequency/time_frequency_global_field_power", "auto_examples/time_frequency/time_frequency_simulated", "auto_examples/visualization/3d_to_2d", "auto_examples/visualization/brain", "auto_examples/visualization/channel_epochs_image", "auto_examples/visualization/eeg_on_scalp", "auto_examples/visualization/evoked_arrowmap", "auto_examples/visualization/evoked_topomap", "auto_examples/visualization/evoked_whitening", "auto_examples/visualization/eyetracking_plot_heatmap", "auto_examples/visualization/index", "auto_examples/visualization/meg_sensors", "auto_examples/visualization/mne_helmet", "auto_examples/visualization/montage_sgskip", "auto_examples/visualization/parcellation", "auto_examples/visualization/roi_erpimage_by_rt", "auto_examples/visualization/sg_execution_times", "auto_examples/visualization/ssp_projs_sensitivity_map", "auto_examples/visualization/topo_compare_conditions", "auto_examples/visualization/topo_customized", "auto_examples/visualization/xhemi", "auto_tutorials/clinical/20_seeg", "auto_tutorials/clinical/30_ecog", "auto_tutorials/clinical/60_sleep", "auto_tutorials/clinical/index", "auto_tutorials/clinical/sg_execution_times", "auto_tutorials/epochs/10_epochs_overview", "auto_tutorials/epochs/15_baseline_regression", "auto_tutorials/epochs/20_visualize_epochs", "auto_tutorials/epochs/30_epochs_metadata", "auto_tutorials/epochs/40_autogenerate_metadata", "auto_tutorials/epochs/50_epochs_to_data_frame", "auto_tutorials/epochs/60_make_fixed_length_epochs", "auto_tutorials/epochs/index", "auto_tutorials/epochs/sg_execution_times", "auto_tutorials/evoked/10_evoked_overview", "auto_tutorials/evoked/20_visualize_evoked", "auto_tutorials/evoked/30_eeg_erp", "auto_tutorials/evoked/40_whitened", "auto_tutorials/evoked/index", "auto_tutorials/evoked/sg_execution_times", "auto_tutorials/forward/10_background_freesurfer", "auto_tutorials/forward/20_source_alignment", "auto_tutorials/forward/25_automated_coreg", "auto_tutorials/forward/30_forward", "auto_tutorials/forward/35_eeg_no_mri", "auto_tutorials/forward/50_background_freesurfer_mne", "auto_tutorials/forward/80_fix_bem_in_blender", "auto_tutorials/forward/90_compute_covariance", "auto_tutorials/forward/index", "auto_tutorials/forward/sg_execution_times", "auto_tutorials/index", "auto_tutorials/intro/10_overview", "auto_tutorials/intro/15_inplace", "auto_tutorials/intro/20_events_from_raw", "auto_tutorials/intro/30_info", "auto_tutorials/intro/40_sensor_locations", "auto_tutorials/intro/50_configure_mne", "auto_tutorials/intro/70_report", "auto_tutorials/intro/index", "auto_tutorials/intro/sg_execution_times", "auto_tutorials/inverse/10_stc_class", "auto_tutorials/inverse/20_dipole_fit", "auto_tutorials/inverse/30_mne_dspm_loreta", "auto_tutorials/inverse/35_dipole_orientations", "auto_tutorials/inverse/40_mne_fixed_free", "auto_tutorials/inverse/50_beamformer_lcmv", "auto_tutorials/inverse/60_visualize_stc", "auto_tutorials/inverse/70_eeg_mri_coords", "auto_tutorials/inverse/80_brainstorm_phantom_elekta", "auto_tutorials/inverse/85_brainstorm_phantom_ctf", "auto_tutorials/inverse/90_phantom_4DBTi", "auto_tutorials/inverse/95_phantom_KIT", "auto_tutorials/inverse/index", "auto_tutorials/inverse/sg_execution_times", "auto_tutorials/io/10_reading_meg_data", "auto_tutorials/io/20_reading_eeg_data", "auto_tutorials/io/30_reading_fnirs_data", "auto_tutorials/io/60_ctf_bst_auditory", "auto_tutorials/io/70_reading_eyetracking_data", "auto_tutorials/io/index", "auto_tutorials/io/sg_execution_times", "auto_tutorials/machine-learning/30_strf", "auto_tutorials/machine-learning/50_decoding", "auto_tutorials/machine-learning/index", "auto_tutorials/machine-learning/sg_execution_times", "auto_tutorials/preprocessing/10_preprocessing_overview", "auto_tutorials/preprocessing/15_handling_bad_channels", "auto_tutorials/preprocessing/20_rejecting_bad_data", "auto_tutorials/preprocessing/25_background_filtering", "auto_tutorials/preprocessing/30_filtering_resampling", "auto_tutorials/preprocessing/35_artifact_correction_regression", "auto_tutorials/preprocessing/40_artifact_correction_ica", "auto_tutorials/preprocessing/45_projectors_background", "auto_tutorials/preprocessing/50_artifact_correction_ssp", "auto_tutorials/preprocessing/55_setting_eeg_reference", "auto_tutorials/preprocessing/59_head_positions", "auto_tutorials/preprocessing/60_maxwell_filtering_sss", "auto_tutorials/preprocessing/70_fnirs_processing", "auto_tutorials/preprocessing/80_opm_processing", "auto_tutorials/preprocessing/90_eyetracking_data", "auto_tutorials/preprocessing/index", "auto_tutorials/preprocessing/sg_execution_times", "auto_tutorials/raw/10_raw_overview", "auto_tutorials/raw/20_event_arrays", "auto_tutorials/raw/30_annotate_raw", "auto_tutorials/raw/40_visualize_raw", "auto_tutorials/raw/index", "auto_tutorials/raw/sg_execution_times", "auto_tutorials/sg_execution_times", "auto_tutorials/simulation/10_array_objs", "auto_tutorials/simulation/70_point_spread", "auto_tutorials/simulation/80_dics", "auto_tutorials/simulation/index", "auto_tutorials/simulation/sg_execution_times", "auto_tutorials/stats-sensor-space/10_background_stats", "auto_tutorials/stats-sensor-space/20_erp_stats", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal", "auto_tutorials/stats-sensor-space/index", "auto_tutorials/stats-sensor-space/sg_execution_times", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal", "auto_tutorials/stats-source-space/index", "auto_tutorials/stats-source-space/sg_execution_times", "auto_tutorials/time-freq/10_spectrum_class", "auto_tutorials/time-freq/20_sensors_time_frequency", "auto_tutorials/time-freq/50_ssvep", "auto_tutorials/time-freq/index", "auto_tutorials/time-freq/sg_execution_times", "auto_tutorials/visualization/10_publication_figure", "auto_tutorials/visualization/20_ui_events", "auto_tutorials/visualization/index", "auto_tutorials/visualization/sg_execution_times", "bibliography", "changes/devel", "changes/v0.1", "changes/v0.10", "changes/v0.11", "changes/v0.12", "changes/v0.13", "changes/v0.14", "changes/v0.15", "changes/v0.16", "changes/v0.17", "changes/v0.18", "changes/v0.19", "changes/v0.2", "changes/v0.20", "changes/v0.21", "changes/v0.22", "changes/v0.23", "changes/v0.24", "changes/v0.3", "changes/v0.4", "changes/v0.5", "changes/v0.6", "changes/v0.7", "changes/v0.8", "changes/v0.9", "changes/v1.0", "changes/v1.1", "changes/v1.2", "changes/v1.3", "changes/v1.4", "changes/v1.5", "development/contributing", "development/governance", "development/index", "development/roadmap", "development/whats_new", "documentation/cite", "documentation/cited", "documentation/cookbook", "documentation/datasets", "documentation/design_philosophy", "documentation/glossary", "documentation/implementation", "documentation/index", "funding", "generated/commands", "generated/mne.AcqParserFIF", "generated/mne.Annotations", "generated/mne.BaseEpochs", "generated/mne.BiHemiLabel", "generated/mne.Covariance", "generated/mne.Dipole", "generated/mne.DipoleFixed", "generated/mne.Epochs", "generated/mne.EpochsArray", "generated/mne.Evoked", "generated/mne.EvokedArray", "generated/mne.Forward", "generated/mne.Info", "generated/mne.Label", "generated/mne.MixedSourceEstimate", "generated/mne.MixedVectorSourceEstimate", "generated/mne.Projection", "generated/mne.Report", "generated/mne.SourceEstimate", "generated/mne.SourceMorph", "generated/mne.SourceSpaces", "generated/mne.VectorSourceEstimate", "generated/mne.VolSourceEstimate", "generated/mne.VolVectorSourceEstimate", "generated/mne.add_reference_channels", "generated/mne.add_source_space_distances", "generated/mne.annotations_from_events", "generated/mne.apply_forward", "generated/mne.apply_forward_raw", "generated/mne.average_forward_solutions", "generated/mne.baseline.rescale", "generated/mne.beamformer.Beamformer", "generated/mne.beamformer.apply_dics", "generated/mne.beamformer.apply_dics_csd", "generated/mne.beamformer.apply_dics_epochs", "generated/mne.beamformer.apply_dics_tfr_epochs", "generated/mne.beamformer.apply_lcmv", "generated/mne.beamformer.apply_lcmv_cov", "generated/mne.beamformer.apply_lcmv_epochs", "generated/mne.beamformer.apply_lcmv_raw", "generated/mne.beamformer.make_dics", "generated/mne.beamformer.make_lcmv", "generated/mne.beamformer.make_lcmv_resolution_matrix", "generated/mne.beamformer.rap_music", "generated/mne.beamformer.read_beamformer", "generated/mne.beamformer.trap_music", "generated/mne.bem.ConductorModel", "generated/mne.bem.convert_flash_mris", "generated/mne.bem.distance_to_bem", "generated/mne.bem.fit_sphere_to_headshape", "generated/mne.bem.get_fitting_dig", "generated/mne.bem.make_flash_bem", "generated/mne.bem.make_scalp_surfaces", "generated/mne.bem.make_watershed_bem", "generated/mne.channel_indices_by_type", "generated/mne.channel_type", "generated/mne.channels.DigMontage", "generated/mne.channels.Layout", "generated/mne.channels.combine_channels", "generated/mne.channels.compute_dev_head_t", "generated/mne.channels.compute_native_head_t", "generated/mne.channels.equalize_channels", "generated/mne.channels.find_ch_adjacency", "generated/mne.channels.find_layout", "generated/mne.channels.fix_mag_coil_types", "generated/mne.channels.generate_2d_layout", "generated/mne.channels.get_builtin_ch_adjacencies", "generated/mne.channels.get_builtin_montages", "generated/mne.channels.make_1020_channel_selections", "generated/mne.channels.make_dig_montage", "generated/mne.channels.make_eeg_layout", "generated/mne.channels.make_grid_layout", "generated/mne.channels.make_standard_montage", "generated/mne.channels.read_ch_adjacency", "generated/mne.channels.read_custom_montage", "generated/mne.channels.read_dig_captrak", "generated/mne.channels.read_dig_dat", "generated/mne.channels.read_dig_egi", "generated/mne.channels.read_dig_fif", "generated/mne.channels.read_dig_hpts", "generated/mne.channels.read_dig_localite", "generated/mne.channels.read_dig_polhemus_isotrak", "generated/mne.channels.read_layout", "generated/mne.channels.read_polhemus_fastscan", "generated/mne.channels.rename_channels", "generated/mne.channels.unify_bad_channels", "generated/mne.chpi.compute_chpi_amplitudes", "generated/mne.chpi.compute_chpi_locs", "generated/mne.chpi.compute_chpi_snr", "generated/mne.chpi.compute_head_pos", "generated/mne.chpi.extract_chpi_locs_ctf", "generated/mne.chpi.extract_chpi_locs_kit", "generated/mne.chpi.filter_chpi", "generated/mne.chpi.get_active_chpi", "generated/mne.chpi.get_chpi_info", "generated/mne.chpi.head_pos_to_trans_rot_t", "generated/mne.chpi.read_head_pos", "generated/mne.chpi.write_head_pos", "generated/mne.combine_evoked", "generated/mne.compute_covariance", "generated/mne.compute_proj_epochs", "generated/mne.compute_proj_evoked", "generated/mne.compute_proj_raw", "generated/mne.compute_rank", "generated/mne.compute_raw_covariance", "generated/mne.compute_source_morph", "generated/mne.concatenate_epochs", "generated/mne.concatenate_events", "generated/mne.concatenate_raws", "generated/mne.convert_forward_solution", "generated/mne.coreg.Coregistration", "generated/mne.coreg.estimate_head_mri_t", "generated/mne.coreg.get_mni_fiducials", "generated/mne.count_annotations", "generated/mne.count_events", "generated/mne.cov.compute_whitener", "generated/mne.cov.prepare_noise_cov", "generated/mne.cov.regularize", "generated/mne.create_default_subject", "generated/mne.create_info", "generated/mne.cuda.get_cuda_memory", "generated/mne.cuda.init_cuda", "generated/mne.cuda.set_cuda_device", "generated/mne.datasets.brainstorm.bst_auditory.data_path", "generated/mne.datasets.brainstorm.bst_raw.data_path", "generated/mne.datasets.brainstorm.bst_resting.data_path", "generated/mne.datasets.eegbci.load_data", "generated/mne.datasets.eegbci.standardize", "generated/mne.datasets.epilepsy_ecog.data_path", "generated/mne.datasets.erp_core.data_path", "generated/mne.datasets.eyelink.data_path", "generated/mne.datasets.fetch_aparc_sub_parcellation", "generated/mne.datasets.fetch_dataset", "generated/mne.datasets.fetch_fsaverage", "generated/mne.datasets.fetch_hcp_mmp_parcellation", "generated/mne.datasets.fetch_infant_template", "generated/mne.datasets.fetch_phantom", "generated/mne.datasets.fnirs_motor.data_path", "generated/mne.datasets.has_dataset", "generated/mne.datasets.hf_sef.data_path", "generated/mne.datasets.kiloword.data_path", "generated/mne.datasets.limo.load_data", "generated/mne.datasets.misc.data_path", "generated/mne.datasets.mtrf.data_path", "generated/mne.datasets.multimodal.data_path", "generated/mne.datasets.opm.data_path", "generated/mne.datasets.phantom_4dbti.data_path", "generated/mne.datasets.phantom_kernel.data_path", "generated/mne.datasets.phantom_kit.data_path", "generated/mne.datasets.refmeg_noise.data_path", "generated/mne.datasets.sample.data_path", "generated/mne.datasets.sleep_physionet.age.fetch_data", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data", "generated/mne.datasets.somato.data_path", "generated/mne.datasets.spm_face.data_path", "generated/mne.datasets.ssvep.data_path", "generated/mne.datasets.ucl_opm_auditory.data_path", "generated/mne.datasets.visual_92_categories.data_path", "generated/mne.decimate_surface", "generated/mne.decoding.CSP", "generated/mne.decoding.EMS", "generated/mne.decoding.FilterEstimator", "generated/mne.decoding.GeneralizingEstimator", "generated/mne.decoding.LinearModel", "generated/mne.decoding.PSDEstimator", "generated/mne.decoding.ReceptiveField", "generated/mne.decoding.SPoC", "generated/mne.decoding.SSD", "generated/mne.decoding.Scaler", "generated/mne.decoding.SlidingEstimator", "generated/mne.decoding.TemporalFilter", "generated/mne.decoding.TimeDelayingRidge", "generated/mne.decoding.TimeFrequency", "generated/mne.decoding.UnsupervisedSpatialFilter", "generated/mne.decoding.Vectorizer", "generated/mne.decoding.compute_ems", "generated/mne.decoding.cross_val_multiscore", "generated/mne.decoding.get_coef", "generated/mne.dig_mri_distances", "generated/mne.dipole.get_phantom_dipoles", "generated/mne.epochs.average_movements", "generated/mne.epochs.combine_event_ids", "generated/mne.epochs.equalize_epoch_counts", "generated/mne.epochs.make_metadata", "generated/mne.equalize_channels", "generated/mne.event.define_target_events", "generated/mne.event.match_event_names", "generated/mne.event.shift_time_events", "generated/mne.events_from_annotations", "generated/mne.export.export_epochs", "generated/mne.export.export_evokeds", "generated/mne.export.export_evokeds_mff", "generated/mne.export.export_raw", "generated/mne.extract_label_time_course", "generated/mne.filter.construct_iir_filter", "generated/mne.filter.create_filter", "generated/mne.filter.estimate_ringing_samples", "generated/mne.filter.filter_data", "generated/mne.filter.notch_filter", "generated/mne.filter.resample", "generated/mne.find_events", "generated/mne.find_stim_steps", "generated/mne.fit_dipole", "generated/mne.forward.compute_depth_prior", "generated/mne.forward.compute_orient_prior", "generated/mne.forward.restrict_forward_to_label", "generated/mne.forward.restrict_forward_to_stc", "generated/mne.get_config", "generated/mne.get_config_path", "generated/mne.get_head_surf", "generated/mne.get_meg_helmet_surf", "generated/mne.get_montage_volume_labels", "generated/mne.get_volume_labels_from_aseg", "generated/mne.get_volume_labels_from_src", "generated/mne.grade_to_tris", "generated/mne.grade_to_vertices", "generated/mne.grand_average", "generated/mne.grow_labels", "generated/mne.gui.coregistration", "generated/mne.head_to_mni", "generated/mne.head_to_mri", "generated/mne.inverse_sparse.gamma_map", "generated/mne.inverse_sparse.make_stc_from_dipoles", "generated/mne.inverse_sparse.mixed_norm", "generated/mne.inverse_sparse.tf_mixed_norm", "generated/mne.io.BaseRaw", "generated/mne.io.Raw", "generated/mne.io.RawArray", "generated/mne.io.anonymize_info", "generated/mne.io.get_channel_type_constants", "generated/mne.io.kit.read_mrk", "generated/mne.io.read_fiducials", "generated/mne.io.read_info", "generated/mne.io.read_raw", "generated/mne.io.read_raw_artemis123", "generated/mne.io.read_raw_bdf", "generated/mne.io.read_raw_boxy", "generated/mne.io.read_raw_brainvision", "generated/mne.io.read_raw_bti", "generated/mne.io.read_raw_cnt", "generated/mne.io.read_raw_ctf", "generated/mne.io.read_raw_curry", "generated/mne.io.read_raw_edf", "generated/mne.io.read_raw_eeglab", "generated/mne.io.read_raw_egi", "generated/mne.io.read_raw_eximia", "generated/mne.io.read_raw_eyelink", "generated/mne.io.read_raw_fieldtrip", "generated/mne.io.read_raw_fif", "generated/mne.io.read_raw_fil", "generated/mne.io.read_raw_gdf", "generated/mne.io.read_raw_hitachi", "generated/mne.io.read_raw_kit", "generated/mne.io.read_raw_nedf", "generated/mne.io.read_raw_nicolet", "generated/mne.io.read_raw_nihon", "generated/mne.io.read_raw_nirx", "generated/mne.io.read_raw_nsx", "generated/mne.io.read_raw_persyst", "generated/mne.io.read_raw_snirf", "generated/mne.io.show_fiff", "generated/mne.io.write_fiducials", "generated/mne.io.write_info", "generated/mne.label.select_sources", "generated/mne.label_sign_flip", "generated/mne.labels_to_stc", "generated/mne.make_ad_hoc_cov", "generated/mne.make_bem_model", "generated/mne.make_bem_solution", "generated/mne.make_field_map", "generated/mne.make_fixed_length_epochs", "generated/mne.make_fixed_length_events", "generated/mne.make_forward_dipole", "generated/mne.make_forward_solution", "generated/mne.make_sphere_model", "generated/mne.match_channel_orders", "generated/mne.merge_events", "generated/mne.minimum_norm.InverseOperator", "generated/mne.minimum_norm.apply_inverse", "generated/mne.minimum_norm.apply_inverse_cov", "generated/mne.minimum_norm.apply_inverse_epochs", "generated/mne.minimum_norm.apply_inverse_raw", "generated/mne.minimum_norm.apply_inverse_tfr_epochs", "generated/mne.minimum_norm.compute_rank_inverse", "generated/mne.minimum_norm.compute_source_psd", "generated/mne.minimum_norm.compute_source_psd_epochs", "generated/mne.minimum_norm.estimate_snr", "generated/mne.minimum_norm.get_cross_talk", "generated/mne.minimum_norm.get_point_spread", "generated/mne.minimum_norm.make_inverse_operator", "generated/mne.minimum_norm.make_inverse_resolution_matrix", "generated/mne.minimum_norm.prepare_inverse_operator", "generated/mne.minimum_norm.read_inverse_operator", "generated/mne.minimum_norm.resolution_metrics", "generated/mne.minimum_norm.source_band_induced_power", "generated/mne.minimum_norm.source_induced_power", "generated/mne.minimum_norm.write_inverse_operator", "generated/mne.morph_labels", "generated/mne.morph_source_spaces", "generated/mne.open_docs", "generated/mne.open_report", "generated/mne.parse_config", "generated/mne.pick_channels", "generated/mne.pick_channels_cov", "generated/mne.pick_channels_forward", "generated/mne.pick_channels_regexp", "generated/mne.pick_events", "generated/mne.pick_info", "generated/mne.pick_types", "generated/mne.pick_types_forward", "generated/mne.preprocessing.EOGRegression", "generated/mne.preprocessing.ICA", "generated/mne.preprocessing.Xdawn", "generated/mne.preprocessing.annotate_amplitude", "generated/mne.preprocessing.annotate_break", "generated/mne.preprocessing.annotate_movement", "generated/mne.preprocessing.annotate_muscle_zscore", "generated/mne.preprocessing.annotate_nan", "generated/mne.preprocessing.compute_average_dev_head_t", "generated/mne.preprocessing.compute_bridged_electrodes", "generated/mne.preprocessing.compute_current_source_density", "generated/mne.preprocessing.compute_fine_calibration", "generated/mne.preprocessing.compute_maxwell_basis", "generated/mne.preprocessing.compute_proj_ecg", "generated/mne.preprocessing.compute_proj_eog", "generated/mne.preprocessing.compute_proj_hfc", "generated/mne.preprocessing.corrmap", "generated/mne.preprocessing.cortical_signal_suppression", "generated/mne.preprocessing.create_ecg_epochs", "generated/mne.preprocessing.create_eog_epochs", "generated/mne.preprocessing.equalize_bads", "generated/mne.preprocessing.eyetracking.Calibration", "generated/mne.preprocessing.eyetracking.interpolate_blinks", "generated/mne.preprocessing.eyetracking.read_eyelink_calibration", "generated/mne.preprocessing.eyetracking.set_channel_types_eyetrack", "generated/mne.preprocessing.find_bad_channels_maxwell", "generated/mne.preprocessing.find_ecg_events", "generated/mne.preprocessing.find_eog_events", "generated/mne.preprocessing.fix_stim_artifact", "generated/mne.preprocessing.ica_find_ecg_events", "generated/mne.preprocessing.ica_find_eog_events", "generated/mne.preprocessing.ieeg.make_montage_volume", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain", "generated/mne.preprocessing.ieeg.warp_montage", "generated/mne.preprocessing.infomax", "generated/mne.preprocessing.interpolate_bridged_electrodes", "generated/mne.preprocessing.maxwell_filter", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom", "generated/mne.preprocessing.nirs.beer_lambert_law", "generated/mne.preprocessing.nirs.optical_density", "generated/mne.preprocessing.nirs.scalp_coupling_index", "generated/mne.preprocessing.nirs.short_channels", "generated/mne.preprocessing.nirs.source_detector_distances", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair", "generated/mne.preprocessing.oversampled_temporal_projection", "generated/mne.preprocessing.peak_finder", "generated/mne.preprocessing.read_eog_regression", "generated/mne.preprocessing.read_fine_calibration", "generated/mne.preprocessing.read_ica", "generated/mne.preprocessing.read_ica_eeglab", "generated/mne.preprocessing.realign_raw", "generated/mne.preprocessing.regress_artifact", "generated/mne.preprocessing.write_fine_calibration", "generated/mne.random_parcellation", "generated/mne.read_annotations", "generated/mne.read_bem_solution", "generated/mne.read_bem_surfaces", "generated/mne.read_cov", "generated/mne.read_dipole", "generated/mne.read_epochs", "generated/mne.read_epochs_eeglab", "generated/mne.read_epochs_fieldtrip", "generated/mne.read_epochs_kit", "generated/mne.read_events", "generated/mne.read_evoked_besa", "generated/mne.read_evoked_fieldtrip", "generated/mne.read_evokeds", "generated/mne.read_evokeds_mff", "generated/mne.read_forward_solution", "generated/mne.read_freesurfer_lut", "generated/mne.read_label", "generated/mne.read_labels_from_annot", "generated/mne.read_lta", "generated/mne.read_morph_map", "generated/mne.read_proj", "generated/mne.read_reject_parameters", "generated/mne.read_source_estimate", "generated/mne.read_source_morph", "generated/mne.read_source_spaces", "generated/mne.read_surface", "generated/mne.read_talxfm", "generated/mne.read_trans", "generated/mne.read_tri", "generated/mne.read_vectorview_selection", "generated/mne.rename_channels", "generated/mne.scale_bem", "generated/mne.scale_labels", "generated/mne.scale_mri", "generated/mne.scale_source_space", "generated/mne.sensitivity_map", "generated/mne.set_bipolar_reference", "generated/mne.set_cache_dir", "generated/mne.set_config", "generated/mne.set_eeg_reference", "generated/mne.set_log_file", "generated/mne.set_log_level", "generated/mne.set_memmap_min_size", "generated/mne.setup_source_space", "generated/mne.setup_volume_source_space", "generated/mne.simulation.SourceSimulator", "generated/mne.simulation.add_chpi", "generated/mne.simulation.add_ecg", "generated/mne.simulation.add_eog", "generated/mne.simulation.add_noise", "generated/mne.simulation.metrics.cosine_score", "generated/mne.simulation.metrics.f1_score", "generated/mne.simulation.metrics.peak_position_error", "generated/mne.simulation.metrics.precision_score", "generated/mne.simulation.metrics.recall_score", "generated/mne.simulation.metrics.region_localization_error", "generated/mne.simulation.metrics.roc_auc_score", "generated/mne.simulation.metrics.spatial_deviation_error", "generated/mne.simulation.select_source_in_label", "generated/mne.simulation.simulate_evoked", "generated/mne.simulation.simulate_raw", "generated/mne.simulation.simulate_sparse_stc", "generated/mne.simulation.simulate_stc", "generated/mne.source_space.compute_distance_to_sensors", "generated/mne.source_space.get_decimated_surfaces", "generated/mne.spatial_dist_adjacency", "generated/mne.spatial_inter_hemi_adjacency", "generated/mne.spatial_src_adjacency", "generated/mne.spatial_tris_adjacency", "generated/mne.spatio_temporal_dist_adjacency", "generated/mne.spatio_temporal_src_adjacency", "generated/mne.spatio_temporal_tris_adjacency", "generated/mne.split_label", "generated/mne.stats.bonferroni_correction", "generated/mne.stats.bootstrap_confidence_interval", "generated/mne.stats.combine_adjacency", "generated/mne.stats.f_mway_rm", "generated/mne.stats.f_oneway", "generated/mne.stats.f_threshold_mway_rm", "generated/mne.stats.fdr_correction", "generated/mne.stats.linear_regression", "generated/mne.stats.linear_regression_raw", "generated/mne.stats.permutation_cluster_1samp_test", "generated/mne.stats.permutation_cluster_test", "generated/mne.stats.permutation_t_test", "generated/mne.stats.spatio_temporal_cluster_1samp_test", "generated/mne.stats.spatio_temporal_cluster_test", "generated/mne.stats.summarize_clusters_stc", "generated/mne.stats.ttest_1samp_no_p", "generated/mne.stats.ttest_ind_no_p", "generated/mne.stc_near_sensors", "generated/mne.stc_to_label", "generated/mne.surface.complete_surface_info", "generated/mne.surface.read_curvature", "generated/mne.sys_info", "generated/mne.time_frequency.AverageTFR", "generated/mne.time_frequency.CrossSpectralDensity", "generated/mne.time_frequency.EpochsSpectrum", "generated/mne.time_frequency.EpochsSpectrumArray", "generated/mne.time_frequency.EpochsTFR", "generated/mne.time_frequency.Spectrum", "generated/mne.time_frequency.SpectrumArray", "generated/mne.time_frequency.csd_array_fourier", "generated/mne.time_frequency.csd_array_morlet", "generated/mne.time_frequency.csd_array_multitaper", "generated/mne.time_frequency.csd_fourier", "generated/mne.time_frequency.csd_morlet", "generated/mne.time_frequency.csd_multitaper", "generated/mne.time_frequency.csd_tfr", "generated/mne.time_frequency.dpss_windows", "generated/mne.time_frequency.fit_iir_model_raw", "generated/mne.time_frequency.fwhm", "generated/mne.time_frequency.istft", "generated/mne.time_frequency.morlet", "generated/mne.time_frequency.pick_channels_csd", "generated/mne.time_frequency.psd_array_multitaper", "generated/mne.time_frequency.psd_array_welch", "generated/mne.time_frequency.read_csd", "generated/mne.time_frequency.read_spectrum", "generated/mne.time_frequency.read_tfrs", "generated/mne.time_frequency.stft", "generated/mne.time_frequency.stftfreq", "generated/mne.time_frequency.tfr.cwt", "generated/mne.time_frequency.tfr.morlet", "generated/mne.time_frequency.tfr_array_morlet", "generated/mne.time_frequency.tfr_array_multitaper", "generated/mne.time_frequency.tfr_array_stockwell", "generated/mne.time_frequency.tfr_morlet", "generated/mne.time_frequency.tfr_multitaper", "generated/mne.time_frequency.tfr_stockwell", "generated/mne.time_frequency.write_tfrs", "generated/mne.transform_surface_to", "generated/mne.transforms.Transform", "generated/mne.transforms.apply_volume_registration", "generated/mne.transforms.apply_volume_registration_points", "generated/mne.transforms.compute_volume_registration", "generated/mne.transforms.quat_to_rot", "generated/mne.transforms.read_ras_mni_t", "generated/mne.transforms.rot_to_quat", "generated/mne.use_coil_def", "generated/mne.use_log_level", "generated/mne.utils.deprecated", "generated/mne.utils.warn", "generated/mne.verbose", "generated/mne.vertex_to_mni", "generated/mne.viz.Brain", "generated/mne.viz.ClickableImage", "generated/mne.viz.EvokedField", "generated/mne.viz.Figure3D", "generated/mne.viz.add_background_image", "generated/mne.viz.centers_to_edges", "generated/mne.viz.circular_layout", "generated/mne.viz.close_3d_figure", "generated/mne.viz.close_all_3d_figures", "generated/mne.viz.compare_fiff", "generated/mne.viz.create_3d_figure", "generated/mne.viz.eyetracking.plot_gaze", "generated/mne.viz.get_3d_backend", "generated/mne.viz.get_brain_class", "generated/mne.viz.get_browser_backend", "generated/mne.viz.iter_topography", "generated/mne.viz.link_brains", "generated/mne.viz.mne_analyze_colormap", "generated/mne.viz.plot_alignment", "generated/mne.viz.plot_arrowmap", "generated/mne.viz.plot_bem", "generated/mne.viz.plot_brain_colorbar", "generated/mne.viz.plot_bridged_electrodes", "generated/mne.viz.plot_ch_adjacency", "generated/mne.viz.plot_channel_labels_circle", "generated/mne.viz.plot_chpi_snr", "generated/mne.viz.plot_compare_evokeds", "generated/mne.viz.plot_cov", "generated/mne.viz.plot_csd", "generated/mne.viz.plot_dipole_amplitudes", "generated/mne.viz.plot_dipole_locations", "generated/mne.viz.plot_drop_log", "generated/mne.viz.plot_epochs", "generated/mne.viz.plot_epochs_image", "generated/mne.viz.plot_epochs_psd_topomap", "generated/mne.viz.plot_events", "generated/mne.viz.plot_evoked", "generated/mne.viz.plot_evoked_field", "generated/mne.viz.plot_evoked_image", "generated/mne.viz.plot_evoked_joint", "generated/mne.viz.plot_evoked_topo", "generated/mne.viz.plot_evoked_topomap", "generated/mne.viz.plot_evoked_white", "generated/mne.viz.plot_filter", "generated/mne.viz.plot_head_positions", "generated/mne.viz.plot_ica_components", "generated/mne.viz.plot_ica_overlay", "generated/mne.viz.plot_ica_properties", "generated/mne.viz.plot_ica_scores", "generated/mne.viz.plot_ica_sources", "generated/mne.viz.plot_ideal_filter", "generated/mne.viz.plot_layout", "generated/mne.viz.plot_montage", "generated/mne.viz.plot_projs_joint", "generated/mne.viz.plot_projs_topomap", "generated/mne.viz.plot_raw", "generated/mne.viz.plot_raw_psd", "generated/mne.viz.plot_regression_weights", "generated/mne.viz.plot_sensors", "generated/mne.viz.plot_snr_estimate", "generated/mne.viz.plot_source_estimates", "generated/mne.viz.plot_sparse_source_estimates", "generated/mne.viz.plot_tfr_topomap", "generated/mne.viz.plot_topo_image_epochs", "generated/mne.viz.plot_topomap", "generated/mne.viz.plot_vector_source_estimates", "generated/mne.viz.plot_volume_source_estimates", "generated/mne.viz.set_3d_backend", "generated/mne.viz.set_3d_options", "generated/mne.viz.set_3d_title", "generated/mne.viz.set_3d_view", "generated/mne.viz.set_browser_backend", "generated/mne.viz.snapshot_brain_montage", "generated/mne.viz.ui_events.ColormapRange", "generated/mne.viz.ui_events.Contours", "generated/mne.viz.ui_events.FigureClosing", "generated/mne.viz.ui_events.PlaybackSpeed", "generated/mne.viz.ui_events.TimeChange", "generated/mne.viz.ui_events.UIEvent", "generated/mne.viz.ui_events.VertexSelect", "generated/mne.viz.ui_events.disable_ui_events", "generated/mne.viz.ui_events.link", "generated/mne.viz.ui_events.publish", "generated/mne.viz.ui_events.subscribe", "generated/mne.viz.ui_events.unlink", "generated/mne.viz.ui_events.unsubscribe", "generated/mne.viz.use_3d_backend", "generated/mne.viz.use_browser_backend", "generated/mne.what", "generated/mne.write_bem_solution", "generated/mne.write_bem_surfaces", "generated/mne.write_cov", "generated/mne.write_events", "generated/mne.write_evokeds", "generated/mne.write_forward_solution", "generated/mne.write_head_bem", "generated/mne.write_label", "generated/mne.write_labels_to_annot", "generated/mne.write_proj", "generated/mne.write_source_spaces", "generated/mne.write_surface", "generated/mne.write_trans", "help/faq", "help/index", "help/learn_python", "help/migrating", "index", "install/advanced", "install/check_installation", "install/freesurfer", "install/index", "install/installers", "install/manual_install", "install/manual_install_python", "install/mne_c", "install/mne_tools_suite", "install/updating", "martinos", "mne_cpp", "old_versions/index", "overview/people", "sg_api_usage", "sg_execution_times"], "filenames": ["api/connectivity.rst", "api/covariance.rst", "api/creating_from_arrays.rst", "api/datasets.rst", "api/decoding.rst", "api/events.rst", "api/export.rst", "api/file_io.rst", "api/forward.rst", "api/inverse.rst", "api/logging.rst", "api/most_used_classes.rst", "api/mri.rst", "api/preprocessing.rst", "api/python_reference.rst", "api/reading_raw_data.rst", "api/realtime.rst", "api/report.rst", "api/sensor_space.rst", "api/simulation.rst", "api/source_space.rst", "api/statistics.rst", "api/time_frequency.rst", "api/visualization.rst", "auto_examples/connectivity/index.rst", "auto_examples/connectivity/sg_execution_times.rst", "auto_examples/datasets/brainstorm_data.rst", "auto_examples/datasets/hf_sef_data.rst", "auto_examples/datasets/index.rst", "auto_examples/datasets/kernel_phantom.rst", "auto_examples/datasets/limo_data.rst", "auto_examples/datasets/opm_data.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/datasets/spm_faces_dataset_sgskip.rst", "auto_examples/decoding/decoding_csp_eeg.rst", "auto_examples/decoding/decoding_csp_timefreq.rst", "auto_examples/decoding/decoding_rsa_sgskip.rst", "auto_examples/decoding/decoding_spatio_temporal_source.rst", "auto_examples/decoding/decoding_spoc_CMC.rst", "auto_examples/decoding/decoding_time_generalization_conditions.rst", "auto_examples/decoding/decoding_unsupervised_spatial_filter.rst", "auto_examples/decoding/decoding_xdawn_eeg.rst", "auto_examples/decoding/ems_filtering.rst", "auto_examples/decoding/index.rst", "auto_examples/decoding/linear_model_patterns.rst", "auto_examples/decoding/receptive_field_mtrf.rst", "auto_examples/decoding/sg_execution_times.rst", "auto_examples/decoding/ssd_spatial_filters.rst", "auto_examples/forward/forward_sensitivity_maps.rst", "auto_examples/forward/index.rst", "auto_examples/forward/left_cerebellum_volume_source.rst", "auto_examples/forward/sg_execution_times.rst", "auto_examples/forward/source_space_morphing.rst", "auto_examples/index.rst", "auto_examples/inverse/compute_mne_inverse_epochs_in_label.rst", "auto_examples/inverse/compute_mne_inverse_raw_in_label.rst", "auto_examples/inverse/compute_mne_inverse_volume.rst", "auto_examples/inverse/custom_inverse_solver.rst", "auto_examples/inverse/dics_epochs.rst", "auto_examples/inverse/dics_source_power.rst", "auto_examples/inverse/evoked_ers_source_power.rst", "auto_examples/inverse/gamma_map_inverse.rst", "auto_examples/inverse/index.rst", "auto_examples/inverse/label_activation_from_stc.rst", "auto_examples/inverse/label_from_stc.rst", "auto_examples/inverse/label_source_activations.rst", "auto_examples/inverse/mixed_norm_inverse.rst", "auto_examples/inverse/mixed_source_space_inverse.rst", "auto_examples/inverse/mne_cov_power.rst", "auto_examples/inverse/morph_surface_stc.rst", "auto_examples/inverse/morph_volume_stc.rst", "auto_examples/inverse/multi_dipole_model.rst", "auto_examples/inverse/multidict_reweighted_tfmxne.rst", "auto_examples/inverse/psf_ctf_label_leakage.rst", "auto_examples/inverse/psf_ctf_vertices.rst", "auto_examples/inverse/psf_ctf_vertices_lcmv.rst", "auto_examples/inverse/psf_volume.rst", "auto_examples/inverse/rap_music.rst", "auto_examples/inverse/read_inverse.rst", "auto_examples/inverse/read_stc.rst", "auto_examples/inverse/resolution_metrics.rst", "auto_examples/inverse/resolution_metrics_eegmeg.rst", "auto_examples/inverse/sg_execution_times.rst", "auto_examples/inverse/snr_estimate.rst", "auto_examples/inverse/source_space_snr.rst", "auto_examples/inverse/time_frequency_mixed_norm_inverse.rst", "auto_examples/inverse/trap_music.rst", "auto_examples/inverse/vector_mne_solution.rst", "auto_examples/io/elekta_epochs.rst", "auto_examples/io/index.rst", "auto_examples/io/read_neo_format.rst", "auto_examples/io/read_noise_covariance_matrix.rst", "auto_examples/io/read_xdf.rst", "auto_examples/io/sg_execution_times.rst", "auto_examples/preprocessing/contralateral_referencing.rst", "auto_examples/preprocessing/css.rst", "auto_examples/preprocessing/define_target_events.rst", "auto_examples/preprocessing/eeg_bridging.rst", "auto_examples/preprocessing/eeg_csd.rst", "auto_examples/preprocessing/eog_artifact_histogram.rst", "auto_examples/preprocessing/eog_regression.rst", "auto_examples/preprocessing/find_ref_artifacts.rst", "auto_examples/preprocessing/fnirs_artifact_removal.rst", "auto_examples/preprocessing/ica_comparison.rst", "auto_examples/preprocessing/index.rst", "auto_examples/preprocessing/interpolate_bad_channels.rst", "auto_examples/preprocessing/movement_compensation.rst", "auto_examples/preprocessing/movement_detection.rst", "auto_examples/preprocessing/muscle_detection.rst", "auto_examples/preprocessing/muscle_ica.rst", "auto_examples/preprocessing/otp.rst", "auto_examples/preprocessing/sg_execution_times.rst", "auto_examples/preprocessing/shift_evoked.rst", "auto_examples/preprocessing/virtual_evoked.rst", "auto_examples/preprocessing/xdawn_denoising.rst", "auto_examples/sg_execution_times.rst", "auto_examples/simulation/index.rst", "auto_examples/simulation/plot_stc_metrics.rst", "auto_examples/simulation/sg_execution_times.rst", "auto_examples/simulation/simulate_evoked_data.rst", "auto_examples/simulation/simulate_raw_data.rst", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy.rst", "auto_examples/simulation/source_simulator.rst", "auto_examples/stats/cluster_stats_evoked.rst", "auto_examples/stats/fdr_stats_evoked.rst", "auto_examples/stats/index.rst", "auto_examples/stats/linear_regression_raw.rst", "auto_examples/stats/sensor_permutation_test.rst", "auto_examples/stats/sensor_regression.rst", "auto_examples/stats/sg_execution_times.rst", "auto_examples/time_frequency/compute_csd.rst", "auto_examples/time_frequency/compute_source_psd_epochs.rst", "auto_examples/time_frequency/index.rst", "auto_examples/time_frequency/sg_execution_times.rst", "auto_examples/time_frequency/source_label_time_frequency.rst", "auto_examples/time_frequency/source_power_spectrum.rst", "auto_examples/time_frequency/source_power_spectrum_opm.rst", "auto_examples/time_frequency/source_space_time_frequency.rst", "auto_examples/time_frequency/temporal_whitening.rst", "auto_examples/time_frequency/time_frequency_erds.rst", "auto_examples/time_frequency/time_frequency_global_field_power.rst", "auto_examples/time_frequency/time_frequency_simulated.rst", "auto_examples/visualization/3d_to_2d.rst", "auto_examples/visualization/brain.rst", "auto_examples/visualization/channel_epochs_image.rst", "auto_examples/visualization/eeg_on_scalp.rst", "auto_examples/visualization/evoked_arrowmap.rst", "auto_examples/visualization/evoked_topomap.rst", "auto_examples/visualization/evoked_whitening.rst", "auto_examples/visualization/eyetracking_plot_heatmap.rst", "auto_examples/visualization/index.rst", "auto_examples/visualization/meg_sensors.rst", "auto_examples/visualization/mne_helmet.rst", "auto_examples/visualization/montage_sgskip.rst", "auto_examples/visualization/parcellation.rst", "auto_examples/visualization/roi_erpimage_by_rt.rst", "auto_examples/visualization/sg_execution_times.rst", "auto_examples/visualization/ssp_projs_sensitivity_map.rst", "auto_examples/visualization/topo_compare_conditions.rst", "auto_examples/visualization/topo_customized.rst", "auto_examples/visualization/xhemi.rst", "auto_tutorials/clinical/20_seeg.rst", "auto_tutorials/clinical/30_ecog.rst", "auto_tutorials/clinical/60_sleep.rst", "auto_tutorials/clinical/index.rst", "auto_tutorials/clinical/sg_execution_times.rst", "auto_tutorials/epochs/10_epochs_overview.rst", "auto_tutorials/epochs/15_baseline_regression.rst", "auto_tutorials/epochs/20_visualize_epochs.rst", "auto_tutorials/epochs/30_epochs_metadata.rst", "auto_tutorials/epochs/40_autogenerate_metadata.rst", "auto_tutorials/epochs/50_epochs_to_data_frame.rst", "auto_tutorials/epochs/60_make_fixed_length_epochs.rst", "auto_tutorials/epochs/index.rst", "auto_tutorials/epochs/sg_execution_times.rst", "auto_tutorials/evoked/10_evoked_overview.rst", "auto_tutorials/evoked/20_visualize_evoked.rst", "auto_tutorials/evoked/30_eeg_erp.rst", "auto_tutorials/evoked/40_whitened.rst", "auto_tutorials/evoked/index.rst", "auto_tutorials/evoked/sg_execution_times.rst", "auto_tutorials/forward/10_background_freesurfer.rst", "auto_tutorials/forward/20_source_alignment.rst", "auto_tutorials/forward/25_automated_coreg.rst", "auto_tutorials/forward/30_forward.rst", "auto_tutorials/forward/35_eeg_no_mri.rst", "auto_tutorials/forward/50_background_freesurfer_mne.rst", "auto_tutorials/forward/80_fix_bem_in_blender.rst", "auto_tutorials/forward/90_compute_covariance.rst", "auto_tutorials/forward/index.rst", "auto_tutorials/forward/sg_execution_times.rst", "auto_tutorials/index.rst", "auto_tutorials/intro/10_overview.rst", "auto_tutorials/intro/15_inplace.rst", "auto_tutorials/intro/20_events_from_raw.rst", "auto_tutorials/intro/30_info.rst", "auto_tutorials/intro/40_sensor_locations.rst", "auto_tutorials/intro/50_configure_mne.rst", "auto_tutorials/intro/70_report.rst", "auto_tutorials/intro/index.rst", "auto_tutorials/intro/sg_execution_times.rst", "auto_tutorials/inverse/10_stc_class.rst", "auto_tutorials/inverse/20_dipole_fit.rst", "auto_tutorials/inverse/30_mne_dspm_loreta.rst", "auto_tutorials/inverse/35_dipole_orientations.rst", "auto_tutorials/inverse/40_mne_fixed_free.rst", "auto_tutorials/inverse/50_beamformer_lcmv.rst", "auto_tutorials/inverse/60_visualize_stc.rst", "auto_tutorials/inverse/70_eeg_mri_coords.rst", "auto_tutorials/inverse/80_brainstorm_phantom_elekta.rst", "auto_tutorials/inverse/85_brainstorm_phantom_ctf.rst", "auto_tutorials/inverse/90_phantom_4DBTi.rst", "auto_tutorials/inverse/95_phantom_KIT.rst", "auto_tutorials/inverse/index.rst", "auto_tutorials/inverse/sg_execution_times.rst", "auto_tutorials/io/10_reading_meg_data.rst", "auto_tutorials/io/20_reading_eeg_data.rst", "auto_tutorials/io/30_reading_fnirs_data.rst", "auto_tutorials/io/60_ctf_bst_auditory.rst", "auto_tutorials/io/70_reading_eyetracking_data.rst", "auto_tutorials/io/index.rst", "auto_tutorials/io/sg_execution_times.rst", "auto_tutorials/machine-learning/30_strf.rst", "auto_tutorials/machine-learning/50_decoding.rst", "auto_tutorials/machine-learning/index.rst", "auto_tutorials/machine-learning/sg_execution_times.rst", "auto_tutorials/preprocessing/10_preprocessing_overview.rst", "auto_tutorials/preprocessing/15_handling_bad_channels.rst", "auto_tutorials/preprocessing/20_rejecting_bad_data.rst", "auto_tutorials/preprocessing/25_background_filtering.rst", "auto_tutorials/preprocessing/30_filtering_resampling.rst", "auto_tutorials/preprocessing/35_artifact_correction_regression.rst", "auto_tutorials/preprocessing/40_artifact_correction_ica.rst", "auto_tutorials/preprocessing/45_projectors_background.rst", "auto_tutorials/preprocessing/50_artifact_correction_ssp.rst", "auto_tutorials/preprocessing/55_setting_eeg_reference.rst", "auto_tutorials/preprocessing/59_head_positions.rst", "auto_tutorials/preprocessing/60_maxwell_filtering_sss.rst", "auto_tutorials/preprocessing/70_fnirs_processing.rst", "auto_tutorials/preprocessing/80_opm_processing.rst", "auto_tutorials/preprocessing/90_eyetracking_data.rst", "auto_tutorials/preprocessing/index.rst", "auto_tutorials/preprocessing/sg_execution_times.rst", "auto_tutorials/raw/10_raw_overview.rst", "auto_tutorials/raw/20_event_arrays.rst", "auto_tutorials/raw/30_annotate_raw.rst", "auto_tutorials/raw/40_visualize_raw.rst", "auto_tutorials/raw/index.rst", "auto_tutorials/raw/sg_execution_times.rst", "auto_tutorials/sg_execution_times.rst", "auto_tutorials/simulation/10_array_objs.rst", "auto_tutorials/simulation/70_point_spread.rst", "auto_tutorials/simulation/80_dics.rst", "auto_tutorials/simulation/index.rst", "auto_tutorials/simulation/sg_execution_times.rst", "auto_tutorials/stats-sensor-space/10_background_stats.rst", "auto_tutorials/stats-sensor-space/20_erp_stats.rst", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq.rst", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq.rst", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq.rst", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-sensor-space/index.rst", "auto_tutorials/stats-sensor-space/sg_execution_times.rst", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal.rst", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal.rst", "auto_tutorials/stats-source-space/index.rst", "auto_tutorials/stats-source-space/sg_execution_times.rst", "auto_tutorials/time-freq/10_spectrum_class.rst", "auto_tutorials/time-freq/20_sensors_time_frequency.rst", "auto_tutorials/time-freq/50_ssvep.rst", "auto_tutorials/time-freq/index.rst", "auto_tutorials/time-freq/sg_execution_times.rst", "auto_tutorials/visualization/10_publication_figure.rst", "auto_tutorials/visualization/20_ui_events.rst", "auto_tutorials/visualization/index.rst", "auto_tutorials/visualization/sg_execution_times.rst", "bibliography.rst", "changes/devel.rst", "changes/v0.1.rst", "changes/v0.10.rst", "changes/v0.11.rst", "changes/v0.12.rst", "changes/v0.13.rst", "changes/v0.14.rst", "changes/v0.15.rst", "changes/v0.16.rst", "changes/v0.17.rst", "changes/v0.18.rst", "changes/v0.19.rst", "changes/v0.2.rst", "changes/v0.20.rst", "changes/v0.21.rst", "changes/v0.22.rst", "changes/v0.23.rst", "changes/v0.24.rst", "changes/v0.3.rst", "changes/v0.4.rst", "changes/v0.5.rst", "changes/v0.6.rst", "changes/v0.7.rst", "changes/v0.8.rst", "changes/v0.9.rst", "changes/v1.0.rst", "changes/v1.1.rst", "changes/v1.2.rst", "changes/v1.3.rst", "changes/v1.4.rst", "changes/v1.5.rst", "development/contributing.rst", "development/governance.rst", "development/index.rst", "development/roadmap.rst", "development/whats_new.rst", "documentation/cite.rst", "documentation/cited.rst", "documentation/cookbook.rst", "documentation/datasets.rst", "documentation/design_philosophy.rst", "documentation/glossary.rst", "documentation/implementation.rst", "documentation/index.rst", "funding.rst", "generated/commands.rst", "generated/mne.AcqParserFIF.rst", "generated/mne.Annotations.rst", "generated/mne.BaseEpochs.rst", "generated/mne.BiHemiLabel.rst", "generated/mne.Covariance.rst", "generated/mne.Dipole.rst", "generated/mne.DipoleFixed.rst", "generated/mne.Epochs.rst", "generated/mne.EpochsArray.rst", "generated/mne.Evoked.rst", "generated/mne.EvokedArray.rst", "generated/mne.Forward.rst", "generated/mne.Info.rst", "generated/mne.Label.rst", "generated/mne.MixedSourceEstimate.rst", "generated/mne.MixedVectorSourceEstimate.rst", "generated/mne.Projection.rst", "generated/mne.Report.rst", "generated/mne.SourceEstimate.rst", "generated/mne.SourceMorph.rst", "generated/mne.SourceSpaces.rst", "generated/mne.VectorSourceEstimate.rst", "generated/mne.VolSourceEstimate.rst", "generated/mne.VolVectorSourceEstimate.rst", "generated/mne.add_reference_channels.rst", "generated/mne.add_source_space_distances.rst", "generated/mne.annotations_from_events.rst", "generated/mne.apply_forward.rst", "generated/mne.apply_forward_raw.rst", "generated/mne.average_forward_solutions.rst", "generated/mne.baseline.rescale.rst", "generated/mne.beamformer.Beamformer.rst", "generated/mne.beamformer.apply_dics.rst", "generated/mne.beamformer.apply_dics_csd.rst", "generated/mne.beamformer.apply_dics_epochs.rst", "generated/mne.beamformer.apply_dics_tfr_epochs.rst", "generated/mne.beamformer.apply_lcmv.rst", "generated/mne.beamformer.apply_lcmv_cov.rst", "generated/mne.beamformer.apply_lcmv_epochs.rst", "generated/mne.beamformer.apply_lcmv_raw.rst", "generated/mne.beamformer.make_dics.rst", "generated/mne.beamformer.make_lcmv.rst", "generated/mne.beamformer.make_lcmv_resolution_matrix.rst", "generated/mne.beamformer.rap_music.rst", "generated/mne.beamformer.read_beamformer.rst", "generated/mne.beamformer.trap_music.rst", "generated/mne.bem.ConductorModel.rst", "generated/mne.bem.convert_flash_mris.rst", "generated/mne.bem.distance_to_bem.rst", "generated/mne.bem.fit_sphere_to_headshape.rst", "generated/mne.bem.get_fitting_dig.rst", "generated/mne.bem.make_flash_bem.rst", "generated/mne.bem.make_scalp_surfaces.rst", "generated/mne.bem.make_watershed_bem.rst", "generated/mne.channel_indices_by_type.rst", "generated/mne.channel_type.rst", "generated/mne.channels.DigMontage.rst", "generated/mne.channels.Layout.rst", "generated/mne.channels.combine_channels.rst", "generated/mne.channels.compute_dev_head_t.rst", "generated/mne.channels.compute_native_head_t.rst", "generated/mne.channels.equalize_channels.rst", "generated/mne.channels.find_ch_adjacency.rst", "generated/mne.channels.find_layout.rst", "generated/mne.channels.fix_mag_coil_types.rst", "generated/mne.channels.generate_2d_layout.rst", "generated/mne.channels.get_builtin_ch_adjacencies.rst", "generated/mne.channels.get_builtin_montages.rst", "generated/mne.channels.make_1020_channel_selections.rst", "generated/mne.channels.make_dig_montage.rst", "generated/mne.channels.make_eeg_layout.rst", "generated/mne.channels.make_grid_layout.rst", "generated/mne.channels.make_standard_montage.rst", "generated/mne.channels.read_ch_adjacency.rst", "generated/mne.channels.read_custom_montage.rst", "generated/mne.channels.read_dig_captrak.rst", "generated/mne.channels.read_dig_dat.rst", "generated/mne.channels.read_dig_egi.rst", "generated/mne.channels.read_dig_fif.rst", "generated/mne.channels.read_dig_hpts.rst", "generated/mne.channels.read_dig_localite.rst", "generated/mne.channels.read_dig_polhemus_isotrak.rst", "generated/mne.channels.read_layout.rst", "generated/mne.channels.read_polhemus_fastscan.rst", "generated/mne.channels.rename_channels.rst", "generated/mne.channels.unify_bad_channels.rst", "generated/mne.chpi.compute_chpi_amplitudes.rst", "generated/mne.chpi.compute_chpi_locs.rst", "generated/mne.chpi.compute_chpi_snr.rst", "generated/mne.chpi.compute_head_pos.rst", "generated/mne.chpi.extract_chpi_locs_ctf.rst", "generated/mne.chpi.extract_chpi_locs_kit.rst", "generated/mne.chpi.filter_chpi.rst", "generated/mne.chpi.get_active_chpi.rst", "generated/mne.chpi.get_chpi_info.rst", "generated/mne.chpi.head_pos_to_trans_rot_t.rst", "generated/mne.chpi.read_head_pos.rst", "generated/mne.chpi.write_head_pos.rst", "generated/mne.combine_evoked.rst", "generated/mne.compute_covariance.rst", "generated/mne.compute_proj_epochs.rst", "generated/mne.compute_proj_evoked.rst", "generated/mne.compute_proj_raw.rst", "generated/mne.compute_rank.rst", "generated/mne.compute_raw_covariance.rst", "generated/mne.compute_source_morph.rst", "generated/mne.concatenate_epochs.rst", "generated/mne.concatenate_events.rst", "generated/mne.concatenate_raws.rst", "generated/mne.convert_forward_solution.rst", "generated/mne.coreg.Coregistration.rst", "generated/mne.coreg.estimate_head_mri_t.rst", "generated/mne.coreg.get_mni_fiducials.rst", "generated/mne.count_annotations.rst", "generated/mne.count_events.rst", "generated/mne.cov.compute_whitener.rst", "generated/mne.cov.prepare_noise_cov.rst", "generated/mne.cov.regularize.rst", "generated/mne.create_default_subject.rst", "generated/mne.create_info.rst", "generated/mne.cuda.get_cuda_memory.rst", "generated/mne.cuda.init_cuda.rst", "generated/mne.cuda.set_cuda_device.rst", "generated/mne.datasets.brainstorm.bst_auditory.data_path.rst", "generated/mne.datasets.brainstorm.bst_raw.data_path.rst", "generated/mne.datasets.brainstorm.bst_resting.data_path.rst", "generated/mne.datasets.eegbci.load_data.rst", "generated/mne.datasets.eegbci.standardize.rst", "generated/mne.datasets.epilepsy_ecog.data_path.rst", "generated/mne.datasets.erp_core.data_path.rst", "generated/mne.datasets.eyelink.data_path.rst", "generated/mne.datasets.fetch_aparc_sub_parcellation.rst", "generated/mne.datasets.fetch_dataset.rst", "generated/mne.datasets.fetch_fsaverage.rst", "generated/mne.datasets.fetch_hcp_mmp_parcellation.rst", "generated/mne.datasets.fetch_infant_template.rst", "generated/mne.datasets.fetch_phantom.rst", "generated/mne.datasets.fnirs_motor.data_path.rst", "generated/mne.datasets.has_dataset.rst", "generated/mne.datasets.hf_sef.data_path.rst", "generated/mne.datasets.kiloword.data_path.rst", "generated/mne.datasets.limo.load_data.rst", "generated/mne.datasets.misc.data_path.rst", "generated/mne.datasets.mtrf.data_path.rst", "generated/mne.datasets.multimodal.data_path.rst", "generated/mne.datasets.opm.data_path.rst", "generated/mne.datasets.phantom_4dbti.data_path.rst", "generated/mne.datasets.phantom_kernel.data_path.rst", "generated/mne.datasets.phantom_kit.data_path.rst", "generated/mne.datasets.refmeg_noise.data_path.rst", "generated/mne.datasets.sample.data_path.rst", "generated/mne.datasets.sleep_physionet.age.fetch_data.rst", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data.rst", "generated/mne.datasets.somato.data_path.rst", "generated/mne.datasets.spm_face.data_path.rst", "generated/mne.datasets.ssvep.data_path.rst", "generated/mne.datasets.ucl_opm_auditory.data_path.rst", "generated/mne.datasets.visual_92_categories.data_path.rst", "generated/mne.decimate_surface.rst", "generated/mne.decoding.CSP.rst", "generated/mne.decoding.EMS.rst", "generated/mne.decoding.FilterEstimator.rst", "generated/mne.decoding.GeneralizingEstimator.rst", "generated/mne.decoding.LinearModel.rst", "generated/mne.decoding.PSDEstimator.rst", "generated/mne.decoding.ReceptiveField.rst", "generated/mne.decoding.SPoC.rst", "generated/mne.decoding.SSD.rst", "generated/mne.decoding.Scaler.rst", "generated/mne.decoding.SlidingEstimator.rst", "generated/mne.decoding.TemporalFilter.rst", "generated/mne.decoding.TimeDelayingRidge.rst", "generated/mne.decoding.TimeFrequency.rst", "generated/mne.decoding.UnsupervisedSpatialFilter.rst", "generated/mne.decoding.Vectorizer.rst", "generated/mne.decoding.compute_ems.rst", "generated/mne.decoding.cross_val_multiscore.rst", "generated/mne.decoding.get_coef.rst", "generated/mne.dig_mri_distances.rst", "generated/mne.dipole.get_phantom_dipoles.rst", "generated/mne.epochs.average_movements.rst", "generated/mne.epochs.combine_event_ids.rst", "generated/mne.epochs.equalize_epoch_counts.rst", "generated/mne.epochs.make_metadata.rst", "generated/mne.equalize_channels.rst", "generated/mne.event.define_target_events.rst", "generated/mne.event.match_event_names.rst", "generated/mne.event.shift_time_events.rst", "generated/mne.events_from_annotations.rst", "generated/mne.export.export_epochs.rst", "generated/mne.export.export_evokeds.rst", "generated/mne.export.export_evokeds_mff.rst", "generated/mne.export.export_raw.rst", "generated/mne.extract_label_time_course.rst", "generated/mne.filter.construct_iir_filter.rst", "generated/mne.filter.create_filter.rst", "generated/mne.filter.estimate_ringing_samples.rst", "generated/mne.filter.filter_data.rst", "generated/mne.filter.notch_filter.rst", "generated/mne.filter.resample.rst", "generated/mne.find_events.rst", "generated/mne.find_stim_steps.rst", "generated/mne.fit_dipole.rst", "generated/mne.forward.compute_depth_prior.rst", "generated/mne.forward.compute_orient_prior.rst", "generated/mne.forward.restrict_forward_to_label.rst", "generated/mne.forward.restrict_forward_to_stc.rst", "generated/mne.get_config.rst", "generated/mne.get_config_path.rst", "generated/mne.get_head_surf.rst", "generated/mne.get_meg_helmet_surf.rst", "generated/mne.get_montage_volume_labels.rst", "generated/mne.get_volume_labels_from_aseg.rst", "generated/mne.get_volume_labels_from_src.rst", "generated/mne.grade_to_tris.rst", "generated/mne.grade_to_vertices.rst", "generated/mne.grand_average.rst", "generated/mne.grow_labels.rst", "generated/mne.gui.coregistration.rst", "generated/mne.head_to_mni.rst", "generated/mne.head_to_mri.rst", "generated/mne.inverse_sparse.gamma_map.rst", "generated/mne.inverse_sparse.make_stc_from_dipoles.rst", "generated/mne.inverse_sparse.mixed_norm.rst", "generated/mne.inverse_sparse.tf_mixed_norm.rst", "generated/mne.io.BaseRaw.rst", "generated/mne.io.Raw.rst", "generated/mne.io.RawArray.rst", "generated/mne.io.anonymize_info.rst", "generated/mne.io.get_channel_type_constants.rst", "generated/mne.io.kit.read_mrk.rst", "generated/mne.io.read_fiducials.rst", "generated/mne.io.read_info.rst", "generated/mne.io.read_raw.rst", "generated/mne.io.read_raw_artemis123.rst", "generated/mne.io.read_raw_bdf.rst", "generated/mne.io.read_raw_boxy.rst", "generated/mne.io.read_raw_brainvision.rst", "generated/mne.io.read_raw_bti.rst", "generated/mne.io.read_raw_cnt.rst", "generated/mne.io.read_raw_ctf.rst", "generated/mne.io.read_raw_curry.rst", "generated/mne.io.read_raw_edf.rst", "generated/mne.io.read_raw_eeglab.rst", "generated/mne.io.read_raw_egi.rst", "generated/mne.io.read_raw_eximia.rst", "generated/mne.io.read_raw_eyelink.rst", "generated/mne.io.read_raw_fieldtrip.rst", "generated/mne.io.read_raw_fif.rst", "generated/mne.io.read_raw_fil.rst", "generated/mne.io.read_raw_gdf.rst", "generated/mne.io.read_raw_hitachi.rst", "generated/mne.io.read_raw_kit.rst", "generated/mne.io.read_raw_nedf.rst", "generated/mne.io.read_raw_nicolet.rst", "generated/mne.io.read_raw_nihon.rst", "generated/mne.io.read_raw_nirx.rst", "generated/mne.io.read_raw_nsx.rst", "generated/mne.io.read_raw_persyst.rst", "generated/mne.io.read_raw_snirf.rst", "generated/mne.io.show_fiff.rst", "generated/mne.io.write_fiducials.rst", "generated/mne.io.write_info.rst", "generated/mne.label.select_sources.rst", "generated/mne.label_sign_flip.rst", "generated/mne.labels_to_stc.rst", "generated/mne.make_ad_hoc_cov.rst", "generated/mne.make_bem_model.rst", "generated/mne.make_bem_solution.rst", "generated/mne.make_field_map.rst", "generated/mne.make_fixed_length_epochs.rst", "generated/mne.make_fixed_length_events.rst", "generated/mne.make_forward_dipole.rst", "generated/mne.make_forward_solution.rst", "generated/mne.make_sphere_model.rst", "generated/mne.match_channel_orders.rst", "generated/mne.merge_events.rst", "generated/mne.minimum_norm.InverseOperator.rst", "generated/mne.minimum_norm.apply_inverse.rst", "generated/mne.minimum_norm.apply_inverse_cov.rst", "generated/mne.minimum_norm.apply_inverse_epochs.rst", "generated/mne.minimum_norm.apply_inverse_raw.rst", "generated/mne.minimum_norm.apply_inverse_tfr_epochs.rst", "generated/mne.minimum_norm.compute_rank_inverse.rst", "generated/mne.minimum_norm.compute_source_psd.rst", "generated/mne.minimum_norm.compute_source_psd_epochs.rst", "generated/mne.minimum_norm.estimate_snr.rst", "generated/mne.minimum_norm.get_cross_talk.rst", "generated/mne.minimum_norm.get_point_spread.rst", "generated/mne.minimum_norm.make_inverse_operator.rst", "generated/mne.minimum_norm.make_inverse_resolution_matrix.rst", "generated/mne.minimum_norm.prepare_inverse_operator.rst", "generated/mne.minimum_norm.read_inverse_operator.rst", "generated/mne.minimum_norm.resolution_metrics.rst", "generated/mne.minimum_norm.source_band_induced_power.rst", "generated/mne.minimum_norm.source_induced_power.rst", "generated/mne.minimum_norm.write_inverse_operator.rst", "generated/mne.morph_labels.rst", "generated/mne.morph_source_spaces.rst", "generated/mne.open_docs.rst", "generated/mne.open_report.rst", "generated/mne.parse_config.rst", "generated/mne.pick_channels.rst", "generated/mne.pick_channels_cov.rst", "generated/mne.pick_channels_forward.rst", "generated/mne.pick_channels_regexp.rst", "generated/mne.pick_events.rst", "generated/mne.pick_info.rst", "generated/mne.pick_types.rst", "generated/mne.pick_types_forward.rst", "generated/mne.preprocessing.EOGRegression.rst", "generated/mne.preprocessing.ICA.rst", "generated/mne.preprocessing.Xdawn.rst", "generated/mne.preprocessing.annotate_amplitude.rst", "generated/mne.preprocessing.annotate_break.rst", "generated/mne.preprocessing.annotate_movement.rst", "generated/mne.preprocessing.annotate_muscle_zscore.rst", "generated/mne.preprocessing.annotate_nan.rst", "generated/mne.preprocessing.compute_average_dev_head_t.rst", "generated/mne.preprocessing.compute_bridged_electrodes.rst", "generated/mne.preprocessing.compute_current_source_density.rst", "generated/mne.preprocessing.compute_fine_calibration.rst", "generated/mne.preprocessing.compute_maxwell_basis.rst", "generated/mne.preprocessing.compute_proj_ecg.rst", "generated/mne.preprocessing.compute_proj_eog.rst", "generated/mne.preprocessing.compute_proj_hfc.rst", "generated/mne.preprocessing.corrmap.rst", "generated/mne.preprocessing.cortical_signal_suppression.rst", "generated/mne.preprocessing.create_ecg_epochs.rst", "generated/mne.preprocessing.create_eog_epochs.rst", "generated/mne.preprocessing.equalize_bads.rst", "generated/mne.preprocessing.eyetracking.Calibration.rst", "generated/mne.preprocessing.eyetracking.interpolate_blinks.rst", "generated/mne.preprocessing.eyetracking.read_eyelink_calibration.rst", "generated/mne.preprocessing.eyetracking.set_channel_types_eyetrack.rst", "generated/mne.preprocessing.find_bad_channels_maxwell.rst", "generated/mne.preprocessing.find_ecg_events.rst", "generated/mne.preprocessing.find_eog_events.rst", "generated/mne.preprocessing.fix_stim_artifact.rst", "generated/mne.preprocessing.ica_find_ecg_events.rst", "generated/mne.preprocessing.ica_find_eog_events.rst", "generated/mne.preprocessing.ieeg.make_montage_volume.rst", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain.rst", "generated/mne.preprocessing.ieeg.warp_montage.rst", "generated/mne.preprocessing.infomax.rst", "generated/mne.preprocessing.interpolate_bridged_electrodes.rst", "generated/mne.preprocessing.maxwell_filter.rst", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom.rst", "generated/mne.preprocessing.nirs.beer_lambert_law.rst", "generated/mne.preprocessing.nirs.optical_density.rst", "generated/mne.preprocessing.nirs.scalp_coupling_index.rst", "generated/mne.preprocessing.nirs.short_channels.rst", "generated/mne.preprocessing.nirs.source_detector_distances.rst", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair.rst", "generated/mne.preprocessing.oversampled_temporal_projection.rst", "generated/mne.preprocessing.peak_finder.rst", "generated/mne.preprocessing.read_eog_regression.rst", "generated/mne.preprocessing.read_fine_calibration.rst", "generated/mne.preprocessing.read_ica.rst", "generated/mne.preprocessing.read_ica_eeglab.rst", "generated/mne.preprocessing.realign_raw.rst", "generated/mne.preprocessing.regress_artifact.rst", "generated/mne.preprocessing.write_fine_calibration.rst", "generated/mne.random_parcellation.rst", "generated/mne.read_annotations.rst", "generated/mne.read_bem_solution.rst", "generated/mne.read_bem_surfaces.rst", "generated/mne.read_cov.rst", "generated/mne.read_dipole.rst", "generated/mne.read_epochs.rst", "generated/mne.read_epochs_eeglab.rst", "generated/mne.read_epochs_fieldtrip.rst", "generated/mne.read_epochs_kit.rst", "generated/mne.read_events.rst", "generated/mne.read_evoked_besa.rst", "generated/mne.read_evoked_fieldtrip.rst", "generated/mne.read_evokeds.rst", "generated/mne.read_evokeds_mff.rst", "generated/mne.read_forward_solution.rst", "generated/mne.read_freesurfer_lut.rst", "generated/mne.read_label.rst", "generated/mne.read_labels_from_annot.rst", "generated/mne.read_lta.rst", "generated/mne.read_morph_map.rst", "generated/mne.read_proj.rst", "generated/mne.read_reject_parameters.rst", "generated/mne.read_source_estimate.rst", "generated/mne.read_source_morph.rst", "generated/mne.read_source_spaces.rst", "generated/mne.read_surface.rst", "generated/mne.read_talxfm.rst", "generated/mne.read_trans.rst", "generated/mne.read_tri.rst", "generated/mne.read_vectorview_selection.rst", "generated/mne.rename_channels.rst", "generated/mne.scale_bem.rst", "generated/mne.scale_labels.rst", "generated/mne.scale_mri.rst", "generated/mne.scale_source_space.rst", "generated/mne.sensitivity_map.rst", "generated/mne.set_bipolar_reference.rst", "generated/mne.set_cache_dir.rst", "generated/mne.set_config.rst", "generated/mne.set_eeg_reference.rst", "generated/mne.set_log_file.rst", "generated/mne.set_log_level.rst", "generated/mne.set_memmap_min_size.rst", "generated/mne.setup_source_space.rst", "generated/mne.setup_volume_source_space.rst", "generated/mne.simulation.SourceSimulator.rst", "generated/mne.simulation.add_chpi.rst", "generated/mne.simulation.add_ecg.rst", "generated/mne.simulation.add_eog.rst", "generated/mne.simulation.add_noise.rst", "generated/mne.simulation.metrics.cosine_score.rst", "generated/mne.simulation.metrics.f1_score.rst", "generated/mne.simulation.metrics.peak_position_error.rst", "generated/mne.simulation.metrics.precision_score.rst", "generated/mne.simulation.metrics.recall_score.rst", "generated/mne.simulation.metrics.region_localization_error.rst", "generated/mne.simulation.metrics.roc_auc_score.rst", "generated/mne.simulation.metrics.spatial_deviation_error.rst", "generated/mne.simulation.select_source_in_label.rst", "generated/mne.simulation.simulate_evoked.rst", "generated/mne.simulation.simulate_raw.rst", "generated/mne.simulation.simulate_sparse_stc.rst", "generated/mne.simulation.simulate_stc.rst", "generated/mne.source_space.compute_distance_to_sensors.rst", "generated/mne.source_space.get_decimated_surfaces.rst", "generated/mne.spatial_dist_adjacency.rst", "generated/mne.spatial_inter_hemi_adjacency.rst", "generated/mne.spatial_src_adjacency.rst", "generated/mne.spatial_tris_adjacency.rst", "generated/mne.spatio_temporal_dist_adjacency.rst", "generated/mne.spatio_temporal_src_adjacency.rst", "generated/mne.spatio_temporal_tris_adjacency.rst", "generated/mne.split_label.rst", "generated/mne.stats.bonferroni_correction.rst", "generated/mne.stats.bootstrap_confidence_interval.rst", "generated/mne.stats.combine_adjacency.rst", "generated/mne.stats.f_mway_rm.rst", "generated/mne.stats.f_oneway.rst", "generated/mne.stats.f_threshold_mway_rm.rst", "generated/mne.stats.fdr_correction.rst", "generated/mne.stats.linear_regression.rst", "generated/mne.stats.linear_regression_raw.rst", "generated/mne.stats.permutation_cluster_1samp_test.rst", "generated/mne.stats.permutation_cluster_test.rst", "generated/mne.stats.permutation_t_test.rst", "generated/mne.stats.spatio_temporal_cluster_1samp_test.rst", "generated/mne.stats.spatio_temporal_cluster_test.rst", "generated/mne.stats.summarize_clusters_stc.rst", "generated/mne.stats.ttest_1samp_no_p.rst", "generated/mne.stats.ttest_ind_no_p.rst", "generated/mne.stc_near_sensors.rst", "generated/mne.stc_to_label.rst", "generated/mne.surface.complete_surface_info.rst", "generated/mne.surface.read_curvature.rst", "generated/mne.sys_info.rst", "generated/mne.time_frequency.AverageTFR.rst", "generated/mne.time_frequency.CrossSpectralDensity.rst", "generated/mne.time_frequency.EpochsSpectrum.rst", "generated/mne.time_frequency.EpochsSpectrumArray.rst", "generated/mne.time_frequency.EpochsTFR.rst", "generated/mne.time_frequency.Spectrum.rst", "generated/mne.time_frequency.SpectrumArray.rst", "generated/mne.time_frequency.csd_array_fourier.rst", "generated/mne.time_frequency.csd_array_morlet.rst", "generated/mne.time_frequency.csd_array_multitaper.rst", "generated/mne.time_frequency.csd_fourier.rst", "generated/mne.time_frequency.csd_morlet.rst", "generated/mne.time_frequency.csd_multitaper.rst", "generated/mne.time_frequency.csd_tfr.rst", "generated/mne.time_frequency.dpss_windows.rst", "generated/mne.time_frequency.fit_iir_model_raw.rst", "generated/mne.time_frequency.fwhm.rst", "generated/mne.time_frequency.istft.rst", "generated/mne.time_frequency.morlet.rst", "generated/mne.time_frequency.pick_channels_csd.rst", "generated/mne.time_frequency.psd_array_multitaper.rst", "generated/mne.time_frequency.psd_array_welch.rst", "generated/mne.time_frequency.read_csd.rst", "generated/mne.time_frequency.read_spectrum.rst", "generated/mne.time_frequency.read_tfrs.rst", "generated/mne.time_frequency.stft.rst", "generated/mne.time_frequency.stftfreq.rst", "generated/mne.time_frequency.tfr.cwt.rst", "generated/mne.time_frequency.tfr.morlet.rst", "generated/mne.time_frequency.tfr_array_morlet.rst", "generated/mne.time_frequency.tfr_array_multitaper.rst", "generated/mne.time_frequency.tfr_array_stockwell.rst", "generated/mne.time_frequency.tfr_morlet.rst", "generated/mne.time_frequency.tfr_multitaper.rst", "generated/mne.time_frequency.tfr_stockwell.rst", "generated/mne.time_frequency.write_tfrs.rst", "generated/mne.transform_surface_to.rst", "generated/mne.transforms.Transform.rst", "generated/mne.transforms.apply_volume_registration.rst", "generated/mne.transforms.apply_volume_registration_points.rst", "generated/mne.transforms.compute_volume_registration.rst", "generated/mne.transforms.quat_to_rot.rst", "generated/mne.transforms.read_ras_mni_t.rst", "generated/mne.transforms.rot_to_quat.rst", "generated/mne.use_coil_def.rst", "generated/mne.use_log_level.rst", "generated/mne.utils.deprecated.rst", "generated/mne.utils.warn.rst", "generated/mne.verbose.rst", "generated/mne.vertex_to_mni.rst", "generated/mne.viz.Brain.rst", "generated/mne.viz.ClickableImage.rst", "generated/mne.viz.EvokedField.rst", "generated/mne.viz.Figure3D.rst", "generated/mne.viz.add_background_image.rst", "generated/mne.viz.centers_to_edges.rst", "generated/mne.viz.circular_layout.rst", "generated/mne.viz.close_3d_figure.rst", "generated/mne.viz.close_all_3d_figures.rst", "generated/mne.viz.compare_fiff.rst", "generated/mne.viz.create_3d_figure.rst", "generated/mne.viz.eyetracking.plot_gaze.rst", "generated/mne.viz.get_3d_backend.rst", "generated/mne.viz.get_brain_class.rst", "generated/mne.viz.get_browser_backend.rst", "generated/mne.viz.iter_topography.rst", "generated/mne.viz.link_brains.rst", "generated/mne.viz.mne_analyze_colormap.rst", "generated/mne.viz.plot_alignment.rst", "generated/mne.viz.plot_arrowmap.rst", "generated/mne.viz.plot_bem.rst", "generated/mne.viz.plot_brain_colorbar.rst", "generated/mne.viz.plot_bridged_electrodes.rst", "generated/mne.viz.plot_ch_adjacency.rst", "generated/mne.viz.plot_channel_labels_circle.rst", "generated/mne.viz.plot_chpi_snr.rst", "generated/mne.viz.plot_compare_evokeds.rst", "generated/mne.viz.plot_cov.rst", "generated/mne.viz.plot_csd.rst", "generated/mne.viz.plot_dipole_amplitudes.rst", "generated/mne.viz.plot_dipole_locations.rst", "generated/mne.viz.plot_drop_log.rst", "generated/mne.viz.plot_epochs.rst", "generated/mne.viz.plot_epochs_image.rst", "generated/mne.viz.plot_epochs_psd_topomap.rst", "generated/mne.viz.plot_events.rst", "generated/mne.viz.plot_evoked.rst", "generated/mne.viz.plot_evoked_field.rst", "generated/mne.viz.plot_evoked_image.rst", "generated/mne.viz.plot_evoked_joint.rst", "generated/mne.viz.plot_evoked_topo.rst", "generated/mne.viz.plot_evoked_topomap.rst", "generated/mne.viz.plot_evoked_white.rst", "generated/mne.viz.plot_filter.rst", "generated/mne.viz.plot_head_positions.rst", "generated/mne.viz.plot_ica_components.rst", "generated/mne.viz.plot_ica_overlay.rst", "generated/mne.viz.plot_ica_properties.rst", "generated/mne.viz.plot_ica_scores.rst", "generated/mne.viz.plot_ica_sources.rst", "generated/mne.viz.plot_ideal_filter.rst", "generated/mne.viz.plot_layout.rst", "generated/mne.viz.plot_montage.rst", "generated/mne.viz.plot_projs_joint.rst", "generated/mne.viz.plot_projs_topomap.rst", "generated/mne.viz.plot_raw.rst", "generated/mne.viz.plot_raw_psd.rst", "generated/mne.viz.plot_regression_weights.rst", "generated/mne.viz.plot_sensors.rst", "generated/mne.viz.plot_snr_estimate.rst", "generated/mne.viz.plot_source_estimates.rst", "generated/mne.viz.plot_sparse_source_estimates.rst", "generated/mne.viz.plot_tfr_topomap.rst", "generated/mne.viz.plot_topo_image_epochs.rst", "generated/mne.viz.plot_topomap.rst", "generated/mne.viz.plot_vector_source_estimates.rst", "generated/mne.viz.plot_volume_source_estimates.rst", "generated/mne.viz.set_3d_backend.rst", "generated/mne.viz.set_3d_options.rst", "generated/mne.viz.set_3d_title.rst", "generated/mne.viz.set_3d_view.rst", "generated/mne.viz.set_browser_backend.rst", "generated/mne.viz.snapshot_brain_montage.rst", "generated/mne.viz.ui_events.ColormapRange.rst", "generated/mne.viz.ui_events.Contours.rst", "generated/mne.viz.ui_events.FigureClosing.rst", "generated/mne.viz.ui_events.PlaybackSpeed.rst", "generated/mne.viz.ui_events.TimeChange.rst", "generated/mne.viz.ui_events.UIEvent.rst", "generated/mne.viz.ui_events.VertexSelect.rst", "generated/mne.viz.ui_events.disable_ui_events.rst", "generated/mne.viz.ui_events.link.rst", "generated/mne.viz.ui_events.publish.rst", "generated/mne.viz.ui_events.subscribe.rst", "generated/mne.viz.ui_events.unlink.rst", "generated/mne.viz.ui_events.unsubscribe.rst", "generated/mne.viz.use_3d_backend.rst", "generated/mne.viz.use_browser_backend.rst", "generated/mne.what.rst", "generated/mne.write_bem_solution.rst", "generated/mne.write_bem_surfaces.rst", "generated/mne.write_cov.rst", "generated/mne.write_events.rst", "generated/mne.write_evokeds.rst", "generated/mne.write_forward_solution.rst", "generated/mne.write_head_bem.rst", "generated/mne.write_label.rst", "generated/mne.write_labels_to_annot.rst", "generated/mne.write_proj.rst", "generated/mne.write_source_spaces.rst", "generated/mne.write_surface.rst", "generated/mne.write_trans.rst", "help/faq.rst", "help/index.rst", "help/learn_python.rst", "help/migrating.rst", "index.rst", "install/advanced.rst", "install/check_installation.rst", "install/freesurfer.rst", "install/index.rst", "install/installers.rst", "install/manual_install.rst", "install/manual_install_python.rst", "install/mne_c.rst", "install/mne_tools_suite.rst", "install/updating.rst", "martinos.rst", "mne_cpp.rst", "old_versions/index.rst", "overview/people.rst", "sg_api_usage.rst", "sg_execution_times.rst"], "titles": ["Connectivity Estimation", "Covariance computation", "Creating data objects from arrays", "Datasets", "Decoding", "Events", "Exporting", "File I/O", "Forward Modeling", "Inverse Solutions", "Logging and Configuration", "Most-used classes", "MRI Processing", "Preprocessing", "Python API Reference", "Reading raw data", "Realtime", "MNE-Report", "Sensor Space Data", "Simulation", "Source Space Data", "Statistics", "Time-Frequency", "Visualization", "Connectivity Analysis Examples", "Computation times", "Brainstorm raw (median nerve) dataset", "HF-SEF dataset", "Examples on open datasets", "Kernel OPM phantom data", "Single trial linear regression analysis with the LIMO dataset", "Optically pumped magnetometer (OPM) data", "Computation times", "From raw data to dSPM on SPM Faces dataset", "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)", "Decoding in time-frequency space using Common Spatial Patterns (CSP)", "Representational Similarity Analysis", "Decoding source space data", "Continuous Target Decoding with SPoC", "Decoding sensor space data with generalization across time and conditions", "Analysis of evoked response using ICA and PCA reduction techniques", "XDAWN Decoding From EEG data", "Compute effect-matched-spatial filtering (EMS)", "Machine Learning (Decoding, Encoding, and MVPA)", "Linear classifier on sensor data with plot patterns and filters", "Receptive Field Estimation and Prediction", "Computation times", "Compute Spectro-Spatial Decomposition (SSD) spatial filters", "Display sensitivity maps for EEG and MEG sensors", "Forward modeling", "Generate a left cerebellum volume source space", "Computation times", "Use source space morphing", "Examples Gallery", "Compute MNE-dSPM inverse solution on single epochs", "Compute sLORETA inverse solution on raw data", "Compute MNE-dSPM inverse solution on evoked data in volume source space", "Source localization with a custom inverse solver", "Compute source level time-frequency timecourses using a DICS beamformer", "Compute source power using DICS beamformer", "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM", "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method", "Inverse problem and source analysis", "Extracting time course from source_estimate object", "Generate a functional label from source estimates", "Extracting the time series of activations in a label", "Compute sparse inverse solution with mixed norm: MxNE and irMxNE", "Compute MNE inverse solution on evoked data with a mixed source space", "Compute source power estimate by projecting the covariance with MNE", "Morph surface source estimate", "Morph volumetric source estimate", "Computing source timecourses with an XFit-like multi-dipole model", "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary", "Visualize source leakage among labels using a circular graph", "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)", "Compute cross-talk functions for LCMV beamformers", "Plot point-spread functions (PSFs) for a volume", "Compute Rap-Music on evoked data", "Reading an inverse operator", "Reading an STC file", "Compute spatial resolution metrics in source space", "Compute spatial resolution metrics to compare MEG with EEG+MEG", "Computation times", "Estimate data SNR using an inverse", "Computing source space SNR", "Compute MxNE with time-frequency sparse prior", "Compute Trap-Music on evoked data", "Plotting the full vector-valued MNE solution", "Getting averaging info from .fif files", "Input/Output", "How to use data in neural ensemble (NEO) format", "Reading/Writing a noise covariance matrix", "Reading XDF EEG data", "Computation times", "Using contralateral referencing for EEG", "Cortical Signal Suppression (CSS) for removal of cortical signals", "Define target events based on time lag, plot evoked response", "Identify EEG Electrodes Bridged by too much Gel", "Transform EEG data using current source density (CSD)", "Show EOG artifact timing", "Reduce EOG artifacts through regression", "Find MEG reference channel artifacts", "Visualise NIRS artifact correction methods", "Compare the different ICA algorithms in MNE", "Preprocessing", "Interpolate bad channels for MEG/EEG channels", "Maxwell filter data with movement compensation", "Annotate movement artifacts and reestimate dev_head_t", "Annotate muscle artifacts", "Removing muscle ICA components", "Plot sensor denoising using oversampled temporal projection", "Computation times", "Shifting time-scale in evoked data", "Remap MEG channel types", "XDAWN Denoising", "Computation times", "Data Simulation", "Compare simulated and estimated source activity", "Computation times", "Generate simulated evoked data", "Generate simulated raw data", "Simulate raw data using subject anatomy", "Generate simulated source data", "Permutation F-test on sensor data with 1D cluster level", "FDR correction on T-test on sensor data", "Statistics Examples", "Regression on continuous data (rER[P/F])", "Permutation T-test on sensor data", "Analysing continuous features with binning and regression in sensor space", "Computation times", "Compute a cross-spectral density (CSD) matrix", "Compute Power Spectral Density of inverse solution from single epochs", "Time-Frequency Examples", "Computation times", "Compute power and phase lock in label of the source space", "Compute source power spectral density (PSD) in a label", "Compute source power spectral density (PSD) of VectorView and OPM data", "Compute induced power in the source space with dSPM", "Temporal whitening with AR model", "Compute and visualize ERDS maps", "Explore event-related dynamics for specific frequency bands", "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)", "How to convert 3D electrode positions to a 2D image", "Plotting with <code class=\"docutils literal notranslate\"><span class=\"pre\">mne.viz.Brain</span></code>", "Visualize channel over epochs as an image", "Plotting EEG sensors on the scalp", "Plotting topographic arrowmaps of evoked data", "Plotting topographic maps of evoked data", "Whitening evoked data with a noise covariance", "Plotting eye-tracking heatmaps in MNE-Python", "Visualization", "Plotting sensor layouts of MEG systems", "Plot the MNE brain and helmet", "Plotting sensor layouts of EEG systems", "Plot a cortical parcellation", "Plot single trial activity, grouped by ROI and sorted by RT", "Computation times", "Sensitivity map of SSP projections", "Compare evoked responses for different conditions", "Plot custom topographies for MEG sensors", "Cross-hemisphere comparison", "Working with sEEG data", "Working with ECoG data", "Sleep stage classification from polysomnography (PSG) data", "Clinical applications", "Computation times", "The Epochs data structure: discontinuous data", "Regression-based baseline correction", "Visualizing epoched data", "Working with Epoch metadata", "Auto-generating Epochs metadata", "Exporting Epochs to Pandas DataFrames", "Divide continuous data into equally-spaced epochs", "Segmenting continuous data into epochs", "Computation times", "The Evoked data structure: evoked/averaged data", "Visualizing Evoked data", "EEG analysis - Event-Related Potentials (ERPs)", "Plotting whitened data", "Estimating evoked responses", "Computation times", "FreeSurfer MRI reconstruction", "Source alignment and coordinate frames", "Using an automated approach to coregistration", "Head model and forward computation", "EEG forward operator with a template MRI", "How MNE uses FreeSurfer\u2019s outputs", "Fixing BEM and head surfaces", "Computing a covariance matrix", "Forward models and source spaces", "Computation times", "Tutorials", "Overview of MEG/EEG analysis with MNE-Python", "Modifying data in-place", "Parsing events from raw data", "The Info data structure", "Working with sensor locations", "Configuring MNE-Python", "Getting started with mne.Report", "Introductory tutorials", "Computation times", "The SourceEstimate data structure", "Source localization with equivalent current dipole (ECD) fit", "Source localization with MNE, dSPM, sLORETA, and eLORETA", "The role of dipole orientations in distributed source localization", "Computing various MNE solutions", "Source reconstruction using an LCMV beamformer", "Visualize source time courses (stcs)", "EEG source localization given electrode locations on an MRI", "Brainstorm Elekta phantom dataset tutorial", "Brainstorm CTF phantom dataset tutorial", "4D Neuroimaging/BTi phantom dataset tutorial", "KIT phantom dataset tutorial", "Source localization and inverses", "Computation times", "Importing data from MEG devices", "Importing data from EEG devices", "Importing data from fNIRS devices", "Working with CTF data: the Brainstorm auditory dataset", "Importing Data from Eyetracking devices", "Reading data for different recording systems", "Computation times", "Spectro-temporal receptive field (STRF) estimation on continuous data", "Decoding (MVPA)", "Machine learning models of neural activity", "Computation times", "Overview of artifact detection", "Handling bad channels", "Rejecting bad data spans and breaks", "Background information on filtering", "Filtering and resampling data", "Repairing artifacts with regression", "Repairing artifacts with ICA", "Background on projectors and projections", "Repairing artifacts with SSP", "Setting the EEG reference", "Extracting and visualizing subject head movement", "Signal-space separation (SSS) and Maxwell filtering", "Preprocessing functional near-infrared spectroscopy (fNIRS) data", "Preprocessing optically pumped magnetometer (OPM) MEG data", "Working with eye tracker data in MNE-Python", "Preprocessing", "Computation times", "The Raw data structure: continuous data", "Working with events", "Annotating continuous data", "Built-in plotting methods for Raw objects", "Working with continuous data", "Computation times", "Computation times", "Creating MNE-Python data structures from scratch", "Corrupt known signal with point spread", "DICS for power mapping", "Simulation", "Computation times", "Statistical inference", "Visualising statistical significance thresholds on EEG data", "Non-parametric 1 sample cluster statistic on single trial power", "Non-parametric between conditions cluster statistic on single trial power", "Mass-univariate twoway repeated measures ANOVA on single trial power", "Spatiotemporal permutation F-test on full sensor data", "Statistical analysis of sensor data", "Computation times", "Permutation t-test on source data with spatio-temporal clustering", "2 samples permutation test on source data with spatio-temporal clustering", "Repeated measures ANOVA on source data with spatio-temporal clustering", "Statistical analysis of source estimates", "Computation times", "The Spectrum and EpochsSpectrum classes: frequency-domain data", "Frequency and time-frequency sensor analysis", "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset", "Time-frequency analysis", "Computation times", "Make figures more publication ready", "Using the event system to link figures", "Visualization tutorials", "Computation times", "General bibliography", "Version 1.6.dev0 (development)", "Version 0.1 (2011-09-23)", "Version 0.10 (2015-10-26)", "Version 0.11 (2015-12-24)", "Version 0.12 (2016-05-10)", "Version 0.13 (2016-09-27)", "Version 0.14 (2017-03-24)", "Version 0.15 (2017-10-20)", "Version 0.16 (2018-05-01)", "Version 0.17 (2018-11-19)", "Version 0.18 (2019-05-19)", "Version 0.19 (2019-09-24)", "Version 0.2 (2011-11-08)", "Version 0.20 (2020-03-27)", "Version 0.21 (2020-09-21)", "Version 0.22.0 (2020-12-17)", "Version 0.23.0 (2021-04-27)", "Version 0.24.0 (2021-11-03)", "Version 0.3 (2012-03-23)", "Version 0.4 (2012-08-24)", "Version 0.5 (2012-12-27)", "Version 0.6 (2013-06-15)", "Version 0.7 (2013-11-26)", "Version 0.8 (2014-06-25)", "Version 0.9 (2015-05-22)", "Version 1.0.0 (2022-03-21)", "Version 1.1.0 (2022-08-03)", "Version 1.2.0 (2022-10-11)", "Version 1.3.0 (2022-12-21)", "Version 1.4.0 (2023-05-10)", "Version 1.5.0 (2023-08-14)", "Contributing guide", "Project Governance", "MNE-Python Development", "Roadmap", "What\u2019s new", "How to cite MNE-Python", "Papers citing MNE-Python", "The typical M/EEG workflow", "Datasets Overview", "Design philosophy", "Glossary", "Algorithms and other implementation details", "Documentation overview", "Funding and other support", "Command line tools using Python", "mne.AcqParserFIF", "mne.Annotations", "mne.BaseEpochs", "mne.BiHemiLabel", "mne.Covariance", "mne.Dipole", "mne.DipoleFixed", "mne.Epochs", "mne.EpochsArray", "mne.Evoked", "mne.EvokedArray", "mne.Forward", "mne.Info", "mne.Label", "mne.MixedSourceEstimate", "mne.MixedVectorSourceEstimate", "mne.Projection", "mne.Report", "mne.SourceEstimate", "mne.SourceMorph", "mne.SourceSpaces", "mne.VectorSourceEstimate", "mne.VolSourceEstimate", "mne.VolVectorSourceEstimate", "mne.add_reference_channels", "mne.add_source_space_distances", "mne.annotations_from_events", "mne.apply_forward", "mne.apply_forward_raw", "mne.average_forward_solutions", "mne.baseline.rescale", "mne.beamformer.Beamformer", "mne.beamformer.apply_dics", "mne.beamformer.apply_dics_csd", "mne.beamformer.apply_dics_epochs", "mne.beamformer.apply_dics_tfr_epochs", "mne.beamformer.apply_lcmv", "mne.beamformer.apply_lcmv_cov", "mne.beamformer.apply_lcmv_epochs", "mne.beamformer.apply_lcmv_raw", "mne.beamformer.make_dics", "mne.beamformer.make_lcmv", "mne.beamformer.make_lcmv_resolution_matrix", "mne.beamformer.rap_music", "mne.beamformer.read_beamformer", "mne.beamformer.trap_music", "mne.bem.ConductorModel", "mne.bem.convert_flash_mris", "mne.bem.distance_to_bem", "mne.bem.fit_sphere_to_headshape", "mne.bem.get_fitting_dig", "mne.bem.make_flash_bem", "mne.bem.make_scalp_surfaces", "mne.bem.make_watershed_bem", "mne.channel_indices_by_type", "mne.channel_type", "mne.channels.DigMontage", "mne.channels.Layout", "mne.channels.combine_channels", "mne.channels.compute_dev_head_t", "mne.channels.compute_native_head_t", "mne.channels.equalize_channels", "mne.channels.find_ch_adjacency", "mne.channels.find_layout", "mne.channels.fix_mag_coil_types", "mne.channels.generate_2d_layout", "mne.channels.get_builtin_ch_adjacencies", "mne.channels.get_builtin_montages", "mne.channels.make_1020_channel_selections", "mne.channels.make_dig_montage", "mne.channels.make_eeg_layout", "mne.channels.make_grid_layout", "mne.channels.make_standard_montage", "mne.channels.read_ch_adjacency", "mne.channels.read_custom_montage", "mne.channels.read_dig_captrak", "mne.channels.read_dig_dat", "mne.channels.read_dig_egi", "mne.channels.read_dig_fif", "mne.channels.read_dig_hpts", "mne.channels.read_dig_localite", "mne.channels.read_dig_polhemus_isotrak", "mne.channels.read_layout", "mne.channels.read_polhemus_fastscan", "mne.channels.rename_channels", "mne.channels.unify_bad_channels", "mne.chpi.compute_chpi_amplitudes", "mne.chpi.compute_chpi_locs", "mne.chpi.compute_chpi_snr", "mne.chpi.compute_head_pos", "mne.chpi.extract_chpi_locs_ctf", "mne.chpi.extract_chpi_locs_kit", "mne.chpi.filter_chpi", "mne.chpi.get_active_chpi", "mne.chpi.get_chpi_info", "mne.chpi.head_pos_to_trans_rot_t", "mne.chpi.read_head_pos", "mne.chpi.write_head_pos", "mne.combine_evoked", "mne.compute_covariance", "mne.compute_proj_epochs", "mne.compute_proj_evoked", "mne.compute_proj_raw", "mne.compute_rank", "mne.compute_raw_covariance", "mne.compute_source_morph", "mne.concatenate_epochs", "mne.concatenate_events", "mne.concatenate_raws", "mne.convert_forward_solution", "mne.coreg.Coregistration", "mne.coreg.estimate_head_mri_t", "mne.coreg.get_mni_fiducials", "mne.count_annotations", "mne.count_events", "mne.cov.compute_whitener", "mne.cov.prepare_noise_cov", "mne.cov.regularize", "mne.create_default_subject", "mne.create_info", "mne.cuda.get_cuda_memory", "mne.cuda.init_cuda", "mne.cuda.set_cuda_device", "mne.datasets.brainstorm.bst_auditory.data_path", "mne.datasets.brainstorm.bst_raw.data_path", "mne.datasets.brainstorm.bst_resting.data_path", "mne.datasets.eegbci.load_data", "mne.datasets.eegbci.standardize", "mne.datasets.epilepsy_ecog.data_path", "mne.datasets.erp_core.data_path", "mne.datasets.eyelink.data_path", "mne.datasets.fetch_aparc_sub_parcellation", "mne.datasets.fetch_dataset", "mne.datasets.fetch_fsaverage", "mne.datasets.fetch_hcp_mmp_parcellation", "mne.datasets.fetch_infant_template", "mne.datasets.fetch_phantom", "mne.datasets.fnirs_motor.data_path", "mne.datasets.has_dataset", "mne.datasets.hf_sef.data_path", "mne.datasets.kiloword.data_path", "mne.datasets.limo.load_data", "mne.datasets.misc.data_path", "mne.datasets.mtrf.data_path", "mne.datasets.multimodal.data_path", "mne.datasets.opm.data_path", "mne.datasets.phantom_4dbti.data_path", "mne.datasets.phantom_kernel.data_path", "mne.datasets.phantom_kit.data_path", "mne.datasets.refmeg_noise.data_path", "mne.datasets.sample.data_path", "mne.datasets.sleep_physionet.age.fetch_data", "mne.datasets.sleep_physionet.temazepam.fetch_data", "mne.datasets.somato.data_path", "mne.datasets.spm_face.data_path", "mne.datasets.ssvep.data_path", "mne.datasets.ucl_opm_auditory.data_path", "mne.datasets.visual_92_categories.data_path", "mne.decimate_surface", "mne.decoding.CSP", "mne.decoding.EMS", "mne.decoding.FilterEstimator", "mne.decoding.GeneralizingEstimator", "mne.decoding.LinearModel", "mne.decoding.PSDEstimator", "mne.decoding.ReceptiveField", "mne.decoding.SPoC", "mne.decoding.SSD", "mne.decoding.Scaler", "mne.decoding.SlidingEstimator", "mne.decoding.TemporalFilter", "mne.decoding.TimeDelayingRidge", "mne.decoding.TimeFrequency", "mne.decoding.UnsupervisedSpatialFilter", "mne.decoding.Vectorizer", "mne.decoding.compute_ems", "mne.decoding.cross_val_multiscore", "mne.decoding.get_coef", "mne.dig_mri_distances", "mne.dipole.get_phantom_dipoles", "mne.epochs.average_movements", "mne.epochs.combine_event_ids", "mne.epochs.equalize_epoch_counts", "mne.epochs.make_metadata", "mne.equalize_channels", "mne.event.define_target_events", "mne.event.match_event_names", "mne.event.shift_time_events", "mne.events_from_annotations", "mne.export.export_epochs", "mne.export.export_evokeds", "mne.export.export_evokeds_mff", "mne.export.export_raw", "mne.extract_label_time_course", "mne.filter.construct_iir_filter", "mne.filter.create_filter", "mne.filter.estimate_ringing_samples", "mne.filter.filter_data", "mne.filter.notch_filter", "mne.filter.resample", "mne.find_events", "mne.find_stim_steps", "mne.fit_dipole", "mne.forward.compute_depth_prior", "mne.forward.compute_orient_prior", "mne.forward.restrict_forward_to_label", "mne.forward.restrict_forward_to_stc", "mne.get_config", "mne.get_config_path", "mne.get_head_surf", "mne.get_meg_helmet_surf", "mne.get_montage_volume_labels", "mne.get_volume_labels_from_aseg", "mne.get_volume_labels_from_src", "mne.grade_to_tris", "mne.grade_to_vertices", "mne.grand_average", "mne.grow_labels", "mne.gui.coregistration", "mne.head_to_mni", "mne.head_to_mri", "mne.inverse_sparse.gamma_map", "mne.inverse_sparse.make_stc_from_dipoles", "mne.inverse_sparse.mixed_norm", "mne.inverse_sparse.tf_mixed_norm", "mne.io.BaseRaw", "mne.io.Raw", "mne.io.RawArray", "mne.io.anonymize_info", "mne.io.get_channel_type_constants", "mne.io.kit.read_mrk", "mne.io.read_fiducials", "mne.io.read_info", "mne.io.read_raw", "mne.io.read_raw_artemis123", "mne.io.read_raw_bdf", "mne.io.read_raw_boxy", "mne.io.read_raw_brainvision", "mne.io.read_raw_bti", "mne.io.read_raw_cnt", "mne.io.read_raw_ctf", "mne.io.read_raw_curry", "mne.io.read_raw_edf", "mne.io.read_raw_eeglab", "mne.io.read_raw_egi", "mne.io.read_raw_eximia", "mne.io.read_raw_eyelink", "mne.io.read_raw_fieldtrip", "mne.io.read_raw_fif", "mne.io.read_raw_fil", "mne.io.read_raw_gdf", "mne.io.read_raw_hitachi", "mne.io.read_raw_kit", "mne.io.read_raw_nedf", "mne.io.read_raw_nicolet", "mne.io.read_raw_nihon", "mne.io.read_raw_nirx", "mne.io.read_raw_nsx", "mne.io.read_raw_persyst", "mne.io.read_raw_snirf", "mne.io.show_fiff", "mne.io.write_fiducials", "mne.io.write_info", "mne.label.select_sources", "mne.label_sign_flip", "mne.labels_to_stc", "mne.make_ad_hoc_cov", "mne.make_bem_model", "mne.make_bem_solution", "mne.make_field_map", "mne.make_fixed_length_epochs", "mne.make_fixed_length_events", "mne.make_forward_dipole", "mne.make_forward_solution", "mne.make_sphere_model", "mne.match_channel_orders", "mne.merge_events", "mne.minimum_norm.InverseOperator", "mne.minimum_norm.apply_inverse", "mne.minimum_norm.apply_inverse_cov", "mne.minimum_norm.apply_inverse_epochs", "mne.minimum_norm.apply_inverse_raw", "mne.minimum_norm.apply_inverse_tfr_epochs", "mne.minimum_norm.compute_rank_inverse", "mne.minimum_norm.compute_source_psd", "mne.minimum_norm.compute_source_psd_epochs", "mne.minimum_norm.estimate_snr", "mne.minimum_norm.get_cross_talk", "mne.minimum_norm.get_point_spread", "mne.minimum_norm.make_inverse_operator", "mne.minimum_norm.make_inverse_resolution_matrix", "mne.minimum_norm.prepare_inverse_operator", "mne.minimum_norm.read_inverse_operator", "mne.minimum_norm.resolution_metrics", "mne.minimum_norm.source_band_induced_power", "mne.minimum_norm.source_induced_power", "mne.minimum_norm.write_inverse_operator", "mne.morph_labels", "mne.morph_source_spaces", "mne.open_docs", "mne.open_report", "mne.parse_config", "mne.pick_channels", "mne.pick_channels_cov", "mne.pick_channels_forward", "mne.pick_channels_regexp", "mne.pick_events", "mne.pick_info", "mne.pick_types", "mne.pick_types_forward", "mne.preprocessing.EOGRegression", "mne.preprocessing.ICA", "mne.preprocessing.Xdawn", "mne.preprocessing.annotate_amplitude", "mne.preprocessing.annotate_break", "mne.preprocessing.annotate_movement", "mne.preprocessing.annotate_muscle_zscore", "mne.preprocessing.annotate_nan", "mne.preprocessing.compute_average_dev_head_t", "mne.preprocessing.compute_bridged_electrodes", "mne.preprocessing.compute_current_source_density", "mne.preprocessing.compute_fine_calibration", "mne.preprocessing.compute_maxwell_basis", "mne.preprocessing.compute_proj_ecg", "mne.preprocessing.compute_proj_eog", "mne.preprocessing.compute_proj_hfc", "mne.preprocessing.corrmap", "mne.preprocessing.cortical_signal_suppression", "mne.preprocessing.create_ecg_epochs", "mne.preprocessing.create_eog_epochs", "mne.preprocessing.equalize_bads", "mne.preprocessing.eyetracking.Calibration", "mne.preprocessing.eyetracking.interpolate_blinks", "mne.preprocessing.eyetracking.read_eyelink_calibration", "mne.preprocessing.eyetracking.set_channel_types_eyetrack", "mne.preprocessing.find_bad_channels_maxwell", "mne.preprocessing.find_ecg_events", "mne.preprocessing.find_eog_events", "mne.preprocessing.fix_stim_artifact", "mne.preprocessing.ica_find_ecg_events", "mne.preprocessing.ica_find_eog_events", "mne.preprocessing.ieeg.make_montage_volume", "mne.preprocessing.ieeg.project_sensors_onto_brain", "mne.preprocessing.ieeg.warp_montage", "mne.preprocessing.infomax", "mne.preprocessing.interpolate_bridged_electrodes", "mne.preprocessing.maxwell_filter", "mne.preprocessing.maxwell_filter_prepare_emptyroom", "mne.preprocessing.nirs.beer_lambert_law", "mne.preprocessing.nirs.optical_density", "mne.preprocessing.nirs.scalp_coupling_index", "mne.preprocessing.nirs.short_channels", "mne.preprocessing.nirs.source_detector_distances", "mne.preprocessing.nirs.temporal_derivative_distribution_repair", "mne.preprocessing.oversampled_temporal_projection", "mne.preprocessing.peak_finder", "mne.preprocessing.read_eog_regression", "mne.preprocessing.read_fine_calibration", "mne.preprocessing.read_ica", "mne.preprocessing.read_ica_eeglab", "mne.preprocessing.realign_raw", "mne.preprocessing.regress_artifact", "mne.preprocessing.write_fine_calibration", "mne.random_parcellation", "mne.read_annotations", "mne.read_bem_solution", "mne.read_bem_surfaces", "mne.read_cov", "mne.read_dipole", "mne.read_epochs", "mne.read_epochs_eeglab", "mne.read_epochs_fieldtrip", "mne.read_epochs_kit", "mne.read_events", "mne.read_evoked_besa", "mne.read_evoked_fieldtrip", "mne.read_evokeds", "mne.read_evokeds_mff", "mne.read_forward_solution", "mne.read_freesurfer_lut", "mne.read_label", "mne.read_labels_from_annot", "mne.read_lta", "mne.read_morph_map", "mne.read_proj", "mne.read_reject_parameters", "mne.read_source_estimate", "mne.read_source_morph", "mne.read_source_spaces", "mne.read_surface", "mne.read_talxfm", "mne.read_trans", "mne.read_tri", "mne.read_vectorview_selection", "mne.rename_channels", "mne.scale_bem", "mne.scale_labels", "mne.scale_mri", "mne.scale_source_space", "mne.sensitivity_map", "mne.set_bipolar_reference", "mne.set_cache_dir", "mne.set_config", "mne.set_eeg_reference", "mne.set_log_file", "mne.set_log_level", "mne.set_memmap_min_size", "mne.setup_source_space", "mne.setup_volume_source_space", "mne.simulation.SourceSimulator", "mne.simulation.add_chpi", "mne.simulation.add_ecg", "mne.simulation.add_eog", "mne.simulation.add_noise", "mne.simulation.metrics.cosine_score", "mne.simulation.metrics.f1_score", "mne.simulation.metrics.peak_position_error", "mne.simulation.metrics.precision_score", "mne.simulation.metrics.recall_score", "mne.simulation.metrics.region_localization_error", "mne.simulation.metrics.roc_auc_score", "mne.simulation.metrics.spatial_deviation_error", "mne.simulation.select_source_in_label", "mne.simulation.simulate_evoked", "mne.simulation.simulate_raw", "mne.simulation.simulate_sparse_stc", "mne.simulation.simulate_stc", "mne.source_space.compute_distance_to_sensors", "mne.source_space.get_decimated_surfaces", "mne.spatial_dist_adjacency", "mne.spatial_inter_hemi_adjacency", "mne.spatial_src_adjacency", "mne.spatial_tris_adjacency", "mne.spatio_temporal_dist_adjacency", "mne.spatio_temporal_src_adjacency", "mne.spatio_temporal_tris_adjacency", "mne.split_label", "mne.stats.bonferroni_correction", "mne.stats.bootstrap_confidence_interval", "mne.stats.combine_adjacency", "mne.stats.f_mway_rm", "mne.stats.f_oneway", "mne.stats.f_threshold_mway_rm", "mne.stats.fdr_correction", "mne.stats.linear_regression", "mne.stats.linear_regression_raw", "mne.stats.permutation_cluster_1samp_test", "mne.stats.permutation_cluster_test", "mne.stats.permutation_t_test", "mne.stats.spatio_temporal_cluster_1samp_test", "mne.stats.spatio_temporal_cluster_test", "mne.stats.summarize_clusters_stc", "mne.stats.ttest_1samp_no_p", "mne.stats.ttest_ind_no_p", "mne.stc_near_sensors", "mne.stc_to_label", "mne.surface.complete_surface_info", "mne.surface.read_curvature", "mne.sys_info", "mne.time_frequency.AverageTFR", "mne.time_frequency.CrossSpectralDensity", "mne.time_frequency.EpochsSpectrum", "mne.time_frequency.EpochsSpectrumArray", "mne.time_frequency.EpochsTFR", "mne.time_frequency.Spectrum", "mne.time_frequency.SpectrumArray", "mne.time_frequency.csd_array_fourier", "mne.time_frequency.csd_array_morlet", "mne.time_frequency.csd_array_multitaper", "mne.time_frequency.csd_fourier", "mne.time_frequency.csd_morlet", "mne.time_frequency.csd_multitaper", "mne.time_frequency.csd_tfr", "mne.time_frequency.dpss_windows", "mne.time_frequency.fit_iir_model_raw", "mne.time_frequency.fwhm", "mne.time_frequency.istft", "mne.time_frequency.morlet", "mne.time_frequency.pick_channels_csd", "mne.time_frequency.psd_array_multitaper", "mne.time_frequency.psd_array_welch", "mne.time_frequency.read_csd", "mne.time_frequency.read_spectrum", "mne.time_frequency.read_tfrs", "mne.time_frequency.stft", "mne.time_frequency.stftfreq", "mne.time_frequency.tfr.cwt", "mne.time_frequency.tfr.morlet", "mne.time_frequency.tfr_array_morlet", "mne.time_frequency.tfr_array_multitaper", "mne.time_frequency.tfr_array_stockwell", "mne.time_frequency.tfr_morlet", "mne.time_frequency.tfr_multitaper", "mne.time_frequency.tfr_stockwell", "mne.time_frequency.write_tfrs", "mne.transform_surface_to", "mne.transforms.Transform", "mne.transforms.apply_volume_registration", "mne.transforms.apply_volume_registration_points", "mne.transforms.compute_volume_registration", "mne.transforms.quat_to_rot", "mne.transforms.read_ras_mni_t", "mne.transforms.rot_to_quat", "mne.use_coil_def", "mne.use_log_level", "mne.utils.deprecated", "mne.utils.warn", "mne.verbose", "mne.vertex_to_mni", "mne.viz.Brain", "mne.viz.ClickableImage", "mne.viz.EvokedField", "mne.viz.Figure3D", "mne.viz.add_background_image", "mne.viz.centers_to_edges", "mne.viz.circular_layout", "mne.viz.close_3d_figure", "mne.viz.close_all_3d_figures", "mne.viz.compare_fiff", "mne.viz.create_3d_figure", "mne.viz.eyetracking.plot_gaze", "mne.viz.get_3d_backend", "mne.viz.get_brain_class", "mne.viz.get_browser_backend", "mne.viz.iter_topography", "mne.viz.link_brains", "mne.viz.mne_analyze_colormap", "mne.viz.plot_alignment", "mne.viz.plot_arrowmap", "mne.viz.plot_bem", "mne.viz.plot_brain_colorbar", "mne.viz.plot_bridged_electrodes", "mne.viz.plot_ch_adjacency", "mne.viz.plot_channel_labels_circle", "mne.viz.plot_chpi_snr", "mne.viz.plot_compare_evokeds", "mne.viz.plot_cov", "mne.viz.plot_csd", "mne.viz.plot_dipole_amplitudes", "mne.viz.plot_dipole_locations", "mne.viz.plot_drop_log", "mne.viz.plot_epochs", "mne.viz.plot_epochs_image", "mne.viz.plot_epochs_psd_topomap", "mne.viz.plot_events", "mne.viz.plot_evoked", "mne.viz.plot_evoked_field", "mne.viz.plot_evoked_image", "mne.viz.plot_evoked_joint", "mne.viz.plot_evoked_topo", "mne.viz.plot_evoked_topomap", "mne.viz.plot_evoked_white", "mne.viz.plot_filter", "mne.viz.plot_head_positions", "mne.viz.plot_ica_components", "mne.viz.plot_ica_overlay", "mne.viz.plot_ica_properties", "mne.viz.plot_ica_scores", "mne.viz.plot_ica_sources", "mne.viz.plot_ideal_filter", "mne.viz.plot_layout", "mne.viz.plot_montage", "mne.viz.plot_projs_joint", "mne.viz.plot_projs_topomap", "mne.viz.plot_raw", "mne.viz.plot_raw_psd", "mne.viz.plot_regression_weights", "mne.viz.plot_sensors", "mne.viz.plot_snr_estimate", "mne.viz.plot_source_estimates", "mne.viz.plot_sparse_source_estimates", "mne.viz.plot_tfr_topomap", "mne.viz.plot_topo_image_epochs", "mne.viz.plot_topomap", "mne.viz.plot_vector_source_estimates", "mne.viz.plot_volume_source_estimates", "mne.viz.set_3d_backend", "mne.viz.set_3d_options", "mne.viz.set_3d_title", "mne.viz.set_3d_view", "mne.viz.set_browser_backend", "mne.viz.snapshot_brain_montage", "mne.viz.ui_events.ColormapRange", "mne.viz.ui_events.Contours", "mne.viz.ui_events.FigureClosing", "mne.viz.ui_events.PlaybackSpeed", "mne.viz.ui_events.TimeChange", "mne.viz.ui_events.UIEvent", "mne.viz.ui_events.VertexSelect", "mne.viz.ui_events.disable_ui_events", "mne.viz.ui_events.link", "mne.viz.ui_events.publish", "mne.viz.ui_events.subscribe", "mne.viz.ui_events.unlink", "mne.viz.ui_events.unsubscribe", "mne.viz.use_3d_backend", "mne.viz.use_browser_backend", "mne.what", "mne.write_bem_solution", "mne.write_bem_surfaces", "mne.write_cov", "mne.write_events", "mne.write_evokeds", "mne.write_forward_solution", "mne.write_head_bem", "mne.write_label", "mne.write_labels_to_annot", "mne.write_proj", "mne.write_source_spaces", "mne.write_surface", "mne.write_trans", "Frequently Asked Questions (FAQ)", "Getting help", "Getting started with Python", "Migrating from other analysis software", "MNE", "Advanced setup", "Testing your installation", "Installing FreeSurfer", "Installing MNE-Python", "MNE-Python installers", "Install via <code class=\"code docutils literal notranslate\"><span class=\"pre\">pip</span></code> or <code class=\"code docutils literal notranslate\"><span class=\"pre\">conda</span></code>", "Installing Python", "Installing MNE-C", "Overview of the MNE tools suite", "Updating MNE-Python", "Martinos Center setup", "MNE with CPP", "Archived documentation for old versions", "Current steering council and institutional partners", "Unused API Entries", "Computation times"], "terms": {"3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955], "8": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955], "As": [0, 30, 64, 69, 97, 114, 121, 139, 149, 162, 166, 169, 171, 175, 176, 177, 183, 186, 192, 193, 194, 195, 196, 198, 201, 206, 215, 218, 222, 223, 226, 227, 228, 229, 231, 232, 234, 235, 237, 240, 243, 244, 245, 246, 250, 257, 259, 265, 268, 270, 301, 302, 310, 312, 316, 320, 491, 512, 568, 580, 650, 769, 778, 833, 859], "0": [0, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 269, 270, 273, 274, 276, 277, 278, 309, 310, 312, 313, 316, 317, 319, 320, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 364, 365, 367, 372, 373, 374, 375, 380, 381, 382, 385, 389, 392, 394, 396, 398, 403, 408, 410, 411, 412, 413, 416, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 437, 438, 441, 450, 458, 475, 476, 482, 483, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 502, 503, 504, 507, 508, 510, 512, 515, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 533, 536, 539, 540, 541, 542, 545, 547, 548, 549, 550, 551, 559, 560, 561, 562, 566, 567, 568, 570, 572, 585, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 602, 603, 608, 609, 610, 613, 614, 617, 618, 619, 620, 622, 626, 627, 628, 629, 634, 635, 636, 637, 638, 640, 643, 645, 646, 647, 648, 650, 652, 653, 654, 656, 659, 660, 661, 662, 663, 665, 668, 670, 672, 674, 675, 678, 679, 684, 692, 694, 695, 696, 700, 702, 704, 705, 713, 716, 718, 719, 721, 724, 727, 729, 731, 732, 733, 736, 737, 739, 741, 742, 747, 748, 749, 752, 761, 762, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 797, 798, 801, 802, 803, 804, 807, 809, 811, 812, 813, 814, 815, 816, 817, 818, 821, 822, 823, 828, 833, 834, 835, 837, 838, 839, 843, 844, 845, 851, 852, 853, 854, 859, 860, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 878, 879, 880, 882, 883, 884, 885, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 906, 924, 926, 930, 931, 933, 935, 940, 941, 955], "24": [0, 29, 36, 37, 39, 45, 47, 52, 54, 60, 61, 66, 71, 72, 73, 82, 97, 103, 107, 111, 120, 130, 133, 134, 135, 136, 139, 140, 141, 151, 170, 183, 188, 190, 195, 197, 207, 209, 212, 216, 218, 222, 223, 226, 236, 237, 242, 252, 254, 255, 256, 257, 259, 260, 263, 264, 265, 269, 270, 272, 277, 294, 302, 313, 316, 320, 325, 329, 331, 332, 333, 334, 336, 337, 341, 344, 364, 412, 418, 430, 432, 460, 491, 503, 513, 514, 515, 516, 526, 547, 550, 551, 559, 566, 575, 580, 594, 602, 635, 638, 778, 782, 783, 785, 786, 787, 788, 789, 821, 823, 830, 833, 845, 853, 858, 865, 882, 888, 889, 897, 900, 904, 926, 955], "function": [0, 3, 4, 6, 9, 13, 14, 16, 18, 21, 22, 24, 30, 34, 42, 45, 47, 53, 57, 62, 70, 71, 80, 81, 82, 83, 85, 103, 120, 121, 122, 128, 130, 139, 140, 141, 142, 143, 148, 149, 159, 161, 162, 166, 167, 170, 172, 175, 176, 177, 178, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 203, 204, 206, 208, 209, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 250, 251, 252, 257, 259, 260, 268, 269, 270, 274, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 314, 316, 317, 318, 319, 320, 321, 323, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 358, 364, 365, 366, 371, 373, 375, 380, 385, 386, 388, 389, 392, 397, 398, 400, 408, 409, 410, 411, 416, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 441, 443, 445, 457, 460, 483, 486, 488, 489, 490, 492, 493, 500, 502, 504, 507, 508, 509, 510, 512, 514, 515, 516, 517, 518, 522, 523, 524, 526, 540, 541, 543, 544, 548, 549, 550, 551, 557, 559, 560, 562, 563, 566, 568, 571, 572, 574, 576, 580, 581, 583, 584, 587, 589, 597, 601, 602, 605, 608, 609, 610, 611, 612, 613, 614, 616, 617, 624, 630, 632, 634, 635, 637, 638, 639, 644, 645, 646, 647, 648, 650, 652, 653, 655, 656, 658, 659, 662, 668, 670, 671, 672, 673, 674, 676, 677, 684, 687, 688, 691, 694, 695, 696, 697, 698, 699, 700, 702, 705, 710, 718, 721, 724, 727, 732, 733, 735, 736, 737, 746, 747, 749, 750, 767, 769, 770, 771, 772, 773, 774, 778, 779, 782, 783, 784, 785, 786, 787, 788, 789, 792, 795, 797, 803, 804, 813, 815, 816, 823, 827, 828, 829, 830, 831, 833, 845, 848, 850, 851, 852, 859, 861, 865, 867, 868, 873, 874, 875, 878, 881, 886, 887, 889, 890, 891, 893, 895, 897, 898, 899, 900, 904, 915, 916, 918, 938, 940, 945, 948, 949, 955], "ha": [0, 16, 24, 26, 29, 31, 35, 36, 53, 58, 68, 71, 75, 80, 97, 98, 101, 105, 109, 110, 120, 121, 130, 136, 141, 154, 162, 166, 168, 170, 171, 172, 175, 176, 177, 181, 182, 183, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 206, 207, 208, 209, 211, 215, 216, 217, 219, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 246, 250, 252, 255, 256, 260, 268, 270, 273, 274, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 322, 323, 324, 325, 328, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 355, 356, 357, 358, 364, 365, 370, 371, 376, 423, 427, 428, 429, 439, 440, 441, 447, 448, 449, 452, 453, 454, 456, 460, 461, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 483, 489, 490, 504, 518, 519, 521, 522, 524, 526, 527, 530, 545, 547, 548, 550, 551, 552, 559, 560, 572, 580, 598, 601, 602, 603, 605, 613, 618, 619, 634, 635, 636, 638, 650, 655, 666, 670, 677, 700, 701, 719, 722, 764, 765, 770, 771, 773, 774, 783, 784, 785, 786, 787, 788, 789, 792, 801, 803, 811, 812, 813, 815, 816, 820, 845, 859, 867, 869, 871, 872, 873, 874, 875, 878, 880, 882, 887, 888, 889, 890, 891, 893, 895, 897, 906, 907, 908, 909, 910, 912, 935, 936, 940, 945, 947, 948, 952], "been": [0, 26, 29, 35, 36, 56, 57, 58, 60, 61, 64, 65, 66, 67, 68, 70, 71, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 97, 98, 101, 105, 106, 110, 112, 113, 121, 143, 146, 147, 166, 168, 171, 175, 176, 177, 185, 186, 188, 192, 193, 195, 197, 198, 201, 202, 204, 205, 207, 208, 209, 215, 218, 219, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 268, 273, 274, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 312, 317, 320, 322, 323, 326, 330, 331, 332, 333, 334, 336, 338, 339, 340, 342, 343, 344, 345, 346, 347, 356, 357, 358, 364, 365, 371, 423, 427, 428, 439, 440, 441, 447, 448, 449, 452, 453, 454, 456, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 483, 490, 504, 526, 527, 545, 547, 548, 550, 551, 552, 559, 560, 572, 580, 603, 613, 634, 635, 636, 647, 670, 677, 700, 783, 784, 785, 786, 787, 788, 789, 813, 816, 845, 859, 865, 869, 871, 873, 875, 889, 935, 951], "move": [0, 16, 23, 24, 53, 87, 102, 106, 107, 143, 166, 171, 182, 187, 203, 219, 229, 232, 233, 236, 239, 263, 270, 274, 283, 295, 299, 310, 320, 323, 328, 331, 332, 333, 334, 340, 346, 347, 434, 483, 490, 518, 550, 551, 634, 635, 639, 667, 783, 785, 786, 788, 789, 821, 822, 823, 866, 867, 871, 874, 878, 887, 890, 895, 897, 899, 935], "separ": [0, 26, 36, 38, 42, 47, 58, 59, 71, 73, 97, 101, 107, 108, 109, 121, 134, 146, 151, 161, 166, 167, 168, 171, 172, 175, 176, 177, 181, 182, 186, 187, 188, 191, 194, 201, 210, 216, 218, 219, 223, 226, 229, 231, 232, 233, 234, 236, 241, 242, 243, 244, 245, 263, 265, 268, 277, 285, 286, 287, 288, 294, 295, 309, 312, 316, 317, 318, 319, 320, 323, 325, 326, 331, 332, 333, 334, 336, 340, 341, 364, 365, 392, 414, 416, 417, 420, 424, 425, 426, 431, 441, 456, 463, 483, 490, 504, 516, 545, 550, 551, 567, 570, 575, 593, 595, 635, 645, 646, 647, 648, 652, 659, 668, 670, 684, 694, 701, 732, 738, 739, 740, 741, 742, 743, 744, 745, 770, 771, 773, 774, 785, 786, 787, 788, 789, 790, 791, 792, 815, 816, 823, 833, 835, 839, 858, 859, 865, 866, 867, 870, 874, 875, 877, 882, 887, 888, 889, 935, 940, 945, 955], "packag": [0, 24, 53, 164, 172, 186, 191, 192, 216, 223, 227, 228, 229, 232, 252, 255, 287, 288, 295, 303, 307, 309, 317, 318, 319, 323, 325, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 442, 443, 486, 493, 496, 499, 500, 526, 539, 541, 550, 551, 592, 593, 596, 597, 608, 609, 618, 619, 640, 647, 648, 731, 732, 734, 735, 736, 748, 770, 771, 772, 773, 774, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 814, 815, 816, 835, 867, 870, 889, 939, 940, 941, 942, 944, 945, 946, 947, 948, 950], "mne_connect": [0, 24, 53, 73, 172, 857], "mne": [3, 4, 5, 6, 8, 9, 10, 13, 14, 15, 18, 19, 21, 22, 23, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 182, 183, 184, 185, 188, 189, 190, 193, 194, 195, 196, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 226, 228, 230, 231, 234, 235, 236, 238, 239, 241, 242, 244, 245, 246, 247, 251, 252, 253, 254, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 275, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 316, 317, 318, 319, 321, 322, 936, 938, 940, 941, 942, 946, 950, 953, 954, 955], "fetch": [3, 30, 163, 295, 303, 309, 317, 450, 455, 456, 457, 458, 459, 460, 465, 475, 476], "remot": [3, 30, 219, 240, 309, 312, 323, 457, 901, 940, 947], "see": [3, 12, 14, 21, 26, 30, 33, 34, 36, 45, 47, 48, 52, 53, 58, 60, 61, 65, 69, 70, 89, 90, 97, 98, 100, 102, 106, 108, 109, 110, 128, 140, 142, 146, 147, 148, 160, 161, 162, 163, 166, 167, 168, 169, 170, 172, 175, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 257, 258, 260, 263, 268, 270, 273, 278, 280, 283, 285, 291, 295, 298, 305, 308, 309, 310, 312, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 491, 493, 494, 496, 499, 500, 502, 504, 508, 510, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 533, 534, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 597, 598, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626, 627, 628, 629, 631, 634, 635, 636, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 677, 678, 679, 682, 683, 684, 685, 687, 689, 690, 691, 692, 693, 694, 696, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 727, 728, 731, 732, 734, 735, 736, 737, 746, 747, 748, 749, 751, 753, 754, 755, 756, 757, 758, 759, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 802, 803, 804, 807, 808, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 828, 832, 833, 835, 839, 842, 850, 851, 852, 859, 860, 863, 865, 866, 867, 868, 869, 870, 871, 873, 874, 875, 877, 878, 879, 880, 882, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 898, 899, 900, 904, 914, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 938, 940, 941, 947, 948, 953], "overview": [3, 181, 182, 191, 196, 197, 199, 200, 206, 228, 232, 234, 241, 242, 255, 269, 319, 331, 332, 333, 334, 336, 342, 422, 474, 524, 550, 551, 572, 595, 601, 602, 616, 632, 635, 652, 653, 660, 783, 815, 859, 865, 868, 882, 888, 904, 935, 955], "more": [3, 21, 26, 30, 44, 45, 54, 60, 68, 69, 70, 75, 80, 84, 97, 98, 100, 102, 107, 108, 109, 110, 112, 121, 131, 134, 137, 140, 141, 148, 149, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 181, 182, 184, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 203, 204, 206, 207, 210, 211, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 243, 244, 245, 246, 252, 255, 256, 257, 258, 260, 263, 265, 269, 270, 275, 276, 282, 283, 285, 286, 287, 288, 291, 292, 293, 294, 295, 297, 302, 303, 304, 305, 306, 307, 309, 310, 312, 316, 317, 318, 319, 320, 321, 325, 326, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 356, 364, 365, 373, 374, 397, 423, 427, 429, 434, 436, 441, 475, 476, 482, 483, 485, 487, 488, 490, 491, 495, 500, 502, 513, 514, 516, 517, 518, 519, 521, 522, 524, 525, 533, 542, 550, 551, 559, 568, 570, 576, 589, 593, 596, 602, 608, 609, 610, 618, 619, 634, 635, 637, 643, 645, 659, 666, 670, 679, 690, 692, 696, 697, 700, 710, 719, 721, 722, 724, 727, 735, 760, 764, 765, 770, 771, 772, 773, 774, 783, 785, 786, 787, 788, 789, 792, 795, 803, 812, 813, 814, 815, 816, 817, 830, 833, 835, 851, 852, 853, 854, 859, 863, 867, 870, 871, 873, 874, 878, 887, 890, 893, 895, 897, 898, 919, 920, 928, 935, 937, 939, 945, 947, 948, 955], "inform": [3, 30, 31, 35, 37, 47, 48, 52, 54, 55, 57, 60, 61, 64, 65, 66, 68, 69, 70, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 90, 95, 106, 110, 117, 119, 120, 121, 122, 128, 131, 134, 135, 137, 152, 157, 160, 161, 166, 167, 168, 169, 170, 172, 175, 176, 177, 182, 184, 185, 186, 188, 191, 192, 194, 196, 198, 201, 203, 205, 206, 207, 208, 215, 216, 217, 218, 219, 222, 223, 230, 231, 232, 233, 234, 235, 237, 240, 241, 242, 243, 245, 250, 251, 252, 255, 257, 260, 263, 265, 269, 270, 277, 278, 282, 283, 284, 285, 289, 291, 292, 293, 294, 295, 299, 301, 303, 304, 305, 306, 308, 309, 310, 312, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 351, 352, 364, 365, 366, 373, 374, 375, 377, 378, 379, 386, 387, 388, 392, 394, 395, 397, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 427, 429, 439, 440, 441, 443, 483, 485, 490, 491, 492, 502, 503, 507, 513, 514, 515, 516, 518, 519, 521, 522, 524, 527, 534, 535, 541, 545, 548, 549, 550, 551, 552, 556, 562, 571, 584, 586, 590, 593, 596, 597, 598, 603, 613, 631, 632, 634, 635, 645, 646, 649, 655, 658, 659, 666, 668, 670, 675, 676, 681, 683, 686, 695, 697, 698, 699, 717, 718, 724, 729, 731, 747, 748, 751, 770, 774, 780, 782, 783, 784, 785, 786, 787, 788, 789, 801, 812, 813, 814, 815, 816, 817, 822, 823, 828, 829, 833, 835, 848, 851, 855, 859, 860, 861, 863, 866, 870, 876, 877, 883, 887, 891, 897, 926, 936, 941, 944, 945, 948, 951, 955], "encod": [4, 35, 45, 169, 170, 176, 192, 194, 198, 215, 222, 223, 236, 237, 238, 273, 277, 278, 283, 292, 305, 312, 319, 320, 336, 415, 489, 559, 566, 574, 575, 576, 581, 688, 694, 933], "includ": [4, 30, 33, 54, 63, 67, 96, 97, 108, 123, 124, 126, 130, 131, 134, 137, 140, 141, 151, 158, 161, 163, 166, 168, 169, 170, 172, 175, 177, 178, 181, 185, 186, 188, 192, 193, 194, 195, 196, 197, 198, 206, 208, 211, 215, 216, 217, 219, 223, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 245, 246, 250, 255, 257, 258, 259, 265, 277, 278, 281, 283, 284, 285, 291, 292, 293, 295, 299, 301, 302, 303, 304, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 322, 324, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 363, 365, 378, 381, 382, 386, 395, 397, 423, 428, 429, 436, 439, 485, 490, 499, 504, 507, 511, 512, 521, 522, 524, 536, 537, 549, 550, 551, 553, 559, 562, 564, 566, 567, 568, 574, 578, 595, 597, 603, 605, 613, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 642, 643, 645, 646, 649, 651, 652, 653, 656, 658, 659, 662, 666, 669, 670, 676, 678, 681, 683, 685, 694, 696, 697, 700, 701, 702, 751, 768, 769, 778, 782, 783, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 802, 814, 816, 817, 823, 829, 833, 859, 865, 866, 867, 868, 869, 871, 872, 879, 880, 884, 888, 889, 895, 925, 935, 937, 938, 940, 943, 944, 945, 947, 948, 949, 951], "machin": [4, 33, 44, 121, 122, 207, 223, 225, 227, 228, 277, 283, 286, 318, 336, 349, 423, 646, 659, 670, 955], "learn": [4, 34, 35, 42, 44, 45, 47, 97, 144, 169, 187, 188, 192, 223, 225, 227, 228, 232, 277, 282, 283, 285, 289, 291, 293, 298, 309, 317, 318, 423, 487, 489, 491, 492, 493, 494, 496, 497, 498, 500, 501, 635, 668, 935, 948, 955], "recept": [4, 43, 46, 53, 191, 224, 225, 277, 317, 336, 380, 396, 443, 489, 495, 523, 551, 897, 955], "field": [4, 29, 30, 31, 33, 43, 46, 48, 52, 53, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 96, 105, 106, 107, 117, 121, 136, 140, 144, 146, 148, 152, 155, 157, 168, 170, 175, 182, 184, 185, 188, 191, 192, 195, 202, 203, 204, 205, 208, 209, 215, 216, 218, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 243, 245, 246, 250, 252, 260, 274, 277, 280, 282, 283, 284, 285, 286, 288, 292, 293, 294, 295, 299, 301, 302, 307, 312, 316, 317, 319, 324, 328, 331, 332, 333, 334, 336, 364, 365, 380, 387, 396, 443, 489, 495, 515, 523, 526, 550, 551, 552, 563, 571, 593, 602, 603, 649, 650, 670, 678, 695, 699, 702, 727, 769, 814, 817, 833, 835, 852, 859, 866, 869, 870, 872, 874, 875, 877, 896, 897, 905, 935, 942, 955], "assist": [4, 217, 320, 940, 947], "model": [4, 14, 29, 31, 33, 37, 38, 39, 44, 48, 52, 57, 58, 62, 67, 68, 76, 82, 100, 128, 132, 133, 136, 140, 143, 148, 161, 167, 177, 181, 182, 185, 186, 187, 188, 190, 196, 197, 198, 201, 202, 208, 209, 210, 211, 212, 217, 218, 219, 223, 231, 232, 240, 252, 259, 274, 277, 280, 284, 285, 287, 291, 292, 294, 297, 302, 304, 305, 317, 319, 328, 329, 331, 333, 334, 335, 336, 339, 341, 342, 344, 345, 346, 347, 364, 365, 370, 372, 375, 410, 423, 429, 433, 442, 483, 487, 489, 490, 493, 495, 500, 501, 524, 526, 545, 550, 556, 591, 592, 596, 597, 598, 601, 602, 603, 604, 613, 632, 634, 644, 649, 655, 666, 680, 689, 691, 692, 708, 717, 731, 732, 740, 745, 769, 786, 789, 798, 827, 833, 851, 853, 875, 890, 903, 922, 935, 941, 942, 945, 947, 948, 955], "fit": [4, 13, 29, 30, 33, 34, 36, 37, 38, 39, 41, 42, 44, 47, 50, 66, 67, 71, 76, 85, 97, 98, 100, 101, 103, 105, 106, 107, 109, 114, 128, 138, 143, 151, 163, 167, 177, 178, 182, 184, 191, 192, 196, 198, 203, 205, 209, 210, 211, 212, 213, 214, 216, 219, 223, 227, 230, 231, 234, 235, 236, 237, 239, 259, 277, 278, 283, 284, 285, 286, 288, 289, 291, 293, 294, 295, 297, 300, 301, 302, 305, 306, 307, 308, 309, 317, 320, 323, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 341, 346, 367, 369, 373, 374, 380, 410, 411, 412, 413, 416, 420, 421, 422, 434, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 502, 504, 512, 522, 526, 550, 551, 563, 593, 596, 602, 632, 634, 635, 636, 639, 642, 644, 645, 646, 650, 659, 660, 670, 700, 732, 747, 768, 783, 785, 786, 787, 788, 789, 798, 833, 852, 859, 863, 867, 869, 871, 874, 875, 878, 879, 880, 882, 885, 887, 889, 890, 891, 895, 897, 935, 938, 951, 955], "io": [5, 14, 15, 26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 52, 54, 55, 58, 59, 60, 68, 71, 72, 75, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 148, 149, 151, 155, 158, 159, 161, 163, 166, 167, 168, 170, 171, 172, 175, 177, 178, 182, 183, 184, 185, 186, 188, 192, 193, 194, 195, 196, 197, 198, 203, 206, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 257, 258, 259, 260, 263, 265, 268, 269, 270, 273, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 316, 317, 318, 320, 323, 324, 325, 330, 331, 332, 333, 334, 336, 341, 348, 350, 363, 434, 456, 488, 516, 518, 521, 597, 635, 643, 647, 648, 649, 659, 670, 783, 787, 788, 789, 803, 833, 880, 935, 938, 940, 945, 954, 955], "fif": [5, 6, 27, 29, 31, 33, 36, 37, 39, 40, 41, 42, 44, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 89, 91, 93, 95, 96, 98, 99, 100, 101, 103, 105, 106, 107, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 157, 158, 159, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 198, 202, 203, 204, 205, 206, 207, 208, 209, 216, 217, 218, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 251, 252, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 273, 274, 282, 283, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 301, 302, 303, 307, 308, 309, 312, 316, 317, 320, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 341, 344, 372, 380, 402, 434, 435, 436, 504, 513, 514, 515, 516, 533, 550, 551, 572, 576, 586, 593, 597, 616, 620, 635, 645, 659, 666, 670, 682, 688, 690, 691, 692, 693, 697, 700, 702, 708, 712, 715, 719, 722, 748, 751, 778, 820, 822, 833, 851, 921, 923, 924, 925, 926, 927, 928, 931, 932, 934, 948, 951, 955], "file": [5, 14, 25, 26, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 75, 82, 85, 89, 90, 93, 95, 96, 97, 98, 99, 100, 101, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 119, 120, 121, 123, 124, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 151, 155, 156, 158, 159, 161, 163, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 197, 200, 203, 206, 207, 208, 209, 210, 211, 214, 215, 217, 218, 219, 221, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 246, 248, 249, 251, 252, 254, 257, 258, 259, 260, 262, 263, 265, 267, 269, 272, 273, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 317, 319, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 355, 368, 371, 372, 375, 376, 377, 380, 381, 386, 388, 389, 392, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 411, 413, 426, 431, 432, 434, 435, 436, 442, 450, 455, 456, 457, 458, 464, 475, 476, 502, 504, 512, 513, 514, 515, 516, 524, 525, 531, 532, 533, 535, 536, 540, 542, 549, 550, 551, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 593, 594, 596, 597, 608, 615, 616, 620, 624, 625, 634, 635, 645, 646, 647, 648, 657, 659, 666, 670, 680, 681, 682, 683, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 725, 726, 728, 732, 734, 735, 736, 748, 751, 760, 778, 781, 782, 783, 784, 785, 786, 787, 788, 789, 805, 806, 807, 818, 820, 822, 827, 833, 842, 851, 853, 888, 899, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 938, 940, 941, 947, 948, 951, 952, 955], "contain": [5, 30, 42, 44, 53, 57, 64, 67, 69, 79, 106, 114, 121, 128, 135, 139, 143, 155, 163, 166, 169, 170, 172, 175, 177, 181, 184, 188, 191, 192, 194, 195, 196, 197, 198, 201, 207, 209, 215, 216, 217, 218, 219, 229, 231, 232, 233, 234, 237, 238, 239, 240, 243, 244, 250, 252, 255, 268, 269, 270, 273, 282, 283, 284, 286, 287, 288, 289, 291, 292, 293, 294, 295, 299, 300, 301, 303, 304, 307, 308, 309, 316, 317, 318, 319, 320, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 351, 352, 356, 364, 365, 366, 371, 375, 376, 377, 380, 381, 382, 383, 386, 387, 388, 394, 403, 418, 423, 424, 425, 426, 427, 428, 429, 434, 435, 436, 437, 438, 439, 440, 441, 456, 460, 462, 463, 464, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 502, 504, 507, 510, 511, 512, 517, 524, 525, 526, 527, 531, 532, 533, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 550, 551, 558, 560, 561, 562, 563, 565, 567, 568, 569, 570, 571, 572, 575, 576, 577, 578, 579, 580, 582, 583, 587, 588, 591, 593, 595, 596, 613, 621, 624, 625, 630, 634, 635, 636, 638, 640, 650, 651, 655, 659, 665, 666, 667, 669, 670, 674, 676, 682, 683, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 699, 700, 701, 705, 708, 711, 713, 714, 716, 722, 724, 726, 727, 731, 732, 738, 739, 740, 741, 742, 743, 744, 745, 746, 749, 751, 752, 760, 762, 768, 770, 771, 773, 774, 775, 778, 779, 783, 784, 785, 786, 787, 788, 789, 797, 800, 808, 812, 813, 815, 816, 825, 833, 844, 851, 852, 853, 854, 859, 862, 863, 866, 867, 868, 869, 871, 872, 874, 875, 876, 878, 884, 887, 890, 891, 892, 893, 894, 895, 897, 898, 899, 925, 928, 930, 931, 933, 935, 938, 941], "epoch": [5, 14, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 53, 58, 59, 60, 62, 71, 72, 75, 82, 85, 88, 96, 97, 98, 99, 100, 105, 106, 109, 110, 114, 117, 119, 120, 122, 123, 124, 126, 127, 128, 130, 132, 133, 134, 135, 136, 137, 139, 140, 148, 150, 155, 156, 158, 161, 162, 167, 174, 176, 188, 193, 194, 195, 196, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 222, 223, 226, 227, 230, 233, 234, 237, 239, 240, 244, 245, 251, 252, 256, 257, 258, 259, 268, 269, 270, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 317, 318, 319, 323, 324, 325, 326, 330, 332, 333, 334, 336, 337, 341, 342, 348, 358, 359, 362, 381, 382, 385, 409, 422, 423, 424, 426, 427, 428, 430, 465, 483, 485, 488, 489, 490, 491, 492, 495, 496, 497, 498, 499, 508, 509, 512, 513, 524, 542, 547, 550, 551, 557, 588, 593, 594, 600, 601, 602, 603, 604, 605, 606, 608, 609, 613, 616, 618, 619, 630, 632, 634, 635, 636, 637, 643, 644, 647, 648, 652, 653, 654, 658, 662, 669, 670, 685, 693, 694, 695, 696, 697, 704, 708, 724, 727, 737, 747, 768, 769, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 803, 812, 813, 814, 815, 816, 817, 833, 844, 859, 864, 865, 866, 867, 878, 879, 880, 882, 886, 888, 889, 896, 935, 938, 954, 955], "tool": [5, 14, 22, 30, 53, 80, 81, 97, 106, 116, 166, 177, 181, 184, 187, 197, 217, 219, 226, 227, 229, 232, 234, 238, 256, 265, 270, 277, 291, 300, 304, 310, 312, 316, 320, 321, 338, 339, 342, 345, 346, 347, 550, 551, 591, 617, 935, 936, 944, 945, 947, 949, 951, 953], "work": [5, 53, 57, 95, 97, 102, 105, 109, 113, 149, 159, 163, 164, 165, 166, 170, 173, 174, 175, 176, 177, 181, 182, 186, 187, 192, 193, 194, 195, 199, 200, 201, 203, 204, 207, 210, 215, 217, 220, 221, 223, 226, 228, 230, 231, 232, 233, 234, 237, 238, 241, 242, 243, 245, 246, 248, 252, 257, 260, 263, 265, 268, 269, 270, 274, 277, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 297, 298, 303, 305, 307, 308, 309, 310, 312, 314, 317, 318, 319, 320, 321, 322, 325, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 380, 381, 384, 386, 391, 394, 396, 400, 406, 416, 422, 424, 428, 429, 430, 432, 435, 441, 452, 456, 459, 483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 506, 510, 512, 517, 518, 523, 524, 535, 545, 547, 548, 550, 551, 557, 561, 564, 568, 570, 589, 591, 592, 595, 597, 600, 601, 602, 603, 604, 605, 606, 608, 609, 613, 619, 626, 630, 631, 634, 635, 636, 648, 655, 656, 657, 658, 665, 670, 684, 693, 697, 702, 708, 712, 713, 714, 715, 731, 732, 760, 778, 783, 785, 786, 787, 788, 789, 833, 834, 837, 844, 851, 857, 859, 865, 867, 868, 873, 874, 878, 882, 887, 888, 890, 895, 897, 901, 903, 905, 941, 942, 946, 947, 948, 955], "data": [5, 6, 14, 19, 26, 27, 28, 32, 35, 36, 38, 40, 42, 43, 46, 48, 50, 52, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 108, 109, 110, 111, 113, 114, 118, 125, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 144, 145, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 164, 165, 169, 170, 171, 174, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 196, 197, 199, 200, 202, 205, 207, 208, 209, 210, 211, 212, 213, 214, 221, 223, 224, 225, 226, 227, 229, 232, 233, 234, 235, 236, 237, 241, 242, 248, 253, 254, 255, 257, 258, 262, 266, 267, 269, 271, 272, 273, 274, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 318, 319, 322, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 370, 371, 378, 379, 380, 381, 382, 384, 386, 388, 392, 394, 395, 396, 403, 405, 407, 410, 412, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 435, 439, 440, 441, 443, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 459, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 509, 510, 511, 512, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 535, 540, 542, 545, 547, 548, 549, 550, 551, 552, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 608, 609, 610, 613, 616, 617, 618, 619, 626, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 664, 666, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 684, 685, 688, 689, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 708, 710, 712, 714, 715, 724, 727, 731, 732, 733, 734, 735, 736, 737, 739, 741, 742, 743, 747, 749, 751, 755, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 778, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 803, 804, 812, 813, 814, 815, 816, 817, 821, 827, 828, 833, 835, 838, 842, 844, 848, 850, 851, 852, 853, 854, 856, 857, 859, 860, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 886, 887, 888, 889, 890, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 905, 906, 920, 926, 933, 934, 936, 938, 939, 942, 948, 951, 953, 955], "non": [6, 9, 21, 26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 50, 60, 66, 67, 68, 72, 76, 85, 97, 99, 100, 103, 108, 109, 110, 114, 120, 126, 136, 140, 141, 142, 148, 159, 162, 167, 168, 169, 170, 172, 176, 177, 184, 191, 192, 195, 197, 198, 201, 206, 207, 211, 212, 216, 217, 218, 223, 226, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 243, 250, 260, 261, 262, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 299, 303, 305, 307, 308, 309, 310, 316, 319, 320, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 353, 364, 365, 386, 422, 423, 427, 429, 483, 489, 490, 491, 495, 512, 518, 519, 521, 522, 524, 548, 550, 551, 567, 608, 615, 621, 626, 632, 634, 635, 636, 649, 650, 670, 671, 688, 694, 697, 717, 744, 762, 763, 770, 771, 773, 774, 778, 779, 783, 785, 786, 787, 788, 789, 815, 823, 833, 852, 863, 866, 867, 874, 878, 887, 890, 894, 895, 897, 935, 940, 948, 955], "format": [6, 30, 53, 60, 69, 70, 89, 93, 97, 141, 149, 161, 163, 166, 169, 175, 176, 177, 186, 191, 192, 194, 196, 197, 198, 202, 208, 215, 218, 219, 230, 232, 233, 234, 235, 238, 240, 243, 244, 245, 247, 255, 256, 257, 260, 273, 278, 283, 285, 287, 288, 291, 292, 294, 295, 303, 304, 306, 309, 312, 316, 317, 319, 323, 325, 328, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 380, 398, 399, 403, 405, 419, 420, 421, 443, 483, 490, 512, 513, 514, 515, 516, 549, 550, 551, 554, 557, 559, 563, 568, 573, 624, 630, 634, 635, 650, 652, 665, 688, 692, 697, 703, 713, 728, 729, 734, 735, 736, 748, 763, 770, 771, 773, 774, 783, 784, 785, 786, 787, 788, 789, 803, 804, 806, 828, 833, 850, 852, 867, 874, 878, 887, 890, 893, 895, 897, 898, 925, 933, 935, 948, 951, 955], "base": [7, 9, 15, 19, 29, 31, 33, 35, 37, 42, 47, 48, 53, 54, 58, 60, 61, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 80, 81, 84, 85, 88, 95, 97, 104, 109, 111, 117, 119, 121, 123, 126, 127, 130, 134, 136, 137, 139, 140, 141, 144, 146, 148, 158, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 184, 186, 187, 188, 191, 192, 195, 196, 198, 202, 203, 204, 205, 206, 207, 208, 216, 218, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 251, 252, 253, 255, 256, 257, 258, 259, 260, 263, 265, 268, 269, 270, 277, 278, 282, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 298, 299, 302, 303, 304, 308, 309, 312, 316, 317, 319, 325, 326, 328, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 380, 382, 386, 387, 392, 397, 400, 410, 411, 412, 413, 416, 422, 423, 424, 425, 428, 429, 433, 445, 476, 483, 485, 486, 489, 490, 491, 493, 494, 496, 497, 500, 504, 506, 509, 512, 514, 516, 518, 519, 521, 522, 524, 527, 534, 540, 542, 549, 550, 551, 553, 557, 568, 587, 593, 594, 597, 600, 603, 617, 632, 634, 635, 637, 638, 642, 643, 644, 645, 646, 649, 650, 652, 653, 659, 660, 670, 683, 684, 685, 697, 702, 704, 721, 731, 735, 736, 743, 756, 759, 768, 769, 770, 771, 772, 773, 774, 778, 779, 783, 785, 786, 787, 788, 789, 791, 794, 797, 804, 813, 815, 816, 818, 829, 833, 843, 846, 852, 854, 859, 864, 865, 867, 873, 874, 875, 876, 878, 880, 881, 882, 887, 888, 890, 892, 893, 895, 897, 898, 899, 911, 927, 935, 940, 941, 942, 944, 945, 946, 951, 955], "class": [7, 9, 14, 15, 36, 42, 45, 87, 96, 114, 121, 122, 141, 142, 163, 166, 168, 175, 177, 183, 191, 192, 194, 197, 198, 201, 222, 228, 229, 232, 243, 246, 250, 260, 271, 272, 274, 282, 283, 284, 285, 286, 288, 289, 291, 292, 294, 295, 296, 298, 299, 300, 301, 302, 303, 305, 308, 309, 316, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 355, 370, 380, 381, 434, 465, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 524, 549, 550, 551, 584, 601, 634, 635, 636, 655, 667, 733, 763, 783, 784, 785, 786, 787, 788, 789, 820, 821, 822, 823, 828, 829, 830, 833, 834, 835, 836, 846, 906, 907, 908, 909, 910, 911, 912, 949, 955], "bem": [8, 14, 29, 31, 33, 49, 52, 53, 66, 67, 69, 70, 71, 76, 95, 136, 153, 161, 162, 176, 181, 182, 185, 186, 189, 190, 191, 197, 202, 206, 207, 208, 209, 210, 211, 212, 217, 218, 235, 263, 264, 265, 274, 278, 280, 281, 282, 285, 286, 288, 289, 291, 292, 293, 295, 296, 300, 301, 303, 304, 308, 317, 319, 329, 341, 344, 434, 457, 482, 502, 526, 533, 591, 592, 593, 596, 597, 666, 689, 690, 713, 719, 721, 722, 732, 748, 851, 853, 922, 923, 928, 933, 947, 954, 955], "minimum_norm": [9, 14, 31, 33, 37, 54, 55, 56, 60, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 78, 80, 81, 83, 84, 85, 87, 117, 121, 131, 134, 135, 136, 137, 152, 192, 203, 204, 205, 207, 208, 218, 223, 233, 251, 252, 263, 265, 278, 284, 285, 287, 288, 289, 291, 292, 293, 294, 303, 305, 316, 319, 320, 954], "linear": [9, 28, 31, 32, 34, 35, 39, 43, 45, 46, 52, 53, 67, 71, 76, 80, 81, 87, 128, 134, 136, 137, 139, 147, 161, 162, 167, 184, 185, 192, 202, 203, 207, 208, 222, 223, 229, 231, 232, 233, 277, 280, 283, 284, 291, 292, 294, 297, 299, 304, 307, 308, 316, 317, 319, 326, 328, 331, 332, 333, 334, 336, 338, 339, 340, 342, 344, 345, 346, 347, 410, 422, 483, 487, 489, 490, 495, 498, 501, 518, 519, 521, 522, 550, 551, 592, 605, 607, 614, 617, 634, 635, 650, 662, 668, 697, 706, 734, 735, 736, 748, 768, 769, 778, 783, 785, 786, 788, 789, 821, 823, 833, 835, 852, 854, 859, 867, 868, 870, 874, 876, 878, 883, 887, 889, 890, 893, 895, 897, 898, 899, 935, 948, 955], "solver": [9, 31, 36, 37, 39, 41, 44, 53, 62, 66, 71, 72, 82, 85, 201, 223, 280, 282, 284, 285, 286, 287, 288, 291, 293, 295, 298, 300, 312, 328, 329, 333, 335, 336, 342, 526, 527, 547, 592, 617, 691, 700, 702, 769, 894, 945, 955], "l2": [9, 57, 66, 80, 81, 277, 547, 548, 617, 743, 797], "minimum": [9, 48, 57, 83, 97, 105, 109, 162, 166, 175, 177, 188, 192, 194, 197, 203, 205, 206, 228, 229, 234, 251, 263, 277, 283, 284, 285, 286, 289, 291, 292, 293, 294, 297, 298, 300, 301, 303, 316, 319, 326, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 360, 361, 362, 363, 364, 365, 410, 412, 413, 428, 516, 518, 519, 521, 522, 524, 526, 527, 550, 551, 597, 602, 603, 604, 605, 606, 608, 609, 613, 615, 617, 618, 619, 637, 638, 643, 652, 653, 659, 730, 740, 743, 745, 748, 776, 783, 790, 791, 792, 793, 794, 795, 796, 814, 817, 833, 859, 873, 889, 892, 906, 948], "norm": [9, 53, 57, 62, 73, 74, 75, 76, 82, 83, 85, 105, 110, 143, 175, 182, 188, 192, 203, 205, 211, 234, 251, 252, 277, 282, 286, 292, 297, 298, 300, 306, 316, 319, 328, 329, 331, 332, 333, 334, 335, 336, 342, 343, 344, 429, 527, 545, 546, 547, 548, 550, 551, 601, 602, 603, 604, 605, 606, 608, 609, 611, 612, 613, 615, 617, 618, 619, 691, 700, 702, 712, 740, 743, 745, 797, 862, 863, 892, 894, 948, 955], "estim": [9, 14, 22, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 277, 278, 282, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 312, 315, 317, 319, 323, 326, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 351, 352, 356, 357, 358, 359, 361, 362, 364, 365, 380, 388, 396, 410, 412, 416, 423, 427, 428, 429, 434, 435, 436, 439, 440, 441, 443, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 504, 517, 518, 520, 522, 523, 524, 526, 527, 530, 545, 546, 547, 548, 550, 551, 556, 587, 589, 590, 596, 598, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 616, 617, 618, 619, 622, 635, 636, 640, 644, 645, 652, 656, 660, 663, 668, 670, 682, 684, 685, 700, 702, 705, 710, 711, 712, 722, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 748, 750, 764, 768, 769, 775, 776, 778, 779, 785, 788, 790, 791, 792, 793, 794, 795, 804, 812, 813, 815, 816, 833, 851, 852, 858, 859, 860, 867, 875, 882, 889, 892, 893, 894, 897, 898, 899, 935, 942, 948, 955], "inverse_spars": [9, 14, 57, 61, 66, 72, 85, 201, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 299], "spars": [9, 29, 53, 62, 70, 72, 82, 146, 201, 255, 260, 263, 265, 277, 285, 286, 291, 292, 293, 299, 309, 320, 323, 328, 329, 333, 335, 336, 342, 343, 344, 376, 386, 397, 429, 441, 443, 527, 545, 546, 547, 548, 601, 602, 613, 691, 700, 702, 712, 749, 763, 769, 770, 771, 773, 774, 833, 862, 863, 894, 948, 955], "beamform": [9, 14, 53, 62, 77, 82, 86, 130, 191, 192, 213, 214, 252, 277, 284, 285, 286, 287, 288, 291, 292, 293, 294, 297, 299, 300, 302, 303, 305, 306, 307, 308, 317, 319, 328, 331, 333, 334, 335, 336, 342, 343, 344, 346, 423, 427, 429, 433, 441, 524, 526, 550, 603, 611, 613, 632, 691, 702, 712, 784, 787, 794, 796, 815, 833, 954, 955], "sourc": [9, 14, 24, 26, 27, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 54, 55, 61, 63, 66, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 123, 124, 126, 127, 128, 130, 132, 133, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 183, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 201, 205, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 256, 257, 258, 259, 260, 267, 268, 269, 270, 273, 274, 277, 280, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 317, 319, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 939, 941, 942, 945, 947, 948, 951, 955], "local": [9, 48, 52, 53, 59, 60, 61, 62, 66, 67, 68, 72, 73, 74, 75, 77, 80, 81, 82, 84, 85, 86, 95, 97, 110, 117, 119, 121, 136, 140, 143, 147, 176, 177, 178, 181, 184, 192, 197, 201, 205, 206, 210, 212, 214, 218, 223, 234, 238, 252, 277, 285, 291, 292, 295, 299, 303, 312, 319, 320, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 342, 346, 364, 365, 367, 369, 380, 384, 398, 411, 413, 422, 423, 427, 428, 433, 439, 440, 441, 443, 447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 490, 504, 524, 526, 527, 540, 545, 547, 548, 550, 551, 558, 596, 597, 601, 602, 603, 613, 617, 634, 635, 643, 650, 660, 665, 691, 700, 702, 715, 724, 727, 731, 740, 743, 745, 747, 783, 785, 786, 788, 789, 825, 833, 843, 851, 852, 860, 863, 867, 872, 874, 875, 878, 887, 890, 894, 895, 897, 903, 935, 940, 942, 947, 948, 955], "dipol": [9, 14, 29, 48, 52, 53, 54, 57, 60, 61, 62, 65, 66, 67, 68, 72, 77, 82, 85, 86, 87, 95, 109, 110, 119, 120, 121, 136, 146, 178, 181, 184, 191, 192, 195, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 218, 231, 250, 252, 277, 282, 284, 285, 288, 289, 291, 292, 294, 295, 302, 303, 304, 305, 316, 319, 320, 328, 330, 331, 332, 333, 334, 335, 336, 339, 342, 345, 346, 347, 364, 365, 366, 367, 369, 370, 379, 411, 422, 433, 443, 460, 504, 524, 526, 528, 545, 546, 547, 548, 550, 551, 596, 601, 602, 604, 613, 622, 632, 689, 691, 692, 700, 702, 715, 717, 731, 735, 736, 740, 743, 745, 747, 749, 783, 785, 786, 787, 788, 789, 833, 843, 851, 852, 862, 863, 894, 898, 903, 948, 951, 954, 955], "singl": [9, 27, 28, 32, 42, 44, 53, 59, 60, 62, 71, 82, 94, 97, 101, 109, 110, 113, 121, 128, 130, 132, 133, 134, 140, 144, 147, 150, 156, 166, 167, 168, 170, 171, 175, 176, 177, 184, 191, 192, 194, 195, 196, 198, 202, 204, 206, 209, 210, 215, 216, 217, 223, 226, 227, 229, 232, 233, 234, 235, 237, 238, 239, 243, 244, 250, 252, 255, 260, 261, 262, 265, 269, 270, 277, 278, 280, 283, 285, 286, 288, 289, 291, 294, 295, 297, 298, 299, 300, 302, 303, 309, 312, 316, 317, 320, 323, 325, 326, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 358, 359, 362, 364, 365, 372, 380, 382, 386, 387, 392, 422, 423, 428, 456, 483, 484, 490, 496, 499, 505, 509, 512, 524, 542, 550, 551, 567, 570, 571, 573, 588, 591, 594, 596, 598, 601, 602, 604, 606, 608, 609, 616, 626, 632, 634, 635, 640, 643, 650, 685, 693, 697, 704, 710, 717, 727, 732, 749, 763, 764, 766, 767, 768, 770, 771, 778, 783, 784, 785, 786, 787, 788, 789, 801, 811, 812, 813, 815, 816, 823, 833, 835, 851, 852, 853, 859, 863, 866, 867, 868, 869, 870, 871, 874, 875, 878, 885, 886, 887, 889, 890, 891, 895, 897, 918, 923, 935, 938, 955], "util": [10, 14, 18, 50, 120, 172, 206, 216, 278, 280, 282, 287, 288, 289, 295, 299, 309, 320, 331, 332, 513, 516, 550, 551, 828, 940, 947], "cuda": [10, 14, 197, 287, 288, 289, 299, 302, 331, 332, 333, 334, 485, 489, 494, 495, 521, 522, 523, 550, 551, 935, 945, 954], "step": [12, 30, 34, 37, 41, 44, 50, 67, 72, 85, 90, 95, 121, 126, 130, 136, 139, 147, 166, 168, 177, 178, 184, 187, 192, 193, 194, 196, 198, 217, 218, 223, 226, 227, 228, 229, 232, 234, 235, 237, 239, 240, 243, 255, 256, 270, 273, 277, 283, 292, 295, 299, 301, 304, 309, 310, 312, 316, 317, 320, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 356, 358, 410, 411, 412, 416, 483, 489, 498, 501, 524, 525, 541, 542, 548, 550, 551, 568, 630, 635, 645, 650, 659, 668, 733, 750, 770, 771, 773, 774, 775, 800, 808, 823, 833, 851, 859, 888, 899, 938, 941, 942, 947], "instruct": [12, 87, 143, 184, 187, 216, 238, 240, 287, 290, 292, 293, 309, 542, 935, 940, 941, 942, 943, 945, 947, 948, 949, 950], "us": [12, 13, 14, 23, 26, 28, 29, 30, 31, 33, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 62, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 84, 85, 86, 87, 88, 89, 93, 95, 96, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 119, 120, 122, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 154, 155, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 176, 177, 178, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 226, 227, 228, 229, 230, 231, 233, 234, 236, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 253, 255, 256, 257, 258, 260, 263, 264, 265, 268, 269, 270, 273, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 314, 317, 318, 319, 321, 324, 326, 347, 349, 351, 352, 353, 356, 358, 362, 363, 371, 372, 373, 374, 375, 376, 377, 385, 387, 388, 397, 407, 408, 415, 431, 439, 440, 442, 445, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 485, 488, 494, 496, 508, 510, 511, 513, 514, 515, 516, 521, 522, 527, 528, 533, 534, 538, 539, 541, 543, 544, 549, 552, 555, 560, 565, 575, 577, 581, 584, 585, 606, 610, 615, 620, 621, 627, 628, 637, 641, 645, 646, 663, 664, 665, 666, 667, 668, 671, 679, 683, 685, 695, 696, 698, 701, 706, 707, 716, 718, 719, 722, 725, 728, 729, 730, 734, 746, 753, 754, 756, 757, 758, 759, 760, 765, 780, 790, 791, 792, 797, 799, 800, 802, 803, 807, 808, 810, 811, 813, 814, 818, 819, 820, 821, 822, 823, 830, 831, 836, 842, 845, 847, 850, 861, 864, 865, 867, 869, 872, 874, 878, 879, 880, 881, 882, 885, 888, 889, 890, 891, 895, 896, 899, 900, 901, 904, 906, 913, 917, 918, 919, 922, 923, 924, 925, 926, 927, 929, 930, 931, 932, 934, 938, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 954, 955], "gui": [12, 14, 183, 184, 186, 278, 283, 285, 286, 288, 294, 295, 300, 301, 303, 304, 307, 309, 312, 316, 318, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 376, 550, 551, 635, 835, 865, 870, 882, 888, 893, 898, 935, 940, 945, 947, 948], "coregistr": [12, 14, 49, 53, 107, 182, 186, 187, 189, 190, 191, 207, 278, 285, 286, 288, 294, 295, 300, 301, 303, 304, 312, 316, 329, 336, 341, 344, 372, 376, 435, 442, 459, 502, 556, 593, 597, 666, 721, 751, 778, 822, 833, 851, 903, 955], "subject": [12, 30, 31, 33, 34, 35, 36, 37, 45, 48, 50, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 84, 85, 86, 87, 95, 98, 99, 106, 107, 109, 116, 117, 118, 122, 131, 136, 139, 140, 142, 143, 145, 152, 153, 154, 157, 160, 161, 162, 163, 166, 169, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 195, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 223, 226, 227, 228, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 251, 252, 255, 256, 257, 259, 260, 263, 264, 265, 266, 269, 270, 273, 274, 277, 278, 283, 284, 286, 287, 288, 289, 291, 292, 294, 295, 299, 303, 304, 305, 306, 312, 316, 318, 319, 320, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 364, 365, 371, 375, 376, 377, 380, 410, 411, 412, 413, 418, 420, 421, 429, 434, 435, 436, 442, 450, 455, 457, 458, 459, 460, 465, 475, 476, 502, 517, 533, 535, 537, 539, 541, 542, 543, 544, 550, 551, 552, 556, 587, 589, 591, 593, 597, 601, 602, 613, 621, 622, 635, 639, 650, 665, 666, 670, 687, 691, 697, 702, 704, 705, 707, 710, 714, 719, 720, 721, 722, 731, 732, 733, 735, 736, 737, 746, 748, 749, 760, 764, 766, 775, 778, 779, 823, 825, 832, 833, 851, 853, 858, 863, 864, 877, 891, 893, 898, 899, 929, 930, 935, 947, 955], "structur": [12, 29, 30, 34, 35, 36, 53, 67, 69, 85, 89, 90, 94, 97, 109, 121, 122, 139, 141, 151, 161, 163, 168, 172, 173, 174, 177, 179, 180, 181, 185, 191, 192, 193, 196, 197, 199, 200, 207, 211, 212, 213, 214, 216, 217, 219, 222, 232, 240, 244, 247, 248, 253, 254, 255, 256, 270, 277, 284, 286, 289, 309, 316, 317, 318, 319, 325, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 344, 345, 346, 347, 378, 379, 380, 388, 422, 442, 443, 459, 463, 524, 548, 550, 551, 556, 571, 595, 615, 626, 629, 631, 632, 646, 655, 666, 670, 693, 695, 699, 700, 710, 743, 753, 754, 755, 756, 757, 758, 759, 763, 783, 785, 786, 787, 788, 789, 804, 823, 833, 891, 942, 945, 948, 951, 955], "scale": [12, 29, 30, 31, 36, 42, 45, 48, 53, 54, 55, 56, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 80, 81, 83, 84, 85, 87, 92, 97, 101, 104, 111, 117, 121, 127, 128, 130, 131, 134, 135, 136, 137, 141, 142, 143, 146, 149, 159, 162, 163, 167, 168, 175, 177, 182, 183, 186, 192, 197, 203, 204, 205, 206, 207, 208, 209, 212, 217, 218, 219, 222, 223, 229, 231, 232, 234, 235, 240, 246, 251, 252, 263, 265, 269, 270, 273, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 299, 300, 302, 303, 304, 307, 319, 323, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 364, 365, 396, 406, 422, 423, 427, 428, 434, 439, 440, 441, 483, 490, 492, 504, 506, 517, 526, 527, 542, 544, 545, 547, 548, 550, 551, 561, 608, 609, 613, 615, 618, 619, 634, 635, 645, 646, 659, 670, 700, 719, 720, 721, 722, 735, 736, 747, 750, 783, 785, 786, 787, 788, 789, 797, 823, 833, 848, 850, 852, 859, 863, 865, 866, 867, 869, 871, 873, 874, 875, 876, 878, 883, 887, 888, 889, 890, 894, 895, 896, 897, 898, 955], "templat": [12, 119, 120, 153, 161, 181, 183, 189, 190, 191, 196, 202, 260, 277, 285, 288, 289, 291, 294, 295, 301, 304, 308, 319, 335, 336, 344, 351, 370, 380, 384, 385, 386, 396, 398, 402, 434, 443, 459, 508, 551, 566, 597, 650, 667, 689, 712, 732, 851, 903, 955], "which": [12, 22, 26, 29, 30, 31, 38, 42, 44, 45, 47, 52, 57, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 84, 87, 97, 101, 106, 107, 108, 109, 114, 121, 128, 130, 136, 139, 141, 142, 143, 146, 147, 149, 151, 155, 160, 161, 162, 163, 166, 167, 168, 169, 170, 172, 175, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 204, 206, 208, 210, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 277, 278, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 316, 317, 318, 319, 320, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 357, 364, 365, 373, 374, 380, 382, 389, 396, 398, 399, 400, 401, 402, 408, 409, 410, 412, 416, 418, 422, 423, 428, 429, 432, 436, 442, 443, 450, 456, 475, 483, 485, 490, 491, 494, 500, 502, 504, 507, 509, 512, 513, 514, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 534, 541, 542, 547, 548, 549, 550, 551, 552, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 587, 588, 589, 593, 594, 596, 602, 603, 611, 612, 615, 616, 620, 624, 634, 635, 636, 637, 643, 645, 646, 649, 650, 652, 653, 654, 655, 659, 666, 668, 670, 675, 684, 687, 693, 695, 699, 700, 701, 702, 704, 705, 707, 712, 713, 716, 717, 718, 719, 721, 722, 724, 725, 727, 732, 733, 737, 740, 743, 745, 746, 749, 751, 752, 760, 762, 763, 769, 775, 778, 779, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 801, 804, 807, 811, 812, 813, 815, 816, 818, 820, 823, 833, 834, 835, 837, 839, 840, 844, 850, 851, 853, 856, 858, 859, 861, 863, 865, 866, 867, 869, 870, 873, 874, 878, 880, 882, 887, 888, 889, 893, 895, 898, 902, 903, 905, 906, 907, 908, 909, 910, 911, 912, 914, 916, 918, 926, 927, 928, 930, 932, 933, 934, 935, 938, 940, 942, 944, 945, 946, 949, 951], "i": [12, 14, 23, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 47, 48, 52, 53, 54, 57, 58, 60, 64, 66, 67, 68, 69, 70, 71, 72, 73, 76, 78, 80, 85, 87, 90, 92, 94, 96, 97, 98, 99, 100, 101, 102, 105, 107, 108, 109, 113, 114, 117, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 151, 154, 155, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 195, 197, 198, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 363, 364, 365, 367, 369, 370, 372, 374, 375, 376, 380, 382, 385, 386, 388, 390, 391, 392, 393, 395, 397, 398, 399, 405, 407, 410, 411, 412, 416, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 436, 439, 440, 441, 442, 443, 445, 447, 448, 449, 450, 452, 453, 454, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 507, 508, 509, 510, 512, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 539, 540, 541, 542, 545, 547, 548, 549, 550, 551, 552, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 593, 594, 595, 596, 597, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 624, 625, 626, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 674, 675, 677, 678, 679, 684, 685, 687, 688, 690, 693, 694, 695, 696, 697, 698, 699, 700, 701, 704, 705, 707, 710, 713, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 753, 757, 758, 759, 760, 761, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 797, 798, 801, 803, 804, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 823, 827, 828, 829, 831, 832, 833, 834, 835, 837, 839, 842, 843, 844, 845, 847, 848, 851, 852, 853, 856, 858, 859, 860, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 906, 907, 908, 909, 910, 911, 912, 916, 925, 926, 928, 930, 933, 936, 937, 938, 941, 942, 944, 945, 949, 950, 951, 953], "avail": [12, 26, 27, 31, 33, 34, 38, 45, 47, 48, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 95, 98, 100, 103, 105, 107, 108, 109, 112, 113, 117, 119, 120, 121, 122, 128, 136, 143, 146, 147, 151, 157, 162, 166, 167, 168, 169, 170, 172, 175, 176, 177, 181, 182, 185, 188, 191, 192, 193, 194, 195, 198, 199, 202, 203, 204, 205, 206, 207, 210, 215, 216, 218, 219, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 256, 268, 273, 274, 282, 285, 286, 289, 303, 304, 305, 306, 309, 312, 317, 319, 320, 321, 323, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 371, 373, 374, 380, 400, 406, 442, 444, 450, 475, 476, 482, 483, 489, 490, 495, 502, 509, 531, 547, 550, 551, 593, 611, 612, 626, 627, 628, 634, 635, 650, 700, 707, 748, 779, 783, 784, 785, 786, 788, 789, 802, 815, 833, 852, 859, 865, 867, 869, 871, 874, 875, 878, 882, 885, 887, 888, 889, 890, 891, 893, 895, 897, 898, 919, 920, 935, 937, 940, 942, 947, 948, 949, 950, 952], "also": [12, 14, 30, 36, 45, 47, 53, 54, 55, 56, 58, 64, 65, 67, 68, 69, 71, 73, 87, 89, 96, 97, 98, 105, 106, 107, 109, 110, 121, 122, 128, 131, 134, 136, 139, 141, 143, 144, 147, 149, 154, 161, 164, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 206, 207, 208, 209, 210, 212, 215, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 256, 257, 259, 260, 263, 265, 268, 269, 270, 273, 274, 278, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 301, 303, 304, 306, 308, 309, 310, 312, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 364, 365, 372, 373, 374, 378, 380, 382, 390, 391, 395, 398, 408, 416, 423, 428, 429, 435, 439, 442, 450, 458, 483, 485, 490, 495, 499, 502, 504, 507, 518, 519, 521, 522, 523, 524, 526, 533, 536, 545, 547, 548, 550, 551, 559, 563, 572, 576, 593, 596, 597, 608, 609, 610, 613, 632, 634, 635, 637, 638, 644, 645, 647, 650, 651, 652, 653, 660, 661, 662, 663, 665, 666, 676, 678, 684, 685, 692, 700, 717, 718, 721, 727, 731, 732, 739, 748, 751, 769, 770, 775, 778, 783, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 813, 816, 822, 823, 831, 833, 835, 851, 852, 859, 860, 863, 865, 866, 867, 869, 870, 871, 872, 874, 875, 877, 878, 879, 885, 886, 887, 888, 889, 890, 891, 893, 895, 897, 899, 901, 935, 936, 937, 940, 944, 945, 946, 947, 948], "mne_gui_addon": [12, 164, 191, 307, 312], "locate_ieeg": [12, 295, 303, 304, 307], "project": [13, 14, 26, 29, 31, 34, 37, 38, 39, 40, 41, 42, 44, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 109, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 265, 269, 270, 273, 274, 277, 281, 282, 284, 285, 286, 288, 292, 293, 294, 295, 298, 299, 302, 303, 304, 305, 306, 307, 309, 311, 312, 314, 316, 317, 319, 326, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 345, 346, 347, 351, 352, 364, 365, 367, 369, 410, 412, 416, 423, 424, 425, 426, 428, 439, 441, 458, 491, 503, 524, 526, 527, 549, 550, 551, 572, 594, 596, 598, 601, 603, 613, 634, 635, 646, 647, 648, 649, 651, 659, 666, 670, 678, 685, 693, 702, 708, 723, 724, 727, 747, 760, 778, 784, 785, 788, 790, 791, 792, 793, 794, 795, 796, 833, 851, 852, 857, 860, 867, 869, 871, 873, 874, 878, 886, 887, 888, 889, 891, 893, 898, 904, 905, 920, 931, 948, 951, 954, 955], "channel": [13, 14, 26, 27, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 92, 94, 95, 96, 97, 98, 99, 100, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 117, 119, 120, 121, 122, 123, 124, 126, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 167, 168, 170, 172, 176, 178, 182, 183, 184, 185, 188, 191, 192, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 222, 223, 226, 230, 231, 233, 234, 236, 237, 239, 240, 241, 242, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 268, 269, 273, 274, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 318, 319, 323, 324, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 345, 346, 347, 348, 351, 352, 364, 365, 376, 378, 379, 410, 412, 414, 415, 418, 422, 423, 424, 425, 426, 427, 428, 439, 440, 441, 443, 451, 483, 485, 490, 491, 492, 494, 496, 499, 504, 508, 513, 515, 516, 521, 522, 524, 525, 526, 527, 535, 540, 545, 547, 548, 549, 550, 551, 553, 559, 561, 562, 563, 564, 566, 567, 568, 571, 574, 575, 576, 578, 581, 590, 593, 597, 599, 601, 603, 613, 626, 627, 628, 629, 631, 632, 633, 634, 635, 637, 640, 641, 643, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 669, 670, 671, 674, 675, 676, 678, 681, 683, 684, 685, 688, 694, 695, 696, 697, 699, 700, 701, 702, 717, 718, 723, 724, 727, 733, 735, 736, 737, 751, 763, 769, 770, 771, 773, 774, 778, 783, 784, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 802, 808, 812, 815, 816, 817, 833, 844, 848, 851, 852, 855, 856, 857, 859, 860, 861, 864, 865, 866, 867, 869, 871, 872, 873, 874, 875, 878, 879, 880, 881, 882, 884, 885, 886, 887, 888, 889, 890, 891, 895, 896, 897, 905, 914, 915, 916, 917, 918, 920, 935, 938, 945, 948, 954, 955], "modul": [13, 14, 15, 16, 19, 22, 29, 100, 149, 166, 168, 169, 171, 172, 175, 176, 177, 187, 192, 193, 194, 195, 196, 197, 198, 212, 216, 217, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 240, 243, 244, 245, 246, 250, 268, 270, 280, 285, 288, 295, 298, 299, 300, 301, 302, 309, 317, 320, 323, 416, 562, 629, 782, 830, 833, 935, 941, 948, 951], "dedic": [13, 177, 226, 232, 234, 243, 292, 309, 310, 550, 551, 888, 945], "manipul": [13, 53, 89, 166, 175, 191, 212, 247, 280, 317, 320, 432, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 594], "can": [13, 14, 23, 24, 30, 31, 33, 38, 39, 41, 42, 45, 47, 48, 50, 52, 53, 57, 58, 66, 67, 68, 69, 70, 71, 72, 73, 84, 85, 87, 88, 97, 98, 101, 102, 105, 106, 108, 109, 110, 114, 121, 122, 126, 128, 130, 136, 139, 140, 141, 142, 143, 146, 147, 148, 149, 154, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 206, 207, 208, 209, 210, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 256, 257, 258, 260, 263, 264, 265, 268, 269, 270, 273, 274, 277, 278, 281, 282, 283, 284, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 354, 357, 364, 365, 371, 372, 373, 374, 377, 378, 380, 382, 384, 385, 388, 389, 390, 391, 395, 396, 397, 398, 400, 403, 407, 408, 410, 411, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 456, 459, 460, 461, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 502, 504, 507, 508, 509, 510, 512, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 530, 533, 534, 535, 536, 539, 541, 542, 544, 545, 547, 548, 550, 551, 559, 563, 566, 567, 570, 571, 572, 574, 576, 580, 583, 584, 587, 589, 592, 593, 594, 596, 597, 600, 602, 608, 609, 611, 612, 613, 615, 619, 621, 622, 623, 624, 632, 633, 634, 635, 637, 638, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 669, 670, 671, 674, 676, 677, 678, 683, 684, 685, 688, 690, 693, 694, 695, 696, 699, 700, 701, 703, 705, 707, 713, 717, 718, 719, 721, 722, 724, 727, 729, 731, 732, 739, 746, 747, 748, 749, 751, 753, 755, 757, 758, 762, 763, 769, 770, 771, 772, 773, 774, 775, 776, 778, 779, 782, 783, 784, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 801, 808, 811, 813, 815, 816, 819, 821, 822, 823, 828, 830, 831, 833, 834, 835, 839, 842, 848, 851, 852, 853, 854, 855, 856, 857, 858, 859, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 885, 886, 887, 888, 889, 890, 891, 893, 895, 897, 898, 899, 901, 912, 918, 922, 923, 926, 928, 933, 940, 941, 945, 946, 947, 948, 949, 951], "set": [13, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 108, 109, 110, 112, 113, 114, 117, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 154, 155, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 172, 175, 176, 178, 181, 182, 184, 185, 186, 187, 188, 191, 192, 194, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 245, 250, 251, 252, 255, 258, 269, 270, 273, 274, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 299, 300, 301, 302, 303, 304, 306, 307, 308, 310, 312, 318, 319, 320, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 354, 355, 364, 365, 367, 369, 370, 371, 385, 393, 398, 409, 410, 423, 424, 426, 428, 429, 430, 434, 439, 445, 446, 447, 448, 449, 450, 452, 453, 454, 456, 458, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 506, 507, 508, 511, 512, 513, 516, 517, 518, 522, 524, 526, 539, 540, 541, 542, 547, 550, 551, 552, 559, 566, 567, 571, 574, 576, 581, 586, 587, 589, 591, 593, 595, 596, 597, 598, 600, 601, 604, 605, 606, 608, 609, 613, 618, 619, 621, 622, 623, 626, 634, 635, 636, 637, 638, 640, 647, 648, 649, 650, 652, 653, 655, 658, 659, 671, 683, 688, 694, 695, 699, 700, 701, 704, 707, 710, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 748, 760, 761, 765, 767, 769, 770, 771, 772, 773, 774, 778, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 801, 803, 804, 811, 812, 813, 814, 815, 816, 820, 823, 824, 826, 831, 832, 833, 835, 837, 844, 852, 854, 859, 862, 863, 865, 867, 870, 871, 872, 873, 874, 878, 880, 881, 882, 887, 888, 889, 890, 891, 893, 895, 897, 898, 899, 900, 901, 903, 904, 920, 935, 938, 940, 941, 945, 948, 955], "sensor": [13, 14, 24, 29, 30, 31, 37, 41, 42, 43, 46, 49, 51, 53, 54, 58, 60, 67, 68, 71, 75, 95, 97, 98, 104, 105, 106, 111, 114, 117, 119, 121, 122, 125, 129, 130, 136, 146, 147, 150, 152, 156, 158, 161, 170, 172, 176, 177, 182, 183, 184, 185, 188, 192, 194, 195, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 218, 226, 227, 229, 231, 232, 233, 235, 236, 237, 243, 252, 255, 256, 257, 262, 268, 271, 272, 273, 274, 277, 278, 280, 282, 283, 284, 286, 287, 288, 289, 291, 292, 293, 295, 296, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 312, 316, 317, 318, 319, 324, 326, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 351, 352, 364, 365, 366, 373, 374, 378, 379, 380, 381, 386, 387, 388, 389, 391, 392, 394, 395, 396, 397, 406, 408, 411, 413, 418, 423, 424, 425, 426, 427, 433, 439, 440, 441, 443, 483, 484, 485, 486, 487, 490, 491, 492, 493, 498, 499, 501, 502, 503, 524, 526, 527, 534, 549, 550, 551, 552, 556, 558, 561, 562, 564, 576, 586, 590, 596, 597, 598, 603, 605, 608, 609, 613, 631, 632, 634, 635, 636, 640, 646, 649, 650, 658, 665, 666, 670, 675, 676, 678, 681, 693, 696, 697, 702, 715, 717, 718, 723, 735, 736, 747, 748, 751, 761, 763, 767, 768, 770, 771, 772, 773, 774, 778, 783, 784, 785, 786, 787, 788, 789, 815, 822, 833, 835, 848, 851, 852, 855, 856, 858, 859, 860, 861, 865, 867, 869, 870, 871, 873, 874, 875, 877, 878, 879, 884, 885, 887, 888, 890, 891, 895, 896, 897, 902, 903, 905, 906, 935, 942, 948, 955], "locat": [13, 26, 29, 30, 31, 38, 47, 52, 53, 57, 61, 66, 67, 71, 73, 74, 75, 76, 81, 85, 87, 94, 95, 104, 106, 107, 108, 117, 120, 121, 122, 127, 136, 142, 145, 146, 151, 152, 161, 162, 163, 164, 167, 175, 176, 181, 182, 184, 185, 186, 187, 189, 191, 192, 197, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 218, 219, 227, 233, 235, 236, 237, 239, 240, 243, 250, 251, 252, 255, 256, 257, 259, 260, 265, 270, 274, 277, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 303, 304, 305, 307, 308, 312, 316, 317, 319, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 348, 364, 365, 374, 375, 376, 380, 381, 384, 386, 389, 391, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 406, 411, 413, 414, 415, 423, 436, 447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 490, 503, 504, 513, 516, 524, 534, 539, 550, 551, 561, 563, 571, 576, 583, 587, 597, 601, 602, 611, 612, 613, 617, 621, 634, 635, 639, 650, 661, 664, 665, 670, 681, 695, 696, 699, 704, 705, 721, 722, 724, 732, 735, 736, 746, 749, 770, 771, 773, 774, 775, 783, 785, 786, 788, 789, 825, 833, 851, 852, 856, 859, 863, 867, 869, 873, 874, 877, 878, 887, 888, 889, 890, 891, 895, 897, 903, 905, 935, 942, 947, 955], "process": [13, 14, 30, 33, 53, 54, 58, 60, 71, 77, 85, 95, 96, 106, 110, 114, 128, 150, 161, 168, 169, 170, 175, 177, 178, 181, 182, 186, 187, 188, 192, 197, 198, 203, 208, 210, 215, 227, 228, 229, 230, 232, 233, 234, 235, 237, 239, 243, 245, 250, 255, 256, 257, 265, 270, 277, 285, 287, 288, 292, 294, 295, 301, 302, 303, 308, 310, 314, 316, 317, 320, 323, 328, 330, 331, 332, 333, 334, 336, 341, 354, 356, 358, 364, 365, 367, 423, 427, 428, 431, 439, 440, 441, 456, 464, 483, 485, 490, 491, 496, 500, 506, 507, 522, 526, 527, 545, 547, 548, 550, 551, 552, 562, 572, 608, 613, 635, 636, 645, 659, 670, 671, 678, 685, 687, 700, 730, 732, 736, 756, 759, 770, 771, 773, 774, 783, 785, 786, 787, 788, 789, 812, 865, 869, 875, 888, 889, 935, 938, 940, 948, 949, 951], "plot": [13, 23, 26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 71, 72, 75, 77, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 148, 150, 156, 157, 158, 160, 161, 163, 166, 169, 170, 171, 172, 175, 177, 179, 180, 182, 184, 185, 186, 191, 192, 193, 194, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 243, 245, 247, 248, 250, 252, 255, 256, 260, 263, 264, 265, 268, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 316, 317, 318, 319, 320, 321, 323, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 380, 381, 389, 391, 392, 396, 406, 423, 433, 443, 483, 487, 490, 498, 501, 503, 509, 512, 524, 526, 550, 551, 558, 562, 564, 567, 570, 572, 576, 593, 597, 598, 601, 602, 611, 612, 613, 614, 616, 631, 632, 634, 635, 650, 655, 656, 678, 691, 692, 697, 700, 702, 705, 710, 715, 722, 732, 769, 783, 784, 785, 786, 787, 788, 789, 801, 811, 833, 834, 835, 836, 837, 839, 843, 844, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 905, 936, 938, 941, 945, 954, 955], "artifact": [13, 26, 33, 53, 58, 68, 97, 104, 109, 110, 111, 136, 137, 168, 170, 172, 175, 191, 192, 198, 209, 218, 219, 228, 229, 233, 235, 237, 238, 241, 242, 245, 246, 277, 280, 283, 292, 293, 297, 298, 299, 301, 303, 305, 308, 312, 317, 320, 325, 326, 328, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 413, 414, 424, 425, 426, 427, 428, 432, 485, 489, 496, 524, 548, 550, 551, 559, 564, 566, 580, 629, 632, 634, 635, 639, 640, 642, 647, 648, 650, 652, 653, 660, 661, 662, 664, 670, 673, 677, 682, 685, 735, 736, 783, 787, 788, 810, 812, 813, 815, 816, 851, 877, 879, 886, 887, 888, 903, 920, 935, 955], "detect": [13, 31, 34, 35, 38, 48, 53, 95, 97, 99, 101, 104, 108, 109, 120, 136, 139, 149, 163, 172, 177, 183, 185, 188, 191, 194, 198, 211, 217, 218, 219, 223, 227, 229, 230, 231, 232, 233, 234, 237, 240, 241, 242, 244, 270, 273, 277, 278, 280, 282, 284, 285, 286, 288, 290, 291, 292, 293, 294, 295, 299, 301, 303, 304, 305, 306, 320, 323, 324, 331, 332, 333, 334, 336, 341, 386, 410, 412, 416, 522, 550, 551, 557, 580, 632, 635, 637, 639, 640, 641, 643, 647, 648, 651, 652, 653, 659, 660, 661, 663, 670, 769, 783, 814, 817, 833, 865, 881, 882, 888, 935, 948, 955], "ssp": [13, 26, 29, 37, 41, 44, 53, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 95, 96, 98, 100, 110, 114, 117, 119, 120, 121, 122, 131, 134, 135, 136, 137, 148, 150, 156, 158, 166, 167, 168, 171, 172, 175, 177, 178, 188, 191, 192, 198, 202, 203, 204, 205, 206, 207, 208, 209, 218, 226, 227, 228, 230, 231, 232, 235, 237, 241, 242, 243, 246, 251, 260, 263, 265, 282, 285, 288, 292, 297, 298, 299, 302, 312, 319, 326, 328, 331, 332, 333, 334, 335, 336, 340, 341, 342, 424, 425, 426, 524, 550, 551, 594, 629, 632, 634, 647, 648, 652, 653, 660, 685, 693, 702, 708, 723, 785, 788, 867, 869, 871, 873, 874, 886, 887, 889, 920, 935, 955], "ica": [13, 14, 33, 43, 46, 53, 101, 104, 110, 111, 114, 188, 191, 192, 226, 227, 228, 231, 234, 241, 242, 245, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 328, 331, 332, 333, 334, 336, 341, 380, 395, 396, 443, 487, 497, 524, 550, 551, 566, 629, 632, 650, 652, 653, 663, 664, 668, 682, 683, 697, 865, 878, 879, 880, 881, 882, 888, 920, 935, 938, 948, 954, 955], "nir": [13, 14, 53, 104, 111, 197, 238, 291, 292, 295, 304, 320, 325, 336, 551, 580, 939, 941, 948, 954, 955], "specif": [13, 36, 45, 53, 69, 70, 71, 97, 132, 133, 139, 147, 161, 163, 167, 169, 170, 176, 177, 181, 186, 187, 196, 197, 198, 201, 216, 217, 218, 219, 226, 227, 229, 230, 232, 234, 235, 237, 239, 240, 243, 246, 252, 255, 256, 257, 260, 268, 269, 270, 273, 277, 278, 283, 291, 292, 294, 301, 303, 304, 309, 310, 312, 314, 317, 319, 320, 321, 325, 327, 328, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 345, 346, 347, 354, 364, 380, 483, 490, 507, 512, 514, 518, 524, 550, 551, 552, 566, 587, 611, 612, 632, 633, 634, 635, 641, 646, 650, 658, 659, 670, 704, 710, 732, 762, 769, 783, 784, 785, 786, 787, 788, 789, 833, 854, 859, 866, 867, 874, 878, 887, 888, 890, 893, 895, 896, 898, 899, 929, 945, 948, 955], "ieeg": [13, 14, 162, 295, 307, 312, 954], "intracrani": [13, 53, 104, 161, 164, 191, 277, 295, 303, 304, 307, 312, 316, 317, 380, 535, 550, 551, 665, 667], "eeg": [13, 14, 26, 29, 30, 31, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 61, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 85, 86, 87, 89, 90, 91, 93, 95, 96, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 143, 144, 146, 147, 148, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 257, 258, 259, 260, 261, 262, 263, 265, 268, 269, 273, 274, 277, 280, 281, 282, 283, 284, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 314, 319, 323, 326, 328, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 364, 365, 367, 369, 370, 373, 374, 378, 379, 380, 382, 384, 386, 387, 391, 392, 394, 395, 396, 398, 399, 402, 403, 405, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 439, 440, 441, 443, 459, 474, 475, 476, 483, 485, 487, 490, 491, 492, 498, 499, 502, 504, 507, 512, 515, 516, 524, 526, 527, 540, 542, 545, 547, 548, 550, 551, 557, 559, 561, 562, 563, 566, 567, 568, 569, 570, 572, 574, 576, 578, 579, 582, 590, 593, 595, 597, 598, 601, 602, 603, 613, 614, 616, 617, 626, 632, 633, 634, 635, 636, 637, 640, 643, 644, 647, 648, 650, 651, 652, 653, 661, 662, 666, 669, 676, 678, 685, 689, 691, 693, 694, 696, 697, 700, 701, 702, 712, 715, 723, 724, 727, 732, 736, 743, 748, 751, 769, 770, 771, 773, 774, 778, 783, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 815, 816, 825, 833, 835, 851, 852, 855, 859, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 878, 879, 885, 886, 887, 888, 889, 890, 891, 895, 896, 897, 902, 903, 920, 935, 938, 939, 948, 951, 955], "eyetrack": [13, 14, 149, 191, 220, 221, 240, 307, 308, 320, 325, 331, 332, 333, 334, 336, 379, 443, 550, 551, 570, 632, 783, 785, 786, 787, 788, 789, 955], "ey": [13, 23, 29, 53, 57, 101, 150, 153, 156, 161, 163, 184, 191, 198, 209, 212, 226, 228, 231, 233, 234, 241, 242, 278, 308, 317, 325, 331, 332, 333, 334, 336, 450, 512, 524, 550, 551, 567, 568, 570, 626, 632, 653, 655, 656, 657, 658, 661, 684, 694, 783, 785, 786, 787, 788, 789, 844, 955], "track": [13, 23, 52, 53, 140, 150, 156, 168, 175, 192, 195, 218, 219, 227, 230, 244, 245, 250, 293, 301, 307, 308, 317, 318, 331, 336, 512, 570, 635, 655, 656, 658, 844, 955], "referenc": [13, 26, 53, 55, 98, 104, 111, 120, 121, 166, 176, 177, 185, 188, 193, 208, 216, 227, 231, 235, 251, 255, 289, 295, 302, 303, 304, 309, 319, 320, 325, 331, 332, 333, 334, 336, 348, 392, 550, 551, 557, 724, 727, 783, 785, 786, 787, 788, 789, 869, 938, 955], "filter": [13, 14, 26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 43, 45, 46, 53, 58, 59, 60, 68, 71, 85, 95, 99, 100, 103, 104, 108, 109, 110, 111, 114, 119, 126, 136, 139, 140, 142, 148, 159, 162, 166, 167, 170, 171, 172, 175, 188, 191, 192, 193, 195, 197, 198, 202, 207, 209, 210, 211, 212, 218, 222, 226, 228, 231, 234, 238, 240, 241, 242, 243, 245, 246, 252, 260, 270, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 296, 297, 298, 299, 301, 302, 303, 304, 305, 307, 309, 312, 316, 318, 319, 323, 326, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 416, 417, 420, 423, 427, 428, 439, 440, 441, 445, 483, 484, 485, 487, 490, 491, 494, 497, 498, 499, 501, 504, 512, 524, 526, 527, 545, 547, 548, 550, 551, 564, 595, 613, 632, 635, 636, 640, 646, 647, 648, 652, 653, 659, 660, 661, 670, 671, 674, 697, 737, 747, 783, 785, 786, 787, 788, 789, 797, 798, 801, 804, 875, 876, 877, 883, 888, 889, 920, 935, 938, 940, 954, 955], "iir": [13, 283, 287, 298, 307, 312, 323, 331, 332, 333, 334, 485, 494, 518, 519, 521, 522, 550, 551, 647, 648, 674, 737, 747, 798, 876, 888], "fir": [13, 26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 198, 212, 218, 223, 226, 228, 230, 231, 232, 234, 237, 238, 239, 240, 260, 283, 288, 299, 323, 331, 332, 333, 334, 485, 494, 518, 519, 521, 522, 550, 551, 647, 648, 674, 798, 876, 888, 935, 940], "resampl": [13, 14, 21, 33, 45, 47, 70, 102, 107, 108, 136, 162, 166, 172, 175, 177, 191, 197, 218, 222, 226, 229, 232, 234, 241, 242, 252, 263, 264, 265, 269, 278, 280, 283, 285, 287, 288, 289, 292, 294, 295, 298, 299, 302, 308, 318, 320, 330, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 504, 518, 519, 521, 522, 524, 550, 551, 559, 566, 574, 632, 684, 783, 787, 788, 833, 865, 876, 893, 898, 920, 940, 955], "chpi": [13, 14, 106, 107, 151, 195, 209, 236, 237, 278, 285, 288, 291, 292, 294, 295, 305, 308, 312, 319, 320, 323, 331, 332, 333, 334, 336, 341, 379, 504, 550, 551, 632, 639, 642, 670, 734, 735, 736, 748, 783, 785, 786, 787, 788, 789, 858, 865, 888, 954], "head": [13, 14, 29, 30, 31, 36, 48, 52, 67, 69, 71, 76, 97, 98, 105, 106, 128, 136, 139, 142, 145, 147, 153, 161, 162, 169, 171, 176, 177, 183, 185, 189, 190, 191, 192, 195, 196, 197, 198, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 215, 217, 218, 226, 227, 232, 234, 235, 237, 239, 240, 241, 242, 243, 256, 270, 273, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 300, 301, 303, 304, 305, 306, 309, 312, 317, 319, 328, 329, 331, 332, 333, 334, 335, 336, 340, 341, 344, 370, 372, 373, 374, 376, 380, 383, 384, 393, 396, 398, 403, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 423, 430, 432, 433, 434, 435, 443, 457, 460, 483, 490, 502, 504, 526, 533, 534, 542, 543, 544, 550, 551, 556, 558, 562, 563, 564, 571, 576, 578, 583, 585, 591, 592, 593, 596, 597, 598, 634, 635, 639, 642, 644, 645, 646, 650, 659, 666, 670, 671, 690, 695, 696, 699, 713, 731, 732, 734, 735, 736, 740, 745, 748, 751, 778, 783, 785, 786, 788, 789, 819, 820, 822, 833, 835, 851, 852, 853, 858, 859, 863, 867, 869, 870, 871, 872, 874, 875, 877, 878, 885, 887, 889, 890, 891, 895, 897, 903, 926, 928, 933, 955], "posit": [13, 26, 29, 30, 38, 45, 47, 50, 53, 64, 65, 67, 71, 97, 102, 105, 106, 108, 109, 117, 120, 121, 122, 128, 139, 146, 149, 150, 151, 156, 161, 162, 176, 177, 182, 184, 185, 186, 196, 201, 202, 204, 209, 210, 211, 212, 215, 217, 218, 226, 227, 231, 233, 237, 239, 240, 252, 255, 259, 263, 270, 273, 277, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 300, 302, 303, 304, 305, 306, 307, 308, 309, 316, 317, 319, 320, 323, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 357, 372, 374, 380, 381, 382, 393, 396, 398, 400, 403, 406, 411, 413, 414, 419, 420, 421, 423, 435, 451, 460, 483, 486, 489, 490, 493, 495, 502, 503, 504, 511, 525, 526, 535, 542, 550, 551, 564, 567, 572, 575, 576, 583, 596, 632, 634, 635, 639, 640, 642, 650, 655, 656, 659, 661, 668, 670, 683, 692, 694, 732, 734, 735, 736, 740, 741, 742, 743, 744, 745, 746, 748, 751, 752, 767, 783, 785, 786, 787, 788, 789, 800, 808, 809, 833, 834, 835, 839, 848, 851, 852, 854, 859, 865, 866, 867, 870, 872, 873, 874, 877, 878, 884, 887, 888, 890, 891, 893, 895, 896, 897, 899, 903, 905, 955], "c": [13, 26, 30, 36, 37, 38, 45, 48, 70, 77, 97, 101, 123, 136, 139, 142, 148, 154, 163, 187, 197, 202, 206, 209, 210, 215, 218, 222, 223, 233, 239, 257, 258, 259, 260, 270, 277, 282, 283, 284, 287, 291, 299, 312, 314, 316, 317, 320, 321, 323, 324, 337, 342, 343, 344, 367, 403, 406, 423, 429, 458, 475, 476, 489, 490, 524, 527, 545, 550, 551, 591, 597, 610, 635, 643, 649, 679, 697, 743, 748, 814, 817, 833, 940, 941, 945, 948, 951], "hpi": [13, 26, 38, 47, 107, 108, 146, 151, 182, 192, 195, 196, 210, 215, 218, 226, 237, 243, 282, 285, 286, 291, 295, 305, 319, 320, 323, 331, 332, 333, 334, 336, 373, 374, 380, 383, 393, 403, 405, 410, 411, 412, 415, 416, 417, 434, 502, 503, 550, 551, 558, 576, 632, 639, 783, 785, 786, 787, 788, 789, 858], "coil": [13, 26, 29, 31, 38, 47, 52, 67, 71, 76, 107, 108, 136, 146, 151, 152, 176, 182, 184, 185, 202, 207, 208, 209, 210, 211, 212, 215, 218, 226, 235, 236, 237, 274, 285, 291, 294, 295, 305, 319, 323, 331, 332, 333, 334, 336, 388, 403, 410, 411, 413, 414, 415, 417, 418, 503, 526, 550, 551, 553, 558, 576, 632, 645, 646, 649, 670, 681, 696, 724, 783, 785, 786, 787, 788, 789, 827, 858], "transform": [13, 14, 26, 29, 31, 33, 34, 37, 38, 40, 42, 45, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 101, 104, 107, 108, 109, 111, 114, 117, 119, 120, 121, 122, 130, 131, 134, 135, 136, 137, 139, 140, 142, 146, 151, 152, 153, 157, 161, 171, 176, 181, 183, 184, 185, 192, 193, 195, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 232, 235, 243, 251, 252, 268, 270, 273, 277, 278, 280, 282, 283, 285, 286, 287, 289, 291, 292, 295, 298, 299, 300, 301, 302, 303, 305, 307, 308, 316, 317, 319, 323, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 372, 380, 383, 384, 394, 423, 429, 430, 432, 434, 435, 436, 443, 483, 484, 485, 486, 488, 490, 491, 492, 493, 494, 496, 497, 498, 501, 502, 504, 524, 526, 534, 542, 543, 544, 550, 551, 558, 583, 593, 596, 597, 608, 609, 618, 619, 635, 636, 639, 642, 644, 646, 659, 666, 670, 671, 702, 706, 714, 715, 722, 727, 748, 751, 768, 778, 780, 785, 788, 791, 794, 800, 801, 804, 808, 809, 810, 811, 812, 813, 814, 817, 819, 833, 851, 852, 899, 905, 926, 927, 934, 935, 948, 955], "helper": [13, 140, 255, 380, 398, 655], "variou": [13, 53, 89, 128, 147, 148, 161, 167, 176, 181, 191, 195, 196, 203, 204, 213, 214, 215, 216, 219, 220, 226, 229, 230, 232, 234, 241, 243, 245, 252, 255, 256, 285, 289, 291, 309, 310, 316, 320, 321, 328, 333, 336, 342, 398, 601, 602, 613, 635, 670, 691, 700, 702, 833, 857, 935, 955], "thi": [14, 27, 29, 30, 31, 33, 35, 36, 39, 40, 42, 44, 45, 47, 48, 52, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 76, 80, 81, 83, 84, 85, 87, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 113, 114, 117, 120, 121, 122, 123, 124, 126, 128, 130, 131, 136, 139, 140, 141, 142, 143, 144, 145, 149, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 355, 356, 358, 359, 362, 364, 365, 370, 371, 373, 374, 375, 376, 377, 380, 381, 384, 385, 386, 387, 388, 389, 392, 393, 394, 398, 399, 400, 405, 409, 410, 411, 414, 416, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 436, 439, 440, 441, 442, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 532, 533, 535, 536, 539, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 557, 558, 559, 560, 562, 566, 567, 568, 570, 571, 574, 575, 578, 580, 583, 584, 587, 589, 594, 595, 597, 601, 602, 603, 604, 605, 606, 608, 609, 611, 612, 613, 619, 621, 622, 626, 630, 632, 634, 635, 636, 637, 638, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 658, 659, 660, 661, 662, 665, 666, 667, 668, 669, 670, 671, 674, 677, 678, 684, 687, 688, 690, 693, 694, 695, 697, 699, 700, 704, 705, 710, 713, 719, 721, 724, 725, 727, 729, 731, 732, 735, 736, 737, 744, 746, 747, 748, 749, 750, 753, 754, 757, 760, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 782, 783, 784, 785, 786, 787, 788, 789, 792, 803, 813, 816, 820, 823, 827, 828, 830, 831, 833, 836, 837, 839, 843, 845, 848, 850, 851, 852, 853, 856, 857, 861, 865, 866, 867, 868, 869, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 886, 887, 888, 889, 890, 891, 892, 893, 895, 896, 897, 898, 900, 901, 904, 905, 906, 907, 928, 930, 935, 938, 940, 941, 944, 945, 947, 948, 949], "camelcas": [14, 309], "name": [14, 30, 31, 33, 34, 36, 44, 48, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 80, 81, 84, 85, 86, 95, 97, 109, 117, 119, 120, 121, 122, 127, 128, 130, 136, 139, 154, 157, 158, 161, 163, 167, 168, 169, 170, 171, 175, 176, 185, 186, 187, 192, 194, 195, 196, 197, 198, 203, 204, 205, 206, 217, 218, 223, 227, 228, 229, 232, 233, 235, 237, 238, 239, 246, 250, 251, 252, 255, 256, 268, 274, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 305, 307, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 371, 375, 376, 377, 378, 380, 381, 386, 389, 390, 391, 392, 393, 395, 396, 397, 402, 404, 405, 406, 408, 409, 420, 428, 429, 432, 434, 435, 436, 439, 440, 443, 451, 456, 459, 462, 483, 485, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 499, 501, 502, 504, 507, 510, 513, 514, 515, 516, 524, 525, 533, 535, 536, 537, 539, 541, 542, 543, 544, 549, 550, 551, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 585, 586, 587, 589, 591, 593, 594, 601, 616, 620, 624, 625, 626, 632, 633, 634, 635, 636, 637, 648, 650, 651, 652, 653, 659, 660, 661, 662, 663, 666, 671, 676, 678, 681, 682, 685, 687, 688, 690, 692, 694, 695, 696, 697, 699, 701, 702, 703, 704, 705, 707, 708, 710, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 724, 727, 731, 732, 737, 751, 760, 764, 768, 769, 775, 778, 779, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 801, 805, 807, 811, 813, 816, 818, 820, 830, 832, 833, 839, 851, 852, 853, 854, 856, 859, 863, 864, 865, 866, 867, 869, 871, 872, 873, 874, 878, 879, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 899, 906, 907, 908, 909, 910, 911, 912, 914, 916, 918, 924, 925, 926, 927, 930, 931, 932, 933, 934, 938, 940, 941, 945, 947, 949], "underscore_cas": 14, "group": [14, 30, 53, 94, 97, 136, 139, 150, 156, 163, 166, 168, 169, 171, 177, 181, 186, 187, 193, 198, 204, 229, 240, 246, 252, 255, 256, 259, 260, 264, 265, 277, 285, 287, 295, 303, 304, 309, 319, 320, 323, 331, 332, 333, 334, 336, 341, 364, 365, 382, 392, 500, 509, 510, 512, 550, 551, 567, 635, 650, 732, 748, 765, 771, 774, 839, 865, 866, 871, 888, 891, 948, 955], "themat": 14, "analysi": [14, 21, 22, 26, 28, 32, 34, 39, 41, 43, 46, 68, 69, 70, 97, 101, 109, 114, 123, 124, 128, 136, 166, 168, 170, 171, 179, 180, 181, 186, 187, 193, 194, 197, 198, 199, 200, 204, 209, 210, 215, 217, 218, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 243, 244, 246, 252, 255, 256, 257, 259, 260, 268, 272, 273, 277, 282, 283, 284, 292, 300, 301, 302, 310, 312, 314, 316, 317, 319, 320, 321, 331, 332, 333, 334, 336, 338, 339, 341, 342, 343, 345, 346, 347, 364, 365, 380, 382, 396, 422, 423, 429, 432, 443, 474, 476, 483, 491, 497, 507, 512, 524, 540, 545, 550, 551, 561, 572, 595, 601, 602, 616, 626, 632, 635, 636, 643, 650, 666, 668, 697, 732, 736, 743, 764, 765, 768, 770, 783, 785, 786, 787, 788, 789, 797, 799, 801, 803, 811, 812, 813, 814, 815, 816, 817, 833, 859, 868, 897, 920, 941, 942, 944, 948, 951, 955], "stage": [14, 164, 165, 170, 181, 182, 191, 198, 218, 227, 229, 232, 233, 238, 245, 277, 288, 299, 301, 309, 316, 317, 319, 325, 326, 331, 332, 333, 334, 343, 429, 475, 512, 550, 551, 566, 594, 650, 688, 693, 785, 823, 868, 948, 955], "ar": [14, 26, 29, 30, 31, 37, 38, 40, 41, 42, 44, 45, 47, 50, 52, 53, 57, 58, 59, 60, 64, 67, 69, 71, 72, 73, 76, 85, 94, 97, 101, 102, 103, 107, 108, 109, 110, 113, 114, 121, 126, 128, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 155, 158, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 277, 278, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 351, 352, 355, 356, 358, 364, 365, 370, 371, 373, 374, 375, 376, 378, 380, 381, 382, 384, 385, 388, 390, 391, 392, 393, 396, 397, 398, 400, 402, 403, 406, 410, 411, 412, 416, 422, 423, 427, 428, 429, 430, 432, 434, 439, 440, 441, 443, 456, 457, 464, 475, 483, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 504, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 533, 535, 536, 540, 541, 542, 545, 547, 548, 549, 550, 551, 552, 553, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 570, 572, 574, 576, 577, 578, 579, 580, 581, 582, 583, 587, 590, 593, 594, 596, 598, 600, 601, 610, 611, 612, 613, 614, 617, 618, 619, 624, 627, 628, 630, 631, 632, 634, 635, 636, 637, 638, 640, 642, 643, 645, 650, 651, 652, 653, 655, 659, 660, 662, 665, 669, 670, 671, 674, 675, 676, 678, 679, 681, 683, 685, 687, 688, 690, 693, 694, 695, 696, 697, 700, 702, 705, 708, 710, 717, 719, 720, 721, 722, 723, 724, 727, 729, 732, 733, 735, 736, 739, 740, 743, 745, 746, 748, 749, 751, 754, 755, 757, 758, 759, 764, 765, 768, 769, 770, 771, 772, 773, 774, 775, 779, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 802, 803, 804, 809, 812, 813, 814, 815, 816, 818, 820, 823, 828, 833, 834, 835, 839, 844, 850, 851, 852, 853, 856, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 878, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 905, 914, 915, 918, 925, 927, 928, 929, 930, 936, 937, 938, 940, 942, 944, 945, 947, 948, 949, 951, 952, 953, 955], "below": [14, 30, 36, 45, 69, 73, 102, 139, 141, 166, 177, 181, 186, 187, 192, 194, 196, 198, 217, 219, 222, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 245, 255, 260, 263, 265, 268, 270, 273, 274, 277, 303, 309, 310, 313, 316, 319, 320, 326, 328, 329, 330, 331, 332, 333, 334, 338, 339, 342, 343, 344, 345, 346, 347, 374, 380, 429, 485, 494, 502, 510, 519, 521, 542, 550, 551, 568, 602, 635, 637, 643, 645, 735, 769, 770, 771, 773, 774, 783, 787, 833, 854, 866, 871, 875, 878, 880, 893, 898, 899, 935, 938, 945, 947, 949, 952], "found": [14, 24, 26, 27, 29, 30, 31, 34, 35, 37, 38, 42, 44, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 95, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 149, 152, 155, 158, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 184, 185, 187, 188, 192, 194, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 223, 226, 227, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 244, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 273, 274, 285, 289, 291, 294, 295, 299, 309, 312, 317, 319, 320, 323, 324, 326, 328, 331, 332, 333, 334, 336, 355, 370, 386, 387, 397, 417, 418, 434, 447, 448, 449, 450, 452, 453, 454, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 502, 510, 524, 525, 531, 532, 533, 542, 550, 551, 558, 578, 601, 635, 638, 647, 652, 653, 655, 660, 661, 663, 664, 679, 690, 713, 719, 721, 726, 727, 732, 770, 820, 833, 845, 847, 851, 865, 882, 888, 928, 936], "namespac": [14, 288, 295, 299, 301, 309, 830], "provid": [14, 30, 31, 44, 45, 53, 69, 70, 92, 106, 117, 120, 121, 122, 130, 134, 163, 166, 168, 172, 175, 176, 177, 181, 182, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 201, 210, 211, 215, 216, 217, 219, 223, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 243, 244, 245, 246, 250, 252, 256, 257, 260, 275, 277, 278, 282, 283, 284, 286, 287, 288, 289, 291, 292, 293, 294, 295, 303, 304, 305, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 325, 326, 328, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 352, 355, 364, 365, 370, 371, 378, 381, 389, 397, 422, 424, 425, 426, 427, 428, 429, 434, 439, 442, 456, 457, 460, 483, 485, 490, 499, 504, 507, 510, 521, 522, 524, 526, 536, 542, 549, 550, 551, 571, 572, 583, 584, 587, 596, 598, 601, 618, 619, 622, 634, 635, 637, 638, 645, 651, 652, 653, 655, 659, 662, 670, 676, 678, 685, 695, 699, 710, 721, 732, 733, 748, 751, 768, 769, 771, 773, 774, 777, 783, 784, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 801, 811, 812, 813, 814, 815, 816, 817, 820, 821, 823, 830, 833, 835, 844, 851, 852, 854, 859, 861, 865, 866, 867, 869, 870, 871, 872, 874, 877, 878, 882, 884, 887, 888, 889, 890, 893, 895, 897, 898, 899, 915, 935, 940, 942, 944, 945, 946, 947, 948, 951], "multipl": [14, 21, 30, 42, 66, 70, 71, 77, 86, 120, 123, 124, 128, 130, 134, 139, 147, 166, 170, 175, 176, 185, 186, 192, 198, 201, 217, 222, 227, 229, 230, 232, 233, 235, 243, 244, 245, 256, 260, 263, 264, 265, 270, 274, 277, 278, 280, 283, 284, 285, 286, 288, 289, 291, 292, 293, 294, 295, 296, 298, 300, 301, 302, 304, 305, 307, 309, 312, 317, 319, 320, 325, 330, 331, 332, 333, 334, 338, 339, 341, 342, 344, 345, 346, 347, 367, 369, 385, 423, 429, 456, 485, 494, 496, 506, 508, 510, 519, 520, 521, 522, 524, 527, 533, 547, 548, 550, 551, 564, 575, 596, 611, 612, 617, 622, 635, 653, 661, 670, 674, 692, 700, 724, 727, 732, 761, 767, 771, 772, 783, 784, 787, 797, 800, 807, 808, 813, 816, 833, 849, 859, 866, 869, 872, 875, 878, 880, 882, 888, 893, 894, 896, 898, 952], "command": [14, 30, 151, 177, 181, 184, 186, 197, 211, 216, 278, 280, 282, 286, 291, 295, 301, 302, 303, 304, 316, 318, 331, 332, 336, 429, 542, 550, 551, 591, 635, 723, 865, 882, 888, 940, 941, 944, 945, 947, 948, 949, 951], "line": [14, 26, 97, 107, 108, 128, 136, 147, 148, 151, 162, 163, 166, 167, 169, 170, 177, 178, 181, 182, 184, 186, 188, 195, 197, 198, 203, 209, 217, 218, 219, 229, 231, 234, 235, 236, 237, 238, 243, 246, 250, 257, 258, 269, 270, 273, 274, 277, 278, 281, 286, 288, 291, 295, 301, 302, 303, 306, 308, 312, 316, 317, 318, 320, 328, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 403, 410, 416, 483, 490, 542, 550, 551, 584, 591, 634, 635, 650, 677, 685, 697, 704, 713, 716, 783, 785, 786, 788, 789, 833, 835, 842, 848, 851, 852, 859, 860, 865, 866, 867, 869, 871, 873, 874, 875, 877, 878, 881, 882, 883, 886, 887, 888, 889, 890, 892, 893, 894, 895, 897, 898, 907, 928, 933, 935, 940, 941, 944, 948, 951], "script": [14, 26, 27, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 280, 284, 285, 287, 295, 297, 309, 317, 320, 341, 550, 551, 888, 935, 936, 942, 944, 947, 948], "call": [14, 30, 44, 57, 69, 70, 113, 114, 121, 144, 155, 166, 168, 170, 171, 172, 175, 176, 177, 181, 182, 184, 186, 187, 192, 194, 196, 197, 198, 201, 204, 208, 217, 223, 226, 227, 229, 230, 232, 233, 237, 239, 243, 244, 245, 246, 255, 257, 259, 260, 265, 269, 270, 274, 278, 282, 283, 284, 287, 291, 293, 294, 301, 302, 303, 304, 305, 307, 309, 310, 318, 319, 320, 323, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 349, 376, 380, 423, 424, 426, 428, 429, 434, 486, 489, 493, 496, 499, 500, 504, 516, 518, 526, 539, 541, 550, 551, 559, 566, 580, 593, 596, 597, 602, 603, 604, 605, 606, 608, 609, 618, 619, 635, 640, 645, 646, 647, 648, 652, 654, 659, 670, 685, 721, 731, 732, 734, 735, 736, 748, 753, 757, 770, 771, 772, 773, 774, 783, 784, 785, 787, 788, 790, 791, 792, 793, 794, 795, 801, 803, 804, 811, 812, 813, 814, 815, 816, 830, 831, 833, 835, 852, 859, 865, 866, 867, 870, 873, 874, 889, 897, 915, 916, 935, 938, 940, 941, 945, 949], "directli": [14, 45, 60, 69, 121, 122, 164, 169, 170, 175, 191, 196, 197, 198, 215, 217, 223, 227, 230, 231, 232, 233, 234, 245, 263, 269, 270, 285, 287, 288, 295, 304, 307, 318, 320, 323, 326, 328, 329, 330, 331, 332, 333, 334, 336, 338, 340, 342, 343, 346, 347, 380, 381, 386, 390, 428, 441, 483, 490, 519, 547, 550, 551, 552, 554, 559, 572, 634, 635, 650, 652, 700, 727, 783, 785, 786, 788, 789, 836, 852, 854, 865, 867, 874, 878, 887, 890, 893, 895, 897, 899], "from": [14, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 169, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 239, 242, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 316, 317, 318, 319, 320, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 370, 371, 375, 377, 380, 381, 383, 386, 389, 392, 393, 394, 396, 398, 399, 400, 401, 402, 405, 406, 407, 411, 414, 415, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 439, 440, 441, 442, 443, 450, 456, 464, 465, 475, 476, 483, 487, 489, 490, 491, 492, 498, 501, 503, 505, 506, 507, 509, 512, 513, 514, 515, 516, 517, 522, 524, 525, 526, 527, 528, 531, 533, 535, 536, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 554, 555, 556, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 587, 592, 593, 594, 595, 596, 597, 598, 601, 602, 603, 608, 609, 610, 611, 612, 613, 615, 616, 617, 621, 622, 626, 627, 628, 632, 633, 634, 635, 636, 637, 638, 639, 642, 644, 645, 646, 649, 650, 651, 652, 653, 655, 657, 658, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 679, 680, 681, 682, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 699, 700, 701, 702, 703, 704, 705, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 722, 724, 727, 732, 733, 734, 735, 736, 737, 743, 746, 747, 748, 749, 750, 752, 753, 755, 756, 757, 758, 759, 760, 762, 763, 765, 769, 770, 771, 772, 773, 774, 775, 778, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 801, 802, 803, 804, 805, 806, 807, 811, 812, 813, 814, 815, 816, 817, 820, 821, 822, 823, 825, 828, 829, 832, 833, 842, 848, 851, 852, 859, 863, 864, 865, 867, 868, 869, 871, 872, 873, 874, 875, 876, 878, 879, 880, 882, 883, 885, 886, 887, 888, 889, 890, 891, 892, 895, 897, 903, 905, 906, 917, 918, 926, 927, 930, 933, 935, 937, 940, 944, 945, 947, 948, 949, 951, 955], "termin": [14, 282, 292, 300, 309, 323, 935, 940, 941, 944, 945, 947, 950], "softwar": [14, 97, 184, 191, 210, 216, 217, 235, 277, 283, 292, 293, 295, 303, 309, 310, 316, 317, 319, 324, 336, 388, 516, 542, 550, 551, 560, 580, 670, 713, 901, 933, 935, 936, 937, 940, 942, 947, 949], "meg": [14, 26, 27, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 91, 95, 96, 98, 99, 100, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 150, 152, 156, 157, 158, 160, 161, 162, 166, 167, 168, 171, 172, 175, 176, 177, 178, 182, 183, 184, 185, 186, 188, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 218, 219, 220, 221, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 250, 252, 257, 258, 259, 260, 263, 264, 265, 268, 269, 273, 274, 277, 278, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 299, 300, 301, 302, 303, 305, 306, 308, 309, 314, 316, 319, 323, 326, 328, 331, 332, 333, 334, 335, 336, 340, 342, 344, 351, 352, 364, 365, 367, 369, 378, 383, 386, 387, 388, 393, 395, 410, 422, 423, 424, 425, 426, 427, 428, 433, 439, 440, 441, 443, 463, 474, 483, 485, 490, 491, 499, 504, 524, 526, 527, 534, 540, 545, 547, 548, 550, 551, 553, 554, 558, 562, 564, 570, 572, 573, 576, 583, 585, 593, 595, 597, 601, 602, 603, 613, 614, 616, 617, 629, 632, 633, 634, 635, 637, 640, 645, 646, 647, 648, 649, 650, 651, 652, 653, 659, 660, 662, 666, 670, 671, 676, 678, 685, 691, 696, 700, 702, 717, 723, 735, 736, 740, 743, 745, 748, 751, 769, 770, 771, 773, 774, 778, 783, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 815, 816, 819, 820, 833, 835, 848, 851, 852, 858, 859, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 877, 878, 879, 886, 887, 889, 890, 895, 897, 902, 935, 938, 939, 948, 951, 955], "most": [14, 45, 54, 71, 73, 97, 100, 108, 109, 131, 135, 136, 141, 147, 161, 166, 170, 175, 176, 177, 178, 181, 182, 191, 193, 195, 197, 198, 207, 215, 219, 226, 229, 231, 233, 234, 236, 237, 238, 239, 243, 255, 259, 268, 273, 295, 304, 305, 309, 310, 312, 318, 319, 320, 321, 323, 331, 332, 333, 334, 336, 337, 342, 345, 380, 398, 424, 425, 426, 447, 448, 449, 452, 453, 454, 456, 460, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 512, 518, 523, 526, 545, 587, 593, 622, 635, 645, 668, 670, 687, 735, 736, 737, 746, 747, 748, 749, 770, 771, 772, 773, 774, 823, 828, 833, 853, 874, 935, 938, 941, 945, 947], "raw": [14, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 53, 54, 58, 59, 60, 62, 67, 68, 71, 72, 75, 82, 88, 90, 92, 94, 95, 96, 98, 99, 100, 101, 103, 105, 106, 108, 109, 110, 114, 116, 118, 119, 122, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 148, 149, 151, 155, 158, 159, 161, 162, 167, 168, 170, 171, 172, 175, 177, 182, 184, 185, 188, 191, 192, 193, 195, 196, 197, 199, 200, 206, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 247, 248, 251, 252, 257, 258, 259, 260, 263, 265, 268, 269, 270, 273, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 316, 317, 318, 319, 324, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 341, 342, 344, 348, 350, 351, 352, 363, 364, 365, 380, 382, 385, 409, 410, 412, 414, 415, 416, 417, 422, 423, 425, 426, 427, 428, 431, 432, 441, 451, 463, 488, 491, 508, 512, 516, 518, 521, 524, 525, 542, 549, 551, 552, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 586, 590, 593, 594, 595, 597, 599, 601, 602, 603, 604, 605, 606, 608, 609, 613, 616, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 652, 653, 654, 656, 658, 659, 660, 661, 662, 663, 664, 668, 669, 670, 671, 672, 673, 674, 677, 678, 684, 685, 691, 695, 697, 699, 702, 704, 705, 724, 727, 733, 734, 735, 736, 737, 748, 749, 769, 783, 785, 786, 787, 788, 789, 798, 803, 831, 833, 865, 868, 869, 878, 879, 880, 882, 888, 889, 905, 938, 940, 954, 955], "evok": [14, 26, 27, 29, 30, 31, 33, 34, 41, 42, 43, 44, 46, 53, 54, 57, 61, 62, 64, 65, 66, 68, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 84, 85, 87, 88, 95, 98, 100, 104, 105, 106, 110, 111, 113, 114, 116, 118, 120, 122, 123, 124, 126, 127, 128, 134, 140, 143, 144, 150, 152, 156, 161, 162, 167, 169, 170, 180, 188, 193, 195, 196, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 223, 226, 227, 228, 229, 230, 232, 233, 234, 237, 240, 251, 252, 256, 257, 258, 259, 260, 263, 265, 268, 270, 274, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 312, 317, 318, 319, 320, 323, 326, 328, 330, 331, 332, 334, 335, 336, 338, 339, 341, 342, 344, 346, 348, 351, 352, 356, 357, 360, 361, 364, 365, 367, 369, 382, 385, 409, 422, 423, 425, 427, 443, 463, 488, 497, 504, 508, 509, 514, 515, 517, 524, 526, 540, 542, 545, 547, 548, 550, 551, 556, 564, 593, 594, 597, 601, 602, 603, 604, 605, 606, 610, 613, 616, 631, 632, 633, 634, 635, 636, 643, 644, 647, 648, 651, 654, 658, 662, 669, 670, 685, 691, 693, 697, 698, 699, 700, 701, 702, 704, 705, 708, 724, 727, 731, 732, 737, 747, 749, 769, 778, 783, 785, 786, 787, 788, 789, 794, 798, 803, 813, 815, 816, 817, 833, 835, 852, 859, 862, 863, 865, 866, 869, 870, 871, 872, 873, 874, 875, 879, 882, 886, 888, 889, 892, 894, 897, 902, 926, 935, 938, 954, 955], "info": [14, 26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 99, 101, 102, 106, 107, 108, 109, 110, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 151, 152, 153, 155, 159, 161, 162, 163, 166, 168, 170, 172, 175, 176, 177, 181, 182, 183, 184, 185, 186, 188, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 251, 252, 256, 257, 258, 259, 260, 263, 265, 268, 269, 270, 273, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 297, 300, 301, 302, 303, 304, 305, 307, 308, 309, 312, 316, 317, 318, 319, 320, 324, 325, 326, 328, 330, 331, 332, 333, 334, 335, 340, 341, 342, 344, 349, 351, 352, 364, 365, 366, 373, 374, 378, 379, 381, 385, 386, 387, 388, 392, 394, 395, 397, 408, 409, 411, 413, 418, 423, 427, 428, 434, 439, 440, 441, 443, 483, 485, 490, 491, 492, 494, 499, 502, 504, 508, 513, 514, 515, 516, 519, 521, 522, 526, 527, 534, 535, 545, 547, 548, 549, 550, 551, 552, 556, 558, 571, 586, 590, 593, 596, 597, 598, 601, 603, 613, 626, 629, 631, 632, 633, 634, 635, 637, 639, 646, 649, 651, 652, 653, 655, 657, 659, 662, 666, 670, 674, 675, 676, 678, 684, 685, 688, 695, 699, 717, 718, 723, 724, 727, 729, 734, 735, 736, 737, 747, 748, 751, 769, 783, 784, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 816, 822, 828, 831, 833, 835, 848, 851, 852, 855, 856, 859, 860, 861, 865, 866, 869, 870, 871, 872, 875, 877, 882, 884, 887, 888, 889, 891, 897, 905, 926, 935, 944, 955], "read": [14, 26, 27, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 172, 175, 177, 178, 182, 183, 184, 185, 186, 187, 188, 192, 193, 195, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 246, 250, 251, 252, 256, 257, 258, 259, 264, 269, 273, 274, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 316, 318, 319, 320, 321, 323, 324, 325, 326, 328, 331, 332, 333, 334, 336, 342, 344, 364, 365, 368, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 420, 423, 427, 428, 439, 440, 441, 443, 483, 490, 491, 515, 524, 525, 526, 527, 531, 533, 536, 542, 545, 547, 548, 549, 550, 551, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 571, 572, 574, 576, 577, 578, 583, 584, 601, 613, 615, 616, 624, 637, 662, 680, 681, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 715, 716, 717, 719, 720, 722, 729, 736, 784, 805, 807, 825, 842, 851, 875, 903, 926, 927, 938, 944, 949, 955], "anonymize_info": [14, 283, 284, 291, 294, 323, 331, 332, 333, 334, 336, 550, 551], "read_raw": [14, 94, 97, 161, 170, 198, 252, 292, 294, 307, 308, 323], "read_raw_artemis123": [14, 151, 215, 291, 320, 557], "read_raw_bti": [14, 151, 211, 215, 282, 289, 294, 303, 304, 305, 320], "read_raw_cnt": [14, 216, 278, 282, 283, 284, 288, 289, 291, 305, 307, 308, 320, 557], "read_raw_ctf": [14, 26, 33, 38, 47, 107, 108, 146, 151, 210, 215, 218, 281, 282, 284, 285, 286, 287, 289, 291, 292, 304, 320, 557], "read_raw_curri": [14, 289, 293, 295, 305, 306, 557, 954], "read_raw_edf": [14, 34, 35, 109, 139, 163, 185, 216, 232, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 302, 303, 304, 305, 307, 308, 317, 320, 557, 559, 574, 938], "read_raw_eyelink": [14, 149, 219, 240, 278, 307, 308, 320], "read_raw_bdf": [14, 216, 288, 293, 295, 303, 304, 305, 320, 557, 566, 574], "read_raw_gdf": [14, 216, 278, 288, 289, 292, 293, 295, 303, 304, 320, 557, 559, 566], "read_raw_kit": [14, 151, 197, 212, 215, 284, 289, 292, 293, 294, 295, 320, 557], "read_raw_nedf": [14, 294, 557, 954], "read_raw_nicolet": [14, 216, 281, 289, 294, 320, 557], "read_raw_hitachi": [14, 217, 295, 303, 305, 954], "read_raw_nirx": [14, 102, 217, 238, 291, 292, 295, 303, 304, 320, 557], "read_raw_snirf": [14, 217, 278, 292, 295, 303, 304, 307, 308], "read_raw_eeglab": [14, 155, 194, 216, 278, 281, 283, 287, 288, 289, 293, 303, 304, 305, 306, 320, 557, 938, 945], "read_raw_brainvis": [14, 196, 216, 270, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 295, 302, 304, 320, 557], "read_raw_egi": [14, 216, 240, 278, 284, 286, 288, 289, 294, 295, 302, 303, 307, 308, 320, 557], "read_raw_fif": [14, 29, 31, 36, 37, 39, 40, 41, 42, 44, 54, 55, 58, 59, 60, 68, 71, 72, 75, 88, 95, 96, 98, 99, 100, 101, 103, 106, 109, 110, 114, 119, 120, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 140, 142, 144, 145, 148, 151, 158, 159, 166, 167, 168, 171, 172, 175, 177, 178, 182, 188, 192, 193, 194, 195, 196, 203, 206, 208, 209, 215, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 251, 257, 258, 259, 260, 263, 265, 268, 269, 273, 283, 288, 291, 292, 293, 294, 302, 320, 325, 557, 938], "read_raw_eximia": [14, 216, 320, 557], "read_raw_fieldtrip": [14, 215, 287, 295, 320, 557, 954], "read_raw_boxi": [14, 217, 293, 320, 557, 954], "read_raw_persyst": [14, 216, 292, 294, 295, 320], "read_raw_nihon": [14, 216, 293, 295, 303], "read_raw_fil": [14, 215, 239, 307, 308, 320, 557], "read_raw_nsx": [14, 954], "baseraw": [14, 284, 635, 643], "kit": [14, 15, 80, 81, 191, 196, 197, 210, 213, 214, 255, 277, 278, 282, 283, 289, 291, 293, 294, 295, 299, 302, 320, 328, 329, 331, 333, 334, 336, 370, 406, 415, 423, 503, 504, 526, 576, 597, 598, 617, 646, 659, 670, 696, 788, 851, 863, 903, 954, 955], "read_mrk": [14, 278, 954], "o": [14, 27, 45, 70, 88, 98, 102, 109, 142, 153, 166, 185, 187, 195, 197, 198, 211, 222, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 277, 284, 287, 291, 292, 294, 298, 300, 302, 303, 304, 307, 308, 309, 317, 323, 328, 331, 332, 333, 334, 336, 423, 442, 459, 483, 490, 531, 550, 551, 634, 635, 644, 649, 726, 783, 785, 786, 788, 789, 852, 867, 874, 890, 895, 897, 935, 945, 951], "channel_typ": [14, 195, 232, 331, 332, 333, 334, 336, 550, 551, 553, 635, 783, 785, 786, 787, 788, 789], "channel_indices_by_typ": [14, 195], "get_head_surf": [14, 303, 329, 593, 863], "get_meg_helmet_surf": 14, "get_volume_labels_from_aseg": [14, 207, 292], "get_volume_labels_from_src": [14, 284], "parse_config": [14, 954], "read_labels_from_annot": [14, 64, 67, 73, 95, 117, 121, 122, 154, 251, 284, 301, 621, 704, 930], "read_bem_solut": [14, 31, 71, 136, 185, 592, 922], "read_bem_surfac": [14, 187, 285, 591, 592, 689], "read_cov": [14, 37, 57, 61, 66, 67, 71, 74, 75, 76, 77, 80, 81, 84, 85, 86, 91, 95, 119, 121, 188, 204, 205, 328, 924, 935], "read_dipol": [14, 71, 143, 282, 285, 291, 294, 329, 330, 526], "read_epoch": [14, 128, 166, 169, 256, 280, 281, 287, 288, 292, 320, 935], "read_epochs_kit": [14, 166, 215, 302, 320, 954], "read_epochs_eeglab": [14, 166, 216, 278, 281, 283, 284, 287, 289, 291, 303, 304, 306, 320, 938], "read_epochs_fieldtrip": [14, 215, 287, 292, 295, 320, 954], "read_ev": [14, 37, 39, 40, 41, 42, 44, 54, 96, 114, 121, 123, 124, 127, 130, 131, 144, 148, 158, 166, 171, 177, 228, 244, 258, 259, 260, 263, 265, 283, 291, 302, 319, 524, 694, 925], "read_evok": [14, 56, 57, 61, 64, 65, 66, 67, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 105, 112, 113, 143, 146, 147, 152, 175, 176, 198, 202, 204, 205, 207, 273, 274, 283, 292, 301, 304, 331, 332, 333, 334, 341, 550, 551, 926, 935], "read_evoked_besa": [14, 304, 954], "read_evoked_fieldtrip": [14, 215, 287, 291, 320, 954], "read_evokeds_mff": [14, 293, 954], "read_freesurfer_lut": [14, 292, 536, 954], "read_forward_solut": [14, 31, 48, 57, 58, 59, 60, 61, 66, 68, 69, 72, 73, 74, 75, 77, 80, 81, 84, 85, 86, 95, 117, 119, 120, 121, 122, 157, 184, 203, 204, 205, 206, 218, 223, 251, 252, 285, 335, 927], "read_label": [14, 54, 55, 63, 65, 119, 131, 134, 135, 342, 345, 733], "read_morph_map": [14, 289, 954], "read_proj": [14, 119, 138, 157, 168, 218, 233, 331, 332, 333, 334, 341, 550, 551, 931], "read_reject_paramet": [14, 954], "read_source_estim": [14, 63, 69, 79, 143, 160, 201, 207, 264, 273, 274, 289], "read_source_spac": [14, 52, 66, 69, 70, 161, 162, 182, 185, 186, 206, 263, 264, 265, 344, 932], "read_surfac": [14, 182, 186, 187, 292, 316, 337, 716, 732, 933], "read_tran": [14, 143, 145, 182, 186, 204, 218, 303, 344, 534, 748, 934], "read_tri": [14, 713, 933, 954], "write_labels_to_annot": [14, 292, 301, 704, 705, 929], "write_bem_solut": [14, 292, 316, 592, 689, 690], "write_bem_surfac": [14, 292, 316, 591, 592, 689, 690], "write_head_bem": [14, 187, 294], "write_cov": [14, 188, 303, 691], "write_ev": [14, 244, 303, 524, 697], "write_evok": [14, 88, 175, 291, 292, 295, 301, 303, 307, 333, 334, 514, 700, 935], "write_forward_solut": [14, 184, 285, 292, 702], "write_label": 14, "write_proj": [14, 233, 292, 303, 708], "write_source_spac": [14, 67, 284, 316, 712], "write_surfac": [14, 187, 292, 713, 716], "write_tran": [14, 183, 715], "what": [14, 57, 85, 98, 109, 117, 121, 122, 144, 155, 162, 166, 167, 168, 169, 170, 182, 186, 195, 197, 201, 206, 207, 208, 217, 227, 229, 238, 243, 244, 245, 252, 255, 257, 260, 268, 270, 273, 278, 289, 305, 306, 309, 319, 326, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 423, 427, 434, 439, 440, 456, 475, 502, 507, 512, 516, 533, 549, 550, 551, 567, 621, 675, 688, 690, 694, 719, 721, 733, 783, 787, 813, 816, 858, 893, 898, 928, 944, 947, 949, 954], "read_info": [14, 52, 91, 117, 119, 121, 122, 183, 184, 186, 195, 278], "write_info": [14, 278], "show_fiff": [14, 283, 299, 308, 842, 954], "get_channel_type_const": [14, 291], "baseepoch": [14, 166, 284, 289, 309, 635], "creat": [14, 26, 27, 29, 30, 31, 34, 35, 37, 41, 42, 44, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 90, 92, 94, 95, 96, 97, 98, 100, 102, 106, 109, 112, 114, 119, 120, 122, 130, 131, 134, 135, 136, 137, 139, 140, 141, 144, 147, 148, 151, 153, 155, 158, 160, 161, 162, 167, 168, 171, 172, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 223, 226, 227, 228, 229, 230, 232, 233, 240, 243, 246, 252, 253, 254, 256, 258, 260, 263, 265, 268, 269, 273, 274, 278, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 303, 304, 305, 308, 312, 317, 319, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 350, 355, 364, 365, 370, 375, 376, 377, 380, 394, 423, 424, 425, 429, 434, 442, 443, 483, 490, 496, 500, 505, 507, 518, 519, 524, 550, 551, 563, 568, 570, 575, 590, 591, 592, 595, 597, 598, 601, 613, 624, 634, 635, 637, 638, 640, 644, 647, 648, 652, 653, 655, 660, 666, 694, 696, 720, 721, 722, 724, 727, 732, 733, 737, 760, 763, 769, 778, 783, 784, 785, 786, 787, 788, 789, 798, 801, 804, 810, 811, 812, 813, 815, 816, 820, 833, 835, 837, 839, 842, 844, 848, 851, 852, 858, 859, 861, 863, 866, 867, 870, 871, 872, 873, 874, 878, 880, 883, 885, 886, 887, 888, 889, 890, 891, 893, 895, 897, 898, 919, 920, 930, 936, 940, 945, 949, 955], "object": [14, 22, 30, 35, 36, 44, 45, 53, 56, 57, 58, 59, 60, 62, 73, 80, 81, 82, 87, 90, 105, 121, 126, 128, 130, 131, 136, 139, 140, 141, 158, 167, 170, 172, 177, 181, 183, 186, 187, 188, 191, 192, 193, 196, 197, 198, 201, 207, 208, 215, 216, 217, 218, 219, 223, 226, 227, 228, 230, 232, 233, 234, 235, 237, 238, 240, 244, 247, 248, 252, 256, 263, 269, 270, 273, 274, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 312, 316, 318, 319, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 350, 351, 352, 355, 357, 358, 359, 362, 364, 365, 366, 370, 371, 373, 374, 378, 379, 380, 382, 385, 386, 387, 388, 389, 392, 394, 395, 408, 411, 413, 418, 422, 423, 426, 427, 428, 429, 430, 434, 439, 440, 441, 443, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 501, 502, 508, 512, 517, 524, 525, 527, 529, 534, 545, 547, 548, 549, 550, 551, 552, 556, 557, 558, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 582, 583, 586, 587, 590, 595, 596, 597, 598, 601, 602, 603, 604, 605, 606, 609, 611, 612, 613, 617, 624, 631, 632, 634, 635, 636, 637, 638, 646, 649, 650, 651, 652, 655, 663, 665, 666, 667, 669, 675, 676, 683, 688, 692, 693, 695, 699, 700, 701, 704, 710, 717, 718, 732, 733, 747, 748, 751, 760, 768, 769, 775, 779, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 802, 805, 806, 807, 812, 813, 814, 815, 816, 817, 818, 820, 822, 832, 833, 834, 835, 840, 843, 844, 846, 848, 849, 851, 852, 855, 856, 859, 860, 861, 862, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 887, 888, 889, 890, 891, 892, 895, 897, 902, 903, 926, 929, 937, 938, 955], "arrai": [14, 26, 29, 37, 57, 90, 97, 98, 101, 117, 123, 124, 142, 162, 163, 166, 167, 168, 170, 172, 175, 177, 182, 184, 186, 191, 192, 195, 197, 201, 207, 209, 210, 211, 212, 215, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 237, 243, 245, 250, 251, 253, 255, 259, 260, 263, 264, 265, 268, 269, 270, 277, 278, 282, 283, 284, 286, 287, 288, 289, 291, 294, 301, 307, 308, 310, 316, 317, 318, 319, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 353, 354, 365, 366, 372, 374, 380, 381, 382, 389, 393, 398, 407, 417, 418, 420, 421, 431, 434, 438, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 507, 509, 511, 512, 517, 518, 519, 521, 522, 523, 524, 525, 526, 538, 539, 541, 543, 544, 545, 547, 548, 549, 550, 551, 567, 576, 588, 591, 595, 600, 611, 612, 614, 617, 618, 619, 626, 629, 630, 632, 634, 635, 636, 638, 639, 640, 642, 643, 646, 649, 650, 651, 652, 656, 659, 660, 661, 662, 663, 664, 670, 674, 675, 676, 678, 679, 688, 694, 696, 697, 706, 713, 716, 719, 722, 725, 727, 730, 733, 734, 735, 736, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 756, 759, 761, 763, 764, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 781, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 797, 800, 801, 803, 804, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 820, 824, 826, 832, 833, 834, 837, 838, 839, 850, 851, 852, 854, 855, 856, 859, 865, 866, 867, 868, 869, 871, 872, 874, 875, 878, 881, 882, 885, 887, 888, 889, 890, 891, 893, 895, 896, 897, 898, 899, 905, 925, 928, 933], "evokedarrai": [14, 29, 40, 41, 42, 44, 47, 110, 127, 136, 209, 212, 215, 223, 250, 260, 284, 291, 301, 319, 332, 333, 551, 608, 609, 699, 701, 789], "epochsarrai": [14, 30, 215, 250, 281, 282, 301, 326, 331, 334, 430, 551, 695, 786], "rawarrai": [14, 45, 90, 92, 94, 97, 102, 109, 141, 185, 215, 217, 232, 235, 250, 284, 288, 295, 304, 319, 332, 334, 571, 789], "create_info": [14, 35, 40, 41, 45, 90, 92, 97, 141, 153, 185, 215, 217, 250, 287, 291, 302, 332, 334, 336, 483, 490, 551, 701, 786, 789], "export": [14, 50, 56, 67, 139, 142, 166, 173, 174, 175, 181, 191, 194, 198, 216, 217, 247, 278, 288, 294, 295, 298, 303, 304, 306, 307, 325, 331, 332, 333, 334, 338, 339, 342, 344, 345, 346, 347, 405, 407, 550, 551, 566, 576, 697, 783, 785, 786, 787, 788, 789, 938, 940, 947, 950, 955], "export_epoch": [14, 295, 303], "export_evok": [14, 295, 303], "export_evokeds_mff": [14, 295, 303, 333, 334, 514], "export_raw": [14, 295, 303, 304, 306, 307, 566], "dataset": [14, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 271, 272, 273, 274, 277, 278, 280, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 301, 302, 303, 307, 308, 309, 312, 318, 320, 321, 323, 325, 328, 329, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 364, 365, 370, 380, 396, 414, 422, 423, 424, 425, 427, 428, 430, 432, 439, 440, 441, 483, 486, 490, 493, 500, 503, 512, 514, 515, 524, 526, 527, 540, 545, 547, 548, 550, 551, 561, 562, 564, 576, 591, 592, 593, 597, 598, 601, 602, 605, 608, 609, 613, 618, 619, 632, 635, 648, 649, 653, 662, 670, 678, 699, 700, 701, 702, 708, 715, 731, 768, 770, 771, 773, 774, 783, 785, 787, 788, 807, 818, 833, 851, 859, 863, 868, 875, 897, 903, 926, 954, 955], "fetch_dataset": [14, 295, 462, 954], "has_dataset": [14, 295, 456, 954], "brainstorm": [14, 22, 28, 32, 53, 107, 108, 110, 136, 146, 191, 197, 213, 214, 220, 221, 277, 280, 286, 287, 320, 325, 328, 329, 331, 333, 334, 336, 342, 370, 422, 423, 424, 425, 428, 430, 432, 503, 524, 526, 550, 564, 591, 592, 597, 598, 601, 602, 613, 632, 648, 662, 670, 702, 708, 715, 731, 833, 851, 863, 875, 903, 954, 955], "bst_auditori": [14, 107, 108, 218, 954], "data_path": [14, 26, 27, 29, 31, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 186, 187, 188, 192, 193, 194, 195, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 222, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 251, 252, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 278, 284, 286, 303, 307, 309, 317, 320, 331, 332, 333, 334, 341, 456, 550, 551, 954], "bst_rest": [14, 317, 954], "bst_raw": [14, 26, 146, 317, 954], "eegbci": [14, 34, 35, 139, 185, 197, 232, 291, 954], "load_data": [14, 26, 29, 30, 34, 35, 38, 47, 60, 68, 97, 98, 101, 102, 103, 107, 108, 109, 110, 126, 136, 139, 140, 142, 162, 172, 177, 185, 192, 194, 198, 208, 212, 218, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 243, 244, 245, 246, 269, 280, 285, 291, 292, 294, 317, 320, 331, 332, 333, 334, 550, 551, 954], "standard": [14, 30, 34, 54, 60, 67, 70, 72, 97, 101, 109, 121, 136, 148, 161, 167, 175, 176, 177, 181, 185, 186, 195, 196, 197, 208, 218, 222, 223, 227, 229, 232, 235, 243, 250, 256, 265, 269, 277, 281, 283, 284, 285, 286, 288, 292, 294, 295, 302, 303, 304, 308, 312, 316, 317, 318, 319, 320, 323, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 354, 380, 382, 391, 396, 398, 459, 483, 490, 492, 503, 516, 517, 532, 536, 539, 550, 551, 559, 563, 566, 576, 580, 602, 618, 619, 629, 634, 635, 659, 688, 696, 703, 727, 732, 765, 768, 783, 785, 786, 787, 788, 789, 797, 798, 801, 811, 812, 815, 833, 844, 852, 853, 859, 860, 866, 867, 869, 874, 875, 878, 880, 887, 890, 893, 895, 896, 897, 899, 935, 940, 954], "fetch_aparc_sub_parcel": [14, 154, 954], "fetch_fsaverag": [14, 70, 153, 161, 185, 206, 217, 288, 317], "fetch_hcp_mmp_parcel": [14, 154, 207, 285, 292, 954], "fetch_infant_templ": [14, 183, 185, 294, 317], "fetch_phantom": [14, 209, 295, 503, 954], "fnirs_motor": [14, 102, 197, 238, 295, 317, 954], "hf_sef": [14, 27, 197, 295, 317, 954], "kiloword": [14, 128, 169, 197, 243, 256, 954], "limo": [14, 28, 32, 53, 197, 277, 291, 332, 333, 334, 422, 768, 859, 868, 954, 955], "misc": [14, 90, 92, 106, 107, 108, 142, 161, 163, 175, 195, 197, 208, 212, 215, 216, 218, 219, 240, 243, 250, 283, 288, 291, 292, 294, 295, 298, 305, 317, 331, 332, 333, 334, 336, 341, 379, 395, 415, 443, 516, 550, 551, 559, 561, 563, 566, 568, 574, 578, 581, 632, 783, 785, 786, 787, 788, 789, 859, 865, 869, 871, 873, 888, 954], "mtrf": [14, 45, 197, 222, 277, 285, 489, 954], "multimod": [14, 88, 163, 197, 277, 295, 938, 954], "opm": [14, 28, 32, 53, 132, 133, 191, 197, 241, 242, 277, 295, 307, 319, 320, 328, 329, 331, 333, 334, 336, 342, 370, 423, 427, 428, 433, 503, 524, 526, 550, 573, 592, 597, 598, 601, 602, 608, 613, 629, 632, 634, 649, 689, 702, 731, 788, 827, 833, 851, 860, 863, 903, 954, 955], "sleep_physionet": [14, 163, 288, 317, 954], "ag": [14, 30, 140, 163, 216, 277, 288, 317, 331, 332, 333, 334, 336, 459, 476, 550, 551, 552, 748], "fetch_data": [14, 163, 288, 317, 954], "temazepam": [14, 288, 317, 475, 954], "sampl": [14, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 91, 92, 95, 96, 98, 99, 100, 103, 105, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 154, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 244, 245, 246, 250, 251, 252, 255, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 273, 274, 277, 282, 284, 285, 286, 287, 288, 289, 291, 295, 301, 302, 304, 307, 308, 309, 316, 319, 320, 321, 323, 324, 325, 326, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 363, 386, 423, 429, 431, 443, 456, 485, 486, 487, 488, 489, 493, 494, 495, 496, 497, 498, 500, 504, 507, 509, 511, 512, 518, 519, 520, 521, 522, 524, 525, 548, 549, 550, 551, 559, 566, 574, 595, 597, 605, 611, 612, 626, 630, 632, 635, 637, 640, 649, 652, 653, 678, 684, 688, 695, 696, 697, 710, 712, 717, 733, 738, 739, 740, 741, 742, 743, 744, 745, 748, 749, 750, 755, 763, 765, 769, 770, 771, 772, 773, 774, 775, 776, 777, 783, 784, 786, 787, 790, 791, 792, 793, 794, 795, 796, 800, 801, 803, 804, 808, 809, 811, 812, 813, 814, 815, 831, 833, 865, 867, 868, 876, 888, 893, 898, 899, 901, 925, 935, 936, 948, 955], "somato": [14, 26, 58, 59, 60, 72, 88, 140, 197, 269, 295, 317, 954], "spm_face": [14, 33, 151, 197, 243, 317, 954], "ucl_opm_auditori": [14, 239, 317, 954], "visual_92_categori": [14, 36, 197, 284, 317, 954], "phantom_kit": [14, 197, 212, 278, 317, 954], "phantom_4dbti": [14, 197, 211, 286, 295, 317, 954], "phantom_kernel": [14, 29, 197, 317, 954], "refmeg_nois": [14, 101, 197, 295, 317, 954], "ssvep": [14, 94, 191, 196, 197, 271, 272, 295, 331, 336, 380, 396, 512, 561, 632, 785, 897, 954, 955], "erp_cor": [14, 170, 197, 317, 954], "epilepsy_ecog": [14, 162, 197, 295], "eyelink": [14, 149, 240, 308, 309, 312, 320, 570, 657, 954], "visual": [14, 29, 33, 34, 39, 40, 41, 42, 58, 59, 61, 62, 67, 68, 71, 82, 83, 85, 87, 88, 96, 98, 100, 106, 113, 121, 128, 131, 132, 133, 134, 140, 142, 143, 146, 147, 155, 156, 158, 160, 161, 163, 167, 169, 171, 173, 174, 177, 178, 179, 180, 181, 186, 188, 192, 194, 197, 198, 201, 204, 205, 209, 213, 214, 218, 219, 223, 226, 228, 229, 230, 235, 237, 240, 241, 242, 243, 244, 245, 246, 256, 257, 259, 269, 270, 274, 276, 277, 283, 284, 285, 287, 288, 289, 292, 293, 294, 297, 298, 299, 300, 301, 304, 307, 318, 319, 320, 321, 323, 326, 329, 331, 332, 333, 334, 336, 338, 339, 341, 342, 344, 345, 346, 347, 375, 376, 377, 381, 410, 411, 412, 413, 418, 420, 421, 429, 432, 433, 489, 507, 510, 512, 524, 526, 536, 550, 551, 566, 589, 593, 601, 602, 612, 614, 616, 630, 632, 635, 639, 655, 658, 670, 678, 694, 696, 697, 700, 702, 705, 708, 710, 723, 732, 735, 736, 770, 775, 783, 785, 786, 787, 801, 811, 812, 814, 815, 816, 817, 833, 835, 839, 852, 858, 859, 865, 866, 868, 869, 870, 873, 876, 877, 878, 879, 880, 881, 882, 885, 886, 888, 902, 919, 920, 935, 939, 940, 941, 942, 944, 945, 948, 951, 955], "viz": [14, 23, 27, 29, 30, 31, 33, 45, 50, 53, 57, 61, 64, 66, 68, 72, 73, 77, 78, 83, 85, 86, 97, 106, 107, 114, 119, 120, 128, 136, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 158, 159, 161, 162, 163, 167, 168, 169, 170, 176, 177, 181, 182, 183, 184, 185, 186, 192, 196, 197, 203, 204, 206, 207, 208, 209, 210, 211, 212, 217, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 244, 260, 270, 273, 274, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 306, 307, 308, 309, 316, 318, 320, 329, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 377, 386, 397, 550, 551, 635, 692, 700, 710, 715, 783, 935, 938, 940, 954, 955], "brain": [14, 30, 31, 33, 34, 36, 37, 41, 45, 47, 48, 50, 52, 53, 54, 55, 57, 58, 59, 61, 64, 66, 67, 68, 69, 70, 72, 80, 84, 85, 87, 97, 108, 114, 121, 131, 136, 142, 150, 154, 156, 161, 172, 177, 181, 182, 184, 188, 196, 201, 202, 203, 204, 205, 207, 208, 210, 215, 216, 217, 218, 223, 226, 231, 232, 234, 235, 252, 255, 263, 264, 265, 270, 277, 278, 282, 283, 284, 289, 291, 292, 293, 294, 295, 300, 303, 304, 305, 306, 307, 308, 309, 312, 316, 317, 319, 320, 322, 323, 329, 331, 332, 333, 334, 336, 338, 339, 342, 343, 344, 345, 346, 347, 357, 364, 365, 371, 399, 429, 442, 450, 483, 489, 491, 517, 522, 535, 548, 550, 551, 561, 572, 589, 593, 598, 601, 602, 616, 622, 632, 633, 636, 640, 651, 666, 667, 669, 692, 700, 710, 715, 720, 732, 748, 772, 783, 785, 786, 787, 788, 789, 843, 846, 849, 851, 853, 854, 857, 863, 870, 893, 894, 898, 899, 903, 905, 935, 940, 942, 947, 948, 953, 954, 955], "clickableimag": [14, 142, 954], "evokedfield": [14, 333, 334, 870, 954], "figure3d": [14, 309, 318, 329, 333, 334, 338, 339, 341, 342, 344, 345, 346, 347, 835, 843, 851, 863, 870, 893, 894, 898, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 954], "add_background_imag": [14, 954], "centers_to_edg": [14, 141, 292], "compare_fiff": [14, 954], "circular_layout": [14, 73], "iter_topographi": [14, 159, 288, 301], "mne_analyze_colormap": [14, 954], "plot_bem": [14, 184, 186, 283, 286, 291, 292, 301, 320, 377, 851, 935], "plot_brain_colorbar": [14, 273, 289], "plot_bridged_electrod": [14, 97, 304], "plot_chpi_snr": [14, 236, 295], "plot_cov": [14, 29, 68, 203, 286, 289], "plot_channel_labels_circl": [14, 161, 295], "plot_ch_adjac": [14, 260, 304, 386, 397], "plot_csd": [14, 954], "plot_dipole_amplitud": [14, 61, 66, 77, 85, 86], "plot_dipole_loc": [14, 29, 61, 66, 77, 85, 86, 204, 209, 211, 212, 282, 284, 289, 291, 292, 304], "plot_drop_log": [14, 177, 228, 238, 281, 294, 301, 303, 331, 332], "plot_epoch": [14, 280, 282, 284, 288, 291, 293, 295, 300, 309, 904, 954], "plot_epochs_psd_topomap": [14, 292, 307, 954], "plot_ev": [14, 30, 33, 163, 192, 238, 244, 291, 292, 301, 302, 331, 332, 865], "plot_evok": [14, 278, 282, 285, 294, 299, 300, 304, 954], "plot_evoked_imag": [14, 128, 286, 304], "plot_evoked_topo": [14, 158, 176, 238, 278, 280, 282, 283, 284, 285, 287, 291, 294, 304, 306], "plot_evoked_topomap": [14, 278, 283, 284, 285, 291, 292, 293, 301, 304, 305, 954], "plot_evoked_joint": [14, 285, 287, 295, 954], "plot_evoked_field": [14, 274, 278, 288, 291, 900], "plot_evoked_whit": [14, 209, 285, 292, 333, 334, 869], "plot_filt": [14, 223, 229, 230, 284, 292, 293, 305, 306, 483, 490, 883, 954], "plot_head_posit": [14, 106, 107, 236, 237, 284, 286], "plot_ideal_filt": [14, 229, 284, 876], "plot_compare_evok": [14, 27, 30, 128, 167, 168, 169, 170, 176, 177, 192, 238, 260, 273, 278, 283, 285, 286, 288, 289, 292, 293, 294, 295, 304, 305, 331, 332, 866, 938], "plot_ica_sourc": [14, 281, 289, 904, 954], "plot_ica_compon": [14, 278, 291, 304, 306, 635, 954], "plot_ica_properti": [14, 283, 294, 954], "plot_ica_scor": [14, 281, 295, 954], "plot_ica_overlai": [14, 293, 305, 954], "plot_epochs_imag": [14, 114, 144, 280, 282, 283, 285, 289, 291, 293, 306, 635, 878, 880], "plot_layout": [14, 282, 285, 331, 332, 333, 334, 336, 550, 551, 891, 954], "plot_montag": [14, 285, 294, 954], "plot_projs_topomap": [14, 166, 168, 175, 234, 246, 278, 282, 284, 287, 291, 302, 331, 332, 333, 334, 550, 551, 886, 954], "plot_projs_joint": [14, 234, 304], "plot_raw": [14, 197, 278, 282, 283, 285, 293, 295, 300, 331, 332, 333, 334, 336, 550, 551, 891, 904, 954], "plot_raw_psd": [14, 284, 285, 302, 954], "plot_regression_weight": [14, 305, 954], "plot_sensor": [14, 94, 168, 177, 196, 208, 217, 246, 273, 282, 283, 284, 285, 287, 291, 295, 307, 308, 331, 332, 333, 334, 336, 550, 551], "plot_snr_estim": [14, 83, 287, 292], "plot_source_estim": [14, 87, 278, 283, 285, 289, 292, 293, 294, 833, 900], "link_brain": [14, 291, 900, 954], "plot_volume_source_estim": [14, 278, 287, 289, 292, 295, 954], "plot_vector_source_estim": [14, 87, 291, 292, 900], "plot_sparse_source_estim": [14, 57, 61, 66, 72, 85, 119, 292, 295, 303, 900], "plot_tfr_topomap": [14, 278, 291, 305, 307, 954], "plot_topo_image_epoch": [14, 282, 288, 954], "plot_topomap": [14, 26, 41, 42, 44, 45, 47, 68, 97, 98, 106, 113, 127, 136, 167, 168, 170, 176, 177, 192, 196, 202, 203, 218, 226, 234, 238, 246, 260, 268, 269, 270, 274, 278, 280, 282, 285, 286, 288, 291, 292, 294, 295, 300, 301, 304, 305, 307, 328, 331, 332, 333, 334, 340, 550, 551, 635, 783, 785, 786, 788, 789, 855, 867, 872, 880, 954], "plot_align": [14, 29, 31, 50, 78, 107, 136, 142, 145, 151, 152, 153, 161, 162, 182, 183, 184, 185, 196, 204, 208, 209, 210, 211, 212, 278, 285, 286, 287, 289, 291, 292, 293, 294, 295, 303, 304, 316, 320, 331, 332, 333, 334, 336, 377, 550, 551, 853, 891, 900, 905, 935], "snapshot_brain_montag": [14, 142, 162, 284, 294, 295, 900], "plot_arrowmap": [14, 146, 176, 287, 304, 305], "set_3d_backend": [14, 292, 295, 919, 940, 954], "get_3d_backend": [14, 295], "use_3d_backend": [14, 288, 954], "set_3d_opt": [14, 292, 304, 940, 954], "set_3d_view": [14, 29, 31, 50, 78, 107, 136, 142, 145, 152, 153, 162, 182, 183, 184, 185, 186, 196, 204, 209, 212, 278, 293], "set_3d_titl": [14, 151, 153, 176, 293], "create_3d_figur": [14, 152, 182, 186, 204, 836], "close_3d_figur": [14, 954], "close_all_3d_figur": [14, 954], "get_brain_class": [14, 154, 181], "set_browser_backend": [14, 295, 303, 331, 332, 550, 551, 635, 865, 882, 888, 920, 954], "get_browser_backend": [14, 295], "use_browser_backend": [14, 177, 227, 230, 232, 233, 234, 235, 295, 331, 332, 550, 551, 635, 865, 882, 888], "ui": [14, 274, 278, 303, 333, 334, 833, 835, 874, 913], "event": [14, 26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 53, 54, 58, 59, 60, 68, 71, 72, 75, 88, 97, 98, 99, 100, 101, 104, 106, 107, 108, 109, 110, 111, 114, 117, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 144, 148, 149, 155, 158, 161, 162, 166, 167, 168, 169, 171, 172, 175, 178, 179, 180, 188, 191, 195, 199, 200, 203, 206, 208, 209, 210, 211, 212, 215, 216, 218, 219, 223, 226, 227, 228, 229, 230, 231, 232, 234, 236, 238, 239, 243, 246, 247, 248, 250, 251, 252, 256, 257, 258, 259, 260, 263, 265, 268, 269, 270, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 307, 308, 316, 317, 319, 320, 323, 324, 325, 326, 331, 332, 333, 334, 336, 341, 342, 350, 354, 382, 422, 423, 430, 431, 432, 438, 464, 484, 499, 504, 506, 507, 512, 524, 525, 540, 550, 551, 559, 566, 567, 568, 570, 574, 576, 581, 593, 595, 600, 625, 626, 630, 632, 635, 636, 637, 638, 643, 647, 648, 652, 653, 660, 661, 662, 663, 664, 684, 694, 695, 696, 697, 700, 710, 733, 762, 769, 783, 785, 786, 787, 833, 834, 835, 859, 865, 866, 868, 870, 874, 882, 888, 896, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 925, 935, 938, 954, 955], "preprocess": [14, 26, 29, 30, 33, 35, 36, 37, 39, 40, 41, 42, 44, 45, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 126, 139, 149, 163, 170, 172, 198, 210, 215, 218, 219, 222, 223, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 240, 242, 246, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 303, 304, 305, 306, 307, 308, 312, 317, 318, 319, 320, 325, 331, 332, 333, 334, 336, 341, 422, 483, 487, 490, 492, 504, 512, 524, 550, 551, 571, 573, 580, 629, 632, 695, 788, 833, 855, 859, 865, 868, 873, 877, 878, 879, 880, 881, 882, 888, 935, 938, 948, 954, 955], "compute_proj_epoch": [14, 218, 233, 234, 278, 288, 425, 426], "compute_proj_evok": [14, 26, 233, 278, 424, 426], "compute_proj_raw": [14, 233, 234, 278, 288, 320, 424, 425], "layout": [14, 36, 38, 39, 41, 45, 53, 65, 67, 73, 84, 97, 98, 99, 100, 117, 127, 134, 141, 142, 147, 150, 156, 158, 159, 168, 170, 172, 176, 177, 185, 186, 198, 202, 207, 209, 212, 216, 222, 229, 234, 237, 238, 239, 252, 255, 257, 258, 260, 269, 278, 282, 284, 285, 288, 291, 293, 295, 298, 300, 302, 304, 319, 320, 331, 332, 333, 334, 336, 340, 387, 389, 391, 394, 395, 396, 406, 443, 550, 551, 558, 562, 564, 575, 576, 598, 783, 785, 786, 788, 789, 801, 811, 834, 839, 848, 851, 859, 873, 884, 887, 896, 902, 903, 955], "digmontag": [14, 196, 208, 284, 285, 289, 292, 293, 294, 295, 302, 304, 307, 319, 331, 332, 333, 334, 336, 383, 384, 393, 396, 398, 399, 400, 401, 402, 403, 404, 405, 434, 535, 550, 551, 563, 665, 667, 885, 905, 954], "compute_native_head_t": [14, 161, 185, 208, 292, 380], "fix_mag_coil_typ": [14, 292, 550, 954], "read_polhemus_fastscan": [14, 289, 293, 304, 405, 954], "get_builtin_montag": [14, 153, 196, 285, 304, 331, 332, 333, 334, 336, 396, 535, 550, 551], "make_dig_montag": [14, 289, 304, 306, 320, 331, 332, 333, 334, 336, 380, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 550, 551, 575, 954], "read_dig_polhemus_isotrak": [14, 215, 289, 304, 320, 380, 393, 396, 399, 400, 401, 402, 403, 404, 407, 954], "read_dig_captrak": [14, 292, 320, 380, 393, 396, 400, 401, 402, 403, 404, 405, 954], "read_dig_dat": [14, 291, 320, 380, 396, 399, 401, 402, 403, 404, 405, 563, 954], "read_dig_egi": [14, 289, 320, 380, 393, 396, 399, 400, 402, 403, 404, 405, 954], "read_dig_fif": [14, 185, 289, 320, 380, 393, 396, 399, 400, 401, 403, 404, 405], "read_dig_hpt": [14, 291, 304, 320, 380, 396, 399, 400, 401, 402, 404, 954], "read_dig_localit": [14, 295, 380, 393, 399, 400, 401, 402, 403, 405, 954], "make_standard_montag": [14, 34, 45, 97, 109, 153, 185, 196, 217, 270, 289, 291, 303, 331, 332, 333, 334, 336, 391, 398, 550, 551, 563, 575], "read_custom_montag": [14, 208, 217, 289, 291, 292, 294, 304, 331, 332, 333, 334, 336, 396, 550, 551], "compute_dev_head_t": [14, 289, 393, 954], "read_layout": [14, 142, 196, 298, 307, 381], "find_layout": [14, 168, 196, 282, 284, 291, 300, 954], "make_eeg_layout": [14, 196, 389, 395], "make_grid_layout": [14, 389, 394, 954], "find_ch_adjac": [14, 255, 256, 257, 260, 292, 294, 306, 397, 763, 770, 771, 773, 774, 856], "get_builtin_ch_adjac": [14, 255, 386, 397, 856], "read_ch_adjac": [14, 255, 278, 292, 304, 386, 390, 763, 856, 954], "equalize_channel": [14, 291, 409, 954], "unify_bad_channel": [14, 954], "rename_channel": [14, 94, 101, 139, 155, 166, 175, 177, 185, 211, 238, 243, 291, 292, 294, 301, 302, 308, 331, 332, 333, 334, 336, 380, 409, 550, 551, 562, 575], "generate_2d_layout": [14, 394, 395, 834, 954], "make_1020_channel_select": [14, 94, 155, 256, 287, 307], "combine_channel": [14, 177, 292, 304, 308, 409], "xdawn": [14, 43, 46, 53, 104, 111, 277, 280, 283, 285, 291, 328, 331, 333, 334, 336, 428, 443, 483, 487, 490, 498, 550, 632, 697, 866, 955], "eogregress": [14, 100, 231, 239, 305, 307, 680, 890], "annotate_amplitud": [14, 303, 659, 670, 954], "annotate_break": [14, 228, 295], "annotate_mov": [14, 107, 236, 291, 292, 303], "annotate_muscle_zscor": [14, 108, 292, 303], "annotate_nan": [14, 303, 954], "compute_average_dev_head_t": [14, 107, 291, 639], "compute_current_source_dens": [14, 98, 291, 292, 304, 727], "compute_bridged_electrod": [14, 97, 304, 669, 855], "compute_fine_calibr": [14, 293, 954], "compute_maxwell_basi": [14, 294, 307, 954], "compute_proj_ecg": [14, 172, 233, 234, 285, 294, 316, 652, 660], "compute_proj_eog": [14, 218, 233, 234, 285, 288, 294, 316, 653, 661], "compute_proj_hfc": [14, 29, 239, 307], "cortical_signal_suppress": [14, 95, 295], "create_ecg_epoch": [14, 226, 228, 232, 234, 282, 283, 284, 286, 288, 647, 660], "create_eog_epoch": [14, 33, 198, 226, 228, 231, 232, 234, 284, 285, 287, 294, 318, 648, 661], "find_bad_channels_maxwel": [14, 237, 291, 292, 295, 304, 670], "find_ecg_ev": [14, 226, 228, 234, 245, 288, 290, 293, 294, 647, 652], "find_eog_ev": [14, 99, 226, 228, 245, 285, 287, 294, 318, 325, 648, 653], "fix_stim_artifact": [14, 26, 284, 293], "ica_find_ecg_ev": [14, 954], "ica_find_eog_ev": [14, 954], "infomax": [14, 103, 232, 277, 280, 283, 288, 291, 301, 635, 938, 954], "interpolate_bridged_electrod": [14, 97, 304, 305], "equalize_bad": [14, 294, 954], "maxwell_filt": [14, 106, 210, 236, 237, 278, 281, 282, 283, 284, 286, 287, 292, 294, 304, 307, 504, 645, 659, 671, 877, 935], "maxwell_filter_prepare_emptyroom": [14, 304, 954], "oversampled_temporal_project": [14, 110, 286], "peak_find": [14, 286, 288, 318, 954], "read_ica": [14, 232, 635], "read_eog_regress": [14, 954], "realign_raw": [14, 240, 278, 293, 295], "regress_artifact": [14, 292, 305, 307, 954], "corrmap": [14, 232, 280, 291, 308], "read_ica_eeglab": [14, 291, 293, 294, 954], "read_fine_calibr": [14, 954], "write_fine_calibr": 14, "optical_dens": [14, 102, 238, 291, 295], "beer_lambert_law": [14, 238, 291, 295], "source_detector_dist": [14, 238, 291], "short_channel": [14, 291, 954], "scalp_coupling_index": [14, 238, 291, 292], "temporal_derivative_distribution_repair": [14, 102, 292, 304], "project_sensors_onto_brain": [14, 295, 307, 954], "make_montage_volum": [14, 307, 954], "warp_montag": [14, 307, 954], "calibr": [14, 215, 219, 237, 277, 281, 284, 293, 302, 308, 336, 503, 504, 645, 646, 657, 659, 670, 681, 686], "read_eyelink_calibr": [14, 240, 308, 655], "set_channel_types_eyetrack": [14, 219], "interpolate_blink": [14, 149, 240, 308], "add_reference_channel": [14, 235, 278, 280, 283, 293, 304, 331, 332, 333, 334, 336, 550, 551, 783, 785, 786, 787, 788, 789], "set_bipolar_refer": [14, 94, 235, 283, 285, 288, 293, 294, 306, 331, 332, 333, 334, 550, 551, 727], "set_eeg_refer": [14, 26, 55, 94, 98, 120, 121, 177, 185, 188, 193, 208, 216, 231, 233, 235, 251, 270, 283, 285, 286, 289, 292, 305, 331, 332, 333, 334, 550, 551, 634, 724, 747, 938], "construct_iir_filt": [14, 229, 283, 331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551, 647, 648], "create_filt": [14, 229, 230, 284, 331, 332, 333, 334, 521, 522, 550, 551, 876], "estimate_ringing_sampl": [14, 954], "filter_data": [14, 229, 283, 284, 287, 331, 332, 333, 334, 494, 518, 519, 522, 550, 551, 954], "notch_filt": [14, 26, 31, 108, 162, 193, 218, 230, 237, 239, 292, 307, 331, 332, 333, 334, 521, 550, 551, 954], "compute_chpi_amplitud": [14, 236, 291, 292, 411, 412], "compute_chpi_snr": [14, 236, 295, 308, 410, 858], "compute_chpi_loc": [14, 236, 237, 291, 294, 410, 412, 413], "compute_head_po": [14, 107, 236, 237, 278, 291, 411, 414, 670], "extract_chpi_locs_ctf": [14, 107, 291, 411, 413], "extract_chpi_locs_kit": [14, 294, 954], "filter_chpi": [14, 237, 285, 291, 292, 670], "get_active_chpi": [14, 237, 305], "get_chpi_info": [14, 236, 295], "head_pos_to_trans_rot_t": [14, 420, 421, 734, 735, 736, 748, 954], "read_head_po": [14, 106, 236, 237, 411, 413, 419, 421, 504, 659, 670, 734, 735, 736, 748], "write_head_po": [14, 236, 411, 413, 419, 420], "quat_to_rot": [14, 826], "rot_to_quat": [14, 824], "read_ras_mni_t": [14, 208], "annot": [14, 34, 35, 53, 64, 67, 70, 73, 95, 102, 104, 109, 111, 117, 121, 122, 139, 140, 149, 154, 155, 161, 162, 170, 172, 177, 186, 191, 192, 197, 199, 201, 207, 216, 217, 218, 219, 222, 226, 232, 235, 246, 247, 248, 251, 273, 278, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 301, 303, 304, 305, 307, 308, 317, 318, 319, 320, 326, 331, 332, 333, 334, 336, 350, 413, 414, 428, 432, 437, 458, 512, 549, 550, 551, 552, 559, 564, 566, 570, 572, 580, 594, 635, 637, 638, 639, 640, 641, 642, 652, 653, 656, 659, 660, 661, 670, 671, 684, 688, 697, 705, 721, 724, 788, 833, 851, 877, 880, 888, 889, 903, 904, 930, 954, 955], "acqparserfif": [14, 88, 283, 336, 550, 954], "concatenate_ev": [14, 954], "count_ev": [14, 307, 954], "find_ev": [14, 26, 29, 31, 33, 36, 58, 59, 60, 68, 71, 72, 75, 98, 99, 100, 106, 110, 117, 120, 122, 126, 134, 135, 137, 140, 166, 167, 168, 175, 178, 188, 192, 194, 197, 198, 203, 206, 208, 209, 211, 218, 223, 227, 230, 231, 232, 234, 239, 240, 244, 251, 252, 257, 268, 269, 283, 285, 286, 287, 299, 302, 303, 316, 319, 320, 336, 509, 525, 559, 566, 574, 581, 595, 630, 684, 697, 938], "find_stim_step": [14, 299, 524, 954], "make_fixed_length_ev": [14, 38, 47, 192, 194, 244, 250, 282, 286, 288, 308, 319, 428, 608], "make_fixed_length_epoch": [14, 172, 291, 292, 293, 294, 295, 326], "merge_ev": [14, 167, 244, 282, 423], "pick_ev": [14, 168, 244], "read_annot": [14, 163, 245, 278, 286, 287, 288, 289, 291, 833], "concatenate_epoch": [14, 218, 283, 284, 285, 287, 292, 295], "events_from_annot": [14, 34, 35, 139, 149, 155, 161, 162, 163, 170, 194, 238, 270, 287, 288, 289, 292, 325, 350, 559, 566], "annotations_from_ev": [14, 194, 291, 325, 512], "count_annot": [14, 308, 954], "define_target_ev": [14, 96, 111, 155, 955], "match_event_nam": [14, 303, 954], "shift_time_ev": [14, 288], "average_mov": [14, 106, 237, 281, 292, 670], "combine_event_id": [14, 331, 954], "equalize_epoch_count": [14, 263], "make_metadata": [14, 198, 278, 294], "space": [14, 24, 29, 31, 36, 43, 46, 48, 49, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 85, 86, 87, 95, 101, 109, 114, 117, 119, 120, 121, 122, 125, 129, 132, 133, 135, 136, 140, 142, 146, 147, 152, 157, 160, 161, 162, 166, 173, 174, 177, 181, 182, 186, 188, 192, 194, 196, 198, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 226, 232, 235, 241, 242, 243, 246, 250, 252, 255, 256, 260, 262, 264, 267, 268, 269, 273, 277, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 306, 307, 308, 312, 317, 319, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 364, 365, 380, 384, 393, 398, 416, 417, 420, 424, 425, 426, 428, 429, 432, 433, 436, 439, 443, 483, 486, 487, 490, 491, 493, 497, 500, 501, 504, 512, 517, 524, 528, 537, 539, 541, 544, 545, 546, 547, 548, 550, 551, 554, 556, 559, 566, 576, 588, 589, 594, 596, 597, 601, 602, 603, 604, 605, 606, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 622, 631, 632, 634, 635, 645, 646, 647, 648, 659, 665, 670, 691, 693, 697, 700, 702, 704, 705, 712, 714, 717, 719, 721, 722, 723, 731, 732, 733, 740, 743, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 767, 768, 770, 771, 773, 774, 775, 778, 779, 783, 785, 786, 788, 789, 797, 819, 833, 851, 853, 859, 865, 866, 867, 868, 871, 872, 874, 877, 878, 882, 887, 888, 890, 893, 894, 895, 897, 898, 899, 903, 932, 935, 947, 955], "combine_evok": [14, 30, 33, 126, 167, 170, 175, 177, 192, 202, 218, 238, 256, 258, 274, 283, 287, 289, 292, 294, 938], "concatenate_raw": [14, 34, 35, 36, 107, 139, 218, 283, 284, 285, 295, 301, 307, 317, 331, 332, 333, 334, 430, 431, 550, 551, 659, 670], "grand_averag": [14, 175, 177, 287, 289, 291, 302], "match_channel_ord": [14, 954], "pick_channel": [14, 71, 166, 175, 177, 195, 196, 240, 257, 278, 286, 291, 301, 303, 304, 307, 328, 331, 332, 333, 334, 335, 550, 551, 629, 783, 784, 785, 786, 787, 788, 789], "pick_channels_cov": 14, "pick_channels_forward": [14, 351, 352], "pick_channels_regexp": [14, 195, 227, 232, 234, 239, 626], "pick_typ": [14, 26, 31, 33, 34, 36, 37, 39, 40, 41, 47, 48, 52, 54, 60, 75, 95, 96, 99, 101, 114, 119, 120, 123, 124, 126, 127, 130, 131, 134, 135, 137, 138, 146, 148, 159, 166, 175, 176, 178, 188, 195, 196, 198, 203, 209, 226, 227, 228, 230, 231, 234, 238, 239, 243, 252, 257, 258, 259, 260, 263, 265, 269, 270, 278, 292, 299, 301, 302, 304, 307, 309, 320, 331, 332, 333, 334, 550, 551, 626, 783, 785, 786, 787, 788, 789, 938], "pick_types_forward": [14, 81, 95, 119, 351, 352], "pick_info": [14, 52, 146, 161, 193, 195, 252, 287, 303], "read_vectorview_select": [14, 71, 252, 257, 294], "baselin": [14, 18, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 96, 98, 99, 100, 101, 102, 105, 106, 109, 110, 112, 113, 114, 117, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 149, 152, 155, 158, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 186, 188, 191, 192, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 226, 227, 228, 230, 231, 232, 234, 238, 239, 240, 250, 252, 256, 257, 258, 259, 260, 263, 265, 269, 270, 273, 274, 277, 283, 287, 289, 292, 293, 294, 297, 303, 304, 305, 308, 316, 319, 320, 323, 326, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 422, 423, 428, 450, 524, 550, 551, 594, 600, 618, 619, 635, 652, 653, 677, 693, 700, 701, 768, 783, 787, 859, 875, 879, 892, 895, 926, 935, 955], "rescal": [14, 41, 90, 134, 140, 141, 287, 301, 439, 440, 441, 653, 783, 787, 895], "covari": [14, 29, 31, 34, 35, 37, 38, 41, 45, 47, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 93, 95, 107, 114, 117, 119, 120, 121, 130, 131, 134, 135, 136, 137, 140, 150, 152, 156, 175, 178, 189, 190, 191, 192, 202, 204, 205, 207, 208, 209, 210, 211, 212, 218, 223, 227, 228, 232, 252, 263, 265, 277, 278, 282, 283, 285, 286, 287, 288, 291, 296, 297, 298, 299, 301, 302, 304, 305, 317, 319, 323, 331, 332, 333, 334, 335, 336, 341, 342, 361, 364, 365, 367, 369, 385, 422, 423, 424, 426, 427, 428, 439, 440, 441, 483, 489, 490, 491, 508, 524, 526, 527, 545, 547, 548, 550, 551, 556, 590, 601, 602, 603, 604, 605, 606, 608, 609, 613, 615, 618, 619, 627, 635, 636, 691, 697, 702, 737, 747, 769, 784, 796, 833, 860, 865, 869, 873, 875, 888, 924, 954, 955], "comput": [14, 19, 21, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 43, 45, 48, 49, 50, 52, 53, 57, 62, 64, 69, 70, 74, 76, 78, 83, 87, 95, 98, 99, 103, 105, 107, 113, 114, 119, 120, 122, 123, 124, 125, 127, 132, 140, 141, 142, 146, 147, 148, 151, 152, 157, 160, 161, 167, 168, 171, 172, 175, 176, 177, 178, 181, 182, 183, 186, 189, 191, 192, 193, 194, 197, 198, 201, 202, 204, 207, 208, 209, 210, 211, 212, 213, 216, 218, 222, 223, 227, 228, 230, 234, 235, 237, 239, 243, 246, 250, 251, 252, 255, 256, 259, 268, 269, 270, 274, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 317, 319, 324, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 349, 351, 352, 355, 356, 357, 358, 359, 361, 364, 365, 366, 367, 369, 370, 372, 383, 384, 386, 388, 393, 397, 410, 411, 412, 413, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 439, 440, 441, 450, 483, 484, 487, 488, 489, 490, 491, 495, 499, 502, 512, 517, 522, 524, 526, 527, 528, 533, 539, 541, 545, 546, 547, 548, 550, 551, 556, 558, 563, 564, 566, 588, 591, 592, 593, 595, 596, 597, 598, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 632, 633, 635, 636, 639, 642, 643, 645, 646, 647, 648, 649, 652, 659, 666, 668, 687, 689, 690, 691, 692, 697, 700, 701, 702, 704, 705, 712, 714, 717, 719, 721, 723, 725, 727, 731, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 748, 751, 753, 754, 755, 756, 757, 758, 759, 764, 765, 766, 769, 770, 771, 773, 774, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 803, 804, 809, 810, 811, 812, 813, 814, 815, 816, 817, 821, 822, 827, 833, 851, 852, 853, 859, 860, 862, 863, 865, 866, 867, 874, 875, 882, 887, 888, 894, 903, 928, 935, 942, 944, 947, 948, 951], "compute_covari": [14, 29, 31, 33, 60, 68, 72, 75, 110, 120, 148, 178, 188, 203, 206, 208, 209, 211, 212, 223, 251, 282, 283, 287, 291, 297, 302, 316, 328, 428, 441, 483, 490, 491, 613, 636, 691, 831, 935], "compute_raw_covari": [14, 68, 114, 136, 188, 210, 218, 228, 282, 284, 291, 316, 328, 423, 613, 691, 831], "cov": [14, 29, 31, 37, 47, 57, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 91, 95, 110, 117, 119, 120, 121, 122, 148, 178, 198, 202, 204, 205, 207, 208, 209, 210, 211, 212, 218, 222, 223, 251, 252, 287, 288, 291, 294, 295, 309, 316, 317, 323, 328, 341, 342, 423, 428, 526, 590, 603, 625, 635, 691, 709, 737, 747, 831, 860, 924, 935, 954], "compute_whiten": [14, 288, 294, 295, 302, 954], "prepare_noise_cov": [14, 302, 439, 954], "regular": [14, 27, 29, 31, 54, 55, 56, 60, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 80, 81, 83, 84, 85, 87, 105, 109, 117, 121, 126, 131, 134, 135, 136, 137, 148, 192, 195, 204, 205, 206, 207, 208, 218, 223, 227, 234, 237, 250, 251, 252, 255, 263, 265, 281, 282, 284, 285, 287, 291, 295, 297, 299, 302, 310, 316, 333, 334, 337, 343, 364, 365, 423, 427, 428, 439, 440, 483, 490, 491, 495, 504, 512, 526, 527, 545, 547, 548, 559, 562, 566, 574, 602, 603, 604, 605, 606, 608, 609, 610, 613, 615, 618, 619, 629, 636, 644, 646, 659, 670, 705, 760, 763, 770, 771, 773, 774, 777, 874, 875, 892, 949], "compute_rank": [14, 29, 60, 288, 292, 295, 328, 491, 860], "make_ad_hoc_cov": [14, 117, 120, 122, 252, 286, 328, 365], "mri": [14, 29, 31, 50, 52, 56, 61, 66, 67, 69, 70, 71, 76, 85, 120, 121, 136, 142, 152, 153, 161, 162, 176, 183, 184, 187, 189, 190, 191, 192, 196, 197, 202, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 243, 252, 277, 280, 284, 286, 287, 288, 289, 291, 292, 293, 294, 295, 300, 301, 303, 304, 305, 309, 312, 316, 319, 328, 329, 331, 333, 334, 335, 336, 341, 342, 343, 344, 346, 347, 370, 371, 372, 375, 376, 377, 380, 384, 393, 396, 398, 402, 423, 429, 434, 435, 436, 442, 443, 457, 459, 460, 502, 517, 524, 526, 534, 535, 536, 542, 543, 544, 550, 551, 566, 583, 585, 593, 596, 597, 601, 602, 613, 666, 689, 712, 714, 719, 720, 721, 722, 726, 731, 732, 751, 778, 819, 820, 822, 823, 825, 833, 846, 851, 853, 863, 899, 903, 928, 935, 942, 945, 948, 955], "coreg": [14, 142, 161, 183, 184, 185, 186, 197, 278, 286, 287, 288, 289, 291, 292, 293, 294, 295, 301, 303, 305, 316, 320, 380, 542, 544, 851], "get_mni_fiduci": [14, 186, 289, 293, 380, 435, 851], "estimate_head_mri_t": [14, 142, 161, 295], "read_fiduci": [14, 303, 434, 954], "write_fiduci": 14, "get_montage_volume_label": [14, 161, 295, 303, 833], "create_default_subject": [14, 284, 954], "head_to_mni": [14, 954], "head_to_mri": [14, 287, 305, 306, 954], "read_lta": [14, 307, 954], "read_talxfm": [14, 161, 186], "scale_mri": [14, 183, 293, 300, 303, 434, 722], "scale_bem": [14, 303, 721, 954], "scale_label": [14, 721, 954], "scale_source_spac": [14, 721, 954], "apply_volume_registr": [14, 295, 303], "apply_volume_registration_point": [14, 307], "compute_volume_registr": [14, 295, 303, 305, 821, 822], "vertex_to_mni": [14, 63, 337, 342], "forward": [14, 29, 31, 33, 38, 48, 51, 52, 57, 58, 59, 60, 61, 64, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 95, 99, 106, 117, 119, 120, 121, 122, 157, 161, 172, 181, 182, 186, 187, 190, 192, 196, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 215, 218, 223, 226, 227, 228, 229, 231, 232, 234, 235, 251, 252, 277, 278, 280, 282, 283, 285, 287, 288, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 312, 317, 319, 323, 331, 332, 333, 334, 336, 339, 341, 342, 344, 345, 347, 351, 352, 353, 364, 365, 366, 367, 369, 370, 380, 384, 385, 396, 402, 433, 443, 459, 483, 490, 494, 508, 510, 511, 518, 519, 521, 522, 545, 546, 547, 548, 550, 551, 556, 566, 591, 592, 596, 597, 598, 611, 612, 613, 614, 617, 628, 633, 689, 702, 712, 723, 727, 731, 732, 734, 735, 736, 747, 748, 783, 827, 833, 851, 853, 872, 876, 901, 903, 927, 942, 951, 954, 955], "sourcespac": [14, 52, 67, 69, 71, 76, 136, 184, 185, 186, 202, 235, 284, 288, 289, 292, 302, 303, 305, 319, 320, 335, 337, 338, 339, 342, 345, 346, 347, 349, 429, 517, 537, 546, 588, 589, 597, 611, 612, 617, 622, 712, 731, 732, 733, 740, 743, 745, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 775, 778, 779, 833, 851, 853, 893, 898, 899, 932], "add_source_space_dist": [14, 291, 954], "apply_forward": [14, 184, 295, 352], "apply_forward_raw": [14, 295, 302, 351], "average_forward_solut": [14, 320, 954], "convert_forward_solut": [14, 31, 48, 73, 74, 75, 80, 81, 95, 184, 204, 251, 285, 288, 320, 597, 702, 927], "decimate_surfac": [14, 291], "dig_mri_dist": [14, 182, 289, 303, 434], "compute_depth_prior": [14, 288, 364, 365, 528, 545, 547, 548, 613, 954], "compute_orient_prior": [14, 527, 954], "restrict_forward_to_label": [14, 285, 308, 530, 954], "restrict_forward_to_stc": [14, 285, 529, 954], "make_bem_model": [14, 184, 187, 218, 280, 288, 291, 316, 344, 370, 434, 502, 533, 592, 597, 598, 690, 719, 721, 732, 928], "make_bem_solut": [14, 136, 184, 218, 280, 316, 320, 370, 434, 502, 533, 591, 597, 598, 689, 690, 719, 721, 732, 928], "make_forward_dipol": [14, 71, 202, 282, 292, 304], "make_forward_solut": [14, 31, 33, 52, 67, 76, 136, 184, 185, 208, 218, 235, 282, 286, 291, 295, 303, 316, 320, 335, 613, 702, 827], "make_field_map": [14, 33, 152, 176, 274, 285, 287, 304, 305, 333, 334, 835, 870], "make_sphere_model": [14, 29, 110, 153, 182, 209, 210, 211, 212, 235, 287, 320, 591], "morph_source_spac": [14, 52, 280, 342, 345], "sensitivity_map": [14, 48, 52, 157, 184], "setup_source_spac": [14, 50, 67, 136, 181, 184, 186, 204, 218, 288, 289, 291, 301, 316, 320, 344, 712, 732, 753, 757], "setup_volume_source_spac": [14, 50, 67, 76, 182, 184, 186, 235, 284, 285, 288, 289, 291, 292, 295, 320, 338, 339, 342, 344, 345, 346, 347, 517, 589, 712, 731], "surfac": [14, 29, 31, 37, 48, 50, 52, 53, 57, 60, 61, 62, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 84, 85, 87, 95, 98, 107, 117, 119, 121, 136, 142, 143, 145, 147, 152, 153, 160, 161, 162, 176, 181, 182, 183, 185, 189, 190, 191, 192, 197, 198, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 215, 217, 218, 223, 226, 235, 237, 245, 251, 252, 255, 263, 264, 265, 274, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 312, 317, 319, 329, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 364, 365, 372, 375, 376, 377, 403, 429, 433, 434, 457, 460, 482, 502, 517, 528, 533, 534, 539, 541, 542, 544, 545, 547, 548, 576, 587, 589, 591, 592, 593, 597, 602, 603, 604, 605, 606, 609, 611, 612, 613, 618, 619, 621, 622, 644, 645, 665, 666, 687, 690, 702, 705, 710, 712, 713, 716, 719, 721, 731, 732, 746, 747, 748, 749, 752, 754, 755, 758, 760, 778, 779, 813, 816, 819, 822, 833, 835, 851, 853, 863, 870, 893, 894, 898, 923, 927, 928, 933, 935, 940, 942, 945, 947, 948, 954, 955], "complete_surface_info": [14, 954], "read_curvatur": [14, 186], "use_coil_def": [14, 31, 136], "conductormodel": [14, 29, 31, 71, 136, 184, 209, 210, 211, 212, 319, 328, 331, 332, 333, 334, 336, 340, 372, 380, 483, 490, 526, 550, 551, 591, 592, 597, 598, 634, 635, 650, 689, 732, 783, 785, 786, 788, 789, 851, 852, 859, 867, 869, 871, 874, 875, 878, 885, 887, 889, 890, 891, 895, 897, 922], "fit_sphere_to_headshap": [14, 278, 282, 504, 645, 646, 659, 670], "get_fitting_dig": [14, 502], "make_watershed_bem": [14, 184, 218, 291, 292, 304, 319, 935, 954], "make_flash_bem": [14, 184, 280, 288, 304, 319, 371, 954], "make_scalp_surfac": [14, 187, 283, 284, 285, 286, 294, 295, 303, 304, 948, 954], "convert_flash_mri": [14, 304, 308, 320, 375, 954], "distance_to_bem": [14, 304, 954], "invers": [14, 31, 33, 37, 45, 47, 58, 59, 60, 64, 69, 70, 71, 72, 74, 76, 77, 80, 81, 82, 84, 85, 86, 87, 114, 117, 132, 133, 134, 135, 136, 137, 152, 175, 181, 182, 185, 186, 188, 196, 198, 201, 202, 204, 205, 206, 207, 208, 214, 215, 218, 223, 227, 233, 235, 251, 252, 263, 265, 277, 280, 284, 285, 287, 288, 291, 292, 293, 296, 297, 299, 301, 302, 304, 305, 312, 319, 323, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 364, 365, 422, 429, 435, 436, 441, 489, 497, 501, 517, 545, 546, 547, 550, 551, 588, 597, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 632, 635, 636, 691, 697, 700, 702, 704, 705, 712, 731, 732, 800, 833, 851, 862, 863, 892, 894, 903, 942, 948, 955], "solut": [14, 29, 31, 33, 37, 48, 49, 52, 53, 57, 58, 59, 60, 62, 64, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 95, 97, 98, 117, 119, 120, 121, 122, 132, 133, 134, 135, 136, 137, 152, 157, 182, 183, 185, 188, 191, 192, 196, 197, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 223, 227, 234, 251, 252, 263, 265, 277, 278, 280, 285, 287, 288, 291, 292, 296, 299, 300, 301, 302, 303, 304, 305, 309, 319, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 351, 352, 353, 364, 365, 366, 377, 429, 433, 441, 517, 527, 528, 545, 546, 547, 548, 550, 551, 588, 592, 596, 597, 598, 601, 602, 603, 604, 605, 606, 609, 610, 613, 616, 617, 627, 628, 632, 633, 635, 682, 689, 691, 697, 700, 702, 704, 705, 712, 727, 731, 732, 734, 735, 736, 747, 748, 833, 851, 862, 863, 878, 880, 882, 893, 894, 898, 922, 927, 940, 942, 945, 948, 951, 955], "inverseoper": [14, 295, 301, 305, 341, 602, 603, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 892], "apply_invers": [14, 31, 33, 54, 56, 64, 65, 66, 67, 70, 71, 84, 85, 87, 117, 121, 192, 203, 204, 205, 207, 208, 218, 223, 233, 251, 252, 263, 265, 285, 287, 288, 289, 291, 292, 297, 301, 302, 316, 319, 320, 603, 604, 605, 606, 608, 609, 615, 618, 619], "apply_inverse_cov": [14, 60, 68, 291, 602, 604, 605, 606], "apply_inverse_epoch": [14, 37, 54, 71, 285, 297, 305, 338, 339, 342, 345, 346, 347, 602, 603, 605, 606], "apply_inverse_raw": [14, 55, 297, 602, 603, 604, 606], "apply_inverse_tfr_epoch": [14, 305, 602, 603, 604, 605], "compute_source_psd": [14, 135, 136, 278, 284, 287, 609], "compute_source_psd_epoch": [14, 131, 133, 292, 608, 955], "compute_rank_invers": [14, 954], "estimate_snr": [14, 84, 287, 291, 342, 954], "make_inverse_oper": [14, 31, 33, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 117, 121, 136, 203, 204, 205, 208, 218, 223, 252, 288, 292, 294, 299, 316, 320, 616], "prepare_inverse_oper": [14, 302, 602, 603, 604, 605, 606, 608, 609, 618, 619, 954], "read_inverse_oper": [14, 37, 54, 55, 56, 64, 65, 70, 73, 78, 83, 87, 131, 134, 135, 137, 152, 192, 207, 251, 263, 265, 620], "source_band_induced_pow": [14, 137, 292, 298], "source_induced_pow": [14, 134, 278, 298], "write_inverse_oper": [14, 203, 303, 616], "make_inverse_resolution_matrix": [14, 73, 74, 76, 80, 81, 291], "resolution_metr": [14, 80, 81, 82, 291, 955], "get_cross_talk": [14, 74, 75, 291, 293, 305], "get_point_spread": [14, 73, 74, 76, 291, 293, 305], "mixed_norm": [14, 66, 201, 285, 287, 288, 289, 291, 292, 295, 299, 548], "tf_mixed_norm": [14, 72, 85, 285, 286, 289, 291, 294, 547], "gamma_map": [14, 61, 285, 288, 292], "make_stc_from_dipol": [14, 61, 66, 72, 85, 285], "read_beamform": [14, 287, 954], "make_lcmv": [14, 60, 75, 206, 285, 286, 287, 288, 291, 292, 307, 308, 319, 356, 358, 360, 361, 362, 363, 364, 366], "apply_lcmv": [14, 206, 285, 286, 303, 356, 358, 361, 362, 363], "apply_lcmv_epoch": [14, 206, 285, 286, 338, 339, 342, 345, 346, 347, 360, 361, 363], "apply_lcmv_raw": [14, 206, 285, 286, 360, 361, 362], "apply_lcmv_cov": [14, 60, 206, 288, 292, 360, 362, 363], "make_d": [14, 58, 59, 60, 252, 286, 287, 288, 291, 292, 293, 294, 305, 319, 356, 357, 358, 359], "apply_d": [14, 286, 293, 357, 358, 359], "apply_dics_csd": [14, 59, 60, 252, 286, 356, 358, 359, 364], "apply_dics_epoch": [14, 286, 356, 357, 359], "apply_dics_tfr_epoch": [14, 58, 306, 356, 357, 358], "rap_mus": [14, 77, 82, 284, 285, 292, 307, 369, 526, 955], "trap_mus": [14, 82, 86, 307, 367, 955], "make_lcmv_resolution_matrix": [14, 75, 291], "dipolefix": [14, 329, 526, 692, 954], "fit_dipol": [14, 29, 31, 71, 110, 202, 207, 209, 210, 211, 212, 282, 284, 285, 287, 291, 295, 320, 329, 330, 367, 369, 692], "get_phantom_dipol": [14, 29, 110, 209, 212, 284, 288, 460], "bihemilabel": [14, 338, 339, 342, 345, 346, 347, 517, 588, 589, 954], "label": [14, 30, 34, 35, 36, 37, 38, 39, 41, 42, 44, 47, 48, 53, 54, 55, 62, 63, 70, 71, 82, 95, 97, 117, 119, 121, 122, 123, 124, 128, 132, 133, 137, 138, 139, 140, 143, 147, 154, 161, 163, 166, 168, 169, 170, 172, 175, 177, 181, 186, 192, 194, 197, 198, 202, 206, 207, 218, 219, 223, 228, 232, 234, 237, 240, 243, 244, 245, 256, 265, 269, 270, 273, 274, 277, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 301, 302, 303, 304, 305, 308, 309, 312, 319, 327, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 342, 343, 344, 345, 346, 347, 364, 365, 429, 433, 455, 458, 483, 484, 485, 488, 490, 491, 492, 494, 500, 516, 517, 524, 529, 535, 536, 537, 541, 550, 551, 559, 562, 566, 570, 588, 589, 601, 602, 603, 604, 605, 606, 608, 609, 611, 612, 614, 616, 618, 619, 621, 632, 634, 635, 636, 650, 687, 700, 702, 703, 704, 705, 710, 720, 721, 732, 733, 741, 746, 749, 750, 760, 779, 783, 785, 786, 787, 788, 789, 801, 811, 833, 839, 853, 854, 857, 859, 865, 866, 867, 868, 869, 871, 874, 878, 881, 882, 887, 888, 890, 893, 894, 895, 896, 897, 898, 929, 930, 948, 954, 955], "mixedsourceestim": [14, 201, 287, 291, 292, 319, 339, 342, 345, 346, 347, 710], "mixedvectorsourceestim": [14, 292, 898], "sourceestim": [14, 37, 48, 52, 57, 61, 63, 66, 72, 85, 87, 121, 181, 184, 191, 192, 207, 213, 214, 251, 252, 263, 264, 265, 280, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 299, 300, 301, 302, 303, 304, 308, 312, 318, 319, 330, 333, 334, 337, 338, 339, 341, 343, 344, 345, 346, 347, 351, 352, 356, 357, 358, 359, 360, 361, 362, 363, 429, 517, 530, 545, 546, 547, 548, 589, 602, 603, 604, 605, 606, 608, 611, 612, 617, 618, 704, 710, 723, 733, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 768, 775, 778, 779, 833, 849, 893, 894, 935, 954, 955], "vectorsourceestim": [14, 65, 87, 201, 285, 291, 292, 319, 338, 339, 342, 343, 346, 347, 359, 360, 545, 547, 548, 602, 603, 604, 605, 606, 611, 612, 710, 898, 899], "volsourceestim": [14, 201, 206, 207, 278, 286, 287, 292, 293, 295, 319, 338, 339, 342, 343, 345, 347, 356, 358, 359, 360, 361, 362, 363, 589, 596, 602, 603, 604, 605, 606, 608, 618, 710, 723], "volvectorsourceestim": [14, 288, 289, 338, 339, 342, 343, 346], "sourcemorph": [14, 206, 287, 289, 293, 346, 347, 429, 711, 899, 945], "compute_source_morph": [14, 66, 69, 70, 160, 184, 186, 206, 207, 263, 264, 265, 287, 291, 292, 293, 295, 303, 316, 338, 342, 343, 346, 347, 707, 893, 899], "extract_label_time_cours": [14, 64, 65, 67, 207, 278, 282, 285, 289, 292, 293, 294, 301, 338, 339, 342, 345, 346, 347, 589], "grade_to_tri": [14, 954], "grade_to_vertic": [14, 954], "select_sourc": [14, 117, 122, 288], "grow_label": [14, 293, 294, 954], "label_sign_flip": [14, 54, 282], "labels_to_stc": [14, 207, 288, 293], "morph_label": [14, 288, 337, 705, 954], "random_parcel": [14, 954], "read_source_morph": [14, 69, 70, 343, 954], "split_label": [14, 301, 337, 954], "stc_to_label": [14, 64, 301], "stc_near_sensor": [14, 161, 162, 293, 295, 303], "transform_surface_to": [14, 285], "source_spac": [14, 48, 293, 303, 344], "compute_distance_to_sensor": [14, 48, 293], "get_decimated_surfac": [14, 303], "time": [14, 23, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 91, 92, 94, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 117, 119, 120, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 160, 161, 163, 167, 169, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 222, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 250, 251, 252, 255, 256, 259, 263, 264, 265, 268, 273, 274, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 316, 317, 318, 319, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 363, 364, 410, 411, 412, 413, 414, 415, 416, 417, 419, 422, 423, 426, 428, 429, 430, 432, 443, 475, 483, 484, 485, 486, 489, 490, 492, 493, 494, 495, 496, 497, 499, 506, 507, 509, 511, 512, 517, 519, 521, 522, 524, 525, 526, 536, 541, 545, 546, 547, 548, 549, 550, 551, 564, 566, 570, 572, 580, 587, 589, 595, 596, 601, 602, 603, 605, 606, 608, 609, 610, 613, 614, 616, 618, 619, 630, 632, 634, 635, 637, 638, 639, 640, 643, 644, 645, 647, 648, 650, 652, 653, 654, 656, 659, 661, 662, 668, 678, 684, 687, 691, 692, 696, 697, 700, 701, 702, 704, 710, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 757, 758, 759, 763, 768, 769, 770, 771, 772, 773, 774, 775, 776, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 799, 801, 804, 810, 811, 812, 813, 814, 815, 816, 817, 832, 833, 835, 838, 849, 852, 858, 859, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 882, 886, 887, 888, 889, 890, 893, 894, 895, 896, 897, 898, 899, 910, 925, 935, 938, 940, 941, 945, 947, 948, 951], "frequenc": [14, 27, 29, 31, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 59, 60, 62, 68, 82, 95, 98, 99, 100, 103, 107, 108, 109, 110, 114, 117, 120, 121, 126, 130, 131, 133, 134, 135, 136, 137, 139, 142, 148, 151, 154, 159, 163, 166, 167, 168, 169, 170, 172, 175, 177, 182, 193, 194, 195, 198, 206, 209, 212, 218, 222, 223, 227, 228, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 259, 263, 265, 272, 273, 277, 280, 283, 284, 285, 286, 288, 290, 291, 292, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 319, 323, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 345, 346, 347, 350, 354, 355, 356, 357, 358, 359, 364, 380, 396, 410, 411, 418, 423, 432, 443, 463, 483, 485, 488, 489, 491, 494, 495, 496, 504, 507, 509, 511, 512, 518, 519, 521, 522, 523, 524, 546, 548, 550, 551, 559, 561, 566, 601, 602, 606, 608, 609, 613, 618, 619, 632, 635, 640, 643, 647, 648, 652, 653, 659, 660, 661, 663, 664, 670, 674, 688, 691, 700, 702, 750, 762, 769, 770, 771, 773, 774, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 828, 833, 838, 858, 861, 862, 863, 867, 868, 876, 880, 883, 889, 894, 895, 897, 935, 938, 955], "time_frequ": [14, 22, 35, 47, 58, 59, 60, 119, 130, 133, 138, 139, 141, 192, 229, 250, 252, 257, 258, 259, 260, 268, 269, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 312, 341, 488, 491, 496, 540, 954, 955], "averagetfr": [14, 35, 139, 141, 284, 288, 289, 291, 292, 294, 295, 302, 304, 305, 306, 307, 330, 333, 334, 385, 508, 540, 787, 807, 815, 816, 817, 818, 895, 954], "epochstfr": [14, 139, 141, 283, 285, 288, 294, 304, 305, 359, 606, 783, 796, 807, 815, 816, 818], "crossspectraldens": [14, 130, 291, 357, 364, 385, 508, 790, 791, 792, 793, 794, 795, 796, 802, 805, 861, 954], "spectrum": [14, 47, 101, 109, 130, 131, 135, 139, 159, 163, 166, 169, 191, 192, 198, 212, 226, 230, 232, 234, 239, 246, 250, 252, 269, 270, 271, 272, 277, 278, 305, 306, 307, 312, 319, 331, 332, 333, 334, 341, 409, 524, 550, 551, 635, 785, 786, 789, 803, 804, 806, 828, 878, 880, 889, 954, 955], "spectrumarrai": [14, 250, 278, 786, 788], "epochsspectrum": [14, 168, 191, 271, 272, 305, 331, 332, 333, 334, 409, 524, 550, 786, 788, 828, 954, 955], "epochsspectrumarrai": [14, 250, 278, 785, 789], "csd_tfr": [14, 58, 305], "csd_fourier": [14, 130, 286, 784, 790, 791, 792, 794, 795], "csd_multitap": [14, 130, 286, 784, 790, 791, 792, 793, 794, 803], "csd_morlet": [14, 59, 60, 130, 252, 286, 293, 784, 790, 791, 792, 793, 795], "pick_channels_csd": 14, "read_csd": [14, 305, 784, 954], "fit_iir_model_raw": [14, 119, 138, 284, 302], "tfr_morlet": [14, 58, 141, 192, 257, 258, 259, 260, 269, 280, 283, 287, 291, 301, 496, 810, 812, 813, 814, 816, 817], "tfr_multitap": [14, 139, 141, 269, 280, 283, 287, 291, 496, 812, 813, 814, 815, 817], "tfr_stockwel": [14, 141, 269, 287, 812, 813, 814, 815, 816], "read_tfr": [14, 291, 292, 783, 787, 818, 954], "write_tfr": [14, 783, 787, 807], "read_spectrum": [14, 785, 786, 788, 789, 954], "csd_array_fouri": [14, 286, 784, 791, 792, 793, 794, 795, 954], "csd_array_multitap": [14, 286, 306, 784, 790, 791, 793, 794, 795, 954], "csd_array_morlet": [14, 286, 784, 790, 792, 793, 794, 795, 954], "dpss_window": [14, 306, 954], "fwhm": [14, 187, 306, 801, 811, 954], "morlet": [14, 22, 53, 58, 130, 132, 133, 140, 192, 229, 259, 260, 277, 286, 305, 306, 331, 336, 354, 443, 496, 551, 783, 787, 791, 794, 799, 810, 812, 815, 816, 817, 838, 954, 955], "stft": [14, 85, 294, 302, 319, 548, 800, 809, 954], "istft": [14, 294, 808, 809, 954], "stftfreq": [14, 808, 954], "psd_array_multitap": [14, 268, 284, 295, 303, 306, 307, 331, 332, 333, 334, 488, 550, 551, 785, 788, 813, 816, 954], "psd_array_welch": [14, 47, 250, 268, 284, 285, 292, 295, 304, 307, 331, 332, 333, 334, 491, 550, 551, 785, 788], "tfr_array_morlet": [14, 141, 284, 285, 813, 814, 815, 816, 817], "tfr_array_multitap": [14, 284, 303, 306, 812, 814, 815, 816, 817, 954], "tfr_array_stockwel": [14, 284, 292, 812, 813, 815, 816, 817, 954], "tfr": [14, 22, 58, 139, 229, 257, 258, 269, 284, 287, 288, 291, 294, 302, 312, 319, 496, 602, 603, 604, 605, 783, 787, 791, 794, 796, 807, 812, 813, 815, 816, 817, 818, 895, 954], "cwt": [14, 954], "connect": [14, 25, 36, 64, 73, 97, 186, 192, 197, 240, 252, 255, 274, 277, 282, 285, 286, 288, 289, 291, 292, 293, 294, 295, 298, 299, 301, 304, 337, 356, 358, 364, 365, 445, 674, 763, 770, 771, 773, 774, 779, 855, 941, 947, 948, 951], "statist": [14, 31, 36, 37, 48, 54, 55, 57, 61, 64, 65, 66, 68, 69, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 113, 114, 117, 119, 120, 121, 122, 123, 124, 128, 130, 131, 134, 135, 137, 140, 152, 157, 175, 177, 181, 182, 184, 186, 188, 192, 198, 203, 204, 205, 207, 208, 218, 223, 229, 232, 233, 251, 252, 262, 277, 285, 286, 291, 294, 299, 301, 303, 318, 319, 323, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 351, 352, 364, 365, 386, 390, 392, 422, 423, 429, 433, 524, 550, 551, 602, 603, 604, 605, 606, 609, 613, 618, 619, 626, 632, 635, 690, 693, 697, 712, 717, 743, 747, 748, 761, 763, 764, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 783, 785, 786, 787, 788, 789, 815, 867, 871, 874, 895, 935, 948, 955], "stat": [14, 21, 30, 123, 124, 126, 127, 128, 129, 139, 140, 167, 222, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 270, 280, 281, 282, 284, 286, 287, 290, 291, 292, 294, 298, 299, 303, 308, 318, 331, 332, 386, 397, 635, 643, 864, 954, 955], "ttest_1samp_no_p": [14, 255, 292, 770, 773, 777], "ttest_ind_no_p": [14, 292, 954], "f_onewai": [14, 255, 764, 766, 771, 774, 954], "f_mway_rm": [14, 255, 259, 265, 280, 766], "f_threshold_mway_rm": [14, 255, 259, 265, 764], "linear_regress": [14, 30, 128, 167, 255, 281, 291], "linear_regression_raw": [14, 126, 129, 282, 286, 955], "bonferroni_correct": [14, 124, 255, 280, 291], "fdr_correct": [14, 124, 128, 255, 259], "combine_adjac": [14, 255, 257, 260, 263, 292, 386, 397, 770, 771, 773, 774], "permutation_cluster_test": [14, 123, 255, 258, 259, 286, 287, 292, 774], "permutation_cluster_1samp_test": [14, 139, 255, 257, 286, 292, 294, 303, 773], "permutation_t_test": [14, 127, 255, 308], "spatio_temporal_cluster_test": [14, 255, 256, 260, 264, 265, 286, 287, 303], "spatio_temporal_cluster_1samp_test": [14, 255, 263, 284, 292, 303, 770], "summarize_clusters_stc": [14, 263, 264, 265, 291, 292], "bootstrap_confidence_interv": [14, 140], "spatial_dist_adjac": [14, 292, 954], "spatial_src_adjac": [14, 263, 264, 265, 292, 770, 771, 773, 774], "spatial_tris_adjac": [14, 292, 954], "spatial_inter_hemi_adjac": [14, 292, 770, 771, 773, 774, 954], "spatio_temporal_src_adjac": [14, 292, 770, 771, 773, 774, 954], "spatio_temporal_tris_adjac": [14, 292, 538, 954], "spatio_temporal_dist_adjac": [14, 292, 954], "simul": [14, 95, 97, 106, 118, 132, 133, 166, 175, 187, 202, 215, 217, 228, 229, 243, 250, 254, 260, 263, 264, 265, 270, 277, 280, 283, 284, 285, 286, 287, 288, 289, 293, 294, 295, 297, 305, 317, 328, 331, 332, 333, 334, 335, 336, 337, 342, 344, 354, 423, 443, 524, 550, 551, 556, 587, 590, 596, 601, 602, 613, 632, 633, 674, 691, 697, 702, 704, 705, 708, 783, 785, 786, 788, 789, 798, 812, 815, 816, 817, 833, 838, 894, 954, 955], "add_chpi": [14, 288, 735, 736, 748, 954], "add_ecg": [14, 120, 121, 288, 736, 748], "add_eog": [14, 120, 121, 288, 735, 748], "add_nois": [14, 117, 120, 121, 122, 252, 288, 735, 736, 748], "simulate_evok": [14, 95, 119, 202, 251, 280, 285, 288, 295, 596, 748, 749, 750], "simulate_raw": [14, 117, 120, 121, 122, 252, 280, 284, 286, 287, 288, 293, 294, 735, 736, 747, 749, 750], "simulate_stc": [14, 251, 283, 288, 289, 747, 748, 749], "simulate_sparse_stc": [14, 95, 119, 120, 280, 747, 748, 750], "select_source_in_label": [14, 954], "sourcesimul": [14, 117, 121, 122, 288, 294, 748], "metric": [14, 19, 36, 41, 53, 62, 82, 117, 144, 163, 223, 239, 282, 291, 305, 310, 328, 333, 335, 336, 342, 433, 486, 489, 493, 601, 613, 614, 617, 633, 635, 691, 700, 702, 833, 881, 954, 955], "cosine_scor": [14, 117], "region_localization_error": [14, 117], "f1_score": [14, 117], "precision_scor": [14, 117], "recall_scor": [14, 117], "roc_auc_scor": [14, 36, 486, 493, 954], "spatial_deviation_error": [14, 117], "peak_position_error": [14, 117], "decod": [14, 40, 42, 45, 46, 47, 178, 191, 192, 194, 222, 224, 225, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 295, 299, 300, 304, 305, 306, 307, 308, 309, 317, 328, 331, 333, 334, 336, 342, 380, 396, 423, 432, 443, 512, 524, 550, 559, 564, 566, 576, 595, 601, 602, 604, 613, 616, 632, 636, 691, 697, 702, 783, 833, 954, 955], "csp": [14, 38, 43, 46, 53, 223, 280, 283, 284, 285, 291, 292, 293, 300, 301, 304, 306, 317, 331, 336, 380, 396, 432, 443, 487, 490, 512, 566, 632, 636, 783, 955], "em": [14, 43, 46, 53, 223, 283, 331, 333, 334, 336, 499, 550, 697, 955], "filterestim": [14, 302, 494, 954], "linearmodel": [14, 37, 44, 223, 280, 284, 291], "psdestim": [14, 954], "scaler": [14, 44, 284], "temporalfilt": [14, 283, 304, 485, 954], "timefrequ": [14, 283, 305, 954], "unsupervisedspatialfilt": [14, 40, 283], "vector": [14, 31, 41, 44, 45, 53, 60, 62, 67, 82, 136, 138, 157, 188, 201, 203, 204, 215, 222, 231, 232, 233, 234, 236, 237, 252, 277, 278, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 299, 302, 305, 319, 320, 323, 326, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 357, 364, 365, 410, 412, 416, 424, 425, 426, 429, 484, 487, 489, 494, 499, 501, 517, 521, 522, 523, 545, 547, 548, 550, 551, 588, 594, 601, 602, 604, 605, 606, 611, 612, 616, 634, 635, 646, 647, 648, 649, 651, 659, 666, 670, 679, 685, 693, 700, 708, 710, 717, 723, 783, 784, 785, 787, 788, 833, 867, 869, 871, 873, 874, 877, 886, 889, 893, 896, 898, 899, 931, 935, 955], "receptivefield": [14, 45, 222, 285, 288, 308, 495], "timedelayingridg": [14, 222, 285, 293, 295, 489], "slidingestim": [14, 37, 223, 285, 286, 287, 305, 307, 308, 500], "generalizingestim": [14, 39, 223, 285, 286, 287, 291, 307, 500], "spoc": [14, 43, 46, 53, 277, 285, 287, 331, 336, 483, 491, 564, 595, 636, 954, 955], "ssd": [14, 43, 46, 53, 293, 307, 331, 333, 334, 336, 564, 595, 804, 955], "compute_em": [14, 42, 283, 301], "cross_val_multiscor": [14, 37, 223, 285, 286, 306], "get_coef": [14, 37, 44, 223, 284], "realtim": [14, 282, 283, 284, 287, 288, 300, 301, 678, 948], "report": [14, 41, 149, 163, 191, 199, 200, 219, 237, 239, 240, 256, 270, 277, 278, 280, 281, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 316, 320, 328, 331, 332, 333, 335, 336, 340, 342, 356, 358, 507, 524, 550, 551, 557, 601, 624, 635, 653, 659, 675, 700, 801, 811, 865, 882, 888, 935, 936, 940, 954, 955], "open_report": [14, 198, 287, 303, 341], "log": [14, 34, 35, 38, 47, 59, 109, 148, 168, 188, 203, 227, 229, 232, 234, 238, 246, 257, 269, 270, 284, 287, 291, 292, 293, 294, 298, 303, 304, 307, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 493, 494, 496, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 533, 534, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 589, 590, 591, 592, 593, 594, 596, 597, 598, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626, 627, 628, 631, 635, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 677, 678, 679, 682, 683, 684, 685, 689, 690, 691, 692, 693, 694, 696, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 727, 728, 729, 731, 732, 734, 735, 736, 737, 747, 748, 751, 753, 754, 755, 756, 757, 758, 759, 770, 771, 772, 773, 774, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 801, 802, 803, 804, 807, 808, 811, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 828, 831, 832, 833, 835, 842, 851, 860, 863, 864, 867, 868, 869, 870, 875, 876, 878, 879, 880, 883, 885, 886, 888, 889, 891, 892, 893, 894, 895, 898, 899, 900, 904, 914, 915, 916, 917, 918, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935], "configur": [14, 191, 194, 199, 200, 217, 234, 243, 260, 277, 303, 307, 311, 312, 317, 320, 331, 332, 450, 456, 503, 531, 532, 542, 550, 551, 576, 613, 623, 635, 647, 648, 726, 782, 828, 833, 865, 882, 888, 901, 902, 903, 935, 955], "get_config_path": [14, 197, 299], "get_config": [14, 197, 299, 307, 456, 726], "open_doc": [14, 284, 954], "set_log_level": [14, 197, 728, 831, 954], "set_log_fil": [14, 954], "set_config": [14, 181, 197, 278, 283, 292, 299, 303, 309, 316, 331, 332, 445, 456, 531, 550, 551, 635, 831, 865, 882, 888, 940], "set_cache_dir": [14, 770, 771, 773, 774, 954], "set_memmap_min_s": [14, 954], "sys_info": [14, 197, 278, 282, 291, 295, 303, 304, 341, 935, 940, 941], "use_log_level": [14, 197, 268], "verbos": [14, 31, 36, 37, 39, 40, 41, 60, 64, 66, 67, 68, 70, 75, 77, 84, 86, 97, 102, 105, 106, 110, 114, 120, 121, 126, 131, 135, 136, 148, 151, 152, 154, 160, 161, 162, 166, 168, 171, 172, 175, 176, 178, 183, 184, 185, 188, 196, 197, 198, 203, 205, 206, 207, 208, 209, 210, 217, 223, 227, 228, 229, 232, 235, 236, 237, 238, 239, 240, 244, 245, 255, 256, 257, 263, 268, 270, 278, 285, 293, 294, 301, 303, 304, 305, 307, 309, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 488, 489, 493, 494, 496, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 533, 534, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 589, 590, 591, 592, 593, 594, 596, 597, 598, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626, 627, 628, 631, 635, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 677, 678, 679, 682, 683, 684, 685, 689, 690, 691, 692, 693, 694, 696, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 727, 729, 731, 732, 734, 735, 736, 737, 747, 748, 751, 753, 754, 755, 756, 757, 758, 759, 770, 771, 772, 773, 774, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 802, 803, 804, 807, 808, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 828, 829, 832, 833, 835, 842, 851, 860, 863, 867, 868, 869, 870, 875, 878, 879, 880, 885, 886, 888, 889, 891, 892, 893, 894, 898, 899, 900, 904, 914, 915, 916, 917, 918, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 940], "deprec": [14, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 323, 833, 887, 903], "warn": [14, 31, 36, 39, 64, 160, 161, 162, 166, 177, 188, 197, 198, 207, 210, 218, 230, 232, 233, 240, 244, 245, 257, 268, 278, 282, 283, 285, 287, 289, 291, 292, 293, 294, 295, 303, 305, 306, 307, 323, 325, 326, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 351, 352, 384, 407, 411, 417, 418, 423, 427, 429, 430, 432, 434, 439, 440, 475, 502, 510, 517, 530, 533, 550, 551, 572, 635, 646, 659, 670, 671, 690, 700, 719, 721, 724, 728, 729, 783, 785, 786, 787, 788, 789, 829, 831, 833, 868, 879, 926, 928, 947, 949], "get_cuda_memori": 14, "init_cuda": [14, 940, 954], "set_cuda_devic": [14, 289, 954], "standalon": [16, 181, 288, 943], "mne_realtim": [16, 294, 485], "correct": [18, 21, 26, 29, 34, 35, 37, 38, 42, 44, 47, 53, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 96, 98, 99, 100, 101, 104, 105, 106, 109, 111, 112, 113, 114, 117, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 149, 155, 157, 158, 161, 162, 163, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 182, 185, 186, 187, 188, 191, 192, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 240, 250, 251, 252, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 277, 280, 281, 285, 286, 287, 288, 290, 291, 292, 293, 294, 299, 303, 305, 306, 307, 309, 311, 314, 316, 319, 320, 323, 325, 326, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 354, 377, 388, 422, 423, 428, 434, 483, 489, 490, 495, 502, 504, 522, 524, 533, 550, 551, 557, 559, 563, 566, 580, 582, 600, 603, 618, 619, 632, 634, 635, 636, 645, 646, 649, 652, 653, 659, 670, 673, 677, 684, 688, 690, 697, 700, 701, 719, 721, 738, 739, 740, 741, 742, 743, 744, 745, 761, 764, 767, 768, 769, 770, 771, 772, 783, 785, 786, 787, 788, 789, 797, 804, 859, 866, 867, 873, 874, 879, 887, 889, 890, 892, 895, 926, 928, 935, 940, 955], "code": [19, 22, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 277, 281, 282, 283, 284, 286, 288, 289, 290, 294, 295, 299, 300, 302, 304, 305, 310, 311, 312, 316, 319, 320, 321, 322, 326, 331, 332, 333, 334, 341, 350, 418, 510, 512, 522, 524, 527, 549, 550, 551, 559, 568, 576, 603, 670, 679, 695, 769, 783, 785, 786, 787, 788, 789, 801, 811, 814, 817, 833, 865, 867, 869, 889, 935, 938, 945], "stc": [19, 31, 33, 37, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 82, 84, 85, 87, 95, 119, 120, 121, 122, 131, 135, 136, 137, 143, 160, 161, 162, 184, 191, 192, 198, 202, 203, 204, 205, 206, 208, 213, 214, 223, 252, 264, 273, 274, 285, 287, 288, 289, 291, 292, 294, 301, 302, 303, 316, 319, 329, 333, 338, 339, 341, 342, 343, 344, 345, 346, 347, 351, 352, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 429, 517, 526, 530, 536, 545, 546, 547, 548, 589, 596, 601, 602, 603, 604, 605, 606, 609, 611, 612, 616, 618, 700, 710, 723, 733, 747, 748, 749, 750, 775, 778, 779, 833, 893, 894, 898, 899, 955], "parametr": [21, 30, 96, 121, 140, 191, 192, 260, 261, 262, 277, 286, 303, 319, 331, 333, 334, 336, 386, 422, 524, 550, 602, 626, 632, 635, 697, 717, 762, 763, 770, 771, 773, 774, 776, 777, 787, 815, 859, 880, 948, 955], "scipi": [21, 45, 57, 124, 138, 182, 197, 198, 212, 222, 229, 233, 252, 255, 256, 257, 260, 263, 264, 270, 282, 283, 287, 288, 289, 291, 293, 295, 297, 302, 306, 309, 310, 328, 331, 332, 333, 334, 338, 339, 340, 342, 343, 344, 345, 346, 347, 349, 386, 397, 427, 483, 485, 490, 494, 518, 519, 521, 522, 523, 526, 550, 551, 634, 635, 643, 650, 763, 765, 770, 771, 773, 774, 776, 777, 783, 785, 786, 787, 788, 789, 801, 804, 811, 833, 835, 852, 867, 870, 874, 878, 887, 889, 890, 895, 897, 935, 937, 941, 946], "statsmodel": [21, 255, 312], "option": [21, 140, 153, 161, 166, 168, 176, 177, 182, 187, 188, 191, 192, 193, 194, 197, 198, 199, 204, 215, 223, 226, 229, 232, 237, 238, 240, 243, 245, 246, 250, 255, 256, 259, 265, 268, 270, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 320, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 351, 352, 371, 377, 380, 423, 433, 439, 442, 456, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 504, 514, 515, 516, 521, 522, 523, 525, 527, 545, 547, 548, 550, 551, 564, 566, 573, 593, 597, 602, 603, 604, 605, 606, 608, 609, 613, 615, 617, 618, 619, 627, 632, 634, 635, 636, 645, 646, 647, 648, 650, 659, 670, 690, 700, 702, 712, 748, 753, 757, 768, 770, 771, 773, 774, 777, 778, 783, 785, 786, 787, 788, 789, 823, 833, 851, 852, 853, 859, 863, 865, 867, 869, 871, 874, 875, 878, 882, 885, 887, 888, 889, 890, 891, 893, 895, 897, 898, 899, 901, 941, 947, 949], "mass": [21, 63, 191, 255, 256, 261, 262, 283, 299, 303, 331, 336, 337, 342, 550, 632, 697, 732, 740, 746, 749, 764, 766, 767, 771, 787, 815, 823, 833, 903, 955], "univari": [21, 37, 191, 223, 255, 256, 261, 262, 277, 299, 303, 331, 336, 550, 632, 697, 764, 766, 767, 771, 787, 815, 955], "comparison": [21, 26, 53, 57, 64, 109, 123, 124, 128, 139, 150, 156, 177, 181, 183, 193, 202, 209, 210, 218, 229, 234, 238, 260, 263, 264, 265, 269, 270, 277, 283, 284, 305, 316, 320, 342, 343, 429, 635, 638, 671, 710, 767, 771, 772, 949, 955], "cluster": [21, 36, 53, 125, 129, 139, 191, 256, 261, 262, 266, 267, 270, 277, 284, 285, 286, 291, 292, 294, 298, 299, 301, 302, 303, 331, 333, 334, 336, 342, 343, 344, 386, 422, 429, 506, 524, 550, 601, 602, 616, 626, 632, 697, 710, 712, 717, 755, 763, 764, 766, 770, 771, 773, 774, 775, 787, 815, 833, 894, 955], "method": [21, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 53, 54, 55, 56, 57, 60, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 85, 97, 98, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 114, 120, 121, 122, 124, 126, 128, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 148, 149, 159, 162, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 185, 186, 188, 191, 192, 193, 194, 195, 196, 198, 201, 203, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 245, 247, 248, 250, 251, 252, 256, 260, 263, 265, 268, 269, 270, 273, 274, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 314, 316, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 355, 364, 365, 366, 367, 369, 370, 373, 374, 378, 379, 380, 381, 382, 386, 387, 388, 389, 392, 394, 395, 408, 411, 413, 416, 418, 423, 427, 428, 429, 434, 439, 440, 441, 443, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 502, 503, 504, 506, 518, 519, 521, 522, 523, 527, 534, 545, 546, 547, 548, 549, 550, 551, 552, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 586, 587, 590, 597, 598, 601, 602, 603, 604, 605, 606, 608, 609, 613, 614, 615, 617, 618, 619, 631, 632, 634, 635, 636, 643, 646, 647, 648, 649, 651, 655, 666, 668, 670, 673, 674, 675, 676, 677, 685, 687, 691, 694, 700, 702, 717, 718, 727, 733, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 761, 764, 765, 767, 770, 771, 772, 773, 774, 776, 783, 784, 785, 786, 787, 788, 789, 792, 795, 797, 803, 804, 812, 813, 815, 816, 820, 822, 828, 829, 831, 833, 834, 835, 848, 851, 855, 860, 861, 862, 863, 866, 870, 874, 877, 879, 887, 891, 894, 935, 938, 940, 955], "adjac": [21, 97, 168, 172, 227, 256, 264, 265, 292, 294, 301, 304, 386, 397, 495, 524, 637, 640, 753, 754, 755, 756, 757, 758, 759, 763, 770, 771, 773, 774, 856], "matric": [21, 27, 36, 56, 57, 60, 61, 64, 65, 66, 67, 70, 73, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 105, 112, 113, 128, 130, 143, 146, 147, 166, 169, 172, 175, 182, 189, 191, 192, 198, 202, 204, 205, 207, 215, 223, 255, 256, 273, 274, 277, 283, 286, 287, 292, 301, 304, 316, 320, 357, 364, 423, 483, 491, 550, 551, 646, 659, 670, 682, 734, 735, 736, 748, 769, 784, 796, 824, 826, 861], "level": [21, 30, 34, 35, 53, 62, 70, 82, 125, 128, 129, 167, 168, 170, 176, 177, 181, 186, 191, 192, 194, 196, 197, 206, 207, 215, 222, 226, 228, 229, 232, 233, 234, 239, 252, 255, 257, 258, 259, 260, 261, 263, 264, 265, 270, 274, 277, 278, 284, 287, 298, 301, 303, 309, 317, 318, 320, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 493, 494, 496, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 533, 534, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 589, 590, 591, 592, 593, 594, 596, 597, 598, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626, 627, 628, 631, 632, 634, 635, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 677, 678, 679, 682, 683, 684, 685, 689, 690, 691, 692, 693, 694, 696, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 727, 729, 731, 732, 734, 735, 736, 737, 747, 748, 751, 753, 754, 755, 756, 757, 758, 759, 762, 764, 766, 770, 771, 772, 773, 774, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 802, 803, 804, 807, 808, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 828, 831, 832, 833, 835, 842, 851, 852, 860, 863, 867, 868, 869, 870, 871, 874, 875, 878, 879, 880, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 898, 899, 900, 904, 906, 914, 915, 916, 917, 918, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 937, 946, 948, 955], "oper": [22, 26, 29, 31, 37, 41, 44, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95, 96, 98, 100, 110, 114, 117, 119, 120, 122, 131, 134, 135, 136, 137, 148, 152, 158, 166, 167, 168, 171, 172, 175, 177, 178, 181, 182, 188, 189, 190, 191, 192, 193, 195, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 218, 223, 227, 228, 229, 230, 232, 233, 234, 237, 243, 251, 252, 257, 258, 260, 263, 265, 277, 280, 282, 286, 288, 291, 293, 296, 297, 301, 303, 304, 305, 309, 317, 319, 324, 325, 328, 331, 332, 333, 334, 335, 336, 337, 341, 342, 344, 345, 349, 351, 352, 364, 365, 367, 369, 370, 380, 384, 385, 396, 402, 416, 422, 443, 444, 451, 459, 484, 489, 492, 499, 504, 505, 508, 521, 522, 523, 524, 528, 529, 530, 545, 546, 547, 548, 550, 551, 552, 559, 566, 587, 596, 597, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 628, 633, 635, 638, 640, 656, 662, 668, 684, 687, 689, 697, 702, 712, 723, 724, 735, 736, 737, 744, 746, 747, 748, 749, 762, 770, 771, 772, 773, 774, 777, 780, 783, 784, 812, 813, 814, 815, 816, 817, 819, 851, 892, 900, 903, 904, 927, 935, 938, 940, 947, 955], "python": [22, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 182, 183, 184, 185, 188, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 228, 230, 231, 234, 235, 236, 238, 239, 241, 242, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 275, 277, 278, 282, 283, 284, 286, 287, 288, 289, 290, 292, 294, 295, 296, 300, 301, 302, 303, 305, 308, 310, 313, 316, 317, 319, 320, 321, 322, 325, 329, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 344, 345, 346, 347, 364, 365, 382, 385, 391, 396, 397, 400, 422, 434, 443, 446, 447, 448, 449, 452, 453, 454, 456, 457, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 502, 508, 512, 516, 524, 531, 532, 533, 535, 542, 550, 551, 566, 568, 570, 572, 576, 592, 595, 601, 602, 616, 626, 629, 635, 652, 655, 656, 657, 659, 684, 690, 719, 721, 726, 728, 782, 783, 785, 786, 787, 788, 789, 801, 804, 811, 812, 813, 815, 816, 828, 829, 844, 859, 865, 868, 882, 888, 896, 928, 930, 936, 938, 940, 941, 948, 950, 953, 955], "np": [22, 26, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 45, 48, 54, 57, 58, 59, 60, 61, 64, 66, 68, 69, 71, 73, 76, 84, 85, 87, 95, 97, 98, 99, 101, 108, 110, 117, 119, 120, 121, 122, 124, 127, 134, 138, 139, 140, 141, 142, 144, 146, 147, 153, 159, 161, 162, 163, 167, 169, 172, 176, 177, 182, 183, 184, 185, 186, 192, 194, 196, 198, 202, 203, 204, 207, 208, 209, 210, 211, 212, 217, 218, 222, 223, 226, 227, 229, 230, 231, 233, 234, 237, 238, 239, 243, 244, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 278, 284, 286, 288, 289, 303, 305, 308, 309, 320, 325, 331, 332, 333, 334, 337, 338, 339, 342, 344, 345, 346, 347, 349, 382, 423, 438, 517, 518, 522, 539, 550, 551, 568, 584, 635, 650, 659, 668, 679, 749, 763, 775, 783, 785, 786, 787, 788, 789, 801, 803, 811, 813, 816, 833, 842, 849, 854, 859, 866, 889, 893, 895, 898, 899], "ndarrai": [22, 166, 243, 252, 270, 286, 287, 292, 301, 308, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 350, 364, 365, 373, 389, 413, 419, 432, 434, 438, 439, 482, 483, 484, 487, 490, 495, 499, 503, 509, 511, 519, 520, 521, 523, 526, 527, 528, 549, 550, 551, 554, 589, 610, 634, 635, 636, 643, 646, 647, 648, 650, 659, 663, 664, 667, 668, 685, 706, 732, 733, 748, 762, 763, 764, 768, 769, 770, 771, 773, 774, 783, 784, 785, 786, 787, 788, 789, 798, 801, 803, 804, 811, 814, 821, 822, 823, 833, 834, 838, 849, 851, 852, 854, 867, 871, 873, 874, 876, 877, 890, 893, 894, 895, 897, 898, 899, 928], "A": [22, 25, 30, 34, 35, 37, 42, 45, 47, 52, 57, 61, 68, 69, 70, 97, 102, 105, 109, 115, 128, 130, 140, 147, 148, 154, 155, 158, 159, 161, 163, 168, 169, 177, 181, 183, 186, 187, 188, 192, 194, 195, 197, 198, 201, 206, 212, 215, 216, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 243, 245, 246, 249, 252, 255, 256, 257, 259, 263, 264, 265, 268, 273, 274, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 293, 294, 295, 298, 299, 300, 301, 302, 307, 310, 314, 316, 317, 318, 319, 320, 322, 325, 326, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 355, 357, 364, 372, 378, 380, 383, 384, 385, 388, 389, 392, 408, 423, 426, 429, 434, 435, 437, 438, 440, 450, 458, 459, 462, 464, 475, 476, 485, 487, 491, 500, 505, 507, 508, 519, 520, 521, 522, 526, 534, 535, 536, 540, 545, 550, 551, 552, 558, 559, 560, 561, 562, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 582, 583, 587, 588, 595, 602, 603, 609, 617, 625, 627, 628, 630, 633, 634, 635, 636, 643, 649, 650, 654, 655, 657, 658, 659, 668, 671, 677, 679, 685, 687, 690, 697, 718, 724, 727, 732, 735, 736, 737, 743, 746, 747, 749, 760, 763, 764, 766, 767, 769, 770, 771, 772, 773, 774, 775, 778, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 799, 801, 804, 811, 813, 814, 816, 817, 820, 823, 833, 837, 848, 850, 851, 853, 855, 858, 859, 861, 865, 871, 872, 873, 875, 876, 879, 888, 889, 891, 893, 896, 897, 898, 940, 953], "implement": [22, 57, 97, 192, 195, 205, 223, 230, 232, 237, 252, 270, 278, 281, 286, 299, 307, 309, 312, 314, 321, 324, 328, 336, 355, 356, 358, 370, 400, 423, 429, 483, 490, 491, 496, 500, 523, 545, 547, 548, 550, 551, 597, 601, 602, 603, 604, 605, 606, 608, 609, 619, 635, 636, 643, 650, 655, 659, 685, 707, 767, 810, 812, 820, 888, 940, 948], "inspir": [22, 170, 309, 507, 522, 823], "matlab": [22, 30, 45, 222, 277, 287, 312, 317, 321, 371, 489, 571, 679, 695, 699, 937, 947, 948], "sheraz": [22, 146, 154, 277, 284, 287, 288, 651], "khan": [22, 146, 154, 277, 284, 287, 288, 651], "spm": [22, 28, 32, 53, 151, 223, 300, 422, 423, 478, 524, 564, 593, 597, 602, 613, 632, 635, 653, 868, 955], "routin": [23, 151, 211, 230, 274, 298, 299, 312, 526, 635, 670, 906, 907], "ui_ev": [23, 274, 278, 954], "api": [23, 168, 195, 219, 223, 246, 255, 268, 297, 321, 484, 623, 833, 843, 848, 949, 951], "inter": [23, 134, 277, 328, 331, 332, 333, 334, 340, 349, 483, 490, 507, 550, 551, 634, 635, 650, 735, 783, 785, 786, 788, 789, 812, 813, 815, 816, 852, 867, 874, 878, 887, 890, 895, 897], "figur": [23, 29, 30, 31, 34, 42, 45, 48, 54, 63, 64, 71, 75, 80, 81, 119, 130, 136, 138, 142, 143, 145, 151, 153, 161, 162, 167, 168, 171, 176, 182, 184, 186, 191, 192, 196, 204, 205, 206, 209, 210, 212, 218, 222, 223, 229, 231, 232, 234, 237, 238, 246, 252, 255, 260, 265, 269, 275, 276, 278, 286, 287, 289, 291, 292, 293, 294, 295, 300, 302, 303, 304, 305, 307, 308, 309, 318, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 380, 381, 394, 422, 483, 490, 542, 550, 551, 593, 634, 635, 650, 655, 700, 710, 783, 784, 785, 786, 787, 788, 789, 812, 813, 815, 816, 833, 835, 836, 837, 840, 843, 844, 848, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 902, 903, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 935, 940, 941, 955], "commun": [23, 217, 222, 223, 252, 277, 309, 311, 330, 331, 332, 333, 334, 489, 783, 787, 814, 817, 945], "The": [23, 29, 30, 31, 33, 34, 35, 37, 40, 41, 42, 44, 45, 47, 53, 57, 60, 64, 67, 69, 70, 71, 72, 73, 74, 75, 78, 84, 85, 87, 90, 92, 94, 96, 101, 102, 105, 106, 107, 108, 109, 110, 114, 121, 122, 128, 130, 131, 134, 136, 137, 139, 140, 141, 142, 143, 147, 154, 155, 160, 161, 162, 163, 164, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 197, 198, 199, 200, 203, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 247, 248, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 450, 451, 455, 456, 457, 458, 459, 460, 462, 465, 475, 476, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 561, 562, 563, 564, 566, 568, 571, 572, 573, 574, 575, 576, 578, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 721, 722, 723, 724, 726, 727, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 839, 840, 842, 843, 844, 845, 846, 847, 848, 849, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 929, 930, 931, 932, 934, 935, 936, 937, 938, 940, 944, 945, 947, 951, 955], "allow": [23, 38, 45, 66, 69, 70, 72, 87, 121, 131, 139, 142, 143, 147, 163, 166, 167, 168, 169, 170, 172, 176, 177, 183, 184, 186, 192, 195, 196, 198, 204, 216, 219, 223, 229, 234, 243, 244, 246, 255, 256, 257, 274, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 318, 319, 320, 323, 324, 325, 326, 328, 330, 331, 332, 333, 334, 336, 338, 339, 342, 344, 345, 346, 347, 358, 359, 362, 376, 380, 403, 408, 416, 423, 442, 483, 486, 489, 490, 491, 493, 516, 524, 541, 549, 550, 551, 554, 566, 567, 570, 572, 604, 606, 609, 611, 612, 613, 617, 635, 636, 640, 659, 668, 688, 694, 700, 718, 732, 748, 750, 769, 783, 785, 786, 787, 788, 789, 812, 813, 815, 816, 827, 831, 856, 865, 867, 878, 880, 888, 891, 940], "each": [23, 30, 35, 36, 37, 41, 42, 45, 50, 54, 58, 59, 64, 67, 70, 71, 94, 97, 106, 109, 120, 121, 122, 128, 130, 134, 135, 136, 139, 140, 142, 144, 147, 155, 159, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 181, 182, 184, 186, 187, 188, 192, 193, 194, 195, 197, 198, 201, 202, 203, 204, 206, 207, 209, 211, 212, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 257, 259, 260, 263, 264, 265, 268, 270, 273, 274, 281, 283, 284, 289, 291, 292, 294, 295, 304, 305, 309, 313, 316, 317, 318, 319, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 353, 356, 357, 364, 365, 371, 378, 382, 385, 389, 409, 411, 413, 414, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 431, 434, 436, 441, 456, 475, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 506, 507, 508, 517, 521, 522, 523, 524, 525, 526, 527, 535, 541, 545, 547, 548, 549, 550, 551, 552, 555, 566, 575, 584, 585, 589, 591, 593, 594, 602, 606, 608, 609, 611, 612, 619, 625, 634, 635, 636, 638, 640, 643, 650, 652, 654, 655, 657, 659, 665, 669, 670, 674, 690, 694, 700, 713, 716, 724, 731, 732, 738, 739, 740, 741, 742, 743, 744, 745, 748, 749, 750, 752, 754, 763, 765, 766, 768, 770, 771, 772, 773, 774, 775, 778, 779, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 801, 803, 804, 811, 815, 816, 823, 833, 834, 838, 842, 851, 852, 853, 855, 856, 857, 859, 860, 861, 862, 863, 866, 867, 869, 871, 872, 873, 874, 875, 878, 886, 887, 888, 889, 890, 894, 895, 896, 897, 900, 904, 905, 914, 915, 926, 928, 933, 935, 940, 941, 945, 947], "other": [23, 30, 69, 88, 97, 109, 110, 139, 167, 169, 171, 176, 177, 181, 182, 186, 192, 194, 195, 196, 198, 201, 203, 206, 207, 212, 215, 216, 218, 219, 223, 226, 227, 230, 231, 232, 233, 234, 235, 236, 239, 243, 245, 246, 251, 252, 255, 259, 268, 270, 273, 274, 278, 280, 282, 287, 292, 293, 294, 295, 302, 305, 306, 310, 312, 316, 317, 318, 319, 323, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 350, 380, 392, 393, 422, 429, 434, 489, 491, 500, 502, 504, 506, 507, 512, 516, 528, 532, 533, 545, 547, 548, 550, 551, 563, 602, 613, 624, 634, 635, 659, 665, 670, 684, 688, 690, 701, 704, 710, 713, 719, 721, 732, 743, 748, 754, 769, 783, 784, 785, 786, 787, 788, 789, 833, 848, 856, 863, 865, 867, 878, 882, 888, 893, 914, 917, 918, 928, 933, 935, 940, 947, 948, 949, 951], "chang": [23, 45, 57, 70, 71, 141, 162, 168, 171, 175, 177, 182, 184, 187, 193, 196, 197, 198, 201, 202, 204, 210, 215, 216, 218, 219, 222, 227, 232, 233, 234, 238, 239, 244, 245, 246, 251, 255, 258, 263, 265, 270, 273, 277, 282, 283, 284, 285, 286, 287, 288, 289, 291, 297, 299, 301, 302, 311, 313, 316, 320, 323, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 364, 365, 372, 375, 377, 380, 388, 403, 408, 410, 412, 416, 429, 431, 457, 483, 490, 503, 504, 507, 512, 517, 518, 520, 522, 524, 526, 527, 536, 542, 545, 547, 548, 550, 551, 567, 572, 575, 576, 589, 593, 596, 597, 613, 623, 624, 626, 627, 628, 634, 635, 637, 650, 656, 659, 666, 668, 670, 692, 694, 700, 702, 718, 727, 729, 731, 732, 748, 775, 778, 783, 785, 786, 787, 788, 789, 802, 828, 833, 835, 845, 851, 852, 853, 859, 860, 863, 864, 865, 866, 867, 869, 871, 874, 875, 876, 878, 880, 882, 885, 887, 888, 889, 890, 891, 893, 895, 897, 898, 899, 900, 903, 905, 907, 926, 935, 938, 942, 945, 947, 949], "one": [23, 26, 27, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 50, 57, 59, 60, 66, 67, 68, 69, 71, 72, 74, 75, 76, 84, 85, 92, 95, 97, 100, 101, 103, 108, 109, 110, 112, 113, 114, 117, 121, 123, 124, 126, 130, 136, 138, 140, 141, 142, 144, 148, 157, 159, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 181, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 198, 202, 203, 204, 205, 206, 207, 208, 210, 212, 215, 216, 218, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 257, 258, 259, 260, 264, 269, 270, 273, 278, 281, 283, 286, 287, 289, 291, 292, 293, 295, 298, 301, 303, 306, 309, 310, 316, 317, 318, 319, 320, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 353, 356, 364, 365, 379, 380, 382, 386, 387, 389, 422, 424, 425, 427, 429, 430, 434, 450, 459, 462, 464, 475, 476, 482, 483, 489, 490, 493, 496, 498, 502, 505, 506, 507, 514, 515, 517, 518, 524, 533, 540, 541, 542, 548, 549, 550, 551, 555, 559, 568, 570, 585, 587, 589, 591, 596, 611, 612, 618, 619, 621, 624, 635, 636, 637, 638, 652, 656, 657, 660, 663, 664, 665, 667, 678, 681, 690, 692, 700, 701, 707, 719, 721, 727, 732, 735, 749, 754, 764, 765, 770, 771, 772, 773, 774, 776, 779, 783, 784, 785, 786, 787, 788, 789, 791, 794, 801, 811, 812, 813, 815, 816, 818, 821, 822, 823, 833, 835, 848, 851, 853, 854, 859, 866, 867, 869, 870, 871, 872, 874, 875, 876, 878, 880, 893, 894, 896, 897, 898, 899, 914, 926, 928, 935, 940, 941, 944, 945, 949], "trigger": [23, 31, 36, 120, 130, 136, 170, 192, 194, 197, 203, 208, 211, 215, 216, 217, 218, 228, 233, 238, 240, 255, 274, 278, 281, 283, 284, 300, 309, 316, 319, 320, 323, 324, 423, 428, 524, 525, 550, 551, 559, 566, 568, 574, 576, 581, 653, 661, 697, 730, 748], "anoth": [23, 45, 57, 71, 97, 113, 122, 154, 167, 169, 170, 171, 175, 177, 181, 182, 187, 193, 197, 206, 215, 228, 229, 232, 233, 237, 239, 244, 245, 246, 255, 260, 278, 287, 309, 310, 317, 319, 320, 331, 332, 333, 334, 337, 338, 339, 341, 342, 343, 345, 346, 347, 349, 382, 423, 424, 426, 428, 429, 486, 493, 496, 499, 500, 509, 526, 539, 541, 550, 551, 580, 593, 596, 597, 608, 609, 618, 619, 621, 640, 647, 648, 667, 731, 732, 734, 735, 736, 748, 754, 770, 771, 772, 773, 774, 785, 788, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 814, 815, 816, 821, 822, 823, 835, 856, 867, 870, 888, 889, 940, 949], "For": [23, 26, 30, 41, 45, 60, 69, 70, 73, 76, 81, 90, 94, 96, 97, 106, 122, 128, 130, 136, 140, 142, 147, 148, 151, 160, 161, 162, 166, 169, 170, 171, 172, 175, 176, 177, 181, 182, 184, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 239, 240, 243, 244, 246, 250, 255, 257, 259, 260, 263, 265, 268, 269, 270, 273, 274, 282, 283, 291, 294, 304, 308, 309, 311, 316, 317, 318, 319, 320, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 350, 364, 365, 382, 393, 403, 423, 427, 428, 429, 436, 439, 440, 441, 450, 456, 475, 476, 482, 483, 485, 486, 489, 490, 491, 493, 495, 496, 500, 504, 505, 506, 507, 509, 512, 513, 514, 516, 518, 519, 521, 522, 524, 525, 526, 527, 540, 541, 542, 544, 545, 547, 548, 549, 550, 551, 553, 557, 559, 566, 572, 575, 576, 600, 608, 613, 617, 618, 619, 622, 634, 635, 636, 637, 646, 651, 654, 655, 657, 659, 670, 674, 681, 688, 697, 713, 717, 719, 724, 727, 729, 732, 763, 768, 769, 770, 771, 773, 774, 778, 783, 784, 785, 786, 787, 788, 789, 803, 805, 812, 813, 815, 816, 823, 833, 844, 850, 851, 853, 859, 860, 865, 866, 867, 869, 871, 874, 875, 876, 878, 879, 880, 882, 888, 890, 891, 895, 897, 899, 935, 938, 940, 943, 946, 947, 950, 951], "exampl": [23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 282, 283, 284, 285, 287, 288, 291, 292, 295, 299, 302, 303, 304, 305, 307, 309, 316, 318, 319, 320, 321, 326, 347, 377, 403, 431, 437, 438, 439, 440, 450, 456, 464, 476, 482, 505, 510, 527, 549, 553, 575, 623, 645, 654, 679, 696, 719, 728, 811, 813, 823, 831, 865, 867, 874, 878, 880, 888, 890, 895, 899, 935, 936, 940, 944, 948, 955], "cursor": [23, 285, 834], "updat": [23, 172, 196, 198, 205, 216, 227, 229, 234, 237, 239, 243, 246, 270, 273, 274, 278, 283, 285, 286, 288, 289, 291, 292, 293, 294, 295, 299, 303, 304, 305, 309, 310, 317, 323, 328, 331, 332, 333, 334, 336, 355, 370, 434, 440, 442, 447, 448, 449, 450, 452, 453, 454, 456, 457, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 518, 535, 545, 550, 551, 572, 601, 636, 655, 722, 726, 820, 833, 906, 940], "current": [23, 26, 38, 47, 48, 53, 55, 56, 57, 60, 67, 68, 70, 85, 104, 105, 107, 108, 111, 121, 146, 151, 166, 175, 187, 188, 191, 192, 197, 203, 204, 205, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 227, 229, 237, 239, 245, 252, 263, 265, 277, 278, 283, 285, 286, 287, 291, 304, 305, 309, 310, 312, 316, 317, 319, 323, 324, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 345, 346, 347, 351, 352, 364, 365, 386, 388, 394, 422, 429, 434, 442, 443, 446, 489, 504, 507, 516, 521, 523, 524, 526, 545, 549, 550, 551, 557, 562, 566, 581, 596, 597, 602, 605, 635, 644, 646, 647, 648, 659, 670, 700, 707, 727, 747, 764, 766, 783, 785, 786, 787, 788, 789, 810, 833, 841, 843, 845, 846, 847, 848, 852, 856, 859, 865, 888, 897, 898, 905, 935, 944, 947, 949, 955], "scenario": [23, 274], "two": [23, 30, 31, 38, 42, 45, 48, 58, 63, 68, 71, 73, 80, 81, 92, 94, 96, 97, 99, 101, 102, 107, 110, 114, 117, 139, 142, 144, 158, 159, 161, 163, 167, 168, 170, 172, 176, 177, 181, 182, 184, 186, 192, 194, 195, 196, 197, 198, 201, 204, 206, 217, 218, 219, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 238, 240, 243, 244, 245, 246, 252, 255, 257, 259, 263, 265, 268, 270, 274, 277, 284, 285, 288, 292, 293, 299, 303, 304, 306, 307, 309, 310, 317, 319, 320, 325, 331, 332, 333, 334, 337, 338, 339, 342, 343, 345, 346, 347, 364, 365, 380, 388, 423, 427, 428, 439, 440, 441, 475, 483, 485, 490, 494, 498, 506, 507, 517, 519, 521, 522, 523, 526, 527, 545, 547, 548, 550, 551, 575, 589, 608, 613, 630, 635, 638, 645, 650, 659, 668, 669, 684, 685, 724, 727, 736, 760, 764, 765, 766, 768, 770, 771, 772, 773, 774, 778, 783, 785, 786, 787, 788, 789, 803, 804, 814, 823, 833, 835, 839, 842, 865, 866, 867, 870, 875, 882, 888, 893, 914, 935, 945, 947], "draw": [23, 182, 196, 202, 203, 229, 257, 274, 278, 280, 285, 295, 320, 328, 331, 332, 333, 334, 336, 340, 380, 483, 490, 550, 551, 634, 635, 650, 655, 663, 783, 785, 786, 788, 789, 835, 852, 858, 859, 866, 867, 869, 870, 874, 878, 881, 885, 887, 890, 891, 895, 897, 906, 907], "same": [23, 30, 44, 45, 54, 70, 71, 80, 81, 84, 97, 101, 102, 109, 117, 126, 130, 136, 140, 141, 161, 166, 167, 168, 170, 175, 176, 177, 182, 186, 187, 188, 194, 195, 196, 197, 201, 202, 204, 209, 215, 217, 218, 219, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 244, 245, 246, 250, 255, 256, 257, 259, 260, 263, 264, 265, 268, 273, 274, 283, 284, 285, 287, 288, 292, 294, 295, 301, 304, 307, 308, 309, 317, 320, 321, 323, 325, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 351, 352, 354, 364, 367, 369, 377, 382, 385, 396, 409, 422, 423, 427, 428, 429, 441, 443, 460, 483, 490, 491, 496, 504, 507, 508, 517, 518, 533, 536, 540, 541, 545, 549, 550, 551, 558, 559, 566, 567, 578, 582, 621, 635, 636, 637, 646, 649, 652, 653, 654, 659, 670, 671, 684, 688, 694, 695, 710, 728, 729, 733, 734, 735, 736, 743, 748, 749, 765, 769, 770, 771, 773, 774, 778, 783, 785, 786, 787, 788, 789, 801, 803, 804, 810, 811, 812, 813, 814, 815, 816, 817, 823, 833, 839, 851, 852, 859, 865, 866, 867, 869, 871, 874, 876, 887, 888, 891, 893, 894, 896, 933, 935, 938, 951], "window": [23, 26, 27, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 85, 98, 99, 100, 101, 103, 108, 109, 110, 114, 120, 126, 127, 130, 131, 135, 136, 140, 141, 142, 148, 151, 159, 162, 163, 167, 168, 169, 170, 172, 177, 192, 197, 198, 206, 209, 212, 218, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 245, 246, 250, 256, 260, 268, 269, 270, 278, 280, 281, 285, 287, 288, 289, 291, 292, 293, 294, 295, 297, 303, 304, 306, 307, 309, 323, 326, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 357, 410, 412, 416, 483, 484, 488, 490, 494, 496, 499, 507, 509, 518, 519, 521, 522, 523, 532, 542, 548, 550, 551, 608, 609, 635, 637, 645, 659, 662, 668, 670, 678, 735, 736, 769, 783, 784, 785, 788, 792, 795, 797, 800, 803, 804, 808, 809, 812, 813, 814, 815, 816, 817, 833, 865, 866, 867, 874, 882, 888, 889, 893, 898, 941, 944, 945, 947], "stai": [23, 170, 229, 230, 250, 252, 273, 309, 319, 331, 332, 333, 334, 550, 551, 552, 732], "sync": [23, 170, 325, 336, 512, 568, 684], "author": [23, 26, 27, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 167, 183, 185, 187, 205, 206, 208, 209, 210, 211, 212, 218, 222, 229, 236, 240, 252, 255, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 277, 309, 310, 314, 677, 801, 811, 947], "marijn": [23, 58, 59, 71, 87, 100, 130, 187, 252, 274, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 302, 303, 304, 305, 364, 365, 953], "van": [23, 58, 59, 69, 71, 87, 100, 130, 154, 187, 206, 229, 252, 274, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 302, 303, 304, 305, 320, 343, 364, 365, 429, 458, 643, 953], "vliet": [23, 58, 59, 71, 87, 100, 130, 187, 252, 274, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 302, 303, 304, 305, 364, 365, 953], "w": [23, 31, 47, 58, 59, 65, 71, 87, 88, 100, 109, 130, 158, 163, 168, 178, 182, 186, 187, 204, 208, 222, 223, 229, 238, 252, 255, 268, 273, 274, 277, 291, 296, 300, 320, 328, 330, 331, 332, 333, 334, 342, 346, 364, 365, 377, 389, 439, 483, 490, 550, 551, 602, 610, 613, 634, 635, 668, 710, 740, 745, 765, 783, 785, 786, 787, 788, 789, 801, 810, 811, 814, 817, 852, 867, 873, 874, 888, 890, 895, 896, 897], "m": [23, 26, 27, 29, 30, 31, 34, 42, 44, 45, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 70, 71, 72, 74, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 96, 98, 99, 100, 105, 112, 113, 123, 124, 125, 127, 128, 130, 132, 136, 137, 140, 141, 143, 146, 147, 151, 154, 161, 163, 166, 167, 169, 170, 171, 175, 176, 177, 182, 183, 184, 185, 187, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 227, 228, 229, 232, 234, 236, 237, 239, 240, 244, 245, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 273, 274, 277, 280, 282, 283, 291, 304, 309, 314, 317, 319, 320, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 367, 372, 373, 393, 398, 403, 405, 407, 410, 412, 413, 414, 416, 423, 428, 434, 443, 450, 458, 475, 476, 483, 485, 487, 489, 490, 491, 494, 504, 507, 519, 521, 522, 526, 543, 544, 547, 548, 550, 551, 554, 567, 570, 590, 598, 602, 610, 613, 617, 634, 635, 637, 643, 644, 646, 649, 650, 652, 653, 656, 658, 659, 668, 670, 675, 678, 683, 694, 732, 736, 740, 743, 745, 748, 753, 754, 755, 757, 758, 764, 769, 770, 771, 773, 774, 778, 783, 785, 786, 787, 788, 789, 801, 811, 814, 817, 833, 835, 837, 852, 859, 867, 869, 870, 871, 874, 875, 878, 887, 888, 890, 893, 895, 897, 898, 899, 903, 905, 938, 948], "vanvliet": [23, 58, 59, 71, 87, 100, 130, 187, 252, 274], "gmail": [23, 30, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 52, 58, 59, 60, 64, 65, 68, 69, 70, 71, 72, 76, 77, 83, 84, 87, 92, 96, 99, 100, 101, 103, 105, 106, 107, 108, 110, 114, 117, 120, 121, 122, 126, 128, 130, 136, 139, 140, 141, 145, 147, 148, 151, 153, 154, 155, 158, 159, 161, 162, 163, 167, 183, 185, 187, 205, 206, 208, 209, 210, 212, 218, 222, 236, 252, 255, 259, 260, 263, 264, 265, 269, 270, 273, 274], "com": [23, 30, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 52, 58, 59, 60, 64, 65, 68, 69, 70, 71, 72, 76, 77, 83, 84, 87, 92, 96, 99, 100, 101, 103, 105, 106, 107, 108, 110, 114, 117, 120, 121, 122, 128, 130, 136, 139, 140, 141, 145, 146, 147, 148, 151, 153, 154, 155, 158, 159, 161, 162, 163, 167, 183, 185, 186, 187, 205, 206, 208, 209, 210, 212, 218, 222, 236, 251, 252, 255, 259, 260, 263, 264, 265, 269, 270, 273, 274, 277, 309, 331, 332, 333, 334, 342, 458, 550, 551, 559, 935, 949], "demonstr": [24, 31, 45, 53, 59, 67, 69, 70, 71, 90, 94, 97, 98, 100, 106, 110, 126, 130, 141, 144, 171, 172, 177, 178, 187, 194, 196, 197, 198, 217, 219, 222, 226, 228, 229, 231, 232, 235, 237, 243, 251, 252, 255, 263, 268, 295, 317, 320, 321, 652, 935, 949], "00": [25, 26, 27, 29, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 50, 51, 52, 59, 60, 67, 68, 70, 71, 72, 76, 82, 85, 93, 97, 98, 99, 100, 103, 107, 108, 109, 110, 111, 114, 115, 117, 118, 120, 123, 126, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 142, 146, 148, 151, 156, 159, 162, 165, 167, 169, 170, 172, 174, 177, 180, 182, 183, 184, 185, 186, 190, 193, 194, 195, 198, 200, 202, 206, 207, 208, 209, 210, 211, 212, 214, 218, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 272, 273, 276, 277, 602, 634, 643, 955], "000": [25, 26, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 60, 68, 85, 90, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 114, 115, 117, 120, 121, 122, 126, 136, 139, 140, 141, 142, 146, 148, 151, 155, 156, 159, 162, 163, 166, 167, 168, 169, 170, 172, 175, 177, 178, 185, 192, 193, 194, 198, 205, 207, 208, 209, 210, 211, 212, 217, 218, 221, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 244, 245, 246, 249, 250, 252, 256, 258, 259, 260, 269, 576, 696, 955], "total": [25, 26, 27, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 276, 292, 301, 320, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 427, 444, 500, 550, 551, 637, 687, 778, 785, 786, 788, 789, 867, 893, 898, 955], "execut": [25, 32, 46, 51, 58, 82, 93, 111, 115, 118, 129, 133, 156, 159, 162, 165, 174, 180, 181, 190, 197, 198, 200, 214, 221, 225, 226, 242, 248, 249, 254, 262, 267, 272, 276, 292, 293, 304, 309, 320, 329, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 445, 450, 486, 493, 496, 499, 500, 526, 539, 541, 542, 550, 551, 593, 596, 597, 608, 609, 618, 619, 635, 640, 647, 648, 731, 732, 734, 735, 736, 748, 770, 771, 772, 773, 774, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 814, 815, 816, 835, 863, 865, 867, 870, 882, 888, 889, 891, 940, 941, 944, 945, 955], "auto_exampl": [25, 32, 46, 51, 82, 93, 111, 115, 118, 129, 133, 156], "mem": [25, 32, 46, 51, 82, 93, 111, 115, 118, 129, 133, 156, 165, 174, 180, 190, 200, 214, 221, 225, 242, 248, 249, 254, 262, 267, 272, 276, 955], "mb": [25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 276, 331, 332, 341, 550, 551, 865, 888, 947, 952, 955], "n": [25, 34, 36, 69, 71, 97, 109, 115, 120, 136, 141, 163, 167, 170, 175, 177, 183, 186, 196, 198, 201, 212, 215, 229, 232, 233, 234, 235, 243, 249, 250, 252, 255, 257, 259, 260, 270, 277, 278, 294, 302, 306, 317, 319, 320, 323, 325, 326, 330, 331, 332, 333, 334, 336, 337, 338, 339, 342, 343, 345, 346, 347, 349, 380, 389, 408, 419, 420, 421, 424, 425, 426, 429, 438, 450, 475, 476, 498, 504, 507, 518, 520, 541, 550, 551, 572, 617, 634, 635, 639, 642, 652, 653, 659, 670, 718, 743, 756, 757, 758, 759, 763, 768, 783, 787, 797, 798, 801, 811, 812, 813, 815, 816, 833, 837, 838, 854, 869, 876, 893, 898, 899, 905, 935, 938, 949], "go": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 309, 310, 320, 344, 426, 533, 550, 551, 635, 732, 935, 936, 950], "end": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 282, 286, 289, 294, 295, 308, 309, 310, 319, 320, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 354, 355, 380, 385, 392, 408, 410, 412, 423, 426, 428, 483, 489, 490, 495, 501, 506, 507, 508, 523, 524, 550, 551, 564, 572, 573, 578, 586, 595, 608, 616, 618, 619, 620, 634, 635, 638, 652, 653, 662, 680, 682, 684, 691, 693, 700, 701, 702, 708, 712, 716, 718, 739, 740, 741, 742, 743, 745, 748, 760, 783, 784, 787, 790, 791, 792, 793, 794, 795, 796, 798, 807, 818, 820, 833, 865, 874, 879, 882, 888, 895, 921, 922, 923, 924, 926, 927, 931, 932, 933, 934, 935, 940], "download": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 284, 293, 294, 307, 309, 317, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 940, 942, 943, 944, 948, 949], "full": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 268, 269, 270, 273, 274, 282, 287, 288, 292, 293, 294, 295, 301, 303, 305, 306, 307, 308, 309, 310, 316, 317, 331, 332, 333, 334, 336, 338, 339, 342, 344, 345, 347, 364, 365, 367, 369, 386, 387, 423, 427, 428, 429, 439, 440, 441, 483, 488, 490, 491, 496, 513, 516, 526, 527, 545, 547, 548, 550, 551, 601, 602, 613, 616, 632, 635, 697, 700, 763, 769, 770, 772, 774, 787, 799, 801, 803, 810, 811, 813, 815, 816, 823, 833, 851, 853, 856, 859, 865, 867, 875, 882, 888, 893, 898, 900, 901, 904, 940, 947, 951, 955], "here": [26, 29, 30, 31, 33, 35, 36, 37, 38, 41, 44, 45, 47, 54, 57, 59, 60, 64, 67, 68, 69, 71, 92, 94, 97, 98, 101, 102, 108, 109, 110, 117, 121, 122, 127, 128, 131, 136, 138, 139, 141, 143, 144, 147, 148, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 244, 245, 246, 250, 252, 255, 256, 257, 259, 260, 263, 264, 265, 269, 270, 273, 290, 309, 317, 320, 321, 337, 341, 342, 344, 346, 347, 402, 429, 456, 462, 489, 500, 507, 523, 549, 587, 597, 600, 610, 635, 652, 668, 671, 685, 687, 700, 732, 735, 736, 737, 746, 747, 749, 770, 771, 772, 773, 774, 778, 868, 899, 935, 937, 938, 940, 948, 949], "we": [26, 29, 30, 31, 33, 35, 36, 37, 39, 42, 44, 45, 47, 48, 52, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 80, 84, 85, 92, 94, 95, 96, 97, 98, 100, 101, 102, 109, 110, 113, 114, 117, 121, 122, 128, 130, 134, 136, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 154, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 277, 282, 283, 288, 294, 303, 304, 305, 307, 308, 310, 312, 314, 316, 317, 318, 320, 328, 331, 332, 333, 334, 336, 338, 341, 342, 344, 346, 349, 375, 398, 491, 493, 507, 513, 514, 515, 516, 523, 533, 550, 551, 552, 583, 610, 635, 652, 669, 677, 743, 787, 833, 834, 851, 860, 875, 893, 915, 935, 938, 940, 945, 946, 949, 950], "tutori": [26, 53, 58, 89, 97, 100, 110, 136, 149, 152, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 203, 204, 206, 207, 208, 213, 214, 217, 218, 220, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 250, 251, 252, 253, 255, 257, 260, 261, 263, 265, 266, 268, 270, 271, 277, 278, 280, 287, 288, 292, 293, 294, 295, 296, 304, 308, 309, 317, 319, 320, 321, 328, 329, 331, 332, 333, 334, 336, 364, 370, 423, 428, 483, 503, 518, 521, 524, 526, 550, 551, 562, 564, 576, 598, 623, 670, 788, 812, 813, 815, 816, 851, 863, 875, 903, 935, 937, 955], "1": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 250, 251, 252, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 273, 274, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 309, 310, 313, 314, 316, 317, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 357, 364, 365, 366, 367, 369, 372, 375, 376, 377, 380, 382, 386, 389, 390, 391, 403, 410, 411, 412, 416, 422, 423, 424, 425, 426, 428, 429, 434, 437, 438, 441, 450, 457, 458, 459, 463, 464, 465, 475, 476, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 507, 512, 513, 514, 515, 516, 518, 519, 521, 522, 523, 524, 526, 527, 528, 539, 541, 542, 544, 545, 547, 548, 549, 550, 551, 559, 561, 566, 567, 568, 575, 576, 577, 581, 588, 589, 591, 593, 594, 595, 596, 597, 598, 600, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 617, 618, 619, 626, 627, 628, 629, 632, 634, 635, 636, 637, 640, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 659, 660, 661, 662, 663, 664, 665, 668, 670, 671, 674, 677, 678, 679, 685, 692, 694, 696, 702, 704, 717, 723, 727, 729, 730, 731, 732, 733, 734, 735, 736, 739, 740, 741, 742, 743, 745, 747, 748, 750, 757, 758, 759, 762, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 804, 808, 810, 811, 812, 813, 814, 815, 816, 817, 821, 823, 828, 833, 835, 838, 844, 848, 851, 852, 856, 859, 863, 864, 865, 866, 867, 869, 870, 871, 874, 875, 876, 878, 880, 882, 883, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 901, 903, 906, 935, 940, 941, 944, 946, 947, 949, 952, 955], "http": [26, 34, 41, 69, 97, 114, 140, 177, 181, 186, 197, 210, 223, 260, 277, 291, 309, 314, 320, 331, 332, 333, 334, 338, 342, 346, 423, 436, 450, 456, 458, 475, 476, 491, 545, 550, 551, 559, 602, 636, 728, 765, 767, 814, 817, 829, 893, 935, 947, 949], "neuroimag": [26, 36, 38, 44, 45, 47, 61, 68, 72, 85, 86, 102, 121, 128, 140, 148, 154, 170, 181, 188, 191, 206, 210, 213, 214, 223, 239, 255, 256, 277, 314, 318, 319, 320, 321, 328, 329, 331, 332, 333, 334, 336, 337, 342, 369, 370, 423, 459, 487, 489, 490, 491, 501, 504, 524, 526, 545, 548, 562, 598, 603, 613, 617, 635, 649, 677, 740, 743, 745, 767, 770, 771, 772, 773, 774, 776, 777, 799, 801, 811, 851, 863, 875, 935, 948, 955], "usc": [26, 210], "edu": [26, 35, 50, 61, 63, 69, 73, 84, 95, 97, 128, 131, 140, 141, 142, 147, 160, 177, 181, 210, 240, 277, 320, 338, 342, 346, 436, 679, 893], "mediannervectf": 26, "mainak": [26, 72, 105, 112, 113, 218, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 299, 300, 301, 302, 307, 314, 548, 953], "ja": [26, 72, 105, 112, 113, 218, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 299, 300, 301, 302, 307, 314, 548, 953], "telecom": [26, 105, 113, 218], "paristech": [26, 105, 113, 218, 322, 953], "fr": [26, 33, 35, 36, 37, 39, 44, 45, 54, 55, 56, 64, 65, 66, 68, 72, 73, 74, 76, 78, 79, 85, 86, 91, 105, 113, 119, 123, 124, 127, 134, 135, 137, 138, 144, 148, 153, 157, 158, 163, 185, 211, 218, 223, 257, 258, 259, 263, 264, 265, 269, 277, 288], "licens": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 289, 300, 317, 447, 448, 449, 456, 458], "bsd": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 310, 670], "claus": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274], "copyright": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 310], "contributor": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 277, 278, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 310, 311, 312, 935, 945, 948], "import": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 274, 277, 282, 283, 285, 287, 288, 292, 293, 294, 302, 305, 308, 310, 316, 317, 318, 320, 325, 331, 332, 333, 334, 336, 380, 396, 443, 450, 475, 476, 523, 550, 551, 559, 561, 563, 566, 567, 568, 569, 570, 571, 572, 574, 578, 579, 582, 583, 635, 658, 679, 694, 695, 699, 713, 727, 748, 763, 765, 783, 785, 786, 787, 788, 789, 801, 811, 828, 831, 833, 883, 933, 935, 938, 940, 941, 945, 948, 949, 950, 955], "numpi": [26, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 45, 48, 54, 57, 58, 59, 60, 61, 64, 66, 68, 71, 73, 76, 84, 85, 87, 90, 95, 97, 98, 99, 101, 108, 110, 117, 119, 120, 121, 122, 124, 127, 134, 138, 139, 140, 141, 142, 144, 146, 147, 153, 159, 161, 162, 163, 166, 167, 169, 172, 175, 176, 177, 182, 183, 184, 185, 186, 192, 194, 196, 197, 198, 202, 203, 204, 207, 208, 209, 210, 211, 212, 217, 218, 219, 222, 223, 226, 227, 229, 230, 231, 232, 233, 234, 237, 238, 239, 243, 244, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 278, 282, 283, 284, 285, 286, 289, 291, 292, 293, 295, 301, 303, 310, 318, 319, 325, 328, 331, 332, 333, 334, 338, 339, 340, 341, 342, 345, 346, 347, 483, 489, 490, 491, 521, 522, 523, 547, 548, 549, 550, 551, 587, 635, 650, 668, 679, 687, 735, 736, 737, 746, 747, 749, 763, 768, 770, 771, 772, 773, 774, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 795, 801, 811, 812, 813, 814, 815, 816, 817, 833, 851, 867, 869, 874, 887, 937, 941], "print": [26, 27, 30, 31, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 48, 50, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 96, 97, 98, 99, 100, 101, 103, 105, 106, 109, 110, 112, 113, 114, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 151, 155, 157, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 172, 175, 176, 177, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 201, 202, 205, 207, 208, 209, 210, 211, 212, 218, 223, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 240, 243, 244, 245, 250, 251, 252, 255, 256, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 277, 280, 291, 295, 300, 304, 305, 308, 317, 323, 331, 332, 333, 334, 423, 464, 518, 524, 550, 551, 584, 728, 729, 782, 785, 786, 787, 828, 835, 842, 859, 870, 872, 875, 935, 945, 947], "__doc__": [26, 27, 30, 33, 34, 36, 37, 39, 40, 41, 42, 44, 48, 50, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 96, 97, 98, 99, 100, 101, 103, 105, 106, 110, 112, 113, 114, 119, 120, 121, 122, 123, 124, 127, 130, 131, 134, 135, 136, 137, 138, 141, 143, 144, 145, 146, 147, 148, 151, 155, 157, 158, 159, 162, 201, 205, 209, 210, 258, 259, 264, 265], "tmin": [26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 54, 57, 58, 59, 60, 61, 64, 66, 68, 71, 72, 75, 77, 85, 86, 87, 96, 98, 99, 100, 109, 110, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 137, 138, 139, 140, 141, 144, 148, 149, 155, 158, 159, 162, 163, 166, 167, 168, 170, 171, 175, 177, 188, 192, 198, 203, 206, 207, 209, 210, 211, 212, 218, 222, 223, 227, 228, 232, 236, 238, 239, 240, 243, 250, 251, 252, 256, 257, 258, 259, 260, 263, 265, 268, 269, 270, 278, 282, 284, 289, 292, 293, 295, 297, 302, 303, 304, 306, 316, 320, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 410, 412, 423, 424, 425, 428, 489, 495, 507, 509, 550, 551, 589, 608, 625, 647, 648, 652, 653, 662, 750, 769, 775, 783, 784, 785, 787, 788, 790, 791, 792, 793, 794, 795, 796, 798, 833, 867, 889, 895, 938], "tmax": [26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 54, 57, 58, 59, 60, 61, 64, 66, 68, 71, 72, 75, 77, 85, 86, 87, 96, 98, 99, 100, 109, 110, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 137, 138, 139, 140, 141, 144, 148, 149, 155, 158, 159, 162, 163, 166, 167, 168, 170, 171, 172, 175, 177, 178, 188, 192, 193, 194, 198, 203, 206, 207, 208, 209, 210, 211, 212, 218, 222, 223, 226, 227, 228, 232, 233, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 251, 252, 256, 257, 258, 259, 260, 263, 265, 268, 269, 270, 278, 282, 284, 289, 292, 293, 295, 297, 302, 303, 304, 305, 306, 316, 320, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 410, 412, 423, 424, 425, 428, 489, 495, 507, 509, 550, 551, 608, 625, 647, 648, 652, 653, 662, 769, 772, 783, 784, 785, 787, 788, 790, 791, 792, 793, 794, 795, 796, 798, 833, 867, 876, 889, 895, 935, 938], "event_id": [26, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 54, 58, 59, 60, 68, 71, 72, 75, 96, 98, 99, 100, 114, 121, 123, 124, 126, 127, 130, 131, 134, 137, 139, 140, 144, 148, 149, 155, 158, 161, 162, 163, 166, 167, 168, 170, 175, 177, 178, 188, 192, 194, 198, 203, 206, 209, 210, 211, 218, 223, 231, 232, 234, 238, 240, 244, 250, 251, 252, 257, 258, 259, 260, 263, 265, 268, 269, 270, 281, 282, 284, 286, 288, 289, 291, 292, 298, 301, 308, 316, 320, 323, 324, 325, 326, 331, 332, 341, 350, 424, 499, 505, 507, 510, 512, 550, 551, 568, 600, 636, 647, 648, 652, 653, 660, 661, 662, 663, 664, 694, 696, 697, 769, 785, 786, 787, 865, 868, 888, 938], "2": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 141, 144, 145, 146, 147, 148, 151, 152, 154, 155, 157, 158, 159, 162, 163, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 218, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 263, 265, 266, 267, 268, 269, 270, 273, 274, 276, 277, 279, 280, 281, 282, 283, 286, 287, 288, 289, 291, 293, 297, 300, 301, 302, 303, 309, 313, 314, 316, 317, 318, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 354, 355, 357, 364, 365, 367, 370, 382, 384, 389, 403, 410, 412, 416, 417, 423, 424, 425, 426, 428, 429, 437, 438, 450, 458, 459, 475, 476, 483, 485, 486, 489, 490, 491, 493, 494, 495, 499, 500, 502, 504, 505, 506, 512, 516, 518, 519, 521, 522, 524, 528, 535, 538, 544, 545, 547, 548, 550, 551, 559, 566, 575, 580, 581, 590, 592, 597, 600, 601, 602, 608, 610, 611, 612, 613, 615, 617, 618, 619, 629, 634, 635, 636, 640, 643, 644, 645, 647, 648, 649, 650, 652, 653, 655, 656, 657, 659, 666, 668, 669, 670, 674, 680, 685, 687, 700, 701, 704, 707, 710, 712, 723, 727, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 755, 757, 758, 759, 760, 762, 764, 765, 766, 769, 770, 771, 772, 773, 774, 775, 782, 783, 784, 785, 786, 787, 788, 789, 797, 798, 800, 801, 803, 804, 808, 811, 812, 813, 814, 815, 816, 817, 820, 823, 833, 834, 838, 839, 844, 851, 852, 859, 866, 867, 869, 871, 874, 875, 876, 877, 878, 879, 880, 887, 889, 890, 891, 893, 894, 895, 897, 898, 905, 935, 940, 941, 947, 949, 952, 955], "take": [26, 30, 31, 33, 36, 42, 45, 52, 57, 64, 67, 69, 70, 71, 73, 76, 97, 98, 101, 103, 106, 109, 121, 123, 124, 128, 136, 137, 140, 142, 146, 151, 157, 159, 161, 163, 166, 167, 168, 170, 171, 175, 176, 178, 181, 184, 185, 186, 188, 192, 193, 194, 195, 197, 198, 202, 205, 207, 208, 209, 211, 212, 216, 219, 222, 223, 228, 229, 232, 233, 234, 235, 237, 243, 250, 252, 255, 263, 264, 265, 269, 270, 273, 281, 282, 283, 285, 288, 291, 292, 293, 298, 299, 303, 304, 305, 309, 310, 319, 320, 321, 323, 325, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 354, 364, 365, 377, 380, 398, 408, 411, 423, 427, 428, 429, 436, 439, 440, 441, 483, 490, 507, 512, 516, 524, 526, 527, 540, 542, 545, 547, 548, 550, 551, 578, 602, 603, 604, 605, 606, 608, 609, 613, 618, 619, 635, 638, 640, 643, 718, 724, 731, 733, 744, 749, 769, 778, 783, 785, 786, 787, 788, 789, 830, 833, 834, 852, 859, 867, 869, 874, 875, 878, 887, 895, 905, 944, 945, 949], "right": [26, 31, 34, 36, 37, 39, 41, 65, 66, 67, 69, 71, 73, 77, 78, 83, 86, 88, 94, 97, 98, 100, 106, 109, 121, 134, 136, 139, 140, 141, 143, 155, 158, 160, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 181, 182, 184, 186, 187, 192, 194, 198, 201, 202, 204, 205, 206, 207, 218, 219, 222, 228, 229, 231, 232, 233, 234, 237, 240, 243, 244, 245, 246, 251, 252, 257, 259, 260, 263, 264, 265, 268, 269, 273, 274, 280, 283, 286, 288, 293, 294, 307, 309, 310, 317, 319, 320, 327, 328, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 345, 346, 347, 380, 382, 392, 393, 403, 404, 429, 450, 483, 490, 505, 507, 510, 517, 541, 548, 550, 551, 570, 575, 587, 600, 634, 635, 655, 658, 717, 746, 783, 785, 786, 787, 788, 789, 801, 811, 833, 848, 858, 859, 865, 866, 867, 871, 873, 874, 878, 886, 887, 888, 890, 895, 897, 899, 935, 940, 944], "hand": [26, 31, 34, 35, 139, 182, 186, 227, 232, 233, 234, 270, 294, 320, 336, 450, 635], "reject": [26, 31, 33, 37, 39, 42, 53, 54, 58, 68, 71, 72, 88, 96, 103, 104, 109, 123, 124, 126, 127, 128, 130, 131, 134, 137, 140, 141, 144, 148, 158, 166, 167, 168, 170, 171, 172, 177, 178, 191, 192, 198, 203, 206, 216, 218, 223, 227, 232, 233, 234, 237, 238, 241, 242, 245, 255, 257, 258, 259, 260, 263, 265, 269, 277, 280, 281, 282, 284, 285, 288, 292, 295, 300, 301, 304, 312, 320, 323, 324, 325, 326, 331, 332, 333, 336, 341, 426, 428, 550, 551, 594, 632, 635, 637, 638, 647, 648, 649, 652, 653, 660, 661, 670, 693, 697, 709, 761, 767, 769, 865, 878, 879, 880, 881, 955], "dict": [26, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 42, 44, 47, 48, 52, 54, 58, 61, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 80, 81, 84, 85, 86, 88, 92, 94, 96, 97, 101, 103, 105, 106, 112, 114, 120, 121, 123, 124, 126, 127, 128, 130, 131, 134, 136, 137, 139, 140, 141, 142, 143, 144, 147, 148, 149, 151, 155, 157, 158, 161, 162, 163, 166, 167, 168, 169, 171, 176, 177, 178, 183, 184, 185, 186, 192, 194, 195, 196, 197, 198, 201, 202, 203, 205, 206, 207, 210, 212, 218, 219, 222, 223, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 278, 282, 286, 287, 288, 292, 293, 298, 299, 305, 306, 307, 309, 316, 320, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 353, 355, 364, 365, 370, 372, 378, 380, 382, 392, 393, 408, 410, 411, 412, 413, 414, 415, 423, 426, 427, 428, 434, 435, 436, 437, 438, 439, 440, 441, 456, 462, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 505, 507, 510, 512, 515, 517, 518, 519, 521, 522, 526, 527, 528, 529, 531, 533, 534, 535, 536, 545, 547, 548, 549, 550, 551, 553, 555, 559, 566, 571, 575, 585, 589, 590, 591, 592, 593, 596, 597, 601, 602, 603, 604, 605, 606, 608, 609, 613, 615, 618, 619, 620, 625, 627, 628, 631, 633, 634, 635, 636, 637, 645, 647, 648, 650, 652, 653, 655, 658, 659, 666, 681, 686, 690, 694, 695, 696, 697, 699, 703, 709, 713, 715, 718, 724, 732, 734, 735, 736, 746, 748, 751, 752, 768, 769, 770, 771, 773, 774, 778, 780, 783, 785, 786, 787, 788, 789, 801, 811, 819, 820, 822, 823, 833, 834, 835, 851, 852, 854, 855, 857, 858, 859, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 878, 880, 886, 887, 888, 890, 893, 894, 895, 896, 897, 898, 899, 905, 923, 933, 934, 938], "mag": [26, 29, 31, 33, 34, 35, 38, 39, 47, 48, 52, 54, 57, 58, 59, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 96, 101, 103, 106, 107, 108, 113, 120, 121, 131, 134, 136, 143, 146, 147, 148, 151, 152, 158, 166, 168, 171, 172, 176, 178, 182, 183, 184, 188, 192, 195, 196, 198, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 218, 223, 226, 228, 230, 232, 233, 234, 236, 237, 243, 250, 251, 252, 260, 263, 265, 268, 274, 288, 316, 319, 320, 323, 326, 328, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 364, 365, 379, 386, 387, 406, 423, 427, 428, 439, 440, 441, 443, 483, 490, 492, 526, 527, 545, 547, 548, 550, 551, 590, 613, 632, 633, 634, 635, 640, 645, 647, 648, 650, 652, 653, 659, 723, 769, 783, 785, 786, 787, 788, 789, 858, 859, 865, 866, 867, 869, 871, 873, 874, 875, 878, 888, 890, 891, 895, 896, 897], "4e": [26, 31, 35, 54, 57, 68, 71, 96, 105, 108, 131, 134, 148, 158, 178, 188, 203, 206, 211, 212, 218, 223, 232, 251, 252, 260, 316, 326, 331, 332, 341, 428, 550, 551, 635, 652, 653, 769, 865, 888], "12": [26, 29, 33, 35, 37, 38, 39, 44, 45, 46, 47, 50, 54, 58, 59, 60, 61, 68, 69, 70, 71, 72, 73, 75, 82, 84, 85, 96, 99, 103, 106, 107, 109, 111, 128, 130, 131, 134, 135, 136, 139, 140, 141, 148, 156, 158, 159, 167, 171, 172, 174, 175, 177, 178, 180, 187, 188, 192, 194, 195, 197, 198, 201, 203, 205, 206, 209, 212, 214, 218, 222, 223, 226, 228, 229, 230, 231, 232, 234, 236, 237, 240, 243, 245, 250, 252, 255, 256, 257, 259, 260, 262, 263, 264, 265, 269, 273, 277, 279, 283, 289, 290, 300, 313, 316, 317, 320, 325, 326, 330, 331, 332, 333, 334, 336, 341, 343, 344, 364, 373, 377, 381, 403, 416, 420, 421, 423, 428, 429, 450, 464, 489, 505, 524, 526, 548, 550, 551, 563, 596, 600, 602, 635, 646, 647, 648, 652, 653, 668, 670, 736, 769, 783, 785, 786, 787, 788, 789, 813, 816, 853, 865, 867, 872, 884, 888, 891, 935, 941, 952, 955], "eog": [26, 30, 34, 37, 40, 41, 42, 53, 54, 58, 59, 68, 71, 72, 88, 96, 98, 101, 103, 104, 107, 108, 109, 111, 114, 117, 120, 121, 123, 124, 127, 131, 134, 135, 136, 137, 140, 144, 155, 163, 166, 167, 171, 172, 175, 177, 178, 192, 193, 194, 195, 198, 203, 206, 216, 218, 219, 223, 227, 228, 230, 233, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 257, 258, 259, 260, 263, 265, 269, 273, 280, 282, 283, 287, 292, 294, 295, 297, 299, 305, 316, 317, 318, 319, 320, 326, 331, 332, 333, 334, 336, 341, 379, 428, 443, 516, 524, 550, 551, 559, 561, 562, 563, 566, 567, 568, 574, 578, 581, 632, 634, 635, 648, 652, 653, 661, 664, 680, 685, 694, 735, 736, 769, 783, 785, 786, 787, 788, 789, 865, 866, 881, 886, 888, 938, 955], "250e": [26, 58, 170, 192, 218, 231, 234, 326, 331, 332, 428, 635, 652, 653, 769], "6": [26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 95, 97, 98, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 152, 156, 157, 159, 161, 162, 166, 167, 168, 169, 170, 171, 172, 177, 178, 182, 183, 184, 185, 186, 188, 190, 192, 194, 195, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 218, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 243, 245, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 269, 270, 272, 273, 274, 277, 283, 292, 295, 298, 301, 302, 304, 306, 308, 313, 316, 317, 320, 323, 326, 328, 330, 331, 332, 333, 334, 336, 340, 341, 344, 349, 382, 403, 409, 428, 450, 457, 483, 485, 488, 490, 503, 507, 518, 519, 521, 522, 550, 551, 563, 567, 602, 619, 634, 635, 644, 650, 651, 652, 653, 668, 672, 683, 694, 723, 732, 736, 770, 771, 773, 774, 782, 783, 785, 786, 787, 788, 789, 801, 811, 813, 816, 833, 835, 844, 850, 851, 852, 865, 866, 867, 870, 871, 874, 878, 880, 882, 887, 888, 890, 894, 895, 897, 903, 940, 941, 946, 947, 955], "raw_path": [26, 198, 210], "subj001_somatosensory_20111109_01_aux": [26, 146], "f": [26, 31, 34, 35, 36, 44, 45, 47, 48, 53, 54, 55, 58, 59, 65, 66, 67, 72, 73, 87, 90, 97, 98, 109, 112, 117, 119, 121, 125, 129, 131, 134, 136, 138, 139, 140, 141, 142, 146, 154, 161, 167, 170, 175, 176, 177, 183, 184, 185, 186, 191, 193, 196, 198, 202, 208, 212, 218, 222, 223, 226, 227, 229, 232, 234, 236, 237, 238, 240, 245, 250, 251, 252, 255, 257, 258, 259, 261, 262, 263, 264, 265, 268, 269, 270, 273, 277, 287, 303, 316, 317, 319, 320, 323, 325, 328, 331, 332, 333, 334, 336, 355, 364, 370, 386, 406, 422, 458, 522, 524, 550, 551, 601, 632, 644, 655, 697, 739, 763, 764, 765, 766, 769, 771, 774, 787, 801, 811, 812, 815, 820, 856, 859, 866, 947, 949, 955], "d": [26, 30, 33, 37, 38, 41, 45, 47, 48, 52, 60, 65, 67, 72, 76, 78, 83, 85, 92, 99, 106, 107, 108, 110, 120, 121, 127, 128, 136, 138, 140, 145, 146, 147, 151, 154, 161, 162, 167, 183, 184, 185, 186, 197, 205, 206, 208, 209, 210, 211, 212, 218, 222, 229, 235, 236, 245, 252, 255, 259, 263, 264, 265, 268, 270, 273, 277, 278, 287, 288, 291, 292, 294, 304, 312, 317, 318, 320, 323, 325, 328, 331, 332, 333, 334, 336, 355, 364, 365, 370, 389, 423, 458, 491, 545, 550, 551, 564, 568, 601, 602, 655, 701, 727, 776, 777, 785, 788, 804, 820, 834, 875, 888, 949], "crop": [26, 29, 31, 34, 35, 36, 38, 47, 56, 57, 58, 59, 60, 61, 64, 66, 68, 70, 71, 72, 77, 85, 86, 101, 103, 107, 108, 109, 110, 136, 139, 143, 163, 166, 167, 168, 172, 175, 177, 193, 194, 198, 202, 205, 206, 207, 209, 210, 211, 212, 226, 227, 230, 232, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 252, 256, 257, 263, 265, 268, 269, 273, 278, 282, 283, 286, 288, 289, 292, 293, 294, 295, 303, 304, 305, 306, 318, 325, 329, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 645, 671, 684, 783, 787, 954], "half": [26, 97, 229, 230, 265, 288, 306, 307, 309, 320, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 410, 485, 519, 521, 522, 550, 551, 654, 770, 771, 773, 774, 778, 797, 799, 801, 811, 813, 816, 833, 859, 865, 867, 888, 893, 898], "length": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 100, 103, 108, 109, 110, 114, 126, 138, 139, 140, 141, 142, 148, 159, 162, 167, 169, 170, 175, 177, 198, 201, 212, 218, 223, 226, 228, 230, 231, 232, 233, 234, 237, 238, 239, 240, 243, 246, 250, 256, 260, 268, 281, 283, 284, 291, 292, 294, 299, 301, 306, 316, 317, 319, 320, 323, 326, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 354, 381, 428, 464, 483, 485, 488, 489, 490, 491, 494, 495, 498, 519, 521, 522, 541, 548, 549, 550, 551, 605, 617, 619, 634, 635, 637, 643, 652, 653, 670, 677, 700, 701, 722, 733, 749, 763, 764, 768, 769, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 797, 800, 803, 804, 808, 812, 813, 814, 815, 816, 817, 823, 833, 844, 850, 851, 852, 859, 866, 867, 869, 871, 874, 876, 878, 887, 890, 893, 894, 895, 896, 897, 898], "save": [26, 31, 33, 35, 37, 55, 56, 60, 67, 69, 70, 87, 88, 97, 101, 135, 136, 137, 140, 142, 161, 162, 168, 169, 176, 177, 182, 183, 184, 186, 187, 188, 194, 196, 203, 206, 207, 209, 215, 217, 218, 227, 228, 230, 232, 234, 235, 237, 244, 245, 246, 252, 259, 263, 278, 280, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 302, 303, 304, 305, 306, 307, 309, 318, 320, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 355, 380, 381, 406, 456, 487, 513, 514, 515, 516, 542, 549, 550, 551, 568, 571, 576, 608, 609, 624, 634, 635, 683, 695, 696, 699, 700, 704, 707, 710, 721, 773, 774, 783, 784, 785, 786, 787, 788, 789, 805, 806, 818, 820, 833, 922, 926, 927, 929, 935, 938, 945], "memori": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 286, 292, 293, 294, 296, 297, 298, 299, 300, 303, 304, 308, 309, 312, 318, 323, 326, 331, 332, 333, 334, 349, 358, 359, 362, 398, 428, 430, 432, 444, 485, 492, 495, 496, 500, 521, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 594, 604, 605, 606, 608, 609, 615, 637, 670, 725, 730, 732, 770, 771, 773, 774, 791, 794, 810, 812, 813, 814, 815, 816, 817, 833, 869, 938, 940, 941, 947], "120": [26, 29, 31, 33, 50, 59, 61, 64, 68, 71, 85, 107, 108, 127, 129, 135, 159, 161, 168, 177, 186, 195, 202, 207, 212, 218, 226, 228, 230, 232, 236, 239, 269, 277, 323, 331, 332, 506, 550, 551, 645, 650, 865, 888, 955], "set_channel_typ": [26, 155, 166, 175, 177, 218, 243, 291, 302, 306, 307, 308, 331, 332, 333, 334, 336, 516, 550, 551, 658], "eeg058": 26, "averag": [26, 27, 29, 30, 31, 33, 36, 37, 39, 40, 41, 42, 44, 45, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 89, 91, 93, 95, 96, 98, 99, 100, 103, 105, 106, 107, 108, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 131, 134, 135, 137, 139, 140, 143, 144, 146, 147, 148, 152, 158, 159, 161, 162, 163, 167, 168, 169, 170, 171, 172, 176, 178, 179, 180, 184, 185, 188, 191, 192, 195, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 218, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 265, 268, 269, 270, 273, 274, 277, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 299, 300, 302, 304, 305, 306, 308, 312, 316, 317, 319, 323, 324, 328, 330, 331, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 353, 422, 423, 425, 442, 459, 483, 490, 497, 502, 504, 517, 524, 540, 550, 551, 576, 588, 589, 603, 604, 605, 606, 608, 609, 615, 618, 619, 634, 635, 639, 640, 642, 647, 648, 650, 652, 655, 659, 660, 663, 666, 696, 700, 701, 724, 727, 739, 747, 783, 784, 785, 786, 787, 788, 789, 803, 804, 812, 813, 814, 815, 816, 817, 833, 835, 859, 867, 869, 870, 874, 878, 886, 887, 889, 890, 895, 897, 935, 938, 955], "true": [26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 112, 113, 114, 119, 120, 121, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 192, 193, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 245, 246, 250, 251, 252, 255, 257, 258, 259, 260, 263, 265, 268, 269, 270, 273, 274, 277, 278, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 299, 301, 303, 304, 305, 306, 307, 309, 316, 317, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 354, 355, 364, 365, 367, 369, 370, 371, 374, 375, 376, 377, 380, 381, 382, 385, 388, 389, 390, 391, 392, 393, 406, 408, 410, 411, 412, 413, 416, 423, 427, 428, 429, 430, 432, 433, 439, 440, 441, 445, 447, 448, 449, 450, 452, 453, 454, 456, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 501, 502, 504, 505, 508, 512, 513, 514, 515, 516, 517, 518, 521, 522, 524, 526, 527, 528, 531, 536, 540, 541, 542, 544, 545, 547, 548, 549, 550, 551, 552, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 594, 595, 597, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 611, 612, 613, 615, 617, 618, 619, 620, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 644, 646, 647, 648, 650, 652, 653, 654, 655, 656, 659, 660, 661, 666, 668, 670, 685, 693, 696, 697, 700, 702, 705, 713, 715, 718, 721, 724, 726, 727, 729, 731, 732, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 753, 757, 760, 761, 764, 765, 767, 770, 771, 773, 774, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 792, 794, 795, 797, 802, 803, 804, 810, 812, 813, 814, 815, 816, 817, 818, 820, 828, 831, 833, 835, 839, 842, 843, 844, 848, 849, 851, 852, 853, 854, 856, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 905, 922, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 940], "show": [26, 29, 30, 33, 34, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 57, 58, 61, 63, 64, 67, 68, 70, 71, 72, 73, 78, 79, 80, 81, 84, 85, 87, 90, 95, 96, 98, 100, 101, 104, 105, 111, 124, 126, 128, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 151, 152, 154, 157, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 181, 182, 183, 185, 186, 192, 194, 195, 196, 198, 202, 204, 205, 206, 207, 208, 217, 218, 226, 228, 229, 230, 231, 232, 233, 234, 236, 238, 243, 245, 246, 250, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 280, 282, 283, 284, 285, 287, 289, 291, 292, 295, 299, 303, 304, 307, 308, 309, 312, 316, 319, 320, 328, 329, 330, 331, 332, 333, 334, 336, 339, 340, 344, 345, 346, 347, 375, 377, 380, 381, 483, 490, 524, 542, 550, 551, 584, 632, 634, 635, 650, 655, 659, 661, 782, 783, 784, 785, 786, 788, 789, 801, 811, 833, 835, 842, 843, 844, 851, 852, 853, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 904, 940, 949, 954, 955], "power": [26, 38, 47, 53, 58, 62, 64, 82, 87, 95, 98, 108, 109, 132, 133, 139, 140, 141, 142, 148, 155, 159, 163, 171, 172, 175, 176, 188, 191, 192, 198, 206, 209, 212, 218, 222, 228, 229, 233, 236, 239, 246, 250, 253, 254, 256, 260, 261, 262, 268, 277, 278, 280, 283, 285, 287, 288, 289, 291, 292, 293, 294, 299, 300, 303, 304, 309, 310, 317, 319, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 345, 346, 347, 355, 356, 357, 358, 361, 364, 365, 386, 422, 423, 427, 428, 483, 485, 488, 490, 491, 494, 496, 517, 519, 521, 522, 523, 524, 550, 551, 557, 590, 592, 597, 601, 602, 603, 608, 609, 613, 616, 618, 619, 626, 631, 632, 635, 689, 697, 702, 704, 717, 731, 737, 748, 763, 764, 765, 766, 767, 770, 771, 772, 773, 774, 783, 784, 785, 786, 787, 788, 789, 794, 803, 804, 812, 813, 814, 815, 816, 817, 827, 833, 851, 858, 859, 860, 866, 867, 869, 872, 874, 875, 880, 886, 889, 895, 903, 935, 955], "interfer": [26, 151, 162, 226, 227, 230, 235, 236, 237, 239, 245, 277, 317, 319, 323, 649, 670, 935], "remov": [26, 33, 42, 44, 47, 53, 54, 57, 58, 61, 68, 77, 84, 85, 86, 94, 96, 97, 98, 99, 101, 102, 103, 104, 107, 108, 111, 117, 120, 126, 130, 136, 139, 140, 146, 149, 158, 162, 166, 167, 168, 169, 172, 175, 176, 177, 183, 184, 186, 187, 188, 192, 193, 194, 196, 198, 202, 203, 206, 207, 208, 209, 210, 212, 218, 223, 226, 227, 228, 229, 230, 231, 234, 235, 237, 239, 240, 243, 245, 246, 252, 257, 258, 259, 260, 268, 270, 273, 274, 277, 278, 282, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 317, 319, 320, 323, 325, 328, 331, 332, 333, 334, 335, 336, 337, 341, 342, 355, 370, 380, 396, 416, 423, 432, 433, 489, 491, 495, 506, 522, 526, 535, 547, 548, 550, 551, 552, 566, 572, 601, 632, 633, 634, 635, 636, 649, 651, 655, 659, 677, 678, 685, 691, 700, 702, 705, 724, 727, 747, 749, 783, 785, 786, 787, 788, 789, 820, 833, 856, 872, 888, 904, 905, 917, 938, 955], "compute_psd": [26, 98, 101, 136, 159, 163, 166, 168, 169, 192, 193, 209, 212, 218, 226, 228, 230, 234, 236, 238, 239, 246, 268, 269, 270, 278, 305, 306, 307, 331, 332, 333, 334, 488, 550, 551, 635, 785, 788, 803, 867, 878, 880, 889], "60": [26, 29, 31, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 54, 55, 56, 57, 59, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 91, 95, 96, 97, 99, 100, 101, 103, 105, 107, 108, 109, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 141, 143, 144, 146, 147, 148, 151, 152, 157, 158, 159, 162, 163, 166, 167, 169, 170, 175, 176, 177, 178, 185, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 223, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 243, 244, 245, 246, 251, 252, 255, 256, 258, 259, 260, 263, 265, 268, 273, 274, 284, 285, 300, 317, 323, 522, 550, 551, 668, 876, 954, 955], "fals": [26, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 56, 57, 58, 66, 67, 68, 70, 73, 74, 75, 76, 80, 81, 90, 91, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 107, 108, 109, 110, 112, 114, 117, 121, 123, 124, 126, 127, 128, 131, 134, 135, 136, 137, 139, 141, 142, 145, 146, 147, 151, 152, 154, 160, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 181, 182, 184, 186, 188, 192, 193, 194, 195, 196, 197, 198, 202, 204, 206, 207, 208, 209, 211, 215, 218, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 245, 246, 250, 251, 252, 256, 257, 258, 259, 260, 265, 268, 269, 270, 273, 277, 278, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 295, 301, 302, 303, 304, 307, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 355, 358, 359, 362, 364, 365, 367, 369, 370, 371, 375, 376, 377, 380, 381, 382, 385, 388, 390, 391, 392, 394, 408, 411, 413, 416, 423, 428, 429, 430, 432, 433, 439, 442, 445, 447, 448, 449, 450, 452, 453, 454, 456, 458, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 486, 488, 489, 490, 491, 493, 497, 501, 502, 504, 508, 513, 514, 515, 516, 517, 518, 524, 527, 531, 536, 541, 542, 544, 545, 547, 548, 549, 550, 551, 552, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 594, 597, 600, 601, 602, 603, 604, 605, 606, 608, 609, 611, 612, 613, 615, 618, 619, 620, 626, 627, 628, 630, 631, 632, 633, 634, 635, 640, 647, 648, 650, 652, 653, 655, 656, 659, 660, 661, 665, 666, 668, 670, 671, 674, 690, 693, 696, 697, 700, 702, 707, 712, 713, 715, 716, 718, 720, 721, 724, 727, 728, 729, 732, 738, 739, 740, 741, 742, 743, 744, 745, 750, 756, 759, 760, 761, 764, 767, 770, 771, 773, 774, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 792, 795, 797, 801, 802, 803, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 828, 831, 833, 835, 843, 848, 849, 851, 852, 853, 856, 859, 860, 863, 865, 866, 867, 869, 870, 871, 873, 874, 876, 878, 880, 882, 884, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 901, 922, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 940], "pick": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 108, 109, 112, 114, 117, 119, 120, 121, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 144, 146, 147, 148, 157, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 183, 184, 186, 188, 192, 194, 195, 196, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 218, 219, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 246, 250, 251, 252, 257, 258, 259, 260, 263, 265, 268, 269, 273, 274, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 299, 300, 301, 302, 303, 304, 307, 309, 316, 319, 320, 326, 328, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 345, 346, 347, 354, 364, 365, 378, 381, 382, 385, 395, 397, 428, 439, 485, 491, 499, 504, 508, 521, 522, 550, 551, 626, 627, 628, 629, 632, 633, 634, 635, 637, 649, 651, 652, 653, 662, 666, 676, 678, 685, 751, 769, 778, 783, 784, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 802, 815, 816, 833, 849, 853, 857, 859, 865, 866, 869, 871, 872, 878, 879, 880, 882, 884, 886, 889, 891, 893, 898, 938], "exclud": [26, 29, 31, 33, 34, 35, 37, 39, 40, 41, 42, 44, 50, 52, 54, 57, 60, 61, 66, 67, 69, 71, 75, 76, 77, 84, 85, 86, 91, 95, 96, 97, 98, 101, 105, 109, 112, 114, 117, 119, 123, 124, 126, 127, 131, 134, 135, 136, 137, 138, 139, 146, 159, 163, 168, 169, 170, 176, 182, 183, 184, 192, 195, 198, 202, 203, 207, 208, 209, 210, 211, 212, 218, 223, 226, 227, 228, 230, 232, 233, 234, 235, 236, 238, 246, 252, 257, 258, 259, 263, 265, 268, 269, 270, 282, 284, 286, 287, 288, 289, 292, 293, 294, 295, 299, 305, 316, 323, 328, 329, 330, 331, 332, 333, 334, 338, 339, 341, 342, 344, 345, 346, 347, 373, 374, 387, 394, 428, 434, 439, 441, 491, 502, 550, 551, 553, 559, 566, 568, 574, 598, 626, 627, 628, 630, 632, 633, 634, 635, 636, 647, 648, 649, 650, 659, 670, 685, 697, 702, 723, 727, 732, 770, 771, 773, 774, 783, 785, 786, 787, 788, 789, 793, 794, 795, 796, 802, 860, 869, 871, 872, 873, 879, 881, 882, 889, 914, 938], "bad": [26, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 53, 54, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 75, 77, 84, 85, 86, 91, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 108, 109, 111, 114, 117, 119, 120, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146, 148, 149, 155, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 188, 191, 192, 193, 194, 195, 196, 198, 202, 203, 206, 207, 208, 209, 210, 211, 212, 218, 223, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 251, 252, 257, 258, 259, 260, 268, 269, 270, 273, 278, 282, 284, 285, 286, 287, 288, 291, 292, 294, 295, 299, 300, 302, 303, 304, 306, 307, 308, 318, 319, 323, 325, 326, 328, 331, 332, 333, 334, 336, 365, 378, 381, 382, 387, 394, 397, 409, 428, 432, 439, 440, 441, 485, 499, 504, 512, 521, 522, 524, 540, 550, 551, 563, 594, 613, 627, 628, 629, 632, 633, 634, 635, 637, 638, 639, 642, 647, 648, 649, 651, 652, 653, 654, 659, 660, 661, 662, 670, 671, 676, 678, 685, 697, 700, 723, 724, 727, 751, 769, 783, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 816, 859, 860, 865, 866, 869, 871, 872, 873, 880, 884, 888, 889, 920, 935, 948, 955], "arang": [26, 30, 34, 35, 41, 45, 69, 71, 95, 108, 117, 119, 121, 122, 134, 139, 141, 147, 192, 212, 218, 222, 223, 229, 238, 239, 250, 252, 255, 257, 258, 259, 260, 264, 265, 270, 273, 337, 344, 522, 539, 550, 551, 568, 679, 775, 801, 811, 813, 816], "181": [26, 61, 118, 120, 126, 154, 195, 218, 236, 255, 259, 260, 277, 748, 769, 955], "fir_design": [26, 33, 34, 35, 37, 39, 40, 41, 42, 44, 103, 114, 126, 148, 159, 218, 229, 232, 270, 285, 331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551], "firwin": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 212, 218, 223, 229, 230, 231, 232, 237, 238, 239, 240, 260, 270, 285, 331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551], "stim_channel": [26, 29, 31, 33, 68, 72, 106, 134, 135, 137, 140, 163, 166, 168, 175, 178, 192, 194, 203, 218, 227, 232, 234, 240, 244, 257, 268, 269, 285, 287, 288, 299, 324, 415, 524, 525, 550, 551, 559, 566, 574, 581, 662], "uppt001": [26, 33, 107, 108, 218], "stim": [26, 29, 31, 34, 37, 40, 41, 47, 54, 58, 59, 60, 68, 71, 72, 75, 92, 96, 98, 99, 100, 106, 107, 108, 114, 117, 120, 122, 126, 127, 131, 134, 135, 137, 140, 149, 166, 167, 168, 172, 175, 177, 178, 188, 192, 195, 198, 203, 206, 208, 209, 211, 212, 215, 218, 223, 227, 230, 231, 232, 234, 239, 240, 243, 244, 251, 252, 257, 258, 259, 269, 270, 280, 285, 287, 288, 299, 319, 320, 323, 324, 331, 332, 333, 334, 336, 341, 379, 418, 443, 516, 524, 525, 550, 551, 559, 566, 574, 576, 581, 632, 635, 662, 697, 733, 783, 785, 786, 787, 788, 789, 865, 888, 938], "none": [26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 96, 97, 98, 100, 103, 105, 107, 108, 109, 110, 112, 113, 114, 117, 120, 121, 123, 124, 126, 127, 130, 131, 134, 136, 137, 139, 140, 141, 144, 146, 147, 148, 149, 152, 158, 161, 162, 163, 167, 168, 169, 170, 171, 175, 176, 177, 178, 184, 185, 186, 187, 188, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 222, 223, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 245, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 299, 303, 304, 305, 307, 309, 310, 316, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 389, 393, 394, 395, 396, 397, 398, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 676, 677, 678, 679, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 762, 768, 769, 770, 771, 772, 773, 774, 775, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 807, 808, 809, 811, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 825, 828, 832, 833, 835, 837, 839, 842, 843, 844, 845, 847, 848, 851, 852, 853, 854, 855, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 906, 914, 915, 916, 917, 918, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934], "preload": [26, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 58, 59, 60, 68, 75, 94, 97, 98, 99, 100, 107, 108, 109, 110, 114, 126, 130, 134, 137, 139, 140, 141, 144, 148, 149, 159, 163, 166, 167, 168, 170, 171, 172, 175, 177, 178, 185, 192, 193, 196, 198, 206, 208, 209, 210, 211, 212, 215, 218, 223, 226, 228, 231, 232, 233, 234, 238, 240, 243, 251, 252, 257, 258, 259, 260, 263, 265, 268, 269, 270, 278, 280, 284, 285, 288, 289, 292, 293, 296, 302, 303, 304, 316, 317, 323, 331, 332, 333, 334, 341, 416, 432, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 594, 647, 648, 652, 653, 693, 695, 699, 724, 727, 783, 785, 786, 787, 788, 789, 865, 888], "physiolog": [26, 34, 68, 163, 219, 230, 232, 235, 277, 286, 317, 331, 332, 333, 334, 450, 475, 476, 550, 551, 727], "eyeblink": [26, 648, 653], "heartbeat": [26, 109, 168, 172, 228, 232, 233, 234, 235, 237, 245, 647, 652, 660, 663], "add_proj": [26, 27, 29, 30, 31, 68, 119, 128, 136, 138, 166, 168, 172, 175, 188, 198, 210, 211, 212, 218, 223, 226, 231, 233, 234, 238, 239, 243, 256, 331, 332, 333, 334, 341, 550, 551, 649, 747], "copi": [26, 27, 30, 31, 34, 35, 36, 38, 39, 40, 42, 44, 45, 47, 48, 53, 64, 71, 72, 73, 74, 75, 80, 84, 88, 94, 97, 100, 101, 105, 110, 134, 136, 141, 146, 162, 166, 167, 170, 172, 175, 176, 177, 181, 187, 188, 192, 194, 195, 197, 198, 202, 204, 211, 212, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 245, 252, 256, 259, 260, 273, 278, 282, 284, 285, 287, 288, 291, 292, 298, 299, 304, 307, 309, 318, 320, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 344, 345, 346, 347, 348, 354, 355, 370, 375, 377, 380, 385, 433, 440, 442, 447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 492, 505, 508, 521, 522, 550, 551, 599, 601, 615, 627, 628, 631, 634, 635, 644, 647, 648, 654, 655, 662, 666, 671, 685, 694, 721, 724, 727, 780, 783, 784, 785, 786, 787, 788, 789, 791, 793, 794, 795, 796, 797, 802, 819, 820, 935, 938], "apply_proj": [26, 98, 121, 168, 172, 175, 185, 193, 208, 233, 234, 235, 239, 287, 292, 331, 332, 333, 334, 513, 514, 515, 516, 550, 551, 649, 727, 888], "fix": [26, 31, 48, 57, 66, 67, 71, 73, 74, 75, 80, 81, 84, 87, 106, 117, 127, 166, 168, 184, 189, 190, 191, 194, 196, 202, 206, 223, 238, 239, 251, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 320, 324, 329, 330, 333, 334, 335, 342, 364, 365, 376, 388, 423, 430, 433, 496, 524, 526, 528, 542, 545, 547, 548, 550, 591, 595, 597, 602, 603, 604, 605, 606, 613, 614, 617, 618, 619, 635, 639, 643, 668, 690, 702, 713, 723, 791, 794, 801, 811, 812, 813, 815, 816, 835, 851, 870, 927, 928, 933, 935, 940, 955], "delai": [26, 30, 45, 218, 222, 233, 234, 238, 277, 278, 299, 317, 324, 326, 331, 332, 333, 334, 489, 495, 500, 518, 519, 521, 522, 550, 551, 594, 693, 876], "due": [26, 31, 66, 69, 73, 107, 194, 212, 216, 217, 226, 228, 229, 233, 237, 238, 239, 243, 246, 251, 270, 278, 288, 289, 304, 316, 319, 320, 327, 331, 332, 333, 334, 335, 337, 475, 482, 489, 500, 504, 517, 547, 548, 550, 551, 645, 646, 659, 666, 670, 684, 704, 710, 787, 833, 929, 935], "hardwar": [26, 192, 217, 228, 235, 293, 319, 320, 324, 331, 332, 336, 445, 475, 550, 551, 635, 865, 882, 888, 940, 947], "4": [26, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 190, 192, 194, 195, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 218, 219, 222, 223, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 269, 270, 273, 274, 277, 280, 282, 286, 293, 298, 301, 306, 313, 316, 317, 319, 320, 323, 328, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 364, 365, 369, 373, 374, 380, 381, 382, 392, 403, 423, 450, 459, 483, 489, 490, 491, 496, 502, 506, 507, 518, 524, 526, 541, 547, 548, 550, 551, 586, 591, 602, 609, 626, 627, 628, 634, 635, 640, 644, 647, 649, 650, 661, 667, 669, 679, 685, 702, 704, 723, 727, 732, 736, 743, 763, 764, 767, 771, 783, 785, 786, 787, 788, 789, 801, 802, 804, 808, 811, 813, 814, 816, 817, 820, 821, 822, 823, 833, 835, 837, 850, 851, 852, 854, 859, 865, 866, 867, 869, 870, 871, 874, 875, 878, 885, 887, 888, 889, 890, 891, 893, 895, 897, 898, 899, 935, 940, 941, 947, 955], "shift_tim": [26, 112, 166, 287, 291, 308, 330, 331, 332, 333, 334, 783, 787], "004": [26, 36, 58, 59, 70, 148, 155, 166, 168, 171, 175, 192, 195, 202, 231, 252, 277, 343, 429, 503, 598, 833], "result": [26, 34, 35, 52, 55, 56, 71, 72, 81, 84, 87, 97, 106, 109, 117, 126, 128, 130, 134, 141, 154, 160, 162, 163, 170, 172, 175, 177, 181, 182, 183, 185, 186, 188, 192, 193, 196, 198, 202, 204, 212, 215, 222, 223, 226, 229, 231, 232, 233, 234, 236, 243, 244, 246, 250, 252, 255, 256, 259, 260, 263, 264, 265, 273, 277, 278, 281, 283, 284, 286, 288, 291, 302, 303, 305, 309, 312, 316, 317, 320, 323, 325, 326, 331, 332, 333, 334, 336, 338, 339, 342, 343, 345, 346, 347, 356, 358, 365, 382, 385, 386, 422, 423, 428, 430, 432, 458, 460, 482, 484, 485, 499, 508, 517, 523, 541, 545, 547, 548, 550, 551, 568, 587, 594, 598, 602, 604, 605, 606, 608, 613, 614, 621, 635, 640, 646, 652, 653, 655, 659, 668, 670, 687, 693, 701, 724, 735, 736, 737, 746, 747, 749, 768, 769, 770, 771, 772, 773, 774, 775, 783, 785, 786, 787, 788, 789, 833, 842, 844, 859, 865, 866, 888, 935], "time_unit": [26, 37, 40, 61, 66, 68, 69, 77, 85, 86, 88, 96, 98, 112, 119, 120, 126, 127, 128, 148, 176, 177, 178, 188, 201, 203, 204, 209, 210, 211, 218, 223, 251, 256, 257, 258, 304, 330, 333, 334, 338, 339, 342, 345, 346, 347, 859, 869, 871, 874, 875, 893, 898], "": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 50, 52, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 81, 84, 85, 86, 88, 90, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 142, 143, 144, 146, 147, 148, 149, 151, 153, 154, 155, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 277, 278, 282, 283, 284, 285, 286, 287, 292, 293, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 310, 312, 314, 316, 317, 318, 319, 320, 322, 323, 325, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 348, 355, 357, 364, 365, 370, 371, 372, 389, 392, 396, 422, 423, 427, 429, 435, 436, 455, 456, 458, 475, 476, 483, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 504, 507, 513, 514, 515, 516, 517, 519, 521, 522, 523, 542, 544, 547, 548, 550, 551, 556, 559, 566, 568, 574, 575, 581, 584, 589, 593, 596, 598, 601, 602, 613, 617, 618, 619, 634, 635, 636, 637, 646, 653, 654, 655, 657, 661, 662, 669, 670, 674, 677, 688, 700, 701, 710, 712, 713, 714, 715, 719, 720, 722, 724, 727, 728, 732, 733, 740, 743, 745, 760, 769, 770, 771, 772, 773, 774, 778, 779, 781, 783, 784, 785, 786, 787, 788, 789, 797, 801, 803, 804, 809, 811, 812, 813, 814, 815, 816, 817, 820, 825, 832, 833, 842, 843, 852, 853, 859, 861, 863, 865, 866, 869, 871, 872, 874, 875, 876, 878, 882, 888, 890, 891, 893, 895, 896, 897, 898, 899, 903, 914, 915, 916, 918, 929, 930, 935, 937, 938, 940, 945, 947, 951, 953, 955], "topomap": [26, 45, 68, 100, 109, 113, 146, 168, 177, 196, 231, 234, 260, 269, 274, 280, 282, 283, 284, 285, 287, 291, 292, 302, 304, 305, 306, 312, 319, 328, 331, 332, 333, 334, 336, 340, 341, 380, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 852, 865, 867, 869, 872, 874, 878, 885, 886, 887, 888, 889, 890, 891, 895, 897], "016": [26, 29, 58, 59, 155, 166, 168, 175, 195, 229, 231, 252, 277, 320, 635, 748], "030": [26, 107, 155, 166, 175, 195, 243, 246, 252], "060": [26, 107, 166, 175, 195, 243, 246, 252], "070": [26, 107], "directori": [26, 38, 47, 59, 60, 107, 108, 121, 122, 143, 146, 151, 181, 182, 187, 192, 197, 198, 210, 218, 283, 291, 295, 303, 304, 307, 309, 316, 323, 329, 336, 337, 338, 341, 342, 345, 346, 347, 371, 375, 376, 377, 380, 429, 434, 435, 436, 442, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 502, 533, 535, 539, 541, 542, 543, 544, 558, 564, 578, 582, 587, 591, 593, 621, 666, 687, 701, 705, 707, 714, 720, 721, 722, 725, 731, 732, 746, 749, 760, 778, 779, 825, 833, 851, 853, 863, 893, 899, 930, 935, 944, 947], "home": [26, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 161, 163, 166, 167, 169, 170, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 188, 192, 193, 194, 195, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 223, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 243, 246, 251, 252, 256, 257, 258, 259, 260, 263, 265, 269, 273, 274, 283, 295, 303, 304, 331, 332, 442, 550, 551, 865, 888], "circleci": [26, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 161, 163, 166, 167, 169, 170, 172, 175, 176, 177, 178, 182, 183, 184, 185, 188, 192, 193, 194, 195, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 223, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 243, 246, 251, 252, 256, 257, 258, 259, 260, 263, 265, 269, 273, 274, 309], "mne_data": [26, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 161, 163, 167, 169, 170, 172, 175, 176, 177, 178, 182, 183, 184, 185, 188, 192, 193, 194, 195, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 223, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 243, 246, 251, 252, 256, 257, 258, 259, 260, 263, 265, 269, 273, 274, 283, 309, 447, 448, 449, 450, 452, 453, 454, 456, 457, 461, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 935], "res4": [26, 38, 47, 107, 108, 146, 151, 210, 218], "hc": [26, 38, 47, 107, 108, 146, 151, 210, 218], "present": [26, 30, 36, 38, 39, 42, 47, 57, 66, 69, 70, 96, 108, 143, 146, 151, 154, 160, 166, 168, 170, 175, 176, 184, 192, 194, 195, 196, 206, 215, 216, 218, 219, 226, 227, 231, 233, 234, 235, 237, 240, 244, 246, 255, 259, 263, 264, 265, 277, 282, 283, 284, 286, 288, 289, 291, 292, 294, 299, 302, 303, 305, 307, 316, 317, 319, 320, 323, 324, 326, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 350, 351, 352, 355, 364, 365, 370, 375, 380, 386, 388, 392, 397, 402, 412, 416, 423, 427, 428, 429, 438, 439, 440, 441, 462, 483, 490, 502, 504, 507, 512, 524, 525, 526, 527, 531, 545, 547, 548, 550, 551, 553, 559, 562, 566, 574, 581, 593, 601, 613, 632, 634, 635, 637, 638, 645, 646, 650, 652, 655, 660, 670, 678, 697, 698, 747, 752, 768, 783, 785, 786, 787, 788, 789, 803, 820, 833, 851, 852, 858, 859, 867, 869, 871, 874, 875, 878, 885, 887, 888, 889, 890, 891, 894, 895, 897, 947], "quaternion": [26, 38, 47, 107, 108, 146, 151, 210, 218, 286, 419, 420, 421, 639, 642, 824, 826, 877], "match": [26, 29, 34, 35, 37, 38, 43, 44, 46, 47, 53, 54, 57, 58, 59, 60, 66, 67, 71, 72, 73, 75, 77, 84, 85, 86, 88, 96, 98, 99, 100, 101, 106, 107, 108, 109, 114, 117, 120, 121, 122, 123, 124, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 141, 144, 146, 148, 149, 151, 155, 158, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 177, 178, 183, 187, 188, 192, 195, 198, 203, 206, 208, 209, 210, 211, 212, 218, 222, 226, 227, 228, 230, 231, 234, 238, 240, 243, 244, 245, 250, 251, 252, 256, 257, 258, 259, 260, 263, 265, 269, 282, 283, 284, 285, 287, 288, 289, 291, 293, 294, 295, 307, 309, 320, 324, 326, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 385, 409, 423, 427, 434, 439, 440, 483, 484, 489, 490, 491, 493, 499, 504, 507, 508, 510, 512, 514, 515, 517, 533, 549, 550, 551, 559, 566, 574, 581, 599, 621, 624, 626, 627, 628, 634, 635, 644, 645, 650, 656, 659, 671, 684, 694, 696, 697, 702, 717, 720, 733, 748, 769, 774, 778, 783, 784, 785, 786, 787, 788, 789, 801, 802, 811, 823, 833, 851, 859, 865, 866, 867, 871, 874, 875, 878, 881, 887, 888, 889, 890, 926, 945, 955], "desir": [26, 31, 37, 38, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 97, 107, 108, 117, 119, 120, 121, 122, 128, 131, 134, 135, 137, 139, 146, 151, 152, 157, 168, 172, 177, 183, 187, 192, 194, 196, 198, 203, 204, 205, 206, 207, 210, 215, 216, 218, 222, 223, 227, 228, 229, 230, 233, 244, 251, 252, 263, 265, 273, 283, 287, 294, 316, 318, 324, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 429, 482, 507, 518, 550, 551, 595, 613, 634, 662, 679, 727, 783, 785, 786, 787, 788, 789, 801, 811, 819, 833, 898, 935, 947], "v": [26, 30, 34, 35, 38, 39, 47, 50, 53, 54, 58, 69, 80, 81, 90, 92, 97, 102, 107, 108, 132, 133, 146, 151, 158, 163, 167, 197, 198, 204, 210, 218, 222, 226, 229, 233, 256, 259, 260, 265, 268, 273, 277, 294, 304, 305, 306, 309, 316, 319, 320, 323, 326, 328, 330, 331, 332, 333, 334, 336, 350, 354, 355, 365, 370, 388, 413, 428, 443, 450, 489, 490, 491, 504, 550, 551, 601, 610, 635, 643, 646, 652, 653, 655, 659, 670, 677, 769, 783, 785, 787, 788, 797, 803, 812, 815, 816, 817, 820, 838, 941, 945, 955], "84": [26, 37, 45, 60, 61, 67, 73, 84, 107, 117, 135, 136, 139, 141, 146, 149, 162, 177, 195, 222, 223, 227, 236, 255, 256, 257, 259, 260, 263, 264, 265, 277, 560, 674], "69": [26, 41, 45, 61, 66, 73, 75, 105, 107, 108, 111, 130, 135, 139, 141, 146, 163, 166, 169, 195, 198, 202, 206, 210, 211, 218, 223, 231, 236, 255, 256, 257, 259, 260, 263, 264, 265, 277, 331, 332, 364, 475, 955], "49": [26, 31, 39, 45, 51, 54, 56, 57, 58, 60, 61, 64, 65, 66, 67, 70, 71, 73, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 105, 107, 112, 113, 130, 131, 135, 139, 140, 141, 143, 146, 147, 151, 175, 195, 198, 202, 204, 205, 207, 210, 211, 212, 218, 222, 223, 232, 236, 237, 238, 240, 242, 245, 252, 255, 256, 257, 259, 260, 264, 265, 273, 274, 277, 301, 302, 831, 955], "mm": [26, 29, 30, 31, 38, 47, 50, 52, 67, 70, 71, 76, 97, 98, 100, 103, 105, 106, 107, 108, 109, 117, 120, 121, 122, 136, 146, 151, 162, 167, 172, 177, 182, 183, 184, 185, 186, 187, 193, 194, 202, 204, 206, 207, 208, 209, 210, 211, 212, 218, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 251, 252, 273, 282, 289, 291, 293, 304, 306, 316, 320, 323, 329, 336, 338, 339, 342, 345, 346, 347, 373, 403, 405, 407, 429, 434, 502, 526, 535, 541, 543, 544, 563, 567, 587, 597, 655, 657, 658, 683, 694, 731, 732, 823, 825, 832, 833, 893, 898, 903], "orig": [26, 38, 47, 107, 108, 146, 151, 186, 210, 218, 227, 615, 627, 628, 633], "44": [26, 39, 45, 54, 61, 67, 71, 72, 73, 107, 130, 135, 139, 140, 141, 143, 146, 184, 194, 195, 202, 206, 207, 210, 222, 223, 229, 234, 236, 237, 255, 256, 257, 259, 260, 263, 264, 265, 277, 301, 302, 364, 365, 504, 545, 770, 771, 773, 774], "30": [26, 29, 31, 33, 34, 35, 37, 38, 39, 40, 45, 50, 54, 59, 60, 61, 67, 68, 71, 72, 73, 76, 82, 84, 97, 100, 101, 103, 107, 108, 109, 117, 119, 121, 124, 128, 130, 131, 134, 135, 136, 140, 141, 142, 146, 151, 162, 168, 172, 174, 182, 184, 186, 192, 195, 197, 198, 209, 210, 212, 222, 223, 226, 228, 229, 231, 232, 234, 235, 236, 238, 239, 240, 243, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 270, 273, 277, 282, 302, 316, 317, 320, 323, 331, 332, 333, 334, 342, 344, 371, 375, 403, 423, 550, 551, 584, 634, 638, 643, 659, 736, 747, 748, 785, 786, 788, 789, 801, 811, 812, 814, 815, 817, 838, 842, 867, 955], "51": [26, 31, 34, 39, 45, 54, 60, 61, 71, 73, 97, 98, 106, 107, 108, 130, 131, 135, 136, 139, 141, 146, 163, 178, 180, 182, 184, 195, 198, 210, 211, 218, 222, 223, 228, 232, 235, 236, 237, 243, 255, 256, 257, 259, 260, 264, 265, 273, 277, 296, 317, 341, 450, 670], "45": [26, 29, 31, 32, 34, 35, 37, 39, 41, 42, 45, 54, 61, 71, 76, 107, 110, 128, 130, 135, 136, 139, 140, 141, 146, 148, 151, 167, 169, 170, 171, 175, 182, 183, 184, 194, 195, 202, 206, 207, 212, 218, 222, 223, 229, 231, 232, 234, 235, 236, 237, 239, 245, 255, 256, 257, 259, 260, 263, 264, 265, 270, 280, 320, 325, 331, 332, 333, 334, 364, 365, 403, 423, 427, 428, 439, 440, 441, 483, 490, 518, 526, 527, 545, 547, 548, 550, 551, 613, 635, 764, 785, 786, 788, 789, 838, 867, 875, 955], "252": [26, 61, 146, 151, 195, 236, 259], "43": [26, 45, 52, 54, 60, 61, 67, 71, 72, 73, 74, 76, 80, 81, 107, 108, 130, 135, 139, 141, 146, 151, 171, 176, 180, 183, 184, 185, 190, 195, 202, 207, 208, 222, 223, 236, 255, 256, 257, 259, 260, 263, 264, 265, 277, 331, 332, 403, 785, 786, 787, 955], "diff": [26, 35, 38, 47, 97, 107, 108, 146, 151, 160, 202, 209, 210, 212, 218, 243, 263, 309, 842, 949], "46": [26, 38, 39, 45, 47, 54, 59, 60, 61, 66, 67, 71, 73, 77, 81, 86, 99, 107, 130, 135, 139, 141, 146, 151, 175, 190, 195, 223, 228, 229, 231, 236, 245, 255, 256, 257, 259, 260, 263, 265, 277, 281, 320], "28": [26, 29, 37, 44, 45, 52, 54, 60, 61, 67, 68, 71, 73, 76, 82, 107, 130, 135, 136, 141, 146, 147, 156, 166, 184, 195, 197, 202, 207, 208, 209, 210, 212, 214, 222, 223, 228, 230, 236, 242, 255, 256, 257, 259, 260, 264, 265, 269, 277, 281, 300, 403, 955], "53": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 54, 59, 60, 61, 66, 68, 71, 72, 73, 100, 103, 107, 108, 109, 110, 114, 121, 126, 130, 135, 140, 141, 142, 146, 148, 151, 159, 162, 167, 170, 171, 172, 177, 181, 188, 195, 210, 212, 218, 222, 223, 225, 229, 230, 231, 232, 236, 237, 238, 239, 240, 245, 255, 256, 257, 259, 260, 264, 265, 277, 764, 935], "58": [26, 37, 39, 45, 61, 66, 71, 73, 74, 75, 80, 81, 83, 84, 85, 105, 107, 117, 120, 121, 130, 131, 135, 136, 139, 141, 143, 146, 148, 162, 163, 175, 177, 178, 188, 195, 197, 198, 204, 208, 218, 223, 226, 232, 234, 236, 243, 255, 256, 258, 259, 260, 263, 273, 274, 277, 281, 320, 423, 955], "243": [26, 76, 77, 82, 107, 123, 129, 146, 195, 218, 236, 260, 955], "47": [26, 36, 42, 45, 54, 59, 61, 71, 77, 107, 110, 123, 130, 135, 139, 141, 146, 163, 183, 185, 190, 194, 195, 207, 209, 223, 236, 245, 255, 256, 257, 259, 260, 264, 265, 267, 277, 316, 317, 320, 367, 403, 476, 955], "86": [26, 31, 38, 39, 41, 45, 52, 60, 61, 66, 67, 73, 76, 107, 130, 135, 139, 141, 146, 163, 166, 177, 182, 183, 184, 194, 195, 198, 202, 207, 208, 210, 222, 223, 230, 232, 234, 235, 236, 239, 244, 255, 256, 257, 259, 260, 265, 277, 314, 490, 799, 801, 811], "41": [26, 39, 45, 54, 60, 61, 70, 71, 73, 107, 108, 130, 135, 141, 146, 156, 194, 195, 209, 210, 218, 222, 223, 232, 234, 235, 236, 243, 255, 256, 257, 259, 260, 263, 264, 265, 270, 277, 279, 343, 429, 475, 483, 941, 955], "63": [26, 39, 45, 61, 71, 73, 97, 107, 108, 123, 128, 130, 135, 141, 144, 146, 163, 169, 195, 210, 211, 218, 222, 223, 236, 255, 256, 257, 259, 260, 263, 265, 302], "55": [26, 29, 37, 39, 45, 47, 54, 56, 57, 61, 64, 65, 66, 67, 70, 71, 72, 74, 76, 80, 81, 83, 84, 87, 105, 107, 112, 113, 128, 130, 135, 136, 139, 141, 143, 146, 147, 152, 165, 169, 175, 177, 186, 195, 198, 203, 204, 206, 207, 212, 218, 221, 222, 231, 232, 234, 236, 238, 245, 255, 256, 257, 259, 260, 265, 273, 274, 277, 280, 483, 491, 602, 634, 635, 685, 940, 955], "82": [26, 39, 41, 45, 61, 72, 107, 130, 139, 141, 146, 171, 195, 206, 207, 210, 218, 223, 236, 255, 256, 257, 259, 260, 264, 265, 269, 475, 518], "230": [26, 107, 114, 133, 134, 146, 195, 212, 255, 955], "26": [26, 29, 31, 37, 39, 42, 45, 54, 58, 60, 61, 70, 71, 73, 107, 108, 109, 111, 128, 129, 130, 135, 136, 141, 146, 151, 162, 163, 171, 184, 186, 195, 196, 197, 200, 209, 210, 211, 212, 218, 223, 236, 255, 256, 257, 259, 260, 263, 264, 265, 277, 279, 301, 313, 317, 343, 344, 429, 464, 602, 955], "coordin": [26, 29, 31, 37, 38, 47, 48, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 98, 107, 108, 117, 119, 120, 121, 122, 131, 134, 135, 136, 137, 142, 146, 149, 151, 152, 157, 161, 162, 176, 184, 185, 189, 190, 191, 192, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 218, 219, 223, 235, 237, 239, 240, 251, 252, 263, 265, 273, 277, 280, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 298, 303, 304, 305, 306, 317, 319, 328, 329, 331, 332, 333, 334, 335, 336, 337, 340, 344, 346, 347, 370, 372, 373, 374, 380, 383, 384, 389, 393, 396, 398, 399, 401, 403, 407, 433, 434, 436, 460, 483, 490, 502, 504, 526, 534, 542, 543, 544, 547, 550, 551, 555, 558, 562, 563, 576, 583, 585, 593, 598, 634, 635, 646, 650, 655, 659, 670, 702, 712, 713, 715, 716, 732, 736, 760, 763, 783, 785, 786, 788, 789, 819, 820, 832, 833, 834, 851, 852, 853, 859, 863, 867, 869, 871, 873, 874, 875, 877, 878, 885, 887, 889, 890, 891, 895, 897, 903, 905, 927, 928, 933, 955], "establish": [26, 38, 47, 107, 108, 146, 151, 210, 215, 218, 229, 260, 277, 770, 771, 773, 774], "digit": [26, 98, 100, 103, 107, 108, 109, 117, 120, 145, 146, 151, 167, 172, 177, 182, 183, 185, 186, 193, 194, 195, 197, 208, 211, 215, 216, 218, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 273, 277, 278, 282, 283, 284, 285, 289, 291, 293, 294, 302, 303, 305, 316, 317, 319, 323, 324, 328, 330, 331, 332, 333, 334, 336, 340, 373, 374, 380, 393, 394, 396, 398, 401, 402, 405, 407, 410, 411, 413, 434, 483, 490, 502, 504, 524, 542, 550, 551, 555, 558, 564, 576, 585, 593, 598, 634, 635, 644, 645, 646, 650, 659, 670, 696, 697, 732, 783, 785, 786, 787, 788, 789, 833, 851, 852, 859, 867, 869, 871, 874, 875, 878, 885, 887, 889, 890, 891, 895, 897, 905], "point": [26, 29, 31, 34, 35, 37, 38, 42, 44, 47, 48, 52, 53, 58, 59, 60, 62, 64, 67, 68, 70, 71, 72, 75, 80, 81, 82, 84, 87, 98, 99, 100, 103, 107, 108, 109, 117, 120, 121, 123, 124, 127, 128, 130, 134, 136, 137, 139, 140, 141, 142, 144, 146, 147, 148, 149, 151, 155, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 218, 219, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 277, 278, 281, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 307, 309, 310, 312, 316, 318, 319, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 364, 365, 373, 374, 380, 383, 384, 389, 393, 398, 402, 403, 404, 405, 407, 411, 417, 419, 423, 428, 429, 433, 434, 436, 482, 483, 484, 485, 489, 490, 492, 499, 502, 504, 517, 519, 521, 524, 542, 544, 545, 549, 550, 551, 554, 555, 558, 564, 571, 576, 585, 596, 597, 598, 601, 602, 611, 612, 613, 614, 616, 617, 634, 635, 637, 645, 646, 649, 650, 655, 659, 670, 691, 695, 696, 699, 700, 702, 705, 710, 713, 716, 727, 731, 732, 734, 735, 736, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 750, 757, 759, 768, 769, 770, 771, 773, 774, 775, 783, 784, 785, 786, 787, 788, 789, 803, 804, 833, 834, 835, 838, 839, 851, 852, 853, 854, 859, 863, 867, 869, 870, 871, 872, 874, 875, 878, 879, 882, 885, 887, 889, 890, 891, 893, 894, 895, 897, 898, 899, 903, 928, 933, 935, 955], "subj00111092011": [26, 146], "po": [26, 45, 67, 73, 76, 106, 107, 108, 110, 120, 142, 146, 162, 177, 182, 202, 209, 210, 211, 212, 218, 235, 237, 282, 283, 292, 294, 304, 329, 333, 334, 337, 338, 339, 342, 345, 346, 347, 372, 381, 406, 420, 421, 503, 526, 543, 544, 564, 639, 642, 704, 732, 877, 897], "polhemu": [26, 38, 47, 107, 108, 146, 151, 182, 196, 210, 218, 284, 289, 320, 336, 380, 405, 407, 564, 576], "ad": [26, 30, 31, 37, 38, 47, 48, 53, 54, 55, 57, 61, 64, 65, 66, 67, 68, 69, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 94, 95, 97, 98, 107, 108, 117, 119, 120, 121, 122, 128, 131, 134, 135, 137, 146, 147, 151, 152, 157, 166, 167, 168, 172, 177, 182, 184, 185, 186, 187, 188, 192, 196, 201, 203, 204, 205, 207, 208, 210, 218, 223, 228, 232, 234, 235, 237, 245, 246, 250, 251, 252, 255, 256, 263, 265, 273, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 317, 320, 323, 325, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 380, 406, 410, 412, 416, 429, 430, 441, 483, 490, 503, 504, 507, 527, 549, 550, 551, 567, 575, 590, 595, 596, 597, 600, 634, 635, 637, 650, 652, 692, 694, 727, 732, 733, 737, 747, 775, 778, 783, 785, 786, 787, 788, 789, 829, 833, 837, 839, 851, 852, 853, 859, 863, 864, 867, 869, 871, 874, 875, 878, 882, 885, 887, 889, 890, 891, 893, 895, 897, 898], "devic": [26, 29, 31, 38, 47, 52, 67, 71, 76, 98, 106, 107, 108, 136, 146, 149, 151, 176, 182, 184, 191, 192, 195, 196, 197, 202, 207, 209, 210, 211, 212, 218, 220, 221, 233, 235, 239, 240, 243, 278, 282, 289, 291, 292, 293, 294, 295, 304, 316, 317, 319, 323, 325, 333, 334, 336, 373, 380, 383, 396, 430, 432, 443, 446, 504, 515, 542, 550, 551, 558, 559, 561, 563, 566, 567, 568, 569, 570, 572, 574, 578, 579, 580, 582, 583, 639, 642, 658, 670, 671, 684, 694, 727, 833, 835, 851, 870, 926, 951, 955], "measur": [26, 30, 31, 38, 47, 52, 67, 71, 76, 98, 100, 103, 106, 107, 108, 109, 117, 120, 130, 136, 146, 151, 167, 170, 171, 172, 182, 184, 185, 188, 191, 192, 193, 194, 195, 196, 198, 202, 208, 210, 215, 216, 217, 218, 219, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 260, 261, 262, 266, 267, 269, 270, 273, 277, 280, 282, 283, 284, 286, 287, 291, 295, 297, 299, 300, 301, 303, 304, 307, 308, 316, 317, 319, 320, 324, 326, 328, 330, 331, 332, 333, 334, 335, 336, 340, 342, 344, 351, 352, 364, 365, 366, 373, 374, 378, 379, 386, 387, 388, 392, 394, 395, 408, 411, 413, 415, 418, 423, 427, 428, 429, 434, 439, 440, 441, 443, 483, 485, 487, 490, 491, 492, 502, 514, 515, 516, 526, 527, 534, 545, 547, 548, 549, 550, 551, 552, 556, 564, 566, 580, 586, 590, 593, 596, 597, 598, 601, 602, 603, 610, 611, 612, 613, 616, 631, 632, 635, 646, 649, 666, 670, 671, 674, 675, 676, 697, 712, 717, 718, 727, 739, 740, 747, 748, 751, 755, 764, 765, 766, 767, 771, 774, 775, 783, 784, 785, 786, 787, 788, 789, 815, 822, 833, 848, 851, 852, 855, 860, 861, 875, 877, 886, 887, 891, 926, 949, 955], "compos": [26, 38, 47, 52, 67, 71, 76, 107, 108, 136, 146, 151, 163, 184, 202, 210, 215, 218, 223, 316], "find": [26, 31, 33, 37, 38, 45, 47, 53, 54, 55, 56, 64, 65, 70, 73, 74, 75, 76, 78, 83, 84, 87, 95, 96, 104, 107, 108, 109, 111, 131, 134, 135, 137, 146, 151, 152, 155, 162, 166, 167, 171, 176, 177, 181, 182, 183, 187, 192, 196, 198, 201, 202, 206, 207, 210, 212, 218, 223, 226, 228, 229, 232, 237, 245, 252, 255, 256, 257, 265, 270, 273, 277, 280, 284, 295, 299, 304, 309, 314, 317, 319, 320, 321, 329, 333, 334, 336, 337, 338, 339, 342, 345, 346, 347, 386, 424, 425, 426, 434, 517, 522, 524, 525, 550, 551, 571, 602, 632, 635, 638, 641, 647, 648, 650, 651, 652, 653, 659, 660, 661, 663, 664, 665, 679, 695, 699, 720, 742, 746, 749, 760, 833, 872, 874, 935, 940, 944, 945, 947, 955], "meg4": [26, 38, 47, 107, 108, 146, 151, 210, 218], "system": [26, 29, 31, 34, 36, 38, 45, 47, 53, 89, 97, 101, 106, 107, 108, 136, 143, 146, 150, 152, 156, 162, 163, 176, 177, 181, 182, 184, 185, 186, 192, 194, 195, 196, 198, 204, 209, 210, 211, 212, 216, 218, 219, 222, 226, 227, 232, 233, 234, 235, 237, 239, 240, 243, 244, 245, 255, 268, 275, 276, 277, 278, 282, 283, 286, 287, 288, 289, 291, 292, 295, 302, 303, 304, 306, 308, 309, 311, 312, 316, 317, 319, 330, 331, 332, 333, 334, 336, 341, 342, 344, 346, 347, 351, 352, 367, 380, 383, 388, 391, 396, 398, 399, 401, 402, 403, 405, 407, 422, 433, 434, 436, 443, 450, 489, 503, 518, 520, 532, 543, 544, 545, 550, 551, 553, 558, 559, 560, 562, 563, 564, 576, 587, 593, 598, 632, 635, 637, 668, 670, 687, 700, 710, 717, 735, 736, 737, 746, 747, 749, 769, 770, 771, 772, 773, 774, 782, 783, 785, 786, 787, 788, 789, 797, 803, 819, 833, 835, 851, 852, 865, 868, 870, 873, 876, 882, 888, 896, 902, 903, 910, 911, 914, 915, 916, 928, 940, 941, 942, 944, 945, 946, 951, 955], "clock": [26, 38, 47, 107, 108, 146, 151, 210, 218, 293, 317, 550, 551, 564, 635, 684, 882, 888], "check": [26, 31, 38, 47, 52, 67, 69, 71, 76, 88, 97, 107, 108, 136, 146, 147, 148, 151, 153, 161, 163, 166, 168, 169, 170, 183, 184, 185, 187, 192, 194, 196, 197, 198, 201, 202, 207, 208, 210, 212, 218, 227, 229, 232, 233, 243, 244, 246, 255, 256, 269, 278, 280, 283, 284, 286, 287, 288, 289, 291, 292, 294, 295, 298, 301, 303, 304, 305, 306, 308, 309, 312, 316, 317, 326, 328, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 386, 388, 456, 462, 502, 516, 519, 549, 550, 551, 559, 562, 610, 624, 635, 643, 645, 770, 771, 773, 774, 782, 783, 785, 786, 787, 788, 789, 819, 833, 851, 869, 871, 872, 873, 874, 905, 935, 940, 941], "valid": [26, 34, 35, 36, 37, 38, 41, 42, 47, 101, 107, 108, 138, 146, 148, 151, 163, 188, 197, 203, 210, 217, 218, 223, 229, 238, 255, 270, 282, 284, 286, 292, 303, 306, 309, 316, 320, 326, 328, 331, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 393, 406, 423, 428, 475, 483, 489, 490, 499, 500, 504, 515, 517, 524, 531, 535, 550, 551, 611, 612, 634, 635, 637, 650, 652, 653, 713, 727, 765, 770, 771, 773, 774, 783, 785, 786, 787, 788, 789, 810, 820, 833, 837, 851, 852, 859, 866, 867, 868, 869, 871, 873, 874, 878, 887, 890, 893, 895, 896, 897, 898, 933, 935, 947, 948], "240": [26, 61, 68, 72, 102, 107, 136, 146, 180, 195, 197, 207, 212, 226, 230, 236, 269, 955], "x": [26, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 48, 50, 52, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 94, 95, 96, 98, 99, 100, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 157, 158, 159, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 182, 183, 184, 186, 188, 192, 193, 194, 195, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 219, 222, 223, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 243, 246, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 270, 273, 274, 277, 283, 284, 285, 286, 294, 295, 304, 306, 308, 309, 317, 319, 320, 323, 328, 331, 332, 333, 334, 336, 338, 339, 340, 342, 344, 345, 346, 347, 355, 370, 380, 381, 403, 413, 414, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 521, 522, 523, 550, 551, 562, 563, 601, 602, 610, 634, 635, 636, 644, 650, 655, 657, 658, 679, 702, 735, 756, 759, 764, 768, 769, 770, 771, 772, 773, 774, 776, 783, 785, 786, 788, 789, 790, 791, 792, 797, 799, 800, 801, 803, 804, 808, 810, 811, 820, 823, 824, 826, 833, 834, 838, 852, 854, 856, 859, 867, 869, 871, 873, 874, 875, 876, 877, 878, 883, 885, 887, 889, 890, 891, 893, 895, 897, 898, 899, 901, 903, 927, 947], "1800": [26, 146, 219], "432000": [26, 146], "302": [26, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 102, 109, 120, 121, 131, 134, 135, 137, 146, 148, 178, 188, 192, 195, 202, 203, 204, 205, 206, 207, 212, 251, 263, 265], "ch": [26, 27, 34, 38, 47, 95, 107, 108, 139, 142, 146, 147, 151, 162, 163, 167, 175, 177, 192, 195, 196, 210, 218, 232, 243, 250, 252, 277, 280, 289, 300, 304, 317, 319, 323, 336, 387, 388, 450, 475, 476, 550, 551, 586, 905], "compens": [26, 27, 38, 47, 53, 56, 57, 61, 64, 65, 66, 67, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 104, 105, 107, 108, 111, 112, 113, 128, 143, 146, 147, 151, 166, 169, 175, 198, 202, 204, 205, 207, 210, 211, 218, 219, 229, 236, 255, 256, 273, 274, 277, 281, 282, 283, 286, 287, 292, 293, 295, 299, 300, 305, 307, 323, 326, 331, 332, 333, 334, 336, 420, 434, 504, 506, 518, 519, 521, 522, 524, 549, 550, 551, 564, 572, 597, 632, 635, 646, 659, 666, 670, 700, 748, 783, 785, 786, 787, 788, 789, 876, 877, 955], "grade": [26, 38, 47, 50, 67, 97, 107, 108, 128, 136, 146, 151, 184, 187, 210, 215, 218, 263, 265, 287, 292, 326, 331, 332, 333, 334, 336, 337, 538, 539, 549, 550, 551, 635, 783, 785, 786, 787, 788, 789], "144000": [26, 107], "sec": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 54, 55, 58, 59, 60, 68, 71, 72, 75, 85, 88, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 114, 119, 120, 123, 124, 126, 127, 130, 131, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 148, 151, 158, 159, 161, 162, 163, 167, 170, 172, 175, 177, 178, 182, 185, 188, 192, 193, 194, 195, 198, 203, 205, 206, 207, 208, 209, 210, 211, 212, 217, 223, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 244, 245, 246, 250, 251, 252, 257, 258, 259, 260, 263, 265, 269, 273, 286, 336, 782], "type": [26, 27, 29, 31, 41, 42, 48, 53, 55, 56, 57, 60, 61, 64, 65, 66, 67, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 90, 94, 98, 102, 104, 105, 107, 108, 109, 111, 112, 117, 120, 121, 122, 130, 136, 140, 141, 142, 143, 145, 146, 147, 151, 152, 155, 157, 161, 162, 163, 167, 168, 169, 170, 171, 172, 175, 176, 182, 183, 184, 185, 188, 192, 193, 194, 196, 197, 198, 202, 204, 205, 206, 207, 208, 209, 211, 215, 217, 219, 223, 226, 227, 228, 231, 232, 233, 234, 235, 236, 238, 244, 246, 250, 251, 252, 255, 259, 260, 268, 269, 273, 274, 278, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 316, 318, 319, 321, 324, 326, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 364, 365, 376, 378, 379, 381, 382, 385, 386, 387, 388, 389, 395, 403, 409, 412, 423, 424, 425, 426, 427, 428, 438, 439, 440, 441, 443, 450, 456, 475, 476, 483, 485, 490, 492, 499, 504, 507, 508, 515, 516, 518, 521, 522, 523, 524, 526, 527, 528, 533, 540, 545, 547, 548, 549, 550, 551, 553, 559, 566, 571, 578, 583, 584, 593, 613, 625, 632, 633, 634, 635, 636, 637, 640, 644, 646, 649, 650, 651, 652, 653, 658, 659, 661, 662, 666, 670, 676, 678, 685, 695, 697, 699, 700, 723, 724, 727, 734, 735, 736, 748, 751, 754, 763, 769, 770, 771, 773, 774, 778, 783, 784, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 816, 819, 833, 835, 850, 851, 854, 858, 859, 860, 861, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 875, 876, 878, 879, 880, 886, 887, 888, 889, 890, 891, 893, 895, 896, 897, 898, 899, 901, 906, 921, 935, 938, 940, 941, 946, 947, 948, 950, 955], "select": [26, 31, 33, 37, 41, 47, 50, 54, 55, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 76, 77, 80, 81, 84, 85, 86, 94, 98, 99, 101, 103, 108, 109, 114, 117, 120, 121, 122, 126, 130, 136, 139, 140, 146, 147, 148, 155, 163, 167, 168, 170, 176, 177, 184, 185, 187, 188, 192, 193, 195, 196, 198, 201, 203, 204, 205, 206, 207, 208, 216, 218, 223, 226, 227, 228, 229, 231, 234, 235, 237, 244, 245, 246, 251, 252, 256, 260, 264, 265, 268, 269, 270, 274, 277, 278, 280, 282, 283, 284, 287, 288, 289, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 303, 304, 306, 307, 309, 316, 319, 320, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 338, 341, 342, 346, 387, 392, 423, 424, 425, 426, 434, 485, 491, 514, 521, 542, 547, 550, 551, 557, 587, 627, 628, 630, 631, 632, 633, 635, 636, 640, 649, 650, 652, 653, 663, 664, 679, 705, 717, 724, 727, 746, 749, 769, 783, 784, 785, 786, 787, 788, 789, 796, 802, 852, 859, 865, 869, 871, 873, 874, 875, 878, 880, 882, 888, 891, 893, 897, 900, 904, 909, 910, 912, 914, 918, 935, 938, 944], "re": [26, 30, 55, 71, 94, 98, 120, 121, 128, 130, 140, 141, 147, 166, 167, 170, 177, 182, 184, 185, 186, 187, 188, 192, 193, 195, 196, 197, 198, 208, 216, 227, 228, 229, 231, 232, 233, 234, 235, 243, 245, 251, 257, 259, 265, 270, 273, 277, 289, 291, 304, 309, 312, 318, 320, 323, 325, 328, 331, 332, 333, 334, 336, 340, 348, 381, 385, 483, 490, 508, 550, 551, 576, 627, 628, 631, 633, 634, 635, 644, 696, 724, 727, 732, 783, 785, 786, 787, 788, 789, 796, 802, 819, 852, 867, 874, 878, 887, 890, 892, 895, 897, 935, 936, 945, 949], "item": [26, 29, 34, 37, 38, 39, 40, 41, 42, 44, 45, 47, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 151, 152, 155, 157, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 177, 178, 182, 183, 184, 185, 186, 188, 192, 193, 194, 195, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 246, 250, 251, 252, 256, 257, 258, 259, 260, 263, 265, 269, 273, 274, 278, 291, 324, 328, 329, 331, 332, 336, 344, 350, 355, 370, 550, 551, 601, 655, 785, 786, 787, 788, 789, 820, 833, 947], "deactiv": [26, 29, 55, 68, 77, 86, 95, 98, 119, 120, 121, 138, 168, 172, 185, 188, 208, 218, 233, 234, 235, 239, 251, 856, 949], "wa": [26, 29, 31, 33, 39, 44, 47, 59, 87, 92, 98, 121, 142, 166, 170, 175, 177, 184, 185, 186, 192, 193, 194, 196, 197, 207, 208, 209, 212, 216, 218, 219, 222, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 245, 246, 250, 258, 259, 260, 270, 278, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 317, 319, 320, 324, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 351, 352, 364, 365, 400, 416, 460, 482, 483, 490, 505, 507, 547, 550, 551, 567, 568, 571, 580, 587, 597, 608, 609, 611, 612, 617, 618, 619, 634, 635, 636, 647, 648, 653, 655, 657, 659, 660, 661, 670, 677, 694, 695, 699, 720, 732, 735, 736, 768, 778, 783, 784, 785, 786, 787, 788, 789, 801, 805, 811, 833, 844, 851, 852, 865, 867, 869, 874, 878, 887, 890, 895, 897, 900, 904, 912, 941, 947, 948], "appli": [26, 29, 31, 33, 34, 35, 36, 37, 38, 41, 42, 44, 47, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 94, 95, 96, 97, 98, 99, 100, 101, 105, 106, 108, 109, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 155, 158, 160, 161, 162, 166, 167, 168, 169, 171, 172, 175, 176, 177, 178, 182, 184, 185, 186, 187, 188, 192, 193, 195, 196, 198, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 216, 218, 223, 226, 227, 228, 230, 232, 234, 235, 237, 238, 239, 240, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 273, 274, 277, 278, 281, 282, 283, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 298, 301, 302, 304, 305, 306, 308, 309, 316, 318, 319, 320, 321, 324, 326, 328, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 380, 406, 422, 427, 436, 439, 441, 483, 485, 486, 490, 491, 492, 494, 496, 504, 513, 514, 515, 516, 517, 518, 519, 521, 522, 524, 527, 541, 547, 548, 550, 551, 591, 594, 602, 603, 604, 605, 606, 611, 612, 614, 617, 618, 619, 634, 635, 636, 637, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 659, 660, 661, 662, 667, 670, 677, 685, 693, 697, 700, 701, 702, 722, 727, 739, 740, 741, 742, 743, 745, 750, 764, 765, 770, 771, 772, 783, 784, 785, 787, 788, 797, 814, 817, 821, 822, 823, 833, 835, 844, 859, 860, 865, 866, 867, 869, 871, 873, 874, 878, 879, 880, 882, 888, 889, 893, 895, 896, 898, 905, 927, 930, 935], "yet": [26, 98, 121, 185, 208, 216, 219, 233, 235, 270, 309, 331, 447, 448, 449, 452, 453, 454, 456, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 491, 496, 624, 650, 833], "5": [26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 80, 81, 82, 83, 84, 85, 87, 88, 91, 92, 95, 96, 97, 98, 99, 100, 101, 103, 106, 107, 108, 109, 110, 112, 114, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 152, 155, 156, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 182, 183, 184, 185, 186, 188, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 218, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 267, 268, 269, 270, 273, 274, 277, 280, 281, 282, 283, 288, 289, 292, 293, 299, 301, 302, 303, 307, 309, 310, 312, 313, 316, 317, 320, 323, 325, 326, 328, 331, 332, 333, 334, 337, 338, 339, 340, 342, 345, 346, 347, 349, 364, 365, 367, 369, 371, 375, 382, 394, 403, 423, 429, 438, 450, 456, 482, 483, 489, 500, 503, 504, 506, 524, 525, 526, 539, 547, 550, 551, 576, 586, 590, 591, 602, 608, 613, 617, 618, 619, 626, 627, 628, 634, 635, 637, 638, 643, 644, 645, 646, 647, 650, 651, 652, 653, 654, 656, 659, 660, 663, 665, 668, 670, 674, 678, 679, 696, 702, 704, 723, 732, 736, 769, 783, 785, 786, 787, 788, 789, 797, 801, 802, 803, 811, 812, 813, 815, 816, 823, 833, 835, 850, 854, 866, 867, 870, 871, 872, 878, 880, 883, 888, 893, 898, 935, 940, 941, 944, 947, 955], "becaus": [26, 29, 30, 31, 37, 42, 44, 47, 52, 60, 67, 69, 70, 71, 76, 87, 97, 101, 107, 108, 109, 128, 134, 141, 142, 146, 166, 168, 169, 170, 172, 175, 176, 177, 184, 186, 187, 188, 192, 193, 194, 196, 197, 202, 206, 207, 208, 209, 210, 212, 216, 217, 218, 219, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 245, 250, 255, 256, 257, 260, 263, 270, 278, 285, 308, 309, 310, 316, 318, 319, 320, 331, 332, 333, 334, 416, 427, 504, 526, 645, 656, 659, 669, 770, 771, 773, 774, 787, 843, 896, 935, 938, 945, 949, 952], "all": [26, 29, 30, 31, 36, 39, 40, 44, 45, 47, 53, 54, 57, 59, 61, 66, 71, 85, 88, 90, 94, 97, 100, 107, 108, 109, 117, 122, 124, 126, 130, 134, 138, 139, 140, 141, 143, 144, 146, 147, 148, 153, 161, 166, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 195, 196, 197, 198, 202, 205, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 260, 264, 268, 269, 270, 273, 274, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 299, 301, 302, 303, 304, 305, 307, 310, 312, 314, 316, 317, 318, 319, 320, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 358, 359, 362, 364, 365, 367, 369, 370, 375, 376, 377, 378, 380, 381, 382, 385, 390, 391, 395, 396, 397, 406, 409, 417, 418, 422, 423, 427, 428, 429, 430, 434, 435, 438, 439, 440, 441, 443, 457, 483, 485, 486, 490, 492, 499, 500, 504, 507, 508, 510, 512, 513, 514, 515, 516, 517, 521, 522, 523, 524, 525, 526, 527, 531, 533, 539, 540, 541, 542, 545, 547, 548, 550, 551, 552, 553, 557, 559, 563, 566, 574, 576, 579, 581, 584, 589, 601, 602, 604, 606, 609, 611, 612, 613, 614, 618, 619, 621, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 645, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 662, 665, 666, 670, 676, 678, 685, 690, 693, 694, 696, 697, 700, 701, 702, 705, 715, 720, 721, 727, 731, 733, 742, 748, 751, 760, 763, 764, 765, 766, 768, 769, 770, 771, 772, 773, 774, 775, 778, 783, 784, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 801, 802, 803, 807, 811, 813, 815, 816, 820, 823, 831, 833, 835, 841, 842, 851, 852, 853, 859, 863, 865, 866, 867, 869, 870, 871, 872, 874, 875, 876, 878, 879, 882, 884, 885, 886, 887, 888, 889, 890, 891, 893, 895, 896, 897, 898, 899, 911, 914, 915, 917, 918, 938, 944, 948, 950, 955], "were": [26, 30, 31, 36, 44, 47, 64, 71, 107, 108, 134, 146, 163, 166, 167, 168, 169, 170, 175, 176, 177, 187, 193, 194, 197, 198, 207, 208, 209, 210, 215, 217, 218, 219, 227, 228, 229, 232, 233, 234, 235, 237, 238, 240, 243, 244, 245, 246, 250, 255, 257, 259, 260, 273, 278, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 302, 303, 304, 305, 306, 307, 308, 309, 310, 317, 319, 331, 332, 333, 334, 336, 339, 341, 342, 345, 347, 348, 364, 365, 388, 417, 418, 429, 432, 475, 476, 507, 509, 550, 551, 575, 635, 645, 646, 659, 670, 778, 783, 784, 785, 786, 787, 788, 789, 879, 881, 888, 935, 948], "effect": [26, 33, 43, 45, 46, 47, 52, 53, 65, 83, 85, 97, 98, 101, 109, 110, 126, 130, 136, 139, 140, 147, 148, 159, 167, 171, 175, 177, 186, 188, 192, 193, 194, 198, 209, 212, 218, 226, 228, 229, 230, 234, 235, 236, 237, 238, 239, 246, 250, 251, 252, 256, 257, 259, 260, 265, 268, 269, 277, 278, 282, 283, 289, 292, 295, 299, 301, 319, 331, 332, 333, 334, 336, 337, 338, 341, 342, 346, 364, 365, 388, 423, 427, 428, 439, 440, 441, 475, 476, 483, 484, 490, 499, 504, 506, 507, 522, 526, 527, 545, 547, 548, 550, 551, 567, 568, 602, 605, 613, 635, 638, 643, 697, 764, 766, 769, 770, 771, 773, 774, 785, 786, 788, 789, 792, 803, 865, 869, 875, 878, 880, 882, 888, 889, 891, 893, 935, 947, 948, 955], "size": [26, 31, 34, 35, 36, 47, 48, 58, 61, 67, 69, 70, 72, 79, 84, 97, 98, 101, 109, 127, 135, 136, 141, 147, 149, 154, 159, 160, 161, 162, 168, 170, 172, 176, 177, 181, 182, 184, 186, 192, 197, 198, 201, 203, 204, 205, 206, 207, 209, 212, 216, 217, 226, 227, 229, 230, 233, 234, 235, 236, 238, 239, 240, 243, 246, 250, 251, 252, 257, 260, 263, 268, 269, 270, 273, 277, 283, 286, 292, 295, 302, 303, 304, 306, 320, 328, 329, 331, 332, 333, 334, 338, 339, 340, 341, 342, 345, 346, 347, 380, 388, 396, 398, 429, 483, 485, 490, 494, 495, 518, 519, 521, 522, 523, 547, 549, 550, 551, 594, 608, 632, 634, 635, 650, 659, 665, 668, 730, 749, 765, 769, 770, 771, 773, 774, 783, 785, 786, 787, 788, 789, 809, 823, 833, 843, 848, 863, 865, 867, 873, 874, 878, 880, 881, 882, 885, 887, 888, 890, 891, 893, 894, 895, 896, 897, 898, 902, 948, 952], "707": [26, 39, 218, 236, 258, 260], "need": [26, 29, 30, 31, 37, 54, 55, 56, 60, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 80, 81, 84, 85, 87, 96, 97, 101, 102, 112, 117, 121, 122, 130, 131, 134, 135, 136, 137, 139, 141, 144, 146, 149, 161, 162, 166, 167, 168, 169, 170, 171, 175, 176, 177, 182, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 198, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 215, 217, 218, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 270, 273, 274, 277, 287, 291, 293, 294, 299, 302, 303, 309, 310, 312, 316, 317, 320, 321, 331, 332, 333, 334, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 364, 386, 397, 442, 445, 456, 484, 485, 493, 499, 507, 516, 521, 541, 549, 550, 551, 559, 566, 575, 593, 598, 622, 635, 677, 732, 770, 771, 773, 774, 783, 785, 786, 787, 788, 789, 833, 840, 852, 873, 878, 888, 907, 940, 942, 944, 945, 947, 948, 949], "than": [26, 29, 31, 39, 44, 50, 52, 59, 60, 67, 68, 70, 71, 72, 76, 80, 84, 85, 87, 96, 97, 105, 109, 112, 113, 121, 141, 146, 149, 152, 161, 162, 166, 167, 168, 169, 170, 172, 175, 176, 177, 182, 184, 187, 192, 193, 194, 195, 196, 197, 198, 202, 206, 207, 209, 210, 211, 212, 215, 218, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 245, 255, 258, 268, 270, 273, 274, 278, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 309, 310, 312, 320, 326, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 356, 373, 374, 422, 424, 425, 426, 427, 434, 483, 485, 488, 490, 494, 500, 502, 512, 517, 519, 521, 522, 524, 527, 539, 547, 548, 550, 551, 568, 570, 576, 589, 600, 608, 609, 619, 624, 634, 635, 637, 643, 645, 650, 652, 665, 668, 669, 671, 675, 678, 696, 701, 722, 732, 764, 770, 771, 772, 773, 774, 775, 778, 783, 785, 786, 787, 788, 789, 792, 795, 800, 803, 808, 814, 817, 833, 835, 852, 853, 865, 867, 868, 870, 871, 874, 878, 887, 888, 890, 893, 895, 897, 898, 940, 946, 947, 948], "make": [26, 29, 30, 35, 36, 39, 44, 45, 47, 54, 57, 58, 60, 64, 68, 71, 74, 76, 80, 81, 85, 88, 94, 97, 102, 112, 117, 120, 121, 130, 136, 138, 139, 140, 141, 149, 152, 159, 161, 162, 166, 167, 168, 169, 170, 176, 177, 182, 184, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 215, 216, 218, 219, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 240, 243, 245, 250, 255, 257, 258, 259, 263, 264, 265, 270, 274, 275, 276, 282, 284, 285, 286, 288, 289, 291, 292, 293, 294, 295, 298, 303, 304, 307, 312, 316, 317, 318, 319, 320, 323, 330, 331, 332, 333, 334, 336, 338, 339, 342, 344, 345, 346, 347, 348, 364, 365, 393, 405, 423, 427, 428, 429, 434, 439, 440, 441, 442, 483, 486, 487, 490, 492, 493, 502, 506, 507, 518, 519, 521, 522, 526, 527, 533, 540, 542, 545, 547, 548, 550, 551, 563, 595, 613, 619, 628, 634, 635, 645, 665, 666, 669, 678, 688, 690, 700, 710, 719, 721, 735, 747, 778, 780, 784, 801, 811, 812, 813, 815, 820, 828, 829, 833, 853, 854, 857, 861, 872, 875, 881, 888, 893, 898, 899, 928, 935, 936, 940, 941, 948, 949, 955], "topographi": [26, 39, 47, 53, 97, 98, 101, 112, 141, 147, 150, 156, 158, 168, 170, 177, 192, 196, 198, 202, 218, 232, 234, 235, 246, 258, 260, 268, 277, 285, 287, 293, 298, 299, 301, 302, 319, 331, 332, 333, 334, 336, 340, 341, 381, 483, 490, 550, 551, 632, 635, 651, 748, 783, 785, 786, 788, 789, 848, 867, 872, 873, 874, 878, 880, 884, 889, 891, 895, 896, 955], "disabl": [26, 112, 141, 168, 175, 176, 177, 198, 226, 227, 230, 246, 258, 278, 287, 292, 293, 294, 303, 304, 305, 306, 323, 328, 331, 332, 333, 334, 340, 341, 376, 434, 483, 489, 490, 495, 550, 551, 634, 635, 659, 670, 725, 729, 730, 783, 785, 786, 788, 789, 828, 833, 852, 867, 869, 873, 874, 878, 887, 888, 890, 895, 897, 901, 913, 940], "interact": [26, 53, 59, 71, 73, 112, 141, 142, 147, 166, 175, 176, 177, 184, 191, 192, 194, 197, 198, 206, 207, 218, 227, 228, 232, 233, 234, 238, 243, 252, 255, 258, 259, 265, 269, 270, 273, 275, 277, 278, 280, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 297, 299, 300, 303, 304, 307, 308, 309, 310, 312, 320, 321, 323, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 357, 364, 483, 490, 542, 550, 551, 602, 634, 635, 678, 764, 766, 783, 785, 786, 788, 789, 833, 835, 836, 851, 852, 856, 866, 867, 869, 870, 871, 873, 874, 878, 880, 882, 887, 888, 889, 890, 891, 893, 895, 896, 897, 898, 940], "contigu": [26, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 60, 68, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 212, 223, 230, 231, 232, 234, 237, 238, 239, 240, 259, 260, 337], "segment": [26, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 49, 50, 53, 59, 60, 64, 68, 90, 97, 100, 103, 107, 108, 109, 110, 114, 126, 136, 140, 141, 142, 148, 159, 161, 162, 163, 167, 170, 171, 172, 177, 188, 194, 198, 210, 212, 218, 223, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 245, 260, 269, 277, 282, 284, 286, 287, 288, 289, 291, 292, 295, 302, 303, 306, 316, 317, 319, 320, 323, 325, 329, 331, 332, 333, 334, 341, 344, 371, 423, 428, 512, 535, 536, 537, 549, 550, 551, 580, 594, 603, 605, 635, 637, 638, 639, 640, 641, 642, 645, 652, 653, 656, 659, 660, 668, 670, 783, 785, 788, 803, 804, 831, 833, 869, 871, 878, 880], "up": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 49, 50, 52, 53, 54, 59, 60, 68, 70, 71, 76, 96, 99, 100, 103, 106, 108, 109, 110, 114, 117, 120, 121, 122, 126, 130, 131, 136, 138, 139, 140, 141, 142, 144, 148, 151, 158, 159, 162, 166, 167, 170, 171, 172, 176, 177, 181, 182, 184, 185, 186, 188, 191, 192, 198, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 243, 245, 246, 251, 252, 256, 257, 260, 263, 265, 270, 274, 280, 281, 282, 285, 287, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 312, 319, 320, 321, 328, 329, 331, 332, 333, 334, 338, 339, 340, 341, 342, 343, 345, 346, 347, 483, 488, 489, 490, 495, 523, 550, 551, 608, 609, 634, 635, 637, 659, 725, 731, 732, 769, 778, 782, 783, 785, 786, 788, 789, 803, 831, 833, 854, 863, 865, 866, 867, 871, 874, 878, 881, 887, 888, 890, 893, 895, 897, 898, 899, 905, 935, 940, 945], "band": [26, 29, 31, 34, 35, 38, 39, 40, 41, 42, 44, 47, 53, 58, 59, 60, 68, 99, 103, 108, 114, 121, 132, 133, 134, 136, 137, 139, 141, 142, 148, 154, 159, 162, 163, 167, 168, 170, 171, 172, 193, 198, 223, 226, 228, 229, 230, 231, 232, 234, 238, 239, 240, 246, 259, 260, 268, 269, 270, 277, 283, 285, 295, 297, 305, 317, 319, 331, 332, 333, 334, 354, 485, 491, 494, 518, 519, 521, 522, 524, 550, 551, 618, 640, 674, 762, 785, 786, 788, 789, 801, 811, 812, 815, 859, 867, 883, 935, 955], "stop": [26, 31, 55, 95, 108, 120, 123, 162, 193, 198, 212, 228, 229, 230, 237, 239, 243, 244, 245, 273, 283, 285, 287, 295, 302, 304, 309, 310, 323, 324, 331, 332, 333, 334, 351, 352, 363, 426, 485, 494, 518, 519, 521, 522, 549, 550, 551, 570, 595, 605, 608, 635, 659, 668, 684, 879, 882, 918], "paramet": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 50, 57, 60, 66, 67, 68, 69, 70, 74, 80, 81, 85, 88, 94, 96, 98, 99, 100, 102, 103, 108, 109, 110, 114, 123, 124, 126, 127, 128, 134, 135, 136, 137, 139, 140, 141, 142, 144, 146, 147, 148, 149, 151, 155, 158, 159, 162, 163, 166, 167, 168, 170, 171, 172, 175, 176, 177, 182, 184, 185, 187, 188, 192, 194, 195, 196, 197, 198, 201, 204, 206, 212, 215, 218, 219, 222, 223, 226, 227, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 258, 268, 269, 270, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 316, 318, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 838, 839, 840, 842, 843, 844, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 938], "design": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 87, 99, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 186, 187, 198, 206, 212, 215, 217, 218, 226, 228, 230, 231, 232, 234, 235, 237, 238, 239, 240, 252, 255, 260, 277, 280, 283, 310, 312, 317, 324, 331, 332, 333, 334, 411, 457, 460, 485, 494, 518, 519, 521, 522, 550, 551, 559, 561, 563, 566, 567, 568, 574, 578, 581, 634, 636, 670, 677, 684, 694, 764, 768, 797, 808, 888, 919, 920, 935], "pass": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 58, 60, 68, 69, 85, 99, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 149, 159, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 181, 182, 184, 192, 193, 194, 195, 196, 197, 198, 206, 209, 212, 216, 218, 219, 223, 226, 227, 228, 230, 231, 232, 233, 234, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 257, 259, 260, 263, 264, 265, 268, 269, 277, 278, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 297, 298, 300, 301, 302, 303, 304, 305, 306, 308, 309, 316, 318, 319, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 386, 390, 391, 397, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 496, 499, 500, 502, 504, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 533, 534, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 597, 598, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 626, 627, 628, 631, 634, 635, 636, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 677, 678, 679, 682, 683, 684, 685, 687, 689, 690, 691, 692, 693, 694, 696, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 727, 729, 731, 732, 734, 735, 736, 737, 746, 747, 748, 749, 751, 753, 754, 755, 756, 757, 758, 759, 763, 770, 771, 772, 773, 774, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 802, 803, 804, 807, 808, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 828, 832, 833, 834, 835, 842, 848, 851, 852, 855, 857, 859, 860, 861, 863, 865, 866, 867, 868, 869, 870, 872, 873, 874, 875, 878, 879, 880, 883, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 904, 914, 915, 916, 917, 918, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 940, 945], "zero": [26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 50, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 90, 97, 99, 100, 101, 103, 108, 109, 110, 114, 117, 120, 121, 122, 126, 136, 139, 140, 141, 142, 147, 148, 159, 162, 166, 167, 168, 170, 172, 175, 177, 178, 184, 186, 188, 192, 194, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 250, 251, 252, 255, 259, 260, 270, 280, 283, 284, 285, 286, 287, 289, 291, 293, 295, 302, 305, 309, 316, 319, 320, 324, 325, 326, 329, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 345, 346, 347, 348, 350, 364, 365, 423, 427, 429, 439, 485, 489, 494, 495, 496, 517, 518, 519, 521, 522, 523, 524, 545, 550, 551, 552, 564, 608, 619, 635, 636, 660, 684, 697, 734, 735, 736, 744, 748, 763, 770, 771, 773, 774, 778, 779, 783, 785, 786, 787, 788, 789, 801, 804, 811, 812, 813, 814, 815, 817, 833, 835, 850, 854, 864, 865, 870, 888, 893, 898, 899], "phase": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 53, 60, 68, 99, 100, 103, 108, 109, 110, 114, 126, 132, 133, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 193, 198, 212, 217, 218, 223, 226, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 252, 260, 270, 277, 280, 283, 284, 299, 301, 303, 307, 317, 319, 331, 332, 333, 334, 336, 337, 338, 339, 342, 345, 346, 347, 357, 410, 441, 485, 494, 496, 517, 518, 519, 521, 522, 524, 550, 551, 601, 606, 616, 619, 632, 635, 704, 786, 789, 812, 813, 823, 876, 948, 955], "causal": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 198, 212, 218, 223, 226, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 260, 331, 332, 333, 334, 489, 518, 519, 521, 522, 550, 551], "bandstop": [26, 31, 108, 162, 230, 239, 550, 551, 888], "domain": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 72, 99, 100, 103, 108, 109, 110, 114, 126, 130, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 191, 192, 198, 212, 218, 223, 226, 228, 229, 230, 231, 234, 237, 238, 239, 240, 246, 260, 270, 271, 272, 277, 303, 310, 323, 331, 332, 333, 334, 485, 494, 495, 519, 521, 522, 523, 524, 550, 551, 618, 619, 732, 785, 788, 821, 828, 955], "ham": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 212, 218, 223, 229, 230, 231, 232, 234, 237, 238, 239, 240, 260, 285, 293, 331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551, 804, 889], "0194": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 212, 218, 223, 229, 230, 231, 232, 237, 238, 239, 240, 260], "passband": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 198, 212, 218, 223, 226, 228, 230, 231, 232, 234, 237, 238, 239, 240, 260, 316], "rippl": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 212, 218, 223, 230, 231, 232, 237, 238, 239, 240, 260], "db": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 100, 103, 108, 109, 110, 114, 126, 135, 136, 140, 141, 142, 148, 159, 162, 163, 167, 168, 170, 172, 177, 195, 198, 212, 218, 223, 226, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 243, 246, 250, 252, 260, 268, 269, 270, 294, 295, 305, 319, 320, 331, 332, 333, 334, 336, 379, 380, 441, 443, 516, 519, 550, 551, 566, 578, 608, 632, 633, 635, 727, 778, 783, 785, 786, 787, 788, 789, 833, 851, 867, 876, 880, 883, 889, 891], "stopband": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 212, 218, 223, 230, 231, 232, 237, 238, 239, 240, 260], "attenu": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 188, 212, 218, 223, 230, 231, 232, 237, 238, 239, 240, 260, 283, 285, 320, 331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551], "lower": [26, 27, 29, 31, 34, 35, 36, 38, 39, 40, 41, 42, 44, 47, 48, 60, 63, 66, 68, 75, 80, 81, 88, 97, 99, 100, 103, 108, 109, 114, 126, 134, 139, 140, 141, 142, 147, 148, 159, 162, 167, 168, 170, 172, 177, 182, 186, 198, 206, 207, 210, 219, 223, 226, 228, 229, 230, 231, 232, 233, 234, 238, 239, 240, 246, 257, 258, 259, 260, 263, 265, 270, 273, 281, 286, 295, 319, 326, 328, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 483, 485, 488, 490, 509, 519, 521, 550, 551, 594, 608, 609, 634, 635, 640, 645, 650, 674, 693, 762, 769, 770, 772, 773, 783, 784, 785, 786, 788, 789, 803, 804, 844, 852, 854, 859, 866, 867, 873, 874, 878, 887, 888, 889, 890, 893, 895, 897, 898, 899, 940], "transit": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 198, 212, 218, 223, 226, 228, 230, 231, 232, 234, 237, 238, 239, 240, 260, 287, 291, 292, 320, 324, 331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551, 637, 674, 901], "bandwidth": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 100, 103, 108, 109, 110, 114, 126, 131, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 198, 212, 218, 223, 226, 228, 230, 231, 232, 234, 237, 238, 239, 240, 260, 270, 307, 331, 332, 333, 334, 488, 496, 522, 550, 551, 608, 609, 785, 788, 792, 795, 797, 803, 813, 816, 867], "50": [26, 27, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 52, 54, 60, 61, 67, 68, 71, 72, 73, 82, 92, 99, 103, 107, 108, 109, 110, 114, 117, 122, 126, 128, 130, 131, 133, 135, 136, 140, 141, 142, 147, 148, 149, 159, 161, 162, 163, 169, 170, 172, 175, 177, 184, 186, 192, 194, 195, 196, 197, 198, 204, 206, 210, 211, 212, 216, 218, 222, 223, 226, 228, 229, 230, 231, 232, 234, 236, 239, 240, 242, 243, 244, 245, 252, 255, 256, 257, 259, 260, 263, 264, 265, 270, 277, 285, 306, 316, 320, 323, 403, 518, 550, 551, 570, 617, 644, 656, 740, 745, 763, 771, 833, 883, 955], "hz": [26, 27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 58, 59, 60, 68, 95, 98, 99, 100, 103, 107, 108, 109, 110, 114, 117, 120, 121, 122, 126, 131, 134, 135, 136, 140, 141, 142, 148, 151, 159, 162, 163, 167, 168, 170, 172, 177, 192, 193, 194, 195, 198, 206, 209, 210, 212, 216, 217, 218, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 257, 258, 259, 260, 268, 269, 273, 277, 317, 323, 331, 332, 333, 334, 485, 488, 494, 518, 519, 521, 522, 524, 550, 551, 608, 609, 635, 640, 643, 647, 648, 659, 661, 664, 670, 674, 749, 769, 783, 785, 786, 787, 788, 789, 792, 795, 801, 803, 809, 811, 812, 813, 815, 816, 865, 867, 876, 883, 888, 889, 938], "upper": [26, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 48, 60, 65, 68, 88, 97, 99, 103, 108, 110, 114, 134, 140, 141, 142, 147, 148, 159, 162, 167, 168, 170, 172, 185, 192, 198, 212, 218, 223, 226, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 260, 269, 270, 273, 277, 286, 291, 328, 330, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 349, 483, 485, 488, 490, 509, 519, 521, 527, 550, 551, 608, 609, 634, 635, 640, 674, 762, 769, 770, 771, 772, 773, 774, 783, 784, 785, 786, 787, 788, 789, 801, 803, 804, 811, 844, 852, 854, 859, 867, 873, 874, 878, 887, 889, 890, 893, 895, 897, 898, 899], "7921": 26, "601": [26, 29, 31, 166, 175, 209, 214, 223, 226, 231, 243, 955], "parallel": [26, 27, 29, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 57, 58, 60, 68, 92, 100, 103, 108, 109, 110, 114, 126, 140, 142, 148, 159, 162, 167, 170, 172, 177, 192, 197, 198, 202, 209, 212, 218, 223, 230, 231, 232, 234, 237, 238, 239, 240, 257, 260, 269, 277, 278, 285, 304, 312, 320, 323, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 485, 486, 488, 489, 493, 494, 496, 499, 500, 521, 522, 523, 526, 528, 539, 541, 545, 547, 548, 550, 551, 593, 596, 597, 608, 609, 613, 618, 619, 640, 647, 648, 678, 722, 725, 730, 731, 732, 734, 735, 736, 748, 770, 771, 772, 773, 774, 785, 788, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 814, 815, 816, 817, 835, 867, 870, 889, 935, 949], "n_job": [26, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 58, 60, 67, 68, 100, 103, 108, 109, 110, 114, 123, 126, 127, 130, 134, 137, 140, 142, 148, 159, 162, 167, 170, 172, 177, 184, 185, 192, 198, 202, 209, 212, 218, 223, 230, 231, 232, 234, 237, 238, 239, 240, 255, 257, 259, 260, 263, 264, 265, 269, 285, 292, 294, 295, 304, 323, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 485, 486, 488, 489, 493, 494, 495, 496, 499, 500, 521, 522, 523, 526, 539, 541, 550, 551, 593, 596, 597, 608, 609, 618, 619, 640, 647, 648, 722, 731, 732, 734, 735, 736, 748, 770, 771, 772, 773, 774, 785, 788, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 814, 815, 816, 817, 835, 867, 870, 889, 935, 940], "done": [26, 27, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 97, 100, 103, 106, 108, 109, 110, 114, 117, 119, 120, 121, 122, 126, 128, 130, 131, 134, 135, 136, 137, 140, 142, 148, 152, 157, 159, 160, 161, 162, 166, 167, 169, 170, 172, 176, 177, 181, 182, 184, 185, 186, 187, 188, 192, 193, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 251, 252, 255, 256, 257, 259, 260, 263, 264, 265, 269, 270, 282, 283, 284, 285, 288, 291, 299, 307, 309, 310, 312, 316, 319, 320, 324, 330, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 364, 365, 388, 428, 496, 545, 547, 548, 550, 551, 602, 604, 605, 606, 635, 647, 648, 651, 653, 769, 783, 784, 787, 810, 812, 813, 815, 816, 831, 833, 837, 851, 859, 889, 935, 947], "17": [26, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 54, 58, 59, 60, 61, 67, 68, 69, 71, 73, 76, 82, 87, 88, 98, 100, 103, 107, 108, 109, 110, 114, 117, 126, 130, 135, 136, 140, 141, 142, 148, 151, 156, 159, 162, 163, 167, 170, 171, 172, 174, 177, 182, 183, 184, 186, 192, 195, 197, 202, 203, 206, 207, 208, 209, 210, 211, 212, 214, 215, 218, 222, 223, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 250, 255, 256, 257, 259, 260, 262, 263, 264, 265, 269, 277, 313, 317, 320, 331, 332, 333, 334, 338, 341, 342, 343, 344, 346, 347, 355, 364, 423, 425, 428, 429, 441, 483, 490, 492, 549, 550, 551, 602, 608, 609, 670, 736, 748, 771, 783, 801, 811, 812, 815, 852, 893, 899, 952, 954, 955], "task": [26, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 58, 59, 60, 68, 72, 97, 100, 103, 108, 109, 110, 114, 126, 139, 140, 142, 148, 159, 162, 163, 167, 169, 170, 172, 177, 181, 182, 191, 192, 195, 201, 202, 209, 212, 218, 223, 227, 230, 231, 232, 234, 237, 238, 239, 240, 257, 260, 269, 277, 285, 312, 317, 320, 321, 450, 486, 493, 801, 811, 812, 815, 938], "elaps": [26, 27, 29, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 58, 60, 68, 100, 103, 108, 109, 110, 114, 126, 140, 142, 148, 159, 162, 167, 170, 172, 177, 192, 202, 209, 212, 218, 223, 230, 231, 232, 234, 237, 238, 239, 240, 257, 260, 269], "71": [26, 27, 29, 37, 38, 39, 40, 41, 42, 44, 45, 47, 58, 60, 61, 68, 71, 100, 103, 107, 108, 110, 114, 126, 130, 135, 136, 139, 140, 141, 142, 148, 159, 162, 163, 172, 190, 192, 195, 202, 207, 208, 210, 212, 218, 223, 230, 232, 234, 236, 237, 239, 240, 255, 256, 257, 259, 260, 263, 265, 269, 955], "161": [26, 27, 37, 38, 39, 40, 41, 42, 44, 47, 58, 60, 68, 71, 100, 103, 108, 110, 114, 126, 140, 142, 148, 159, 172, 192, 195, 202, 218, 223, 232, 234, 236, 237, 255, 260, 269], "287": [26, 27, 37, 39, 40, 41, 42, 44, 47, 58, 60, 68, 79, 82, 100, 103, 108, 110, 114, 148, 159, 172, 192, 195, 202, 218, 234, 237, 255, 260, 955], "66": [26, 38, 39, 42, 45, 47, 61, 66, 67, 71, 107, 130, 135, 139, 141, 170, 172, 184, 195, 202, 207, 210, 218, 222, 223, 232, 236, 255, 256, 259, 260, 277, 299, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 613, 635, 875], "id": [26, 29, 31, 38, 47, 58, 59, 60, 68, 71, 72, 75, 96, 98, 99, 100, 106, 107, 108, 117, 120, 121, 122, 126, 134, 135, 137, 139, 140, 166, 167, 168, 172, 175, 178, 188, 192, 194, 195, 197, 198, 203, 206, 208, 209, 211, 218, 223, 227, 230, 231, 232, 234, 239, 240, 250, 251, 252, 257, 269, 283, 286, 288, 289, 292, 295, 303, 308, 309, 320, 323, 326, 331, 332, 333, 336, 338, 339, 342, 344, 345, 346, 347, 350, 364, 365, 381, 423, 438, 446, 499, 505, 507, 509, 511, 512, 524, 536, 550, 551, 581, 594, 595, 600, 630, 636, 647, 648, 662, 687, 694, 696, 697, 703, 732, 785, 786, 787, 833, 865, 868, 888, 893, 898, 925, 935], "Not": [26, 29, 34, 35, 37, 38, 42, 44, 47, 54, 58, 59, 60, 71, 72, 75, 88, 96, 98, 99, 100, 101, 103, 106, 107, 108, 109, 114, 117, 120, 121, 122, 123, 124, 127, 130, 131, 134, 135, 136, 137, 139, 140, 141, 144, 148, 149, 155, 158, 161, 162, 163, 166, 167, 168, 169, 171, 172, 175, 177, 178, 192, 193, 194, 195, 198, 203, 206, 208, 209, 210, 211, 212, 218, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 257, 258, 259, 260, 263, 265, 269, 273, 320, 333, 334, 339, 345, 346, 347, 491, 494, 518, 527, 636, 783, 833, 871, 899], "metadata": [26, 29, 30, 34, 35, 37, 38, 42, 44, 47, 54, 58, 59, 60, 71, 72, 75, 88, 96, 98, 99, 100, 101, 106, 109, 114, 117, 120, 121, 122, 123, 124, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 141, 144, 148, 149, 155, 158, 161, 162, 163, 166, 167, 168, 171, 172, 173, 174, 175, 177, 178, 187, 191, 192, 198, 203, 206, 208, 209, 210, 211, 212, 215, 216, 217, 218, 226, 227, 228, 230, 231, 232, 234, 238, 240, 243, 250, 251, 252, 256, 257, 258, 259, 260, 263, 265, 268, 269, 278, 286, 288, 292, 294, 303, 304, 317, 319, 325, 326, 331, 332, 333, 334, 335, 336, 422, 507, 512, 550, 551, 557, 693, 713, 783, 785, 786, 787, 788, 789, 859, 955], "33": [26, 29, 34, 38, 39, 45, 47, 54, 59, 60, 61, 65, 66, 67, 71, 73, 103, 107, 130, 134, 135, 136, 139, 141, 142, 163, 167, 170, 177, 195, 196, 208, 209, 214, 222, 223, 229, 230, 232, 236, 240, 242, 255, 256, 257, 259, 260, 264, 265, 281, 290, 320, 331, 332, 333, 334, 403, 524, 550, 551, 598, 889, 955], "interv": [26, 29, 36, 37, 54, 58, 59, 60, 64, 71, 72, 75, 88, 96, 97, 98, 99, 106, 109, 117, 120, 121, 122, 123, 124, 127, 130, 131, 134, 137, 139, 140, 144, 155, 158, 166, 168, 170, 171, 175, 176, 177, 178, 192, 198, 202, 203, 204, 206, 208, 209, 210, 211, 212, 218, 227, 228, 230, 231, 234, 237, 238, 251, 252, 257, 258, 259, 263, 265, 269, 273, 285, 292, 294, 317, 323, 325, 326, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 354, 415, 428, 507, 608, 618, 619, 635, 652, 653, 662, 700, 701, 733, 735, 760, 762, 783, 785, 786, 787, 788, 789, 798, 859, 880, 895, 938], "mode": [26, 29, 31, 37, 48, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 70, 71, 72, 73, 75, 77, 83, 84, 85, 86, 87, 88, 96, 98, 99, 100, 105, 106, 112, 113, 120, 121, 122, 123, 124, 127, 130, 131, 134, 137, 139, 140, 141, 144, 146, 147, 155, 157, 158, 162, 166, 167, 168, 170, 171, 175, 177, 178, 184, 187, 192, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 218, 219, 223, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 245, 246, 251, 257, 258, 259, 260, 263, 265, 269, 270, 273, 274, 277, 282, 284, 285, 286, 288, 289, 292, 294, 295, 301, 303, 304, 305, 307, 309, 312, 323, 328, 329, 331, 332, 333, 334, 338, 339, 340, 341, 342, 345, 346, 347, 354, 364, 365, 410, 423, 427, 428, 429, 433, 434, 439, 440, 441, 482, 483, 489, 490, 517, 521, 522, 523, 542, 545, 550, 551, 593, 611, 612, 634, 635, 662, 670, 723, 746, 749, 778, 783, 784, 785, 786, 787, 788, 789, 810, 833, 861, 863, 865, 866, 867, 871, 874, 877, 878, 882, 887, 888, 889, 890, 893, 894, 895, 897, 898, 899, 904], "mean": [26, 29, 30, 34, 35, 36, 37, 40, 42, 45, 47, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 77, 83, 84, 85, 86, 87, 88, 94, 95, 96, 97, 98, 99, 100, 105, 106, 110, 112, 113, 120, 121, 122, 123, 124, 127, 128, 130, 131, 134, 137, 139, 140, 141, 144, 146, 147, 155, 158, 163, 166, 167, 168, 169, 170, 171, 175, 176, 178, 182, 183, 184, 186, 192, 196, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 243, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 265, 268, 269, 270, 273, 274, 278, 283, 291, 292, 293, 304, 308, 309, 310, 320, 325, 326, 328, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 354, 357, 364, 365, 382, 386, 423, 428, 483, 489, 490, 492, 495, 504, 516, 517, 525, 542, 545, 547, 548, 550, 551, 552, 559, 566, 570, 574, 581, 587, 593, 602, 608, 611, 612, 613, 618, 619, 634, 635, 639, 642, 645, 646, 650, 652, 659, 661, 668, 670, 679, 687, 700, 701, 727, 735, 736, 737, 746, 747, 749, 762, 765, 770, 771, 772, 773, 774, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 801, 803, 804, 811, 812, 813, 815, 816, 833, 835, 859, 861, 865, 866, 867, 869, 870, 874, 878, 887, 888, 889, 890, 893, 895, 897, 935, 954], "activ": [26, 29, 30, 31, 34, 37, 38, 42, 44, 45, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 108, 109, 112, 113, 114, 116, 118, 119, 120, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 152, 156, 158, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 184, 185, 188, 192, 193, 194, 198, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 218, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 243, 244, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 269, 274, 277, 285, 292, 294, 295, 305, 309, 310, 316, 317, 319, 320, 324, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 364, 365, 392, 417, 509, 512, 517, 524, 526, 530, 545, 547, 548, 549, 550, 551, 556, 567, 572, 587, 590, 601, 602, 603, 604, 605, 606, 613, 616, 632, 640, 651, 674, 700, 702, 704, 705, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 748, 755, 758, 775, 778, 783, 785, 786, 787, 788, 789, 801, 811, 812, 815, 843, 854, 856, 863, 870, 894, 899, 935, 940, 941, 942, 944, 945, 948, 949, 955], "projector": [26, 27, 29, 30, 31, 34, 35, 42, 44, 47, 54, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 95, 96, 98, 100, 103, 109, 117, 119, 120, 121, 126, 128, 130, 136, 146, 148, 158, 166, 167, 172, 175, 176, 177, 178, 188, 191, 192, 193, 194, 195, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 226, 227, 230, 231, 232, 238, 239, 241, 242, 243, 251, 252, 256, 257, 258, 259, 260, 263, 265, 273, 274, 282, 284, 285, 286, 288, 291, 292, 294, 298, 299, 303, 304, 305, 306, 316, 318, 319, 320, 323, 331, 332, 333, 334, 336, 340, 341, 364, 365, 423, 424, 425, 426, 427, 428, 439, 440, 441, 483, 490, 513, 514, 515, 516, 526, 527, 545, 547, 548, 550, 551, 572, 613, 635, 647, 648, 649, 670, 700, 708, 727, 784, 790, 791, 792, 793, 794, 795, 796, 865, 875, 882, 886, 887, 888, 920, 935, 955], "n_channel": [26, 42, 44, 45, 54, 57, 61, 68, 77, 84, 85, 86, 90, 92, 94, 96, 97, 98, 101, 102, 103, 107, 109, 110, 117, 126, 130, 141, 146, 158, 163, 166, 167, 168, 169, 175, 176, 177, 185, 188, 192, 193, 194, 198, 202, 203, 206, 207, 208, 212, 217, 223, 226, 227, 230, 231, 232, 233, 234, 235, 238, 243, 246, 250, 252, 257, 258, 259, 260, 263, 265, 270, 273, 274, 288, 319, 323, 326, 328, 330, 331, 332, 333, 334, 335, 336, 364, 365, 381, 382, 386, 397, 439, 483, 484, 485, 488, 489, 490, 491, 492, 494, 496, 497, 499, 521, 522, 550, 551, 634, 635, 636, 640, 643, 751, 768, 769, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 812, 813, 814, 852, 855, 859, 865, 866, 867, 874, 888, 890, 895, 897, 905], "No": [26, 27, 30, 31, 34, 35, 38, 42, 44, 47, 60, 67, 72, 74, 76, 80, 81, 101, 106, 109, 114, 117, 128, 135, 136, 139, 140, 141, 143, 144, 148, 149, 155, 161, 162, 163, 166, 167, 168, 169, 172, 175, 177, 182, 192, 197, 198, 204, 210, 211, 212, 217, 218, 223, 226, 229, 231, 232, 234, 237, 238, 239, 240, 250, 252, 255, 256, 260, 269, 273, 274, 309, 310, 317, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 457, 484, 499, 517, 545, 547, 548, 550, 551, 602, 604, 605, 606, 747, 889, 941], "grad": [26, 37, 42, 48, 54, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 88, 103, 105, 112, 113, 120, 121, 123, 124, 126, 127, 130, 131, 134, 136, 137, 138, 140, 141, 143, 144, 146, 147, 148, 151, 152, 157, 158, 166, 168, 171, 176, 178, 182, 183, 184, 188, 192, 195, 196, 198, 202, 203, 204, 205, 206, 207, 209, 218, 223, 227, 228, 234, 236, 237, 243, 250, 251, 252, 257, 258, 259, 263, 265, 268, 269, 273, 287, 288, 316, 319, 320, 323, 326, 328, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 364, 365, 379, 386, 387, 406, 423, 427, 428, 439, 440, 441, 443, 483, 490, 492, 526, 527, 545, 547, 548, 550, 551, 590, 597, 613, 632, 633, 634, 635, 640, 645, 647, 648, 650, 652, 653, 659, 723, 769, 783, 785, 786, 787, 788, 789, 858, 859, 865, 866, 867, 869, 871, 873, 874, 875, 878, 888, 890, 891, 895, 896, 897], "skip": [26, 140, 170, 172, 175, 191, 192, 196, 197, 198, 217, 218, 229, 234, 240, 270, 278, 283, 286, 287, 291, 295, 309, 316, 323, 411, 572, 608, 652, 720], "axial": [26, 59, 73, 108, 110, 119, 136, 138, 157, 161, 168, 172, 186, 198, 206, 209, 218, 226, 233, 234, 255, 320, 329, 346, 347, 833, 853, 863], "100": [26, 27, 29, 31, 36, 37, 39, 42, 45, 48, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 70, 71, 74, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 101, 102, 105, 107, 109, 112, 113, 117, 119, 122, 123, 128, 130, 131, 135, 136, 138, 139, 141, 142, 143, 146, 147, 151, 153, 161, 162, 163, 166, 167, 169, 170, 171, 172, 175, 177, 182, 184, 195, 196, 198, 202, 203, 204, 205, 206, 207, 209, 210, 212, 217, 218, 222, 223, 228, 229, 230, 232, 234, 236, 239, 250, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 273, 274, 277, 303, 310, 317, 323, 331, 332, 333, 334, 341, 429, 504, 523, 547, 548, 550, 551, 575, 646, 659, 665, 670, 749, 769, 785, 786, 788, 789, 814, 817, 823, 833, 865, 883, 888, 952, 955], "pca": [26, 29, 31, 37, 39, 41, 42, 43, 44, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 95, 96, 98, 99, 100, 101, 103, 105, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 151, 152, 157, 158, 159, 166, 167, 168, 172, 175, 176, 177, 178, 182, 183, 184, 186, 188, 192, 193, 194, 195, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 251, 252, 257, 258, 259, 260, 263, 265, 273, 274, 278, 286, 288, 293, 294, 297, 299, 301, 316, 331, 333, 334, 336, 339, 345, 347, 364, 365, 423, 439, 443, 497, 545, 548, 550, 608, 609, 618, 619, 632, 635, 697, 879, 938, 955], "01": [26, 29, 32, 34, 37, 38, 39, 45, 46, 47, 50, 58, 59, 60, 61, 72, 85, 94, 98, 100, 103, 105, 109, 110, 111, 117, 118, 119, 120, 130, 135, 136, 138, 139, 140, 147, 148, 151, 152, 157, 163, 165, 167, 168, 172, 176, 177, 180, 184, 185, 190, 192, 193, 194, 195, 196, 198, 206, 207, 209, 211, 212, 214, 218, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 252, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 269, 270, 272, 273, 277, 284, 313, 317, 322, 323, 325, 331, 332, 410, 412, 416, 450, 475, 476, 491, 550, 551, 562, 650, 659, 662, 668, 675, 679, 778, 955], "02": [26, 27, 31, 37, 39, 45, 59, 60, 61, 82, 90, 93, 94, 108, 110, 111, 119, 130, 135, 136, 138, 141, 147, 151, 154, 156, 157, 162, 168, 172, 174, 176, 183, 186, 190, 196, 198, 200, 209, 222, 223, 229, 233, 234, 235, 236, 238, 240, 245, 255, 256, 257, 259, 260, 264, 265, 270, 277, 322, 323, 331, 332, 389, 545, 548, 550, 551, 562, 801, 811, 812, 814, 815, 817, 955], "an": [26, 29, 30, 31, 33, 37, 38, 41, 44, 45, 47, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 80, 81, 82, 84, 85, 86, 87, 88, 90, 94, 95, 96, 98, 100, 101, 105, 108, 109, 110, 114, 117, 119, 120, 121, 122, 128, 131, 134, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 150, 155, 156, 158, 161, 162, 163, 166, 167, 170, 172, 175, 176, 177, 178, 179, 181, 182, 184, 186, 188, 189, 190, 191, 192, 193, 196, 197, 201, 202, 203, 204, 205, 207, 209, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 259, 260, 263, 264, 265, 268, 269, 271, 272, 273, 274, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 355, 356, 358, 360, 364, 365, 367, 369, 370, 371, 372, 380, 382, 384, 385, 386, 389, 393, 396, 398, 407, 416, 417, 418, 423, 424, 425, 426, 427, 429, 430, 432, 434, 439, 440, 442, 443, 456, 459, 460, 464, 482, 483, 489, 490, 491, 495, 498, 500, 501, 502, 505, 507, 508, 510, 512, 517, 518, 519, 522, 523, 524, 525, 526, 530, 531, 533, 538, 542, 545, 547, 548, 549, 550, 551, 552, 556, 558, 560, 561, 566, 567, 568, 569, 570, 572, 576, 578, 579, 585, 587, 589, 590, 593, 596, 597, 598, 601, 602, 604, 608, 609, 611, 612, 613, 615, 616, 617, 620, 622, 624, 631, 632, 634, 635, 636, 637, 638, 639, 643, 645, 647, 648, 650, 652, 653, 655, 657, 659, 661, 665, 668, 669, 670, 671, 677, 680, 683, 688, 689, 690, 691, 692, 695, 697, 699, 700, 702, 710, 712, 716, 717, 719, 721, 722, 724, 727, 731, 732, 733, 736, 739, 743, 748, 749, 755, 758, 760, 763, 764, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 798, 801, 804, 805, 811, 815, 816, 819, 820, 823, 825, 831, 833, 834, 835, 843, 848, 850, 851, 852, 856, 857, 859, 861, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 878, 879, 880, 882, 883, 885, 886, 887, 888, 889, 890, 891, 892, 893, 895, 896, 897, 898, 901, 903, 905, 915, 916, 918, 926, 927, 928, 935, 938, 940, 941, 945, 947, 948, 951, 955], "subspac": [26, 29, 37, 41, 44, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 95, 96, 98, 100, 114, 117, 119, 120, 121, 122, 131, 134, 135, 136, 137, 148, 158, 166, 167, 168, 171, 172, 175, 177, 178, 188, 192, 198, 202, 203, 204, 205, 206, 207, 208, 209, 218, 227, 228, 230, 232, 233, 234, 237, 251, 260, 263, 265, 319, 323, 651, 670], "dimens": [26, 29, 37, 41, 44, 45, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 95, 96, 98, 100, 114, 117, 119, 120, 121, 122, 131, 134, 135, 136, 137, 148, 149, 158, 166, 167, 168, 171, 172, 175, 177, 178, 186, 188, 192, 198, 202, 203, 204, 205, 206, 207, 208, 209, 218, 222, 223, 227, 228, 230, 232, 233, 234, 236, 251, 252, 255, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 277, 292, 302, 307, 316, 319, 320, 328, 331, 332, 333, 334, 338, 339, 340, 341, 342, 344, 345, 346, 347, 354, 381, 429, 483, 486, 489, 490, 493, 494, 496, 498, 522, 523, 545, 547, 548, 550, 551, 608, 609, 611, 612, 618, 619, 634, 635, 650, 763, 764, 768, 770, 771, 773, 774, 783, 785, 786, 787, 788, 789, 803, 804, 814, 823, 833, 843, 844, 852, 867, 874, 878, 887, 888, 890, 895, 897], "fran\u00e7oi": [26, 98, 105, 136, 209, 210, 218, 227, 277, 320, 635, 644], "tadel": [26, 136, 209, 210, 218, 277], "sylvain": [26, 136, 209, 210, 218, 277], "baillet": [26, 136, 209, 210, 218, 277], "john": [26, 44, 45, 77, 95, 109, 136, 154, 204, 206, 209, 210, 218, 277, 295, 303, 317, 320, 330, 331, 332, 333, 334, 367, 458, 459, 487, 489, 501, 545, 602, 613, 635, 651, 674, 740, 745, 783, 787], "mosher": [26, 77, 136, 206, 209, 210, 218, 277, 320, 367], "dimitrio": [26, 36, 136, 209, 210, 218, 277, 317], "pantazi": [26, 36, 136, 209, 210, 218, 277, 317], "richard": [26, 77, 136, 209, 210, 218, 236, 269, 277, 278, 282, 284, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 317, 320, 367, 459, 635, 643, 765, 953], "leahi": [26, 77, 136, 209, 210, 218, 277, 320, 367], "user": [26, 71, 102, 121, 136, 168, 182, 191, 193, 197, 198, 209, 210, 216, 217, 218, 228, 229, 243, 277, 278, 282, 283, 284, 286, 289, 292, 294, 295, 298, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 321, 324, 326, 331, 332, 333, 334, 335, 336, 338, 339, 342, 344, 345, 346, 347, 447, 448, 449, 450, 452, 453, 454, 456, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 504, 512, 549, 550, 551, 568, 635, 659, 677, 728, 781, 782, 783, 787, 852, 865, 872, 882, 888, 897, 906, 907, 908, 909, 910, 912, 935, 937, 940, 943, 945, 946, 948, 950], "friendli": [26, 136, 209, 210, 218, 277, 312], "applic": [26, 41, 97, 100, 114, 136, 175, 188, 196, 204, 209, 210, 218, 219, 223, 229, 232, 233, 234, 237, 270, 277, 285, 292, 299, 303, 309, 320, 326, 331, 332, 333, 334, 485, 490, 494, 507, 519, 521, 522, 535, 550, 551, 570, 576, 593, 594, 635, 636, 667, 670, 693, 696, 785, 786, 788, 789, 833, 865, 867, 882, 888, 935, 944, 948, 951], "intellig": [26, 136, 209, 210, 218, 222, 277, 489, 523], "neurosci": [26, 30, 36, 42, 45, 69, 97, 101, 136, 140, 177, 209, 210, 218, 222, 223, 229, 260, 277, 310, 314, 317, 322, 343, 429, 484, 489, 499, 503, 635, 640, 643, 743, 770, 771, 773, 774, 801, 811, 812, 814, 815, 817, 953], "2011": [26, 41, 47, 60, 85, 114, 136, 177, 195, 209, 210, 216, 218, 229, 252, 255, 277, 313, 320, 364, 491, 548, 602, 636, 776, 777], "13": [26, 29, 35, 36, 37, 38, 39, 42, 45, 47, 48, 51, 52, 54, 55, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 84, 85, 86, 94, 97, 101, 103, 106, 107, 109, 110, 111, 120, 121, 123, 124, 127, 130, 131, 134, 135, 136, 137, 139, 140, 141, 144, 147, 148, 152, 158, 159, 160, 162, 163, 168, 170, 171, 172, 175, 176, 178, 184, 188, 192, 195, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 218, 223, 228, 229, 231, 232, 234, 236, 237, 238, 242, 243, 250, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 267, 269, 270, 277, 282, 291, 294, 313, 314, 316, 319, 320, 326, 330, 331, 332, 333, 334, 336, 337, 342, 344, 349, 403, 428, 450, 475, 494, 504, 518, 519, 521, 522, 524, 550, 551, 635, 652, 653, 670, 697, 713, 716, 746, 749, 783, 787, 815, 816, 869, 880, 891, 933, 941, 952, 955], "doi": [26, 30, 34, 36, 38, 39, 41, 42, 44, 45, 47, 59, 61, 66, 68, 69, 70, 72, 77, 80, 81, 84, 85, 86, 92, 97, 98, 101, 102, 105, 109, 110, 114, 121, 126, 128, 136, 139, 140, 144, 146, 148, 154, 163, 167, 170, 177, 181, 183, 188, 202, 204, 206, 209, 210, 218, 222, 223, 227, 229, 231, 232, 233, 234, 235, 237, 239, 252, 255, 256, 260, 268, 277, 314, 316, 317, 320, 331, 332, 333, 334, 337, 342, 343, 357, 364, 365, 367, 369, 423, 429, 450, 458, 459, 463, 464, 475, 476, 483, 484, 487, 489, 490, 491, 499, 501, 503, 507, 545, 547, 548, 550, 551, 602, 603, 613, 617, 634, 635, 636, 640, 643, 644, 646, 649, 650, 651, 670, 674, 677, 678, 685, 727, 736, 740, 743, 745, 748, 767, 769, 770, 771, 772, 773, 774, 776, 777, 785, 788, 797, 799, 801, 803, 804, 811, 812, 814, 815, 817, 852, 935], "10": [26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 50, 51, 54, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 120, 121, 122, 123, 124, 126, 128, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 154, 155, 156, 158, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 215, 216, 217, 218, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 269, 270, 273, 277, 281, 283, 287, 291, 292, 300, 301, 302, 304, 309, 312, 313, 314, 316, 317, 320, 325, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 357, 364, 365, 367, 369, 377, 380, 392, 398, 403, 408, 413, 416, 419, 420, 421, 423, 429, 434, 450, 458, 459, 463, 464, 475, 476, 483, 484, 485, 487, 489, 490, 491, 494, 499, 501, 503, 504, 507, 518, 519, 521, 522, 527, 545, 547, 548, 550, 551, 576, 591, 592, 602, 603, 613, 617, 622, 634, 635, 636, 639, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 659, 660, 661, 664, 666, 670, 674, 677, 678, 685, 696, 718, 727, 736, 740, 743, 745, 747, 748, 749, 764, 766, 767, 769, 770, 771, 772, 773, 774, 776, 777, 783, 785, 786, 787, 788, 789, 797, 799, 801, 803, 804, 811, 812, 813, 814, 815, 816, 817, 823, 833, 839, 850, 852, 865, 867, 874, 876, 877, 882, 883, 888, 893, 898, 935, 941, 944, 947, 955], "1155": [26, 136, 209, 210, 218, 277], "879716": [26, 136, 209, 210, 218, 277], "run": [26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 283, 284, 285, 287, 291, 292, 294, 296, 301, 303, 305, 306, 310, 317, 320, 321, 323, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 371, 389, 416, 423, 424, 426, 428, 445, 450, 485, 486, 489, 493, 494, 496, 499, 500, 521, 522, 523, 526, 539, 541, 550, 551, 587, 593, 596, 597, 608, 609, 618, 619, 635, 640, 647, 648, 650, 659, 660, 663, 668, 671, 687, 722, 731, 732, 734, 735, 736, 737, 746, 747, 748, 749, 770, 771, 772, 773, 774, 785, 788, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 814, 815, 816, 817, 833, 835, 858, 865, 867, 870, 874, 877, 878, 882, 888, 889, 938, 940, 941, 944, 945, 947, 949], "minut": [26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 331, 332, 343, 349, 506, 550, 551, 635, 735, 736, 882, 888, 945], "261": [26, 32, 61, 195, 236, 255, 955], "second": [26, 27, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 277, 283, 284, 289, 293, 295, 303, 304, 305, 308, 309, 316, 317, 319, 320, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 351, 352, 354, 363, 364, 365, 390, 391, 410, 412, 426, 428, 483, 489, 490, 495, 507, 509, 512, 517, 518, 520, 524, 525, 548, 549, 550, 551, 570, 572, 575, 589, 594, 595, 605, 608, 634, 635, 637, 638, 639, 640, 643, 645, 647, 648, 652, 655, 656, 659, 660, 661, 662, 663, 670, 678, 684, 688, 697, 700, 733, 749, 769, 770, 771, 773, 774, 775, 777, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 813, 816, 833, 835, 842, 859, 866, 867, 868, 871, 874, 878, 879, 880, 882, 887, 888, 889, 890, 893, 895, 897, 898, 909, 910, 925, 935, 947], "usag": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 278, 282, 291, 292, 293, 300, 303, 304, 309, 311, 319, 320, 323, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 492, 496, 550, 551, 670, 770, 771, 773, 774, 783, 785, 786, 787, 788, 789, 791, 794, 810, 812, 813, 814, 815, 816, 817, 935], "492": [26, 27, 32, 76, 236, 955], "jupyt": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 278, 291, 292, 294, 295, 304, 305, 308, 310, 321, 900, 935], "notebook": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 278, 291, 292, 294, 295, 304, 305, 308, 312, 321, 900, 919, 935, 945], "brainstorm_data": [26, 32, 955], "ipynb": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274], "py": [26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 276, 285, 287, 293, 294, 297, 299, 301, 303, 308, 309, 312, 935, 940, 955], "galleri": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 309, 955], "gener": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 121, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 222, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 243, 244, 245, 246, 250, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 278, 280, 281, 283, 285, 288, 289, 291, 292, 293, 294, 295, 297, 299, 301, 302, 303, 304, 308, 310, 311, 312, 314, 316, 317, 318, 319, 321, 322, 323, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 358, 359, 362, 376, 389, 394, 395, 396, 416, 422, 423, 450, 483, 485, 486, 489, 490, 493, 494, 500, 507, 512, 517, 519, 521, 522, 524, 541, 546, 547, 550, 551, 553, 556, 557, 568, 572, 576, 587, 590, 597, 601, 602, 604, 606, 609, 613, 616, 632, 633, 634, 635, 636, 638, 647, 649, 652, 653, 660, 662, 663, 668, 670, 687, 691, 697, 700, 702, 704, 705, 707, 708, 731, 732, 733, 735, 736, 737, 746, 747, 748, 749, 750, 763, 767, 768, 770, 771, 772, 773, 774, 779, 783, 785, 786, 787, 788, 789, 797, 798, 818, 830, 833, 834, 837, 848, 851, 855, 859, 866, 874, 878, 879, 889, 890, 893, 894, 903, 913, 930, 936, 937, 946, 947, 948, 949, 951, 953, 955], "sphinx": [26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 307, 309, 829], "look": [27, 29, 30, 33, 34, 45, 47, 53, 58, 59, 68, 81, 84, 87, 94, 95, 97, 98, 109, 110, 120, 135, 138, 139, 140, 147, 148, 150, 159, 161, 167, 170, 171, 176, 177, 182, 184, 186, 187, 188, 192, 194, 198, 201, 203, 204, 205, 206, 208, 209, 212, 215, 216, 218, 219, 226, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 243, 252, 255, 257, 260, 269, 270, 273, 274, 303, 304, 309, 310, 314, 320, 321, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 367, 369, 371, 377, 447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 524, 531, 533, 550, 551, 582, 635, 637, 665, 688, 783, 833, 851, 854, 881, 891, 893, 898, 899, 936, 940, 941], "high": [27, 29, 30, 33, 36, 38, 48, 64, 66, 85, 100, 101, 108, 109, 110, 114, 121, 126, 146, 167, 168, 169, 177, 182, 183, 186, 193, 197, 215, 217, 218, 223, 226, 230, 232, 233, 234, 237, 238, 239, 257, 258, 259, 260, 264, 270, 277, 283, 285, 295, 301, 302, 304, 319, 331, 332, 333, 334, 344, 349, 423, 424, 425, 426, 428, 463, 485, 494, 518, 519, 521, 542, 550, 551, 576, 602, 635, 640, 643, 647, 648, 652, 653, 660, 661, 663, 664, 670, 674, 736, 769, 833, 912, 937, 948], "respons": [27, 30, 34, 36, 42, 43, 45, 46, 53, 61, 72, 75, 77, 85, 86, 92, 104, 111, 114, 121, 123, 124, 134, 140, 144, 147, 148, 150, 155, 156, 161, 168, 169, 171, 175, 176, 188, 194, 206, 209, 211, 218, 223, 226, 229, 234, 240, 259, 260, 263, 265, 270, 277, 280, 285, 294, 297, 298, 304, 305, 310, 316, 317, 319, 320, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 423, 443, 463, 489, 495, 497, 507, 509, 512, 519, 522, 550, 551, 632, 636, 685, 697, 783, 785, 786, 787, 788, 789, 798, 866, 873, 875, 876, 883, 955], "jussi": [27, 88, 277, 280, 281, 282, 283, 284, 285, 286, 287, 291, 293, 295, 463, 670], "nurminen": [27, 88, 277, 280, 281, 282, 283, 284, 285, 286, 287, 291, 293, 295, 463, 670], "jnu": [27, 88], "iki": [27, 88], "fi": [27, 36, 88, 112, 218, 549], "fname_evok": [27, 37, 56, 64, 65, 67, 70, 83, 84, 87, 152, 205, 207, 251, 273], "path": [27, 45, 59, 69, 70, 71, 88, 102, 128, 142, 146, 147, 151, 153, 161, 162, 166, 170, 181, 182, 183, 184, 185, 192, 196, 197, 198, 201, 207, 208, 211, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 251, 256, 283, 287, 288, 289, 292, 294, 295, 303, 304, 305, 307, 308, 309, 319, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 355, 368, 371, 372, 375, 376, 377, 380, 381, 389, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 420, 421, 429, 434, 435, 436, 442, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 502, 504, 517, 526, 531, 532, 533, 535, 536, 539, 541, 542, 543, 544, 550, 551, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 591, 593, 597, 616, 620, 621, 622, 624, 625, 634, 635, 645, 646, 657, 659, 665, 666, 670, 680, 681, 682, 683, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 720, 721, 728, 731, 732, 734, 735, 736, 746, 748, 749, 751, 752, 760, 778, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 805, 806, 807, 818, 820, 822, 825, 827, 832, 833, 842, 851, 853, 863, 865, 875, 882, 888, 893, 898, 899, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 940, 944, 947, 950], "join": [27, 36, 45, 70, 88, 102, 161, 166, 185, 196, 197, 210, 211, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 331, 332, 333, 334, 550, 551], "subject_b": 27, "hf_sef_15min": 27, "av": [27, 29, 37, 56, 57, 61, 64, 65, 66, 67, 70, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 91, 95, 105, 112, 113, 117, 119, 122, 143, 146, 147, 152, 175, 176, 198, 202, 204, 205, 207, 251, 273, 274, 317, 323, 331, 332, 333, 334, 341, 550, 551, 625, 700, 709, 787, 926], "interest": [27, 29, 30, 35, 42, 47, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 90, 105, 108, 112, 113, 117, 122, 123, 124, 127, 128, 131, 134, 139, 140, 141, 143, 146, 147, 155, 161, 163, 166, 168, 169, 170, 175, 176, 181, 186, 188, 196, 198, 202, 204, 205, 206, 207, 217, 219, 222, 223, 226, 229, 230, 233, 238, 239, 240, 244, 251, 252, 255, 256, 257, 258, 259, 269, 270, 273, 274, 283, 295, 302, 304, 309, 316, 319, 320, 326, 331, 332, 333, 334, 336, 356, 358, 392, 488, 491, 507, 509, 527, 535, 550, 551, 587, 608, 609, 619, 634, 635, 685, 694, 696, 732, 783, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 815, 816, 833, 889, 895, 935], "t": [27, 29, 30, 31, 35, 41, 45, 47, 53, 54, 55, 56, 57, 58, 61, 64, 65, 66, 67, 68, 70, 71, 74, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 90, 92, 97, 105, 107, 109, 110, 112, 113, 120, 121, 122, 123, 125, 128, 129, 135, 141, 142, 143, 144, 146, 147, 166, 167, 169, 170, 171, 172, 175, 177, 182, 183, 184, 185, 186, 188, 191, 192, 194, 196, 197, 198, 202, 203, 204, 205, 206, 207, 209, 210, 215, 218, 222, 223, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 245, 251, 252, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 273, 274, 277, 278, 280, 282, 286, 287, 289, 292, 293, 294, 295, 302, 303, 304, 305, 307, 308, 309, 310, 316, 317, 319, 320, 321, 323, 326, 327, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 344, 345, 346, 347, 354, 364, 365, 410, 413, 419, 428, 429, 442, 443, 447, 448, 449, 452, 453, 454, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 489, 504, 506, 518, 524, 527, 545, 548, 550, 551, 562, 563, 601, 602, 610, 616, 622, 624, 632, 635, 638, 646, 647, 652, 653, 659, 661, 668, 670, 671, 679, 687, 690, 694, 696, 697, 700, 701, 704, 707, 710, 712, 729, 732, 748, 749, 755, 761, 767, 768, 769, 770, 772, 773, 775, 776, 777, 783, 784, 785, 786, 787, 788, 789, 801, 805, 808, 811, 813, 816, 823, 833, 835, 870, 880, 941, 942, 947, 949, 955], "250": [27, 30, 39, 47, 72, 107, 133, 144, 151, 162, 163, 167, 169, 177, 182, 192, 195, 207, 226, 228, 229, 230, 234, 259, 268, 277, 306, 736, 792, 955], "ctf": [27, 53, 56, 57, 61, 62, 64, 65, 66, 67, 70, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 105, 112, 113, 128, 143, 146, 147, 166, 169, 175, 191, 196, 198, 202, 204, 205, 207, 213, 214, 220, 221, 255, 256, 273, 274, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 299, 300, 302, 304, 307, 317, 320, 325, 328, 329, 331, 332, 333, 334, 335, 336, 342, 370, 406, 414, 422, 424, 428, 430, 432, 433, 524, 526, 550, 551, 564, 591, 592, 597, 598, 601, 602, 611, 612, 613, 614, 617, 632, 633, 648, 670, 691, 700, 702, 708, 715, 731, 783, 785, 786, 787, 788, 789, 833, 851, 955], "nave": [27, 31, 54, 55, 56, 57, 60, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 95, 105, 112, 113, 117, 119, 121, 131, 134, 135, 136, 137, 141, 143, 146, 147, 175, 192, 198, 202, 203, 204, 205, 207, 208, 218, 223, 250, 251, 252, 263, 265, 273, 274, 283, 285, 289, 291, 298, 324, 330, 333, 334, 336, 422, 540, 603, 604, 605, 606, 608, 609, 615, 618, 619, 747, 783], "2790": 27, "aspect": [27, 42, 48, 56, 57, 61, 64, 65, 66, 67, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 97, 105, 112, 113, 134, 143, 146, 147, 168, 175, 198, 202, 204, 205, 207, 230, 233, 257, 258, 259, 260, 273, 274, 283, 285, 293, 333, 334, 837, 870], "specifi": [27, 30, 31, 35, 45, 57, 64, 67, 69, 73, 90, 114, 121, 122, 128, 130, 136, 141, 147, 155, 161, 166, 167, 168, 175, 176, 177, 181, 184, 192, 193, 194, 195, 196, 197, 198, 204, 210, 211, 212, 215, 219, 223, 226, 227, 229, 230, 231, 232, 234, 235, 237, 238, 239, 243, 244, 245, 246, 256, 257, 260, 263, 269, 273, 274, 278, 282, 284, 286, 287, 289, 291, 292, 293, 294, 295, 298, 299, 300, 303, 304, 309, 318, 319, 320, 323, 325, 326, 328, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 355, 357, 364, 365, 370, 377, 382, 392, 398, 423, 424, 425, 426, 427, 428, 429, 439, 440, 441, 442, 447, 448, 449, 450, 452, 453, 454, 455, 458, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 490, 494, 495, 499, 500, 504, 507, 509, 518, 519, 521, 522, 524, 526, 527, 535, 539, 542, 545, 547, 548, 549, 550, 551, 552, 561, 566, 567, 576, 580, 593, 596, 601, 603, 611, 612, 613, 624, 634, 635, 638, 640, 645, 646, 648, 649, 650, 654, 655, 659, 670, 685, 688, 692, 694, 696, 701, 704, 710, 719, 722, 724, 727, 732, 733, 748, 760, 763, 769, 770, 771, 773, 774, 781, 783, 785, 786, 787, 788, 789, 801, 811, 820, 833, 835, 837, 844, 850, 851, 852, 854, 859, 866, 867, 869, 870, 873, 874, 875, 878, 880, 881, 882, 884, 887, 890, 893, 894, 895, 897, 898, 899, 900, 904, 930, 935], "pleas": [27, 30, 31, 101, 103, 109, 128, 136, 151, 161, 162, 163, 172, 192, 198, 210, 211, 212, 216, 223, 226, 231, 232, 238, 239, 256, 265, 294, 295, 300, 309, 311, 314, 316, 317, 319, 320, 321, 323, 331, 332, 356, 358, 400, 441, 459, 510, 522, 524, 550, 551, 562, 635, 659, 671, 702, 865, 882, 888, 927, 936, 940, 945, 947, 951], "consid": [27, 30, 31, 108, 120, 128, 131, 135, 136, 139, 163, 167, 170, 178, 182, 185, 187, 188, 192, 210, 211, 212, 219, 223, 226, 227, 228, 229, 231, 232, 237, 238, 239, 255, 256, 257, 260, 263, 265, 270, 282, 288, 295, 303, 305, 309, 310, 311, 319, 326, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 345, 346, 347, 354, 364, 365, 377, 387, 405, 423, 427, 428, 440, 441, 483, 490, 491, 504, 513, 514, 515, 516, 518, 524, 531, 547, 548, 550, 551, 559, 566, 568, 574, 581, 630, 635, 637, 638, 643, 645, 646, 650, 652, 654, 656, 659, 662, 668, 670, 675, 694, 696, 700, 744, 753, 754, 755, 757, 758, 770, 771, 773, 774, 783, 786, 787, 790, 791, 792, 793, 794, 795, 796, 833, 848, 857, 865, 868, 869, 881, 888, 940], "self": [27, 30, 31, 128, 136, 198, 210, 211, 212, 223, 226, 231, 238, 239, 256, 265, 287, 309, 318, 325, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 342, 345, 346, 347, 355, 370, 434, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 549, 550, 551, 601, 634, 635, 636, 655, 656, 783, 785, 786, 787, 788, 789, 820, 834, 935], "highpass": [27, 38, 98, 100, 103, 107, 108, 109, 117, 120, 126, 167, 172, 177, 192, 193, 194, 195, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 270, 273, 282, 287, 288, 293, 302, 323, 331, 332, 333, 334, 336, 518, 550, 551, 785, 786, 788, 789, 888, 889], "version": [27, 45, 60, 97, 110, 141, 171, 172, 176, 181, 187, 192, 197, 215, 216, 217, 222, 223, 228, 229, 246, 274, 309, 310, 313, 314, 317, 320, 323, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 364, 365, 372, 375, 377, 380, 388, 408, 410, 412, 416, 429, 456, 483, 484, 485, 488, 490, 491, 492, 494, 499, 503, 504, 507, 512, 517, 518, 521, 522, 523, 527, 536, 542, 545, 547, 548, 550, 551, 560, 567, 572, 575, 577, 580, 581, 583, 589, 593, 596, 597, 613, 623, 626, 627, 628, 634, 635, 636, 650, 659, 692, 694, 700, 702, 718, 727, 731, 732, 735, 736, 748, 765, 775, 776, 777, 778, 782, 783, 785, 786, 787, 788, 789, 802, 833, 845, 851, 852, 853, 859, 860, 863, 864, 865, 867, 869, 871, 874, 875, 878, 882, 885, 887, 888, 889, 890, 891, 893, 895, 897, 898, 899, 900, 903, 926, 935, 941, 944, 945, 946, 947], "evoked_hp": 27, "l_freq": [27, 47, 109, 141, 170, 172, 177, 218, 229, 230, 232, 234, 270, 323, 331, 332, 333, 334, 485, 494, 519, 521, 550, 551, 635, 643, 647, 648, 652, 653, 660, 661, 663, 664, 674, 938], "300": [27, 30, 31, 39, 47, 60, 72, 77, 86, 101, 107, 108, 119, 139, 143, 161, 166, 175, 177, 195, 209, 212, 223, 230, 232, 236, 239, 255, 260, 268, 302, 783], "h_freq": [27, 47, 109, 141, 170, 172, 177, 218, 229, 230, 232, 234, 237, 270, 323, 331, 332, 333, 334, 485, 494, 519, 521, 550, 551, 635, 643, 647, 648, 652, 653, 659, 660, 661, 663, 664, 674, 938], "3e": [27, 34, 35, 47, 58, 61, 71, 74, 75, 76, 77, 80, 81, 84, 86, 91, 121, 136, 178, 202, 204, 205, 206, 207, 210, 211, 223, 647, 648, 852], "edg": [27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 58, 60, 68, 85, 97, 99, 100, 103, 108, 109, 110, 114, 126, 137, 140, 141, 142, 147, 148, 159, 162, 167, 168, 170, 172, 177, 187, 198, 212, 218, 223, 226, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 245, 246, 251, 255, 260, 270, 285, 286, 291, 293, 294, 304, 306, 307, 308, 328, 331, 332, 333, 334, 340, 341, 349, 386, 483, 485, 489, 490, 512, 519, 521, 523, 548, 550, 551, 559, 566, 634, 635, 637, 638, 650, 659, 670, 674, 783, 785, 786, 788, 789, 838, 848, 852, 853, 867, 874, 878, 887, 888, 890, 895, 897, 935], "75": [27, 29, 30, 31, 34, 38, 39, 41, 42, 45, 47, 50, 60, 61, 67, 70, 97, 99, 103, 106, 107, 109, 128, 130, 141, 142, 161, 169, 170, 172, 184, 195, 198, 206, 210, 212, 218, 222, 223, 226, 228, 231, 232, 234, 235, 236, 240, 245, 255, 256, 259, 260, 273, 300, 302, 317, 320, 550, 551, 635, 891], "cutoff": [27, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 52, 60, 68, 99, 100, 103, 108, 109, 110, 114, 126, 140, 141, 142, 148, 159, 162, 167, 170, 172, 177, 198, 212, 218, 223, 226, 228, 230, 231, 232, 234, 237, 238, 239, 240, 260, 331, 332, 333, 334, 485, 494, 519, 521, 550, 551, 635, 643, 659, 674], "262": [27, 38, 47, 177, 195, 238, 277, 955], "133": [27, 61, 88, 182, 195, 235, 236, 255], "044": [27, 166, 168, 175, 195, 252], "condit": [27, 36, 37, 42, 43, 46, 53, 56, 57, 61, 64, 65, 66, 67, 70, 71, 77, 84, 85, 86, 87, 88, 105, 112, 113, 114, 121, 123, 126, 137, 139, 146, 147, 150, 152, 156, 166, 167, 168, 169, 170, 171, 175, 176, 179, 191, 192, 194, 202, 203, 204, 205, 206, 207, 210, 211, 218, 223, 229, 238, 244, 250, 255, 256, 257, 260, 261, 262, 263, 264, 265, 268, 277, 283, 288, 292, 293, 294, 295, 298, 301, 302, 303, 304, 308, 309, 312, 316, 317, 319, 320, 324, 331, 332, 333, 334, 336, 422, 423, 486, 493, 499, 505, 550, 600, 625, 632, 636, 646, 659, 670, 685, 697, 699, 700, 701, 764, 769, 770, 771, 773, 783, 785, 786, 787, 788, 789, 807, 815, 859, 873, 938, 955], "kind": [27, 29, 31, 33, 37, 48, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 91, 95, 109, 117, 119, 120, 121, 122, 131, 134, 135, 136, 137, 152, 157, 161, 162, 168, 175, 177, 182, 186, 192, 195, 196, 198, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 217, 218, 223, 230, 233, 251, 252, 263, 264, 265, 273, 285, 287, 288, 291, 292, 305, 307, 309, 320, 330, 331, 332, 333, 334, 336, 338, 339, 340, 342, 343, 344, 345, 346, 347, 364, 365, 373, 374, 380, 381, 396, 406, 444, 460, 502, 503, 518, 544, 550, 551, 553, 585, 623, 636, 700, 778, 783, 785, 786, 787, 788, 789, 801, 811, 833, 835, 854, 856, 885, 891, 893, 898, 899, 906, 907, 935, 948], "timepoint": [27, 45, 85, 128, 147, 167, 175, 177, 205, 207, 210, 243, 326, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 354, 417, 596, 652, 700, 701], "901": 27, "306": [27, 48, 52, 57, 58, 59, 60, 61, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 88, 95, 109, 110, 117, 119, 120, 121, 122, 136, 139, 157, 172, 184, 195, 198, 202, 203, 204, 205, 206, 207, 209, 223, 236, 237, 251, 252, 317, 635], "number": [27, 29, 30, 31, 35, 36, 37, 57, 60, 61, 65, 66, 68, 70, 72, 75, 78, 85, 99, 101, 103, 108, 109, 114, 117, 119, 120, 127, 130, 134, 136, 140, 141, 148, 161, 166, 168, 169, 170, 171, 172, 175, 176, 177, 186, 187, 188, 191, 192, 194, 196, 197, 198, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 219, 223, 226, 227, 228, 229, 231, 232, 233, 237, 240, 244, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 314, 317, 319, 321, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 364, 365, 366, 367, 369, 392, 395, 403, 411, 417, 423, 424, 425, 426, 427, 428, 429, 431, 434, 439, 440, 441, 450, 482, 483, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 499, 500, 504, 506, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 539, 540, 541, 545, 547, 548, 549, 550, 551, 552, 562, 576, 584, 587, 593, 596, 597, 602, 603, 604, 605, 606, 608, 609, 611, 612, 613, 615, 617, 618, 619, 634, 635, 636, 640, 644, 645, 646, 647, 648, 650, 651, 659, 660, 661, 663, 665, 666, 668, 669, 675, 676, 687, 697, 701, 722, 731, 732, 733, 734, 735, 736, 737, 741, 742, 743, 746, 747, 748, 749, 757, 758, 759, 760, 762, 763, 764, 766, 768, 770, 771, 772, 773, 774, 775, 778, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 797, 799, 801, 803, 804, 811, 812, 813, 814, 815, 816, 817, 823, 831, 832, 833, 835, 842, 851, 852, 858, 859, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 874, 875, 876, 878, 879, 881, 882, 887, 888, 889, 890, 893, 894, 895, 896, 897, 898, 901, 912, 935], "rang": [27, 29, 30, 31, 35, 36, 37, 39, 40, 41, 42, 44, 45, 54, 55, 58, 59, 60, 68, 71, 72, 75, 85, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 114, 119, 120, 121, 123, 124, 126, 127, 130, 131, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 151, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 172, 175, 177, 178, 182, 184, 185, 186, 188, 192, 193, 194, 195, 197, 198, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 223, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 245, 246, 250, 251, 252, 255, 256, 257, 258, 259, 260, 263, 265, 268, 269, 270, 273, 282, 283, 292, 294, 304, 307, 310, 316, 319, 320, 323, 324, 328, 331, 332, 333, 334, 336, 340, 341, 364, 389, 443, 450, 465, 475, 476, 483, 486, 490, 492, 493, 516, 542, 547, 550, 551, 559, 586, 634, 635, 640, 650, 659, 783, 784, 785, 786, 787, 788, 789, 801, 811, 833, 835, 852, 865, 866, 867, 871, 874, 878, 887, 888, 889, 890, 895, 897], "05": [27, 29, 30, 31, 32, 34, 35, 36, 45, 60, 61, 68, 72, 75, 77, 82, 85, 86, 87, 93, 98, 105, 110, 113, 119, 122, 123, 124, 127, 129, 130, 133, 139, 143, 146, 147, 152, 156, 167, 170, 176, 177, 196, 197, 200, 203, 205, 206, 207, 209, 211, 218, 222, 226, 227, 230, 234, 236, 238, 240, 243, 248, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 274, 277, 284, 304, 312, 313, 364, 365, 389, 392, 398, 503, 522, 526, 550, 551, 570, 617, 644, 656, 743, 761, 766, 767, 770, 771, 773, 774, 775, 783, 799, 801, 811, 838, 894, 955], "25": [27, 29, 30, 31, 37, 39, 42, 44, 45, 51, 52, 54, 60, 61, 67, 69, 71, 72, 73, 75, 76, 78, 79, 82, 95, 97, 99, 107, 108, 109, 113, 130, 135, 136, 140, 141, 142, 143, 145, 152, 156, 161, 162, 163, 169, 171, 172, 177, 178, 180, 185, 190, 195, 197, 198, 201, 204, 206, 207, 209, 211, 212, 222, 223, 225, 226, 228, 229, 231, 232, 233, 234, 236, 237, 245, 252, 255, 256, 257, 259, 260, 263, 264, 265, 268, 269, 277, 286, 293, 295, 313, 316, 320, 325, 331, 332, 333, 334, 338, 339, 342, 343, 344, 345, 346, 347, 429, 475, 483, 485, 494, 519, 521, 550, 551, 674, 743, 772, 833, 838, 844, 859, 871, 888, 891, 893, 898, 941, 955], "off": [27, 30, 36, 94, 100, 103, 120, 141, 143, 161, 163, 167, 169, 175, 177, 178, 182, 185, 186, 192, 193, 194, 195, 197, 218, 222, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 239, 243, 244, 245, 246, 250, 251, 252, 273, 277, 284, 285, 291, 293, 294, 295, 308, 309, 316, 317, 320, 323, 326, 331, 332, 333, 334, 344, 364, 365, 485, 494, 519, 521, 550, 551, 634, 647, 648, 650, 661, 664, 670, 674, 685, 813, 816], "compar": [27, 30, 36, 45, 47, 48, 52, 53, 54, 62, 64, 65, 82, 100, 104, 109, 111, 116, 118, 130, 134, 140, 141, 150, 156, 167, 169, 170, 171, 172, 184, 186, 188, 192, 193, 198, 202, 206, 209, 210, 218, 223, 229, 231, 233, 234, 235, 257, 258, 259, 263, 264, 270, 285, 291, 306, 309, 312, 326, 328, 331, 332, 333, 334, 335, 336, 337, 342, 344, 427, 428, 433, 457, 524, 550, 551, 556, 587, 590, 594, 601, 602, 613, 614, 617, 633, 635, 670, 691, 693, 697, 700, 702, 705, 733, 737, 738, 739, 740, 741, 742, 743, 745, 748, 754, 833, 842, 865, 873, 882, 888, 935, 949, 955], "unfilt": [27, 192, 198, 229, 232], "meg0443": 27, "ch_name": [27, 29, 30, 33, 41, 44, 45, 57, 90, 94, 97, 101, 127, 139, 141, 142, 147, 153, 161, 162, 166, 172, 175, 177, 185, 192, 194, 195, 198, 210, 212, 217, 218, 227, 230, 232, 234, 237, 238, 239, 240, 243, 250, 252, 257, 258, 259, 260, 269, 284, 287, 288, 291, 294, 304, 308, 323, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 364, 365, 380, 382, 386, 389, 392, 397, 405, 439, 440, 443, 549, 550, 551, 601, 626, 627, 628, 629, 635, 647, 648, 652, 653, 659, 660, 661, 681, 702, 724, 737, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 802, 856, 865, 866, 888], "index": [27, 30, 45, 47, 57, 73, 88, 97, 99, 102, 117, 159, 162, 169, 175, 176, 177, 186, 192, 195, 196, 198, 201, 206, 209, 210, 215, 218, 222, 226, 228, 231, 232, 233, 234, 236, 237, 238, 240, 244, 245, 251, 256, 257, 268, 269, 277, 283, 285, 286, 287, 288, 291, 292, 294, 295, 299, 304, 317, 319, 320, 324, 325, 329, 330, 331, 332, 333, 334, 338, 339, 341, 342, 344, 345, 346, 347, 351, 352, 363, 364, 365, 379, 389, 418, 432, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 594, 605, 625, 635, 652, 653, 660, 661, 663, 664, 665, 674, 700, 701, 743, 783, 784, 785, 786, 787, 788, 789, 833, 848, 853, 859, 863, 868, 878, 880, 882], "edi": 27, "hf_sef_data": [27, 32, 955], "some": [28, 29, 30, 31, 36, 42, 47, 53, 60, 66, 80, 81, 88, 92, 94, 97, 100, 102, 122, 125, 130, 132, 136, 140, 141, 147, 149, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 182, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 206, 209, 210, 212, 216, 217, 218, 219, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 243, 244, 245, 246, 250, 251, 252, 255, 259, 260, 261, 268, 270, 273, 283, 284, 286, 289, 291, 292, 294, 302, 303, 304, 306, 309, 310, 312, 314, 316, 317, 318, 319, 320, 321, 323, 326, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 344, 345, 346, 347, 376, 380, 384, 388, 423, 442, 456, 497, 506, 517, 536, 542, 550, 551, 559, 566, 630, 634, 635, 637, 645, 654, 670, 678, 684, 694, 696, 723, 727, 731, 765, 771, 783, 785, 786, 787, 788, 789, 801, 811, 835, 851, 853, 870, 872, 888, 935, 936, 938, 940, 941, 944, 945, 948, 951, 952], "demo": [28, 53, 284, 301, 319], "common": [28, 43, 46, 53, 58, 59, 60, 69, 70, 94, 102, 142, 161, 175, 177, 181, 184, 186, 188, 191, 198, 216, 219, 229, 231, 232, 233, 234, 237, 238, 243, 244, 252, 264, 270, 274, 277, 300, 301, 305, 307, 309, 312, 317, 319, 320, 321, 331, 332, 333, 334, 336, 344, 380, 385, 396, 423, 432, 443, 483, 508, 512, 533, 539, 550, 551, 566, 570, 632, 635, 651, 713, 717, 727, 783, 933, 935, 938, 955], "public": [28, 53, 139, 143, 147, 170, 191, 229, 275, 276, 278, 284, 285, 309, 310, 316, 326, 333, 336, 342, 522, 549, 550, 700, 710, 833, 854, 955], "median": [28, 31, 32, 53, 97, 155, 176, 183, 223, 232, 256, 268, 269, 288, 289, 292, 294, 304, 328, 331, 332, 333, 334, 336, 340, 382, 425, 483, 490, 492, 524, 550, 551, 564, 632, 634, 635, 650, 662, 670, 762, 783, 785, 786, 787, 788, 789, 804, 852, 859, 866, 867, 874, 878, 887, 890, 895, 897, 955], "nerv": [28, 31, 32, 53, 331, 333, 334, 336, 425, 524, 564, 632, 662, 955], "hf": [28, 32, 53, 123, 218, 273, 333, 463, 859, 955], "sef": [28, 32, 53, 273, 316, 333, 463, 859, 955], "kernel": [28, 32, 53, 187, 217, 222, 255, 270, 277, 299, 328, 329, 331, 333, 334, 336, 338, 339, 342, 345, 346, 347, 370, 423, 427, 489, 503, 524, 526, 550, 598, 649, 736, 851, 860, 863, 903, 935, 940, 945, 947, 955], "phantom": [28, 32, 53, 110, 191, 213, 214, 277, 278, 284, 286, 295, 320, 328, 329, 331, 333, 334, 336, 370, 423, 427, 428, 460, 503, 524, 526, 550, 562, 564, 576, 598, 649, 670, 788, 851, 860, 863, 875, 903, 955], "trial": [28, 32, 39, 42, 44, 53, 54, 59, 96, 97, 99, 110, 128, 131, 134, 140, 141, 144, 150, 156, 166, 167, 168, 169, 170, 175, 177, 178, 191, 192, 194, 206, 209, 218, 222, 223, 228, 229, 232, 250, 252, 255, 260, 261, 262, 263, 265, 277, 278, 280, 283, 292, 297, 300, 301, 303, 317, 319, 331, 332, 333, 334, 336, 358, 359, 362, 386, 392, 422, 483, 496, 499, 505, 506, 507, 509, 512, 524, 550, 567, 570, 571, 604, 606, 626, 632, 635, 643, 697, 717, 763, 764, 766, 767, 768, 770, 771, 783, 787, 812, 813, 815, 816, 859, 865, 868, 955], "regress": [28, 32, 36, 37, 38, 41, 44, 45, 53, 57, 68, 104, 111, 125, 129, 173, 174, 191, 223, 241, 242, 255, 277, 292, 301, 303, 305, 312, 317, 331, 332, 333, 334, 336, 422, 489, 495, 524, 550, 600, 603, 632, 634, 653, 680, 685, 693, 767, 768, 769, 859, 868, 871, 890, 955], "optic": [28, 32, 53, 102, 191, 215, 217, 241, 242, 277, 287, 291, 293, 303, 317, 319, 329, 331, 333, 334, 336, 342, 370, 423, 433, 441, 512, 524, 526, 560, 573, 601, 602, 613, 629, 632, 634, 649, 672, 673, 677, 689, 702, 788, 827, 833, 851, 903, 955], "pump": [28, 32, 53, 191, 215, 241, 242, 277, 287, 317, 319, 329, 331, 333, 334, 336, 342, 370, 423, 433, 524, 526, 573, 601, 602, 613, 629, 632, 634, 649, 689, 702, 788, 827, 833, 851, 903, 955], "magnetomet": [28, 32, 48, 53, 58, 100, 103, 106, 107, 108, 113, 120, 136, 146, 147, 168, 171, 172, 176, 177, 188, 191, 192, 193, 194, 195, 206, 209, 210, 215, 218, 226, 227, 228, 230, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 250, 255, 277, 287, 291, 292, 293, 295, 299, 302, 304, 316, 317, 319, 320, 323, 326, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 364, 365, 370, 388, 423, 424, 425, 426, 427, 428, 433, 439, 440, 441, 483, 490, 504, 524, 526, 527, 545, 547, 548, 550, 551, 573, 590, 601, 602, 613, 629, 632, 633, 634, 635, 645, 646, 647, 648, 649, 650, 651, 652, 653, 659, 670, 681, 689, 702, 769, 783, 785, 786, 787, 788, 789, 827, 833, 851, 852, 858, 865, 866, 867, 869, 871, 874, 875, 878, 887, 888, 890, 895, 896, 897, 903, 935, 955], "dspm": [28, 32, 37, 53, 55, 57, 62, 63, 64, 65, 66, 67, 68, 70, 81, 82, 85, 87, 131, 132, 133, 134, 135, 136, 191, 192, 201, 204, 205, 207, 208, 213, 214, 218, 223, 251, 252, 263, 265, 299, 316, 317, 319, 328, 331, 333, 334, 335, 336, 337, 338, 339, 342, 344, 345, 346, 347, 357, 361, 364, 365, 422, 423, 427, 524, 547, 548, 550, 564, 588, 593, 597, 601, 602, 603, 604, 605, 606, 607, 608, 609, 613, 614, 615, 616, 618, 619, 632, 635, 653, 697, 700, 702, 704, 794, 833, 860, 868, 955], "face": [28, 30, 32, 36, 53, 96, 151, 166, 168, 170, 175, 177, 187, 192, 198, 201, 223, 226, 277, 292, 300, 305, 312, 331, 332, 374, 422, 423, 524, 564, 593, 597, 602, 613, 632, 635, 653, 713, 716, 783, 848, 868, 896, 928, 933, 955], "In": [29, 30, 31, 36, 41, 42, 45, 47, 58, 66, 68, 69, 70, 71, 72, 85, 97, 101, 105, 108, 109, 113, 114, 117, 121, 128, 130, 134, 139, 141, 142, 143, 145, 154, 158, 161, 163, 166, 168, 170, 175, 176, 177, 178, 181, 182, 184, 186, 187, 188, 192, 193, 194, 196, 197, 198, 201, 202, 204, 207, 215, 217, 218, 219, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 250, 252, 255, 256, 257, 265, 268, 269, 270, 273, 274, 277, 283, 287, 291, 292, 293, 295, 301, 303, 304, 305, 306, 307, 309, 310, 316, 317, 319, 320, 323, 325, 326, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 355, 364, 365, 367, 370, 371, 376, 378, 388, 395, 397, 410, 423, 427, 428, 439, 440, 441, 442, 483, 485, 489, 490, 499, 500, 504, 507, 516, 518, 526, 527, 545, 547, 548, 550, 551, 559, 566, 601, 602, 603, 604, 605, 606, 610, 613, 630, 634, 635, 636, 637, 650, 651, 652, 653, 655, 662, 666, 668, 676, 678, 685, 687, 710, 727, 748, 751, 769, 778, 783, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 801, 811, 812, 813, 814, 815, 816, 817, 820, 830, 833, 848, 859, 865, 866, 867, 868, 869, 871, 872, 874, 875, 878, 879, 886, 887, 888, 889, 890, 893, 895, 896, 897, 899, 935, 938, 940, 942, 947, 949, 950], "neuromag": [29, 136, 182, 184, 186, 192, 194, 209, 211, 227, 234, 237, 243, 244, 245, 278, 283, 287, 289, 297, 317, 319, 320, 323, 324, 329, 331, 332, 333, 334, 336, 341, 388, 503, 524, 550, 551, 562, 568, 576, 583, 670, 692, 717, 785, 786, 788, 789, 865, 868, 873, 888, 951], "place": [29, 31, 33, 52, 94, 166, 175, 176, 177, 182, 187, 191, 192, 195, 199, 200, 204, 229, 231, 232, 233, 235, 237, 239, 243, 250, 252, 263, 273, 278, 285, 286, 291, 304, 307, 309, 317, 319, 320, 321, 325, 328, 330, 331, 332, 333, 334, 335, 336, 340, 343, 348, 349, 354, 380, 385, 388, 408, 409, 416, 432, 433, 451, 455, 456, 458, 483, 490, 505, 507, 508, 521, 522, 550, 551, 552, 562, 599, 613, 622, 627, 631, 634, 635, 647, 648, 650, 653, 656, 658, 661, 662, 666, 718, 724, 727, 733, 734, 735, 736, 748, 780, 783, 784, 785, 786, 787, 788, 789, 802, 819, 837, 852, 856, 867, 874, 878, 887, 890, 895, 897, 936, 938, 955], "insid": [29, 31, 42, 50, 52, 67, 71, 76, 136, 166, 175, 182, 184, 185, 186, 187, 197, 202, 207, 208, 209, 210, 211, 212, 230, 235, 237, 243, 259, 265, 274, 278, 286, 294, 298, 302, 304, 309, 316, 320, 337, 341, 342, 345, 346, 347, 359, 464, 507, 535, 542, 550, 551, 582, 606, 667, 833, 888, 935], "helmet": [29, 31, 33, 53, 71, 106, 107, 136, 143, 150, 151, 156, 163, 176, 182, 184, 196, 198, 209, 210, 211, 212, 215, 239, 274, 286, 287, 288, 292, 301, 303, 305, 320, 333, 334, 336, 534, 593, 601, 616, 700, 833, 835, 843, 851, 870, 903, 955], "stimul": [29, 31, 58, 71, 177, 206, 212, 265, 294, 297, 317, 320, 331, 332, 333, 334, 428, 550, 551, 632, 633, 638, 662, 733, 783, 785, 786, 787, 788, 789, 833, 851], "7": [29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 45, 46, 47, 54, 56, 58, 59, 60, 61, 66, 67, 68, 70, 71, 72, 73, 75, 81, 82, 85, 87, 88, 93, 95, 97, 98, 100, 101, 103, 106, 107, 109, 111, 120, 121, 124, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 147, 154, 155, 156, 157, 162, 163, 166, 168, 169, 170, 171, 172, 174, 175, 177, 180, 182, 184, 185, 186, 192, 195, 196, 197, 198, 200, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 218, 221, 222, 223, 225, 226, 228, 229, 230, 232, 234, 235, 236, 237, 238, 240, 242, 243, 245, 250, 251, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 277, 278, 280, 293, 295, 299, 302, 307, 313, 314, 317, 320, 322, 330, 331, 332, 333, 334, 338, 339, 342, 344, 345, 346, 347, 382, 403, 423, 450, 459, 475, 482, 494, 496, 524, 547, 635, 640, 659, 668, 670, 674, 688, 722, 723, 749, 763, 764, 765, 783, 787, 788, 789, 791, 794, 801, 811, 812, 813, 816, 833, 851, 866, 871, 880, 893, 894, 898, 940, 941, 947, 955], "121": [29, 35, 166, 171, 192, 195, 196, 236, 255, 259, 260, 317, 331, 332, 506], "trace": [29, 31, 57, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 101, 106, 117, 120, 121, 136, 149, 170, 175, 177, 192, 198, 203, 204, 205, 208, 218, 219, 223, 227, 234, 236, 237, 240, 243, 246, 252, 288, 292, 293, 294, 320, 323, 329, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 483, 550, 551, 635, 830, 833, 862, 865, 869, 877, 879, 886, 888, 893, 898], "fname": [29, 36, 38, 47, 79, 92, 105, 112, 113, 139, 146, 147, 155, 157, 186, 196, 232, 295, 303, 307, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 355, 368, 380, 381, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 420, 421, 513, 514, 515, 516, 550, 551, 554, 555, 556, 557, 560, 565, 569, 570, 571, 572, 575, 579, 580, 582, 583, 584, 585, 586, 616, 620, 624, 625, 634, 635, 657, 680, 681, 682, 683, 686, 688, 689, 690, 691, 692, 693, 695, 698, 699, 700, 701, 702, 703, 706, 708, 709, 710, 711, 712, 713, 715, 717, 728, 783, 784, 785, 786, 787, 788, 789, 805, 806, 807, 818, 820, 827, 921, 922, 923, 924, 926, 927, 928, 931, 932, 933, 934, 938], "phantom_32_100nam_raw": 29, "sti101": [29, 31, 136, 194, 324, 524, 525], "identifi": [29, 30, 38, 39, 53, 58, 59, 60, 104, 111, 163, 172, 177, 195, 218, 219, 223, 226, 232, 234, 252, 255, 277, 291, 303, 304, 309, 316, 317, 320, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 380, 396, 403, 443, 486, 493, 535, 550, 551, 552, 557, 635, 639, 643, 650, 669, 679, 833, 843, 855, 893, 897, 898, 935, 955], "inspect": [29, 33, 47, 54, 97, 109, 167, 177, 182, 188, 218, 226, 237, 238, 273, 323, 331, 332, 333, 334, 375, 377, 386, 400, 550, 551, 670, 678, 735, 736, 865, 869, 888, 935, 951], "rc2": 29, "bx": [29, 769], "lc3": 29, "bz": 29, "drop": [29, 30, 34, 35, 37, 38, 42, 44, 47, 58, 59, 60, 68, 72, 75, 98, 99, 123, 124, 127, 130, 134, 137, 139, 140, 141, 144, 148, 149, 155, 161, 162, 163, 167, 168, 170, 171, 172, 177, 178, 188, 192, 193, 198, 203, 206, 208, 209, 211, 212, 218, 226, 227, 228, 231, 232, 234, 235, 238, 239, 240, 245, 251, 252, 257, 258, 259, 260, 263, 265, 269, 280, 281, 282, 283, 285, 288, 289, 291, 292, 293, 294, 300, 301, 303, 304, 309, 320, 325, 326, 328, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 382, 385, 508, 509, 516, 540, 550, 551, 564, 635, 647, 648, 652, 671, 694, 696, 724, 783, 784, 785, 786, 787, 788, 789, 864, 865, 878, 880, 944], "drop_channel": [29, 30, 68, 94, 97, 162, 166, 175, 243, 260, 288, 301, 305, 331, 332, 333, 334, 550, 551, 783, 785, 786, 787, 788, 789, 938], "add": [29, 54, 63, 69, 70, 97, 101, 117, 121, 122, 128, 141, 147, 154, 162, 166, 167, 169, 170, 177, 187, 194, 197, 198, 201, 202, 207, 216, 218, 222, 226, 227, 228, 230, 232, 233, 235, 240, 243, 245, 251, 252, 255, 260, 270, 273, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 319, 323, 325, 327, 328, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 380, 442, 483, 485, 490, 494, 507, 519, 521, 522, 542, 550, 551, 634, 635, 645, 647, 648, 649, 650, 690, 712, 721, 724, 729, 731, 733, 734, 735, 736, 737, 747, 780, 783, 785, 786, 787, 788, 789, 828, 833, 837, 852, 855, 856, 865, 867, 872, 874, 878, 887, 890, 895, 897, 904, 940, 944, 947, 948], "order": [29, 30, 42, 44, 45, 53, 57, 60, 64, 71, 73, 96, 97, 101, 108, 110, 114, 119, 121, 134, 138, 139, 141, 144, 148, 151, 155, 162, 169, 170, 171, 175, 182, 186, 187, 188, 191, 192, 195, 198, 203, 215, 217, 222, 226, 227, 228, 231, 232, 233, 234, 236, 237, 239, 240, 243, 246, 252, 257, 260, 265, 277, 280, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 299, 302, 304, 306, 307, 309, 316, 320, 323, 324, 326, 328, 331, 332, 333, 334, 335, 336, 337, 340, 341, 355, 370, 385, 392, 409, 410, 412, 416, 423, 430, 432, 436, 483, 485, 489, 490, 494, 504, 508, 512, 518, 519, 520, 521, 522, 527, 536, 550, 551, 558, 559, 566, 599, 601, 608, 609, 611, 612, 626, 627, 628, 634, 635, 643, 645, 646, 647, 648, 649, 655, 659, 670, 684, 702, 716, 727, 760, 765, 779, 783, 784, 785, 786, 787, 788, 789, 797, 798, 802, 818, 820, 823, 830, 839, 844, 852, 865, 866, 867, 871, 874, 876, 878, 882, 883, 887, 888, 890, 891, 895, 896, 897, 935, 940], "40": [29, 31, 35, 36, 38, 39, 45, 47, 54, 59, 61, 66, 71, 72, 73, 84, 85, 95, 100, 102, 106, 107, 110, 117, 127, 130, 131, 133, 135, 136, 141, 148, 152, 162, 166, 167, 170, 171, 177, 181, 182, 184, 186, 192, 195, 197, 198, 207, 209, 210, 212, 214, 218, 222, 223, 227, 228, 229, 231, 232, 236, 237, 239, 242, 243, 255, 256, 257, 259, 260, 263, 264, 265, 269, 276, 277, 280, 300, 317, 320, 331, 332, 341, 504, 518, 550, 551, 560, 635, 647, 659, 660, 663, 735, 838, 865, 883, 888, 902, 955], "decim": [29, 31, 33, 37, 38, 39, 44, 45, 50, 59, 60, 67, 68, 130, 136, 139, 184, 187, 188, 192, 198, 207, 209, 212, 223, 230, 232, 237, 256, 257, 258, 259, 260, 269, 282, 283, 284, 285, 287, 288, 289, 291, 292, 295, 300, 301, 304, 308, 316, 320, 323, 326, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 376, 482, 496, 504, 524, 550, 551, 576, 594, 618, 619, 635, 652, 653, 693, 696, 752, 769, 783, 787, 791, 794, 810, 812, 813, 814, 815, 816, 817, 833, 853, 865, 888], "snr": [29, 31, 33, 36, 37, 45, 47, 53, 54, 55, 56, 62, 64, 65, 67, 74, 80, 81, 82, 87, 114, 117, 131, 136, 192, 203, 205, 207, 210, 218, 229, 251, 252, 263, 265, 285, 291, 295, 302, 312, 316, 320, 328, 333, 335, 336, 342, 412, 527, 601, 602, 610, 613, 615, 616, 691, 700, 702, 747, 833, 858, 892, 955], "fig": [29, 30, 31, 36, 37, 38, 39, 41, 44, 45, 47, 48, 50, 65, 67, 68, 71, 73, 78, 84, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 113, 120, 123, 126, 130, 131, 134, 136, 139, 140, 141, 142, 143, 145, 147, 151, 152, 153, 161, 162, 163, 167, 170, 172, 176, 177, 182, 183, 184, 185, 186, 192, 196, 198, 202, 203, 204, 206, 207, 208, 209, 211, 212, 218, 222, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 244, 245, 252, 255, 256, 257, 258, 259, 260, 269, 270, 273, 274, 291, 305, 328, 329, 330, 331, 332, 333, 334, 336, 340, 341, 344, 346, 347, 380, 381, 483, 490, 550, 551, 634, 635, 655, 783, 784, 785, 786, 788, 789, 835, 837, 844, 848, 851, 852, 853, 855, 856, 857, 858, 859, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 895, 896, 899, 905, 913, 914, 915, 916, 917, 918], "t_peak": [29, 209, 212], "ax": [29, 30, 36, 37, 38, 39, 41, 45, 47, 48, 63, 65, 67, 71, 73, 84, 94, 95, 96, 97, 98, 99, 100, 107, 108, 112, 117, 120, 123, 126, 131, 134, 139, 140, 141, 142, 143, 147, 149, 159, 161, 162, 163, 170, 171, 172, 176, 177, 182, 186, 187, 196, 198, 202, 203, 206, 207, 209, 212, 222, 223, 226, 229, 230, 233, 234, 237, 238, 239, 246, 252, 255, 256, 257, 258, 259, 260, 268, 269, 270, 273, 274, 278, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 300, 304, 305, 306, 307, 308, 320, 328, 329, 331, 332, 333, 334, 336, 340, 380, 381, 389, 394, 483, 490, 542, 550, 551, 634, 635, 655, 783, 785, 786, 788, 789, 801, 811, 834, 835, 837, 844, 848, 851, 852, 854, 857, 858, 859, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 880, 881, 883, 884, 885, 887, 889, 890, 891, 892, 895, 897], "axvlin": [29, 34, 36, 37, 39, 45, 71, 139, 170, 186, 212, 223, 237, 273, 274], "color": [29, 34, 35, 36, 37, 38, 39, 45, 47, 48, 64, 65, 71, 73, 74, 75, 76, 80, 81, 85, 97, 107, 108, 123, 124, 128, 131, 139, 140, 141, 142, 143, 147, 149, 158, 159, 161, 162, 163, 167, 168, 170, 175, 176, 177, 182, 186, 192, 194, 196, 197, 198, 201, 202, 203, 204, 207, 209, 211, 212, 222, 223, 226, 227, 229, 230, 233, 237, 238, 244, 245, 246, 252, 260, 265, 268, 269, 270, 273, 274, 278, 281, 283, 284, 286, 287, 288, 289, 291, 292, 293, 294, 295, 301, 303, 304, 305, 306, 319, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 439, 483, 490, 535, 536, 541, 542, 550, 551, 634, 635, 703, 704, 783, 785, 786, 788, 789, 801, 811, 833, 835, 843, 848, 850, 851, 852, 854, 857, 859, 862, 863, 864, 865, 866, 867, 868, 869, 871, 873, 874, 876, 877, 878, 883, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 901, 906, 929, 930], "k": [29, 33, 34, 35, 36, 37, 39, 40, 44, 45, 48, 54, 57, 64, 65, 67, 85, 92, 96, 97, 109, 124, 127, 131, 149, 168, 169, 184, 186, 202, 207, 212, 215, 222, 223, 229, 233, 244, 246, 259, 260, 268, 269, 270, 277, 299, 309, 319, 320, 328, 329, 331, 332, 333, 334, 337, 342, 350, 355, 364, 367, 369, 370, 483, 490, 545, 547, 548, 550, 551, 586, 601, 602, 634, 635, 655, 659, 702, 743, 764, 770, 771, 772, 774, 783, 785, 786, 788, 789, 801, 811, 820, 833, 848, 851, 852, 867, 873, 874, 877, 888, 890, 895, 896, 897, 940], "l": [29, 34, 45, 70, 75, 126, 154, 163, 170, 186, 198, 212, 215, 222, 232, 235, 237, 239, 260, 263, 269, 270, 273, 277, 304, 314, 317, 320, 322, 323, 343, 429, 450, 475, 476, 489, 602, 635, 643, 743, 814, 817, 853, 859, 880, 947, 953], "lw": [29, 45, 65, 170, 198, 207, 212, 222, 237, 239, 252, 280, 801, 811], "zorder": [29, 65, 186, 212, 283, 333, 334, 801, 811, 869, 872], "open": [29, 31, 37, 39, 40, 41, 42, 44, 54, 55, 58, 59, 60, 68, 71, 72, 75, 88, 95, 96, 97, 98, 99, 100, 101, 103, 106, 109, 110, 114, 119, 120, 123, 124, 126, 127, 130, 131, 134, 136, 137, 138, 140, 142, 144, 145, 148, 151, 158, 159, 161, 167, 168, 170, 172, 176, 177, 178, 181, 182, 187, 188, 191, 192, 193, 194, 195, 198, 203, 206, 208, 209, 223, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 243, 246, 251, 252, 257, 258, 259, 260, 263, 265, 269, 270, 273, 277, 283, 284, 292, 300, 303, 307, 310, 311, 317, 319, 330, 331, 332, 333, 334, 341, 344, 450, 550, 551, 635, 643, 748, 873, 878, 888, 896, 935, 939, 941, 945, 947, 948], "526631": 29, "526": [29, 223, 260], "631": [29, 30, 32, 260, 955], "readibandpass": [29, 34, 35, 38, 39, 40, 41, 42, 44, 47, 60, 68, 99, 103, 108, 114, 140, 142, 148, 159, 162, 167, 170, 172, 198, 223, 226, 228, 231, 232, 234, 238, 239, 240, 260, 270, 305, 331, 332, 333, 334, 485, 491, 494, 518, 519, 521, 550, 551, 674, 785, 786, 788, 789, 888, 889], "6601": [29, 31], "351": [29, 39, 107, 139, 195, 255], "origin": [29, 30, 31, 34, 35, 37, 38, 39, 42, 44, 47, 48, 50, 52, 58, 59, 60, 64, 67, 68, 71, 72, 75, 76, 97, 98, 99, 102, 105, 106, 107, 113, 120, 121, 123, 124, 127, 130, 134, 137, 139, 140, 141, 144, 145, 148, 149, 155, 161, 162, 163, 166, 167, 168, 170, 171, 172, 175, 177, 178, 182, 184, 185, 186, 187, 188, 192, 193, 195, 196, 198, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 240, 243, 245, 252, 257, 258, 259, 260, 263, 265, 268, 269, 286, 287, 291, 301, 308, 309, 316, 317, 319, 320, 323, 324, 325, 326, 328, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 344, 345, 346, 347, 349, 351, 352, 364, 365, 380, 429, 439, 483, 490, 497, 498, 499, 504, 507, 517, 544, 549, 550, 551, 559, 562, 566, 571, 587, 593, 603, 634, 635, 636, 645, 646, 650, 659, 670, 677, 685, 695, 699, 702, 707, 720, 722, 724, 732, 734, 735, 736, 743, 748, 768, 775, 783, 785, 786, 787, 788, 789, 829, 833, 851, 852, 859, 865, 867, 869, 871, 874, 875, 878, 885, 887, 888, 889, 890, 891, 894, 895, 897, 906, 927, 947, 949], "prior": [29, 37, 38, 44, 53, 54, 55, 56, 60, 62, 64, 65, 66, 70, 73, 78, 82, 83, 84, 87, 117, 131, 134, 135, 137, 140, 152, 168, 175, 177, 188, 192, 198, 204, 205, 206, 207, 212, 219, 223, 232, 235, 237, 239, 246, 251, 260, 263, 265, 286, 291, 292, 320, 328, 329, 333, 335, 336, 342, 364, 365, 527, 528, 545, 546, 547, 548, 550, 551, 568, 601, 602, 613, 635, 645, 659, 670, 691, 700, 702, 833, 862, 863, 888, 894, 955], "dens": [29, 161, 182, 183, 184, 186, 208, 209, 217, 277, 286, 323, 344, 376, 643, 833, 851], "pack": [29, 784], "rank": [29, 31, 33, 34, 35, 38, 41, 47, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 110, 114, 117, 120, 121, 131, 134, 135, 136, 137, 140, 148, 178, 188, 192, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 227, 231, 232, 233, 251, 252, 263, 265, 282, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 299, 301, 302, 307, 319, 328, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 491, 526, 527, 545, 547, 548, 607, 613, 635, 860, 875, 935], "toler": [29, 31, 34, 35, 47, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 117, 120, 121, 136, 148, 178, 188, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 229, 232, 233, 251, 252, 282, 291, 320, 427, 545, 547, 548, 635, 679], "5e": [29, 33, 34, 35, 39, 57, 58, 60, 61, 66, 67, 71, 75, 85, 103, 120, 136, 152, 167, 198, 209, 211, 212, 223, 235, 243, 252, 331, 332, 341, 526, 550, 551, 865, 888], "08": [29, 46, 60, 66, 68, 71, 76, 84, 85, 110, 118, 121, 130, 136, 139, 177, 186, 192, 200, 202, 203, 204, 205, 206, 209, 210, 212, 222, 223, 229, 234, 236, 242, 243, 248, 251, 252, 255, 257, 259, 260, 265, 277, 313, 955], "2e": [29, 31, 34, 35, 47, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 97, 101, 117, 120, 121, 136, 146, 148, 178, 188, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 251, 252, 647, 648], "ep": [29, 31, 34, 35, 47, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 117, 120, 121, 136, 148, 178, 188, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 251, 252, 602], "dim": [29, 31, 34, 35, 47, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 117, 120, 121, 136, 148, 178, 186, 188, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 251, 252, 268, 328, 608, 609, 618, 619, 636, 787], "8e": [29, 34, 35, 58, 61, 75, 101, 136, 148, 188, 198, 203, 206, 209, 211, 218, 223], "max": [29, 30, 31, 34, 35, 45, 47, 48, 57, 58, 59, 60, 61, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 87, 107, 110, 117, 120, 121, 123, 127, 134, 136, 139, 142, 143, 148, 162, 167, 170, 176, 178, 183, 186, 188, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 222, 223, 230, 237, 240, 243, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 265, 274, 278, 282, 287, 292, 301, 303, 322, 328, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 364, 365, 389, 427, 483, 485, 490, 494, 516, 517, 519, 521, 550, 551, 584, 611, 612, 617, 634, 635, 661, 665, 674, 679, 770, 771, 772, 773, 774, 776, 783, 785, 786, 788, 789, 801, 811, 833, 842, 844, 852, 866, 867, 874, 878, 887, 889, 890, 893, 895, 896, 897, 898, 906, 953], "singular": [29, 31, 34, 35, 47, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 117, 120, 121, 136, 148, 178, 188, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 233, 251, 252, 320, 328, 338, 339, 342, 345, 346, 347, 427, 517, 610, 860], "valu": [29, 30, 31, 33, 34, 35, 36, 42, 45, 47, 48, 50, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 84, 85, 86, 96, 98, 117, 120, 121, 123, 128, 130, 131, 136, 139, 141, 147, 148, 149, 157, 158, 161, 162, 163, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 182, 186, 188, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 222, 223, 228, 229, 230, 232, 233, 234, 237, 238, 239, 243, 245, 250, 251, 252, 255, 256, 257, 259, 260, 263, 264, 265, 268, 269, 273, 274, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 316, 317, 319, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 354, 355, 364, 365, 367, 369, 370, 374, 377, 378, 382, 389, 393, 395, 398, 417, 418, 423, 424, 426, 427, 428, 429, 434, 437, 438, 439, 440, 441, 445, 456, 475, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 502, 504, 505, 507, 511, 512, 516, 517, 521, 522, 523, 524, 525, 526, 527, 528, 531, 536, 539, 541, 542, 545, 547, 548, 550, 551, 552, 553, 559, 561, 566, 570, 574, 576, 580, 581, 587, 589, 590, 593, 594, 596, 597, 598, 601, 602, 606, 608, 609, 610, 611, 612, 613, 616, 618, 619, 623, 634, 635, 636, 637, 638, 640, 641, 644, 647, 648, 650, 651, 652, 653, 655, 659, 661, 662, 665, 666, 668, 676, 678, 679, 681, 685, 687, 693, 697, 700, 704, 713, 720, 723, 724, 726, 727, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 756, 759, 761, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 781, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 801, 803, 804, 811, 812, 813, 814, 815, 816, 820, 821, 823, 833, 835, 837, 843, 851, 852, 854, 857, 859, 860, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 878, 879, 886, 887, 888, 889, 890, 893, 895, 896, 897, 898, 899, 900, 905, 906, 907, 933, 935, 955], "113": [29, 30, 61, 139, 195, 233, 234, 235, 242, 243, 248, 255, 259, 260, 277, 955], "small": [29, 30, 31, 37, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 97, 102, 117, 120, 121, 131, 134, 135, 136, 137, 148, 155, 161, 167, 168, 178, 188, 192, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 223, 229, 230, 232, 234, 245, 251, 252, 255, 257, 263, 265, 273, 282, 283, 295, 309, 317, 319, 320, 323, 328, 329, 331, 332, 333, 334, 337, 340, 388, 423, 483, 490, 550, 551, 567, 634, 635, 637, 688, 694, 770, 771, 773, 774, 776, 783, 785, 786, 788, 789, 863, 867, 874, 878, 887, 890, 895, 897, 935], "eigenvalu": [29, 31, 47, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 117, 120, 121, 131, 134, 135, 136, 137, 148, 178, 188, 192, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 251, 252, 263, 265, 320, 328, 483, 797], "without": [29, 31, 57, 58, 59, 60, 61, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 80, 81, 84, 85, 86, 97, 102, 117, 120, 121, 131, 134, 136, 140, 147, 148, 170, 175, 176, 177, 178, 185, 187, 188, 191, 196, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 227, 228, 229, 231, 232, 233, 234, 235, 237, 245, 251, 252, 255, 270, 273, 278, 283, 284, 285, 289, 291, 292, 293, 294, 295, 297, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 316, 318, 320, 323, 326, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 358, 359, 362, 364, 365, 393, 394, 423, 427, 428, 439, 440, 441, 442, 483, 490, 513, 514, 515, 516, 524, 526, 527, 545, 547, 548, 550, 551, 559, 566, 571, 572, 594, 604, 606, 609, 613, 628, 659, 677, 693, 695, 699, 700, 717, 777, 784, 823, 833, 870, 875, 893, 898, 905, 935, 940, 949], "reduc": [29, 31, 34, 35, 38, 41, 42, 47, 53, 60, 66, 68, 72, 75, 81, 85, 98, 104, 110, 111, 114, 131, 134, 135, 136, 137, 141, 147, 148, 172, 175, 177, 183, 184, 188, 193, 198, 203, 206, 208, 209, 211, 212, 218, 222, 223, 230, 231, 232, 233, 234, 235, 237, 239, 243, 251, 257, 258, 260, 263, 264, 265, 269, 277, 283, 285, 286, 288, 291, 292, 293, 294, 297, 303, 304, 305, 306, 308, 309, 319, 320, 328, 331, 332, 333, 334, 335, 338, 339, 342, 345, 346, 347, 364, 365, 423, 427, 428, 439, 440, 441, 458, 483, 484, 490, 496, 499, 500, 506, 518, 524, 526, 527, 545, 547, 548, 550, 551, 605, 608, 609, 613, 618, 619, 634, 635, 668, 678, 725, 770, 771, 773, 774, 791, 794, 810, 812, 813, 814, 815, 816, 817, 869, 874, 875, 935, 955], "empir": [29, 31, 34, 35, 41, 53, 57, 62, 72, 75, 82, 114, 120, 148, 188, 203, 206, 208, 209, 211, 212, 223, 237, 251, 277, 302, 328, 333, 334, 335, 336, 342, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 491, 526, 527, 545, 546, 547, 548, 613, 636, 691, 700, 702, 862, 863, 875, 894, 955], "36157": 29, "so": [29, 33, 36, 54, 57, 58, 64, 66, 70, 73, 90, 94, 97, 98, 102, 109, 120, 121, 122, 130, 131, 134, 136, 141, 142, 149, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 181, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 206, 207, 208, 209, 210, 212, 217, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 259, 260, 263, 264, 265, 269, 270, 273, 274, 283, 284, 285, 289, 292, 297, 303, 304, 305, 307, 309, 310, 316, 318, 319, 320, 323, 331, 332, 333, 334, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 356, 357, 358, 365, 380, 402, 429, 436, 456, 460, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 514, 515, 517, 518, 522, 550, 551, 553, 570, 575, 602, 608, 621, 635, 636, 637, 645, 646, 660, 670, 671, 688, 700, 722, 729, 731, 770, 771, 773, 774, 785, 786, 788, 789, 823, 828, 833, 834, 843, 845, 869, 878, 880, 882, 888, 915, 926, 935, 940, 944, 947, 948, 949], "let": [29, 30, 36, 44, 47, 52, 58, 73, 81, 97, 98, 100, 113, 136, 140, 148, 161, 162, 166, 167, 168, 170, 172, 176, 177, 178, 182, 184, 185, 186, 188, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 215, 216, 223, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 239, 240, 243, 252, 255, 259, 260, 263, 264, 265, 269, 270, 273, 295, 309, 587, 801, 811, 834, 944], "care": [29, 54, 60, 167, 176, 177, 186, 229, 232, 233, 243, 245, 302, 320, 331, 332, 333, 334, 441, 548, 550, 551, 769], "ahead": [29, 187, 309], "tol": [29, 60, 66, 72, 85, 101, 198, 295, 427, 526, 545, 547, 548], "1e": [29, 31, 34, 35, 58, 59, 60, 66, 71, 72, 75, 85, 91, 92, 97, 98, 101, 108, 120, 121, 141, 147, 148, 163, 184, 188, 205, 206, 209, 211, 212, 223, 228, 229, 251, 252, 255, 285, 319, 331, 332, 341, 545, 550, 551, 602, 634, 644, 668, 749, 776, 783, 865, 888, 890, 895], "tol_kind": [29, 60, 292, 427], "rel": [29, 36, 50, 58, 59, 60, 68, 88, 102, 112, 136, 139, 140, 163, 166, 168, 170, 182, 192, 194, 196, 212, 216, 219, 226, 229, 230, 234, 237, 238, 239, 245, 269, 270, 273, 282, 284, 285, 287, 291, 294, 309, 316, 319, 320, 323, 324, 326, 330, 331, 332, 333, 334, 377, 427, 434, 489, 504, 507, 519, 550, 551, 598, 635, 665, 668, 684, 720, 722, 739, 776, 783, 787, 790, 791, 792, 804, 833, 848, 853, 868, 873, 882, 886, 888, 896], "shrunk": [29, 33, 57, 60, 66, 67, 68, 71, 85, 148, 178, 188, 203, 209, 423], "91": [29, 34, 45, 52, 61, 67, 71, 73, 76, 98, 105, 106, 111, 135, 136, 139, 141, 144, 177, 182, 184, 188, 195, 202, 207, 208, 223, 227, 234, 235, 236, 237, 238, 255, 256, 259, 260, 277, 403, 955], "our": [29, 30, 31, 45, 52, 53, 68, 70, 89, 94, 97, 101, 106, 110, 120, 130, 136, 139, 141, 142, 147, 148, 149, 161, 162, 163, 166, 167, 168, 170, 171, 172, 176, 177, 182, 186, 192, 194, 197, 198, 201, 206, 207, 209, 210, 212, 223, 226, 227, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 250, 252, 255, 257, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 281, 304, 305, 306, 309, 310, 311, 312, 316, 320, 321, 344, 523, 524, 610, 801, 811, 829, 935, 941, 943, 944, 945, 946, 949, 953], "align": [29, 31, 33, 35, 54, 106, 161, 177, 181, 183, 184, 189, 190, 191, 194, 198, 208, 209, 210, 217, 243, 255, 285, 288, 289, 292, 294, 295, 303, 304, 305, 307, 319, 320, 325, 329, 331, 332, 336, 338, 339, 342, 343, 344, 345, 346, 347, 370, 376, 380, 434, 436, 460, 502, 517, 542, 550, 570, 598, 635, 667, 712, 713, 715, 732, 821, 822, 823, 833, 851, 863, 865, 903, 955], "sphere": [29, 31, 50, 52, 61, 67, 69, 71, 74, 76, 85, 94, 98, 110, 120, 121, 136, 147, 151, 153, 161, 182, 184, 185, 186, 202, 204, 207, 208, 209, 210, 211, 212, 216, 227, 235, 236, 237, 277, 284, 285, 286, 287, 291, 292, 294, 303, 304, 305, 319, 323, 328, 329, 331, 332, 333, 334, 336, 337, 340, 342, 364, 365, 370, 373, 374, 380, 429, 482, 483, 490, 526, 550, 551, 563, 593, 596, 598, 634, 635, 644, 650, 732, 746, 749, 783, 785, 786, 788, 789, 833, 851, 852, 859, 863, 867, 869, 871, 874, 875, 878, 885, 887, 889, 890, 891, 894, 895, 897, 905], "r0": [29, 110, 153, 182, 209, 210, 211, 212, 598], "head_radiu": [29, 110, 153, 182, 209, 210, 211, 212, 291, 598], "tran": [29, 31, 33, 52, 67, 76, 77, 78, 86, 95, 107, 136, 142, 143, 145, 152, 153, 161, 162, 176, 183, 184, 185, 186, 198, 202, 204, 207, 208, 209, 212, 217, 218, 235, 238, 274, 286, 293, 295, 301, 305, 316, 317, 319, 320, 323, 329, 341, 344, 372, 380, 434, 435, 457, 460, 502, 504, 526, 534, 542, 593, 596, 597, 666, 670, 715, 748, 751, 778, 819, 820, 822, 833, 851, 863, 934], "align_kwarg": 29, "outer_skin": [29, 107, 136, 145, 182, 184, 185, 187, 198, 316, 317, 320, 851], "show_ax": [29, 107, 151, 153, 182, 183, 185, 208, 209, 212, 286, 381, 851, 884], "coord_fram": [29, 50, 136, 145, 151, 152, 153, 161, 162, 182, 183, 184, 185, 195, 196, 204, 208, 209, 210, 212, 217, 237, 329, 335, 336, 344, 380, 393, 398, 504, 555, 585, 645, 646, 659, 670, 833, 851, 863], "equiv": [29, 182, 209, 210, 211, 212, 235], "rv": [29, 182, 209, 210, 211, 212, 235, 317], "00364477": [29, 209, 210, 211, 212], "mu1": [29, 182, 209, 210, 211, 212, 235], "944121": [29, 209, 210, 211, 212], "lambda1": [29, 182, 209, 210, 211, 212, 235], "138646": [29, 209, 210, 211, 212], "mu2": [29, 182, 209, 210, 211, 212, 235], "665982": [29, 209, 210, 211, 212], "lambda2": [29, 31, 33, 37, 54, 55, 56, 64, 65, 66, 67, 71, 73, 74, 76, 80, 81, 84, 85, 87, 98, 117, 121, 131, 135, 136, 182, 192, 203, 205, 207, 209, 210, 211, 212, 218, 235, 251, 263, 265, 316, 602, 603, 604, 605, 606, 608, 609, 614, 615, 618, 619, 644], "684475": [29, 209, 210, 211, 212], "mu3": [29, 182, 209, 210, 211, 212, 235], "140083": [29, 209, 210, 211, 212], "lambda3": [29, 182, 209, 210, 211, 212, 235], "0127517": [29, 209, 210, 211, 212], "scalp": [29, 30, 45, 53, 97, 98, 102, 105, 150, 156, 168, 170, 175, 177, 181, 182, 184, 192, 196, 197, 209, 210, 211, 212, 217, 226, 227, 232, 234, 235, 237, 238, 239, 246, 250, 268, 277, 284, 291, 295, 316, 317, 319, 320, 323, 331, 332, 333, 334, 336, 376, 502, 542, 550, 551, 598, 635, 644, 674, 715, 727, 785, 786, 788, 789, 833, 851, 867, 889, 903, 935, 942, 945, 948, 955], "radiu": [29, 30, 31, 50, 52, 67, 71, 76, 97, 98, 105, 106, 120, 121, 136, 177, 182, 184, 185, 196, 202, 207, 208, 209, 210, 211, 212, 227, 234, 235, 237, 251, 278, 295, 306, 320, 328, 331, 332, 333, 334, 336, 340, 370, 373, 380, 394, 396, 398, 483, 490, 503, 541, 550, 551, 587, 598, 617, 634, 635, 644, 650, 732, 735, 778, 783, 785, 786, 788, 789, 852, 859, 867, 869, 871, 874, 875, 878, 885, 887, 889, 890, 891, 895, 897], "80": [29, 31, 35, 39, 42, 45, 56, 57, 59, 61, 64, 65, 66, 67, 70, 71, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 97, 105, 106, 107, 112, 113, 117, 121, 135, 139, 141, 142, 143, 145, 146, 147, 153, 175, 177, 182, 184, 194, 195, 197, 198, 202, 204, 205, 207, 209, 210, 211, 212, 218, 223, 234, 236, 237, 238, 242, 255, 256, 257, 259, 260, 265, 273, 274, 277, 296, 482, 635, 735, 876, 883, 947, 955], "get": [29, 30, 31, 33, 41, 44, 45, 47, 48, 52, 53, 54, 60, 64, 65, 67, 73, 74, 76, 78, 87, 89, 90, 92, 93, 96, 97, 99, 106, 107, 109, 110, 121, 122, 123, 124, 130, 134, 136, 140, 141, 143, 147, 151, 152, 161, 162, 166, 167, 168, 169, 170, 172, 175, 176, 177, 181, 182, 183, 184, 186, 188, 191, 192, 193, 195, 196, 199, 200, 201, 206, 207, 209, 210, 211, 212, 219, 226, 227, 228, 229, 230, 232, 234, 240, 243, 245, 246, 255, 257, 259, 260, 265, 268, 269, 273, 274, 277, 285, 288, 289, 291, 292, 294, 295, 298, 299, 302, 304, 309, 310, 312, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 355, 370, 374, 378, 379, 380, 390, 391, 410, 411, 427, 434, 440, 441, 444, 447, 448, 449, 450, 452, 453, 454, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 500, 503, 507, 512, 518, 524, 532, 535, 538, 542, 550, 551, 557, 582, 591, 601, 611, 612, 624, 635, 636, 642, 644, 653, 655, 700, 732, 733, 752, 754, 762, 775, 778, 783, 784, 785, 786, 787, 788, 789, 801, 811, 820, 833, 834, 859, 866, 868, 881, 938, 940, 941, 943, 945, 946, 947, 950, 955], "kernel_flux": 29, "deform": [29, 186, 196, 277], "cad": 29, "acquisit": [29, 88, 182, 186, 194, 215, 216, 217, 218, 234, 243, 277, 283, 286, 287, 288, 291, 295, 308, 316, 319, 320, 324, 325, 331, 332, 333, 334, 336, 350, 524, 550, 551, 552, 659, 670, 684, 748, 951], "affin": [29, 70, 182, 206, 208, 288, 305, 307, 319, 320, 343, 429, 436, 667, 706, 714, 821, 822, 823], "nonlinear": [29, 70, 126, 277, 769], "displac": 29, "do": [29, 30, 31, 41, 42, 44, 50, 52, 53, 57, 60, 66, 67, 71, 73, 76, 77, 80, 81, 84, 85, 86, 87, 92, 94, 97, 101, 109, 136, 139, 141, 142, 147, 162, 163, 166, 167, 170, 175, 176, 177, 182, 183, 184, 185, 186, 187, 188, 192, 194, 197, 198, 201, 202, 203, 206, 208, 209, 210, 211, 212, 215, 216, 218, 219, 222, 223, 227, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 243, 245, 250, 251, 252, 255, 260, 263, 264, 265, 269, 270, 273, 277, 283, 284, 286, 287, 288, 289, 291, 292, 295, 304, 306, 307, 309, 310, 312, 316, 317, 320, 323, 324, 325, 326, 328, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 345, 346, 347, 350, 354, 371, 375, 377, 387, 394, 423, 427, 434, 439, 440, 450, 456, 475, 476, 494, 495, 496, 502, 504, 512, 517, 518, 524, 533, 541, 547, 548, 550, 551, 559, 566, 597, 602, 603, 604, 605, 606, 608, 609, 618, 619, 626, 627, 628, 632, 633, 635, 636, 637, 638, 646, 652, 653, 659, 670, 687, 690, 697, 700, 701, 719, 721, 723, 770, 771, 773, 774, 778, 783, 785, 786, 787, 788, 789, 801, 802, 811, 823, 860, 864, 865, 876, 895, 925, 928, 930, 938, 940, 944, 946, 947, 949, 950], "great": [29, 30, 147, 170, 177, 270, 318], "dev_head_t": [29, 53, 104, 106, 111, 182, 192, 195, 212, 243, 284, 295, 303, 325, 336, 383, 413, 414, 432, 443, 564, 639, 642, 646, 659, 670, 734, 735, 736, 748, 851, 877, 903, 955], "approxim": [29, 52, 94, 196, 232, 243, 255, 277, 283, 287, 288, 319, 320, 323, 328, 331, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 380, 483, 490, 504, 519, 520, 522, 534, 550, 551, 634, 635, 646, 650, 659, 670, 731, 783, 785, 786, 788, 789, 797, 852, 859, 860, 867, 869, 871, 874, 875, 878, 885, 887, 889, 890, 891, 895, 897], "coverag": [29, 136, 317], "list": [29, 30, 35, 36, 37, 42, 54, 67, 69, 71, 73, 94, 96, 110, 121, 130, 131, 134, 138, 139, 140, 142, 143, 144, 158, 163, 166, 170, 171, 175, 176, 177, 187, 192, 194, 195, 196, 197, 198, 201, 203, 209, 211, 215, 218, 227, 228, 229, 232, 233, 234, 237, 238, 240, 243, 245, 246, 250, 251, 252, 255, 256, 257, 259, 260, 264, 265, 273, 274, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 307, 308, 309, 310, 312, 313, 314, 316, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 354, 356, 357, 358, 359, 362, 364, 365, 367, 369, 371, 373, 374, 378, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 394, 395, 397, 405, 406, 409, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 434, 436, 439, 440, 441, 443, 450, 456, 462, 464, 475, 476, 483, 485, 489, 490, 493, 495, 498, 499, 500, 502, 504, 505, 506, 507, 508, 510, 514, 515, 517, 518, 521, 522, 524, 525, 529, 531, 533, 535, 536, 537, 538, 539, 540, 541, 545, 546, 547, 548, 549, 550, 551, 555, 559, 561, 563, 566, 567, 568, 570, 574, 575, 576, 578, 581, 584, 589, 591, 592, 593, 596, 599, 600, 604, 606, 609, 611, 612, 618, 619, 621, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 643, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 659, 661, 662, 666, 669, 670, 671, 676, 678, 681, 685, 687, 690, 692, 694, 696, 697, 700, 701, 702, 705, 708, 715, 717, 723, 724, 727, 732, 733, 746, 749, 750, 751, 752, 760, 763, 764, 766, 768, 769, 770, 771, 773, 774, 775, 778, 779, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 801, 802, 807, 810, 811, 816, 818, 819, 830, 832, 833, 834, 835, 838, 839, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 884, 885, 886, 887, 889, 890, 891, 893, 894, 895, 897, 898, 899, 907, 914, 918, 923, 926, 930, 931, 935, 944, 948, 949, 950], "ii": [29, 36, 41, 45, 65, 120, 126, 134, 146, 161, 185, 209, 211, 217, 222, 239, 255, 265, 277, 293, 338, 339, 342, 345, 346, 347, 388, 486, 493, 560, 635, 732, 769, 852], "str": [29, 36, 56, 65, 67, 128, 155, 169, 171, 176, 197, 209, 212, 222, 256, 270, 278, 289, 292, 309, 312, 319, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 597, 598, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 676, 677, 678, 679, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 737, 739, 740, 741, 742, 743, 745, 746, 747, 748, 749, 751, 753, 754, 755, 756, 757, 758, 759, 760, 762, 764, 766, 769, 770, 771, 772, 773, 774, 775, 776, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 802, 803, 804, 807, 808, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 825, 828, 829, 830, 832, 833, 835, 837, 839, 842, 844, 845, 847, 850, 851, 852, 853, 854, 855, 856, 859, 860, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 902, 903, 904, 906, 907, 908, 909, 910, 911, 912, 914, 915, 916, 917, 918, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934], "append": [29, 33, 34, 36, 42, 69, 70, 71, 73, 88, 95, 102, 106, 140, 163, 176, 198, 209, 222, 227, 232, 234, 238, 243, 255, 259, 260, 265, 280, 285, 286, 287, 288, 291, 295, 307, 309, 325, 331, 332, 333, 334, 337, 550, 551, 635, 650, 659, 670, 728, 760, 783, 784, 785, 786, 787, 788, 789, 805], "del": [29, 31, 44, 59, 67, 68, 72, 73, 74, 75, 76, 80, 81, 136, 140, 162, 163, 166, 168, 171, 175, 192, 198, 203, 205, 206, 207, 209, 210, 212, 218, 223, 229, 232, 240], "dip": [29, 61, 66, 85, 110, 143, 202, 207, 209, 210, 211, 212, 238, 270, 292, 298, 329, 526, 692], "residu": [29, 31, 54, 56, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 80, 81, 84, 85, 86, 87, 97, 102, 117, 121, 192, 203, 204, 205, 207, 208, 209, 210, 212, 218, 223, 232, 236, 251, 252, 263, 265, 287, 291, 367, 369, 526, 545, 547, 548, 602, 858], "actual_po": [29, 110, 209, 211, 212], "actual_ori": [29, 209, 212], "actual_amp": [29, 204, 209, 211, 212], "ones": [29, 57, 109, 114, 138, 167, 196, 204, 209, 211, 212, 215, 233, 234, 255, 270, 283, 287, 309, 320, 324, 337, 457, 518, 543, 544, 550, 551, 593, 637, 659, 704, 710, 717, 768, 914, 935], "len": [29, 35, 36, 41, 42, 44, 45, 54, 58, 65, 67, 68, 69, 71, 73, 78, 90, 94, 95, 97, 99, 101, 117, 120, 127, 141, 144, 163, 166, 169, 170, 182, 185, 194, 202, 204, 209, 211, 212, 218, 222, 226, 227, 228, 229, 230, 232, 234, 235, 237, 238, 239, 240, 244, 251, 252, 255, 256, 257, 259, 260, 270, 283, 284, 325, 326, 328, 329, 331, 332, 333, 334, 336, 342, 343, 344, 355, 370, 422, 429, 485, 493, 518, 521, 550, 551, 601, 655, 732, 763, 785, 786, 787, 801, 811, 820, 833, 839, 866, 888, 896, 897], "fake": [29, 90, 97, 185, 204, 208, 209, 211], "amp": [29, 177, 204, 209, 211, 212, 304, 323], "instanc": [29, 31, 41, 52, 57, 69, 70, 71, 76, 101, 109, 114, 136, 141, 184, 185, 192, 195, 197, 198, 202, 204, 208, 209, 211, 212, 215, 216, 218, 231, 232, 233, 235, 237, 239, 240, 243, 268, 274, 278, 282, 283, 286, 287, 288, 289, 291, 292, 293, 295, 299, 300, 301, 302, 303, 305, 307, 308, 309, 318, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 380, 381, 382, 384, 385, 387, 393, 396, 398, 399, 401, 402, 403, 404, 405, 406, 409, 410, 412, 414, 415, 416, 417, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 437, 439, 440, 441, 443, 447, 448, 449, 451, 452, 453, 454, 456, 461, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 504, 505, 506, 507, 508, 512, 513, 514, 515, 516, 517, 518, 524, 526, 527, 528, 529, 530, 537, 540, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 587, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 602, 603, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 622, 624, 626, 627, 628, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 677, 678, 682, 683, 684, 685, 687, 688, 689, 692, 693, 694, 695, 696, 699, 702, 704, 711, 714, 723, 724, 727, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 768, 769, 770, 771, 772, 773, 774, 775, 778, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 802, 805, 806, 821, 822, 823, 825, 830, 833, 834, 835, 836, 837, 843, 844, 848, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 901, 905, 906, 922, 926, 930, 932], "actual_gof": [29, 204, 209, 211, 212], "gof": [29, 31, 66, 143, 195, 202, 204, 209, 210, 211, 212, 285, 292, 329, 331, 332, 333, 334, 367, 369, 379, 411, 413, 414, 415, 550, 551, 632, 783, 785, 786, 787, 788, 789, 863], "dip_tru": [29, 209, 211, 212], "arrow": [29, 182, 186, 187, 204, 209, 212, 226, 230, 233, 246, 286, 287, 288, 292, 304, 320, 328, 329, 331, 332, 333, 334, 339, 340, 345, 346, 347, 483, 490, 550, 551, 634, 635, 783, 785, 786, 788, 789, 833, 852, 863, 865, 866, 867, 871, 874, 877, 878, 887, 888, 890, 895, 897, 898, 899], "azimuth": [29, 31, 50, 107, 136, 142, 143, 145, 152, 153, 161, 162, 182, 183, 184, 186, 196, 204, 207, 209, 212, 217, 238, 252, 295, 833, 903], "elev": [29, 31, 50, 107, 136, 142, 143, 145, 152, 153, 161, 162, 182, 183, 184, 186, 196, 207, 209, 212, 217, 226, 233, 238, 252, 295, 833, 903], "70": [29, 31, 35, 38, 39, 41, 45, 47, 60, 67, 71, 72, 73, 84, 85, 107, 114, 117, 128, 130, 131, 135, 136, 139, 141, 143, 162, 166, 169, 170, 182, 184, 185, 192, 195, 196, 209, 210, 212, 223, 229, 232, 236, 238, 255, 256, 259, 260, 263, 268, 270, 277, 285, 331, 332, 333, 334, 403, 548, 550, 551, 635, 785, 788, 801, 804, 811, 812, 815], "distanc": [29, 31, 37, 48, 50, 54, 55, 57, 61, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 106, 117, 119, 120, 121, 122, 131, 134, 135, 136, 137, 143, 152, 155, 157, 161, 162, 169, 182, 183, 184, 185, 186, 187, 192, 196, 197, 198, 202, 203, 204, 205, 207, 209, 212, 217, 218, 219, 223, 229, 236, 238, 240, 251, 252, 263, 265, 274, 278, 282, 285, 286, 288, 289, 291, 292, 293, 295, 298, 300, 302, 319, 320, 323, 328, 331, 332, 333, 334, 336, 337, 340, 341, 342, 344, 349, 372, 413, 434, 483, 486, 490, 493, 502, 504, 526, 535, 541, 542, 550, 551, 587, 597, 617, 634, 635, 639, 643, 646, 650, 655, 657, 659, 670, 675, 676, 722, 731, 732, 740, 743, 746, 748, 749, 751, 753, 754, 755, 757, 758, 770, 771, 773, 774, 778, 783, 785, 786, 788, 789, 833, 852, 855, 867, 874, 878, 887, 890, 895, 897, 903], "layer": [29, 31, 71, 136, 184, 185, 208, 209, 210, 211, 212, 227, 277, 286, 289, 316, 320, 375, 457, 591, 598, 732, 740, 745, 851], "r": [29, 30, 34, 36, 38, 45, 47, 54, 63, 65, 67, 69, 75, 97, 107, 108, 123, 124, 126, 142, 162, 163, 167, 171, 182, 186, 192, 202, 206, 207, 209, 210, 211, 212, 222, 223, 227, 229, 231, 232, 234, 238, 239, 244, 251, 255, 259, 260, 265, 270, 273, 277, 304, 317, 319, 320, 323, 328, 329, 330, 331, 332, 333, 334, 336, 340, 343, 367, 429, 450, 483, 489, 490, 518, 550, 551, 585, 602, 610, 634, 635, 644, 647, 649, 650, 652, 660, 743, 767, 770, 771, 776, 777, 783, 785, 786, 787, 788, 789, 814, 817, 833, 852, 853, 859, 863, 867, 874, 878, 883, 887, 890, 895, 897], "ident": [29, 31, 71, 97, 126, 136, 153, 161, 176, 182, 184, 186, 192, 209, 210, 211, 212, 222, 232, 235, 237, 239, 293, 295, 308, 316, 317, 318, 319, 320, 329, 336, 343, 344, 372, 443, 460, 507, 585, 593, 596, 597, 608, 610, 659, 668, 670, 692, 748, 778, 801, 811, 820, 851], "rad": [29, 31, 71, 202, 207, 209, 210, 211, 212, 319, 658, 732], "guess": [29, 31, 71, 151, 197, 202, 207, 209, 210, 211, 212, 232, 236, 300, 323, 542, 562, 848], "grid": [29, 31, 50, 66, 67, 71, 76, 140, 142, 151, 161, 181, 182, 184, 202, 204, 206, 207, 209, 210, 211, 212, 222, 223, 235, 236, 239, 255, 257, 273, 285, 287, 292, 316, 317, 320, 323, 341, 343, 344, 395, 547, 635, 666, 732, 784, 861, 878, 881], "mindist": [29, 31, 50, 67, 71, 76, 182, 184, 185, 202, 207, 209, 210, 211, 212, 235, 597, 732, 748], "normal": [29, 31, 37, 41, 42, 44, 48, 50, 52, 54, 55, 56, 57, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 80, 81, 84, 85, 87, 95, 97, 117, 119, 121, 131, 134, 135, 136, 137, 140, 141, 142, 143, 162, 163, 168, 169, 181, 182, 183, 184, 186, 187, 195, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 223, 233, 234, 237, 250, 251, 252, 263, 265, 269, 270, 277, 282, 285, 286, 287, 289, 291, 292, 295, 299, 300, 303, 306, 309, 310, 319, 322, 324, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 344, 345, 346, 347, 351, 352, 364, 365, 381, 389, 427, 433, 483, 485, 488, 490, 517, 526, 545, 547, 548, 550, 551, 553, 571, 602, 603, 604, 605, 606, 608, 609, 611, 612, 613, 618, 619, 634, 635, 645, 649, 666, 695, 699, 723, 732, 736, 747, 748, 765, 783, 785, 786, 788, 789, 797, 801, 803, 811, 834, 852, 867, 874, 878, 886, 887, 890, 895, 897, 947], "definit": [29, 31, 52, 67, 71, 76, 136, 184, 185, 186, 187, 188, 202, 207, 208, 209, 210, 211, 212, 229, 235, 257, 277, 284, 291, 292, 302, 310, 316, 319, 321, 323, 336, 341, 364, 365, 388, 390, 397, 526, 550, 649, 670, 716, 827, 833], "nois": [29, 30, 31, 33, 37, 44, 47, 53, 54, 55, 56, 57, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 89, 93, 97, 101, 108, 110, 114, 117, 120, 121, 122, 131, 134, 135, 136, 137, 141, 147, 150, 152, 156, 170, 172, 175, 177, 178, 188, 192, 198, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 218, 222, 223, 227, 229, 231, 235, 237, 243, 246, 252, 255, 263, 265, 277, 285, 286, 288, 292, 297, 299, 302, 319, 323, 328, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 364, 365, 367, 369, 416, 422, 423, 424, 425, 426, 427, 428, 439, 440, 441, 483, 490, 491, 506, 526, 527, 545, 547, 548, 550, 551, 556, 590, 602, 608, 609, 613, 615, 618, 619, 635, 636, 649, 670, 678, 679, 691, 697, 735, 736, 737, 747, 785, 786, 788, 789, 813, 816, 860, 865, 869, 873, 875, 888, 889, 924, 935, 955], "shape": [29, 31, 34, 42, 45, 48, 57, 67, 71, 73, 76, 79, 90, 91, 92, 97, 124, 141, 142, 147, 162, 163, 166, 172, 175, 183, 184, 186, 196, 201, 207, 209, 210, 211, 212, 215, 222, 223, 229, 243, 250, 255, 256, 257, 259, 260, 263, 264, 265, 268, 269, 270, 287, 316, 319, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 354, 364, 365, 366, 372, 373, 374, 380, 381, 382, 386, 389, 393, 397, 407, 413, 417, 418, 419, 420, 421, 432, 434, 438, 439, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 507, 511, 512, 517, 519, 521, 524, 525, 526, 527, 528, 541, 542, 543, 544, 545, 547, 550, 551, 554, 562, 576, 589, 591, 593, 595, 600, 610, 611, 612, 614, 617, 618, 619, 630, 634, 635, 636, 638, 639, 640, 642, 643, 644, 645, 646, 650, 655, 656, 657, 659, 662, 667, 668, 670, 675, 676, 684, 685, 694, 696, 697, 713, 716, 719, 720, 721, 722, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 750, 751, 760, 762, 763, 764, 768, 769, 770, 771, 772, 773, 774, 781, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 797, 800, 801, 803, 804, 808, 810, 811, 812, 813, 814, 815, 816, 820, 821, 822, 823, 824, 826, 832, 833, 837, 838, 839, 850, 851, 852, 854, 855, 856, 859, 865, 866, 867, 868, 869, 871, 874, 875, 877, 878, 880, 881, 885, 887, 889, 890, 891, 893, 895, 896, 897, 898, 899, 903, 905, 925, 928, 933, 948], "9e": [29, 34, 35, 47, 68, 75, 113, 152, 176, 178, 188, 203, 206, 208, 209, 210, 211, 223, 251, 274], "6e": [29, 34, 35, 60, 68, 72, 146, 148, 178, 198, 203, 209, 211, 212, 223], "n_sampl": [29, 31, 71, 79, 91, 124, 163, 209, 210, 211, 212, 223, 250, 255, 309, 483, 484, 485, 486, 487, 488, 490, 491, 493, 494, 495, 496, 497, 498, 500, 525, 618, 619, 636, 668, 733, 762, 769, 772], "36156": 29, "ra": [29, 31, 50, 52, 67, 69, 71, 76, 136, 161, 182, 184, 185, 187, 202, 206, 207, 209, 210, 211, 212, 235, 285, 287, 289, 292, 294, 305, 317, 319, 320, 329, 338, 339, 342, 344, 345, 346, 347, 380, 393, 434, 517, 544, 585, 665, 702, 820, 822, 825, 833, 927], "000000": [29, 31, 50, 52, 67, 71, 76, 136, 169, 170, 182, 184, 185, 202, 206, 207, 208, 209, 210, 211, 212, 235, 258, 264, 265, 270], "981060": 29, "039414": 29, "189651": 29, "085832": 29, "966167": 29, "243215": 29, "173648": 29, "254887": 29, "951251": 29, "105": [29, 31, 50, 52, 61, 67, 71, 76, 121, 136, 141, 161, 163, 182, 184, 195, 202, 207, 209, 210, 211, 212, 233, 235, 255, 260], "decompos": [29, 31, 34, 71, 202, 207, 209, 210, 211, 212, 232, 300, 320, 483, 487, 490, 635, 636, 815], "matrix": [29, 31, 35, 36, 37, 41, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 89, 93, 95, 105, 107, 113, 117, 119, 120, 121, 122, 123, 124, 131, 132, 133, 134, 135, 136, 137, 146, 148, 152, 157, 160, 163, 167, 176, 177, 178, 182, 183, 184, 185, 186, 189, 190, 191, 192, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 222, 223, 227, 232, 233, 234, 251, 252, 256, 257, 258, 259, 260, 264, 265, 274, 277, 280, 282, 283, 285, 287, 288, 291, 293, 296, 301, 302, 304, 312, 317, 319, 323, 328, 329, 331, 333, 334, 336, 341, 343, 344, 361, 364, 365, 366, 372, 380, 383, 384, 386, 397, 423, 428, 429, 439, 440, 441, 489, 504, 524, 527, 550, 551, 556, 593, 597, 602, 608, 609, 610, 611, 612, 613, 614, 617, 618, 619, 627, 632, 635, 636, 643, 668, 671, 691, 695, 697, 732, 737, 748, 753, 754, 755, 756, 757, 758, 759, 763, 768, 769, 770, 771, 773, 774, 778, 784, 793, 794, 795, 802, 820, 851, 855, 856, 860, 861, 878, 879, 882, 924, 955], "whiten": [29, 31, 33, 40, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 117, 120, 121, 131, 132, 133, 134, 135, 136, 137, 140, 150, 156, 175, 179, 180, 188, 191, 192, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 232, 251, 252, 263, 265, 277, 285, 286, 288, 292, 293, 297, 298, 301, 302, 304, 319, 323, 328, 331, 332, 333, 334, 336, 341, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 524, 526, 527, 545, 547, 548, 550, 551, 610, 613, 632, 635, 636, 668, 697, 708, 798, 865, 869, 873, 875, 888, 892, 935, 955], "omit": [29, 31, 38, 47, 50, 52, 54, 55, 56, 60, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 80, 81, 83, 84, 85, 87, 105, 107, 113, 117, 120, 121, 131, 134, 135, 136, 137, 146, 148, 152, 176, 178, 182, 184, 188, 192, 194, 195, 197, 198, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 218, 223, 227, 235, 237, 251, 252, 263, 265, 274, 282, 285, 292, 294, 295, 302, 303, 305, 309, 325, 331, 332, 333, 334, 341, 489, 550, 551, 589, 635, 660, 661, 671, 688, 700, 740, 745, 788, 823, 851, 853, 869, 874, 880, 889], "spheric": [29, 69, 98, 105, 177, 182, 196, 209, 210, 211, 212, 227, 234, 237, 277, 282, 285, 291, 302, 320, 328, 331, 332, 333, 334, 336, 337, 340, 342, 343, 380, 396, 398, 429, 483, 490, 504, 550, 551, 598, 634, 635, 644, 645, 646, 649, 650, 659, 670, 732, 746, 749, 760, 764, 783, 785, 786, 788, 789, 833, 852, 859, 867, 869, 871, 874, 875, 878, 885, 887, 889, 890, 891, 895, 897], "72": [29, 39, 41, 45, 54, 61, 71, 73, 98, 105, 106, 107, 123, 127, 130, 131, 139, 141, 144, 151, 166, 175, 182, 188, 195, 203, 206, 208, 209, 210, 211, 212, 222, 223, 227, 236, 237, 240, 255, 256, 257, 258, 259, 260, 263, 277, 299, 320, 635, 644], "cm": [29, 31, 35, 41, 50, 67, 71, 76, 117, 143, 151, 168, 171, 182, 184, 192, 196, 202, 207, 209, 210, 211, 212, 216, 228, 234, 235, 236, 237, 238, 257, 269, 293, 319, 323, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 403, 405, 407, 550, 551, 559, 590, 659, 866, 869, 871, 896], "extent": [29, 31, 39, 42, 50, 67, 71, 73, 76, 81, 97, 117, 122, 134, 166, 182, 184, 202, 207, 209, 210, 211, 212, 223, 234, 235, 257, 258, 259, 260, 263, 264, 265, 277, 291, 310, 320, 331, 332, 506, 541, 587, 617, 743, 773, 774], "y": [29, 31, 35, 36, 37, 38, 39, 42, 44, 45, 50, 67, 71, 73, 76, 94, 97, 98, 106, 108, 117, 139, 141, 142, 147, 162, 171, 177, 182, 184, 186, 187, 196, 198, 201, 202, 206, 207, 209, 210, 211, 212, 219, 222, 223, 226, 229, 230, 233, 235, 240, 243, 244, 245, 246, 255, 265, 270, 284, 285, 289, 291, 293, 304, 319, 320, 325, 328, 329, 331, 332, 333, 334, 336, 339, 340, 345, 347, 355, 370, 373, 374, 380, 381, 403, 413, 414, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 502, 523, 550, 551, 563, 601, 602, 634, 635, 636, 644, 650, 655, 658, 702, 736, 769, 783, 785, 786, 788, 789, 820, 823, 824, 826, 833, 834, 838, 852, 859, 863, 866, 867, 868, 869, 871, 873, 874, 875, 876, 877, 878, 883, 885, 887, 889, 890, 891, 895, 896, 897, 903, 927, 940], "z": [29, 30, 31, 37, 42, 44, 50, 67, 71, 76, 155, 177, 182, 184, 185, 186, 195, 196, 201, 202, 206, 207, 209, 210, 211, 212, 216, 229, 233, 235, 277, 284, 285, 289, 304, 319, 320, 328, 331, 332, 333, 334, 335, 336, 339, 340, 345, 347, 373, 374, 380, 392, 403, 413, 414, 483, 490, 502, 550, 551, 563, 602, 634, 635, 640, 644, 650, 659, 702, 735, 736, 783, 785, 786, 788, 789, 823, 824, 826, 833, 852, 859, 865, 867, 869, 871, 874, 875, 877, 878, 882, 885, 887, 888, 889, 890, 891, 895, 897, 903, 904, 927, 947], "729": [29, 209, 210, 211, 212, 236], "befor": [29, 30, 31, 47, 50, 52, 67, 70, 71, 76, 88, 95, 97, 108, 112, 114, 117, 121, 134, 146, 162, 163, 166, 167, 168, 169, 170, 171, 175, 177, 182, 183, 184, 186, 187, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 206, 207, 209, 210, 211, 212, 215, 218, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 252, 268, 270, 273, 281, 282, 285, 287, 289, 291, 292, 294, 295, 298, 310, 316, 317, 320, 323, 324, 326, 328, 331, 332, 333, 334, 336, 338, 339, 341, 342, 343, 345, 346, 347, 364, 382, 410, 428, 431, 440, 441, 483, 489, 490, 492, 495, 507, 513, 514, 515, 516, 517, 518, 524, 525, 527, 550, 551, 594, 608, 609, 611, 612, 618, 619, 634, 635, 638, 647, 648, 652, 653, 655, 656, 659, 660, 685, 693, 700, 705, 739, 740, 741, 742, 743, 745, 747, 769, 770, 771, 773, 774, 778, 784, 785, 786, 788, 789, 803, 804, 852, 861, 866, 867, 869, 871, 873, 874, 879, 880, 881, 886, 889, 905, 930, 935, 940, 949], "ani": [29, 30, 31, 44, 50, 53, 67, 71, 76, 102, 109, 137, 139, 144, 147, 154, 161, 163, 166, 167, 168, 169, 175, 177, 182, 184, 186, 187, 188, 191, 192, 193, 195, 196, 197, 202, 207, 209, 210, 211, 212, 216, 217, 223, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 245, 246, 255, 260, 270, 273, 274, 277, 282, 283, 286, 287, 288, 289, 294, 295, 305, 309, 310, 312, 317, 318, 319, 320, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 344, 345, 346, 347, 354, 356, 358, 373, 374, 380, 387, 392, 394, 430, 434, 457, 489, 502, 505, 506, 507, 510, 517, 535, 540, 550, 551, 567, 570, 624, 626, 627, 628, 632, 633, 635, 636, 637, 638, 652, 656, 659, 660, 665, 670, 677, 683, 688, 694, 702, 710, 720, 723, 724, 727, 733, 744, 748, 769, 778, 783, 784, 785, 786, 787, 788, 789, 802, 833, 834, 837, 860, 865, 866, 868, 877, 880, 888, 889, 899, 905, 914, 927, 930, 935, 940, 944], "178": [29, 46, 154, 195, 209, 210, 211, 212, 223, 228, 255, 259, 260, 277, 458, 955], "after": [29, 31, 34, 37, 42, 48, 50, 52, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 88, 95, 107, 114, 117, 119, 121, 128, 130, 134, 136, 157, 162, 163, 166, 167, 168, 170, 171, 172, 175, 176, 177, 181, 182, 184, 187, 192, 193, 194, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 218, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 245, 251, 252, 255, 257, 258, 263, 268, 270, 273, 274, 278, 280, 281, 282, 285, 287, 288, 289, 292, 294, 301, 302, 305, 309, 310, 312, 316, 317, 319, 320, 323, 324, 325, 331, 332, 333, 334, 336, 338, 339, 341, 342, 344, 345, 346, 347, 348, 354, 364, 365, 410, 423, 427, 428, 430, 432, 439, 440, 441, 456, 483, 485, 489, 490, 494, 496, 497, 501, 507, 524, 525, 526, 527, 545, 547, 548, 550, 551, 613, 634, 635, 638, 646, 647, 648, 652, 653, 656, 659, 660, 661, 663, 668, 671, 700, 702, 724, 744, 783, 810, 812, 813, 815, 816, 821, 833, 851, 859, 865, 869, 871, 873, 874, 875, 878, 879, 882, 886, 888, 899, 927, 935, 949], "infeas": [29, 31, 50, 67, 71, 76, 182, 184, 202, 207, 209, 210, 211, 212, 235], "within": [29, 30, 31, 42, 50, 64, 67, 71, 73, 76, 88, 96, 121, 134, 135, 136, 139, 147, 148, 155, 161, 166, 167, 170, 177, 181, 182, 184, 186, 187, 191, 192, 194, 198, 201, 202, 204, 207, 209, 210, 211, 212, 226, 229, 232, 233, 235, 237, 240, 245, 251, 255, 266, 270, 273, 277, 278, 282, 288, 289, 291, 294, 303, 306, 309, 310, 312, 319, 320, 324, 328, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 349, 375, 382, 443, 456, 483, 488, 490, 507, 509, 512, 517, 535, 541, 550, 551, 553, 608, 609, 618, 619, 634, 635, 650, 656, 770, 771, 773, 774, 778, 783, 785, 786, 788, 789, 792, 795, 803, 814, 817, 830, 852, 866, 867, 874, 875, 878, 887, 890, 894, 895, 897, 935, 940, 947, 950], "170": [29, 33, 107, 110, 151, 163, 195, 209, 210, 211, 212, 218, 223, 229, 236, 255, 259, 260, 277], "remain": [29, 31, 48, 50, 52, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 95, 102, 117, 119, 121, 136, 157, 163, 170, 182, 184, 192, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 223, 226, 231, 232, 233, 235, 252, 304, 312, 316, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 506, 526, 527, 545, 547, 548, 550, 551, 552, 613, 635, 723, 771, 783, 785, 786, 787, 812, 813, 815, 816, 875, 949], "outsid": [29, 31, 42, 50, 52, 67, 71, 76, 136, 161, 166, 170, 182, 184, 185, 187, 202, 207, 208, 209, 210, 211, 212, 227, 229, 234, 235, 237, 243, 245, 280, 283, 288, 292, 294, 303, 307, 310, 320, 321, 325, 328, 331, 332, 333, 334, 335, 337, 338, 339, 340, 342, 345, 346, 347, 359, 460, 483, 490, 525, 550, 551, 587, 606, 634, 635, 650, 652, 783, 785, 786, 788, 789, 821, 830, 833, 852, 853, 867, 874, 878, 887, 890, 893, 895, 897, 898], "less": [29, 30, 31, 36, 44, 50, 52, 66, 67, 70, 71, 72, 75, 76, 97, 105, 113, 141, 146, 152, 166, 167, 169, 176, 177, 182, 184, 185, 197, 198, 202, 207, 209, 210, 211, 212, 215, 226, 227, 229, 230, 232, 234, 235, 237, 238, 239, 240, 243, 251, 255, 257, 270, 274, 293, 294, 303, 305, 309, 310, 317, 320, 432, 524, 547, 548, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 594, 602, 635, 643, 666, 668, 675, 770, 771, 772, 773, 774, 778, 833, 935, 948], "through": [29, 31, 35, 45, 53, 63, 71, 104, 111, 140, 166, 167, 168, 170, 171, 175, 181, 182, 186, 191, 192, 194, 198, 202, 206, 207, 209, 210, 211, 212, 222, 227, 229, 232, 233, 234, 237, 239, 243, 245, 246, 252, 263, 270, 274, 277, 291, 293, 303, 305, 309, 310, 312, 318, 319, 320, 324, 329, 331, 332, 333, 334, 364, 443, 524, 533, 542, 550, 585, 634, 635, 733, 797, 833, 857, 859, 863, 866, 868, 872, 880, 940, 948, 955], "35": [29, 31, 37, 38, 39, 45, 47, 54, 60, 61, 71, 73, 107, 118, 121, 130, 135, 136, 139, 141, 162, 169, 171, 172, 175, 184, 186, 195, 197, 205, 210, 211, 212, 214, 223, 233, 234, 236, 238, 255, 256, 257, 259, 260, 262, 264, 265, 269, 277, 320, 323, 547, 602, 647, 648, 660, 663, 838, 955], "65": [29, 37, 38, 39, 45, 47, 60, 61, 71, 73, 107, 110, 130, 135, 136, 141, 162, 169, 171, 182, 184, 195, 196, 203, 204, 210, 212, 222, 223, 228, 235, 236, 255, 256, 257, 259, 260, 264, 265, 277, 299, 678], "85": [29, 30, 39, 45, 61, 63, 73, 105, 130, 136, 139, 141, 163, 166, 171, 195, 197, 202, 208, 212, 222, 223, 230, 236, 255, 256, 259, 260, 298, 941], "90": [29, 30, 31, 37, 39, 45, 50, 61, 67, 68, 73, 106, 107, 117, 121, 128, 130, 131, 135, 136, 139, 141, 151, 161, 162, 169, 177, 182, 183, 184, 186, 195, 196, 197, 205, 210, 212, 217, 222, 223, 228, 230, 235, 236, 238, 239, 255, 256, 257, 258, 259, 260, 264, 265, 270, 277, 317, 318, 320, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 488, 490, 526, 527, 545, 547, 548, 598, 608, 609, 613, 635, 732, 739, 741, 742, 743, 764, 792, 795, 803, 839, 867, 875], "95": [29, 30, 31, 33, 45, 60, 73, 76, 97, 102, 106, 107, 117, 139, 140, 141, 148, 162, 168, 169, 171, 172, 177, 182, 184, 195, 205, 210, 212, 222, 223, 228, 236, 237, 238, 255, 256, 259, 260, 277, 320, 331, 332, 333, 334, 635, 650, 743, 762, 783, 859, 875, 880, 896], "110": [29, 44, 45, 47, 61, 67, 107, 108, 139, 184, 195, 212, 255, 259, 260, 277, 487, 489, 501, 640], "115": [29, 61, 88, 110, 121, 156, 195, 209, 212, 236, 255, 277, 643, 955], "125": [29, 45, 50, 61, 163, 169, 182, 186, 195, 196, 197, 212, 223, 229, 236, 255, 259, 273, 406], "130": [29, 107, 108, 109, 184, 195, 196, 212, 259, 260, 277, 304, 406], "135": [29, 110, 111, 145, 153, 177, 184, 195, 212, 233, 234, 235, 260, 277, 320, 344, 955], "140": [29, 45, 60, 107, 108, 139, 151, 182, 195, 197, 212, 233, 234, 236, 255, 259, 277, 320, 640], "145": [29, 42, 44, 71, 102, 108, 175, 184, 195, 212, 236, 251, 255], "150": [29, 34, 38, 46, 61, 68, 71, 85, 100, 101, 103, 107, 108, 121, 147, 151, 167, 168, 172, 177, 184, 186, 192, 195, 206, 212, 218, 223, 228, 232, 234, 255, 306, 323, 344, 803, 955], "155": [29, 61, 195, 212, 223, 255, 259, 260, 270, 301], "have": [29, 30, 36, 45, 56, 57, 60, 61, 64, 65, 66, 67, 70, 71, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 97, 98, 101, 105, 106, 109, 110, 112, 113, 117, 121, 122, 128, 130, 131, 139, 142, 143, 144, 146, 147, 157, 160, 161, 163, 166, 168, 169, 170, 171, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 204, 205, 207, 208, 209, 215, 216, 217, 218, 219, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 259, 260, 263, 265, 268, 270, 273, 274, 278, 280, 282, 283, 284, 285, 288, 289, 291, 292, 293, 294, 295, 299, 302, 303, 304, 305, 307, 308, 310, 312, 317, 318, 319, 320, 322, 323, 324, 326, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 350, 358, 359, 362, 364, 365, 374, 382, 385, 388, 398, 409, 422, 423, 427, 428, 429, 434, 439, 440, 441, 475, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 502, 503, 504, 507, 508, 517, 518, 523, 526, 527, 533, 541, 545, 547, 548, 549, 550, 551, 553, 559, 562, 563, 566, 568, 572, 575, 593, 595, 604, 606, 609, 613, 621, 630, 634, 635, 636, 645, 646, 650, 652, 653, 654, 659, 661, 670, 688, 690, 700, 719, 721, 724, 727, 733, 734, 735, 736, 737, 748, 753, 757, 765, 769, 783, 784, 785, 786, 787, 788, 789, 804, 805, 812, 813, 823, 833, 838, 839, 852, 858, 859, 865, 866, 867, 869, 872, 874, 875, 878, 887, 889, 890, 895, 896, 897, 901, 905, 928, 930, 936, 938, 940, 942, 945, 947, 951, 952], "alreadi": [29, 47, 56, 57, 60, 61, 64, 65, 66, 67, 70, 71, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 97, 98, 101, 105, 112, 113, 121, 122, 142, 143, 146, 147, 161, 168, 170, 171, 175, 176, 177, 184, 185, 186, 188, 192, 195, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 226, 228, 229, 232, 233, 234, 237, 243, 250, 270, 273, 274, 285, 304, 309, 317, 320, 321, 323, 331, 332, 333, 334, 338, 339, 341, 342, 343, 345, 346, 347, 364, 365, 375, 377, 396, 423, 427, 428, 436, 439, 440, 441, 442, 450, 475, 476, 483, 490, 517, 518, 526, 527, 545, 547, 548, 550, 551, 595, 613, 646, 647, 652, 700, 720, 721, 784, 805, 856, 859, 875, 930, 935, 942, 943, 945], "proj": [29, 31, 34, 35, 37, 39, 40, 41, 44, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 98, 105, 112, 113, 114, 119, 136, 138, 143, 144, 146, 147, 148, 152, 157, 166, 168, 171, 175, 176, 177, 188, 192, 195, 198, 202, 203, 204, 205, 206, 207, 208, 209, 218, 223, 226, 230, 233, 234, 235, 238, 239, 243, 246, 250, 273, 274, 282, 286, 288, 292, 293, 299, 305, 316, 319, 323, 326, 328, 331, 332, 333, 334, 336, 340, 341, 364, 365, 410, 411, 423, 424, 425, 426, 427, 441, 549, 550, 551, 594, 634, 635, 647, 648, 649, 652, 685, 693, 700, 708, 723, 784, 785, 788, 790, 791, 792, 793, 794, 795, 796, 860, 867, 869, 871, 873, 874, 886, 887, 888, 889, 931], "attribut": [29, 41, 56, 57, 61, 64, 65, 66, 67, 70, 71, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 98, 105, 109, 112, 113, 143, 146, 147, 166, 167, 169, 175, 176, 177, 192, 194, 195, 196, 198, 201, 202, 204, 205, 207, 208, 209, 228, 232, 233, 237, 238, 240, 246, 250, 273, 274, 280, 282, 283, 284, 288, 289, 291, 292, 293, 294, 295, 300, 301, 302, 303, 304, 307, 309, 318, 319, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 370, 422, 434, 483, 484, 486, 487, 489, 490, 491, 493, 498, 501, 540, 541, 549, 550, 551, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 593, 601, 634, 635, 636, 694, 700, 704, 710, 733, 768, 783, 784, 785, 786, 787, 788, 789, 820, 833, 836, 859, 868, 881, 906, 907, 908, 909, 910, 911, 912, 929], "607": [29, 32, 955], "1355": [29, 222], "kernel_phantom": [29, 32, 955], "explor": [30, 53, 132, 133, 136, 184, 207, 223, 227, 229, 231, 234, 240, 246, 251, 269, 270, 317, 318, 331, 334, 346, 347, 354, 524, 762, 899, 935, 939, 955], "replic": [30, 42, 259, 263, 264, 265, 287, 317, 337, 760, 935, 936], "extend": [30, 103, 167, 170, 177, 192, 206, 227, 232, 234, 237, 239, 260, 277, 280, 282, 283, 285, 286, 288, 291, 292, 300, 301, 308, 316, 325, 328, 329, 331, 332, 333, 334, 340, 346, 423, 483, 490, 550, 551, 587, 595, 634, 635, 638, 646, 650, 659, 668, 670, 750, 783, 785, 786, 788, 789, 801, 811, 812, 815, 823, 852, 863, 867, 874, 878, 887, 890, 895, 897, 948], "main": [30, 75, 121, 128, 169, 182, 194, 197, 235, 239, 245, 259, 265, 286, 304, 309, 317, 320, 321, 331, 332, 394, 463, 542, 564, 764, 766, 865, 941, 949], "integr": [30, 181, 186, 228, 232, 255, 265, 277, 293, 294, 300, 309, 320, 617, 635, 670, 743, 945, 951], "meeg": [30, 270], "toolbox": [30, 45, 97, 177, 181, 222, 277, 317, 371, 489, 522, 643, 948], "interfac": [30, 34, 41, 71, 114, 181, 184, 192, 216, 223, 227, 229, 232, 233, 246, 277, 283, 292, 296, 299, 302, 317, 333, 334, 445, 450, 542, 636, 833, 874, 944, 948, 951], "eeglab": [30, 94, 97, 155, 194, 229, 232, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 291, 294, 303, 304, 305, 306, 308, 320, 328, 331, 332, 333, 334, 336, 340, 380, 398, 483, 490, 513, 516, 550, 551, 567, 634, 635, 643, 650, 683, 688, 694, 783, 785, 786, 788, 789, 852, 859, 867, 869, 871, 874, 875, 878, 885, 887, 889, 890, 891, 895, 897], "summari": [30, 36, 198, 228, 232, 246, 300, 309, 338, 339, 342, 345, 346, 347, 611, 612, 775], "If": [30, 53, 54, 57, 69, 70, 96, 97, 108, 126, 128, 142, 144, 147, 161, 163, 166, 168, 170, 172, 175, 176, 177, 182, 185, 186, 187, 191, 194, 195, 196, 197, 198, 201, 207, 208, 215, 216, 217, 219, 223, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 243, 244, 245, 246, 250, 255, 256, 257, 263, 268, 270, 273, 285, 288, 292, 293, 294, 306, 309, 310, 316, 317, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 400, 403, 405, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 677, 678, 679, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 807, 808, 809, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825, 828, 832, 833, 835, 839, 842, 843, 844, 845, 847, 848, 849, 850, 851, 852, 853, 854, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 914, 915, 916, 917, 918, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 938, 940, 941, 944, 945, 947, 948, 949, 950], "disk": [30, 55, 106, 135, 137, 168, 169, 175, 176, 184, 192, 196, 198, 203, 206, 210, 227, 233, 236, 237, 243, 244, 245, 252, 280, 285, 286, 291, 292, 306, 316, 320, 323, 325, 326, 327, 331, 332, 333, 334, 336, 337, 349, 381, 456, 502, 524, 549, 550, 551, 637, 693, 700, 702, 704, 710, 732, 785, 786, 788, 789, 806, 833, 865, 869, 873, 875, 888, 927, 929, 935, 947], "fetcher": [30, 163, 280, 288, 295, 317], "automat": [30, 97, 105, 106, 109, 121, 128, 134, 166, 167, 168, 170, 171, 175, 176, 177, 181, 182, 192, 194, 195, 196, 198, 208, 216, 217, 218, 219, 226, 227, 228, 229, 230, 232, 233, 234, 237, 243, 245, 246, 250, 260, 277, 278, 280, 282, 283, 284, 285, 286, 288, 289, 291, 292, 293, 294, 295, 298, 300, 302, 303, 305, 306, 307, 309, 316, 317, 320, 323, 325, 326, 328, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 349, 380, 386, 408, 429, 447, 448, 449, 450, 452, 453, 454, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 486, 493, 496, 504, 507, 515, 531, 532, 539, 541, 550, 551, 557, 564, 568, 572, 576, 597, 634, 635, 637, 645, 646, 647, 650, 659, 660, 663, 668, 670, 685, 696, 707, 718, 721, 726, 727, 732, 743, 770, 771, 773, 774, 783, 787, 829, 833, 853, 854, 858, 859, 865, 868, 871, 872, 873, 874, 881, 882, 888, 893, 898, 899, 941, 947, 948], "repositori": [30, 196, 310, 321, 942, 947, 948], "dure": [30, 45, 59, 64, 69, 71, 97, 107, 109, 121, 127, 130, 143, 148, 149, 162, 167, 170, 175, 181, 183, 186, 192, 193, 194, 197, 198, 206, 208, 218, 223, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 240, 243, 244, 245, 246, 270, 273, 277, 278, 280, 285, 287, 288, 291, 293, 303, 304, 305, 307, 308, 310, 316, 317, 318, 319, 320, 323, 329, 331, 332, 333, 334, 335, 336, 338, 341, 342, 344, 346, 347, 348, 364, 365, 372, 410, 412, 416, 423, 427, 428, 430, 435, 439, 440, 441, 483, 489, 490, 500, 506, 507, 518, 526, 527, 545, 547, 548, 550, 551, 552, 564, 570, 580, 593, 597, 613, 621, 635, 655, 656, 657, 659, 666, 670, 685, 724, 727, 733, 748, 751, 757, 758, 759, 778, 783, 785, 786, 787, 788, 789, 791, 794, 814, 817, 821, 822, 831, 833, 851, 854, 865, 872, 875, 879, 882, 888, 893, 899, 941, 949], "e": [30, 33, 34, 38, 54, 67, 68, 70, 72, 73, 80, 96, 97, 98, 106, 110, 128, 139, 141, 147, 163, 166, 167, 169, 170, 172, 176, 177, 179, 181, 183, 186, 187, 188, 191, 192, 194, 195, 196, 197, 204, 206, 211, 215, 216, 217, 219, 222, 223, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 240, 243, 244, 250, 251, 252, 255, 256, 257, 260, 263, 265, 269, 270, 277, 278, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 299, 301, 302, 303, 304, 305, 307, 308, 309, 310, 312, 316, 317, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 354, 355, 364, 365, 366, 370, 371, 374, 376, 378, 380, 381, 386, 395, 397, 408, 420, 423, 427, 428, 434, 439, 440, 441, 450, 456, 457, 459, 464, 475, 476, 483, 485, 486, 489, 490, 492, 493, 494, 497, 498, 499, 502, 503, 504, 507, 510, 512, 515, 516, 517, 519, 521, 522, 524, 525, 526, 527, 533, 539, 542, 544, 545, 547, 548, 549, 550, 551, 552, 563, 564, 566, 568, 570, 581, 587, 589, 591, 594, 595, 596, 597, 601, 602, 608, 609, 610, 611, 612, 613, 614, 617, 618, 619, 621, 634, 635, 637, 638, 643, 644, 645, 646, 649, 650, 651, 652, 653, 655, 658, 659, 661, 662, 665, 666, 670, 676, 677, 678, 685, 690, 697, 700, 701, 704, 705, 710, 717, 718, 719, 720, 721, 722, 728, 730, 732, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 751, 754, 768, 769, 770, 771, 772, 773, 774, 775, 778, 779, 782, 783, 785, 786, 787, 788, 789, 793, 794, 795, 796, 797, 798, 801, 811, 816, 820, 823, 833, 835, 839, 848, 851, 852, 853, 859, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 878, 879, 881, 882, 886, 887, 888, 889, 890, 893, 895, 897, 898, 901, 925, 928, 935, 938, 940, 941, 942, 945, 947, 951], "rate": [30, 96, 124, 128, 130, 206, 216, 217, 222, 229, 230, 232, 259, 269, 277, 284, 285, 293, 307, 326, 330, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 443, 488, 518, 522, 524, 550, 551, 559, 566, 574, 661, 668, 684, 736, 748, 761, 767, 769, 772, 783, 785, 786, 787, 788, 789, 803, 865, 867, 876, 888, 935], "per": [30, 57, 73, 117, 121, 128, 134, 137, 147, 154, 157, 168, 170, 176, 177, 184, 192, 195, 206, 219, 228, 232, 234, 246, 255, 260, 265, 269, 278, 280, 288, 303, 309, 310, 320, 323, 331, 332, 333, 334, 336, 338, 339, 340, 342, 343, 344, 345, 346, 347, 349, 382, 389, 429, 445, 458, 475, 483, 490, 493, 496, 504, 507, 516, 517, 550, 551, 611, 612, 617, 618, 619, 635, 636, 639, 687, 727, 735, 764, 766, 779, 783, 785, 786, 788, 789, 791, 794, 801, 803, 804, 811, 812, 813, 815, 816, 823, 833, 865, 866, 867, 874, 878, 879, 896, 909, 947], "etc": [30, 53, 57, 62, 73, 104, 169, 181, 186, 192, 193, 194, 197, 198, 201, 215, 216, 217, 226, 227, 228, 232, 237, 243, 246, 250, 255, 263, 270, 278, 286, 298, 303, 307, 309, 310, 312, 318, 319, 320, 324, 329, 331, 332, 333, 334, 336, 337, 338, 342, 346, 402, 512, 524, 525, 550, 551, 553, 559, 571, 575, 596, 607, 632, 635, 649, 670, 695, 699, 724, 729, 757, 758, 759, 760, 770, 771, 773, 774, 783, 785, 786, 787, 788, 789, 833, 859, 863, 866, 893, 935, 938, 945], "mat": [30, 45, 222, 277, 284, 292, 301, 305, 320, 336, 571, 695, 699], "store": [30, 42, 55, 56, 97, 117, 120, 121, 122, 131, 136, 142, 143, 161, 166, 167, 168, 169, 170, 175, 176, 177, 181, 182, 184, 186, 188, 194, 195, 196, 198, 201, 208, 212, 216, 217, 218, 219, 227, 228, 233, 234, 237, 238, 240, 243, 245, 246, 251, 252, 270, 283, 286, 287, 288, 289, 291, 298, 300, 305, 308, 309, 316, 317, 318, 319, 320, 323, 324, 325, 329, 331, 332, 333, 334, 336, 340, 341, 342, 343, 345, 349, 392, 414, 432, 450, 456, 463, 464, 475, 476, 485, 487, 498, 507, 512, 516, 521, 542, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 594, 613, 622, 624, 635, 643, 650, 658, 669, 688, 694, 695, 699, 702, 725, 735, 736, 748, 763, 783, 784, 787, 790, 791, 792, 793, 794, 795, 796, 805, 834, 842, 855, 888, 926, 927, 935], "inferenti": [30, 255], "evalu": [30, 57, 70, 80, 81, 188, 215, 223, 237, 239, 255, 277, 310, 317, 320, 343, 429, 500, 509, 547, 548, 584, 617, 644, 659, 743, 935], "signific": [30, 99, 127, 128, 139, 177, 191, 198, 215, 226, 228, 229, 231, 232, 234, 255, 257, 258, 259, 260, 261, 262, 270, 277, 312, 316, 320, 328, 331, 332, 333, 334, 336, 386, 392, 422, 483, 489, 490, 522, 550, 551, 610, 634, 635, 693, 770, 771, 773, 774, 775, 783, 785, 786, 788, 789, 852, 867, 871, 874, 890, 895, 897, 955], "jose": [30, 291], "garcia": 30, "alani": [30, 291], "jcg": 30, "matplotlib": [30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 54, 55, 63, 64, 65, 67, 71, 73, 79, 84, 95, 96, 97, 98, 99, 100, 108, 112, 117, 119, 120, 123, 124, 126, 131, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 147, 149, 157, 158, 159, 162, 163, 170, 171, 172, 177, 186, 196, 197, 198, 202, 203, 206, 207, 209, 210, 212, 222, 223, 227, 229, 230, 232, 233, 234, 235, 237, 238, 239, 243, 246, 252, 255, 256, 257, 258, 259, 260, 265, 269, 270, 273, 274, 278, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 302, 303, 304, 305, 306, 307, 308, 309, 318, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 380, 381, 483, 490, 550, 551, 634, 635, 650, 655, 704, 783, 784, 785, 786, 788, 789, 801, 811, 833, 834, 837, 844, 848, 850, 851, 852, 853, 855, 857, 858, 859, 860, 861, 862, 863, 864, 865, 867, 868, 869, 871, 872, 873, 874, 875, 876, 877, 878, 880, 882, 883, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 920, 940, 941], "pyplot": [30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 54, 55, 63, 64, 65, 67, 71, 73, 79, 84, 95, 96, 97, 98, 99, 100, 108, 112, 117, 119, 120, 123, 124, 126, 131, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 147, 149, 157, 158, 159, 162, 163, 170, 171, 172, 177, 186, 196, 198, 202, 203, 206, 207, 209, 210, 212, 222, 223, 229, 230, 233, 234, 237, 238, 239, 243, 252, 255, 256, 257, 258, 259, 260, 265, 269, 270, 273, 274, 293, 330, 331, 332, 333, 334, 783, 801, 811, 837, 859, 869, 871, 896], "plt": [30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 54, 55, 63, 64, 65, 67, 71, 73, 79, 84, 95, 96, 97, 98, 99, 100, 108, 112, 117, 119, 120, 123, 124, 126, 131, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 147, 149, 157, 158, 159, 162, 163, 170, 171, 172, 177, 186, 196, 198, 202, 203, 206, 207, 209, 210, 212, 222, 223, 229, 230, 233, 234, 237, 238, 239, 243, 252, 255, 256, 257, 258, 259, 260, 265, 269, 270, 273, 274, 333, 334, 389, 801, 811, 873], "subj": [30, 186, 232], "experi": [30, 45, 71, 92, 97, 155, 177, 191, 192, 194, 195, 206, 218, 227, 228, 234, 237, 238, 239, 240, 243, 244, 277, 289, 295, 309, 311, 317, 319, 320, 336, 570], "particip": [30, 98, 100, 102, 103, 107, 108, 109, 117, 120, 149, 167, 170, 172, 177, 192, 193, 194, 195, 198, 219, 226, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 270, 273, 310, 317, 319, 655, 657, 844], "perform": [30, 34, 36, 39, 45, 57, 71, 80, 102, 108, 110, 127, 128, 130, 134, 139, 146, 163, 166, 169, 170, 172, 175, 177, 181, 182, 183, 192, 193, 194, 195, 204, 215, 216, 219, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 243, 255, 257, 259, 263, 265, 280, 286, 288, 289, 293, 294, 295, 304, 307, 308, 316, 317, 319, 320, 324, 326, 328, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 354, 357, 364, 365, 422, 423, 424, 426, 428, 429, 445, 483, 486, 489, 490, 493, 495, 496, 499, 500, 504, 517, 518, 519, 524, 526, 539, 540, 541, 542, 545, 547, 548, 550, 551, 558, 559, 566, 593, 594, 596, 597, 602, 603, 604, 605, 606, 608, 609, 613, 618, 619, 634, 635, 637, 640, 647, 648, 649, 650, 652, 653, 655, 657, 659, 660, 668, 670, 685, 697, 731, 732, 734, 735, 736, 748, 760, 765, 769, 770, 771, 772, 773, 774, 776, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 814, 815, 816, 823, 835, 851, 852, 859, 865, 866, 867, 870, 874, 878, 880, 882, 887, 888, 889, 890, 895, 897, 901, 940, 947, 948], "altern": [30, 141, 187, 188, 195, 198, 218, 226, 228, 229, 232, 239, 246, 255, 269, 270, 273, 283, 289, 292, 303, 304, 309, 317, 322, 324, 325, 328, 331, 332, 333, 334, 340, 423, 483, 490, 550, 551, 576, 596, 634, 635, 650, 692, 696, 772, 783, 785, 786, 788, 789, 833, 852, 867, 874, 878, 887, 890, 895, 897, 935, 947, 953], "forc": [30, 149, 187, 192, 197, 204, 228, 286, 309, 317, 323, 331, 332, 333, 334, 376, 387, 433, 445, 447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 550, 551, 576, 602, 696, 783, 785, 786, 787, 788, 789, 833, 940], "choic": [30, 141, 181, 186, 196, 197, 210, 229, 234, 244, 257, 317, 320, 344, 523, 533, 613, 776, 945], "discrimin": [30, 35, 44, 109, 223, 270, 277, 317, 483, 487, 490, 635], "between": [30, 34, 36, 42, 45, 48, 52, 53, 62, 64, 66, 71, 73, 85, 87, 96, 108, 109, 114, 123, 126, 127, 130, 135, 140, 141, 149, 155, 159, 160, 162, 163, 166, 167, 170, 172, 175, 176, 177, 182, 183, 184, 186, 187, 188, 191, 192, 195, 196, 197, 198, 202, 204, 212, 215, 216, 217, 218, 219, 222, 223, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 243, 244, 245, 252, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 270, 273, 277, 278, 284, 285, 286, 289, 291, 292, 293, 295, 296, 299, 303, 305, 308, 309, 310, 312, 316, 317, 319, 320, 323, 324, 325, 326, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 354, 376, 380, 386, 388, 389, 410, 422, 423, 424, 425, 426, 429, 430, 432, 433, 434, 483, 484, 489, 495, 499, 502, 504, 506, 507, 509, 517, 524, 527, 528, 545, 547, 548, 550, 551, 570, 575, 594, 595, 608, 610, 613, 617, 618, 619, 632, 635, 637, 638, 640, 643, 645, 646, 647, 650, 651, 652, 653, 654, 655, 659, 660, 663, 668, 669, 670, 674, 676, 697, 700, 701, 724, 733, 734, 735, 736, 738, 740, 743, 744, 747, 748, 751, 753, 754, 755, 757, 758, 762, 763, 770, 771, 773, 774, 775, 778, 783, 784, 787, 790, 792, 793, 795, 800, 801, 804, 808, 809, 811, 812, 813, 815, 816, 823, 833, 835, 839, 851, 853, 854, 856, 859, 861, 865, 868, 869, 870, 871, 872, 874, 888, 889, 892, 893, 895, 898, 899, 901, 906, 926, 935, 947, 949, 955], "stimuli": [30, 45, 96, 143, 149, 155, 167, 170, 172, 175, 177, 192, 206, 218, 222, 231, 240, 277, 317, 319, 489, 638], "whole": [30, 54, 80, 81, 97, 188, 227, 255, 277, 286, 292, 309, 317, 338, 339, 342, 345, 346, 347, 517, 589, 670, 687, 732, 749, 783, 784, 833, 861, 895, 949], "vari": [30, 45, 48, 72, 73, 85, 167, 181, 217, 222, 229, 232, 233, 236, 237, 239, 252, 255, 278, 295, 312, 317, 320, 331, 332, 336, 338, 339, 342, 345, 346, 347, 410, 411, 412, 413, 414, 415, 506, 507, 517, 553, 735, 774, 858], "discern": [30, 317], "observ": [30, 102, 128, 139, 163, 170, 177, 182, 232, 234, 238, 239, 255, 257, 259, 260, 263, 265, 270, 316, 317, 319, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 522, 550, 551, 635, 764, 769, 770, 771, 772, 773, 774, 783, 785, 786, 787, 788, 789, 790, 791, 792, 888], "similar": [30, 42, 43, 44, 45, 46, 53, 59, 84, 87, 97, 114, 130, 136, 139, 141, 157, 162, 163, 166, 167, 168, 169, 170, 176, 186, 196, 223, 226, 227, 229, 231, 232, 233, 234, 235, 238, 243, 251, 255, 257, 260, 268, 277, 280, 282, 283, 284, 286, 291, 292, 295, 304, 305, 309, 310, 312, 317, 318, 320, 324, 329, 330, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 364, 423, 432, 484, 499, 517, 524, 550, 551, 584, 632, 635, 650, 659, 738, 783, 787, 788, 789, 823, 833, 850, 869, 891, 947, 948, 955], "approach": [30, 36, 45, 47, 70, 71, 72, 85, 100, 102, 130, 167, 169, 170, 175, 176, 177, 182, 186, 189, 190, 191, 192, 193, 198, 206, 212, 222, 223, 226, 227, 229, 230, 231, 232, 235, 237, 239, 252, 255, 256, 259, 261, 270, 273, 277, 291, 310, 316, 317, 318, 319, 320, 336, 434, 459, 556, 592, 635, 652, 668, 677, 721, 851, 903, 949, 955], "across": [30, 42, 43, 44, 45, 46, 52, 53, 54, 58, 59, 73, 80, 81, 84, 87, 106, 109, 110, 130, 134, 136, 140, 141, 161, 163, 166, 167, 168, 169, 171, 175, 176, 179, 181, 188, 191, 192, 194, 198, 206, 223, 226, 227, 229, 231, 232, 233, 234, 235, 237, 239, 246, 250, 251, 255, 263, 264, 265, 269, 277, 280, 281, 282, 284, 288, 289, 291, 292, 294, 295, 302, 304, 309, 312, 316, 317, 319, 320, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 345, 346, 347, 385, 409, 428, 429, 483, 486, 490, 492, 493, 495, 496, 497, 508, 517, 550, 551, 553, 599, 611, 612, 617, 632, 635, 637, 640, 650, 697, 707, 727, 748, 774, 778, 783, 784, 785, 786, 787, 788, 789, 796, 803, 812, 813, 815, 816, 835, 850, 854, 859, 866, 867, 869, 870, 874, 887, 889, 893, 896, 899, 914, 935, 955], "signal": [30, 34, 35, 36, 39, 41, 42, 45, 47, 53, 54, 68, 71, 77, 84, 85, 86, 90, 97, 98, 100, 101, 102, 104, 108, 111, 114, 127, 130, 138, 140, 141, 148, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 177, 178, 188, 191, 192, 198, 201, 204, 206, 210, 212, 216, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 235, 240, 241, 242, 243, 244, 246, 252, 253, 254, 255, 260, 271, 277, 283, 285, 286, 288, 289, 292, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 308, 316, 317, 319, 323, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 345, 346, 347, 367, 369, 410, 412, 416, 417, 420, 423, 424, 425, 426, 428, 433, 441, 450, 475, 476, 483, 485, 487, 488, 489, 490, 491, 494, 495, 504, 507, 516, 517, 518, 519, 521, 522, 523, 524, 550, 551, 559, 566, 572, 601, 602, 603, 616, 632, 633, 634, 635, 636, 637, 644, 646, 647, 648, 651, 652, 653, 656, 659, 661, 669, 670, 691, 700, 702, 705, 724, 727, 747, 749, 750, 769, 770, 783, 785, 786, 787, 788, 789, 790, 791, 792, 800, 801, 803, 804, 808, 810, 811, 812, 814, 815, 817, 833, 859, 865, 867, 869, 874, 875, 877, 878, 879, 880, 882, 888, 889, 935, 955], "continuum": [30, 300, 317], "span": [30, 108, 146, 162, 166, 167, 175, 176, 177, 191, 192, 194, 204, 218, 226, 230, 241, 242, 243, 245, 246, 268, 270, 278, 286, 307, 316, 317, 318, 320, 325, 331, 332, 333, 334, 336, 550, 551, 632, 637, 638, 661, 697, 775, 783, 785, 786, 788, 789, 803, 850, 852, 889, 895, 955], "increas": [30, 37, 58, 81, 97, 139, 177, 198, 219, 229, 232, 233, 238, 239, 252, 257, 260, 270, 285, 286, 287, 293, 294, 301, 306, 317, 320, 330, 331, 332, 333, 334, 341, 524, 550, 551, 562, 635, 659, 678, 770, 771, 773, 774, 783, 787, 801, 811, 812, 813, 814, 815, 816, 817, 833, 838, 865, 882, 888], "word": [30, 128, 169, 177, 181, 194, 201, 223, 229, 233, 234, 237, 255, 256, 270, 277, 309, 317, 319, 320, 464, 489, 814, 817, 833, 848], "g": [30, 34, 54, 57, 63, 67, 68, 70, 95, 96, 97, 106, 107, 110, 123, 128, 139, 141, 142, 147, 154, 163, 166, 167, 169, 176, 177, 181, 186, 187, 188, 192, 194, 195, 196, 197, 206, 215, 216, 217, 222, 223, 226, 228, 229, 230, 231, 232, 233, 235, 240, 243, 244, 250, 251, 255, 256, 260, 263, 265, 269, 270, 273, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 298, 299, 301, 302, 303, 304, 305, 307, 308, 309, 310, 312, 316, 317, 319, 320, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 364, 365, 366, 371, 378, 380, 381, 386, 395, 397, 408, 420, 423, 427, 428, 434, 439, 440, 441, 450, 456, 459, 464, 475, 476, 483, 485, 486, 489, 490, 492, 493, 494, 497, 498, 499, 502, 503, 504, 507, 512, 515, 516, 517, 519, 521, 522, 524, 525, 526, 527, 533, 539, 542, 544, 545, 547, 548, 549, 550, 551, 552, 564, 589, 591, 595, 596, 597, 602, 608, 609, 610, 613, 617, 618, 619, 621, 634, 635, 637, 638, 645, 646, 649, 650, 651, 652, 653, 658, 659, 662, 665, 666, 670, 676, 677, 678, 685, 690, 697, 704, 705, 710, 717, 718, 719, 720, 721, 722, 728, 730, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 751, 754, 768, 769, 770, 771, 772, 773, 774, 778, 779, 783, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 801, 811, 814, 816, 817, 833, 835, 839, 848, 851, 852, 853, 859, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 878, 879, 881, 882, 886, 887, 888, 889, 890, 893, 895, 897, 898, 901, 925, 928, 935, 938, 940, 942, 945, 947, 951], "easi": [30, 159, 188, 192, 208, 215, 218, 227, 232, 235, 243, 245, 270, 307, 309, 317, 318, 319, 320, 341, 430, 489, 935, 947], "while": [30, 36, 52, 71, 101, 103, 109, 113, 134, 163, 167, 168, 169, 170, 176, 177, 184, 186, 192, 198, 204, 205, 215, 219, 226, 227, 232, 234, 235, 237, 245, 252, 255, 259, 263, 270, 273, 277, 282, 285, 287, 289, 302, 306, 309, 310, 312, 317, 319, 320, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 364, 365, 423, 427, 428, 439, 440, 441, 483, 489, 490, 491, 500, 517, 526, 527, 545, 547, 548, 550, 551, 580, 605, 613, 635, 636, 647, 648, 652, 653, 660, 783, 787, 812, 813, 815, 816, 859, 865, 869, 873, 875, 882, 888, 891, 901, 944, 946], "low": [30, 31, 37, 45, 71, 73, 85, 97, 101, 107, 108, 109, 110, 121, 137, 141, 167, 169, 177, 192, 193, 206, 209, 212, 215, 218, 223, 227, 230, 232, 237, 238, 239, 255, 257, 259, 264, 277, 285, 287, 292, 295, 302, 303, 304, 309, 310, 316, 317, 319, 320, 323, 326, 330, 331, 332, 333, 334, 336, 373, 423, 428, 485, 491, 494, 496, 518, 519, 521, 550, 551, 559, 562, 576, 602, 635, 640, 643, 647, 648, 652, 653, 659, 660, 661, 663, 664, 674, 736, 740, 745, 776, 777, 783, 787, 813, 816, 833, 865, 888, 935], "hard": [30, 141, 168, 232, 252, 282, 304, 309, 317, 318, 432, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 594, 935], "extens": [30, 38, 69, 70, 162, 166, 177, 184, 186, 196, 216, 217, 219, 223, 244, 245, 285, 287, 292, 294, 295, 302, 312, 316, 317, 320, 323, 331, 332, 333, 334, 364, 365, 398, 399, 405, 490, 513, 514, 516, 550, 551, 558, 565, 568, 578, 670, 688, 697, 701, 784, 805, 833, 925, 944, 945], "veri": [30, 36, 70, 71, 76, 87, 90, 96, 97, 106, 109, 141, 159, 167, 170, 177, 183, 186, 194, 198, 207, 212, 227, 229, 230, 231, 232, 233, 234, 237, 252, 255, 264, 270, 309, 318, 319, 320, 364, 388, 507, 550, 769, 786, 789, 801, 811, 944], "ll": [30, 33, 36, 45, 52, 60, 80, 85, 94, 97, 141, 142, 143, 144, 147, 149, 161, 162, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 182, 184, 186, 188, 192, 193, 194, 196, 197, 198, 205, 206, 207, 217, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 243, 244, 245, 246, 250, 252, 256, 257, 259, 265, 268, 269, 273, 274, 309, 935, 949], "begin": [30, 45, 100, 120, 177, 182, 192, 194, 195, 197, 198, 201, 215, 218, 222, 226, 228, 229, 230, 231, 232, 233, 234, 239, 245, 250, 270, 303, 308, 309, 320, 325, 326, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 350, 354, 428, 512, 525, 550, 551, 578, 594, 608, 618, 619, 635, 638, 652, 653, 659, 660, 663, 670, 700, 701, 750, 783, 787, 788, 798, 868, 879, 880, 882, 889, 895, 933], "littl": [30, 186, 197, 212, 215, 229, 230, 232, 233, 252, 270, 274, 320, 944], "you": [30, 50, 53, 54, 67, 69, 73, 76, 85, 87, 105, 108, 109, 114, 130, 136, 140, 141, 142, 143, 144, 146, 147, 148, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 203, 204, 206, 207, 208, 215, 216, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 243, 244, 245, 246, 250, 252, 255, 257, 258, 260, 263, 265, 268, 269, 270, 273, 274, 277, 278, 291, 294, 295, 303, 309, 311, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 330, 331, 332, 333, 334, 336, 337, 338, 341, 342, 344, 346, 348, 350, 356, 358, 364, 365, 381, 386, 396, 397, 398, 422, 423, 427, 428, 431, 432, 439, 440, 441, 446, 459, 483, 489, 490, 500, 507, 510, 516, 518, 524, 526, 527, 535, 542, 545, 547, 548, 550, 551, 552, 563, 567, 575, 600, 602, 613, 634, 635, 652, 659, 661, 671, 688, 694, 732, 747, 763, 778, 783, 785, 786, 787, 788, 789, 801, 811, 831, 834, 835, 837, 851, 852, 856, 858, 865, 866, 870, 875, 878, 880, 881, 882, 888, 893, 905, 935, 936, 938, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950], "first": [30, 31, 33, 36, 37, 42, 45, 47, 54, 55, 58, 64, 65, 67, 68, 69, 70, 71, 73, 90, 97, 98, 106, 109, 110, 113, 114, 117, 121, 122, 130, 131, 135, 136, 139, 140, 141, 142, 147, 149, 157, 159, 160, 161, 162, 163, 166, 167, 168, 169, 171, 172, 175, 176, 177, 182, 183, 185, 186, 187, 188, 192, 193, 194, 195, 197, 198, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 215, 217, 218, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 251, 252, 255, 256, 257, 259, 260, 263, 264, 265, 268, 269, 270, 273, 277, 282, 283, 285, 286, 289, 291, 292, 293, 294, 295, 302, 304, 305, 316, 317, 319, 320, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 350, 351, 352, 355, 363, 364, 365, 370, 385, 390, 391, 423, 431, 432, 439, 445, 456, 483, 489, 490, 498, 506, 507, 508, 511, 512, 514, 515, 517, 521, 522, 523, 524, 525, 531, 533, 541, 549, 550, 551, 572, 575, 576, 589, 595, 596, 601, 605, 611, 612, 630, 634, 635, 636, 638, 640, 643, 645, 650, 655, 656, 679, 684, 696, 697, 700, 704, 715, 727, 733, 735, 736, 739, 741, 742, 757, 758, 759, 764, 768, 769, 770, 771, 773, 774, 775, 777, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 820, 823, 833, 839, 842, 851, 859, 863, 865, 866, 867, 868, 871, 872, 874, 878, 879, 880, 882, 887, 888, 889, 890, 893, 895, 897, 898, 925, 926, 935, 938, 940, 941, 949], "limo_epoch": 30, "note": [30, 39, 42, 44, 47, 52, 73, 97, 101, 109, 120, 131, 136, 139, 141, 148, 161, 162, 166, 167, 168, 169, 171, 175, 177, 178, 182, 184, 186, 188, 192, 193, 194, 195, 196, 197, 198, 203, 206, 207, 208, 209, 216, 217, 219, 222, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 239, 243, 244, 245, 250, 251, 259, 260, 263, 264, 265, 270, 277, 304, 309, 310, 316, 319, 320, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 355, 360, 364, 365, 367, 369, 371, 372, 373, 374, 375, 377, 378, 380, 381, 382, 385, 386, 387, 388, 389, 390, 396, 397, 398, 400, 402, 403, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 427, 428, 429, 430, 433, 434, 436, 439, 442, 443, 450, 456, 457, 458, 459, 460, 462, 475, 476, 482, 483, 485, 486, 487, 489, 490, 491, 492, 493, 495, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 533, 534, 536, 539, 540, 541, 542, 543, 544, 549, 550, 551, 552, 553, 559, 563, 564, 566, 567, 568, 570, 572, 574, 575, 576, 578, 580, 581, 582, 587, 589, 590, 591, 592, 594, 596, 597, 598, 600, 602, 603, 604, 605, 606, 608, 609, 610, 613, 615, 617, 618, 619, 621, 622, 634, 635, 636, 637, 638, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 656, 658, 659, 662, 666, 670, 671, 676, 677, 678, 679, 680, 684, 685, 688, 690, 692, 693, 694, 696, 697, 700, 701, 702, 704, 705, 707, 710, 716, 718, 719, 721, 722, 723, 724, 727, 729, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 760, 763, 764, 765, 766, 769, 770, 771, 772, 773, 774, 776, 778, 783, 784, 785, 786, 787, 788, 789, 793, 794, 795, 796, 797, 798, 799, 801, 803, 804, 807, 811, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 827, 828, 831, 833, 834, 835, 837, 844, 850, 851, 852, 853, 854, 856, 858, 859, 860, 862, 863, 865, 866, 867, 868, 869, 871, 872, 874, 875, 876, 878, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 893, 895, 896, 897, 898, 899, 900, 901, 904, 905, 906, 907, 921, 925, 926, 927, 928, 929, 930, 935, 937, 942, 946, 948], "1055": 30, "good": [30, 31, 47, 57, 75, 97, 98, 100, 103, 107, 108, 109, 117, 120, 144, 151, 163, 166, 167, 169, 172, 177, 183, 192, 193, 194, 195, 197, 203, 210, 218, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 257, 263, 265, 270, 273, 277, 278, 285, 292, 294, 295, 309, 310, 317, 320, 321, 326, 329, 331, 332, 333, 334, 336, 364, 365, 367, 369, 395, 413, 423, 427, 428, 439, 440, 441, 483, 485, 490, 491, 496, 499, 526, 527, 540, 542, 545, 547, 548, 550, 551, 594, 613, 626, 629, 632, 634, 635, 637, 640, 642, 645, 650, 651, 654, 659, 678, 685, 693, 704, 710, 751, 769, 778, 783, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 813, 815, 816, 863, 865, 866, 869, 875, 889, 896, 935, 936, 941, 948, 950], "299944": 30, "499907": 30, "213": [30, 61, 195, 236, 248, 252, 955], "524": [30, 223], "b": [30, 34, 36, 38, 48, 54, 63, 64, 70, 124, 137, 138, 155, 163, 229, 232, 233, 238, 244, 246, 252, 255, 256, 259, 263, 264, 265, 270, 273, 277, 283, 285, 309, 317, 320, 323, 326, 331, 332, 333, 334, 338, 339, 341, 342, 343, 345, 346, 347, 354, 423, 429, 450, 475, 476, 504, 518, 520, 550, 551, 618, 619, 652, 653, 700, 701, 736, 764, 766, 769, 777, 783, 787, 798, 812, 813, 815, 816, 833, 859, 865, 888, 895, 935], "531": [30, 148, 156, 223, 655, 657, 955], "visualis": [30, 53, 55, 56, 74, 75, 76, 80, 81, 104, 111, 128, 191, 202, 238, 261, 262, 325, 331, 333, 334, 336, 386, 392, 422, 551, 580, 673, 677, 693, 774, 955], "distribut": [30, 45, 48, 52, 72, 74, 80, 81, 85, 87, 99, 143, 171, 176, 181, 188, 191, 192, 203, 213, 214, 218, 232, 234, 255, 257, 260, 263, 264, 269, 270, 277, 292, 304, 310, 316, 317, 319, 320, 328, 329, 331, 332, 333, 334, 335, 336, 340, 342, 433, 547, 550, 551, 601, 602, 613, 643, 677, 691, 700, 702, 715, 731, 735, 765, 768, 770, 771, 773, 774, 785, 786, 788, 789, 833, 843, 851, 863, 896, 903, 935, 947, 948, 955], "should": [30, 31, 42, 45, 47, 66, 67, 90, 97, 108, 114, 117, 120, 147, 148, 159, 161, 162, 166, 167, 168, 170, 177, 178, 182, 183, 184, 186, 187, 191, 193, 198, 203, 206, 208, 209, 210, 217, 219, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 243, 244, 245, 246, 250, 259, 260, 268, 270, 274, 277, 278, 282, 283, 285, 287, 288, 292, 295, 303, 304, 305, 309, 310, 312, 316, 317, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 396, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 493, 494, 495, 496, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 533, 534, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 589, 590, 591, 592, 593, 594, 596, 597, 598, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626, 627, 628, 631, 634, 635, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 677, 678, 679, 680, 682, 683, 684, 685, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 727, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 745, 747, 748, 749, 751, 753, 754, 755, 756, 757, 758, 759, 760, 765, 770, 771, 772, 773, 774, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 802, 803, 804, 807, 808, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 828, 829, 832, 833, 835, 836, 838, 842, 844, 851, 852, 853, 854, 858, 859, 860, 862, 863, 865, 866, 867, 868, 869, 870, 871, 874, 875, 878, 879, 880, 881, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 904, 905, 906, 907, 913, 914, 915, 916, 917, 918, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 940, 941, 944, 945, 946, 947, 950], "appear": [30, 121, 128, 166, 170, 184, 194, 198, 206, 209, 218, 226, 229, 230, 235, 245, 294, 303, 309, 317, 319, 320, 323, 331, 332, 333, 334, 336, 341, 504, 550, 551, 559, 562, 566, 589, 853, 891], "clearli": [30, 47, 170, 178, 192, 218, 230, 232, 234, 236, 273], "suptitl": [30, 44, 48, 63, 68, 71, 97, 100, 106, 113, 117, 130, 136, 139, 143, 147, 159, 167, 170, 172, 177, 186, 202, 218, 222, 227, 229, 230, 232, 233, 234, 235, 237, 238, 255, 305], "seen": [30, 38, 53, 101, 166, 169, 170, 172, 176, 177, 182, 195, 196, 223, 226, 230, 233, 234, 238, 239, 243, 246, 309, 320, 321, 364, 490, 735, 736, 813, 816], "abov": [30, 47, 68, 69, 71, 75, 87, 97, 101, 102, 108, 114, 134, 141, 143, 166, 168, 170, 176, 177, 182, 186, 187, 192, 193, 194, 196, 197, 198, 201, 215, 217, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 243, 244, 246, 250, 252, 259, 260, 270, 277, 309, 316, 319, 320, 321, 325, 328, 331, 332, 333, 334, 336, 344, 422, 483, 485, 490, 494, 507, 513, 514, 516, 519, 521, 550, 551, 552, 559, 580, 634, 635, 637, 659, 669, 679, 770, 771, 773, 774, 783, 785, 786, 788, 789, 813, 816, 823, 833, 851, 859, 866, 867, 874, 878, 880, 890, 891, 895, 897, 935, 938, 941], "These": [30, 53, 71, 80, 81, 87, 97, 121, 163, 164, 170, 171, 173, 177, 179, 181, 184, 186, 188, 189, 191, 192, 193, 196, 198, 199, 204, 206, 213, 215, 216, 217, 219, 220, 222, 223, 224, 228, 229, 232, 236, 238, 241, 246, 247, 252, 253, 255, 256, 261, 266, 270, 271, 275, 282, 295, 309, 310, 312, 316, 317, 319, 320, 321, 322, 331, 332, 333, 334, 336, 348, 373, 374, 393, 423, 427, 428, 429, 502, 550, 551, 598, 635, 645, 659, 670, 701, 740, 745, 769, 783, 785, 786, 787, 788, 789, 935, 948], "easili": [30, 69, 70, 128, 166, 170, 175, 186, 194, 196, 215, 217, 226, 229, 232, 234, 235, 243, 244, 245, 246, 263, 270, 297, 298, 309, 312, 316, 320, 510, 550, 551, 659, 769, 948], "access": [30, 78, 128, 158, 184, 192, 194, 195, 201, 219, 233, 240, 243, 245, 246, 268, 277, 284, 288, 291, 298, 299, 303, 309, 310, 318, 324, 326, 331, 332, 335, 344, 550, 551, 694, 696, 785, 786, 787, 788, 789, 814, 817, 947], "shown": [30, 58, 78, 97, 106, 109, 121, 128, 145, 147, 162, 168, 175, 176, 177, 182, 184, 188, 192, 198, 206, 208, 229, 233, 238, 240, 243, 244, 246, 260, 273, 274, 278, 285, 291, 292, 293, 294, 295, 299, 303, 305, 306, 307, 320, 321, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 380, 483, 490, 542, 550, 551, 584, 613, 634, 635, 650, 783, 785, 786, 787, 788, 789, 833, 835, 851, 852, 853, 859, 860, 862, 863, 865, 867, 869, 870, 871, 872, 873, 874, 876, 878, 882, 885, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 905], "conveni": [30, 37, 71, 97, 102, 163, 168, 177, 184, 187, 192, 195, 197, 198, 207, 212, 223, 226, 229, 233, 234, 244, 250, 255, 256, 257, 260, 263, 264, 265, 269, 277, 278, 283, 284, 288, 294, 299, 303, 309, 316, 317, 320, 331, 332, 333, 334, 335, 341, 549, 550, 551, 557, 584, 608, 635, 643, 652, 653, 724, 727, 729, 773, 774, 783, 785, 786, 787, 788, 789, 848, 945, 946], "491210": 30, "235572": 30, "043707": 30, "642398": 30, "659978": 30, "now": [30, 45, 50, 52, 58, 67, 71, 76, 97, 99, 101, 110, 113, 114, 136, 138, 139, 140, 147, 160, 161, 162, 163, 166, 167, 170, 171, 172, 177, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 198, 202, 204, 205, 206, 208, 209, 212, 222, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 245, 252, 257, 259, 260, 263, 264, 265, 269, 270, 273, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 320, 329, 331, 332, 333, 334, 388, 536, 550, 551, 727, 834, 856, 863], "closer": [30, 50, 67, 136, 167, 184, 237, 255, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 732, 783, 785, 786, 788, 789, 852, 867, 874, 878, 887, 890, 895, 897], "want": [30, 67, 76, 109, 121, 139, 142, 147, 161, 162, 166, 167, 168, 169, 170, 171, 175, 176, 177, 184, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 204, 206, 216, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 243, 244, 245, 250, 251, 255, 257, 259, 260, 263, 264, 270, 273, 274, 309, 310, 320, 323, 324, 331, 332, 333, 334, 336, 338, 342, 346, 386, 446, 507, 512, 550, 551, 635, 652, 801, 811, 858, 888, 893, 905, 935, 936, 938, 941, 944, 948, 949], "column": [30, 36, 57, 121, 122, 128, 139, 166, 167, 169, 171, 177, 192, 198, 201, 215, 223, 234, 237, 238, 243, 255, 256, 282, 283, 286, 287, 292, 295, 299, 307, 312, 319, 320, 325, 326, 328, 331, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 366, 395, 439, 483, 490, 507, 511, 512, 524, 525, 541, 550, 551, 595, 614, 617, 630, 634, 635, 636, 688, 695, 696, 697, 704, 768, 769, 783, 785, 786, 787, 788, 789, 833, 867, 868, 874, 875, 878, 886, 887, 890, 895, 925], "tabl": [30, 67, 151, 169, 170, 197, 198, 211, 216, 229, 243, 244, 268, 289, 303, 308, 319, 320, 331, 332, 333, 334, 336, 338, 339, 341, 342, 344, 345, 346, 347, 535, 536, 550, 551, 613, 732, 833, 854, 859, 866, 893, 898, 899, 900, 904, 930, 938], "epochs_summari": 30, "describ": [30, 39, 42, 101, 126, 140, 144, 175, 177, 182, 184, 188, 191, 192, 194, 195, 196, 197, 198, 215, 219, 222, 226, 228, 233, 234, 235, 237, 238, 244, 245, 252, 253, 256, 261, 270, 277, 294, 310, 312, 316, 319, 320, 333, 334, 364, 422, 423, 429, 483, 491, 504, 507, 515, 550, 551, 563, 634, 635, 636, 670, 706, 733, 753, 754, 755, 756, 757, 758, 759, 799, 801, 804, 811, 875, 881, 935, 940, 954], "round": [30, 63, 136, 166, 171, 175, 186, 194, 198, 212, 222, 229, 230, 232, 233, 239, 243, 252, 270, 278, 286, 292, 294, 303, 305, 329, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 512, 550, 551, 783, 787], "count": [30, 48, 97, 99, 166, 197, 238, 245, 255, 259, 263, 265, 278, 291, 294, 295, 302, 307, 308, 325, 326, 331, 332, 333, 334, 364, 365, 423, 427, 428, 437, 438, 439, 440, 441, 483, 490, 506, 526, 527, 545, 547, 548, 594, 613, 645, 693, 770, 771, 773, 774, 875, 954], "uniqu": [30, 36, 44, 128, 169, 176, 177, 192, 194, 244, 255, 260, 304, 307, 308, 320, 325, 329, 330, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 389, 437, 512, 541, 550, 551, 596, 635, 694, 756, 759, 783, 785, 786, 787, 788, 789, 813, 816, 859, 869], "nan": [30, 96, 97, 170, 237, 257, 258, 259, 260, 270, 278, 286, 287, 291, 292, 295, 303, 305, 331, 332, 333, 334, 550, 551, 580, 641, 659], "top": [30, 139, 142, 149, 162, 166, 177, 184, 186, 187, 198, 202, 207, 212, 219, 227, 230, 232, 233, 234, 235, 243, 245, 246, 255, 273, 274, 282, 309, 319, 320, 323, 331, 332, 333, 334, 339, 345, 347, 833, 834, 835, 853, 865, 869, 870, 898], "freq": [30, 35, 47, 58, 59, 60, 95, 131, 134, 136, 139, 141, 159, 163, 192, 212, 222, 226, 229, 230, 239, 250, 257, 258, 259, 260, 268, 269, 270, 272, 284, 285, 312, 323, 410, 412, 496, 522, 550, 551, 619, 763, 783, 784, 785, 786, 787, 788, 789, 799, 801, 803, 804, 809, 811, 812, 813, 814, 815, 816, 858, 876, 883, 955], "std": [30, 42, 177, 218, 252, 265, 268, 269, 270, 331, 332, 333, 334, 382, 483, 490, 550, 551, 590, 783, 859, 866, 869, 872, 889], "min": [30, 35, 47, 48, 123, 124, 134, 139, 141, 143, 162, 163, 167, 172, 183, 198, 212, 222, 226, 232, 234, 243, 255, 256, 257, 258, 259, 260, 263, 264, 265, 328, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 389, 483, 485, 490, 494, 516, 519, 521, 550, 551, 634, 635, 647, 660, 661, 663, 665, 674, 678, 679, 783, 785, 786, 788, 789, 844, 852, 866, 867, 874, 878, 887, 888, 889, 890, 893, 895, 896, 897, 898], "619": [30, 61, 82, 223, 236, 260, 955], "852": [30, 39], "084": 30, "875": [30, 32, 169, 185, 190, 208, 260, 320, 955], "642": [30, 85, 223, 277, 548], "ran": [30, 260, 336], "There": [30, 101, 109, 147, 149, 167, 170, 177, 182, 184, 185, 192, 196, 197, 198, 203, 206, 217, 219, 226, 228, 229, 230, 232, 233, 237, 239, 240, 243, 245, 255, 268, 273, 309, 317, 320, 331, 475, 507, 635, 677, 732, 935, 936, 937, 945, 948], "subdivid": [30, 186, 187, 288, 323, 338, 342, 346, 455, 731, 893], "particular": [30, 53, 154, 166, 167, 181, 192, 194, 198, 201, 222, 223, 229, 232, 233, 243, 257, 265, 310, 320, 321, 323, 325, 331, 332, 341, 371, 500, 527, 550, 551, 559, 705, 763, 770, 771, 773, 774, 865, 888, 935], "addit": [30, 60, 68, 71, 87, 88, 97, 102, 108, 139, 141, 161, 166, 168, 171, 176, 178, 182, 186, 187, 188, 192, 196, 215, 216, 217, 218, 222, 223, 228, 229, 232, 233, 234, 235, 237, 239, 240, 243, 245, 246, 250, 260, 270, 278, 283, 284, 288, 291, 292, 304, 309, 311, 312, 316, 317, 320, 323, 328, 331, 332, 333, 334, 338, 339, 342, 343, 344, 345, 346, 347, 375, 377, 403, 422, 423, 428, 456, 483, 484, 485, 488, 490, 491, 494, 504, 507, 514, 516, 521, 550, 551, 557, 602, 603, 604, 605, 606, 608, 609, 615, 618, 619, 632, 633, 634, 635, 636, 647, 648, 671, 700, 726, 737, 769, 770, 771, 773, 774, 782, 783, 785, 786, 787, 788, 789, 804, 812, 813, 815, 816, 833, 848, 852, 865, 867, 869, 874, 880, 886, 888, 890, 893, 895, 897, 898, 935, 938, 944, 945, 947, 948], "score": [30, 33, 34, 35, 36, 37, 39, 41, 42, 44, 45, 101, 109, 163, 198, 222, 223, 232, 237, 282, 285, 288, 292, 307, 317, 341, 483, 486, 489, 490, 493, 500, 635, 640, 650, 659, 739, 770, 771, 773, 774, 881, 904, 935], "thei": [30, 31, 52, 67, 71, 73, 76, 97, 98, 101, 108, 109, 121, 134, 141, 146, 166, 167, 168, 170, 175, 177, 178, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 202, 206, 207, 208, 215, 217, 218, 219, 223, 226, 227, 228, 229, 230, 232, 233, 234, 237, 238, 239, 240, 243, 244, 245, 246, 260, 263, 277, 282, 283, 284, 285, 287, 291, 295, 298, 304, 305, 306, 309, 310, 316, 318, 319, 320, 324, 326, 331, 332, 333, 334, 336, 341, 364, 375, 377, 393, 402, 423, 430, 432, 504, 506, 512, 516, 518, 525, 550, 551, 559, 566, 572, 574, 576, 581, 594, 611, 612, 624, 635, 646, 654, 659, 670, 685, 693, 694, 696, 727, 786, 787, 828, 833, 852, 868, 869, 872, 930, 940, 944, 948], "deviat": [30, 80, 81, 117, 124, 127, 148, 176, 177, 204, 223, 232, 236, 255, 257, 269, 283, 292, 319, 320, 328, 331, 332, 333, 334, 354, 382, 483, 617, 618, 619, 635, 659, 745, 765, 783, 785, 786, 787, 788, 789, 801, 811, 812, 815, 844, 859, 860, 866, 869, 875, 878, 880, 895, 896], "how": [30, 31, 35, 36, 39, 44, 45, 48, 52, 53, 57, 59, 69, 70, 71, 73, 84, 89, 91, 93, 94, 95, 96, 97, 98, 102, 105, 117, 121, 122, 125, 126, 132, 140, 143, 144, 147, 150, 152, 153, 156, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 206, 207, 208, 209, 212, 215, 217, 219, 222, 223, 228, 229, 230, 231, 232, 233, 235, 236, 238, 240, 243, 244, 246, 247, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 265, 268, 269, 270, 273, 275, 277, 283, 284, 285, 288, 292, 295, 303, 304, 305, 307, 309, 310, 312, 316, 317, 319, 320, 321, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 342, 344, 345, 346, 347, 364, 365, 376, 380, 381, 406, 411, 417, 434, 435, 436, 443, 483, 489, 490, 495, 510, 525, 527, 541, 542, 545, 547, 548, 550, 551, 556, 563, 564, 572, 573, 576, 584, 602, 611, 612, 613, 634, 635, 638, 646, 659, 670, 671, 712, 713, 714, 715, 723, 727, 770, 771, 773, 774, 781, 783, 784, 785, 786, 787, 788, 789, 804, 833, 834, 835, 842, 851, 852, 856, 859, 861, 865, 866, 867, 870, 874, 878, 879, 880, 881, 887, 888, 890, 893, 894, 895, 897, 898, 903, 905, 938, 940, 942, 949, 955], "onli": [30, 34, 36, 37, 38, 45, 47, 48, 57, 60, 65, 67, 70, 71, 73, 75, 76, 81, 90, 97, 101, 105, 108, 109, 114, 117, 120, 121, 122, 123, 124, 130, 134, 136, 139, 141, 142, 143, 144, 147, 157, 159, 162, 163, 166, 167, 168, 169, 175, 176, 177, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 204, 206, 209, 212, 215, 216, 217, 218, 219, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 243, 244, 245, 246, 250, 251, 252, 255, 257, 258, 259, 260, 263, 264, 265, 269, 270, 273, 274, 278, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 299, 302, 303, 304, 306, 307, 308, 309, 310, 316, 317, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 393, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 500, 502, 504, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 531, 533, 534, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 597, 598, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626, 627, 628, 631, 632, 633, 634, 635, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 677, 678, 679, 682, 683, 684, 685, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 727, 729, 731, 732, 734, 735, 736, 737, 746, 747, 748, 749, 751, 753, 754, 755, 756, 757, 758, 759, 760, 769, 770, 771, 772, 773, 774, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 802, 803, 804, 807, 808, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 828, 832, 833, 835, 842, 851, 852, 853, 854, 856, 859, 860, 863, 865, 867, 868, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 880, 882, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 904, 914, 915, 916, 917, 918, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 940, 945, 948], "500": [30, 36, 37, 48, 97, 106, 107, 109, 112, 114, 143, 161, 167, 169, 171, 207, 210, 217, 219, 222, 223, 229, 232, 236, 238, 239, 240, 252, 255, 635], "ts_arg": [30, 128, 155, 223, 238, 256, 287, 331, 332, 333, 334, 635, 866, 872, 880], "xlim": [30, 45, 63, 65, 124, 186, 207, 212, 222, 229, 230, 238, 239, 252, 255, 265, 270, 273, 333, 334, 869, 871], "plot_joint": [30, 98, 128, 176, 177, 192, 206, 208, 212, 223, 226, 232, 234, 238, 256, 269, 288, 292, 294, 306, 333, 334, 783, 938], "titl": [30, 34, 35, 41, 42, 45, 48, 56, 61, 65, 68, 69, 70, 72, 73, 74, 75, 76, 80, 81, 85, 96, 97, 98, 103, 108, 112, 117, 121, 128, 130, 134, 135, 136, 137, 141, 147, 151, 153, 158, 163, 167, 168, 170, 172, 177, 178, 186, 198, 201, 202, 203, 205, 206, 222, 223, 227, 229, 230, 232, 233, 234, 235, 239, 252, 255, 256, 257, 260, 265, 269, 270, 273, 277, 278, 285, 286, 287, 288, 292, 293, 294, 295, 303, 304, 305, 306, 307, 309, 314, 329, 331, 332, 333, 334, 336, 338, 341, 342, 346, 550, 551, 634, 635, 783, 785, 786, 788, 789, 833, 855, 858, 859, 863, 864, 865, 866, 867, 869, 871, 872, 873, 876, 878, 879, 881, 882, 883, 888, 890, 891, 893, 896, 902], "differ": [30, 35, 42, 47, 48, 53, 54, 59, 63, 65, 70, 71, 73, 80, 81, 90, 95, 97, 104, 106, 107, 111, 121, 123, 126, 128, 130, 134, 137, 138, 139, 141, 147, 150, 151, 156, 160, 161, 163, 166, 168, 169, 170, 173, 175, 176, 177, 178, 182, 184, 186, 188, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 206, 207, 209, 210, 211, 215, 216, 217, 218, 223, 226, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 243, 244, 245, 250, 255, 256, 257, 258, 260, 263, 264, 265, 269, 273, 274, 277, 280, 284, 287, 289, 292, 294, 295, 298, 301, 302, 303, 304, 307, 309, 312, 316, 317, 318, 319, 320, 325, 326, 331, 332, 333, 334, 335, 336, 338, 339, 342, 345, 346, 347, 348, 364, 365, 366, 371, 388, 410, 423, 427, 428, 430, 432, 433, 439, 440, 441, 460, 475, 483, 490, 492, 504, 506, 507, 517, 524, 526, 527, 541, 542, 545, 547, 548, 550, 551, 559, 566, 574, 587, 594, 608, 610, 611, 612, 613, 622, 635, 637, 645, 646, 652, 659, 668, 670, 684, 687, 693, 694, 697, 701, 724, 734, 735, 736, 737, 743, 746, 747, 748, 749, 765, 770, 771, 772, 773, 774, 782, 783, 784, 785, 786, 787, 788, 789, 801, 811, 833, 839, 851, 861, 865, 869, 870, 873, 874, 875, 880, 882, 888, 891, 893, 899, 909, 926, 935, 940, 945, 949, 955], "wave": [30, 72, 122, 141, 163, 170, 177, 192, 229, 234, 256, 268, 277, 317, 331, 332, 333, 334, 475, 476, 550, 551, 583, 647, 652, 660, 785, 788, 797, 803], "contrast": [30, 33, 114, 123, 126, 175, 177, 192, 196, 235, 252, 255, 256, 263, 268, 269, 296, 312, 317, 330, 331, 332, 333, 334, 783, 787, 938], "although": [30, 47, 92, 128, 166, 169, 175, 187, 198, 228, 229, 231, 233, 243, 304, 320, 329, 516, 550, 551, 765, 948], "shouldn": [30, 177, 277, 342, 345, 622], "expect": [30, 58, 64, 121, 141, 148, 170, 182, 185, 187, 188, 191, 192, 193, 198, 206, 212, 217, 223, 229, 232, 233, 234, 238, 243, 244, 250, 252, 255, 259, 260, 265, 270, 295, 304, 307, 309, 310, 311, 319, 320, 321, 331, 332, 333, 334, 398, 400, 405, 427, 550, 551, 558, 567, 571, 578, 613, 635, 670, 694, 695, 699, 710, 721, 833, 865, 875, 882, 888, 935, 940], "among": [30, 36, 53, 62, 82, 198, 229, 255, 289, 292, 310, 342, 344, 433, 612, 614, 616, 635, 659, 702, 705, 763, 833, 839, 951, 955], "minu": [30, 167, 170, 257, 270, 320, 635, 724, 768], "difference_wav": 30, "weight": [30, 31, 33, 37, 41, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 80, 81, 84, 85, 87, 100, 101, 117, 121, 126, 131, 134, 135, 136, 137, 151, 163, 167, 170, 175, 177, 183, 192, 194, 202, 203, 204, 205, 206, 207, 208, 211, 215, 218, 222, 223, 227, 229, 230, 231, 233, 234, 235, 238, 251, 252, 255, 256, 258, 263, 264, 265, 277, 283, 285, 286, 288, 289, 292, 299, 302, 305, 316, 317, 319, 323, 336, 337, 342, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 422, 434, 487, 488, 489, 501, 504, 527, 528, 545, 547, 548, 562, 602, 608, 609, 613, 634, 635, 668, 739, 740, 745, 746, 749, 770, 771, 773, 774, 778, 792, 795, 803, 867, 890, 938], "clear": [30, 101, 140, 144, 166, 183, 227, 231, 233, 237, 239, 240, 252, 255, 289, 309, 312, 328, 331, 332, 336, 355, 370, 550, 551, 601, 655, 820, 833, 866], "pattern": [30, 37, 43, 45, 46, 47, 53, 72, 106, 109, 139, 140, 168, 169, 187, 192, 193, 198, 222, 226, 229, 232, 233, 234, 238, 270, 277, 280, 284, 285, 300, 302, 309, 316, 317, 320, 331, 332, 333, 334, 336, 341, 380, 396, 432, 443, 483, 487, 489, 490, 491, 498, 501, 507, 512, 533, 566, 568, 632, 636, 697, 710, 720, 721, 736, 783, 785, 786, 787, 955], "when": [30, 47, 53, 54, 57, 70, 71, 72, 73, 87, 97, 101, 102, 107, 108, 109, 110, 117, 121, 122, 130, 134, 142, 149, 154, 166, 168, 169, 170, 171, 172, 175, 176, 177, 183, 184, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 201, 204, 206, 208, 210, 215, 216, 217, 218, 219, 223, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 250, 251, 255, 257, 260, 268, 269, 273, 274, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 314, 316, 318, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 354, 364, 365, 377, 380, 384, 385, 407, 416, 417, 418, 422, 423, 427, 428, 429, 430, 432, 434, 439, 440, 441, 442, 445, 483, 490, 491, 494, 500, 502, 504, 508, 510, 512, 515, 517, 518, 519, 521, 522, 524, 526, 527, 530, 533, 542, 545, 547, 548, 550, 551, 559, 564, 566, 567, 568, 572, 574, 576, 580, 602, 603, 604, 605, 606, 608, 609, 613, 618, 619, 621, 624, 634, 635, 637, 640, 645, 646, 649, 650, 652, 655, 659, 660, 662, 663, 670, 671, 685, 688, 690, 694, 696, 698, 700, 713, 719, 721, 722, 723, 727, 732, 733, 744, 747, 770, 771, 772, 773, 774, 778, 782, 783, 784, 785, 786, 787, 788, 789, 791, 792, 794, 797, 801, 803, 811, 823, 830, 833, 835, 842, 843, 852, 859, 863, 865, 867, 868, 869, 870, 871, 872, 874, 875, 877, 878, 880, 882, 885, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 901, 903, 914, 915, 926, 928, 935, 936, 938, 940, 944, 945, 947], "howev": [30, 42, 47, 71, 97, 101, 102, 166, 168, 172, 175, 188, 193, 195, 196, 197, 198, 216, 217, 218, 219, 222, 223, 227, 229, 231, 232, 233, 234, 235, 239, 240, 243, 244, 255, 257, 259, 260, 263, 265, 270, 282, 303, 309, 310, 320, 331, 332, 336, 364, 380, 423, 475, 504, 566, 568, 583, 602, 772, 935, 946], "could": [30, 54, 55, 56, 64, 65, 67, 69, 96, 110, 131, 166, 170, 177, 186, 187, 192, 195, 197, 198, 201, 205, 206, 207, 218, 226, 228, 232, 233, 234, 235, 237, 243, 244, 245, 250, 255, 256, 263, 265, 270, 280, 282, 283, 286, 288, 289, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 309, 310, 312, 331, 332, 333, 334, 336, 337, 342, 364, 450, 475, 476, 482, 504, 506, 510, 526, 550, 551, 552, 559, 635, 638, 653, 660, 661, 684, 837, 842, 921, 935], "narrow": [30, 226, 230, 270, 305, 341], "search": [30, 177, 182, 223, 277, 309, 341, 344, 364, 486, 493, 510, 531, 638, 643, 650, 801, 811, 812, 815, 851, 915, 935, 947], "bit": [30, 31, 33, 136, 167, 170, 186, 197, 206, 212, 216, 229, 231, 236, 239, 255, 263, 265, 270, 273, 274, 302, 317, 320, 331, 332, 336, 410, 550, 551, 559, 566, 573, 940, 941, 947], "sinc": [30, 45, 58, 69, 70, 97, 121, 142, 146, 161, 166, 167, 168, 170, 177, 186, 192, 193, 195, 197, 198, 201, 204, 212, 215, 216, 218, 227, 228, 229, 230, 231, 232, 233, 234, 235, 240, 243, 244, 245, 250, 255, 258, 263, 265, 270, 274, 281, 288, 309, 312, 316, 320, 325, 326, 331, 332, 333, 334, 337, 341, 342, 345, 357, 380, 423, 427, 428, 504, 513, 514, 515, 516, 527, 539, 550, 551, 597, 622, 635, 646, 652, 659, 670, 770, 771, 772, 773, 774, 852, 935], "paradigm": [30, 33, 170, 188, 192, 226, 229, 301, 302, 317, 868], "might": [30, 31, 45, 47, 97, 147, 167, 170, 177, 182, 187, 188, 193, 194, 219, 223, 229, 232, 235, 255, 260, 263, 270, 273, 291, 309, 311, 316, 320, 338, 342, 346, 400, 507, 553, 621, 635, 678, 770, 893, 935, 940, 941], "best": [30, 31, 36, 42, 100, 109, 148, 161, 168, 175, 188, 192, 202, 203, 204, 206, 219, 222, 228, 232, 237, 252, 309, 310, 311, 312, 318, 320, 337, 423, 428, 491, 550, 551, 650, 739, 741, 742, 834, 935, 947, 949], "electrod": [30, 53, 94, 104, 105, 111, 145, 147, 150, 156, 161, 164, 167, 169, 176, 185, 187, 191, 192, 196, 213, 214, 218, 222, 226, 229, 231, 235, 237, 243, 255, 274, 277, 284, 285, 286, 289, 291, 292, 295, 302, 303, 304, 305, 307, 312, 316, 317, 319, 328, 331, 332, 333, 334, 335, 336, 340, 342, 348, 380, 381, 384, 394, 396, 398, 399, 400, 401, 402, 403, 406, 423, 435, 443, 483, 490, 524, 535, 542, 550, 551, 557, 559, 561, 566, 572, 574, 581, 597, 601, 602, 613, 634, 635, 643, 650, 665, 667, 669, 698, 727, 783, 785, 786, 787, 788, 789, 825, 833, 834, 851, 852, 855, 857, 859, 867, 869, 871, 874, 875, 878, 885, 887, 889, 890, 891, 895, 897, 903, 905, 955], "over": [30, 31, 34, 35, 38, 47, 53, 54, 71, 72, 84, 85, 94, 97, 106, 107, 130, 131, 134, 136, 139, 140, 142, 150, 156, 161, 162, 163, 175, 176, 177, 185, 187, 188, 192, 195, 198, 201, 202, 218, 219, 227, 229, 232, 234, 237, 239, 245, 246, 252, 255, 256, 259, 260, 268, 270, 277, 278, 283, 285, 286, 289, 303, 304, 309, 310, 317, 318, 319, 320, 323, 325, 330, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 358, 359, 362, 375, 389, 411, 423, 429, 483, 490, 492, 494, 522, 525, 550, 551, 588, 604, 606, 609, 618, 619, 635, 639, 656, 671, 684, 697, 732, 733, 758, 770, 779, 783, 785, 786, 787, 788, 789, 796, 804, 817, 833, 848, 866, 867, 877, 882, 935, 948, 955], "occipit": [30, 73, 75, 195, 231, 240, 270, 317, 320, 717], "lobe": [30, 73, 161, 162, 206], "easier": [30, 166, 168, 170, 176, 177, 182, 198, 218, 223, 227, 229, 232, 233, 234, 235, 284, 292, 309, 325, 442, 940], "spot": [30, 227, 230, 259, 285, 308, 341], "area": [30, 31, 80, 97, 121, 143, 149, 161, 204, 218, 219, 223, 227, 232, 240, 245, 251, 255, 259, 270, 280, 292, 309, 320, 331, 332, 333, 334, 337, 550, 551, 655, 657, 665, 744, 783, 857, 859, 869, 871, 889], "dictionari": [30, 36, 53, 62, 82, 85, 121, 142, 162, 166, 167, 168, 170, 171, 175, 176, 177, 192, 193, 195, 215, 232, 234, 237, 240, 243, 244, 250, 273, 277, 292, 293, 323, 325, 326, 328, 331, 332, 333, 334, 335, 336, 340, 341, 342, 344, 355, 364, 365, 366, 370, 378, 380, 392, 393, 408, 423, 427, 428, 434, 437, 438, 439, 440, 441, 443, 483, 485, 490, 494, 507, 510, 512, 515, 518, 519, 521, 522, 524, 526, 527, 545, 546, 547, 548, 549, 550, 551, 553, 585, 596, 601, 613, 635, 645, 647, 648, 650, 652, 655, 658, 659, 690, 697, 702, 713, 715, 718, 724, 732, 769, 783, 820, 823, 833, 835, 858, 859, 865, 866, 868, 870, 875, 878, 880, 888, 894, 948, 955], "concentr": [30, 217, 233, 238, 251, 291, 488, 608, 609, 672, 677, 792, 795, 803, 867], "b11": 30, "ylim": [30, 33, 35, 45, 61, 65, 66, 72, 77, 85, 86, 126, 139, 141, 177, 186, 222, 229, 231, 238, 239, 255, 265, 270, 273, 285, 294, 302, 333, 334, 859, 869, 873], "pretti": [30, 167, 170, 229, 232, 234, 935], "determin": [30, 48, 108, 155, 167, 171, 177, 187, 192, 195, 197, 204, 212, 217, 229, 231, 237, 243, 244, 245, 255, 258, 260, 282, 283, 284, 286, 292, 302, 306, 320, 325, 328, 329, 331, 332, 333, 334, 336, 339, 340, 345, 347, 350, 364, 365, 373, 380, 382, 410, 417, 423, 427, 428, 439, 440, 441, 456, 483, 489, 490, 491, 500, 522, 526, 527, 545, 547, 548, 550, 551, 563, 589, 593, 613, 635, 665, 668, 670, 675, 676, 698, 717, 775, 801, 811, 813, 816, 833, 863, 865, 866, 871, 873, 874, 875, 876, 885, 892, 898, 921, 935, 948], "whether": [30, 39, 108, 167, 170, 171, 172, 197, 204, 206, 223, 227, 232, 233, 237, 270, 284, 285, 286, 306, 309, 320, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 354, 364, 365, 380, 389, 390, 391, 392, 394, 423, 428, 433, 456, 463, 483, 490, 505, 516, 524, 542, 549, 550, 551, 553, 562, 570, 594, 602, 603, 604, 605, 606, 609, 611, 612, 613, 617, 618, 619, 634, 635, 636, 644, 650, 652, 653, 655, 659, 660, 661, 665, 668, 671, 685, 724, 727, 747, 748, 770, 771, 773, 774, 783, 784, 785, 786, 787, 788, 789, 791, 794, 797, 833, 835, 843, 852, 856, 859, 861, 863, 864, 865, 866, 867, 869, 870, 873, 874, 878, 880, 882, 885, 887, 888, 889, 890, 891, 893, 895, 896, 897, 898, 901, 905, 935, 947], "stronger": [30, 167, 218, 257, 265, 333, 334, 869], "along": [30, 45, 72, 94, 142, 146, 162, 166, 168, 186, 192, 194, 196, 204, 212, 222, 223, 226, 227, 231, 232, 235, 236, 243, 245, 246, 252, 263, 285, 288, 291, 300, 309, 312, 317, 319, 320, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 354, 483, 486, 490, 493, 494, 496, 523, 541, 542, 547, 550, 551, 634, 635, 687, 762, 763, 770, 771, 773, 774, 777, 783, 785, 786, 787, 788, 789, 833, 835, 851, 852, 859, 865, 866, 867, 870, 874, 878, 887, 890, 891, 893, 895, 896, 897, 898, 940, 941], "phase_coh": 30, "sort": [30, 33, 41, 47, 53, 73, 121, 148, 150, 156, 163, 169, 186, 196, 255, 283, 288, 331, 332, 333, 334, 336, 341, 392, 423, 428, 491, 509, 512, 536, 567, 635, 705, 784, 787, 866, 869, 871, 930, 949, 955], "2f": [30, 85, 183, 338, 339, 342, 345, 346, 347, 635, 833, 878, 893, 898], "zip": [30, 35, 36, 48, 53, 73, 107, 117, 134, 140, 141, 147, 163, 166, 176, 186, 191, 206, 222, 227, 229, 230, 232, 233, 235, 255, 256, 257, 258, 259, 260, 265, 269, 273, 309, 457, 575, 952], "c22": 30, "subplot": [30, 36, 37, 38, 39, 41, 45, 47, 48, 65, 67, 71, 73, 84, 95, 96, 97, 98, 99, 100, 108, 112, 117, 120, 123, 126, 131, 134, 139, 140, 141, 142, 143, 147, 149, 162, 163, 168, 170, 172, 177, 186, 196, 198, 202, 203, 206, 207, 209, 212, 222, 223, 229, 234, 237, 238, 239, 246, 252, 255, 256, 257, 258, 259, 260, 269, 270, 273, 274, 292, 295, 298, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 783, 785, 786, 788, 789, 801, 811, 833, 857, 858, 867, 868, 873, 874, 878, 883, 887, 890, 895, 897, 900], "figsiz": [30, 38, 41, 45, 48, 71, 73, 97, 100, 123, 139, 140, 141, 142, 147, 162, 170, 186, 198, 202, 209, 212, 222, 229, 234, 237, 238, 252, 255, 256, 258, 259, 260, 269, 270, 273, 635, 880, 881], "cmap": [30, 35, 36, 39, 41, 42, 45, 48, 67, 97, 127, 128, 134, 136, 139, 141, 142, 143, 147, 149, 162, 169, 186, 208, 222, 223, 237, 255, 257, 258, 259, 260, 269, 308, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 783, 784, 785, 786, 788, 789, 844, 850, 852, 859, 861, 866, 867, 871, 874, 877, 878, 887, 890, 891, 895, 896, 897, 906], "magma": 30, "consider": [30, 107, 126, 177, 228, 229, 232, 239, 251, 260, 277, 285, 312, 320, 341, 769, 948], "chosen": [30, 71, 163, 171, 177, 212, 226, 229, 231, 232, 234, 268, 320, 325, 328, 331, 332, 333, 334, 336, 339, 340, 344, 345, 347, 427, 483, 485, 490, 494, 496, 519, 521, 522, 541, 550, 551, 587, 610, 634, 635, 650, 668, 687, 735, 736, 770, 771, 773, 774, 783, 784, 785, 786, 787, 788, 789, 801, 811, 833, 851, 852, 861, 865, 867, 871, 874, 878, 881, 887, 888, 889, 890, 891, 895, 897], "test": [30, 34, 36, 39, 41, 42, 45, 52, 53, 117, 122, 125, 129, 139, 151, 155, 161, 166, 177, 191, 194, 197, 198, 215, 222, 223, 236, 237, 243, 256, 257, 258, 261, 262, 265, 266, 267, 270, 277, 278, 281, 285, 287, 288, 289, 291, 293, 299, 301, 303, 308, 312, 317, 320, 331, 332, 333, 334, 336, 342, 343, 344, 356, 358, 364, 386, 429, 456, 486, 500, 504, 506, 522, 550, 551, 560, 580, 584, 601, 602, 610, 616, 632, 635, 659, 670, 697, 710, 712, 755, 761, 763, 765, 767, 770, 771, 772, 773, 774, 775, 776, 777, 783, 785, 786, 787, 788, 789, 815, 833, 842, 856, 859, 867, 874, 881, 895, 935, 940, 942, 945, 955], "interpol": [30, 41, 50, 53, 87, 97, 104, 111, 113, 117, 120, 121, 122, 146, 149, 161, 162, 177, 203, 207, 215, 223, 232, 237, 240, 252, 255, 268, 278, 282, 283, 284, 285, 286, 287, 288, 291, 292, 294, 295, 297, 299, 301, 302, 303, 304, 305, 306, 308, 328, 331, 332, 333, 334, 340, 344, 346, 347, 483, 490, 517, 540, 550, 551, 634, 635, 650, 654, 656, 662, 669, 700, 732, 734, 735, 736, 748, 783, 785, 786, 788, 789, 821, 833, 835, 852, 867, 870, 874, 878, 887, 890, 895, 897, 948, 955], "miss": [30, 70, 96, 110, 149, 161, 177, 184, 185, 206, 209, 215, 217, 229, 235, 240, 270, 278, 282, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 302, 303, 304, 305, 306, 308, 309, 319, 331, 332, 333, 334, 336, 344, 384, 407, 457, 475, 489, 550, 551, 559, 566, 572, 656, 670, 769, 868, 869, 945, 948, 949], "furthermor": [30, 181, 201, 204, 216, 231, 316, 320], "mark": [30, 34, 37, 75, 101, 105, 109, 119, 120, 138, 147, 154, 161, 163, 168, 170, 176, 177, 192, 195, 196, 197, 204, 212, 216, 217, 218, 228, 229, 232, 233, 235, 236, 237, 238, 243, 245, 246, 260, 273, 277, 278, 280, 281, 282, 288, 292, 295, 300, 302, 304, 306, 307, 308, 309, 317, 318, 319, 324, 326, 331, 332, 333, 334, 382, 441, 450, 458, 475, 476, 540, 542, 549, 550, 551, 634, 635, 640, 643, 649, 650, 654, 659, 669, 670, 678, 685, 694, 696, 724, 783, 785, 786, 787, 788, 789, 829, 855, 865, 867, 874, 879, 881, 888, 889, 895], "exg": 30, "prefix": [30, 101, 181, 196, 201, 319, 323, 328, 331, 332, 333, 334, 340, 424, 425, 483, 490, 550, 551, 559, 566, 567, 634, 635, 650, 683, 694, 783, 785, 786, 788, 789, 852, 874, 878, 887, 890, 895], "interpolate_bad": [30, 97, 105, 227, 285, 287, 288, 291, 292, 320, 331, 332, 333, 334, 540, 550, 551], "reset_bad": [30, 105, 227, 320, 331, 332, 333, 334, 550, 551], "exg1": 30, "exg2": 30, "exg3": 30, "exg4": 30, "spline": [30, 97, 98, 105, 177, 227, 277, 282, 302, 320, 331, 332, 333, 334, 550, 551, 644], "524face": 30, "To": [30, 31, 37, 44, 45, 48, 59, 70, 71, 114, 117, 121, 122, 140, 143, 149, 159, 163, 166, 168, 170, 172, 175, 176, 177, 182, 184, 185, 186, 187, 192, 194, 195, 196, 197, 198, 201, 204, 206, 210, 212, 215, 217, 218, 219, 222, 223, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 245, 246, 250, 252, 255, 257, 259, 260, 264, 265, 269, 273, 282, 292, 295, 300, 302, 303, 304, 309, 310, 314, 316, 317, 318, 320, 323, 325, 326, 331, 332, 333, 334, 337, 341, 346, 347, 364, 365, 423, 427, 428, 489, 496, 507, 513, 514, 515, 516, 518, 524, 550, 551, 559, 564, 570, 582, 587, 591, 597, 635, 649, 652, 659, 661, 666, 668, 670, 685, 687, 702, 728, 732, 735, 736, 737, 743, 746, 747, 749, 770, 771, 772, 773, 774, 776, 791, 794, 801, 810, 811, 812, 813, 814, 815, 816, 817, 831, 833, 852, 865, 878, 880, 882, 888, 899, 900, 927, 935, 938, 940, 941, 944, 945, 947, 949], "predict": [30, 36, 38, 39, 41, 42, 43, 46, 53, 68, 128, 163, 167, 202, 222, 223, 277, 295, 303, 317, 336, 364, 380, 396, 443, 486, 489, 493, 495, 500, 523, 551, 603, 610, 897, 955], "purpos": [30, 34, 37, 38, 47, 140, 166, 167, 175, 182, 194, 206, 216, 226, 227, 228, 229, 232, 233, 235, 259, 263, 265, 270, 277, 310, 316, 317, 319, 331, 332, 447, 448, 449, 450, 452, 453, 454, 456, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 494, 496, 550, 551, 851, 865, 888, 937, 938, 948], "intercept": [30, 128, 768], "predictor_var": 30, "where": [30, 36, 39, 57, 71, 95, 97, 101, 107, 108, 109, 117, 121, 122, 128, 139, 163, 166, 167, 168, 170, 175, 177, 181, 186, 191, 192, 193, 194, 195, 196, 198, 201, 208, 209, 210, 215, 217, 218, 219, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 245, 250, 251, 252, 255, 257, 259, 260, 263, 264, 265, 270, 278, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 302, 303, 304, 305, 306, 307, 308, 309, 310, 316, 317, 319, 320, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 344, 345, 346, 347, 387, 389, 390, 391, 403, 422, 442, 447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 490, 496, 498, 517, 519, 522, 524, 550, 551, 587, 610, 634, 635, 637, 644, 650, 652, 653, 654, 670, 733, 739, 740, 741, 742, 743, 745, 747, 748, 763, 764, 769, 770, 771, 773, 774, 783, 785, 786, 787, 788, 789, 801, 811, 812, 813, 815, 816, 833, 839, 851, 852, 853, 856, 857, 858, 865, 866, 867, 874, 878, 887, 888, 889, 890, 895, 897, 901, 935, 942, 944, 945, 947], "func": [30, 280, 283, 309, 338, 339, 342, 345, 346, 347, 559, 566, 574, 581], "reg": [30, 34, 35, 38, 47, 60, 75, 206, 252, 280, 284, 288, 320, 364, 365, 483, 490, 491, 636], "design_matrix": [30, 167, 768], "25728": 30, "target": [30, 43, 46, 53, 75, 104, 111, 128, 155, 167, 187, 223, 230, 232, 255, 256, 270, 285, 299, 309, 331, 333, 334, 336, 482, 483, 484, 485, 486, 487, 488, 490, 491, 493, 494, 495, 496, 500, 509, 550, 564, 595, 632, 635, 636, 697, 955], "regressor": [30, 96, 128, 223, 255, 768], "getattr": [30, 801, 811], "_field": [30, 167], "beta": [30, 38, 45, 58, 59, 60, 121, 128, 137, 139, 140, 142, 163, 167, 255, 269, 331, 332, 333, 334, 550, 551, 685, 768, 785, 786, 788, 789, 867], "stderr": [30, 167, 768], "t_val": [30, 167, 256, 768], "p_val": [30, 128, 167, 257, 258, 281, 764, 768], "mlog10_p_val": [30, 167, 281, 768], "just": [30, 31, 54, 58, 59, 67, 68, 70, 74, 76, 85, 97, 101, 108, 109, 128, 130, 136, 140, 141, 142, 147, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 177, 182, 184, 186, 187, 188, 191, 192, 194, 195, 196, 197, 198, 203, 205, 206, 207, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 252, 256, 257, 260, 263, 264, 265, 269, 270, 292, 305, 307, 309, 318, 320, 328, 331, 332, 333, 334, 336, 338, 339, 340, 342, 344, 345, 346, 347, 380, 483, 490, 517, 518, 550, 551, 567, 610, 634, 635, 645, 650, 669, 683, 694, 783, 785, 786, 788, 789, 829, 852, 859, 865, 867, 869, 871, 874, 875, 878, 882, 885, 887, 888, 889, 890, 891, 895, 897, 905, 940, 945, 949], "would": [30, 31, 45, 69, 70, 97, 166, 169, 170, 176, 177, 181, 182, 186, 187, 198, 201, 207, 217, 218, 223, 226, 228, 229, 230, 231, 232, 233, 234, 237, 250, 255, 256, 257, 260, 263, 265, 270, 278, 282, 283, 285, 287, 288, 291, 292, 293, 294, 295, 303, 304, 306, 307, 308, 310, 319, 320, 331, 332, 333, 334, 338, 339, 342, 344, 345, 346, 347, 357, 364, 365, 423, 427, 428, 439, 440, 441, 450, 456, 475, 476, 483, 490, 504, 505, 506, 518, 526, 527, 533, 545, 547, 548, 550, 551, 566, 600, 613, 635, 646, 670, 719, 783, 787, 833, 869, 874, 875, 888, 947], "higher": [30, 52, 64, 70, 80, 96, 101, 121, 167, 177, 210, 212, 219, 223, 226, 228, 230, 232, 237, 251, 257, 260, 270, 285, 295, 309, 320, 341, 670, 801, 811, 945, 946], "better": [30, 35, 45, 69, 87, 97, 121, 168, 172, 177, 209, 210, 222, 229, 231, 232, 237, 240, 255, 277, 282, 285, 286, 288, 291, 292, 293, 294, 303, 304, 309, 312, 320, 333, 334, 338, 339, 342, 345, 346, 347, 482, 650, 666, 670, 799, 801, 811, 833, 893, 898, 940], "visibl": [30, 73, 198, 218, 229, 230, 236, 245, 246, 270, 273, 286, 289, 319, 331, 332, 333, 334, 550, 551, 635, 723, 783, 833, 865, 871, 882, 888, 903], "neg": [30, 45, 48, 65, 98, 139, 141, 170, 176, 177, 188, 215, 218, 230, 232, 239, 255, 263, 270, 281, 284, 289, 295, 304, 317, 320, 328, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 345, 346, 347, 353, 374, 483, 489, 490, 495, 502, 511, 525, 550, 551, 576, 634, 635, 655, 661, 668, 741, 742, 767, 783, 785, 786, 787, 788, 789, 854, 859, 865, 867, 874, 878, 887, 888, 890, 893, 895, 897, 899, 935], "around": [30, 75, 97, 102, 109, 121, 139, 167, 168, 170, 172, 177, 191, 192, 197, 198, 206, 209, 218, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 240, 243, 250, 270, 319, 331, 332, 333, 334, 341, 427, 483, 490, 502, 507, 509, 550, 551, 587, 635, 647, 648, 652, 653, 687, 745, 783, 785, 786, 787, 788, 789, 859, 865, 871, 874, 875, 882, 888, 947], "200": [30, 35, 38, 73, 85, 102, 107, 108, 111, 117, 119, 122, 126, 136, 138, 141, 157, 161, 162, 168, 171, 172, 177, 184, 195, 198, 205, 207, 209, 212, 218, 223, 228, 230, 233, 234, 236, 240, 250, 258, 259, 260, 265, 269, 273, 277, 294, 316, 320, 410, 412, 416, 522, 550, 551, 608, 609, 635, 668, 948, 955], "follow": [30, 50, 53, 58, 59, 60, 67, 68, 94, 96, 97, 106, 121, 130, 134, 136, 140, 143, 155, 161, 163, 167, 170, 177, 181, 184, 186, 187, 188, 194, 196, 198, 204, 206, 215, 216, 217, 219, 223, 228, 229, 230, 231, 235, 237, 239, 243, 244, 245, 250, 252, 255, 257, 259, 263, 265, 274, 279, 280, 281, 282, 283, 287, 289, 290, 296, 297, 298, 299, 300, 301, 302, 303, 305, 308, 311, 316, 317, 319, 320, 323, 324, 325, 326, 328, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 344, 345, 346, 347, 354, 355, 364, 365, 370, 371, 423, 434, 440, 456, 475, 483, 507, 509, 510, 521, 522, 523, 527, 549, 550, 551, 552, 557, 559, 566, 597, 601, 618, 619, 635, 652, 655, 659, 670, 671, 700, 710, 728, 764, 766, 768, 783, 785, 786, 787, 788, 789, 801, 811, 812, 815, 816, 820, 823, 829, 833, 835, 848, 859, 867, 872, 874, 895, 935, 938, 940, 941, 943, 945, 947, 949], "onset": [30, 34, 59, 60, 144, 161, 162, 163, 166, 170, 172, 192, 194, 212, 218, 228, 229, 231, 240, 245, 270, 278, 287, 288, 289, 291, 294, 317, 319, 324, 325, 331, 332, 423, 512, 524, 550, 551, 570, 638, 655, 684, 688, 790, 791, 792], "correspond": [30, 42, 57, 74, 76, 88, 99, 103, 114, 119, 121, 130, 139, 147, 163, 169, 170, 177, 181, 182, 184, 186, 194, 196, 198, 201, 206, 207, 208, 215, 218, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 243, 244, 245, 246, 257, 259, 260, 265, 270, 282, 283, 301, 304, 307, 309, 317, 319, 320, 324, 326, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 356, 364, 365, 367, 369, 372, 380, 390, 391, 392, 393, 403, 423, 427, 428, 431, 439, 440, 441, 450, 456, 475, 476, 483, 484, 486, 487, 489, 490, 493, 495, 499, 507, 512, 526, 527, 528, 536, 545, 547, 548, 550, 551, 559, 561, 563, 566, 571, 574, 576, 581, 582, 587, 591, 593, 596, 598, 600, 611, 612, 613, 634, 635, 636, 650, 652, 659, 660, 665, 695, 696, 699, 710, 723, 727, 732, 735, 748, 763, 764, 767, 768, 769, 770, 771, 773, 774, 775, 783, 784, 785, 786, 787, 788, 789, 797, 798, 804, 812, 815, 823, 824, 826, 833, 837, 844, 846, 848, 852, 853, 854, 859, 865, 866, 867, 869, 871, 873, 874, 875, 878, 887, 888, 890, 893, 895, 897, 898, 899, 935, 947], "unit": [30, 34, 40, 45, 47, 58, 109, 127, 130, 161, 162, 167, 182, 186, 194, 195, 206, 216, 217, 219, 227, 232, 234, 237, 243, 252, 257, 258, 260, 268, 269, 273, 277, 278, 282, 283, 285, 286, 288, 289, 291, 292, 293, 294, 295, 302, 305, 306, 307, 309, 319, 326, 328, 329, 330, 331, 332, 333, 334, 336, 340, 342, 364, 365, 373, 381, 398, 403, 405, 407, 428, 434, 443, 483, 485, 490, 492, 494, 504, 519, 521, 522, 527, 549, 550, 551, 553, 559, 561, 566, 567, 576, 635, 646, 652, 658, 659, 670, 683, 694, 733, 775, 783, 785, 786, 788, 789, 824, 826, 833, 844, 859, 866, 867, 869, 871, 874, 875, 887, 889, 895, 896, 903, 906, 954], "keep": [30, 37, 38, 53, 57, 87, 114, 131, 137, 138, 139, 163, 168, 171, 175, 177, 186, 187, 188, 191, 192, 195, 207, 212, 227, 228, 229, 230, 231, 232, 243, 244, 245, 250, 257, 288, 303, 304, 309, 310, 318, 323, 328, 331, 332, 333, 334, 358, 359, 362, 365, 441, 489, 507, 550, 551, 562, 604, 606, 609, 635, 671, 784, 797, 949], "avoid": [30, 34, 35, 54, 66, 85, 97, 114, 141, 163, 166, 177, 187, 192, 193, 195, 198, 209, 216, 218, 226, 229, 230, 234, 243, 245, 255, 268, 277, 278, 280, 282, 286, 287, 288, 289, 291, 292, 295, 301, 303, 304, 307, 310, 318, 320, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 342, 345, 346, 347, 423, 500, 512, 550, 551, 559, 566, 570, 574, 615, 635, 704, 710, 743, 746, 749, 765, 776, 777, 783, 787, 833, 893, 898, 935, 940, 945], "convers": [30, 182, 194, 216, 218, 219, 227, 229, 230, 286, 288, 291, 294, 300, 303, 306, 320, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 550, 551, 576, 679, 770, 771, 773, 774, 783, 787], "micro": [30, 53, 104, 307, 331, 332, 333, 334, 550, 551], "volt": [30, 167, 232, 234, 250, 294, 320, 331, 332, 333, 334, 516, 550, 551], "topomap_arg": [30, 97, 128, 223, 238, 256, 287, 288, 333, 334, 635, 783, 855, 872, 880], "set_ylabel": [30, 38, 39, 47, 48, 71, 97, 123, 131, 139, 140, 142, 159, 170, 198, 209, 223, 229, 233, 258, 259, 260, 270, 274], "systemat": [30, 167, 188, 229, 277, 301, 486, 654, 935], "larg": [30, 36, 54, 97, 102, 106, 109, 110, 141, 147, 162, 168, 176, 177, 193, 197, 198, 204, 212, 223, 226, 227, 229, 230, 231, 233, 234, 235, 238, 239, 246, 255, 260, 263, 270, 277, 287, 291, 292, 293, 294, 295, 304, 306, 318, 331, 332, 337, 364, 423, 427, 428, 432, 492, 522, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 594, 615, 635, 637, 730, 770, 771, 773, 774, 833, 853, 900, 945], "consist": [30, 36, 69, 97, 103, 139, 151, 183, 184, 187, 194, 196, 201, 209, 216, 217, 218, 223, 227, 228, 229, 231, 232, 236, 255, 257, 258, 277, 282, 283, 284, 285, 286, 289, 291, 292, 293, 295, 301, 302, 304, 305, 306, 310, 316, 317, 319, 320, 323, 331, 332, 333, 334, 344, 348, 389, 438, 550, 551, 599, 635, 643, 650, 654, 735, 736, 768, 783, 785, 786, 787, 788, 789, 790, 791, 792], "guillaum": [30, 41, 114, 177, 183, 223, 229, 255, 277, 283, 288, 289, 291, 292, 293, 294, 295, 303, 304, 317, 636, 776, 777], "rousselet": [30, 177, 229, 277, 317], "2016": [30, 45, 72, 109, 140, 154, 222, 229, 277, 313, 317, 458, 459, 489, 547, 548, 635], "7488": [30, 277], "1556": [30, 277], "carl": [30, 154, 277, 317, 458], "gaspar": [30, 277, 317], "cyril": [30, 277, 317], "pernet": [30, 277, 317], "jess": [30, 277, 317], "husk": [30, 277, 317], "patrick": [30, 277, 317, 320], "j": [30, 34, 38, 39, 44, 45, 47, 57, 61, 68, 70, 85, 86, 92, 97, 98, 101, 102, 109, 121, 126, 128, 140, 148, 154, 163, 170, 177, 181, 186, 188, 198, 204, 206, 222, 223, 229, 231, 232, 233, 234, 239, 255, 256, 260, 268, 277, 280, 282, 283, 287, 294, 314, 317, 320, 323, 331, 332, 333, 334, 337, 341, 342, 343, 364, 367, 369, 423, 429, 450, 459, 464, 476, 483, 487, 489, 490, 491, 501, 503, 545, 548, 550, 551, 602, 603, 610, 613, 617, 634, 635, 643, 644, 649, 650, 668, 674, 677, 740, 743, 745, 769, 770, 771, 773, 774, 776, 777, 785, 788, 797, 799, 801, 803, 811, 814, 817, 935], "bennett": [30, 277, 317], "allison": [30, 277, 317], "sekul": [30, 277, 317], "healthi": [30, 277, 317, 475, 476], "sensit": [30, 31, 33, 49, 51, 53, 108, 150, 156, 177, 184, 204, 230, 234, 239, 259, 265, 277, 299, 300, 302, 303, 310, 317, 331, 332, 333, 334, 335, 336, 341, 342, 344, 433, 527, 550, 551, 632, 635, 702, 708, 723, 751, 770, 771, 773, 774, 833, 955], "frontier": [30, 36, 45, 177, 222, 229, 277, 314, 317, 489, 640], "psychologi": [30, 36, 177, 229, 277, 317, 765], "2010": [30, 121, 144, 181, 229, 277, 279, 317, 364, 423, 483, 814, 817], "3389": [30, 36, 45, 177, 222, 229, 277, 314, 317, 489, 640], "fpsyg": [30, 177, 229, 277, 317], "00019": [30, 277, 317], "studi": [30, 59, 97, 148, 170, 177, 187, 204, 206, 229, 231, 237, 252, 257, 259, 260, 277, 287, 316, 319, 320, 357, 364, 475, 476, 507], "bmc": [30, 42, 223, 277, 484, 499], "98": [30, 39, 41, 45, 59, 61, 68, 70, 73, 107, 123, 139, 141, 144, 151, 163, 185, 195, 203, 206, 218, 222, 223, 236, 252, 255, 256, 257, 259, 260, 264, 265, 277, 357, 364, 411, 413, 670, 770, 771, 773, 774], "2008": [30, 36, 61, 70, 177, 196, 206, 232, 252, 255, 256, 277, 343, 364, 365, 406, 429, 483, 504, 522, 545, 617, 635, 743, 770, 771, 773, 774], "1186": [30, 42, 223, 236, 277, 484, 499], "1471": [30, 42, 223, 277, 484, 499], "2202": [30, 42, 223, 277, 484, 499], "107": [30, 32, 61, 88, 140, 142, 166, 195, 236, 255, 260, 277, 280, 955], "limo_data": [30, 32, 955], "electr": [31, 192, 206, 226, 234, 235, 277, 316, 319, 364, 365, 635, 643, 855, 942], "deliv": 31, "left": [31, 36, 37, 39, 41, 49, 51, 53, 56, 57, 61, 64, 65, 66, 67, 69, 70, 71, 73, 74, 76, 78, 80, 81, 83, 84, 85, 87, 88, 94, 98, 100, 105, 106, 109, 112, 113, 121, 134, 139, 143, 146, 147, 152, 155, 158, 160, 161, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 181, 182, 184, 186, 192, 194, 198, 201, 204, 206, 207, 208, 212, 218, 219, 222, 223, 231, 232, 233, 234, 235, 237, 244, 245, 246, 251, 252, 256, 259, 263, 264, 265, 268, 273, 274, 278, 283, 286, 288, 307, 308, 317, 319, 320, 324, 325, 327, 328, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 380, 382, 392, 393, 403, 404, 429, 450, 456, 483, 490, 505, 507, 510, 517, 541, 548, 550, 551, 570, 575, 587, 600, 634, 635, 655, 658, 717, 722, 731, 732, 735, 746, 783, 785, 786, 787, 788, 789, 833, 851, 859, 865, 866, 867, 869, 871, 873, 874, 875, 878, 886, 887, 888, 889, 890, 895, 897, 899, 903, 955], "wrist": 31, "somatosensori": [31, 58, 60, 72, 140, 269, 277, 285, 293, 301, 463], "nine": [31, 168], "quspin": [31, 312], "serf": 31, "side": [31, 45, 58, 71, 97, 167, 182, 192, 231, 235, 263, 270, 289, 318, 320, 328, 329, 331, 332, 333, 334, 338, 340, 342, 346, 483, 490, 550, 551, 634, 635, 650, 659, 670, 768, 770, 771, 773, 774, 783, 784, 785, 786, 788, 789, 833, 852, 861, 863, 865, 867, 874, 878, 881, 887, 890, 893, 895, 897], "somatomotor": 31, "custom": [31, 53, 62, 82, 94, 136, 147, 149, 150, 154, 156, 166, 168, 171, 175, 176, 177, 193, 219, 229, 230, 231, 232, 234, 235, 240, 250, 260, 270, 283, 284, 285, 287, 292, 295, 301, 302, 303, 305, 306, 307, 309, 316, 317, 318, 319, 323, 328, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 345, 346, 347, 389, 393, 395, 456, 550, 551, 632, 635, 691, 700, 702, 763, 788, 827, 833, 848, 853, 854, 865, 872, 882, 888, 893, 894, 898, 899, 935, 955], "opm_sampl": [31, 136], "subjects_dir": [31, 33, 37, 48, 50, 52, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 80, 81, 84, 85, 86, 87, 95, 107, 117, 121, 122, 131, 136, 142, 143, 145, 152, 153, 154, 157, 160, 161, 162, 176, 181, 182, 183, 184, 185, 186, 187, 192, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 218, 223, 238, 251, 252, 263, 264, 265, 273, 274, 284, 295, 316, 320, 323, 329, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 371, 375, 376, 377, 380, 429, 434, 435, 436, 442, 455, 457, 458, 459, 460, 502, 533, 535, 537, 539, 541, 542, 543, 544, 587, 591, 593, 621, 622, 666, 687, 705, 707, 714, 719, 720, 721, 722, 731, 732, 746, 749, 760, 778, 779, 825, 832, 833, 851, 853, 863, 893, 898, 899, 930, 947], "raw_fnam": [31, 33, 34, 35, 37, 39, 40, 41, 42, 44, 52, 58, 59, 60, 68, 71, 72, 75, 96, 97, 99, 100, 101, 103, 108, 109, 114, 120, 123, 124, 126, 127, 134, 135, 137, 138, 140, 144, 146, 148, 158, 159, 167, 178, 182, 184, 185, 188, 203, 206, 209, 211, 223, 231, 252, 257, 258, 259, 260, 263, 265, 269, 317, 320], "opm_sef_raw": 31, "bem_fnam": [31, 71, 95, 136], "5120": [31, 33, 52, 67, 71, 76, 95, 136, 176, 184, 185, 202, 207, 208, 274, 316, 323, 482, 591, 597, 748], "sol": [31, 33, 48, 52, 67, 71, 76, 95, 136, 184, 185, 202, 207, 208, 316, 323, 335, 597, 748], "fwd_fname": [31, 48, 57, 61, 66, 72, 77, 85, 86, 95, 117, 119, 120, 121, 122, 206, 218, 252], "fwd": [31, 37, 48, 52, 57, 58, 59, 60, 61, 66, 68, 69, 71, 72, 73, 74, 75, 77, 80, 81, 84, 85, 86, 95, 117, 119, 120, 121, 122, 136, 157, 184, 185, 198, 201, 202, 203, 204, 205, 206, 208, 218, 223, 251, 252, 316, 320, 323, 335, 342, 351, 352, 353, 433, 517, 529, 530, 596, 597, 702, 723, 747, 748, 833, 851, 927], "coil_def_fnam": 31, "coil_def": [31, 136, 317, 320], "dat": [31, 136, 237, 291, 292, 317, 320, 400, 565, 582, 646, 659, 670, 681, 686], "h_trans_bandwidth": [31, 47, 140, 141, 218, 229, 238, 283, 302, 331, 332, 333, 334, 485, 494, 519, 521, 550, 551, 674], "notch_width": [31, 239, 522, 550, 551], "threshold": [31, 56, 60, 64, 101, 108, 123, 139, 147, 171, 177, 191, 192, 197, 198, 208, 210, 212, 215, 218, 227, 228, 232, 234, 237, 257, 258, 259, 260, 261, 262, 263, 264, 265, 277, 284, 285, 286, 287, 292, 295, 298, 299, 300, 301, 302, 304, 316, 320, 323, 326, 331, 332, 333, 334, 336, 376, 386, 392, 422, 426, 427, 522, 550, 551, 570, 576, 617, 635, 637, 640, 647, 650, 652, 653, 659, 660, 661, 663, 665, 675, 693, 730, 739, 740, 741, 742, 743, 744, 745, 766, 767, 770, 771, 773, 774, 775, 787, 833, 859, 864, 865, 881, 955], "larger": [31, 75, 85, 97, 176, 205, 223, 226, 229, 231, 237, 246, 257, 270, 289, 310, 320, 331, 332, 341, 346, 347, 527, 550, 551, 570, 637, 661, 679, 778, 813, 814, 816, 817, 865, 888, 896, 899], "squid": [31, 136, 239, 277, 317, 319, 320], "257": [31, 142, 195, 196, 255, 317], "mask": [31, 54, 57, 108, 123, 127, 128, 139, 147, 168, 211, 229, 233, 251, 255, 256, 257, 258, 259, 260, 280, 283, 285, 286, 292, 293, 301, 302, 324, 328, 331, 332, 333, 334, 340, 483, 489, 490, 524, 550, 551, 559, 634, 635, 650, 697, 770, 771, 773, 774, 783, 785, 786, 788, 789, 852, 867, 871, 874, 878, 887, 890, 895, 897, 935], "mask_typ": [31, 211, 283, 285, 324, 524, 559, 697], "error": [31, 36, 39, 64, 68, 80, 81, 117, 120, 136, 141, 160, 161, 162, 166, 170, 175, 178, 183, 188, 197, 198, 207, 209, 211, 212, 215, 222, 223, 228, 229, 232, 235, 239, 240, 255, 256, 259, 277, 278, 283, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 301, 303, 304, 305, 306, 307, 308, 309, 316, 317, 320, 326, 331, 332, 333, 334, 336, 337, 338, 339, 342, 345, 346, 347, 351, 352, 384, 407, 417, 418, 423, 427, 430, 432, 434, 439, 440, 475, 502, 517, 518, 530, 531, 533, 550, 551, 567, 572, 617, 635, 646, 655, 659, 669, 670, 688, 690, 694, 719, 721, 729, 740, 743, 745, 761, 767, 768, 772, 783, 785, 786, 787, 788, 789, 830, 831, 833, 866, 868, 879, 926, 928, 935, 941, 947, 950], "suppress": [31, 39, 53, 64, 75, 104, 110, 111, 162, 171, 176, 177, 197, 206, 210, 215, 226, 227, 229, 230, 231, 234, 239, 277, 289, 295, 304, 305, 307, 317, 319, 320, 323, 328, 331, 332, 333, 334, 335, 336, 337, 342, 410, 412, 416, 433, 518, 519, 521, 522, 550, 551, 632, 633, 651, 691, 702, 705, 728, 747, 749, 872, 955], "about": [31, 39, 45, 53, 60, 69, 70, 97, 101, 121, 128, 141, 166, 167, 169, 170, 172, 175, 177, 181, 186, 188, 192, 194, 195, 198, 201, 204, 210, 212, 215, 216, 217, 218, 219, 222, 223, 227, 229, 230, 232, 233, 237, 238, 243, 244, 245, 251, 252, 255, 257, 282, 285, 287, 289, 292, 293, 295, 299, 304, 306, 309, 310, 311, 312, 316, 317, 319, 321, 323, 324, 326, 328, 330, 331, 332, 333, 334, 336, 340, 341, 342, 344, 349, 351, 352, 364, 365, 366, 373, 374, 378, 379, 386, 387, 388, 392, 394, 395, 408, 411, 413, 418, 427, 436, 439, 440, 441, 443, 483, 485, 490, 491, 492, 502, 507, 524, 527, 534, 549, 550, 551, 552, 556, 584, 586, 590, 597, 598, 603, 613, 631, 632, 635, 646, 649, 666, 675, 676, 697, 717, 718, 747, 748, 751, 769, 783, 784, 785, 786, 787, 788, 789, 812, 813, 815, 816, 822, 833, 835, 848, 851, 855, 860, 861, 870, 877, 887, 891, 935, 945], "caus": [31, 39, 70, 97, 168, 177, 187, 226, 227, 228, 229, 230, 233, 237, 239, 240, 245, 282, 283, 286, 288, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 316, 328, 331, 332, 333, 334, 341, 542, 550, 551, 580, 635, 830, 869, 874, 942], "alias": [31, 39, 188, 207, 230, 285, 294, 326, 330, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 496, 550, 551, 652, 653, 783, 787, 810, 812, 813, 815, 816, 865, 888, 901, 935], "ideal": [31, 97, 135, 159, 161, 170, 177, 196, 229, 231, 234, 235, 256, 270, 309, 319, 320, 380, 876, 883, 935], "instead": [31, 69, 94, 101, 131, 141, 147, 162, 168, 169, 172, 175, 176, 177, 182, 184, 186, 187, 192, 194, 195, 196, 197, 198, 223, 227, 228, 229, 230, 232, 233, 237, 239, 243, 244, 246, 252, 255, 263, 264, 265, 268, 269, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 316, 317, 318, 320, 323, 326, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 345, 346, 347, 356, 357, 358, 359, 362, 364, 375, 377, 380, 392, 422, 423, 428, 512, 513, 514, 515, 516, 517, 524, 531, 534, 539, 549, 550, 551, 604, 606, 609, 635, 636, 637, 677, 716, 727, 732, 747, 783, 787, 801, 811, 812, 813, 814, 815, 816, 817, 833, 836, 859, 865, 869, 875, 882, 888, 897, 903, 905, 940, 941, 945, 949], "isotrak": [31, 68, 128, 136, 151, 169, 188, 198, 234, 236, 256, 320, 323, 405], "700999": 31, "700": [31, 107, 142, 155, 168, 174, 223, 236, 801, 811, 833, 955], "999": [31, 60, 103, 106, 110, 119, 123, 136, 138, 151, 157, 168, 170, 185, 194, 198, 209, 232, 233, 235, 236, 237, 260, 647, 652, 660, 663], "lowpass": [31, 37, 98, 100, 103, 107, 108, 109, 110, 117, 120, 167, 172, 177, 192, 193, 194, 195, 212, 218, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 273, 282, 287, 288, 289, 293, 294, 302, 304, 323, 330, 331, 332, 333, 334, 336, 518, 550, 551, 783, 785, 786, 787, 788, 789, 865, 888, 889], "331": [31, 60, 110, 139, 141, 195, 212, 229, 236, 237], "48": [31, 37, 38, 39, 45, 46, 47, 54, 61, 67, 71, 72, 73, 82, 107, 121, 130, 135, 136, 139, 141, 163, 171, 177, 183, 194, 195, 197, 223, 236, 245, 255, 256, 257, 259, 260, 263, 264, 265, 277, 280, 955], "initi": [31, 42, 45, 47, 67, 69, 70, 97, 120, 123, 136, 139, 170, 175, 177, 182, 194, 206, 211, 212, 218, 232, 239, 243, 250, 255, 256, 257, 258, 259, 260, 263, 264, 265, 270, 279, 282, 283, 287, 289, 291, 293, 294, 301, 302, 303, 305, 306, 309, 310, 320, 322, 323, 329, 331, 332, 337, 338, 339, 341, 342, 343, 345, 346, 347, 443, 445, 545, 550, 551, 558, 579, 587, 635, 668, 677, 679, 687, 735, 736, 737, 746, 747, 749, 762, 770, 771, 772, 773, 774, 787, 823, 833, 863, 865, 879, 882, 888, 893, 898, 899, 948], "initial_valu": [31, 120, 136, 211, 303], "initial_ev": [31, 117, 120, 136, 211, 252, 286, 524], "201": [31, 71, 133, 162, 195, 202, 207, 209, 236, 255, 260, 265, 273, 955], "10251": 31, "examin": [31, 60, 73, 101, 162, 168, 171, 172, 177, 186, 192, 203, 204, 212, 232, 243, 245, 309, 935], "co": [31, 48, 95, 183, 229, 237, 250, 277, 317, 319, 320, 410, 509], "registr": [31, 69, 70, 160, 183, 206, 277, 295, 317, 320, 343, 429, 667, 821, 822, 823, 947], "equat": [31, 161, 182, 222, 223, 233, 277, 312, 320, 504, 646, 814, 817], "mi": [31, 317], "defin": [31, 34, 35, 36, 38, 44, 45, 47, 53, 57, 59, 69, 70, 87, 88, 103, 104, 111, 121, 122, 131, 134, 138, 141, 147, 149, 155, 162, 166, 167, 168, 170, 177, 181, 184, 186, 188, 189, 191, 193, 194, 196, 198, 201, 204, 206, 208, 217, 218, 222, 223, 229, 233, 238, 240, 252, 258, 259, 260, 263, 265, 269, 270, 277, 282, 283, 289, 292, 294, 298, 299, 301, 308, 309, 310, 316, 317, 319, 320, 323, 324, 328, 330, 331, 332, 333, 334, 336, 337, 339, 340, 342, 343, 344, 345, 346, 347, 351, 352, 357, 364, 365, 380, 385, 388, 402, 403, 423, 429, 433, 456, 462, 483, 489, 490, 508, 509, 512, 518, 538, 541, 550, 551, 557, 563, 585, 587, 588, 596, 602, 603, 604, 605, 606, 609, 613, 618, 619, 621, 632, 634, 635, 636, 638, 639, 649, 650, 658, 668, 687, 692, 697, 732, 735, 736, 737, 740, 743, 745, 746, 747, 748, 749, 756, 759, 770, 771, 772, 773, 774, 778, 779, 783, 784, 785, 786, 787, 788, 789, 791, 793, 794, 795, 796, 799, 801, 811, 812, 813, 815, 816, 833, 839, 852, 856, 859, 866, 867, 869, 871, 874, 875, 878, 885, 887, 889, 890, 891, 895, 897, 898, 947, 955], "lpa": [31, 162, 182, 186, 294, 317, 319, 374, 380, 393, 404, 414, 434, 436, 502, 558], "nasion": [31, 182, 183, 186, 196, 284, 294, 317, 319, 320, 374, 380, 393, 403, 404, 414, 434, 436, 502, 736], "rpa": [31, 162, 182, 186, 294, 317, 319, 374, 380, 393, 404, 414, 434, 436, 502, 558], "fine": [31, 207, 215, 237, 270, 281, 284, 336, 504, 645, 646, 659, 670, 681, 686], "analys": [31, 37, 53, 57, 67, 96, 125, 129, 143, 161, 169, 172, 176, 177, 184, 186, 219, 223, 227, 233, 234, 243, 256, 270, 277, 289, 292, 312, 317, 320, 333, 334, 550, 551, 693, 767, 768, 859, 871, 948, 955], "must": [31, 44, 58, 69, 70, 73, 87, 109, 155, 161, 170, 172, 182, 193, 195, 197, 198, 207, 210, 215, 217, 226, 227, 232, 234, 237, 240, 245, 250, 255, 257, 259, 260, 263, 265, 270, 273, 310, 316, 317, 320, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 353, 358, 364, 365, 380, 382, 383, 386, 389, 393, 409, 410, 412, 416, 423, 427, 428, 429, 434, 439, 440, 441, 456, 462, 465, 482, 483, 489, 490, 491, 495, 498, 499, 500, 502, 507, 512, 515, 517, 524, 526, 527, 545, 547, 548, 549, 550, 551, 559, 566, 570, 572, 574, 576, 585, 589, 594, 595, 596, 611, 612, 613, 634, 635, 637, 646, 648, 650, 651, 652, 659, 666, 670, 693, 696, 724, 727, 732, 733, 744, 748, 749, 751, 753, 754, 757, 765, 768, 769, 770, 771, 773, 774, 778, 783, 785, 786, 787, 788, 789, 800, 804, 808, 812, 815, 833, 835, 837, 839, 851, 852, 854, 858, 859, 863, 865, 866, 867, 869, 870, 871, 873, 874, 875, 876, 878, 882, 883, 885, 887, 888, 889, 890, 891, 893, 896, 897, 898, 899, 935, 945], "temporari": [31, 177, 198, 323, 336, 725, 842], "src": [31, 33, 48, 50, 52, 54, 56, 57, 61, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 78, 80, 81, 85, 87, 95, 117, 119, 120, 121, 122, 136, 161, 162, 182, 184, 185, 186, 204, 206, 207, 208, 218, 235, 251, 263, 264, 265, 287, 292, 316, 323, 335, 337, 338, 339, 342, 344, 345, 346, 347, 349, 365, 429, 517, 537, 546, 588, 589, 597, 611, 612, 615, 617, 622, 712, 722, 731, 732, 733, 740, 743, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 778, 779, 833, 851, 853, 893, 894, 898, 899, 932], "orient": [31, 37, 48, 52, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 106, 117, 119, 120, 121, 122, 131, 134, 135, 136, 137, 143, 152, 157, 182, 184, 185, 186, 191, 192, 197, 198, 201, 202, 203, 206, 207, 208, 209, 213, 214, 215, 218, 223, 235, 237, 251, 252, 255, 263, 265, 277, 285, 286, 287, 288, 289, 291, 292, 294, 299, 300, 304, 305, 306, 308, 312, 316, 328, 329, 330, 333, 335, 336, 338, 339, 342, 345, 346, 347, 351, 352, 364, 365, 366, 433, 503, 517, 526, 527, 528, 542, 545, 547, 548, 571, 596, 597, 601, 602, 603, 604, 605, 606, 608, 609, 611, 612, 613, 614, 617, 618, 619, 681, 691, 692, 695, 699, 700, 702, 715, 731, 735, 747, 748, 833, 843, 851, 853, 854, 863, 903, 927, 937, 955], "later": [31, 37, 45, 58, 64, 69, 73, 96, 128, 136, 162, 166, 167, 168, 170, 175, 177, 188, 198, 201, 203, 206, 207, 216, 218, 226, 227, 228, 229, 232, 233, 234, 235, 239, 240, 243, 244, 245, 246, 250, 263, 264, 270, 273, 277, 288, 293, 309, 317, 318, 320, 326, 331, 332, 333, 334, 339, 341, 343, 345, 348, 429, 525, 550, 551, 635, 694, 696, 783, 785, 786, 787, 788, 789, 833, 898, 945, 947], "force_fix": [31, 73, 74, 75, 80, 81, 95, 184, 251, 285, 433, 613], "pial": [31, 142, 152, 161, 162, 181, 186, 207, 295, 303, 306, 307, 329, 344, 621, 705, 778, 833, 851, 863], "focalpoint": [31, 50, 78, 136, 143, 152, 161, 162, 182, 183, 184, 185, 186, 204, 252, 295, 833, 903], "04": [31, 45, 46, 50, 57, 61, 67, 68, 75, 76, 82, 97, 98, 100, 110, 117, 120, 122, 127, 130, 135, 148, 151, 152, 156, 167, 184, 188, 197, 203, 206, 209, 211, 212, 223, 227, 228, 236, 238, 255, 256, 257, 259, 260, 265, 272, 273, 277, 291, 313, 320, 459, 504, 593, 598, 635, 670, 740, 745, 944, 955], "load": [31, 33, 37, 39, 40, 50, 52, 54, 55, 56, 58, 59, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 95, 98, 102, 106, 107, 108, 119, 120, 121, 123, 124, 126, 127, 128, 130, 131, 134, 136, 137, 139, 140, 144, 146, 147, 148, 151, 153, 155, 161, 168, 169, 171, 176, 177, 178, 182, 184, 186, 187, 188, 191, 193, 194, 195, 196, 197, 198, 202, 203, 206, 207, 208, 209, 210, 215, 216, 218, 219, 220, 223, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 244, 245, 246, 247, 255, 256, 257, 258, 259, 263, 264, 265, 268, 270, 273, 274, 278, 284, 285, 286, 288, 291, 292, 295, 298, 303, 304, 305, 307, 308, 317, 318, 319, 323, 326, 327, 331, 332, 333, 334, 341, 381, 386, 390, 397, 428, 430, 445, 533, 534, 550, 551, 558, 559, 566, 571, 572, 579, 593, 596, 597, 613, 624, 635, 637, 647, 683, 693, 695, 699, 700, 702, 704, 710, 711, 713, 748, 781, 806, 807, 851, 865, 869, 873, 875, 882, 888, 927], "three": [31, 57, 71, 121, 130, 136, 147, 168, 171, 177, 182, 184, 185, 187, 194, 204, 208, 215, 216, 219, 226, 227, 232, 233, 234, 243, 245, 246, 250, 255, 268, 270, 289, 291, 309, 317, 320, 323, 325, 328, 329, 331, 332, 333, 334, 336, 339, 340, 345, 347, 364, 365, 375, 376, 377, 392, 483, 490, 541, 545, 550, 551, 591, 611, 612, 634, 635, 645, 650, 681, 713, 716, 732, 735, 764, 766, 783, 785, 786, 788, 789, 823, 833, 852, 863, 865, 867, 874, 876, 878, 886, 887, 888, 890, 895, 897, 928, 933, 935], "colloc": [31, 52, 67, 71, 76, 136, 184, 185, 202, 208, 291, 592], "patch": [31, 37, 48, 54, 55, 57, 60, 61, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 117, 119, 120, 121, 122, 131, 134, 135, 136, 137, 152, 157, 182, 184, 186, 192, 198, 203, 204, 205, 207, 208, 218, 223, 251, 252, 263, 265, 273, 282, 285, 291, 299, 301, 308, 323, 328, 331, 332, 333, 334, 339, 340, 344, 345, 347, 349, 351, 352, 433, 483, 490, 550, 551, 602, 603, 604, 605, 606, 609, 613, 618, 619, 634, 635, 650, 690, 712, 731, 747, 748, 783, 785, 786, 788, 789, 852, 867, 874, 878, 887, 890, 895, 897], "3523": [31, 48, 57, 58, 59, 60, 61, 66, 68, 69, 72, 73, 74, 75, 77, 80, 81, 84, 85, 86, 95, 117, 119, 120, 121, 122, 157, 198, 203, 204, 205, 206, 218, 223, 251, 252], "8196": [31, 208, 218], "free": [31, 48, 52, 57, 58, 59, 60, 61, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 95, 107, 117, 119, 120, 121, 122, 136, 157, 166, 177, 184, 185, 192, 198, 202, 203, 204, 206, 208, 218, 223, 235, 237, 240, 251, 252, 256, 260, 277, 285, 286, 292, 299, 309, 310, 316, 317, 320, 329, 331, 332, 335, 364, 365, 366, 444, 526, 527, 528, 545, 547, 548, 602, 603, 604, 605, 606, 609, 613, 617, 618, 619, 644, 702, 723, 727, 770, 771, 773, 774, 927, 945, 947, 948], "frame": [31, 37, 48, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 106, 117, 119, 120, 121, 122, 131, 134, 135, 137, 139, 152, 157, 161, 162, 166, 177, 185, 189, 190, 191, 192, 196, 198, 203, 204, 205, 206, 207, 208, 209, 210, 217, 218, 223, 237, 239, 251, 252, 263, 265, 282, 286, 289, 291, 292, 293, 294, 295, 298, 302, 304, 305, 310, 317, 319, 320, 323, 329, 331, 332, 333, 334, 335, 336, 344, 370, 371, 380, 384, 393, 398, 436, 460, 502, 542, 544, 550, 551, 555, 562, 583, 585, 593, 598, 646, 659, 670, 712, 713, 715, 729, 732, 808, 820, 828, 830, 833, 851, 863, 903, 909, 955], "emploi": [31, 37, 48, 52, 60, 61, 66, 67, 68, 71, 72, 73, 74, 75, 76, 80, 81, 84, 85, 95, 117, 119, 121, 136, 184, 185, 202, 203, 204, 205, 208, 215, 216, 218, 223, 252, 270, 310, 316, 317, 320, 634, 764], "rotat": [31, 36, 41, 45, 48, 60, 61, 66, 67, 68, 70, 72, 73, 74, 75, 80, 81, 84, 85, 95, 106, 117, 119, 121, 136, 182, 184, 198, 203, 204, 205, 206, 208, 212, 218, 219, 222, 223, 229, 231, 252, 304, 320, 323, 333, 334, 336, 364, 365, 419, 434, 439, 504, 542, 639, 645, 670, 823, 824, 826, 833, 835, 851, 870, 940, 947], "convert": [31, 48, 53, 60, 61, 66, 67, 68, 72, 73, 74, 75, 80, 81, 84, 85, 95, 102, 117, 119, 121, 136, 139, 150, 156, 162, 163, 166, 167, 168, 169, 170, 175, 176, 177, 182, 184, 186, 187, 195, 197, 203, 204, 205, 208, 215, 216, 217, 218, 219, 223, 228, 229, 233, 240, 243, 245, 251, 252, 256, 260, 263, 264, 265, 269, 283, 284, 286, 287, 288, 289, 291, 295, 303, 304, 309, 317, 320, 325, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 342, 345, 346, 347, 350, 357, 371, 380, 381, 406, 419, 433, 435, 485, 489, 494, 495, 498, 512, 519, 521, 522, 539, 543, 544, 546, 550, 551, 562, 572, 576, 589, 596, 658, 672, 673, 783, 785, 786, 787, 788, 789, 801, 811, 824, 826, 832, 834, 838, 851, 903, 905, 942, 945, 948, 955], "unknown": [31, 72, 98, 100, 103, 109, 117, 120, 136, 167, 172, 177, 193, 194, 195, 207, 226, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 273, 286, 289, 295, 304, 305, 320, 336, 393, 398, 545, 550, 551, 559, 566, 583, 585, 820, 888, 921, 930], "deriv": [31, 58, 59, 60, 72, 98, 136, 151, 154, 166, 170, 175, 182, 194, 212, 227, 255, 256, 268, 277, 283, 285, 292, 304, 320, 336, 434, 635, 677, 702, 927], "subset": [31, 71, 139, 166, 168, 170, 172, 177, 184, 186, 198, 201, 234, 235, 239, 245, 255, 268, 282, 283, 285, 289, 291, 292, 294, 295, 310, 320, 326, 331, 332, 333, 334, 337, 341, 351, 352, 364, 365, 423, 427, 428, 439, 440, 441, 475, 483, 486, 490, 493, 507, 521, 526, 527, 540, 545, 547, 548, 550, 551, 613, 635, 756, 759, 783, 784, 785, 786, 787, 788, 789, 833, 865, 875, 888], "dip_opm": 31, "_": [31, 34, 35, 45, 63, 64, 71, 76, 87, 94, 139, 163, 172, 177, 186, 187, 198, 204, 206, 218, 222, 229, 232, 234, 239, 243, 251, 255, 256, 259, 260, 269, 270, 309, 320, 371, 635, 646, 685, 801, 811], "040": [31, 107, 140, 148, 166, 175, 188, 195, 236, 252, 277, 333, 334, 423, 935], "080": [31, 64, 107, 211, 236, 256], "idx": [31, 57, 61, 66, 73, 85, 90, 110, 141, 159, 176, 207, 218, 226, 230, 234, 251, 263, 284, 325, 329, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 379, 549, 550, 551, 611, 612, 787, 863], "argmax": [31, 61, 64, 66, 74, 76, 84, 85, 146, 202, 207, 222], "1f": [31, 56, 66, 73, 103, 127, 136, 141, 182, 202, 209, 210, 212, 218, 223, 229, 251, 255, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 785, 786, 788, 789, 867, 874, 887], "1000": [31, 45, 66, 74, 97, 107, 110, 111, 123, 140, 141, 155, 172, 182, 183, 185, 186, 202, 207, 208, 209, 210, 212, 218, 222, 229, 230, 232, 234, 240, 243, 250, 256, 260, 263, 264, 265, 287, 319, 512, 518, 520, 524, 550, 551, 635, 704, 770, 771, 773, 774, 801, 811, 833, 955], "n20m": 31, "plot_loc": [31, 202, 207, 292, 304, 329], "orthoview": [31, 61, 66, 85, 186, 202, 284, 289, 292, 329, 863], "36": [31, 39, 45, 54, 60, 61, 67, 71, 73, 76, 107, 109, 130, 135, 136, 139, 141, 170, 172, 174, 192, 195, 197, 200, 203, 207, 214, 222, 223, 236, 255, 256, 257, 259, 260, 264, 265, 270, 277, 301, 331, 332, 333, 334, 475, 503, 550, 551, 679, 955], "77": [31, 37, 39, 41, 45, 61, 107, 108, 135, 136, 141, 182, 183, 194, 195, 197, 207, 218, 223, 234, 235, 236, 245, 255, 256, 260, 263, 268, 302, 403], "10250": 31, "999800": [31, 136], "015800": [31, 136], "009200": [31, 136], "018100": [31, 136], "930500": [31, 136], "365900": [31, 136], "002800": [31, 136], "366000": [31, 136], "930600": [31, 136], "inner": [31, 52, 57, 67, 69, 71, 76, 136, 181, 184, 186, 187, 197, 202, 207, 208, 218, 277, 282, 316, 317, 319, 320, 323, 331, 332, 335, 372, 375, 526, 542, 597, 670, 732, 748, 833, 935, 942, 945, 948], "skull": [31, 52, 67, 69, 71, 76, 136, 140, 181, 182, 184, 186, 187, 196, 202, 207, 208, 218, 277, 282, 284, 316, 317, 319, 320, 323, 335, 344, 372, 375, 526, 597, 598, 666, 732, 740, 745, 748, 833, 851, 935, 942, 945, 948], "102": [31, 37, 39, 40, 41, 42, 44, 48, 52, 54, 55, 56, 57, 60, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 91, 95, 96, 98, 99, 100, 103, 105, 106, 109, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 141, 143, 144, 145, 146, 147, 148, 151, 152, 157, 158, 159, 166, 167, 168, 172, 175, 176, 177, 178, 182, 183, 184, 186, 188, 192, 193, 194, 195, 196, 198, 202, 203, 204, 205, 206, 207, 208, 209, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 251, 252, 255, 257, 258, 259, 260, 263, 265, 273, 274, 323], "73": [31, 39, 41, 45, 59, 60, 61, 66, 71, 86, 106, 107, 123, 134, 135, 139, 141, 148, 155, 171, 175, 195, 202, 208, 222, 223, 236, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 277, 331, 332, 333, 334, 369, 550, 551, 785, 788, 804], "42": [31, 34, 35, 37, 39, 40, 41, 42, 44, 45, 54, 55, 61, 68, 71, 73, 75, 95, 96, 98, 99, 100, 103, 106, 107, 109, 114, 117, 119, 120, 123, 124, 126, 127, 130, 131, 134, 135, 136, 137, 138, 141, 144, 145, 148, 151, 158, 159, 160, 163, 167, 172, 177, 178, 182, 188, 192, 193, 194, 195, 197, 198, 201, 202, 203, 206, 207, 208, 210, 222, 223, 226, 229, 230, 231, 232, 233, 234, 235, 236, 240, 243, 246, 251, 252, 255, 256, 257, 258, 259, 260, 263, 265, 273, 277, 278, 317, 336, 602, 617, 743], "108": [31, 42, 61, 107, 108, 140, 141, 148, 188, 195, 218, 223, 255, 259, 277, 333, 334, 423, 875, 935], "1080": [31, 36, 149, 222, 240, 277, 489, 655, 657, 844], "543": [31, 66, 81, 82, 240, 955], "least": [31, 67, 71, 97, 110, 141, 167, 184, 185, 202, 207, 228, 229, 230, 232, 233, 237, 255, 260, 277, 292, 310, 316, 320, 331, 332, 333, 334, 341, 485, 494, 498, 500, 519, 521, 522, 540, 550, 551, 635, 637, 638, 654, 656, 659, 670, 768, 786, 789, 833, 865, 888, 935, 947], "awai": [31, 67, 71, 167, 170, 184, 185, 202, 207, 209, 215, 228, 233, 235, 239, 303, 320, 434, 563, 635, 665, 666, 736, 778, 813, 816, 833, 944], "few": [31, 47, 52, 67, 70, 71, 76, 97, 121, 128, 136, 161, 170, 171, 175, 181, 182, 183, 184, 185, 187, 188, 193, 197, 198, 202, 207, 208, 226, 227, 228, 229, 231, 232, 234, 235, 236, 240, 243, 246, 256, 260, 265, 268, 270, 285, 295, 307, 309, 318, 319, 320, 336, 504, 645, 646, 659, 670, 833, 851, 935, 937, 945, 949], "interior": [31, 52, 67, 71, 76, 136, 184, 185, 202, 207, 208, 237], "statu": [31, 52, 67, 71, 76, 136, 184, 185, 202, 207, 208, 215, 280, 285, 288, 308, 309, 319, 320, 331, 332, 333, 334, 336, 410, 432, 434, 550, 551, 559, 566, 574, 581, 632, 783, 785, 786, 787, 788, 789, 833], "exterior": [31, 52, 67, 71, 76, 136, 184, 185, 202, 207, 208, 237], "284": [31, 195, 255, 277, 301, 483], "473": [31, 39, 141, 223, 255, 344], "qhull": [31, 52, 67, 71, 76, 136, 184, 185, 202, 207, 208, 295], "189": [31, 58, 59, 60, 72, 140, 195, 218, 255, 259, 260, 269, 276, 277, 320], "solid": [31, 52, 67, 71, 76, 136, 176, 184, 185, 187, 202, 207, 208, 234, 320, 859, 886], "angl": [31, 52, 67, 71, 76, 136, 145, 157, 184, 185, 187, 195, 196, 198, 202, 207, 208, 209, 212, 240, 286, 303, 320, 323, 336, 371, 375, 658, 668, 723, 833, 839, 903], "244": [31, 118, 119, 195, 223, 259, 955], "complet": [31, 33, 35, 52, 58, 59, 60, 67, 71, 76, 136, 149, 170, 176, 181, 184, 185, 187, 195, 202, 206, 207, 208, 227, 229, 232, 235, 252, 255, 277, 292, 293, 294, 295, 309, 316, 317, 318, 320, 323, 331, 332, 344, 371, 584, 635, 669, 683, 780, 829, 833, 842, 850, 935, 937, 948], "127": [31, 35, 61, 195, 223, 236, 259, 260], "299": [31, 60, 166, 195, 210, 236, 260, 268], "limit": [31, 57, 60, 66, 67, 68, 71, 76, 84, 85, 117, 121, 136, 140, 141, 161, 163, 167, 168, 184, 191, 192, 194, 202, 203, 205, 207, 208, 216, 218, 223, 227, 229, 232, 237, 243, 252, 260, 270, 273, 277, 278, 281, 288, 292, 294, 295, 299, 302, 303, 309, 310, 312, 317, 320, 321, 325, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 345, 346, 347, 349, 483, 490, 509, 516, 527, 547, 550, 551, 571, 634, 635, 639, 659, 670, 695, 699, 704, 710, 761, 767, 769, 783, 785, 786, 787, 788, 789, 844, 850, 852, 854, 859, 866, 867, 869, 871, 873, 874, 876, 878, 883, 887, 890, 893, 895, 897, 898, 899, 929, 940, 952], "214": [31, 195, 223, 246, 259], "0642": [31, 195], "3529": [31, 123], "7471": 31, "6757": 31, "1930": 31, "99": [31, 41, 45, 52, 61, 73, 75, 96, 97, 107, 108, 117, 120, 130, 131, 134, 135, 136, 139, 141, 148, 163, 177, 178, 183, 186, 188, 195, 203, 205, 206, 207, 210, 212, 218, 222, 223, 225, 234, 236, 240, 245, 251, 252, 255, 256, 258, 259, 260, 277, 300, 320, 331, 332, 341, 550, 551, 865, 888, 955], "leakag": [31, 53, 62, 71, 82, 342, 344, 433, 612, 614, 616, 702, 705, 813, 816, 833, 839, 955], "constrain": [31, 36, 38, 39, 41, 45, 65, 67, 84, 97, 98, 99, 100, 117, 134, 136, 141, 142, 147, 170, 172, 186, 192, 198, 201, 202, 204, 205, 206, 207, 209, 212, 222, 229, 233, 234, 237, 238, 239, 252, 255, 257, 258, 259, 260, 269, 277, 278, 293, 295, 319, 320, 326, 331, 332, 360, 361, 362, 363, 364, 365, 429, 652, 801, 811, 935, 942, 948], "idea": [31, 33, 47, 53, 140, 181, 197, 201, 203, 229, 231, 232, 233, 234, 263, 265, 270, 277, 311, 320, 321, 331, 332, 376, 506, 935], "inverse_oper": [31, 33, 37, 54, 55, 56, 60, 64, 65, 66, 67, 68, 70, 73, 74, 80, 85, 117, 131, 134, 135, 136, 137, 198, 203, 263, 265, 341, 602, 603, 604, 605, 606, 608, 609, 614, 618, 619], "loos": [31, 33, 57, 60, 61, 66, 67, 68, 72, 74, 80, 81, 85, 87, 117, 121, 136, 170, 203, 205, 208, 218, 223, 252, 285, 291, 292, 305, 316, 320, 527, 528, 545, 547, 548, 602, 603, 604, 605, 606, 608, 609, 613, 617, 618, 619], "depth": [31, 33, 37, 48, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 78, 80, 81, 83, 84, 85, 87, 117, 121, 131, 134, 135, 136, 137, 152, 192, 197, 198, 203, 204, 205, 207, 208, 218, 223, 246, 251, 252, 263, 265, 277, 285, 288, 292, 294, 299, 304, 329, 364, 365, 527, 545, 547, 548, 613, 740, 745, 751], "pick_ori": [31, 33, 37, 54, 55, 58, 59, 60, 64, 65, 67, 75, 87, 117, 135, 203, 204, 206, 207, 252, 284, 285, 287, 288, 291, 292, 300, 305, 364, 365, 545, 547, 548, 602, 603, 604, 605, 606, 608, 609, 618, 619], "hemi": [31, 33, 37, 52, 58, 59, 60, 64, 67, 69, 73, 74, 75, 76, 84, 87, 94, 121, 131, 134, 136, 143, 157, 160, 162, 181, 186, 192, 201, 203, 204, 205, 206, 207, 218, 223, 251, 252, 263, 264, 265, 273, 294, 337, 338, 339, 342, 345, 346, 347, 349, 541, 687, 705, 832, 833, 893, 898, 912, 930], "rh": [31, 50, 52, 60, 63, 64, 67, 69, 73, 85, 95, 117, 119, 121, 122, 134, 136, 143, 157, 162, 181, 184, 185, 186, 201, 203, 251, 252, 320, 327, 337, 338, 339, 342, 345, 346, 347, 539, 587, 687, 705, 710, 833, 893, 898, 912, 930], "view": [31, 33, 37, 52, 54, 55, 57, 58, 59, 61, 66, 69, 73, 76, 79, 84, 85, 96, 121, 122, 127, 131, 134, 135, 136, 140, 142, 145, 161, 162, 166, 168, 176, 177, 178, 184, 185, 186, 192, 195, 196, 198, 201, 203, 206, 207, 216, 217, 218, 223, 232, 234, 245, 246, 251, 252, 260, 263, 264, 265, 273, 277, 278, 280, 288, 294, 295, 300, 303, 310, 312, 316, 317, 319, 320, 328, 329, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 355, 370, 377, 550, 551, 601, 655, 717, 820, 833, 863, 865, 888, 893, 896, 898, 903, 905, 935], "lat": [31, 37, 52, 84, 121, 131, 162, 177, 186, 192, 223, 251, 265, 273, 833], "initial_tim": [31, 33, 37, 58, 67, 69, 84, 85, 87, 121, 131, 160, 192, 201, 203, 204, 205, 206, 207, 208, 218, 223, 251, 273, 338, 339, 342, 345, 346, 347, 833, 893, 898, 899], "clim": [31, 33, 36, 48, 52, 68, 69, 73, 75, 80, 81, 84, 85, 131, 136, 157, 161, 162, 172, 201, 203, 205, 206, 207, 238, 251, 263, 264, 265, 273, 292, 294, 302, 333, 334, 338, 339, 342, 345, 346, 347, 833, 854, 871, 893, 898, 899], "percent": [31, 52, 68, 134, 136, 139, 205, 257, 260, 292, 338, 339, 342, 345, 346, 347, 354, 618, 619, 635, 739, 740, 741, 742, 743, 745, 783, 787, 854, 880, 893, 895, 898, 899], "lim": [31, 33, 48, 52, 68, 69, 75, 80, 81, 84, 85, 131, 136, 157, 161, 162, 201, 203, 205, 206, 207, 264, 265, 273, 338, 339, 342, 345, 346, 347, 854, 893, 898, 899], "400": [31, 33, 39, 66, 70, 102, 107, 119, 138, 157, 161, 167, 168, 170, 172, 177, 182, 186, 197, 198, 202, 204, 207, 212, 223, 233, 234, 236, 238, 257, 260, 273, 274, 542], "background": [31, 47, 69, 143, 154, 161, 168, 177, 186, 191, 192, 198, 232, 234, 238, 241, 242, 243, 245, 246, 273, 277, 286, 288, 292, 310, 316, 329, 331, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 483, 518, 519, 521, 550, 551, 572, 640, 665, 708, 783, 785, 786, 788, 789, 801, 833, 837, 843, 851, 863, 869, 873, 876, 883, 888, 893, 894, 896, 898, 899, 920, 955], "out": [31, 42, 45, 48, 52, 57, 58, 59, 60, 61, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 95, 97, 101, 106, 109, 114, 117, 119, 121, 136, 142, 147, 151, 157, 163, 166, 167, 169, 177, 182, 184, 186, 192, 193, 196, 198, 203, 204, 205, 206, 208, 210, 211, 212, 216, 218, 222, 223, 227, 229, 231, 232, 233, 234, 235, 237, 246, 252, 255, 269, 270, 273, 274, 284, 289, 304, 309, 317, 318, 320, 323, 328, 331, 332, 333, 334, 336, 340, 355, 370, 406, 424, 425, 426, 483, 485, 490, 494, 519, 521, 550, 551, 559, 575, 601, 609, 634, 635, 636, 650, 655, 678, 684, 686, 775, 783, 785, 786, 788, 789, 812, 813, 820, 852, 859, 867, 871, 874, 878, 887, 890, 895, 897, 935, 938, 940, 941, 947], "adjust": [31, 50, 57, 58, 59, 60, 61, 66, 67, 68, 71, 72, 74, 76, 77, 80, 81, 84, 85, 86, 117, 121, 136, 143, 147, 175, 182, 184, 187, 196, 198, 203, 204, 205, 206, 208, 212, 215, 218, 223, 235, 237, 245, 246, 252, 257, 273, 280, 282, 294, 295, 307, 308, 312, 316, 320, 323, 328, 331, 332, 333, 334, 336, 340, 353, 411, 413, 483, 490, 550, 551, 552, 562, 570, 634, 635, 645, 661, 671, 761, 767, 772, 776, 777, 783, 785, 786, 788, 789, 804, 835, 848, 865, 866, 867, 871, 873, 874, 878, 887, 888, 890, 895, 896, 897, 935, 940, 945], "svd": [31, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 117, 121, 136, 203, 204, 205, 208, 218, 223, 233, 252, 292, 316, 320, 328, 339, 345, 347, 410, 610, 611, 612, 860], "lead": [31, 48, 52, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 96, 97, 114, 117, 121, 136, 170, 177, 188, 193, 203, 204, 205, 208, 218, 222, 223, 227, 229, 237, 239, 252, 283, 284, 288, 292, 293, 294, 295, 306, 307, 318, 319, 320, 325, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 423, 517, 545, 547, 548, 550, 551, 602, 603, 604, 605, 606, 671, 702, 727, 770, 771, 773, 774, 783, 940], "largest": [31, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 117, 121, 136, 161, 177, 203, 204, 205, 208, 215, 218, 223, 252, 255, 483, 527, 576, 611, 612, 635], "38802": 31, "factor": [31, 54, 55, 56, 60, 64, 65, 66, 67, 68, 70, 71, 74, 76, 80, 81, 84, 85, 87, 117, 121, 131, 134, 135, 136, 137, 161, 183, 197, 203, 204, 205, 207, 208, 218, 223, 229, 230, 237, 239, 251, 252, 257, 258, 259, 263, 265, 269, 280, 281, 291, 292, 293, 295, 302, 303, 319, 320, 323, 326, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 366, 423, 427, 434, 441, 491, 492, 495, 496, 504, 523, 550, 551, 561, 605, 615, 618, 619, 645, 646, 652, 653, 659, 668, 670, 672, 719, 721, 722, 735, 736, 764, 766, 783, 787, 791, 794, 797, 810, 812, 813, 814, 815, 816, 817, 823, 833, 848, 865, 873, 886, 888, 894, 896, 898], "35945e": 31, "nchan": [31, 60, 66, 67, 68, 71, 74, 76, 78, 80, 81, 83, 84, 85, 117, 121, 136, 192, 193, 195, 203, 204, 205, 208, 218, 223, 243, 250, 252, 280, 335, 336], "nzero": [31, 60, 66, 67, 68, 71, 74, 76, 80, 81, 84, 85, 117, 121, 136, 203, 204, 205, 208, 218, 223, 252], "invert": [31, 47, 54, 55, 56, 60, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 80, 81, 83, 84, 85, 87, 117, 121, 131, 134, 135, 136, 137, 161, 182, 184, 187, 192, 203, 204, 205, 206, 207, 208, 212, 218, 223, 229, 251, 252, 263, 265, 270, 317, 350, 360, 363, 489, 492, 497, 545, 547, 548, 769, 808], "eigenlead": [31, 54, 55, 56, 60, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 80, 81, 84, 85, 87, 117, 121, 131, 134, 135, 136, 137, 192, 203, 204, 205, 207, 208, 218, 223, 251, 252, 263, 265, 320], "explain": [31, 44, 54, 56, 60, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 77, 80, 81, 84, 85, 86, 87, 117, 121, 163, 185, 186, 192, 203, 204, 205, 207, 208, 209, 218, 219, 223, 232, 251, 252, 263, 265, 278, 281, 283, 291, 292, 293, 305, 309, 320, 340, 367, 369, 424, 425, 426, 483, 490, 545, 547, 548, 611, 612, 635, 649, 879, 945], "97": [31, 37, 39, 41, 45, 60, 67, 70, 73, 98, 107, 109, 130, 135, 136, 139, 141, 144, 182, 186, 192, 195, 218, 223, 232, 235, 236, 237, 255, 256, 259, 260, 263, 277, 280, 316, 320, 504, 598, 644, 646, 670, 764], "varianc": [31, 34, 40, 42, 54, 56, 57, 60, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 77, 80, 81, 84, 85, 86, 87, 97, 117, 121, 141, 192, 203, 204, 205, 206, 207, 208, 209, 218, 223, 227, 232, 239, 251, 252, 263, 265, 277, 278, 281, 283, 291, 292, 293, 299, 305, 319, 320, 340, 342, 360, 361, 362, 363, 364, 365, 424, 425, 426, 492, 528, 545, 547, 548, 611, 612, 613, 635, 643, 765, 776, 777, 813, 816, 858, 879, 880], "control": [31, 37, 45, 48, 52, 58, 59, 60, 64, 67, 68, 73, 74, 76, 87, 121, 136, 141, 147, 160, 166, 175, 176, 182, 192, 194, 197, 198, 204, 205, 207, 208, 215, 218, 223, 228, 229, 230, 232, 233, 234, 237, 238, 245, 251, 252, 255, 263, 273, 274, 278, 284, 285, 286, 288, 289, 291, 292, 294, 295, 303, 304, 305, 306, 307, 310, 317, 320, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 491, 493, 494, 496, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 533, 534, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 589, 590, 591, 592, 593, 594, 596, 597, 598, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626, 627, 628, 631, 635, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 677, 678, 679, 682, 683, 684, 685, 689, 690, 691, 692, 693, 694, 696, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 727, 731, 732, 734, 735, 736, 737, 747, 748, 751, 753, 754, 755, 756, 757, 758, 759, 770, 771, 772, 773, 774, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 801, 802, 803, 804, 807, 808, 811, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 828, 832, 833, 835, 842, 849, 851, 854, 860, 861, 863, 866, 867, 868, 869, 870, 875, 878, 879, 880, 881, 885, 886, 888, 889, 891, 892, 893, 894, 898, 899, 900, 901, 904, 906, 914, 915, 916, 917, 918, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 947], "24807258e": 31, "55793898e": 31, "13115753e": 31, "347": [31, 32, 72, 82, 139, 195, 282, 955], "876": [31, 344], "opm_data": [31, 32, 955], "52": [32, 37, 45, 54, 61, 67, 71, 73, 107, 108, 111, 126, 130, 135, 136, 141, 156, 171, 177, 194, 195, 218, 222, 223, 229, 236, 255, 256, 259, 260, 262, 263, 265, 277, 281, 475, 769, 814, 817], "814": [32, 223, 254], "1354": [32, 955], "491": [32, 223, 255, 955], "spm_faces_dataset_sgskip": [32, 33, 955], "pipelin": [33, 34, 35, 36, 37, 38, 39, 41, 44, 136, 163, 187, 191, 192, 197, 198, 199, 222, 223, 227, 228, 232, 283, 295, 301, 317, 318, 483, 485, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 536, 636, 823, 935, 941, 948], "reconstruct": [33, 42, 79, 184, 185, 188, 189, 190, 191, 208, 213, 214, 218, 222, 226, 227, 232, 237, 265, 277, 289, 292, 301, 306, 317, 320, 328, 329, 331, 333, 334, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 360, 365, 371, 375, 376, 377, 380, 423, 429, 434, 435, 436, 460, 463, 491, 524, 535, 539, 541, 542, 543, 544, 547, 587, 591, 593, 621, 635, 636, 645, 646, 659, 666, 670, 678, 687, 702, 705, 712, 714, 726, 731, 732, 746, 749, 760, 778, 779, 825, 833, 846, 851, 853, 863, 869, 874, 893, 898, 899, 930, 935, 955], "scrambl": [33, 223, 317], "doe": [33, 54, 57, 81, 84, 85, 97, 98, 102, 106, 110, 139, 144, 166, 167, 175, 177, 184, 186, 187, 188, 194, 204, 207, 208, 215, 216, 217, 219, 227, 229, 230, 231, 232, 233, 235, 237, 238, 239, 250, 252, 257, 259, 260, 263, 270, 273, 277, 284, 285, 291, 292, 294, 304, 307, 309, 310, 316, 320, 323, 324, 326, 328, 330, 331, 332, 333, 334, 338, 339, 342, 343, 345, 346, 347, 355, 364, 365, 370, 387, 400, 427, 430, 439, 440, 450, 457, 513, 514, 515, 516, 517, 541, 550, 551, 571, 575, 601, 621, 624, 637, 650, 652, 655, 662, 695, 699, 724, 729, 733, 783, 785, 786, 787, 788, 789, 820, 823, 828, 837, 873, 896, 935, 945], "quit": [33, 47, 170, 176, 177, 188, 229, 230, 232, 237, 238, 243, 255, 256, 264, 273, 309, 318, 635, 935], "even": [33, 97, 101, 139, 155, 168, 181, 186, 192, 193, 194, 197, 198, 209, 217, 218, 226, 227, 229, 231, 232, 233, 234, 235, 239, 243, 245, 255, 270, 278, 282, 286, 289, 291, 292, 293, 295, 303, 309, 317, 320, 323, 331, 332, 333, 334, 376, 392, 447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 550, 551, 580, 635, 797, 896, 949], "fast": [33, 47, 70, 155, 177, 181, 218, 268, 270, 277, 285, 299, 306, 320, 331, 332, 333, 334, 432, 491, 500, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 593, 594, 635, 679, 785, 788, 804, 935, 940], "sever": [33, 97, 102, 107, 108, 141, 171, 176, 177, 179, 181, 184, 185, 191, 192, 194, 195, 197, 198, 206, 207, 215, 216, 217, 218, 226, 228, 233, 234, 239, 243, 245, 246, 255, 263, 265, 273, 278, 283, 309, 316, 317, 320, 326, 331, 332, 475, 518, 550, 551, 678, 787, 813, 816, 935, 936, 944, 945, 946, 948, 951], "alexandr": [33, 35, 36, 37, 38, 39, 41, 44, 54, 55, 56, 64, 65, 66, 68, 72, 73, 74, 76, 78, 79, 85, 91, 114, 119, 123, 124, 127, 134, 135, 137, 138, 140, 144, 148, 153, 157, 158, 163, 185, 188, 206, 211, 223, 232, 257, 258, 259, 263, 264, 265, 269, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 314, 333, 334, 423, 483, 547, 548, 603, 635, 935, 953], "gramfort": [33, 35, 36, 37, 39, 44, 54, 55, 56, 64, 65, 66, 68, 72, 73, 74, 76, 78, 79, 85, 91, 119, 123, 124, 127, 134, 135, 137, 138, 140, 144, 148, 153, 157, 158, 163, 185, 188, 206, 211, 223, 232, 257, 258, 259, 263, 264, 265, 269, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 314, 333, 334, 423, 547, 548, 603, 635, 875, 935, 953], "inria": [33, 35, 36, 37, 39, 44, 54, 55, 56, 64, 65, 66, 68, 72, 73, 74, 76, 78, 79, 85, 86, 91, 119, 123, 124, 127, 134, 135, 137, 138, 144, 148, 153, 157, 158, 163, 185, 211, 257, 258, 259, 263, 264, 265, 269], "deni": [33, 37, 39, 42, 47, 52, 59, 68, 96, 105, 128, 136, 140, 141, 147, 148, 154, 158, 159, 177, 188, 223, 259, 260, 265, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 298, 299, 300, 301, 302, 307, 314, 333, 334, 423, 603, 935, 953], "engemann": [33, 37, 39, 42, 47, 52, 59, 68, 96, 105, 128, 136, 140, 141, 147, 148, 154, 158, 159, 188, 223, 259, 260, 265, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 298, 299, 300, 301, 302, 307, 314, 333, 334, 423, 603, 875, 935, 953], "spm_path": 33, "spm_ctf_meg_example_faces1_3d": [33, 151], "downsampl": [33, 45, 136, 162, 171, 192, 222, 228, 230, 258, 280, 282, 290, 291, 298, 307, 323, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 482, 523, 524, 550, 551, 591, 659, 769, 783, 787, 894, 935], "heavili": [33, 136, 183, 223, 356, 358, 823], "advis": [33, 97, 216, 229, 294, 316, 320, 323], "real": [33, 58, 76, 119, 120, 177, 181, 182, 184, 186, 187, 229, 232, 233, 234, 235, 245, 250, 252, 257, 277, 292, 294, 300, 312, 364, 526, 550, 551, 553, 596, 679, 787, 801, 811, 812, 813, 833, 906, 948, 951], "jitter": [33, 194, 230, 550, 551, 935], "npad": [33, 45, 102, 107, 108, 218, 222, 263, 264, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 523, 550, 551, 935], "auto": [33, 36, 41, 42, 45, 48, 57, 97, 101, 102, 103, 107, 108, 109, 117, 134, 140, 147, 148, 153, 162, 173, 174, 182, 188, 191, 197, 218, 222, 229, 232, 235, 237, 257, 258, 259, 260, 263, 264, 278, 282, 283, 284, 285, 287, 288, 289, 291, 292, 294, 303, 305, 306, 316, 317, 323, 325, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 373, 374, 380, 396, 410, 412, 416, 422, 423, 427, 428, 429, 434, 483, 485, 489, 490, 494, 495, 502, 504, 507, 512, 513, 514, 516, 517, 519, 521, 522, 523, 528, 545, 547, 548, 550, 551, 557, 559, 561, 563, 566, 567, 574, 578, 581, 593, 598, 613, 632, 634, 635, 636, 644, 645, 646, 647, 650, 659, 660, 663, 670, 674, 683, 688, 694, 713, 727, 783, 785, 786, 787, 788, 789, 833, 835, 851, 852, 854, 859, 865, 867, 869, 870, 871, 872, 874, 875, 878, 880, 882, 885, 887, 888, 889, 890, 891, 893, 895, 897, 898, 899, 903, 933, 935, 955], "sfreq": [33, 34, 35, 40, 45, 47, 57, 90, 92, 95, 96, 97, 117, 119, 120, 121, 122, 136, 138, 141, 153, 155, 162, 163, 170, 192, 194, 195, 198, 212, 217, 218, 222, 228, 229, 230, 238, 239, 240, 243, 244, 245, 250, 252, 270, 273, 282, 288, 291, 302, 325, 326, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 350, 443, 485, 488, 489, 494, 495, 496, 507, 509, 511, 518, 519, 521, 550, 551, 674, 684, 688, 775, 786, 789, 790, 791, 792, 801, 803, 804, 809, 811, 812, 813, 814, 815, 868, 876], "major": [33, 291, 309, 310, 312, 388, 550, 935], "n_compon": [33, 34, 35, 38, 41, 101, 103, 109, 114, 144, 192, 198, 223, 232, 284, 292, 293, 483, 490, 491, 497, 635, 636, 650], "max_it": [33, 101, 103, 109, 192, 232, 294, 306, 602, 635, 668, 748, 792, 803], "random_st": [33, 34, 35, 36, 41, 66, 103, 109, 117, 119, 120, 121, 140, 144, 163, 192, 232, 251, 252, 288, 547, 587, 635, 668, 687, 735, 736, 737, 746, 747, 749, 762], "correl": [33, 38, 44, 48, 52, 70, 101, 130, 172, 188, 223, 231, 232, 237, 255, 256, 259, 277, 285, 288, 317, 320, 323, 336, 343, 411, 423, 429, 489, 490, 495, 635, 650, 670, 767, 772, 935], "indic": [33, 39, 42, 48, 57, 73, 74, 96, 97, 107, 127, 166, 167, 168, 170, 171, 172, 175, 177, 181, 182, 186, 194, 195, 196, 201, 204, 215, 218, 222, 226, 227, 228, 230, 232, 233, 236, 237, 239, 243, 245, 246, 250, 252, 257, 260, 283, 284, 286, 288, 289, 292, 294, 298, 308, 309, 310, 319, 320, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 378, 380, 381, 382, 392, 395, 397, 403, 423, 428, 439, 475, 483, 485, 489, 490, 491, 499, 504, 507, 512, 521, 522, 525, 550, 551, 559, 561, 563, 566, 567, 568, 574, 578, 581, 611, 612, 626, 629, 631, 632, 634, 635, 636, 637, 638, 643, 645, 650, 651, 652, 653, 662, 666, 668, 669, 675, 676, 678, 679, 685, 694, 700, 701, 704, 713, 716, 722, 727, 751, 752, 756, 759, 763, 769, 770, 771, 773, 774, 775, 778, 783, 784, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 815, 816, 833, 848, 851, 852, 853, 855, 859, 865, 866, 867, 869, 871, 872, 874, 878, 879, 880, 882, 884, 886, 887, 889, 890, 895, 897, 906, 907, 908, 909, 910, 912, 928, 933], "eog_epoch": [33, 198, 226, 231, 653], "mrt31": 33, "2908": 33, "eog_ind": [33, 232, 635], "eog_scor": [33, 198, 232, 341], "find_bads_eog": [33, 198, 232, 284, 292, 295, 341, 635], "plot_scor": [33, 101, 109, 232, 292, 295, 635], "plot_compon": [33, 103, 232, 283, 286, 304, 306, 307, 635, 938], "topograph": [33, 34, 42, 44, 45, 53, 150, 156, 159, 177, 223, 277, 304, 308, 333, 334, 336, 340, 341, 483, 490, 564, 631, 632, 635, 700, 783, 852, 859, 869, 874, 880, 887, 895, 897, 955], "compon": [33, 34, 38, 40, 41, 47, 53, 55, 56, 57, 60, 67, 68, 70, 71, 73, 85, 97, 101, 103, 104, 105, 106, 111, 113, 114, 121, 146, 152, 163, 176, 177, 188, 192, 198, 203, 204, 205, 207, 208, 210, 218, 223, 226, 227, 228, 229, 230, 231, 233, 234, 237, 238, 239, 245, 252, 263, 265, 274, 277, 278, 280, 281, 283, 284, 285, 286, 288, 289, 291, 292, 293, 294, 295, 298, 301, 304, 305, 306, 312, 316, 317, 320, 333, 334, 335, 337, 341, 364, 365, 380, 396, 423, 427, 428, 439, 440, 441, 450, 475, 476, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 504, 522, 523, 526, 527, 528, 545, 547, 548, 550, 551, 566, 605, 608, 609, 611, 612, 613, 614, 619, 635, 636, 643, 645, 646, 649, 650, 658, 659, 668, 670, 787, 875, 878, 879, 880, 881, 882, 888, 935, 938, 948, 955], "saw": [33, 166, 168, 193, 194, 197, 226, 227, 228, 234, 243, 259], "2nd": [33, 177, 222, 226, 257, 260, 270, 277, 287, 650, 724], "ecg": [33, 98, 100, 103, 107, 108, 109, 117, 119, 120, 121, 136, 138, 157, 166, 167, 168, 172, 175, 177, 193, 194, 195, 198, 216, 218, 227, 228, 230, 231, 233, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 273, 280, 282, 288, 290, 294, 295, 297, 300, 301, 305, 319, 320, 331, 332, 333, 334, 336, 341, 379, 428, 443, 516, 550, 551, 562, 563, 566, 578, 632, 635, 647, 652, 653, 660, 663, 735, 736, 769, 783, 785, 786, 787, 788, 789, 865, 881, 886, 888], "too": [33, 53, 96, 104, 111, 166, 168, 170, 176, 177, 183, 184, 187, 191, 198, 204, 207, 226, 227, 228, 229, 230, 231, 234, 236, 238, 245, 255, 257, 259, 270, 273, 282, 283, 294, 295, 303, 304, 309, 331, 332, 333, 334, 336, 380, 396, 411, 443, 504, 507, 550, 551, 557, 567, 638, 643, 645, 646, 659, 669, 670, 688, 694, 833, 855, 897, 935, 955], "dipolar": [33, 526], "plot_overlai": [33, 109, 232, 287, 305, 308, 635], "clean": [33, 100, 101, 102, 110, 167, 170, 185, 192, 193, 198, 216, 227, 229, 231, 232, 233, 234, 238, 260, 270, 286, 294, 309, 326, 331, 332, 341, 550, 551, 564, 594, 635, 678, 693, 769, 879, 935], "default": [33, 47, 57, 69, 70, 101, 114, 130, 139, 141, 147, 161, 163, 166, 168, 171, 172, 175, 176, 177, 182, 184, 188, 192, 193, 194, 195, 196, 197, 198, 204, 205, 215, 216, 218, 219, 227, 228, 230, 232, 233, 234, 235, 237, 240, 243, 244, 245, 246, 250, 255, 259, 260, 265, 268, 269, 273, 274, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 316, 317, 319, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 384, 385, 387, 389, 390, 391, 392, 394, 395, 396, 397, 398, 403, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 533, 534, 535, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 675, 676, 677, 678, 679, 682, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 764, 768, 769, 770, 771, 772, 773, 774, 775, 776, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825, 828, 830, 832, 833, 835, 837, 842, 843, 844, 848, 849, 851, 852, 853, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 904, 914, 915, 916, 917, 918, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 945], "covarari": 33, "noise_cov": [33, 37, 57, 60, 66, 67, 68, 74, 75, 76, 77, 80, 81, 84, 85, 86, 121, 136, 148, 178, 188, 198, 203, 204, 206, 208, 218, 232, 285, 328, 331, 332, 333, 334, 341, 365, 367, 369, 439, 440, 527, 545, 547, 548, 550, 551, 613, 635, 865, 869, 873, 875, 888], "dig": [33, 136, 145, 153, 162, 182, 183, 184, 185, 186, 192, 195, 196, 209, 210, 243, 250, 274, 288, 289, 302, 336, 374, 380, 411, 502, 558, 598, 851], "montag": [33, 34, 45, 97, 109, 142, 153, 161, 162, 177, 185, 216, 217, 232, 250, 270, 278, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 302, 303, 304, 307, 308, 312, 317, 319, 320, 331, 332, 333, 334, 336, 348, 380, 383, 384, 386, 391, 393, 396, 398, 399, 400, 401, 402, 403, 404, 405, 434, 516, 535, 550, 551, 563, 665, 667, 671, 885, 897, 905], "It": [33, 36, 39, 57, 65, 73, 81, 87, 97, 98, 101, 117, 121, 122, 130, 141, 143, 144, 148, 166, 168, 170, 171, 175, 176, 177, 182, 183, 184, 185, 186, 192, 195, 196, 197, 198, 201, 203, 206, 215, 216, 217, 219, 223, 227, 228, 230, 231, 232, 233, 235, 236, 237, 243, 244, 246, 250, 255, 257, 258, 260, 263, 265, 269, 270, 284, 287, 289, 293, 304, 309, 310, 312, 316, 317, 319, 320, 323, 324, 327, 330, 331, 332, 333, 334, 335, 336, 337, 339, 345, 346, 347, 349, 354, 364, 365, 371, 380, 398, 410, 423, 428, 434, 483, 491, 492, 518, 526, 545, 547, 548, 550, 551, 559, 566, 570, 571, 582, 593, 596, 602, 608, 609, 613, 618, 619, 635, 639, 645, 655, 659, 670, 671, 678, 684, 691, 695, 699, 704, 708, 710, 749, 755, 758, 772, 777, 783, 786, 787, 789, 801, 808, 811, 823, 833, 873, 878, 898, 924, 927, 931, 935, 940, 944, 945, 948, 951], "spm_dig_montag": 33, "trans_fnam": [33, 95, 107, 182, 204, 218], "spm_ctf_meg_example_faces1_3d_raw": 33, "map": [33, 34, 36, 42, 45, 49, 50, 51, 52, 53, 62, 66, 67, 69, 82, 84, 98, 103, 105, 113, 121, 132, 133, 134, 136, 142, 146, 150, 152, 155, 156, 160, 161, 162, 169, 170, 171, 172, 177, 182, 184, 186, 191, 192, 194, 197, 201, 204, 207, 208, 222, 223, 226, 227, 228, 229, 232, 233, 234, 238, 243, 251, 253, 254, 255, 260, 263, 264, 265, 274, 277, 284, 285, 289, 292, 293, 296, 299, 300, 302, 304, 308, 309, 312, 316, 319, 325, 328, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 350, 355, 357, 364, 378, 380, 392, 408, 429, 432, 433, 441, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 504, 507, 510, 512, 524, 528, 536, 545, 546, 547, 548, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 590, 593, 594, 601, 602, 613, 631, 632, 635, 636, 644, 650, 658, 691, 697, 700, 702, 703, 707, 708, 717, 718, 723, 730, 732, 737, 743, 748, 751, 764, 766, 767, 770, 772, 776, 777, 783, 784, 785, 786, 787, 788, 789, 794, 816, 833, 835, 852, 854, 859, 862, 863, 865, 869, 870, 874, 880, 887, 888, 893, 894, 895, 896, 897, 898, 899, 905, 940, 955], "plot_field": [33, 152, 176, 304, 333, 334], "time_view": [33, 87, 136, 152, 161, 162, 203, 207, 218, 273, 292, 333, 334, 338, 339, 342, 345, 346, 347, 833, 835, 870, 893, 898], "daat": 33, "plot_whit": [33, 120, 148, 178, 188, 203, 292, 302, 331, 332, 333, 334, 550, 551, 865, 869, 888, 935], "oct": [33, 37, 48, 50, 54, 55, 57, 61, 64, 65, 66, 67, 68, 69, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 87, 95, 117, 119, 120, 121, 122, 131, 134, 135, 136, 137, 152, 157, 182, 184, 185, 186, 192, 198, 203, 204, 205, 207, 208, 218, 223, 251, 252, 263, 265, 300, 323, 338, 342, 344, 346, 482, 731, 893], "spm_": 33, "s_dspm_invers": 33, "comment": [33, 72, 88, 142, 175, 176, 178, 197, 198, 212, 216, 235, 250, 269, 273, 278, 292, 293, 294, 302, 303, 309, 319, 320, 324, 330, 331, 332, 333, 334, 337, 341, 403, 541, 699, 704, 783, 787, 818, 859, 873, 933, 940], "3d": [33, 53, 57, 61, 64, 66, 78, 85, 87, 123, 124, 150, 156, 161, 162, 168, 177, 182, 184, 186, 187, 197, 201, 202, 211, 217, 223, 233, 237, 255, 258, 260, 273, 278, 284, 288, 289, 292, 293, 294, 295, 301, 303, 304, 306, 309, 317, 318, 319, 323, 329, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 357, 380, 381, 393, 406, 435, 491, 521, 522, 550, 551, 572, 583, 593, 646, 659, 670, 764, 770, 771, 833, 834, 835, 836, 841, 843, 845, 846, 851, 856, 863, 870, 885, 891, 893, 894, 898, 900, 901, 903, 905, 919, 936, 941, 945, 951, 955], "both": [33, 45, 57, 58, 59, 64, 66, 67, 71, 73, 77, 84, 85, 86, 96, 97, 98, 101, 113, 117, 121, 126, 136, 141, 158, 166, 167, 175, 176, 177, 188, 192, 194, 195, 196, 197, 198, 201, 203, 204, 206, 207, 208, 209, 216, 217, 218, 219, 223, 226, 228, 229, 230, 231, 232, 233, 234, 237, 238, 240, 243, 252, 257, 259, 263, 264, 265, 268, 269, 270, 274, 277, 278, 284, 285, 288, 289, 294, 295, 299, 303, 306, 309, 310, 317, 319, 320, 326, 327, 330, 331, 332, 333, 334, 338, 339, 341, 342, 344, 345, 346, 347, 354, 364, 365, 374, 383, 423, 427, 428, 429, 439, 440, 441, 483, 490, 502, 507, 524, 526, 527, 545, 547, 548, 550, 551, 570, 593, 613, 635, 638, 645, 650, 652, 684, 687, 700, 701, 705, 710, 732, 733, 737, 746, 764, 766, 770, 771, 773, 774, 783, 785, 786, 787, 812, 815, 830, 833, 835, 848, 858, 859, 866, 870, 871, 872, 875, 878, 893, 898, 914, 930, 935, 936, 947], "ven": [33, 76], "save_imag": [33, 263, 265, 833], "dspm_map": 33, "png": [33, 73, 142, 149, 198, 263, 265, 285, 306, 323, 341], "classifi": [34, 35, 36, 37, 39, 43, 46, 53, 223, 237, 286, 331, 333, 334, 336, 487, 498, 500, 501, 635, 659, 697, 741, 742, 955], "featur": [34, 37, 41, 44, 45, 53, 125, 129, 168, 176, 197, 198, 222, 223, 234, 237, 246, 255, 260, 270, 277, 285, 304, 309, 310, 311, 317, 320, 333, 334, 338, 339, 341, 342, 345, 346, 347, 483, 486, 489, 490, 492, 493, 495, 498, 516, 550, 551, 635, 659, 670, 693, 767, 768, 859, 869, 871, 893, 898, 900, 904, 935, 936, 941, 948, 949, 955], "extract": [34, 35, 44, 47, 50, 53, 62, 64, 67, 82, 88, 94, 100, 101, 106, 109, 127, 139, 140, 151, 155, 161, 162, 167, 168, 170, 175, 177, 184, 185, 191, 192, 195, 197, 207, 212, 215, 217, 218, 223, 226, 230, 232, 233, 234, 241, 242, 244, 250, 256, 257, 258, 265, 273, 277, 278, 289, 291, 292, 298, 301, 302, 303, 304, 309, 316, 317, 319, 320, 323, 324, 331, 333, 336, 337, 338, 339, 342, 344, 345, 346, 347, 375, 410, 411, 412, 413, 414, 415, 418, 420, 421, 431, 441, 456, 483, 487, 490, 491, 507, 517, 524, 550, 554, 559, 566, 571, 589, 601, 602, 616, 635, 639, 670, 695, 699, 700, 704, 710, 755, 758, 832, 858, 877, 955], "en": [34, 45, 223, 277, 288, 322, 953], "wikipedia": [34, 223, 255, 277], "org": [34, 41, 58, 59, 97, 98, 109, 114, 140, 141, 142, 143, 147, 161, 162, 223, 257, 259, 260, 263, 269, 273, 277, 291, 309, 314, 338, 342, 346, 450, 475, 476, 491, 522, 636, 728, 767, 814, 817, 829, 893, 935], "wiki": [34, 181, 223, 316, 319, 338, 342, 346, 635, 829, 893], "common_spatial_pattern": [34, 223], "document": [34, 41, 90, 114, 161, 162, 169, 175, 177, 186, 192, 194, 195, 196, 198, 203, 207, 216, 229, 230, 232, 234, 237, 243, 245, 246, 250, 269, 273, 277, 278, 284, 285, 288, 289, 292, 293, 294, 295, 296, 303, 304, 305, 306, 307, 311, 313, 314, 316, 317, 320, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 397, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 488, 489, 493, 494, 496, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 533, 534, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 589, 590, 591, 592, 593, 594, 596, 597, 598, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 631, 635, 636, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 677, 678, 679, 682, 683, 684, 685, 689, 690, 691, 692, 693, 694, 696, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 727, 731, 732, 734, 735, 736, 737, 740, 745, 747, 748, 751, 753, 754, 755, 756, 757, 758, 759, 770, 771, 772, 773, 774, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 802, 803, 804, 807, 808, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 828, 832, 833, 835, 842, 843, 851, 860, 863, 867, 868, 869, 870, 873, 875, 878, 879, 880, 885, 886, 888, 889, 891, 892, 893, 894, 898, 899, 900, 904, 914, 915, 916, 917, 918, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 945, 948], "physionet": [34, 163, 232, 277, 288, 291, 317, 450, 475, 476], "martin": [34, 36, 61, 73, 131, 277, 278, 279, 290, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 314, 317, 320, 483], "billing": [34, 292, 301, 302], "tugraz": 34, "sklearn": [34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 144, 163, 197, 222, 223, 232, 255, 287, 291, 293, 300, 309, 423, 428, 484, 486, 489, 492, 493, 497, 500, 829, 941], "discriminant_analysi": [34, 35], "lineardiscriminantanalysi": [34, 35], "model_select": [34, 35, 36, 38, 41, 42, 45, 287, 423, 428, 500], "shufflesplit": 34, "cross_val_scor": [34, 35], "classif": [34, 35, 36, 37, 38, 41, 77, 86, 164, 165, 172, 188, 191, 223, 277, 288, 317, 325, 331, 367, 369, 475, 484, 512, 566, 688, 785, 868, 955], "start": [34, 48, 55, 59, 60, 66, 88, 92, 97, 108, 120, 123, 149, 162, 163, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 182, 183, 184, 186, 187, 191, 192, 193, 194, 196, 199, 200, 203, 204, 212, 215, 223, 227, 228, 230, 231, 232, 233, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 256, 257, 268, 269, 273, 278, 285, 291, 292, 295, 302, 304, 305, 309, 311, 316, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 350, 351, 352, 363, 403, 410, 411, 412, 413, 423, 426, 428, 483, 489, 490, 495, 507, 523, 524, 525, 541, 542, 549, 550, 551, 557, 559, 566, 570, 577, 580, 595, 601, 605, 624, 635, 638, 642, 647, 648, 652, 653, 655, 659, 660, 661, 662, 663, 665, 684, 700, 748, 760, 770, 771, 773, 774, 783, 784, 787, 790, 791, 792, 793, 794, 795, 796, 820, 833, 839, 859, 861, 868, 874, 879, 881, 882, 888, 935, 938, 940, 943, 944, 945, 949, 950, 955], "cue": [34, 161, 278, 507], "feet": [34, 35, 139, 450], "standard_1005": [34, 97, 109, 185, 196, 232], "set_montag": [34, 41, 45, 94, 97, 109, 153, 155, 161, 162, 177, 185, 196, 208, 216, 217, 232, 250, 270, 278, 284, 286, 289, 291, 292, 294, 295, 302, 304, 306, 320, 331, 332, 333, 334, 336, 348, 516, 550, 551, 563, 575], "skip_by_annot": [34, 35, 285, 286, 287, 307, 331, 332, 333, 334, 550, 551, 659, 670], "t1": [34, 35, 56, 70, 76, 139, 182, 183, 184, 185, 186, 187, 202, 288, 289, 306, 307, 317, 319, 320, 323, 344, 346, 347, 371, 375, 376, 377, 388, 437, 460, 550, 666, 732, 853, 899], "t2": [34, 35, 139, 306, 388, 550], "train": [34, 36, 37, 39, 41, 42, 45, 114, 163, 222, 223, 281, 309, 316, 317, 483, 484, 485, 486, 487, 488, 490, 491, 493, 494, 495, 496, 500, 635, 636, 878], "epochs_train": [34, 163], "edf": [34, 35, 109, 139, 163, 185, 219, 232, 278, 282, 283, 285, 287, 288, 289, 291, 292, 293, 295, 300, 301, 302, 304, 306, 307, 308, 317, 320, 516, 550, 551, 559, 566, 574, 688, 938], "eegmmidb": [34, 35, 109, 139, 185, 232, 291, 450], "s001": [34, 35, 109, 139, 185, 232], "s001r06": [34, 35, 139, 185], "19999": [34, 139, 185, 232], "124": [34, 61, 139, 151, 156, 185, 195, 232, 236, 277, 459, 955], "994": [34, 35, 97, 109, 139, 185, 232, 260], "s001r10": [34, 35, 139], "s001r14": [34, 35, 139], "265": [34, 35, 98, 107, 108, 127, 195, 218, 236, 255, 277, 740, 745], "656": [34, 35, 126, 129, 207, 214, 260, 955], "descript": [34, 35, 139, 149, 155, 161, 162, 163, 166, 168, 170, 177, 194, 195, 196, 215, 217, 218, 219, 228, 238, 243, 244, 245, 250, 255, 289, 293, 294, 295, 303, 304, 307, 309, 317, 319, 325, 331, 332, 333, 334, 336, 340, 350, 390, 391, 424, 425, 428, 437, 512, 550, 551, 552, 570, 594, 635, 638, 652, 653, 656, 660, 694, 783, 787, 788, 880, 889], "801": [34, 170, 269], "discrim": 34, "mont": [34, 277], "carlo": [34, 277, 291, 306, 307], "cross": [34, 35, 36, 37, 38, 41, 42, 45, 53, 58, 59, 60, 62, 70, 82, 105, 113, 132, 133, 146, 148, 150, 156, 163, 188, 192, 203, 222, 223, 227, 232, 234, 237, 251, 252, 259, 277, 278, 281, 282, 283, 284, 285, 286, 291, 300, 301, 302, 303, 305, 306, 312, 317, 319, 328, 331, 333, 335, 336, 342, 343, 355, 357, 364, 365, 366, 423, 428, 429, 433, 441, 483, 486, 489, 495, 499, 500, 504, 524, 550, 601, 611, 612, 613, 614, 617, 632, 635, 645, 652, 659, 660, 670, 691, 697, 700, 702, 710, 784, 790, 791, 792, 793, 794, 795, 796, 802, 833, 861, 935, 951, 955], "epochs_data": [34, 283, 485, 488, 492], "get_data": [34, 35, 36, 38, 39, 40, 42, 44, 47, 97, 99, 102, 110, 123, 124, 127, 141, 142, 159, 163, 166, 167, 172, 175, 192, 193, 223, 230, 233, 256, 260, 268, 269, 270, 273, 278, 284, 287, 288, 291, 292, 294, 295, 305, 320, 331, 332, 333, 334, 550, 551, 784, 785, 786, 788, 789], "epochs_data_train": 34, "cv": [34, 35, 36, 37, 38, 41, 42, 45, 223, 283, 284, 286, 423, 428, 499, 500], "test_siz": 34, "cv_split": 34, "split": [34, 36, 37, 41, 42, 45, 84, 94, 114, 121, 171, 185, 192, 222, 223, 234, 251, 256, 265, 273, 277, 278, 280, 282, 284, 286, 288, 292, 293, 295, 301, 308, 331, 332, 333, 334, 337, 338, 339, 342, 345, 346, 347, 423, 428, 500, 542, 549, 550, 551, 572, 575, 608, 609, 670, 760, 769, 784, 814, 817, 833, 861, 893, 898, 954], "assembl": [34, 35, 259, 294, 318, 613, 775], "lda": [34, 35], "norm_trac": [34, 35, 223, 285, 483], "scikit": [34, 35, 42, 44, 45, 144, 223, 232, 282, 283, 285, 287, 289, 291, 293, 298, 309, 318, 487, 489, 491, 492, 493, 494, 496, 497, 498, 501, 635], "clf": [34, 35, 36, 37, 38, 39, 41, 44, 223, 282, 498], "class_bal": 34, "accuraci": [34, 36, 41, 59, 107, 163, 212, 277, 291, 295, 328, 331, 332, 333, 334, 340, 440, 441, 483, 489, 490, 495, 504, 526, 550, 551, 613, 634, 635, 649, 650, 665, 740, 745, 783, 785, 786, 788, 789, 813, 816, 823, 852, 867, 874, 878, 887, 890, 895, 897], "chanc": [34, 35, 36, 37, 223, 303, 310], "fit_transform": [34, 35, 36, 40, 44, 223, 483, 484, 485, 486, 488, 490, 491, 492, 493, 494, 496, 497, 498, 636], "plot_pattern": [34, 38, 223, 284, 304, 306, 483, 490], "ch_type": [34, 40, 48, 52, 68, 90, 106, 108, 113, 127, 139, 141, 147, 152, 153, 157, 167, 168, 171, 175, 176, 177, 192, 196, 202, 203, 217, 232, 237, 238, 246, 250, 260, 268, 269, 284, 291, 328, 331, 332, 333, 334, 336, 386, 387, 443, 483, 490, 550, 551, 578, 593, 634, 635, 640, 650, 659, 723, 727, 783, 785, 786, 787, 788, 789, 866, 867, 874, 878, 890, 891, 895, 897, 906], "au": [34, 212, 328, 331, 332, 333, 334, 340, 443, 483, 490, 550, 551, 658, 783, 785, 786, 788, 789, 867, 874, 887, 895], "7e": [34, 35, 58, 61, 71, 74, 75, 80, 81, 84, 97, 121, 148, 176, 178, 188, 198, 204, 205, 208, 209, 211, 218, 223, 227, 251], "64": [34, 35, 38, 39, 45, 47, 52, 58, 59, 60, 61, 67, 71, 72, 73, 76, 84, 85, 107, 108, 109, 128, 130, 135, 141, 163, 169, 174, 184, 185, 195, 196, 197, 202, 204, 207, 210, 211, 218, 222, 223, 236, 252, 255, 256, 259, 260, 277, 317, 320, 328, 331, 332, 333, 334, 337, 340, 342, 483, 490, 548, 550, 551, 573, 608, 609, 618, 619, 634, 635, 783, 785, 786, 788, 789, 852, 867, 874, 878, 887, 890, 895, 897, 938, 941, 947, 955], "09": [34, 35, 45, 47, 68, 69, 70, 71, 75, 82, 102, 107, 108, 130, 143, 147, 148, 151, 156, 184, 185, 186, 188, 201, 203, 206, 211, 212, 236, 256, 257, 259, 260, 277, 313, 337, 342, 598, 677, 764, 814, 817, 955], "0001": [34, 35, 58, 105, 113, 146, 152, 176, 205, 227, 274, 547, 548], "00012": [34, 35], "00011": [34, 35], "933333": 34, "533333": 34, "00025": 34, "00026": 34, "w_length": 34, "int": [34, 37, 45, 57, 95, 99, 117, 120, 122, 136, 141, 169, 175, 186, 195, 197, 212, 218, 222, 229, 230, 239, 243, 250, 252, 265, 270, 273, 287, 291, 295, 308, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 379, 380, 382, 384, 385, 395, 397, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 499, 500, 502, 504, 505, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 533, 534, 536, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 674, 677, 678, 679, 682, 683, 684, 685, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 727, 729, 731, 732, 733, 734, 735, 736, 737, 746, 747, 748, 749, 751, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 766, 769, 770, 771, 772, 773, 774, 775, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 802, 803, 804, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 828, 832, 833, 835, 842, 843, 844, 848, 851, 852, 853, 859, 860, 861, 863, 864, 865, 866, 867, 868, 869, 870, 873, 874, 875, 878, 879, 880, 881, 882, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 912, 914, 915, 916, 917, 918, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934], "w_step": 34, "w_start": 34, "scores_window": 34, "train_idx": 34, "test_idx": 34, "y_train": [34, 163, 222], "y_test": [34, 163, 222], "x_train": [34, 222], "x_test": [34, 222], "slide": [34, 38, 47, 182, 270, 341, 812, 813, 815, 816], "score_this_window": 34, "w_time": [34, 35], "linestyl": [34, 35, 37, 47, 124, 138, 139, 140, 176, 223, 229, 233, 238, 260, 273, 295, 801, 811, 859, 883], "axhlin": [34, 35, 36, 37, 39, 45, 47, 107, 108, 139, 140, 170, 186, 212, 223, 270, 635, 881], "xlabel": [34, 35, 41, 42, 45, 48, 54, 55, 63, 65, 67, 79, 84, 95, 99, 108, 117, 120, 124, 134, 135, 137, 141, 163, 177, 186, 203, 206, 207, 212, 222, 229, 238, 239, 252, 255, 257, 265, 269, 270, 273, 285, 291, 801, 811], "ylabel": [34, 35, 41, 42, 45, 48, 54, 55, 63, 65, 67, 79, 84, 95, 96, 99, 108, 117, 120, 124, 134, 135, 137, 163, 177, 186, 203, 206, 207, 212, 222, 229, 234, 238, 239, 252, 255, 257, 265, 269, 270, 273, 801, 811], "legend": [34, 35, 36, 37, 38, 42, 45, 47, 48, 54, 63, 64, 65, 67, 71, 95, 97, 123, 124, 137, 138, 163, 170, 171, 176, 188, 192, 198, 206, 222, 223, 238, 243, 244, 265, 269, 270, 273, 284, 286, 288, 289, 292, 294, 301, 305, 306, 331, 332, 333, 334, 801, 811, 833, 848, 858, 859, 865, 868, 873], "loc": [34, 36, 42, 63, 65, 97, 139, 151, 162, 166, 169, 170, 171, 195, 202, 206, 209, 212, 238, 269, 273, 320, 336, 398, 681, 801, 811, 858, 905], "zoltan": [34, 223, 277, 483], "kole": [34, 223, 277, 483], "quantit": [34, 188, 223, 277, 310, 635, 935], "abnorm": [34, 223, 277], "clinic": [34, 97, 98, 105, 139, 165, 177, 223, 227, 231, 232, 277, 317, 320, 602, 634, 635, 643, 644, 650, 670, 685, 814, 817, 955], "electroencephalographi": [34, 84, 98, 105, 139, 177, 223, 227, 231, 277, 320, 342, 634, 644, 685], "neurophysiologi": [34, 97, 98, 105, 139, 177, 223, 227, 231, 232, 277, 320, 634, 635, 643, 644, 650, 685, 814, 817], "79": [34, 39, 42, 45, 61, 67, 71, 73, 107, 123, 130, 135, 139, 141, 146, 183, 184, 195, 202, 207, 210, 219, 222, 223, 236, 255, 256, 259, 260, 277, 475, 503], "440": [34, 107, 223, 236, 255, 277], "447": [34, 45, 223, 277], "1991": [34, 223, 277, 483], "1016": [34, 38, 39, 44, 45, 47, 61, 68, 70, 85, 86, 97, 98, 101, 102, 105, 121, 128, 139, 140, 146, 148, 154, 170, 177, 181, 188, 206, 223, 227, 229, 231, 232, 239, 255, 256, 260, 277, 314, 317, 320, 333, 334, 337, 342, 343, 364, 369, 423, 429, 459, 487, 489, 490, 491, 501, 503, 545, 548, 602, 603, 613, 617, 634, 635, 643, 644, 649, 650, 674, 677, 685, 740, 743, 745, 770, 771, 773, 774, 776, 777, 799, 801, 811, 814, 817, 852, 935], "0013": [34, 98, 105, 139, 177, 223, 227, 231, 277, 320, 634, 644, 685], "4694": [34, 98, 105, 139, 177, 223, 227, 231, 277, 320, 634, 644, 685], "90163": [34, 223, 277], "gerwin": [34, 232, 277, 317, 450], "schalk": [34, 232, 277, 317, 450], "denni": [34, 232, 277, 317, 450], "mcfarland": [34, 232, 277, 317, 450], "thilo": [34, 232, 277, 317, 450], "hinterberg": [34, 232, 277, 317, 450], "niel": [34, 232, 277, 307, 317, 450], "birbaum": [34, 232, 277, 317, 450], "jonathan": [34, 128, 232, 256, 277, 293, 317, 450, 464], "wolpaw": [34, 232, 277, 317, 450], "bci2000": [34, 232, 277, 317, 450], "bci": [34, 41, 114, 139, 185, 223, 232, 277, 301, 317, 450, 636], "ieee": [34, 41, 66, 72, 77, 98, 109, 110, 114, 144, 163, 170, 188, 206, 223, 232, 268, 277, 316, 317, 320, 331, 332, 333, 334, 364, 365, 367, 423, 450, 476, 483, 507, 547, 548, 550, 551, 635, 636, 644, 678, 785, 788, 804, 814, 817, 935], "transact": [34, 41, 77, 98, 110, 114, 144, 163, 188, 206, 223, 232, 268, 277, 316, 317, 320, 331, 332, 333, 334, 364, 365, 367, 423, 450, 476, 483, 547, 550, 551, 602, 635, 636, 644, 678, 785, 788, 804, 935], "biomed": [34, 41, 98, 110, 114, 144, 163, 206, 216, 223, 232, 252, 277, 316, 317, 320, 322, 364, 365, 450, 476, 483, 635, 636, 644, 678, 953], "engin": [34, 41, 98, 109, 110, 114, 144, 206, 223, 232, 233, 234, 252, 277, 309, 316, 317, 320, 364, 365, 450, 476, 483, 602, 635, 636, 644, 678, 947], "1034": [34, 232, 277, 317, 450, 736], "1043": [34, 195, 223, 232, 277, 317, 450], "2004": [34, 97, 232, 277, 317, 320, 423, 450, 643, 743], "1109": [34, 41, 66, 72, 77, 98, 109, 110, 114, 144, 163, 170, 188, 206, 223, 232, 268, 277, 316, 317, 320, 331, 332, 333, 334, 364, 365, 367, 423, 450, 476, 483, 507, 547, 548, 550, 551, 635, 636, 644, 678, 785, 788, 804, 935], "tbme": [34, 41, 98, 110, 114, 144, 223, 232, 277, 316, 317, 450, 483, 635, 636, 644, 678], "827072": [34, 232, 277, 317, 450], "ari": [34, 163, 232, 277, 303, 317, 450, 475, 476, 948], "goldberg": [34, 163, 232, 277, 317, 450, 475, 476], "lui": [34, 163, 232, 277, 317, 450, 475, 476], "amar": [34, 163, 232, 277, 317, 450, 475, 476], "leon": [34, 163, 232, 277, 317, 450, 475, 476], "glass": [34, 57, 61, 66, 70, 85, 87, 163, 207, 232, 277, 317, 339, 345, 346, 347, 450, 475, 476, 894, 898, 899], "jeffrei": [34, 163, 232, 277, 317, 450, 475, 476, 602], "hausdorff": [34, 163, 232, 277, 317, 450, 475, 476], "plamen": [34, 163, 232, 277, 317, 450, 475, 476], "ivanov": [34, 163, 232, 277, 317, 450, 475, 476], "roger": [34, 36, 163, 232, 277, 317, 450, 475, 476], "joseph": [34, 163, 232, 277, 317, 450, 475, 476], "mietu": [34, 163, 232, 277, 317, 450, 475, 476], "georg": [34, 163, 232, 239, 277, 307, 308, 317, 450, 475, 476, 649], "moodi": [34, 163, 232, 277, 317, 450, 475, 476], "chung": [34, 163, 232, 277, 317, 450, 475, 476], "kang": [34, 163, 232, 277, 317, 450, 475, 476], "peng": [34, 163, 232, 277, 317, 450, 475, 476], "h": [34, 123, 128, 139, 163, 229, 231, 232, 245, 273, 277, 305, 307, 308, 314, 316, 317, 320, 323, 325, 331, 332, 389, 450, 475, 476, 519, 522, 634, 685, 743, 765, 781, 798, 865, 876], "eugen": [34, 163, 232, 277, 317, 450, 475, 476], "stanlei": [34, 163, 232, 277, 317, 450, 475, 476], "physiobank": [34, 163, 232, 277, 317, 450, 475, 476], "physiotoolkit": [34, 163, 232, 277, 317, 450, 475, 476], "new": [34, 40, 45, 47, 53, 57, 88, 96, 107, 120, 140, 148, 163, 166, 168, 171, 175, 177, 178, 187, 188, 191, 198, 201, 203, 208, 209, 219, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 243, 245, 246, 250, 255, 258, 259, 260, 268, 274, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 354, 355, 360, 364, 365, 367, 369, 370, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 386, 389, 390, 391, 392, 396, 398, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 439, 440, 441, 442, 450, 457, 459, 460, 475, 476, 482, 483, 485, 487, 489, 490, 494, 495, 502, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 530, 531, 533, 536, 540, 541, 542, 544, 545, 547, 548, 549, 550, 551, 559, 562, 563, 564, 566, 567, 568, 572, 575, 580, 585, 587, 589, 590, 591, 592, 593, 594, 595, 596, 598, 600, 601, 602, 603, 604, 605, 608, 609, 610, 611, 612, 615, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 634, 635, 636, 637, 638, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 652, 653, 655, 656, 659, 660, 666, 669, 670, 671, 678, 680, 683, 684, 685, 690, 694, 696, 697, 701, 702, 705, 713, 715, 716, 717, 718, 719, 721, 724, 727, 732, 734, 735, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 752, 760, 764, 766, 776, 777, 778, 782, 783, 784, 785, 786, 787, 788, 789, 797, 799, 802, 803, 804, 807, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 830, 833, 834, 835, 837, 842, 843, 844, 848, 851, 852, 853, 854, 856, 858, 859, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 895, 897, 898, 899, 901, 904, 907, 909, 910, 921, 924, 925, 926, 930, 931, 933, 935, 936, 941, 943, 945, 946, 947, 949, 950, 953], "research": [34, 94, 97, 149, 163, 167, 170, 177, 181, 194, 226, 232, 240, 252, 270, 277, 311, 314, 317, 322, 450, 475, 476, 570, 603, 674, 765, 949, 953], "resourc": [34, 151, 163, 170, 230, 232, 277, 312, 317, 321, 450, 475, 476, 941], "complex": [34, 58, 63, 141, 161, 163, 219, 232, 255, 277, 287, 292, 296, 303, 304, 307, 309, 317, 319, 331, 332, 333, 334, 357, 450, 475, 476, 496, 550, 551, 606, 735, 787, 803, 804, 812, 813, 815], "circul": [34, 163, 232, 277, 317, 450, 475, 476], "2000": [34, 36, 163, 219, 228, 229, 231, 232, 234, 243, 277, 316, 317, 320, 331, 332, 333, 334, 336, 450, 475, 476, 483, 512, 550, 551, 552, 602, 634, 762], "1161": [34, 163, 232, 277, 317, 450, 475, 476], "cir": [34, 163, 232, 277, 317, 450, 475, 476], "101": [34, 97, 141, 163, 184, 195, 217, 223, 232, 234, 236, 256, 267, 277, 317, 450, 475, 476, 491], "e215": [34, 163, 232, 277, 317, 450, 475, 476], "decoding_csp_eeg": [34, 46, 955], "decomposit": [35, 37, 40, 43, 46, 53, 54, 55, 56, 58, 64, 65, 70, 73, 78, 83, 87, 101, 103, 130, 131, 134, 135, 137, 139, 140, 152, 192, 198, 207, 223, 226, 232, 233, 250, 251, 255, 257, 258, 260, 263, 265, 269, 270, 277, 283, 291, 293, 294, 305, 316, 320, 331, 333, 334, 336, 338, 339, 342, 345, 346, 347, 483, 490, 491, 496, 497, 517, 564, 595, 616, 635, 650, 668, 791, 794, 804, 810, 812, 813, 815, 816, 955], "iter": [35, 45, 53, 61, 62, 69, 70, 82, 85, 109, 117, 120, 121, 122, 131, 139, 160, 163, 183, 195, 198, 205, 206, 222, 232, 245, 252, 259, 263, 264, 265, 277, 278, 280, 288, 291, 295, 306, 308, 320, 325, 326, 328, 331, 332, 333, 334, 335, 336, 337, 341, 342, 343, 355, 358, 359, 362, 370, 416, 423, 429, 434, 486, 493, 500, 524, 545, 546, 547, 548, 549, 550, 551, 585, 601, 602, 604, 606, 609, 635, 638, 645, 650, 655, 668, 702, 733, 748, 768, 769, 770, 771, 773, 774, 783, 785, 786, 787, 788, 789, 792, 803, 820, 823, 833, 848, 878, 894, 955], "roll": [35, 136, 152, 212, 833, 903], "laura": [35, 223, 277, 284, 285], "gwilliam": [35, 223, 277, 284, 285], "nyu": [35, 63, 128, 147, 160, 197, 255, 289], "jean": [35, 36, 37, 38, 39, 40, 42, 44, 98, 105, 211, 223, 227, 232, 277, 280, 281, 282, 283, 284, 285, 286, 288, 291, 293, 294, 295, 301, 302, 304, 316, 320, 635, 644, 743], "remi": [35, 36, 37, 38, 39, 40, 42, 44, 280, 281, 282, 283, 284, 285, 286, 288, 291, 293, 294, 295, 301, 302, 304], "king": [35, 36, 37, 38, 39, 40, 42, 44, 223, 277, 280, 281, 282, 283, 284, 285, 286, 288, 291, 293, 294, 295, 301, 302, 304], "jeanremi": [35, 36, 37, 38, 39, 40, 42, 44], "alex": [35, 58, 64, 97, 98, 109, 141, 142, 143, 147, 161, 162, 211, 259, 260, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 953], "barach": [35, 38, 41, 114, 223, 277, 280, 283, 285, 483], "stratifiedkfold": [35, 36, 41, 42, 286, 500], "make_pipelin": [35, 36, 37, 38, 39, 41, 44, 163, 223, 498], "labelencod": 35, "motor": [35, 43, 46, 53, 58, 102, 109, 136, 139, 170, 207, 223, 238, 301, 331, 336, 380, 396, 432, 450, 483, 490, 512, 566, 632, 955], "imageri": [35, 43, 46, 53, 139, 223, 301, 331, 336, 380, 396, 432, 450, 483, 512, 566, 632, 955], "n_split": [35, 36, 38, 41, 42, 45, 500], "speed": [35, 36, 37, 45, 58, 59, 67, 68, 70, 76, 101, 108, 109, 110, 121, 130, 136, 140, 161, 167, 171, 177, 184, 187, 188, 191, 198, 205, 206, 209, 212, 222, 223, 226, 232, 234, 236, 239, 256, 257, 260, 263, 265, 280, 281, 285, 287, 289, 291, 292, 293, 294, 295, 298, 300, 303, 309, 312, 321, 331, 332, 338, 339, 342, 343, 345, 346, 347, 488, 489, 495, 539, 550, 551, 608, 609, 635, 725, 803, 833, 865, 867, 888, 893, 898, 909, 935, 940], "shuffl": [35, 36, 38, 41, 260, 283], "n_cycl": [35, 58, 134, 137, 139, 141, 192, 229, 257, 258, 259, 260, 269, 496, 618, 619, 791, 794, 799, 801, 811, 812, 813, 815, 816], "mani": [35, 70, 97, 101, 139, 147, 148, 166, 168, 172, 175, 176, 177, 178, 181, 184, 186, 187, 188, 192, 193, 197, 198, 203, 217, 222, 226, 227, 228, 229, 230, 232, 233, 234, 250, 252, 255, 268, 270, 273, 274, 282, 287, 291, 292, 293, 294, 295, 298, 303, 305, 307, 309, 312, 316, 318, 319, 320, 322, 323, 324, 331, 332, 336, 341, 343, 364, 417, 423, 507, 512, 525, 542, 635, 732, 768, 778, 783, 784, 833, 851, 861, 878, 880, 881, 935, 937, 938, 944, 945, 946], "cycl": [35, 134, 141, 210, 212, 229, 269, 270, 287, 309, 331, 332, 410, 496, 550, 551, 618, 619, 635, 791, 794, 799, 801, 811, 812, 813, 815, 816, 859, 865, 868, 880, 888], "min_freq": 35, "max_freq": 35, "n_freq": [35, 141, 222, 259, 269, 488, 496, 619, 763, 773, 774, 783, 784, 785, 786, 787, 789, 801, 803, 804, 810, 811, 812, 813, 815, 816], "bin": [35, 48, 53, 97, 125, 129, 147, 151, 168, 170, 197, 229, 237, 239, 240, 257, 263, 268, 270, 291, 309, 320, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 357, 364, 491, 550, 551, 558, 573, 659, 693, 763, 767, 768, 770, 771, 773, 774, 784, 785, 786, 788, 789, 859, 867, 871, 944, 945, 947, 950, 954, 955], "tupl": [35, 142, 176, 196, 197, 198, 222, 232, 243, 245, 259, 260, 292, 293, 303, 305, 307, 308, 325, 326, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 354, 355, 370, 381, 390, 391, 429, 456, 483, 490, 498, 516, 517, 520, 523, 549, 550, 551, 559, 561, 562, 563, 566, 567, 568, 574, 578, 581, 589, 601, 618, 619, 634, 635, 638, 643, 650, 652, 653, 655, 658, 669, 694, 700, 701, 734, 735, 736, 748, 760, 768, 770, 771, 773, 774, 775, 783, 785, 786, 787, 788, 789, 797, 804, 820, 823, 833, 834, 843, 844, 849, 852, 854, 855, 857, 859, 863, 864, 866, 867, 869, 871, 873, 874, 876, 878, 881, 883, 887, 889, 890, 893, 894, 895, 897, 898, 899, 903, 914], "linspac": [35, 45, 58, 66, 68, 95, 97, 140, 144, 162, 167, 176, 198, 203, 222, 226, 233, 234, 250, 251, 270], "freq_rang": [35, 270], "infer": [35, 36, 69, 70, 140, 182, 191, 196, 229, 244, 245, 256, 260, 261, 262, 277, 278, 283, 285, 293, 295, 303, 319, 320, 331, 332, 333, 334, 337, 338, 339, 342, 345, 346, 347, 364, 365, 386, 390, 423, 427, 428, 432, 439, 440, 441, 483, 490, 513, 514, 516, 526, 527, 545, 547, 548, 550, 551, 559, 561, 566, 613, 635, 713, 761, 767, 770, 771, 772, 773, 774, 776, 783, 785, 786, 788, 789, 848, 873, 874, 875, 882, 888, 897, 933, 948, 955], "gap": [35, 212, 273, 277, 284, 285, 286, 320, 547, 548, 550, 551, 570, 888], "window_spac": 35, "centered_w_tim": 35, "n_window": [35, 659], "instanti": [35, 170, 198, 223, 232, 250, 288, 302, 303, 326, 328, 329, 330, 331, 332, 336, 340, 341, 343, 380, 551, 785, 788, 836, 848], "le": 35, "59999": [35, 210], "374": [35, 107, 195, 236, 243], "loop": [35, 68, 87, 136, 147, 161, 163, 175, 203, 207, 227, 260, 265, 270, 277, 295, 317, 320, 476, 504, 646, 659, 670, 833], "init": [35, 309, 445], "freq_scor": 35, "fmin": [35, 58, 130, 131, 135, 140, 141, 143, 159, 163, 268, 269, 270, 288, 302, 303, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 488, 550, 551, 608, 609, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 795, 803, 804, 814, 817, 833, 854, 889, 893, 895, 898, 899, 906], "fmax": [35, 58, 101, 130, 131, 135, 140, 141, 143, 159, 163, 192, 226, 230, 239, 268, 269, 270, 288, 302, 303, 331, 332, 333, 334, 488, 550, 551, 608, 609, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 795, 803, 804, 814, 817, 833, 850, 889, 895, 906], "enumer": [35, 36, 41, 45, 54, 65, 66, 73, 98, 121, 123, 131, 134, 139, 141, 161, 162, 172, 175, 176, 177, 185, 222, 229, 232, 234, 238, 251, 260, 265, 270], "being": [35, 71, 141, 143, 162, 186, 192, 197, 198, 227, 229, 234, 235, 237, 243, 252, 255, 257, 260, 273, 278, 284, 285, 287, 288, 291, 292, 294, 295, 303, 305, 306, 308, 309, 310, 320, 328, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 431, 434, 517, 527, 541, 550, 551, 589, 635, 659, 661, 705, 783, 785, 786, 788, 789, 833, 853, 865, 866, 869, 871, 872, 889, 894, 899, 906, 907, 914], "w_size": 35, "isol": [35, 71, 141, 228, 232, 234, 301], "raw_filt": [35, 141, 167, 230, 232], "pad": [35, 141, 255, 260, 270, 273, 283, 284, 285, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 389, 518, 521, 522, 523, 550, 551, 804], "drop_bad": [35, 168, 177, 218, 228, 282, 287, 288, 294, 295, 304, 320, 331, 332, 382, 540, 635, 785, 786, 787], "fold": [35, 36, 38, 41, 42, 52, 163, 337, 342, 500, 746, 749], "roc_auc": [35, 37, 39, 223, 486, 493], "axi": [35, 36, 38, 40, 41, 42, 45, 47, 48, 54, 57, 61, 71, 84, 87, 95, 97, 99, 110, 117, 123, 127, 131, 134, 136, 137, 139, 140, 141, 142, 143, 144, 146, 159, 163, 166, 167, 168, 170, 176, 177, 182, 186, 192, 198, 207, 209, 211, 212, 218, 222, 223, 227, 229, 239, 243, 246, 250, 255, 258, 260, 263, 265, 269, 270, 273, 274, 277, 278, 284, 287, 288, 289, 291, 293, 294, 295, 303, 304, 320, 323, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 345, 346, 347, 354, 382, 389, 434, 483, 490, 496, 503, 523, 542, 550, 551, 562, 634, 635, 649, 650, 736, 760, 762, 770, 771, 773, 774, 777, 783, 785, 786, 788, 789, 814, 817, 833, 835, 848, 851, 852, 859, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 878, 880, 882, 883, 887, 888, 889, 890, 895, 896, 897, 947], "701": [35, 161, 223, 260], "205": [35, 195, 210, 212, 222, 236, 245, 248, 260, 955], "281": [35, 57, 184, 190, 195, 955], "629": [35, 39, 46, 51, 52, 955], "165": [35, 172, 195, 211, 212, 214, 223, 229, 232, 236, 238, 255, 260, 263, 277, 955], "031": [35, 155, 166, 175, 195, 210, 252], "581": [35, 222, 236], "139": [35, 133, 141, 195, 236, 252, 282, 344, 955], "869": [35, 39], "549": [35, 223, 235, 277], "756": [35, 39, 236, 260], "523": [35, 76, 82, 260, 955], "bar": [35, 169, 176, 197, 209, 245, 246, 270, 287, 288, 289, 293, 303, 304, 306, 307, 320, 328, 331, 332, 333, 334, 340, 341, 483, 486, 490, 493, 550, 551, 634, 635, 783, 785, 786, 788, 789, 833, 859, 864, 865, 866, 867, 871, 874, 878, 882, 887, 888, 890, 895, 897, 904], "width": [35, 141, 149, 186, 197, 198, 226, 229, 230, 240, 246, 255, 270, 273, 286, 291, 294, 295, 303, 306, 319, 320, 329, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 381, 389, 394, 485, 494, 519, 521, 522, 542, 550, 551, 655, 657, 674, 783, 799, 801, 811, 814, 817, 833, 843, 844, 863, 864, 891, 893, 894, 898, 935], "edgecolor": [35, 36, 269], "black": [35, 47, 71, 73, 74, 76, 139, 161, 168, 177, 186, 217, 234, 238, 274, 292, 328, 329, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 833, 848, 851, 852, 863, 867, 869, 873, 874, 878, 886, 887, 889, 890, 893, 895, 896, 897, 898], "xtick": [35, 41, 45, 117, 222, 229, 239, 255, 273], "tf_score": 35, "center": [35, 63, 71, 95, 97, 106, 117, 122, 139, 147, 148, 177, 182, 184, 186, 196, 211, 226, 228, 229, 230, 234, 240, 255, 270, 283, 317, 320, 322, 323, 333, 334, 337, 342, 373, 492, 562, 587, 598, 635, 644, 732, 735, 740, 746, 749, 783, 823, 833, 838, 875, 886, 894, 903, 953], "w_tmin": 35, "w_tmax": 35, "av_tfr": 35, "newaxi": [35, 41, 54, 127, 144, 260, 263, 264, 265, 833], "white": [35, 50, 52, 67, 78, 136, 139, 143, 148, 154, 159, 161, 168, 182, 184, 185, 186, 202, 204, 217, 237, 251, 255, 260, 273, 274, 292, 303, 316, 319, 323, 329, 331, 332, 333, 334, 337, 338, 339, 342, 344, 345, 346, 347, 439, 541, 550, 551, 587, 621, 622, 687, 705, 731, 783, 785, 786, 788, 789, 833, 851, 853, 863, 873, 875, 893, 896, 898], "vmin": [35, 39, 45, 114, 134, 139, 141, 143, 144, 162, 167, 186, 202, 222, 223, 237, 238, 255, 257, 258, 269, 282, 284, 292, 305, 306, 307, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 783, 785, 786, 788, 789, 833, 852, 866, 867, 874, 878, 887, 890, 895, 896, 897], "red": [35, 80, 85, 97, 106, 107, 109, 127, 139, 158, 159, 168, 170, 176, 182, 186, 196, 204, 207, 212, 217, 222, 226, 227, 230, 234, 237, 238, 240, 246, 260, 263, 269, 270, 293, 299, 309, 319, 327, 328, 329, 331, 332, 333, 334, 337, 340, 483, 490, 550, 551, 634, 635, 650, 704, 783, 785, 786, 788, 789, 833, 850, 852, 859, 860, 863, 866, 867, 869, 874, 878, 887, 890, 895, 897], "425": [35, 46, 255, 260, 955], "decoding_csp_timefreq": [35, 46, 955], "supervis": [36, 44, 114, 163, 483, 500], "character": [36, 39, 223, 277, 320, 635, 745, 881], "confus": [36, 41, 163, 170, 219, 309, 743], "serv": [36, 194, 244, 260, 309, 310, 320, 328, 331, 332, 333, 334, 340, 348, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 787, 788, 789, 831, 851, 852, 867, 874, 878, 887, 890, 895, 897], "proxi": [36, 232, 236], "mental": [36, 39, 223, 277], "rsa": [36, 284, 317, 948], "imag": [36, 42, 53, 56, 58, 59, 61, 66, 70, 72, 81, 85, 97, 114, 134, 139, 147, 150, 152, 155, 156, 162, 169, 172, 175, 181, 182, 185, 186, 192, 196, 202, 206, 208, 217, 218, 226, 229, 232, 233, 234, 235, 252, 255, 256, 257, 258, 259, 260, 269, 270, 273, 277, 280, 282, 283, 285, 287, 288, 289, 293, 294, 295, 298, 301, 302, 303, 304, 305, 307, 317, 319, 322, 328, 331, 332, 333, 334, 336, 340, 341, 343, 344, 346, 347, 356, 357, 358, 359, 364, 365, 371, 375, 380, 381, 389, 406, 422, 429, 435, 459, 483, 490, 545, 547, 548, 550, 551, 560, 572, 602, 634, 635, 650, 665, 667, 697, 732, 738, 739, 740, 741, 742, 743, 744, 745, 783, 785, 786, 788, 789, 801, 811, 821, 822, 823, 833, 834, 837, 851, 852, 853, 866, 867, 871, 873, 874, 878, 880, 887, 890, 891, 895, 896, 897, 899, 903, 905, 942, 947, 948, 953, 955], "92": [36, 39, 45, 60, 61, 70, 95, 107, 130, 139, 141, 169, 195, 206, 223, 228, 236, 255, 256, 257, 259, 260, 264, 265, 320, 598], "human": [36, 45, 59, 84, 121, 140, 154, 170, 177, 181, 204, 206, 222, 252, 277, 316, 317, 319, 322, 331, 332, 333, 334, 342, 357, 364, 444, 458, 485, 489, 494, 519, 521, 522, 550, 551, 640, 772, 801, 811, 812, 815, 939, 948, 953], "anim": [36, 162, 282, 317, 333, 334], "inanim": [36, 317], "bodi": [36, 234, 235, 317, 823], "part": [36, 146, 166, 168, 170, 177, 181, 184, 186, 187, 188, 197, 208, 226, 229, 230, 234, 239, 243, 252, 273, 277, 281, 292, 295, 301, 308, 309, 310, 312, 319, 320, 321, 322, 331, 333, 334, 336, 337, 346, 347, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 512, 526, 527, 545, 547, 548, 550, 552, 572, 608, 609, 613, 710, 760, 770, 771, 773, 774, 783, 787, 833, 852, 871, 875, 942, 952], "6gb": 36, "build": [36, 38, 47, 58, 71, 181, 198, 201, 218, 226, 227, 229, 255, 263, 264, 265, 292, 293, 310, 940, 945, 947], "jaakko": [36, 218, 280, 281, 282, 283, 284, 285, 302], "leppakanga": [36, 218, 280, 281, 282, 283, 284, 285, 302], "jaeilepp": [36, 218], "student": [36, 218, 309, 312], "jyu": [36, 218], "panda": [36, 40, 128, 139, 166, 169, 173, 174, 175, 177, 191, 197, 217, 218, 237, 243, 256, 268, 282, 283, 284, 288, 289, 291, 293, 294, 298, 299, 309, 312, 320, 325, 326, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 507, 550, 551, 697, 769, 783, 785, 786, 787, 788, 789, 941, 955], "read_csv": [36, 217, 218], "linear_model": [36, 37, 38, 39, 41, 44, 223, 312], "logisticregress": [36, 37, 39, 41, 223, 487, 498], "manifold": [36, 144, 146, 852], "md": [36, 277, 736], "standardscal": [36, 37, 39, 44, 223, 492], "stimulu": [36, 39, 59, 60, 75, 96, 98, 100, 107, 108, 117, 120, 134, 147, 166, 168, 169, 170, 172, 175, 188, 192, 193, 194, 195, 206, 209, 215, 218, 219, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 243, 244, 245, 246, 252, 259, 265, 270, 278, 286, 295, 307, 317, 319, 320, 323, 325, 331, 332, 333, 334, 336, 382, 415, 423, 489, 507, 512, 550, 551, 632, 638, 748, 783, 785, 786, 787, 788, 789], "visual_stimuli": 36, "csv": [36, 151, 218, 245, 287, 294, 305, 325, 398, 404, 575, 688], "cond": [36, 66, 72, 85, 88, 126, 128, 176, 260, 265, 324], "restrict": [36, 54, 55, 131, 154, 168, 177, 184, 187, 192, 204, 230, 231, 234, 235, 243, 251, 255, 258, 259, 270, 283, 289, 291, 292, 294, 304, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 345, 346, 347, 351, 352, 364, 365, 529, 530, 550, 551, 602, 603, 604, 605, 606, 608, 609, 618, 619, 627, 628, 631, 632, 633, 746, 783, 785, 786, 787, 788, 789, 796, 802, 914, 938, 954], "max_trigg": 36, "row": [36, 100, 128, 139, 167, 168, 169, 170, 171, 176, 192, 195, 198, 201, 223, 238, 243, 255, 256, 273, 282, 291, 295, 320, 326, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 366, 427, 439, 483, 489, 490, 507, 550, 551, 575, 614, 617, 635, 636, 659, 768, 769, 783, 784, 785, 786, 787, 788, 789, 833, 861, 866, 874, 878, 881], "cond_tag": 36, "els": [36, 41, 54, 57, 66, 73, 121, 123, 141, 177, 186, 201, 218, 229, 234, 243, 255, 270, 299, 309, 321, 328, 329, 331, 332, 333, 334, 336, 355, 370, 483, 490, 550, 551, 593, 601, 619, 635, 636, 655, 732, 738, 739, 740, 741, 742, 743, 744, 745, 766, 785, 786, 788, 789, 812, 813, 820, 863, 867, 888, 941], "bodypart": 36, "natur": [36, 45, 149, 154, 198, 222, 240, 259, 277, 303, 317, 320, 458, 489, 523, 674], "n_run": 36, "sample_subject_": 36, "_tsss_mc": 36, "on_split_miss": [36, 293, 550, 572], "ignor": [36, 67, 73, 96, 107, 136, 161, 166, 172, 177, 188, 192, 198, 207, 210, 218, 226, 227, 228, 234, 255, 278, 281, 284, 285, 286, 288, 291, 292, 293, 294, 295, 304, 309, 319, 323, 326, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 364, 365, 384, 392, 407, 417, 418, 423, 427, 429, 430, 432, 434, 439, 440, 445, 447, 448, 449, 452, 453, 454, 456, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 490, 492, 502, 510, 512, 517, 519, 524, 530, 533, 540, 545, 547, 548, 550, 551, 552, 562, 564, 568, 572, 580, 613, 630, 634, 635, 638, 646, 659, 670, 690, 694, 696, 697, 705, 719, 721, 724, 731, 732, 748, 770, 772, 783, 785, 786, 787, 788, 789, 830, 852, 863, 864, 865, 867, 868, 871, 874, 878, 879, 887, 888, 889, 890, 895, 897, 926, 928, 930], "filenam": [36, 69, 70, 98, 100, 103, 107, 108, 109, 120, 161, 166, 167, 172, 177, 182, 183, 193, 194, 198, 226, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 252, 273, 283, 284, 289, 293, 294, 295, 302, 303, 304, 323, 325, 326, 328, 331, 332, 333, 334, 337, 341, 344, 355, 368, 377, 380, 420, 421, 513, 514, 516, 526, 536, 542, 549, 550, 551, 555, 571, 572, 577, 582, 584, 596, 597, 681, 686, 688, 693, 695, 697, 699, 700, 703, 704, 705, 706, 709, 713, 717, 721, 728, 732, 748, 784, 805, 827, 833, 842, 888, 921, 922, 923, 925, 928, 929, 930, 933, 947], "min_dur": [36, 239, 240, 524, 637], "002": [36, 39, 58, 59, 148, 155, 166, 167, 168, 171, 175, 192, 195, 215, 222, 223, 228, 229, 231, 234, 239, 243, 246, 252, 277, 524], "appel": 36, "dissimilar": 36, "rdm": 36, "cichi": [36, 277, 317], "et": [36, 42, 45, 47, 222, 229, 231, 240, 270, 280, 317, 320, 322, 331, 332, 613, 643, 801, 811, 812, 815, 953], "al": [36, 42, 45, 47, 222, 229, 231, 270, 280, 320, 331, 332, 613, 643, 801, 811, 812, 815], "multiclass": [36, 277, 283, 483, 500], "multinomi": 36, "logist": [36, 37, 41, 44, 223], "paper": [36, 42, 229, 233, 277, 314, 320, 364, 545, 602, 635, 743], "pairwis": [36, 73, 97, 144, 277, 643], "binari": [36, 126, 186, 219, 223, 244, 291, 301, 320, 329, 484, 500, 524, 567, 568, 573, 576, 692, 763, 769, 781, 925, 940, 947], "roc": [36, 39, 744], "auc": [36, 39, 223, 744], "final": [36, 42, 45, 68, 94, 96, 97, 109, 110, 139, 140, 141, 163, 166, 167, 170, 172, 176, 177, 182, 186, 188, 192, 197, 205, 207, 208, 212, 217, 222, 227, 228, 232, 233, 234, 237, 238, 240, 255, 257, 259, 260, 263, 265, 270, 273, 282, 309, 310, 316, 331, 332, 333, 334, 386, 397, 489, 526, 550, 551, 733, 905, 935], "sake": [36, 228, 259, 273, 938], "did": [36, 37, 54, 55, 56, 64, 65, 70, 73, 78, 83, 87, 109, 131, 134, 135, 137, 152, 186, 187, 188, 192, 196, 198, 201, 202, 207, 229, 232, 234, 235, 250, 251, 263, 265, 282, 292, 294, 307, 308, 318, 336, 344], "instant": [36, 39, 68, 147, 203, 209, 223, 329, 333, 334, 354, 422, 526, 757, 758, 759, 783, 790, 791, 792, 793, 794, 795, 796, 835, 870, 872, 874], "50m": 36, "300m": 36, "focu": [36, 38, 109, 170, 228, 229, 273, 289, 947], "liblinear": [36, 37, 39, 41, 44, 223], "multi_class": [36, 41], "y_pred": [36, 38, 45, 163, 282, 486, 489, 493], "probabilist": [36, 277, 320, 423, 486, 493], "necessari": [36, 47, 57, 100, 121, 161, 172, 177, 181, 182, 184, 186, 187, 192, 195, 197, 206, 226, 228, 229, 230, 231, 232, 233, 234, 240, 243, 244, 250, 255, 273, 282, 286, 291, 293, 294, 302, 303, 305, 309, 310, 316, 317, 319, 320, 324, 331, 332, 333, 334, 335, 338, 339, 342, 343, 345, 346, 347, 364, 365, 384, 386, 393, 427, 445, 483, 490, 492, 507, 518, 526, 549, 550, 551, 559, 566, 571, 586, 602, 670, 678, 688, 695, 699, 727, 747, 783, 785, 786, 787, 788, 789, 833, 874, 893, 898, 936], "predict_proba": [36, 486, 493], "train_class": 36, "jj": 36, "im": [36, 39, 41, 48, 97, 142, 162, 223, 304, 837, 897, 905], "matshow": [36, 39], "rdbu_r": [36, 39, 42, 45, 48, 134, 141, 222, 223, 257, 258, 309, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 852, 866, 867, 871, 874, 878, 887, 890, 895, 896, 897], "set_ytick": 36, "set_yticklabel": [36, 139], "set_xtick": [36, 270], "set_xticklabel": [36, 270], "colorbar": [36, 39, 41, 48, 97, 98, 134, 139, 141, 142, 143, 147, 162, 168, 172, 176, 202, 208, 223, 234, 238, 246, 255, 256, 257, 259, 260, 273, 278, 282, 283, 284, 286, 289, 291, 292, 294, 305, 328, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 483, 490, 550, 551, 634, 635, 650, 783, 784, 785, 786, 788, 789, 833, 849, 852, 854, 859, 860, 861, 866, 867, 871, 872, 874, 878, 887, 890, 893, 895, 896, 897, 898, 899], "relat": [36, 38, 45, 53, 58, 59, 60, 97, 104, 128, 132, 133, 139, 144, 155, 158, 162, 170, 172, 179, 180, 181, 184, 186, 188, 191, 192, 198, 199, 204, 215, 216, 219, 222, 223, 226, 228, 229, 231, 232, 233, 236, 237, 238, 245, 256, 263, 269, 270, 277, 278, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 299, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 317, 318, 319, 320, 321, 331, 332, 333, 334, 336, 341, 354, 382, 397, 422, 464, 489, 490, 507, 519, 524, 540, 550, 551, 626, 635, 643, 697, 732, 762, 783, 801, 811, 833, 848, 856, 859, 866, 881, 882, 888, 896, 920, 935, 936, 944, 955], "histor": [36, 176, 307, 312, 320, 330, 331, 332, 333, 334, 403, 783, 787], "summar": [36, 71, 140, 177, 230, 232, 243, 299, 310, 316, 331, 332, 338, 339, 342, 345, 346, 347, 859, 866, 938], "dimension": [36, 176, 201, 223, 227, 233, 234, 243, 260, 263, 264, 265, 277, 288, 294, 303, 312, 319, 320, 333, 334, 338, 339, 342, 345, 346, 347, 423, 491, 496, 498, 635, 763, 783, 833, 869], "reduct": [36, 43, 46, 53, 141, 218, 230, 238, 239, 277, 294, 301, 331, 332, 333, 334, 336, 439, 443, 482, 491, 497, 550, 632, 635, 636, 670, 678, 697, 813, 816, 955], "multi": [36, 42, 53, 62, 72, 82, 109, 131, 154, 196, 216, 223, 229, 263, 264, 265, 277, 278, 284, 287, 291, 298, 304, 320, 328, 329, 331, 332, 333, 334, 335, 336, 340, 346, 370, 458, 483, 484, 488, 490, 499, 522, 524, 526, 548, 550, 551, 596, 601, 602, 604, 608, 609, 613, 634, 635, 649, 650, 689, 691, 692, 717, 783, 785, 786, 788, 789, 803, 808, 852, 867, 874, 878, 887, 890, 895, 897, 901, 948, 955], "togeth": [36, 69, 97, 101, 167, 175, 177, 192, 198, 201, 215, 226, 232, 234, 237, 238, 240, 243, 250, 260, 274, 278, 295, 309, 319, 331, 332, 333, 334, 341, 350, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 505, 507, 526, 527, 545, 547, 548, 550, 551, 576, 613, 635, 669, 696, 713, 716, 770, 771, 773, 774, 803, 875, 914, 928, 933], "precomput": [36, 182, 197, 207, 218, 287, 331, 332, 429, 550, 551, 635, 731, 786, 789, 865, 882, 888], "colormap": [36, 50, 84, 136, 139, 140, 143, 149, 162, 168, 186, 234, 270, 273, 278, 282, 283, 284, 291, 292, 295, 303, 309, 328, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 483, 490, 550, 551, 634, 635, 650, 775, 783, 784, 785, 786, 788, 789, 833, 844, 850, 852, 854, 859, 861, 866, 867, 871, 874, 877, 878, 887, 890, 891, 893, 895, 896, 897, 898, 899, 906, 930], "rainbow": 36, "sel": [36, 57, 256, 626, 629, 631, 632, 717, 784], "this_nam": 36, "scatter": [36, 71, 142, 255, 288, 853], "facecolor": [36, 73, 177, 255], "scatterpoint": 36, "ncol": [36, 41, 100, 134, 139, 147, 163, 172, 177, 202, 209, 238, 273, 291, 306, 333, 334, 483, 490, 635, 874, 878], "shepard": [36, 277], "multidimension": [36, 255, 277, 486, 493, 500], "tree": [36, 277], "scienc": [36, 39, 59, 66, 128, 140, 206, 223, 252, 256, 270, 277, 317, 320, 322, 357, 364, 464, 547, 602, 635, 953], "210": [36, 39, 61, 107, 113, 117, 152, 176, 195, 212, 223, 239, 259, 260, 274, 277], "4468": [36, 277], "390": [36, 38, 47, 107, 223, 236, 255, 277], "398": [36, 106, 107, 111, 223, 260, 277, 955], "1980": [36, 177, 277], "1126": [36, 223, 277], "aarr": [36, 277], "laakso": [36, 277], "garrison": [36, 277], "cottrel": [36, 277], "content": [36, 53, 132, 184, 192, 195, 198, 229, 230, 233, 238, 246, 269, 277, 294, 301, 304, 306, 309, 319, 331, 332, 335, 341, 457, 458, 515, 584, 842, 859, 866], "assess": [36, 39, 163, 182, 188, 196, 226, 240, 277, 320, 602, 613, 635, 740, 745, 935], "neural": [36, 44, 45, 48, 53, 59, 89, 93, 97, 98, 109, 144, 163, 177, 204, 206, 223, 226, 229, 232, 235, 239, 252, 270, 271, 277, 285, 317, 319, 336, 357, 364, 365, 443, 483, 487, 489, 490, 545, 550, 551, 635, 644, 668, 942, 955], "philosoph": [36, 277, 320, 602], "76": [36, 39, 42, 44, 45, 60, 61, 67, 72, 73, 106, 107, 130, 135, 136, 141, 146, 185, 195, 202, 218, 222, 223, 236, 255, 256, 257, 259, 260, 263, 264, 265, 277, 764, 852], "09515080050002726": [36, 277], "nikolau": [36, 277], "kriegeskort": [36, 277], "mariek": [36, 277], "mur": [36, 277], "peter": [36, 206, 268, 277, 287, 320, 331, 332, 333, 334, 550, 551, 602, 635, 785, 788, 804, 814, 817], "bandettini": [36, 277], "branch": [36, 277, 309], "neuro": [36, 112, 277, 300], "06": [36, 46, 52, 61, 67, 70, 71, 72, 76, 78, 82, 85, 98, 102, 110, 111, 121, 127, 130, 156, 165, 181, 184, 200, 202, 205, 207, 209, 214, 221, 229, 234, 236, 242, 255, 256, 257, 260, 265, 277, 313, 319, 343, 429, 491, 545, 644, 955], "radoslaw": [36, 277, 317], "aud": [36, 54, 55, 63, 65, 75, 119, 126, 131, 134, 135, 176, 260, 277, 317, 331, 859], "oliva": [36, 277, 317], "resolv": [36, 206, 232, 237, 277, 304, 305, 306, 317, 796, 945], "recognit": [36, 72, 128, 177, 229, 277, 317, 814, 817], "455": [36, 39, 260, 277, 317, 344], "462": [36, 39, 198, 200, 255, 277, 317, 344, 955], "2014": [36, 38, 39, 44, 45, 66, 98, 140, 148, 177, 188, 223, 229, 277, 313, 314, 317, 333, 334, 423, 487, 489, 490, 491, 501, 547, 644, 674, 765, 814, 817, 935], "1038": [36, 154, 222, 277, 317, 458, 489], "nn": [36, 204, 277, 292, 317, 344, 732], "3635": [36, 277, 317], "decoding_rsa_sgskip": [36, 46, 955], "cortic": [37, 50, 52, 53, 57, 58, 67, 69, 84, 104, 106, 111, 117, 121, 136, 140, 150, 156, 181, 184, 189, 191, 192, 198, 201, 204, 206, 213, 218, 227, 252, 255, 264, 277, 285, 288, 291, 292, 295, 300, 306, 308, 312, 317, 319, 323, 328, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 349, 351, 352, 364, 365, 429, 433, 459, 517, 528, 545, 547, 548, 550, 587, 602, 603, 604, 605, 606, 609, 613, 618, 619, 632, 633, 651, 687, 690, 691, 702, 705, 712, 740, 743, 745, 746, 747, 748, 749, 779, 833, 846, 894, 940, 942, 945, 948, 955], "confin": [37, 73, 184, 259, 320, 357], "potenti": [37, 41, 73, 97, 98, 100, 105, 114, 128, 144, 155, 167, 170, 179, 180, 191, 194, 198, 223, 227, 229, 231, 235, 255, 256, 259, 270, 273, 277, 282, 284, 285, 310, 316, 317, 320, 331, 332, 333, 334, 336, 337, 342, 377, 382, 422, 429, 439, 464, 522, 539, 540, 550, 551, 552, 626, 636, 643, 644, 697, 746, 749, 769, 776, 850, 859, 866, 896, 920, 935, 955], "relev": [37, 38, 52, 128, 139, 154, 177, 195, 206, 223, 229, 230, 231, 238, 274, 277, 309, 314, 316, 320, 344, 442, 490, 635, 652, 782, 878, 880, 935], "eric": [37, 45, 48, 52, 60, 65, 76, 83, 92, 99, 106, 110, 120, 121, 136, 145, 147, 151, 154, 161, 162, 181, 183, 185, 205, 206, 208, 209, 210, 212, 218, 222, 223, 236, 255, 259, 260, 263, 264, 265, 273, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 314, 317, 337, 342, 459, 602, 678, 748, 770, 771, 773, 774, 953], "larson": [37, 45, 48, 52, 60, 65, 76, 83, 92, 99, 106, 110, 120, 121, 136, 145, 147, 151, 154, 161, 162, 185, 205, 206, 208, 209, 210, 212, 218, 222, 223, 236, 255, 259, 263, 264, 265, 273, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 314, 317, 331, 332, 333, 334, 337, 342, 459, 550, 551, 678, 748, 953], "feature_select": 37, "selectkbest": 37, "f_classif": 37, "meg_path": [37, 39, 40, 41, 42, 48, 54, 56, 57, 61, 63, 65, 66, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 95, 96, 98, 99, 103, 105, 112, 113, 114, 119, 120, 121, 123, 124, 126, 127, 130, 131, 134, 135, 137, 138, 144, 145, 148, 157, 158, 159, 204, 205, 206, 207, 223, 252, 257, 258, 259, 260, 263, 264, 265], "fname_fwd": [37, 58, 59, 60, 67, 68, 69, 73, 74, 75, 80, 84, 203, 205, 251], "sample_audvi": [37, 48, 54, 55, 56, 57, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 91, 95, 105, 112, 113, 117, 119, 120, 121, 122, 131, 134, 135, 137, 143, 146, 147, 152, 157, 160, 175, 176, 192, 198, 201, 202, 203, 204, 205, 206, 207, 223, 251, 252, 263, 264, 265, 273, 274, 323, 331, 332, 333, 334, 550, 551], "sample_audvis_filt": [37, 39, 40, 41, 42, 44, 54, 68, 75, 96, 99, 100, 103, 114, 123, 124, 126, 127, 144, 148, 158, 159, 167, 171, 177, 178, 192, 195, 198, 203, 206, 223, 228, 232, 260, 263, 265, 320], "40_raw": [37, 39, 40, 41, 42, 44, 54, 68, 75, 96, 99, 100, 103, 114, 123, 124, 126, 127, 144, 148, 158, 159, 167, 171, 177, 178, 192, 195, 198, 203, 206, 223, 228, 232, 260, 263, 265, 320], "event_fnam": [37, 40, 41, 42, 44, 96, 114, 123, 124, 127, 144, 148, 158, 258, 259, 260, 263, 265], "ev": [37, 39, 40, 41, 42, 44, 54, 96, 114, 121, 123, 124, 127, 130, 131, 144, 148, 158, 166, 171, 177, 198, 228, 244, 258, 259, 260, 263, 265, 274, 298, 302, 323, 697, 698, 925, 935], "fname_cov": [37, 67, 74, 75, 76, 80, 81, 84, 91, 121, 202, 205, 207], "fname_inv": [37, 54, 55, 56, 64, 65, 70, 73, 83, 87, 131, 134, 135, 137, 152, 207, 251, 263, 265], "inv": [37, 54, 55, 56, 64, 65, 70, 71, 73, 78, 83, 87, 121, 131, 134, 135, 137, 152, 182, 184, 186, 192, 198, 203, 204, 205, 207, 208, 218, 223, 251, 252, 263, 265, 287, 309, 316, 320, 323, 517, 607, 610, 613, 615, 616, 620, 892], "aud_r": [37, 40, 41, 68, 259], "vis_r": [37, 40, 41, 68, 114, 259], "contra": 37, "setup": [37, 41, 42, 44, 50, 69, 70, 71, 96, 97, 99, 114, 123, 124, 127, 134, 135, 137, 144, 158, 181, 257, 258, 263, 265, 269, 274, 302, 306, 309, 317, 324, 344, 445, 524, 936, 941, 942, 943, 945, 947], "modifi": [37, 88, 96, 144, 166, 175, 176, 177, 187, 191, 194, 195, 198, 199, 200, 208, 223, 227, 233, 235, 238, 245, 250, 252, 255, 259, 268, 277, 278, 291, 292, 296, 305, 307, 316, 317, 320, 323, 324, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 348, 354, 380, 386, 408, 409, 430, 432, 433, 434, 455, 483, 485, 487, 488, 490, 491, 492, 494, 495, 497, 498, 505, 542, 545, 550, 551, 559, 566, 583, 599, 602, 615, 626, 627, 628, 631, 634, 635, 656, 658, 662, 666, 667, 669, 670, 671, 672, 673, 685, 702, 718, 724, 727, 734, 735, 736, 737, 765, 776, 777, 783, 784, 785, 786, 787, 788, 789, 802, 804, 829, 833, 835, 837, 851, 856, 870, 872, 888, 902, 903, 955], "your": [37, 57, 73, 96, 97, 121, 122, 144, 148, 161, 166, 167, 168, 175, 177, 181, 183, 184, 185, 187, 188, 192, 193, 194, 198, 203, 207, 208, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 243, 244, 245, 255, 268, 269, 270, 273, 278, 288, 303, 311, 314, 316, 317, 318, 320, 323, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 348, 364, 365, 377, 386, 397, 400, 403, 423, 427, 428, 439, 440, 441, 459, 483, 490, 507, 524, 526, 527, 545, 547, 548, 550, 551, 562, 567, 613, 621, 634, 635, 638, 645, 652, 658, 670, 688, 694, 769, 783, 785, 786, 787, 788, 789, 812, 815, 833, 865, 872, 875, 881, 882, 888, 893, 905, 935, 936, 940, 944, 945, 947, 948, 949], "2443": [37, 68, 100, 103, 114, 119, 120, 134, 135, 137, 138, 144, 148, 172, 192, 193, 194, 195, 203, 206, 223, 226, 227, 228, 233, 234, 237, 243, 244, 245, 246, 252, 257, 258, 259, 263, 265], "4000e": [37, 42, 54, 68, 71, 72, 103, 123, 124, 127, 130, 131, 134, 137, 140, 144, 148, 158, 178, 192, 203, 206, 223, 234, 257, 258, 259, 263, 265, 269, 316, 326, 331, 332, 428, 635, 652, 653, 769], "150e": [37, 42, 54, 68, 71, 123, 124, 127, 131, 134, 137, 144, 167, 168, 178, 192, 203, 206, 223, 234, 257, 258, 259, 260, 263, 265, 316, 320, 331, 332, 341, 550, 551, 865, 888], "v1": [37, 39, 40, 41, 42, 44, 52, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 95, 96, 98, 99, 100, 103, 105, 109, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 137, 138, 143, 144, 145, 146, 147, 148, 151, 152, 158, 159, 166, 167, 168, 172, 175, 176, 177, 178, 182, 183, 184, 186, 188, 192, 193, 194, 195, 198, 202, 203, 204, 205, 206, 207, 208, 216, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 251, 252, 257, 258, 259, 260, 263, 265, 273, 274, 328, 329, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 345, 346, 347, 369, 372, 375, 376, 380, 384, 390, 391, 392, 409, 417, 434, 483, 490, 502, 510, 533, 542, 544, 550, 551, 559, 563, 566, 567, 585, 592, 593, 611, 612, 619, 620, 634, 635, 637, 643, 649, 650, 656, 669, 671, 680, 683, 685, 694, 719, 721, 727, 732, 738, 739, 740, 741, 742, 743, 744, 745, 752, 782, 783, 784, 785, 786, 787, 788, 789, 797, 799, 804, 822, 823, 833, 835, 843, 844, 852, 856, 859, 863, 865, 867, 869, 870, 874, 876, 878, 879, 880, 882, 885, 886, 887, 888, 890, 895, 897, 901, 924, 926, 931], "idl": [37, 39, 40, 41, 42, 44, 52, 54, 55, 68, 71, 75, 88, 95, 96, 98, 99, 100, 103, 109, 110, 114, 119, 120, 121, 123, 124, 126, 127, 130, 131, 134, 137, 138, 144, 145, 148, 151, 157, 158, 159, 167, 168, 172, 177, 178, 182, 183, 184, 186, 188, 192, 193, 194, 195, 198, 203, 206, 208, 209, 218, 223, 226, 230, 231, 232, 233, 234, 236, 237, 243, 246, 251, 252, 257, 258, 259, 260, 263, 265, 273], "v2": [37, 39, 40, 41, 42, 44, 52, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 95, 96, 98, 99, 100, 103, 105, 109, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 137, 138, 143, 144, 145, 146, 147, 148, 151, 152, 158, 159, 166, 167, 168, 172, 175, 176, 177, 178, 182, 183, 184, 186, 188, 192, 193, 194, 195, 198, 202, 203, 204, 205, 206, 207, 208, 216, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 251, 252, 257, 258, 259, 260, 263, 265, 273, 274, 277, 281, 458, 670], "v3": [37, 39, 40, 41, 42, 44, 52, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 91, 95, 96, 98, 99, 100, 103, 105, 109, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 134, 135, 137, 138, 143, 144, 145, 146, 147, 148, 151, 152, 158, 159, 166, 167, 168, 172, 175, 176, 177, 178, 182, 183, 184, 186, 188, 192, 193, 194, 195, 198, 202, 203, 204, 205, 206, 207, 208, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 251, 252, 257, 258, 259, 260, 263, 265, 273, 274], "refer": [37, 40, 48, 53, 54, 55, 56, 57, 64, 65, 67, 71, 73, 74, 75, 76, 78, 83, 87, 88, 91, 94, 95, 96, 99, 100, 103, 104, 107, 108, 111, 112, 113, 117, 119, 120, 122, 123, 124, 126, 127, 131, 134, 135, 137, 143, 147, 152, 158, 159, 171, 175, 176, 178, 182, 184, 185, 191, 192, 193, 195, 196, 198, 201, 203, 205, 207, 208, 215, 219, 228, 236, 241, 242, 243, 251, 263, 265, 269, 270, 273, 274, 277, 278, 281, 282, 283, 285, 286, 287, 288, 289, 292, 296, 299, 300, 302, 304, 305, 306, 308, 310, 312, 314, 319, 321, 323, 324, 325, 328, 330, 331, 332, 333, 334, 335, 336, 337, 340, 342, 343, 344, 348, 357, 364, 365, 367, 369, 370, 403, 423, 428, 429, 439, 450, 455, 458, 459, 462, 463, 464, 475, 476, 483, 484, 487, 489, 490, 491, 493, 499, 501, 503, 504, 507, 509, 522, 545, 547, 548, 550, 551, 562, 576, 597, 598, 602, 603, 613, 617, 632, 633, 634, 635, 636, 640, 643, 644, 646, 647, 648, 649, 650, 651, 659, 668, 670, 671, 674, 677, 678, 685, 722, 724, 727, 732, 736, 740, 743, 745, 748, 765, 767, 769, 770, 771, 772, 773, 774, 776, 777, 783, 785, 786, 787, 788, 789, 793, 794, 795, 796, 797, 799, 801, 803, 804, 811, 812, 814, 815, 817, 833, 836, 851, 852, 867, 874, 875, 878, 879, 882, 887, 889, 890, 895, 897, 920, 945, 955], "6450": [37, 39, 40, 41, 42, 44, 54, 68, 75, 96, 99, 100, 103, 114, 123, 124, 126, 127, 144, 148, 158, 159, 167, 177, 178, 192, 195, 198, 203, 206, 223, 232, 260, 263, 265], "48149": [37, 39, 40, 41, 42, 44, 54, 68, 75, 96, 99, 100, 103, 114, 123, 124, 126, 127, 144, 148, 158, 159, 167, 177, 178, 192, 195, 198, 203, 206, 223, 232, 260, 263, 265], "956": [37, 39, 40, 41, 42, 44, 54, 55, 68, 71, 75, 95, 96, 98, 99, 100, 103, 106, 109, 114, 119, 120, 123, 124, 126, 127, 130, 131, 134, 137, 138, 144, 145, 148, 151, 158, 159, 167, 169, 172, 177, 178, 182, 188, 192, 193, 194, 195, 198, 203, 206, 208, 223, 226, 230, 231, 232, 233, 234, 235, 243, 246, 251, 252, 257, 258, 259, 260, 263, 265, 273], "320": [37, 39, 40, 41, 42, 44, 54, 55, 68, 71, 75, 95, 96, 98, 99, 100, 103, 107, 109, 114, 119, 120, 123, 124, 126, 127, 130, 131, 134, 135, 137, 138, 144, 145, 148, 151, 158, 159, 166, 167, 172, 175, 177, 178, 182, 188, 192, 193, 194, 195, 197, 198, 203, 206, 208, 223, 226, 227, 230, 231, 232, 233, 234, 236, 243, 246, 251, 252, 257, 258, 259, 260, 263, 265, 273, 482], "665": [37, 39, 40, 41, 42, 44, 54, 68, 75, 96, 99, 100, 103, 114, 117, 121, 122, 123, 124, 126, 127, 144, 148, 158, 159, 167, 177, 178, 192, 195, 198, 203, 206, 223, 232, 260, 263, 265], "41699": [37, 39, 40, 41, 42, 44, 68, 99, 100, 114, 126, 148, 159, 167, 178, 192, 223, 260], "277": [37, 39, 40, 41, 42, 44, 68, 98, 99, 100, 114, 126, 148, 159, 167, 178, 192, 193, 195, 208, 223, 228, 231, 236, 243, 260], "709": [37, 39, 40, 41, 42, 44, 45, 46, 68, 99, 100, 114, 126, 148, 159, 167, 178, 192, 223, 236, 260, 955], "199": [37, 56, 57, 61, 64, 65, 66, 67, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 105, 112, 113, 143, 144, 146, 147, 156, 175, 195, 198, 202, 204, 205, 207, 209, 218, 236, 237, 250, 255, 265, 273, 274, 277, 799, 801, 811, 955], "325": [37, 139, 195, 236, 260], "143": [37, 75, 100, 195, 228, 236, 237, 259, 277, 344], "19979521315838786": [37, 54, 88, 96, 98, 99, 106, 120, 121, 123, 124, 127, 130, 131, 134, 137, 144, 158, 168, 171, 175, 176, 178, 192, 198, 203, 206, 208, 227, 228, 231, 251, 258, 259, 263, 265], "151": [37, 47, 147, 177, 194, 195, 198, 200, 223, 232, 236, 255, 259, 265, 344, 955], "061": [37, 42, 54, 58, 59, 71, 72, 88, 98, 99, 100, 120, 121, 123, 127, 134, 140, 144, 166, 171, 177, 178, 192, 193, 194, 195, 198, 203, 206, 226, 227, 228, 231, 232, 233, 234, 237, 243, 244, 245, 246, 255, 256, 257, 258, 259, 260, 263, 265, 269, 277, 770, 771, 773, 774], "366": [37, 48, 57, 61, 66, 73, 74, 75, 76, 77, 80, 81, 84, 85, 86, 91, 95, 107, 117, 119, 120, 121, 122, 157, 170, 175, 195, 198, 204, 205, 223, 251, 252, 255, 260, 268], "305": [37, 54, 55, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 103, 105, 113, 114, 121, 131, 134, 135, 136, 137, 148, 152, 166, 176, 178, 188, 192, 195, 198, 202, 203, 204, 205, 206, 207, 235, 251, 255, 260, 263, 265, 274, 277, 331, 332, 333, 334, 550, 551, 727], "22494": [37, 48, 54, 55, 61, 64, 65, 78, 83, 87, 131, 134, 135, 137, 152, 192, 198, 207, 263, 265], "diagon": [37, 54, 55, 56, 64, 65, 70, 73, 78, 83, 87, 97, 131, 134, 135, 137, 152, 192, 198, 206, 207, 223, 251, 252, 263, 265, 277, 299, 320, 328, 364, 365, 423, 441, 590, 602, 610], "retriev": [37, 223, 232, 236, 269, 283, 284, 291, 295, 303, 304, 305, 307, 396, 397, 418, 501, 559, 566, 700], "lh_data": [37, 143, 201, 265, 342, 345], "hemispher": [37, 50, 53, 66, 69, 73, 78, 94, 150, 154, 156, 167, 177, 181, 184, 201, 204, 209, 263, 264, 265, 273, 278, 285, 291, 295, 299, 327, 337, 338, 339, 342, 343, 344, 345, 346, 347, 392, 429, 458, 541, 587, 687, 705, 707, 710, 731, 746, 754, 779, 832, 833, 893, 898, 912, 930, 955], "prepar": [37, 38, 45, 47, 54, 55, 56, 60, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 80, 81, 83, 84, 85, 87, 105, 113, 117, 121, 131, 134, 135, 136, 137, 146, 152, 176, 192, 197, 203, 204, 205, 207, 208, 218, 223, 227, 234, 251, 252, 257, 263, 274, 287, 293, 302, 309, 375, 386, 397, 439, 440, 602, 603, 604, 605, 606, 608, 609, 615, 618, 619, 671], "seri": [37, 42, 53, 54, 55, 57, 62, 67, 82, 98, 107, 117, 120, 121, 122, 138, 163, 187, 194, 201, 206, 207, 215, 232, 233, 246, 252, 265, 270, 277, 292, 299, 309, 319, 320, 330, 331, 332, 333, 334, 337, 338, 339, 342, 344, 345, 346, 347, 364, 365, 423, 486, 493, 496, 517, 551, 601, 602, 605, 616, 635, 640, 644, 700, 704, 769, 770, 771, 783, 784, 787, 790, 791, 792, 801, 810, 811, 848, 859, 899, 940, 955], "time_decod": [37, 223], "03": [37, 39, 45, 50, 59, 60, 61, 75, 85, 93, 98, 100, 102, 103, 109, 110, 111, 117, 120, 121, 129, 130, 133, 135, 136, 147, 148, 156, 167, 172, 176, 177, 184, 188, 190, 192, 193, 194, 195, 196, 200, 208, 209, 210, 221, 222, 223, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 240, 243, 244, 245, 246, 250, 251, 252, 255, 256, 257, 259, 260, 264, 265, 273, 277, 313, 325, 329, 423, 635, 770, 771, 773, 774, 863, 955], "87it": [37, 45, 59, 130, 135, 222, 223, 236, 255, 256, 259, 260], "99it": [37, 45, 60, 130, 135, 136, 139, 222, 223, 236, 255, 256, 259, 260], "12it": [37, 45, 60, 70, 130, 136, 139, 222, 223, 255, 256, 259, 260], "23it": [37, 45, 60, 131, 135, 222, 223, 255, 256, 257, 259, 260], "74it": [37, 45, 60, 130, 136, 139, 223, 236, 255, 256, 259, 260, 264, 265], "22it": [37, 39, 45, 130, 139, 222, 236, 255, 259, 260, 263], "13it": [37, 39, 45, 60, 130, 135, 139, 223, 255, 256, 259, 260], "89it": [37, 39, 45, 130, 136, 139, 206, 223, 236, 255, 257, 259, 260], "48it": [37, 39, 45, 59, 60, 123, 135, 139, 222, 236, 255, 260, 265], "39": [37, 38, 45, 47, 54, 61, 71, 73, 107, 130, 131, 135, 136, 141, 163, 165, 166, 183, 184, 185, 195, 206, 210, 211, 214, 218, 222, 223, 228, 236, 237, 248, 255, 256, 257, 259, 260, 263, 264, 265, 277, 316, 344, 475, 955], "62it": [37, 45, 222, 223, 236, 257, 259, 260], "17it": [37, 39, 45, 130, 206, 222, 223, 236, 255, 257, 259, 260], "68it": [37, 45, 130, 135, 136, 139, 206, 223, 255, 256, 259, 260, 265], "52it": [37, 39, 45, 60, 139, 223, 236, 255, 256, 260, 264, 265], "20it": [37, 39, 45, 60, 130, 139, 222, 223, 236, 255, 258, 259, 260], "61": [37, 45, 56, 61, 71, 73, 77, 83, 86, 98, 107, 109, 117, 120, 130, 135, 136, 139, 141, 143, 151, 162, 172, 175, 192, 193, 194, 195, 196, 198, 202, 204, 205, 210, 211, 223, 226, 227, 230, 233, 234, 235, 236, 237, 243, 244, 245, 246, 255, 256, 257, 259, 260, 263, 264, 265, 273, 274, 277, 423], "49it": [37, 45, 130, 136, 139, 222, 223, 236, 255, 259, 260, 265], "68": [37, 39, 45, 60, 61, 67, 69, 71, 73, 107, 108, 117, 128, 130, 135, 136, 139, 141, 154, 163, 166, 169, 171, 184, 195, 197, 202, 207, 210, 218, 222, 223, 236, 255, 256, 259, 260, 263, 277, 333, 334, 364, 365, 403, 423, 427, 428, 439, 440, 441, 475, 483, 490, 526, 527, 545, 547, 548, 613, 875], "37it": [37, 59, 60, 130, 139, 223, 236, 255, 257, 259, 260, 263, 264], "70it": [37, 39, 45, 135, 139, 222, 223, 236, 255, 257, 260, 264], "74": [37, 39, 45, 52, 61, 67, 71, 76, 106, 107, 108, 130, 135, 136, 139, 141, 163, 184, 194, 195, 196, 202, 207, 210, 218, 222, 223, 229, 234, 236, 252, 255, 256, 259, 260, 265, 764], "25it": [37, 39, 45, 59, 60, 136, 139, 222, 223, 255, 256, 259, 260], "81": [37, 41, 42, 45, 46, 60, 61, 107, 130, 135, 136, 139, 141, 168, 182, 195, 206, 210, 223, 235, 236, 238, 255, 256, 259, 260, 268, 277, 280, 297, 740, 745, 799, 801, 811, 955], "51it": [37, 39, 45, 60, 130, 135, 139, 222, 223, 255, 257, 259, 260, 265], "32it": [37, 39, 45, 60, 130, 135, 136, 139, 222, 223, 236, 255, 259, 260], "87": [37, 39, 41, 44, 45, 59, 61, 73, 106, 121, 135, 136, 141, 151, 152, 195, 222, 223, 234, 236, 237, 255, 256, 259, 260, 263, 277, 320, 487, 489, 501], "61it": [37, 39, 45, 59, 130, 135, 139, 223, 236, 255, 260, 265], "88it": [37, 45, 59, 60, 130, 139, 151, 222, 223, 236, 255, 256, 259, 260, 263], "94": [37, 39, 45, 61, 67, 73, 107, 130, 135, 136, 139, 141, 163, 195, 196, 206, 209, 218, 222, 223, 234, 236, 255, 256, 257, 259, 260, 263, 265, 277, 320], "84it": [37, 39, 45, 130, 135, 139, 206, 222, 223, 236, 255, 259, 260, 263], "94it": [37, 39, 45, 59, 60, 130, 139, 222, 223, 236, 255, 256, 259, 260, 265], "50it": [37, 39, 45, 130, 139, 222, 223, 236, 255, 259, 260], "05it": [37, 39, 45, 59, 60, 130, 136, 139, 222, 223, 236, 255, 256, 259, 260], "16it": [37, 39, 45, 60, 130, 135, 139, 222, 223, 255, 256, 259, 260, 265], "36it": [37, 39, 45, 59, 130, 135, 136, 139, 223, 236, 255, 256, 259, 260, 263], "31it": [37, 45, 59, 60, 130, 131, 135, 222, 223, 236, 255, 256, 257, 259, 260, 264], "06it": [37, 45, 130, 139, 206, 223, 236, 255, 256, 257, 260, 265], "80it": [37, 39, 45, 60, 130, 139, 222, 223, 236, 255, 256, 257, 259, 260], "41it": [37, 39, 45, 59, 60, 130, 131, 135, 136, 151, 222, 223, 236, 255, 259, 260], "95it": [37, 45, 60, 130, 135, 136, 139, 206, 223, 236, 255, 256, 259, 260, 263], "43it": [37, 39, 45, 59, 130, 135, 136, 139, 223, 236, 255, 256, 257, 260, 265], "85it": [37, 39, 60, 130, 135, 136, 139, 222, 223, 236, 255, 259, 260], "15it": [37, 45, 59, 60, 130, 135, 136, 139, 222, 223, 236, 255, 259, 260, 264], "53it": [37, 39, 45, 59, 60, 130, 139, 222, 223, 236, 255, 256, 257, 259, 260, 264, 265], "18it": [37, 45, 130, 135, 136, 139, 222, 223, 236, 255, 257, 259, 260, 263, 264], "47it": [37, 39, 45, 135, 139, 223, 236, 255, 256, 260], "82it": [37, 39, 45, 60, 123, 130, 136, 139, 222, 223, 255, 256, 260, 263, 264], "10it": [37, 39, 45, 59, 130, 136, 139, 223, 236, 256, 257, 260, 264], "34it": [37, 39, 45, 59, 60, 135, 136, 139, 222, 223, 255, 256, 259, 260], "77it": [37, 45, 59, 60, 130, 136, 139, 206, 222, 223, 236, 255, 257, 259, 260, 264, 265], "02it": [37, 39, 45, 59, 60, 135, 139, 222, 236, 255, 256, 257, 259, 260, 263, 264], "96it": [37, 39, 45, 130, 223, 255, 256, 257, 259, 260, 265], "08it": [37, 39, 45, 60, 130, 136, 139, 222, 223, 236, 255, 256, 257, 260, 264], "07it": [37, 39, 45, 59, 130, 139, 222, 236, 255, 256, 260], "21it": [37, 45, 60, 130, 135, 136, 139, 223, 236, 255, 256, 257, 259, 260], "65it": [37, 39, 45, 60, 136, 222, 223, 236, 255, 256, 257, 259, 260, 265], "03it": [37, 39, 45, 59, 60, 130, 135, 139, 206, 222, 223, 236, 255, 260], "59it": [37, 39, 45, 60, 136, 222, 223, 255, 256, 258, 260, 265], "98it": [37, 45, 60, 130, 139, 206, 222, 223, 236, 255, 256, 259, 260, 264], "66it": [37, 39, 45, 70, 130, 136, 222, 236, 255, 256, 260, 263, 264, 265], "81it": [37, 39, 60, 136, 139, 222, 223, 236, 255, 256, 258, 259, 260, 264], "11it": [37, 39, 45, 60, 130, 139, 222, 223, 236, 255, 256, 259, 260], "39it": [37, 39, 45, 59, 60, 130, 135, 139, 222, 236, 255, 259, 260, 264], "63it": [37, 45, 135, 139, 222, 223, 236, 255, 256, 257, 259, 260, 265], "91it": [37, 39, 45, 60, 130, 131, 135, 136, 139, 222, 236, 255, 257, 260], "64it": [37, 39, 45, 60, 70, 130, 223, 255, 257, 259, 260], "93it": [37, 45, 60, 131, 136, 139, 222, 223, 236, 255, 256, 259, 260], "29it": [37, 45, 60, 135, 139, 222, 223, 236, 255, 256, 259, 260, 265], "67it": [37, 45, 59, 60, 123, 130, 135, 136, 222, 236, 255, 256, 257, 260], "79it": [37, 39, 45, 130, 135, 139, 223, 236, 255, 256, 257, 259, 260, 264, 265], "83it": [37, 60, 130, 206, 222, 236, 255, 256, 257, 259, 260], "60it": [37, 45, 60, 139, 222, 223, 236, 256, 260], "69it": [37, 45, 59, 130, 136, 139, 223, 236, 255, 256, 257, 259, 260, 263, 265], "24it": [37, 45, 59, 60, 130, 136, 139, 206, 222, 223, 252, 255, 256, 260, 264], "76it": [37, 45, 60, 130, 222, 223, 236, 255, 260, 263, 264, 265], "33it": [37, 45, 60, 130, 136, 222, 223, 236, 252, 255, 256, 260, 265], "56it": [37, 39, 45, 123, 130, 139, 151, 206, 222, 223, 236, 255, 259, 260, 264], "28it": [37, 45, 60, 123, 130, 136, 139, 222, 223, 236, 255, 259, 260], "73it": [37, 45, 60, 130, 139, 222, 236, 255, 256, 257, 259, 260, 265], "57it": [37, 39, 45, 60, 135, 222, 223, 236, 255, 256, 259, 260, 265], "00it": [37, 39, 45, 60, 130, 135, 139, 222, 223, 236, 255, 256, 257, 259, 260], "04it": [37, 39, 45, 59, 60, 130, 135, 139, 223, 236, 255, 260], "35it": [37, 45, 59, 60, 130, 135, 136, 139, 222, 223, 236, 255, 256, 259, 260, 263, 265], "investig": [37, 47, 170, 177, 218, 229, 265, 317, 333, 334, 635, 875], "patterns_": [37, 41, 44, 45, 47, 223, 285, 291, 483, 487, 489, 490, 491, 501, 636], "inverse_transform": [37, 44, 223, 491, 492, 497, 498, 501, 636], "lookup": [37, 67, 308, 319, 324, 331, 332, 333, 334, 336, 344, 535, 536, 550, 551, 732, 833], "vertic": [37, 48, 50, 54, 64, 65, 67, 69, 74, 78, 79, 95, 134, 143, 160, 162, 166, 168, 181, 184, 185, 186, 187, 201, 204, 207, 218, 227, 230, 235, 236, 243, 246, 252, 255, 256, 263, 264, 265, 273, 274, 278, 283, 285, 289, 291, 292, 293, 319, 320, 327, 331, 332, 333, 334, 337, 338, 339, 342, 343, 344, 345, 346, 347, 351, 352, 364, 365, 427, 429, 517, 530, 539, 541, 542, 550, 551, 587, 589, 611, 612, 618, 619, 655, 704, 733, 746, 748, 749, 751, 752, 753, 754, 755, 757, 758, 759, 770, 771, 773, 774, 775, 778, 779, 832, 833, 849, 854, 859, 865, 873, 888, 893, 898, 930], "lh_vertno": [37, 143, 201, 342, 345, 746], "empti": [37, 41, 166, 168, 176, 187, 188, 192, 195, 197, 198, 210, 211, 218, 228, 232, 233, 235, 237, 243, 250, 265, 278, 282, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 302, 303, 304, 309, 316, 319, 320, 325, 328, 331, 332, 333, 334, 336, 342, 355, 370, 378, 387, 394, 417, 418, 423, 428, 447, 448, 449, 452, 453, 454, 456, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 510, 531, 550, 551, 559, 563, 566, 567, 574, 578, 601, 626, 627, 628, 632, 633, 635, 636, 638, 645, 646, 655, 659, 670, 671, 694, 702, 713, 723, 727, 764, 770, 779, 783, 785, 786, 787, 788, 789, 802, 820, 843, 859, 860, 865, 866, 872, 874, 882, 888, 889], "stc_feat": 37, "ab": [37, 45, 61, 64, 66, 73, 85, 87, 95, 124, 146, 147, 161, 177, 205, 209, 212, 218, 222, 229, 255, 257, 258, 263, 264, 265, 270, 273, 303, 320, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 637, 801, 811], "tstep": [37, 48, 57, 72, 85, 117, 121, 122, 207, 252, 263, 264, 265, 282, 338, 339, 342, 345, 346, 347, 428, 548, 589, 635, 733, 750, 769, 775, 800, 808], "transpar": [37, 84, 128, 149, 198, 207, 227, 270, 293, 298, 310, 323, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 783, 833, 854, 871, 888, 893, 898, 899, 900, 901], "90it": [37, 45, 60, 123, 130, 135, 139, 223, 236, 255, 257, 260], "78it": [37, 39, 45, 136, 139, 223, 236, 255, 256, 260, 263, 264, 265], "09it": [37, 39, 45, 60, 130, 135, 139, 223, 236, 255, 259, 260, 265], "42it": [37, 39, 45, 60, 135, 136, 139, 222, 223, 255, 256, 257, 260], "55it": [37, 39, 45, 60, 130, 135, 139, 206, 223, 236, 255, 256, 257, 260, 263, 265], "75it": [37, 39, 45, 59, 130, 136, 139, 222, 223, 236, 255, 256, 257, 259, 260, 265], "30it": [37, 39, 45, 130, 136, 139, 222, 223, 236, 259, 260, 264], "50724321": 37, "37721471": 37, "59502306": 37, "149": [37, 46, 71, 195, 207, 223, 259, 260, 344, 955], "405": [37, 107], "decoding_spatio_temporal_sourc": [37, 46, 955], "comodul": [38, 490], "composit": [38, 215, 223, 320, 338, 339, 342, 345, 346, 347, 833, 893, 898], "orthogon": [38, 141, 182, 186, 204, 223, 233, 234, 237, 289, 293, 312, 320, 364, 365, 635, 813, 816], "spatial": [38, 40, 41, 43, 44, 46, 53, 57, 58, 59, 60, 62, 73, 82, 97, 98, 106, 109, 110, 117, 140, 146, 148, 177, 178, 181, 182, 188, 201, 226, 227, 229, 233, 234, 239, 246, 250, 252, 255, 257, 260, 263, 264, 265, 269, 270, 277, 278, 281, 283, 284, 285, 291, 293, 295, 300, 302, 304, 305, 316, 317, 319, 320, 328, 331, 332, 333, 334, 335, 336, 337, 340, 342, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 380, 396, 423, 429, 432, 433, 443, 483, 484, 490, 491, 497, 499, 501, 512, 550, 551, 563, 564, 566, 595, 601, 613, 614, 617, 632, 633, 634, 635, 636, 649, 650, 669, 670, 691, 697, 700, 702, 737, 740, 745, 753, 754, 755, 756, 760, 770, 771, 773, 774, 783, 785, 786, 788, 789, 804, 823, 833, 852, 867, 869, 874, 875, 878, 887, 890, 895, 897, 935, 955], "maxim": [38, 87, 114, 168, 186, 202, 203, 206, 209, 223, 229, 231, 277, 285, 320, 339, 345, 346, 347, 364, 365, 491, 635, 668, 753, 754, 755, 757, 758, 769, 899], "variabl": [38, 42, 57, 69, 128, 130, 139, 144, 167, 169, 176, 181, 194, 196, 223, 226, 229, 231, 233, 243, 245, 259, 260, 265, 277, 285, 289, 292, 294, 303, 304, 316, 319, 320, 324, 329, 331, 332, 337, 338, 339, 341, 342, 345, 346, 347, 371, 375, 376, 377, 380, 429, 434, 435, 436, 442, 445, 447, 448, 449, 450, 452, 453, 454, 457, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 490, 500, 502, 512, 524, 525, 531, 533, 535, 539, 541, 542, 543, 544, 550, 551, 571, 587, 591, 593, 621, 634, 635, 659, 666, 685, 687, 695, 699, 705, 714, 719, 720, 721, 722, 729, 731, 732, 746, 749, 760, 770, 771, 772, 773, 774, 778, 779, 825, 833, 851, 853, 863, 865, 882, 888, 893, 898, 899, 901, 930, 935, 938, 940, 947], "fluctuat": [38, 167, 168, 177, 226, 228, 234, 235, 239, 252, 319, 333, 334, 875], "electromyogram": [38, 285], "cortico": 38, "muscular": [38, 226, 232], "coher": [38, 58, 59, 130, 134, 206, 252, 277, 317, 319, 356, 357, 358, 359, 364, 783, 784, 812, 813, 814, 815, 816, 817, 861, 948], "fieldtrip": [38, 182, 218, 229, 235, 255, 257, 263, 285, 287, 291, 292, 301, 302, 304, 312, 320, 390, 397, 571, 695, 699, 812, 813, 815, 816], "ridg": [38, 45, 222, 489, 495], "kfold": [38, 42, 45, 286, 423, 428, 500], "cross_val_predict": [38, 287], "fieldtrip_cmc": [38, 47, 197], "subjectcmc": [38, 47], "emg": [38, 109, 163, 195, 216, 223, 243, 250, 277, 282, 305, 306, 317, 320, 331, 332, 333, 334, 336, 341, 379, 443, 490, 516, 550, 551, 563, 566, 578, 632, 635, 783, 785, 786, 787, 788, 789, 865, 888], "emglft": 38, "ref_meg": [38, 47, 101, 146, 151, 195, 239, 285, 331, 332, 333, 334, 341, 379, 443, 550, 551, 553, 632, 633, 649, 783, 785, 786, 787, 788, 789, 865, 888], "durat": [38, 47, 75, 92, 97, 98, 100, 101, 102, 103, 107, 108, 109, 117, 120, 121, 151, 163, 166, 167, 170, 172, 175, 176, 177, 192, 193, 194, 212, 218, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 252, 263, 264, 265, 273, 278, 282, 287, 288, 292, 293, 294, 295, 303, 305, 307, 308, 309, 319, 323, 325, 331, 332, 333, 334, 341, 342, 350, 410, 412, 426, 428, 483, 485, 489, 490, 494, 495, 507, 512, 519, 521, 522, 524, 550, 551, 568, 594, 595, 635, 637, 638, 640, 659, 670, 678, 684, 733, 735, 775, 799, 801, 811, 865, 874, 882, 888], "meg_epoch": [38, 44], "detrend": [38, 137, 161, 238, 283, 299, 326, 331, 332, 333, 334, 594, 693, 954], "emg_epoch": 38, "var": [38, 73, 97, 197, 234, 445, 531, 776], "oa": [38, 47, 110, 209, 423], "validaton": 38, "first_samp": [38, 97, 102, 163, 192, 194, 210, 212, 243, 244, 245, 282, 284, 285, 288, 291, 294, 302, 303, 308, 319, 325, 326, 331, 332, 336, 341, 350, 431, 511, 512, 524, 549, 550, 551, 572, 595, 630, 635, 671, 696, 697, 733, 748, 786, 868, 882, 888, 925], "set_xlabel": [38, 39, 45, 47, 48, 71, 97, 123, 131, 140, 159, 170, 172, 198, 209, 223, 233, 258, 259, 260, 274], "set_titl": [38, 39, 48, 71, 97, 98, 123, 126, 139, 141, 147, 162, 170, 222, 223, 237, 238, 258, 259, 260, 269, 270, 273, 274], "78": [38, 39, 45, 47, 60, 61, 73, 77, 106, 107, 130, 139, 141, 151, 163, 183, 184, 192, 195, 202, 205, 211, 221, 222, 223, 236, 243, 255, 256, 257, 259, 260, 264, 265, 277, 320, 367, 475, 955], "62": [38, 39, 42, 45, 47, 60, 61, 64, 71, 73, 82, 97, 107, 130, 135, 139, 141, 162, 163, 195, 206, 222, 223, 236, 255, 256, 259, 260, 263, 277, 955], "256": [38, 47, 97, 142, 152, 182, 186, 195, 196, 197, 198, 209, 223, 236, 252, 259, 260, 320, 344, 515, 804, 850, 940, 941], "258": [38, 47, 151, 184, 192, 195, 223, 236, 260], "114": [38, 47, 61, 107, 177, 194, 195, 200, 207, 223, 226, 237, 242, 244, 255, 259, 280, 955], "12000": [38, 47, 278], "911610": [38, 47], "191": [38, 47, 195, 236, 259, 260], "180000": 38, "793": [38, 170], "661": [38, 212, 222, 229, 256, 260], "1057": 38, "881": [38, 47, 172, 204, 214, 344, 955], "1801": 38, "183": [38, 82, 195, 207, 214, 236, 259, 260, 955], "contribut": [38, 45, 71, 95, 175, 177, 206, 257, 260, 277, 284, 285, 286, 287, 291, 292, 293, 294, 295, 310, 311, 317, 322, 331, 332, 503, 512, 651, 739, 940, 945], "sven": [38, 44, 45, 223, 277, 487, 489, 490, 491, 501], "d\u00e4hne": [38, 44, 45, 223, 277, 487, 489, 490, 501], "frank": [38, 44, 45, 102, 223, 232, 277, 487, 489, 490, 501, 635, 677], "meineck": [38, 44, 45, 223, 277, 487, 489, 490, 501], "stefan": [38, 44, 45, 59, 140, 223, 232, 257, 260, 263, 269, 273, 277, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 487, 489, 490, 491, 501, 650, 953], "hauf": [38, 44, 45, 223, 277, 487, 489, 490, 491, 501], "johann": [38, 223, 277, 278, 283, 292, 294, 295, 304, 490], "h\u00f6hne": [38, 223, 277, 490], "michael": [38, 45, 128, 222, 223, 231, 232, 277, 283, 317, 320, 423, 483, 489, 490, 634, 635, 674, 685, 799, 801, 811], "tangermann": [38, 223, 232, 277, 490], "klau": [38, 223, 232, 277, 483, 490, 635], "robert": [38, 102, 206, 222, 223, 232, 239, 260, 277, 278, 291, 292, 293, 294, 295, 303, 304, 307, 317, 483, 489, 490, 649, 770, 771, 773, 774, 953], "m\u00fcller": [38, 101, 223, 232, 277, 483, 490, 635], "vadim": [38, 47, 223, 277, 490, 491], "nikulin": [38, 47, 223, 277, 490, 491], "novel": [38, 47, 223, 277, 400, 490, 491], "framework": [38, 61, 223, 277, 320, 490, 545, 951], "amplitud": [38, 45, 61, 63, 65, 66, 71, 73, 79, 85, 107, 108, 120, 121, 122, 143, 151, 158, 161, 166, 167, 170, 171, 188, 192, 198, 201, 206, 209, 210, 212, 217, 219, 222, 223, 226, 227, 229, 232, 233, 234, 236, 238, 239, 252, 273, 277, 284, 285, 304, 319, 320, 323, 326, 329, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 357, 365, 410, 411, 412, 416, 428, 490, 526, 547, 548, 550, 551, 596, 606, 617, 635, 637, 652, 653, 692, 735, 736, 740, 744, 745, 769, 770, 785, 786, 787, 788, 789, 801, 811, 833, 862, 863, 876, 889, 935, 948], "neuron": [38, 47, 163, 170, 222, 223, 226, 277, 317, 319, 320, 364, 476, 489, 490, 491, 602, 649], "oscil": [38, 47, 95, 121, 140, 141, 212, 223, 226, 230, 252, 277, 490, 491, 736, 799, 801, 811], "behavior": [38, 170, 195, 215, 223, 226, 228, 229, 234, 277, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 295, 303, 307, 308, 309, 310, 311, 324, 331, 332, 341, 490, 524, 595, 600, 602, 670, 697, 732, 785, 786, 788, 789, 905, 935], "111": [38, 58, 61, 72, 140, 168, 171, 174, 195, 207, 223, 236, 255, 260, 273, 277, 490, 955], "122": [38, 42, 152, 156, 186, 195, 196, 223, 232, 255, 277, 287, 289, 320, 403, 484, 490, 499, 955], "2013": [38, 42, 44, 45, 69, 85, 107, 108, 170, 195, 223, 277, 313, 314, 337, 342, 343, 349, 429, 484, 487, 489, 490, 499, 501, 507, 548, 640, 674, 740, 745], "07": [38, 46, 61, 72, 85, 107, 110, 129, 130, 133, 135, 156, 160, 186, 196, 202, 205, 209, 210, 211, 218, 221, 222, 223, 236, 240, 257, 260, 277, 320, 389, 490, 743, 955], "079": [38, 162, 223, 277, 490], "802": [38, 46, 170, 260, 955], "395": [38, 46, 107, 222, 223, 955], "decoding_spoc_cmc": [38, 46, 955], "illustr": [39, 53, 54, 95, 96, 117, 121, 122, 153, 160, 164, 168, 172, 176, 177, 191, 192, 197, 215, 226, 227, 228, 230, 232, 234, 238, 243, 255, 259, 265, 269, 316, 319, 320, 550, 551], "discriminatori": 39, "given": [39, 42, 45, 52, 57, 97, 106, 121, 122, 139, 147, 148, 163, 169, 170, 175, 176, 177, 184, 186, 188, 191, 192, 195, 196, 197, 201, 204, 206, 212, 213, 214, 215, 222, 223, 228, 229, 232, 233, 234, 237, 239, 243, 244, 246, 255, 257, 259, 260, 268, 270, 283, 289, 291, 293, 303, 307, 309, 310, 317, 319, 320, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 345, 346, 347, 355, 364, 365, 370, 378, 380, 384, 385, 386, 395, 397, 398, 423, 428, 434, 435, 436, 438, 439, 447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 485, 490, 491, 493, 498, 499, 503, 504, 508, 518, 519, 522, 524, 526, 528, 539, 545, 547, 548, 549, 550, 551, 553, 594, 597, 598, 601, 602, 603, 604, 605, 606, 608, 609, 610, 613, 618, 619, 634, 635, 636, 637, 638, 640, 646, 650, 651, 652, 653, 655, 659, 662, 666, 670, 676, 678, 684, 685, 690, 693, 727, 732, 737, 747, 750, 751, 763, 765, 769, 770, 771, 773, 774, 776, 778, 781, 783, 784, 785, 786, 787, 788, 789, 793, 794, 795, 796, 797, 798, 801, 803, 805, 809, 811, 816, 820, 821, 825, 833, 835, 838, 840, 851, 852, 853, 859, 863, 865, 866, 867, 869, 870, 871, 872, 874, 879, 882, 886, 888, 889, 890, 891, 893, 895, 897, 898, 902, 903, 914, 915, 917, 935, 940, 955], "subsequ": [39, 96, 110, 139, 140, 166, 168, 171, 183, 187, 192, 223, 227, 230, 232, 243, 263, 277, 288, 295, 304, 316, 319, 320, 331, 332, 550, 551, 635, 638, 645, 659, 775, 935, 944], "accur": [39, 52, 67, 70, 71, 76, 136, 161, 184, 185, 202, 208, 215, 223, 231, 232, 234, 237, 239, 291, 292, 293, 304, 316, 324, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 526, 550, 551, 593, 635, 649, 665, 823, 874, 901], "events_fnam": 39, "auditori": [39, 41, 56, 57, 63, 64, 65, 66, 67, 70, 71, 74, 76, 77, 80, 81, 83, 84, 86, 87, 88, 92, 98, 105, 106, 112, 113, 121, 134, 139, 143, 146, 147, 152, 158, 166, 167, 168, 169, 171, 172, 175, 176, 177, 178, 191, 192, 194, 198, 201, 202, 204, 205, 206, 207, 208, 220, 221, 222, 223, 229, 234, 239, 244, 251, 259, 263, 265, 268, 270, 273, 274, 277, 283, 324, 325, 326, 328, 331, 332, 333, 334, 336, 337, 342, 422, 424, 428, 430, 432, 489, 510, 524, 550, 564, 591, 592, 597, 600, 601, 602, 613, 648, 674, 694, 696, 702, 708, 715, 731, 786, 787, 833, 955], "050": [39, 107, 166, 168, 175, 195, 206, 227, 235, 236, 252, 277], "faster": [39, 44, 70, 147, 166, 209, 223, 232, 270, 277, 282, 283, 286, 288, 290, 291, 299, 323, 331, 332, 333, 334, 337, 338, 339, 342, 345, 346, 347, 429, 432, 523, 539, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 594, 635, 637, 770, 771, 773, 774, 940, 944, 945, 947], "constructor": [39, 114, 166, 168, 177, 191, 192, 198, 228, 230, 233, 245, 250, 253, 283, 284, 288, 299, 301, 303, 305, 309, 326, 338, 339, 342, 345, 346, 347, 549, 636, 652, 893, 898, 935], "497": [39, 40, 41, 103, 114, 126, 148, 159, 204, 232, 260, 277, 344], "310": [39, 40, 41, 61, 103, 107, 114, 126, 136, 139, 148, 159, 162, 165, 195, 232, 255, 260, 955], "lbfg": [39, 44, 223], "time_gen": [39, 223], "experiment": [39, 42, 71, 97, 98, 100, 103, 107, 108, 109, 117, 120, 166, 167, 172, 175, 176, 177, 179, 191, 193, 194, 195, 206, 223, 226, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 255, 273, 277, 295, 301, 316, 319, 320, 331, 332, 333, 334, 336, 484, 499, 550, 551, 552, 602, 659, 670, 671, 735, 736, 743, 783, 787, 938], "59": [39, 41, 45, 54, 56, 57, 60, 61, 64, 65, 66, 67, 70, 71, 74, 75, 80, 81, 84, 85, 87, 96, 98, 100, 103, 105, 107, 109, 117, 119, 120, 121, 130, 135, 138, 139, 141, 143, 145, 148, 157, 167, 168, 171, 176, 177, 178, 182, 184, 188, 193, 194, 195, 198, 202, 204, 208, 210, 223, 226, 227, 228, 232, 233, 234, 236, 237, 240, 243, 244, 245, 246, 251, 255, 256, 257, 258, 259, 260, 264, 265, 273, 274, 277, 344, 504, 646, 659, 670, 776, 777], "01it": [39, 45, 59, 60, 130, 135, 139, 206, 223, 236, 255, 260, 263], "57": [39, 45, 60, 61, 66, 71, 107, 130, 135, 139, 141, 144, 154, 162, 176, 177, 183, 195, 206, 209, 210, 218, 222, 223, 236, 245, 255, 256, 257, 259, 260, 264, 265, 268, 277, 302, 331, 332, 333, 334, 403, 547, 550, 551, 785, 788, 797, 803, 941], "45it": [39, 45, 60, 130, 222, 223, 236, 255, 257, 259, 260, 265], "26it": [39, 45, 59, 60, 130, 135, 222, 223, 236, 260], "97it": [39, 45, 130, 135, 136, 139, 223, 236, 255, 259, 260, 265], "1225": 39, "350": [39, 60, 82, 107, 133, 138, 143, 144, 146, 156, 167, 186, 195, 236, 255, 955], "396": [39, 71, 107, 202, 207, 223, 255, 260, 277, 364], "412": [39, 236, 260], "428": [39, 223], "444": [39, 255, 260, 265], "109": [39, 163, 195, 232, 236, 255, 317, 450], "463": [39, 236, 260, 344], "126": [39, 46, 61, 195, 223, 255, 955], "468": [39, 223, 231, 277, 634, 685], "137": [39, 61, 82, 195, 223, 255, 344, 955], "449": [39, 47, 172, 223, 344], "146": [39, 98, 100, 103, 109, 117, 120, 167, 172, 177, 192, 193, 194, 195, 221, 226, 227, 228, 230, 232, 233, 234, 235, 237, 243, 244, 245, 246, 252, 255, 260, 273, 277, 955], "426": [39, 218, 255], "156": [39, 61, 71, 195, 202, 207, 236, 255, 344], "410": [39, 85, 98, 107, 109, 226, 230, 234, 246, 255, 268, 277, 548], "172": [39, 98, 109, 120, 193, 194, 195, 223, 226, 227, 229, 230, 233, 234, 235, 237, 243, 244, 245, 246, 259, 260, 273, 277, 330, 331, 332, 333, 334, 743, 748, 783, 787], "417": [39, 61, 146, 188, 223, 260, 277, 635, 668, 852], "188": [39, 80, 82, 163, 195, 210, 223, 236, 260, 955], "422": [39, 85, 260, 277, 548], "203": [39, 61, 66, 68, 75, 76, 84, 85, 100, 103, 106, 113, 119, 120, 121, 138, 143, 146, 148, 151, 152, 157, 168, 172, 176, 178, 182, 183, 184, 188, 193, 194, 195, 196, 198, 203, 204, 205, 206, 223, 226, 227, 228, 233, 234, 236, 237, 243, 244, 245, 246, 252, 260, 277], "424": [39, 236], "219": [39, 61, 67, 195, 214, 223, 225, 255, 259, 298, 955], "234": [39, 61, 111, 118, 122, 195, 236, 255, 955], "430": [39, 107], "434": [39, 68, 82, 955], "266": [39, 45, 58, 59, 60, 72, 139, 140, 195, 229, 260, 269, 277], "436": [39, 66, 82, 223, 236, 277, 955], "283": [39, 67, 98, 139, 195, 236, 277, 644], "441": [39, 61, 223, 236, 255, 260, 277, 635, 668], "446": [39, 96, 130, 133, 255, 260, 277, 314, 955], "58it": [39, 45, 59, 60, 130, 135, 136, 139, 222, 223, 236, 255, 256, 260, 263, 265], "317": [39, 102, 139, 195, 236, 255], "450": [39, 102, 107, 167, 186, 260, 303, 344], "334": [39, 136, 139, 195], "453": [39, 236, 255, 344], "457": [39, 223, 236], "368": [39, 107, 118, 122, 195, 197, 236, 263, 955], "460": [39, 107, 210, 218, 260, 277, 314], "385": [39, 107, 133, 223, 236, 255, 260, 272, 955], "402": [39, 61, 107, 170, 223, 236, 255, 260], "465": [39, 61, 223, 230, 260, 270, 272, 955], "40it": [39, 45, 59, 60, 130, 135, 139, 206, 222, 223, 236, 255, 256, 257, 260, 265], "34": [39, 45, 54, 60, 61, 67, 71, 73, 95, 98, 107, 130, 135, 136, 139, 141, 143, 171, 195, 197, 207, 211, 222, 223, 229, 236, 237, 242, 251, 255, 256, 257, 259, 260, 264, 265, 277, 644, 764, 941, 955], "419": 39, "467": [39, 94, 236, 260], "469": [39, 107, 111, 236, 255, 260, 955], "37": [39, 45, 47, 54, 60, 61, 68, 71, 73, 107, 130, 135, 136, 141, 151, 171, 183, 195, 223, 236, 255, 256, 257, 259, 260, 264, 265, 268, 292, 299, 301, 403, 475, 524, 646], "471": [39, 223, 229, 255, 260, 277], "38": [39, 45, 47, 54, 60, 61, 67, 71, 73, 98, 100, 107, 108, 120, 123, 130, 135, 141, 166, 167, 168, 170, 184, 195, 206, 210, 218, 223, 228, 234, 236, 255, 256, 257, 259, 260, 264, 265, 273, 646], "486": [39, 61, 169, 223, 258, 260], "502": [39, 223, 260, 600], "519": [39, 270], "535": [39, 45, 223, 240, 242, 955], "551": [39, 72, 141, 223, 236], "472": [39, 223, 277, 483], "566": [39, 96, 166, 223], "582": [39, 223, 277], "598": [39, 223, 260], "38it": [39, 45, 59, 60, 123, 130, 135, 139, 222, 223, 236, 255, 256, 257, 259, 260, 264], "613": [39, 42, 44], "644": 39, "92it": [39, 45, 59, 60, 136, 206, 223, 255, 260, 264], "54": [39, 45, 54, 60, 61, 71, 73, 107, 130, 131, 135, 139, 141, 170, 177, 184, 195, 198, 200, 222, 223, 236, 237, 255, 256, 259, 260, 277, 280, 344, 955], "660": [39, 61, 107, 260], "676": 39, "56": [39, 41, 45, 58, 61, 71, 73, 102, 106, 107, 108, 114, 130, 135, 139, 141, 177, 186, 195, 198, 202, 206, 218, 223, 236, 238, 255, 256, 259, 260, 277, 325, 483, 636, 770, 771, 773, 774], "691": [39, 103, 111, 136, 222, 955], "466": [39, 255], "724": 39, "740": [39, 107], "772": 39, "788": [39, 222, 225, 955], "804": 39, "67": [39, 45, 59, 61, 73, 82, 83, 107, 108, 130, 135, 139, 141, 143, 175, 184, 195, 198, 202, 204, 207, 218, 222, 223, 236, 255, 256, 257, 259, 260, 264, 265, 274, 277, 282, 602, 955], "820": [39, 107, 223], "46it": [39, 45, 60, 130, 135, 139, 222, 223, 236, 255, 259, 260], "836": [39, 133, 139, 174, 203, 214, 260, 955], "879": [39, 212, 214, 955], "889": [39, 236, 344], "900": [39, 71, 107, 202, 207, 236], "71it": [39, 45, 60, 130, 136, 139, 222, 223, 236, 255, 256, 257, 259, 260, 264], "917": [39, 223], "934": [39, 222], "452": [39, 344], "951": [39, 117, 118, 260, 955], "968": 39, "985": [39, 85, 200, 260], "459": [39, 236, 255], "1002": [39, 84, 110, 204, 223, 268, 277, 316, 331, 332, 333, 334, 342, 550, 551, 678, 736, 772, 785, 788, 797, 803], "461": [39, 223], "83": [39, 45, 61, 66, 73, 86, 107, 130, 135, 139, 141, 156, 195, 222, 223, 228, 231, 236, 237, 255, 256, 259, 260, 277, 369, 403, 634, 685, 770, 771, 773, 774, 955], "1019": [39, 223], "1036": 39, "1054": 39, "1071": 39, "470": [39, 107, 183, 190, 223, 226, 236, 242, 255, 955], "89": [39, 45, 60, 61, 73, 98, 105, 106, 107, 108, 130, 135, 141, 162, 195, 210, 218, 223, 227, 236, 255, 256, 258, 259, 260, 277, 320, 644], "1088": [39, 66, 202, 222, 235, 236, 237, 277, 320, 331, 332, 333, 334, 489, 547, 550, 551, 670, 727], "1105": [39, 223], "474": [39, 123, 184, 344], "1122": [39, 195, 230], "475": [39, 223, 236, 260, 344], "93": [39, 45, 59, 61, 66, 73, 106, 123, 130, 135, 139, 141, 195, 222, 223, 236, 255, 256, 259, 260, 277, 674], "1139": [39, 236], "477": [39, 255, 260], "1156": 39, "478": [39, 223], "96": [39, 41, 44, 45, 70, 73, 108, 130, 135, 139, 140, 141, 163, 188, 195, 197, 206, 210, 222, 223, 233, 234, 236, 255, 256, 257, 259, 260, 264, 265, 277, 333, 334, 487, 489, 501, 875, 935], "1173": [39, 236], "479": [39, 109, 111, 223, 955], "1189": 39, "1206": 39, "480": [39, 101, 107, 197, 218, 223], "1222": [39, 195], "vmax": [39, 45, 97, 114, 134, 139, 141, 143, 144, 152, 162, 167, 186, 202, 222, 223, 237, 238, 255, 257, 258, 269, 282, 292, 305, 306, 307, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 783, 785, 786, 788, 789, 833, 835, 852, 866, 867, 870, 874, 878, 887, 890, 895, 896, 897], "xaxi": [39, 273], "set_ticks_posit": 39, "bottom": [39, 97, 101, 139, 166, 172, 187, 218, 245, 246, 255, 273, 303, 319, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 848, 865, 875, 893, 898], "ntest": 39, "ntrain": 39, "fontweight": [39, 170, 237, 273], "bold": [39, 170, 177, 227, 230, 233, 234, 235, 237, 238, 255, 273], "r\u00e9mi": [39, 223, 277], "stanisla": [39, 42, 163, 223, 277, 288, 484, 499], "dehaen": [39, 42, 223, 277, 484, 499], "dynam": [39, 47, 53, 58, 59, 97, 121, 132, 133, 139, 192, 206, 223, 229, 231, 232, 239, 252, 277, 285, 317, 319, 320, 331, 334, 337, 342, 354, 356, 357, 358, 359, 364, 491, 522, 524, 550, 551, 602, 635, 636, 643, 762, 888, 948, 955], "represent": [39, 43, 46, 53, 69, 70, 121, 130, 139, 142, 166, 175, 186, 192, 194, 195, 196, 198, 201, 217, 223, 232, 243, 244, 263, 264, 265, 268, 269, 277, 278, 280, 283, 284, 288, 293, 294, 295, 302, 305, 317, 319, 331, 332, 333, 334, 341, 343, 429, 432, 518, 524, 550, 551, 584, 632, 783, 785, 786, 788, 789, 812, 813, 815, 816, 817, 842, 948, 955], "tempor": [39, 42, 45, 53, 72, 85, 104, 111, 132, 133, 140, 141, 161, 162, 163, 166, 168, 172, 177, 191, 206, 210, 224, 225, 228, 229, 230, 231, 234, 237, 245, 255, 257, 258, 259, 260, 266, 267, 277, 281, 291, 292, 297, 299, 304, 317, 318, 320, 326, 331, 332, 333, 334, 336, 342, 343, 344, 423, 429, 489, 495, 503, 506, 509, 523, 524, 526, 546, 547, 548, 550, 551, 594, 598, 601, 602, 616, 618, 619, 632, 635, 637, 651, 670, 677, 678, 693, 697, 708, 710, 712, 717, 738, 739, 740, 741, 742, 743, 744, 745, 755, 757, 758, 759, 764, 766, 773, 774, 775, 798, 801, 811, 812, 813, 814, 815, 816, 817, 833, 955], "trend": [39, 92, 140, 167, 223, 277], "cognit": [39, 68, 69, 223, 229, 277, 322, 343, 429, 603, 953], "tic": [39, 223, 277], "068": [39, 46, 955], "153": [39, 71, 195, 255, 259, 475], "decoding_time_generalization_condit": [39, 46, 955], "Then": [40, 45, 71, 94, 108, 136, 140, 142, 161, 162, 166, 182, 187, 207, 217, 218, 219, 234, 260, 270, 309, 320, 333, 334, 385, 508, 650, 778, 871, 935, 945, 949, 950], "virtual": [40, 97, 126, 177, 232, 235, 291, 302, 319, 331, 332, 333, 334, 382, 504, 550, 551, 669, 724, 727, 940, 949], "output": [40, 45, 58, 61, 66, 70, 72, 73, 85, 134, 140, 141, 150, 161, 166, 169, 175, 177, 181, 187, 189, 190, 191, 194, 197, 198, 215, 219, 222, 223, 229, 230, 232, 233, 234, 240, 243, 244, 246, 250, 255, 257, 273, 280, 283, 284, 286, 287, 289, 292, 294, 295, 303, 305, 306, 307, 309, 312, 319, 320, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 488, 489, 493, 494, 495, 496, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 533, 534, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 597, 598, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626, 627, 628, 630, 631, 635, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 677, 678, 679, 682, 683, 684, 685, 687, 689, 690, 691, 692, 693, 694, 696, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 727, 728, 731, 732, 734, 735, 736, 737, 746, 747, 748, 749, 751, 753, 754, 755, 756, 757, 758, 759, 770, 771, 772, 773, 774, 775, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 802, 803, 804, 807, 808, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 828, 832, 833, 835, 838, 842, 851, 860, 863, 867, 868, 869, 870, 875, 876, 878, 879, 880, 885, 886, 888, 889, 891, 892, 893, 894, 898, 899, 900, 903, 904, 914, 915, 916, 917, 918, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 941, 945, 949, 955], "asish": [40, 282, 283, 284], "asishrocks95": 40, "fastica": [40, 103, 232, 635], "aud_l": [40, 41, 44, 68, 203, 259, 868], "vis_l": [40, 41, 44, 68, 259], "ie": [40, 79, 137, 328, 338, 342, 346, 687, 801, 811, 833, 860, 893, 894], "pca_data": 40, "window_titl": [40, 218, 333, 334, 869], "ica_data": 40, "ev1": [40, 283], "919": [40, 46, 955], "129": [40, 41, 46, 54, 61, 82, 88, 99, 111, 114, 148, 155, 156, 167, 174, 195, 196, 236, 240, 255, 260, 262, 277, 955], "decoding_unsupervised_spatial_filt": [40, 46, 955], "erp": [41, 126, 128, 144, 155, 179, 180, 191, 198, 223, 226, 227, 229, 232, 234, 235, 240, 277, 280, 298, 331, 333, 334, 336, 382, 422, 540, 550, 626, 635, 636, 697, 769, 859, 878, 880, 920, 938, 948, 955], "concaten": [41, 97, 101, 107, 139, 163, 177, 194, 215, 218, 231, 233, 243, 270, 278, 283, 284, 285, 286, 295, 296, 301, 302, 303, 331, 332, 333, 334, 430, 431, 432, 483, 492, 547, 550, 551, 638, 654, 659, 670, 748, 877], "fed": [41, 507], "classification_report": [41, 163], "confusion_matrix": [41, 163], "minmaxscal": 41, "n_filter": 41, "penalti": [41, 66, 72, 277, 312, 547, 548], "l1": [41, 66, 547, 548], "pred": 41, "target_nam": [41, 163], "cm_normal": 41, "astyp": [41, 99, 171, 186, 212, 218, 222, 230, 243], "float": [41, 45, 57, 66, 92, 120, 142, 162, 169, 170, 171, 175, 186, 195, 197, 215, 219, 222, 232, 243, 245, 255, 278, 281, 286, 288, 289, 291, 292, 293, 295, 301, 303, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 357, 364, 365, 372, 373, 380, 389, 394, 396, 398, 410, 411, 412, 413, 416, 422, 423, 424, 425, 426, 427, 428, 429, 434, 441, 443, 483, 485, 488, 489, 490, 491, 494, 495, 496, 500, 504, 507, 509, 511, 512, 518, 519, 521, 522, 523, 524, 526, 527, 528, 535, 541, 542, 545, 547, 548, 549, 550, 551, 561, 562, 570, 576, 587, 589, 590, 591, 594, 595, 597, 598, 602, 603, 604, 605, 606, 608, 609, 613, 614, 615, 617, 618, 619, 634, 635, 636, 637, 638, 639, 640, 643, 644, 645, 646, 647, 648, 650, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 667, 668, 670, 672, 674, 675, 676, 678, 679, 688, 713, 719, 720, 721, 722, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 748, 750, 753, 754, 755, 757, 758, 761, 762, 765, 766, 767, 769, 770, 771, 773, 774, 775, 776, 777, 778, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 803, 804, 809, 811, 812, 813, 814, 815, 816, 817, 821, 822, 823, 833, 835, 838, 839, 844, 848, 852, 854, 855, 859, 863, 864, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 885, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 903, 906, 907, 909, 910, 933], "sum": [41, 54, 57, 67, 73, 87, 99, 108, 136, 140, 141, 144, 163, 170, 175, 187, 188, 194, 201, 209, 210, 212, 229, 255, 256, 260, 270, 289, 292, 320, 331, 332, 333, 334, 337, 338, 339, 342, 345, 346, 347, 353, 422, 427, 550, 551, 617, 635, 640, 735, 770, 771, 773, 774, 778, 784, 785, 786, 788, 789, 867, 935, 954], "imshow": [41, 42, 48, 97, 134, 142, 143, 149, 162, 172, 186, 198, 223, 255, 257, 258, 259, 260, 273, 331, 332, 333, 334, 389, 783, 834, 837, 873, 896, 905], "nearest": [41, 52, 106, 143, 147, 162, 166, 171, 186, 194, 208, 243, 255, 282, 289, 291, 292, 304, 320, 328, 331, 332, 333, 334, 337, 338, 339, 340, 342, 344, 345, 346, 347, 349, 429, 434, 483, 490, 550, 551, 634, 635, 650, 778, 783, 784, 785, 786, 787, 788, 789, 821, 833, 835, 852, 853, 859, 867, 870, 874, 878, 887, 890, 895, 897], "blue": [41, 80, 81, 106, 109, 139, 158, 161, 168, 177, 182, 198, 201, 203, 204, 207, 217, 234, 263, 264, 270, 319, 329, 833, 850, 851, 859, 863], "tick_mark": 41, "ytick": [41, 222, 229, 255, 273], "precis": [41, 73, 97, 117, 163, 183, 210, 219, 229, 230, 237, 243, 252, 287, 299, 304, 316, 325, 331, 332, 337, 364, 365, 524, 550, 551, 573, 670, 739, 741, 760, 812, 813, 815, 816, 935], "recal": [41, 117, 163, 175, 176, 182, 244, 739, 740, 742, 745], "f1": [41, 97, 117, 163, 739], "support": [41, 60, 88, 151, 161, 162, 163, 164, 166, 168, 175, 176, 177, 191, 192, 196, 198, 207, 208, 211, 216, 217, 219, 246, 268, 269, 270, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 318, 319, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 336, 338, 339, 341, 342, 344, 345, 346, 347, 364, 365, 372, 380, 386, 388, 408, 423, 428, 429, 439, 440, 441, 443, 462, 483, 490, 491, 499, 503, 504, 507, 513, 514, 516, 517, 521, 522, 523, 549, 550, 551, 557, 562, 567, 572, 575, 576, 577, 578, 581, 583, 589, 593, 596, 597, 635, 646, 658, 659, 670, 692, 694, 695, 696, 710, 717, 718, 727, 731, 732, 748, 764, 766, 775, 778, 783, 785, 786, 787, 788, 789, 833, 851, 853, 856, 859, 863, 864, 865, 869, 874, 882, 888, 889, 893, 898, 899, 900, 901, 904, 935, 938, 940, 944, 946, 947, 948, 951], "288": [41, 61, 98, 99, 158, 167, 171, 186, 195, 197, 223, 236, 240, 250, 254, 260, 265, 277, 644, 955], "macro": [41, 163], "avg": [41, 163, 170, 255, 323, 812, 813], "last": [41, 97, 108, 131, 163, 166, 170, 172, 177, 186, 192, 209, 215, 223, 227, 228, 229, 230, 232, 233, 243, 246, 255, 256, 263, 270, 273, 282, 285, 287, 289, 295, 310, 317, 319, 320, 326, 328, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 354, 355, 370, 388, 411, 423, 431, 486, 493, 494, 496, 507, 521, 522, 523, 524, 549, 550, 551, 576, 595, 601, 630, 635, 638, 655, 764, 769, 770, 771, 773, 774, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 803, 814, 820, 833, 867, 872, 874, 879, 882, 889, 895, 941], "nrow": [41, 71, 100, 147, 172, 177, 202, 209, 238, 256, 273, 291, 306, 333, 334, 483, 490, 635, 874, 878], "fitted_xdawn": 41, "get_channel_typ": [41, 166, 195, 286, 291, 292, 304, 331, 332, 333, 334, 336, 550, 551, 635, 783, 785, 786, 787, 788, 789], "get_montag": [41, 142, 161, 162, 292, 295, 304, 307, 331, 332, 333, 334, 336, 550, 551], "cur_class": 41, "cur_pattern": 41, "pattern_evok": 41, "time_format": [41, 47, 127, 136, 139, 171, 202, 245, 295, 304, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 635, 783, 787, 874, 882, 888], "show_nam": [41, 94, 127, 147, 177, 196, 208, 256, 285, 287, 305, 306, 328, 331, 332, 333, 334, 336, 340, 380, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 852, 871, 874, 878, 885, 887, 890, 891, 895], "bertrand": [41, 98, 105, 114, 223, 227, 277, 287, 320, 636, 644, 801, 811, 812, 815], "rivet": [41, 114, 223, 277, 636], "antoin": [41, 114, 223, 277, 287, 288, 295, 636], "souloumiac": [41, 114, 223, 277, 636], "virgini": [41, 114, 223, 277, 636], "attina": [41, 114, 223, 277, 636], "gibert": [41, 114, 223, 277, 636], "algorithm": [41, 53, 57, 97, 101, 104, 109, 110, 111, 114, 140, 154, 178, 182, 183, 188, 192, 223, 227, 229, 232, 237, 255, 260, 263, 264, 265, 277, 280, 283, 286, 288, 291, 307, 312, 316, 317, 318, 336, 337, 341, 377, 423, 482, 483, 497, 504, 547, 550, 602, 621, 635, 636, 638, 643, 645, 646, 652, 659, 661, 668, 670, 677, 678, 679, 743, 760, 765, 823, 948, 951, 955], "enhanc": [41, 114, 222, 223, 256, 260, 277, 286, 298, 299, 309, 311, 312, 489, 635, 636, 659, 770, 771, 773, 774], "2035": [41, 114, 206, 223, 277, 636], "2043": [41, 114, 195, 223, 277, 636], "2009": [41, 61, 84, 114, 144, 197, 223, 232, 255, 256, 277, 280, 316, 342, 545, 636, 650, 770, 771, 773, 774], "2012869": [41, 114, 223, 277, 636], "hubert": [41, 114, 277, 287, 288, 292, 295, 636], "cecotti": [41, 114, 277, 636], "emmanuel": [41, 114, 229, 277, 636], "mabi": [41, 114, 277, 636], "j\u00e9r\u00e9mie": [41, 114, 277, 636], "mattout": [41, 114, 277, 636], "theoret": [41, 114, 222, 223, 229, 250, 277, 319, 483, 636], "effici": [41, 68, 70, 114, 218, 229, 255, 277, 292, 298, 307, 318, 326, 331, 332, 333, 334, 495, 550, 551, 635, 636, 637, 743, 785, 786, 788, 789, 815, 816], "p300": [41, 114, 218, 223, 229, 277, 636, 814, 817], "proceed": [41, 59, 66, 72, 114, 192, 206, 231, 232, 252, 277, 316, 320, 357, 364, 548, 636, 814, 817], "eusipco": [41, 114, 277, 636, 814, 817], "1382": [41, 114, 277, 636], "1386": [41, 114, 277, 636], "barcelona": [41, 114, 277, 636], "url": [41, 114, 140, 177, 223, 277, 291, 309, 320, 423, 450, 456, 458, 462, 475, 476, 545, 602, 636, 765, 814, 817], "ieeexplor": [41, 114, 277, 636, 814, 817], "7073970": [41, 114, 277, 636], "846": [41, 46, 67, 184, 208, 223, 260, 955], "decoding_xdawn_eeg": [41, 46, 955], "cours": [42, 53, 58, 62, 64, 65, 67, 76, 82, 97, 101, 109, 117, 119, 122, 128, 140, 143, 161, 162, 168, 169, 177, 191, 192, 198, 201, 202, 203, 206, 213, 214, 223, 226, 229, 233, 234, 252, 260, 265, 277, 278, 282, 283, 292, 298, 301, 319, 320, 329, 330, 331, 332, 333, 334, 337, 338, 339, 342, 344, 345, 346, 347, 356, 358, 360, 363, 429, 484, 499, 517, 526, 536, 545, 547, 548, 550, 551, 589, 596, 601, 602, 616, 632, 700, 704, 710, 733, 747, 749, 750, 769, 783, 785, 786, 787, 788, 789, 832, 833, 859, 886, 893, 898, 955], "techniqu": [42, 43, 46, 53, 85, 97, 100, 101, 102, 175, 177, 191, 192, 223, 226, 229, 231, 232, 234, 235, 237, 238, 239, 241, 252, 255, 277, 317, 319, 320, 321, 331, 332, 333, 334, 336, 443, 485, 494, 497, 519, 521, 522, 542, 550, 551, 632, 635, 697, 727, 955], "By": [42, 71, 97, 106, 109, 130, 131, 139, 161, 168, 171, 175, 176, 177, 184, 192, 194, 195, 196, 197, 198, 204, 215, 216, 227, 229, 232, 233, 234, 235, 237, 240, 243, 244, 246, 268, 274, 278, 282, 283, 284, 287, 288, 289, 291, 320, 323, 331, 332, 333, 334, 336, 337, 338, 339, 342, 345, 346, 347, 377, 394, 507, 524, 550, 551, 635, 638, 724, 748, 760, 776, 783, 784, 785, 786, 787, 788, 789, 861, 865, 873, 881, 888, 898, 914, 918], "onto": [42, 44, 66, 100, 161, 162, 168, 181, 192, 196, 201, 206, 222, 227, 233, 234, 237, 251, 284, 292, 295, 303, 307, 317, 320, 337, 339, 345, 347, 491, 666, 732, 760, 833, 851, 886, 905], "surrog": [42, 183, 209, 234, 289, 293, 305, 434, 499, 544], "expos": [42, 159, 222, 259, 285, 291, 300, 306], "exhibit": [42, 270, 320, 333, 334, 338, 339, 342, 345, 346, 347], "evolut": [42, 140, 635, 882], "audl": [42, 99], "visl": [42, 99], "wai": [42, 47, 53, 60, 69, 70, 101, 141, 142, 166, 167, 168, 170, 175, 176, 177, 182, 186, 187, 192, 194, 195, 196, 197, 198, 203, 206, 212, 217, 222, 227, 228, 229, 230, 232, 233, 234, 237, 239, 244, 245, 246, 250, 252, 255, 257, 258, 263, 265, 270, 273, 277, 278, 280, 287, 291, 294, 299, 304, 309, 310, 311, 314, 316, 317, 318, 319, 321, 325, 326, 330, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 423, 507, 517, 566, 594, 635, 637, 652, 656, 662, 671, 693, 700, 732, 764, 765, 766, 772, 778, 783, 787, 799, 801, 811, 833, 940, 944, 947], "n_epoch": [42, 141, 166, 172, 175, 192, 222, 223, 250, 260, 269, 285, 326, 331, 332, 382, 483, 484, 485, 488, 489, 490, 491, 492, 494, 495, 497, 498, 521, 522, 636, 643, 785, 786, 787, 790, 791, 792, 812, 813, 814, 859, 865, 866], "n_time": [42, 45, 57, 90, 92, 94, 97, 102, 109, 141, 166, 172, 175, 185, 192, 217, 218, 222, 223, 232, 235, 243, 250, 252, 255, 259, 260, 263, 264, 265, 288, 326, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 382, 417, 483, 484, 485, 488, 489, 490, 491, 492, 494, 496, 497, 499, 517, 519, 521, 522, 549, 550, 551, 572, 610, 636, 668, 733, 738, 739, 740, 741, 742, 743, 744, 745, 750, 757, 758, 759, 763, 769, 773, 774, 783, 785, 786, 787, 788, 789, 790, 791, 792, 803, 804, 808, 810, 812, 813, 814, 833, 859, 866, 867, 874, 895], "993": [42, 44, 81, 82, 140, 955], "106": [42, 61, 99, 123, 124, 127, 148, 167, 171, 178, 192, 195, 198, 203, 206, 223, 228, 232, 255, 259, 260], "x_transform": 42, "leav": [42, 163, 170, 198, 218, 226, 231, 243, 284, 678, 918, 947, 949], "recommend": [42, 67, 69, 70, 71, 97, 141, 181, 184, 187, 198, 215, 217, 219, 229, 230, 232, 233, 235, 237, 277, 282, 283, 288, 295, 309, 311, 320, 326, 331, 332, 333, 334, 338, 342, 346, 349, 375, 377, 386, 398, 416, 423, 428, 429, 443, 482, 485, 491, 527, 545, 550, 551, 559, 566, 571, 583, 594, 602, 608, 615, 635, 640, 652, 670, 677, 693, 695, 699, 724, 731, 732, 769, 773, 774, 801, 811, 843, 851, 893, 935, 940, 945, 946, 947], "stratifi": [42, 500], "tend": [42, 188, 204, 229, 231, 232, 255, 320, 645, 935], "overfit": [42, 114, 222], "cannot": [42, 85, 187, 195, 198, 215, 217, 219, 229, 230, 233, 235, 245, 265, 294, 309, 310, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 357, 410, 412, 505, 550, 551, 602, 635, 658, 659, 702, 732, 783, 833, 871, 893, 898, 927, 940], "x_scale": 42, "futur": [42, 97, 197, 232, 246, 287, 309, 310, 318, 349, 489, 495, 523, 659, 935, 945], "filters_": [42, 44, 291, 483, 484, 487, 490, 491, 501, 636], "individu": [42, 52, 58, 63, 68, 69, 70, 128, 166, 168, 170, 181, 185, 192, 196, 198, 201, 227, 233, 234, 238, 245, 246, 255, 269, 270, 277, 284, 289, 295, 309, 310, 316, 317, 320, 326, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 364, 365, 396, 418, 483, 524, 550, 551, 603, 611, 612, 652, 678, 700, 761, 767, 775, 814, 817, 853, 865, 869, 873, 886, 888, 926, 945], "argsort": [42, 57, 144, 155, 169, 207], "reorder": [42, 73, 144, 286, 331, 332, 333, 334, 550, 551, 562, 783, 785, 786, 787, 788, 789, 866, 896], "kei": [42, 121, 122, 163, 166, 167, 168, 175, 176, 178, 192, 195, 196, 197, 207, 216, 233, 234, 240, 243, 244, 246, 250, 273, 281, 285, 286, 288, 291, 293, 303, 305, 307, 308, 309, 317, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 350, 355, 364, 365, 370, 392, 393, 423, 427, 428, 434, 437, 438, 439, 440, 441, 456, 462, 475, 483, 490, 492, 499, 507, 510, 512, 526, 527, 528, 531, 545, 547, 548, 550, 551, 553, 585, 590, 601, 602, 613, 625, 634, 635, 637, 650, 652, 653, 655, 659, 681, 694, 696, 713, 726, 734, 735, 736, 748, 752, 768, 769, 770, 771, 773, 774, 783, 785, 786, 787, 788, 789, 820, 823, 833, 851, 852, 857, 858, 859, 863, 865, 866, 867, 868, 869, 871, 873, 874, 875, 878, 887, 888, 890, 891, 893, 895, 897, 898, 899, 933, 947], "ems_av": 42, "u": [42, 45, 47, 73, 97, 131, 139, 142, 143, 163, 167, 170, 172, 175, 177, 186, 192, 197, 198, 206, 207, 215, 216, 222, 228, 229, 232, 233, 234, 240, 243, 244, 250, 277, 283, 288, 295, 309, 310, 311, 320, 322, 323, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 517, 550, 551, 610, 944, 949], "schurger": [42, 223, 277, 484, 499], "thu": [42, 44, 69, 73, 81, 97, 130, 141, 166, 167, 175, 178, 196, 197, 201, 206, 208, 215, 219, 223, 229, 232, 234, 235, 237, 255, 303, 309, 316, 317, 319, 320, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 416, 485, 494, 506, 517, 519, 521, 550, 551, 602, 610, 613, 637, 801, 811, 812, 813, 815, 816, 935], "equalize_event_count": [42, 175, 177, 192, 259, 260, 265, 294, 295, 331, 332, 787], "103": [42, 61, 76, 139, 141, 148, 195, 222, 223, 236, 255], "aaron": [42, 223, 277, 308, 484, 499], "sebastien": [42, 223, 277, 294, 484, 499], "marti": [42, 223, 277, 301, 484, 499], "reveal": [42, 128, 140, 170, 196, 218, 223, 229, 270, 277, 484, 499, 814, 817], "579": [42, 46, 94, 96, 223, 258, 262, 955], "202": [42, 46, 136, 139, 195, 256, 259, 300, 955], "ems_filt": [42, 46, 955], "continu": [43, 45, 46, 47, 53, 125, 129, 166, 168, 171, 174, 177, 187, 194, 215, 223, 224, 225, 226, 228, 229, 232, 233, 237, 241, 244, 248, 250, 255, 268, 277, 285, 294, 295, 298, 300, 309, 310, 312, 316, 317, 319, 323, 325, 331, 332, 333, 334, 336, 414, 422, 426, 428, 432, 483, 489, 490, 491, 495, 523, 524, 550, 551, 564, 570, 571, 583, 594, 595, 632, 634, 635, 638, 647, 688, 693, 767, 768, 769, 783, 785, 786, 787, 788, 789, 810, 859, 871, 878, 880, 955], "spectro": [43, 46, 53, 141, 191, 224, 225, 331, 333, 334, 336, 489, 491, 495, 523, 564, 595, 804, 955], "mvpa": [44, 191, 224, 225, 299, 328, 331, 333, 334, 336, 342, 423, 483, 484, 486, 487, 490, 492, 493, 498, 500, 501, 524, 602, 613, 636, 702, 833, 955], "neurophysiolog": [44, 45, 939], "interpret": [44, 45, 130, 168, 177, 185, 186, 215, 223, 229, 230, 245, 257, 259, 260, 265, 277, 280, 308, 309, 312, 320, 326, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 345, 346, 347, 349, 371, 378, 381, 395, 397, 423, 424, 426, 428, 439, 485, 486, 487, 489, 493, 496, 499, 500, 501, 504, 521, 522, 526, 539, 541, 542, 550, 551, 559, 566, 574, 576, 593, 596, 597, 602, 608, 609, 618, 619, 634, 635, 637, 640, 647, 648, 651, 652, 653, 659, 662, 666, 676, 678, 685, 731, 732, 734, 735, 736, 739, 748, 751, 769, 770, 771, 772, 773, 774, 778, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 803, 804, 812, 813, 814, 815, 816, 833, 835, 859, 865, 866, 867, 869, 870, 871, 872, 879, 884, 886, 889, 944, 945, 950], "romain": [44, 280, 295, 299, 300, 302], "trachel": [44, 280, 299, 300, 302], "trachelr": 44, "sample_path": [44, 152, 161, 162], "meg_data": [44, 166], "reshap": [44, 163, 222, 255, 256, 259, 263, 265, 489, 498], "coef": [44, 45, 222, 223, 501], "revers": [44, 45, 99, 169, 172, 198, 215, 226, 228, 229, 231, 232, 234, 243, 292, 299, 328, 333, 334, 338, 339, 342, 344, 345, 346, 347, 869, 871, 873, 874, 893, 898], "sequenti": [44, 166, 176, 212, 250, 319, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 403, 423, 424, 426, 428, 486, 493, 496, 499, 500, 526, 539, 541, 550, 551, 593, 596, 597, 608, 609, 618, 619, 640, 647, 648, 731, 732, 734, 735, 736, 748, 770, 771, 772, 773, 774, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 814, 815, 816, 823, 833, 835, 854, 859, 867, 870, 889, 893, 898, 899, 948], "kai": [44, 45, 170, 277, 487, 489, 501, 507], "g\u00f6rgen": [44, 45, 277, 487, 489, 501], "dylan": [44, 45, 109, 277, 487, 489, 501, 635], "hayn": [44, 45, 277, 487, 489, 501], "benjamin": [44, 45, 277, 483, 487, 489, 501], "blankertz": [44, 45, 277, 483, 487, 489, 501], "felix": [44, 45, 139, 277, 283, 294, 306, 307, 487, 489, 501], "bie\u00dfmann": [44, 45, 277, 487, 489, 501], "On": [44, 45, 97, 98, 192, 194, 227, 229, 232, 233, 270, 277, 294, 309, 318, 320, 323, 349, 487, 489, 501, 512, 532, 635, 644, 940, 947, 949], "multivari": [44, 45, 117, 121, 163, 188, 222, 223, 277, 283, 317, 423, 487, 489, 501, 737, 935], "067": [44, 45, 277, 487, 489, 501], "360": [44, 46, 66, 74, 75, 80, 81, 84, 85, 107, 108, 120, 121, 139, 148, 178, 188, 195, 198, 204, 218, 223, 236, 255, 260, 269, 955], "1076": [44, 45, 46, 955], "linear_model_pattern": [44, 46, 955], "reproduc": [45, 71, 97, 120, 177, 222, 244, 286, 309, 364, 587, 635, 668, 687, 735, 736, 737, 746, 747, 749, 770, 771, 772, 773, 774], "lalor": [45, 222, 277, 317, 489], "speech": [45, 222, 277, 317, 489, 674, 814, 817], "envelop": [45, 108, 140, 141, 142, 162, 172, 223, 288, 289, 293, 317, 331, 332, 333, 334, 490, 550, 551, 640, 801, 811, 812, 815], "128": [45, 50, 67, 76, 147, 184, 186, 194, 195, 196, 197, 214, 223, 232, 250, 252, 259, 280, 304, 317, 331, 332, 482, 853], "try": [45, 57, 97, 101, 109, 166, 167, 169, 177, 182, 184, 187, 188, 193, 197, 202, 206, 219, 229, 230, 231, 232, 233, 234, 243, 251, 252, 270, 283, 291, 292, 304, 306, 309, 318, 341, 349, 500, 520, 533, 559, 566, 635, 650, 851, 921, 935, 936, 940, 941], "known": [45, 70, 114, 139, 141, 170, 177, 182, 186, 191, 206, 253, 254, 255, 285, 294, 317, 319, 320, 328, 331, 332, 333, 334, 335, 336, 337, 342, 423, 433, 507, 518, 524, 550, 551, 553, 559, 566, 583, 601, 602, 616, 678, 702, 705, 739, 747, 750, 765, 833, 951, 955], "literatur": [45, 170, 270, 319, 330, 331, 332, 333, 334, 783, 787], "simpli": [45, 69, 161, 169, 170, 172, 175, 196, 197, 215, 227, 228, 232, 234, 237, 244, 245, 255, 269, 270, 295, 309, 317, 320, 326, 330, 331, 332, 333, 334, 364, 365, 550, 551, 652, 653, 783, 787, 940, 944, 949], "chri": [45, 141, 162, 222, 223, 277, 280, 282, 283, 284, 285, 286, 294, 302], "holdgraf": [45, 141, 142, 162, 222, 223, 277, 280, 282, 283, 284, 285, 286, 302, 489], "choldgraf": [45, 141, 142, 162, 222], "nicola": [45, 73, 277, 285, 291, 294, 743], "barascud": [45, 285, 291], "sphinx_gallery_thumbnail_numb": [45, 147, 223], "loadmat": [45, 222], "collect": [45, 97, 177, 183, 194, 198, 209, 210, 217, 218, 219, 227, 237, 240, 270, 273, 277, 283, 303, 309, 314, 316, 319, 320, 324, 328, 331, 332, 333, 334, 389, 483, 490, 510, 550, 551, 634, 635, 655, 657, 768, 783, 785, 786, 788, 789, 849, 859, 867, 874, 878, 890, 895, 897], "listen": [45, 310, 317, 916], "know": [45, 66, 168, 182, 186, 195, 198, 212, 216, 219, 227, 229, 232, 233, 234, 245, 259, 273, 295, 309, 318, 320, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 610, 613, 723, 875, 935, 944, 947, 948], "primarili": [45, 97, 196, 226, 229, 240, 319, 485, 550, 551, 684, 857, 948], "speech_data": [45, 222], "down": [45, 47, 97, 139, 177, 187, 212, 219, 222, 223, 229, 233, 245, 246, 257, 259, 285, 301, 303, 309, 310, 328, 329, 331, 332, 333, 334, 340, 341, 483, 490, 523, 550, 551, 634, 635, 668, 770, 771, 773, 774, 783, 785, 786, 788, 789, 833, 863, 865, 866, 867, 871, 874, 878, 887, 888, 890, 895, 897, 940], "biosemi128": [45, 196], "ln": [45, 119, 134, 320, 801, 811, 947], "800": [45, 59, 69, 77, 86, 107, 109, 154, 160, 161, 170, 181, 182, 186, 192, 201, 203, 212, 219, 223, 229, 236, 260, 263, 265, 267, 273, 338, 339, 342, 345, 346, 347, 542, 833, 893, 898, 955], "alpha": [45, 47, 54, 61, 65, 66, 70, 72, 75, 76, 85, 97, 123, 124, 137, 139, 140, 143, 149, 161, 163, 172, 177, 198, 203, 207, 217, 222, 233, 239, 255, 257, 260, 265, 269, 270, 274, 286, 293, 295, 303, 312, 327, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 423, 489, 495, 541, 545, 547, 548, 550, 551, 618, 704, 761, 767, 770, 771, 773, 774, 783, 785, 786, 788, 789, 833, 835, 844, 851, 854, 867, 870, 871, 883, 889, 893, 898, 906], "ln1": 45, "frameon": [45, 273], "float64": [45, 90, 92, 94, 97, 102, 109, 119, 121, 141, 185, 193, 217, 232, 235, 250, 308, 320, 549, 763], "7677": 45, "7676": 45, "119": [45, 128, 129, 151, 161, 186, 195, 223, 259, 302, 955], "938": [45, 223], "construct": [45, 68, 96, 130, 166, 170, 188, 194, 204, 206, 209, 210, 215, 218, 223, 229, 232, 233, 234, 237, 252, 255, 269, 270, 282, 283, 285, 287, 289, 294, 316, 319, 320, 331, 332, 333, 334, 338, 342, 344, 346, 347, 351, 352, 364, 381, 429, 507, 518, 519, 521, 522, 550, 551, 568, 650, 694, 727, 732, 733, 769, 778, 791, 794, 848, 854, 888, 893, 899], "relationship": [45, 48, 169, 186, 219, 231, 255, 310, 317, 319, 320, 489, 495, 527, 801, 811, 812, 813, 815, 816], "rf": [45, 222, 308, 489], "feature_nam": [45, 222, 288, 489], "corrcoef": [45, 48, 73, 489], "extra": [45, 107, 108, 171, 186, 192, 195, 196, 218, 234, 243, 251, 282, 284, 286, 307, 319, 328, 331, 332, 333, 334, 336, 340, 373, 374, 380, 403, 405, 483, 484, 490, 502, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 829, 852, 859, 867, 869, 871, 874, 875, 878, 885, 887, 889, 890, 891, 895, 897, 945, 949], "inclus": [45, 151, 166, 169, 211, 304, 323, 331, 332, 341, 344, 450, 475, 476, 528, 545, 547, 548, 562, 613, 630, 635, 659, 775, 784, 787], "n_delai": [45, 489], "held": [45, 106, 197, 222, 310], "coef_": [45, 222, 487, 489, 634], "n_output": [45, 489, 495], "n_featur": [45, 222, 223, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 498, 636, 668, 763], "delays_": [45, 222, 489], "mean_coef": 45, "mean_scor": 45, "ix_ch": 45, "sometim": [45, 53, 87, 109, 139, 142, 144, 155, 166, 170, 182, 187, 194, 195, 216, 217, 227, 229, 230, 232, 234, 235, 255, 273, 293, 304, 305, 308, 309, 316, 319, 320, 328, 331, 332, 333, 334, 336, 340, 483, 490, 550, 551, 567, 634, 635, 650, 688, 694, 783, 785, 786, 788, 789, 852, 859, 867, 874, 878, 887, 890, 895, 897, 935, 949], "well": [45, 48, 58, 63, 73, 97, 105, 143, 147, 162, 163, 166, 169, 170, 176, 178, 186, 188, 191, 192, 195, 198, 201, 208, 210, 212, 215, 216, 218, 222, 226, 227, 229, 231, 232, 233, 234, 235, 237, 239, 241, 243, 250, 252, 260, 268, 270, 274, 277, 283, 284, 285, 292, 303, 304, 309, 310, 312, 317, 318, 319, 320, 331, 332, 333, 334, 341, 342, 388, 411, 423, 439, 483, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 507, 522, 523, 550, 551, 635, 636, 649, 656, 658, 670, 677, 783, 801, 803, 811, 814, 815, 816, 817, 865, 867, 881, 935, 937, 940, 945, 947, 951], "recreat": [45, 166, 229, 273, 274, 858], "time_plot": 45, "180": [45, 50, 61, 107, 119, 134, 138, 182, 195, 204, 212, 218, 223, 226, 228, 230, 232, 236, 239, 255, 260, 288, 338, 339, 342, 345, 346, 347, 517, 839], "highlight": [45, 47, 117, 122, 141, 147, 176, 177, 198, 201, 202, 230, 232, 237, 245, 304, 308, 309, 328, 329, 331, 332, 333, 334, 341, 483, 490, 550, 551, 634, 783, 785, 786, 788, 789, 852, 863, 867, 869, 874, 890, 895, 897], "max_coef": 45, "pcolormesh": [45, 141, 222, 292], "shade": [45, 197, 222, 233, 292, 843, 859, 900, 901], "gouraud": [45, 222], "ncoeffici": 45, "setp": [45, 222, 230], "get_xticklabel": [45, 222], "2c": [45, 320], "ix_plot": 45, "argmin": [45, 147, 170, 270], "vlim": [45, 97, 106, 127, 136, 149, 167, 168, 231, 234, 238, 260, 270, 291, 292, 305, 306, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 783, 785, 786, 788, 789, 844, 852, 867, 874, 878, 887, 890, 895, 897], "nfor": 45, "case": [45, 70, 84, 97, 100, 117, 121, 122, 130, 141, 147, 151, 164, 166, 169, 170, 175, 181, 187, 188, 191, 194, 195, 197, 198, 206, 207, 211, 215, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 243, 244, 245, 255, 256, 257, 263, 265, 268, 270, 273, 274, 277, 282, 283, 284, 286, 288, 291, 292, 295, 301, 303, 305, 306, 307, 309, 310, 312, 319, 320, 325, 326, 328, 331, 332, 333, 334, 336, 338, 339, 341, 342, 344, 345, 346, 347, 355, 364, 365, 370, 376, 386, 397, 422, 423, 427, 428, 439, 440, 441, 442, 483, 490, 500, 507, 512, 523, 526, 527, 534, 541, 545, 547, 548, 550, 551, 559, 566, 574, 581, 583, 586, 589, 594, 601, 602, 603, 604, 605, 606, 613, 624, 630, 638, 650, 655, 668, 687, 693, 710, 724, 727, 743, 748, 769, 770, 783, 785, 786, 787, 788, 789, 797, 803, 813, 816, 820, 833, 851, 853, 859, 866, 868, 871, 872, 875, 893, 906, 907, 908, 909, 910, 911, 912, 935, 940, 949], "aim": [45, 163, 184, 203, 251, 252, 371, 424, 425, 426], "exploit": [45, 114, 280], "context": [45, 68, 143, 197, 198, 201, 223, 229, 255, 289, 303, 310, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 483, 486, 493, 496, 499, 500, 526, 539, 541, 550, 551, 593, 596, 597, 603, 608, 609, 618, 619, 624, 635, 640, 647, 648, 731, 732, 734, 735, 736, 748, 770, 771, 772, 773, 774, 785, 788, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 814, 815, 816, 827, 828, 835, 865, 867, 870, 882, 888, 889, 913, 919, 920, 947], "treat": [45, 47, 177, 198, 223, 234, 235, 255, 259, 285, 286, 294, 301, 331, 332, 335, 341, 562, 564, 626, 770, 771, 773, 774, 787, 859, 877], "independ": [45, 97, 101, 109, 136, 139, 177, 184, 188, 192, 205, 206, 207, 223, 226, 228, 229, 231, 232, 233, 237, 245, 255, 274, 277, 283, 284, 292, 316, 317, 320, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 427, 486, 493, 498, 550, 551, 635, 636, 643, 650, 659, 668, 670, 765, 767, 770, 771, 773, 774, 777, 812, 813, 815, 816, 878, 880, 882, 935, 948], "therefor": [45, 97, 121, 134, 162, 168, 172, 177, 184, 188, 195, 196, 216, 223, 227, 228, 229, 231, 232, 235, 237, 255, 270, 309, 310, 316, 320, 331, 332, 341, 386, 388, 507, 550, 559, 566, 567, 571, 635, 688, 694, 695, 699, 945], "qualiti": [45, 148, 183, 191, 192, 198, 228, 229, 232, 234, 240, 246, 270, 275, 277, 298, 301, 302, 309, 310, 312, 316, 320, 326, 331, 332, 333, 334, 550, 551, 593, 635, 652, 674, 879], "expens": [45, 191, 192, 198, 283, 321, 678], "especi": [45, 81, 97, 139, 147, 169, 175, 188, 192, 195, 226, 227, 229, 231, 232, 236, 243, 270, 273, 283, 287, 289, 309, 316, 319, 320, 333, 334, 342, 550, 551, 635, 660, 678, 770, 771, 773, 774, 875, 935, 944], "lag": [45, 53, 104, 111, 222, 252, 277, 299, 331, 333, 334, 336, 489, 495, 509, 550, 632, 697, 955], "footcit": [45, 309, 455], "crosseetal2016": 45, "earlier": [45, 171, 193, 197, 218, 226, 229, 243, 274, 301, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 525, 526, 527, 545, 547, 548, 613, 875], "wherea": [45, 107, 162, 169, 182, 184, 194, 201, 223, 229, 230, 231, 237, 255, 286, 319, 320, 325, 331, 332, 350, 364, 365, 550, 551, 559, 865, 888, 894, 938], "affect": [45, 75, 98, 107, 167, 168, 175, 177, 193, 217, 226, 227, 229, 230, 232, 233, 235, 237, 270, 277, 278, 287, 293, 301, 302, 306, 309, 316, 320, 324, 326, 331, 332, 333, 334, 338, 341, 342, 346, 434, 475, 524, 525, 550, 551, 572, 652, 700, 735, 736, 812, 813, 815, 816, 888, 893], "obvious": [45, 184, 237, 270], "cf": [45, 171, 181, 801, 811], "next": [45, 80, 81, 84, 141, 143, 148, 161, 162, 167, 171, 176, 177, 182, 183, 187, 192, 197, 201, 203, 205, 215, 217, 226, 228, 232, 234, 238, 243, 244, 245, 255, 269, 270, 278, 285, 287, 290, 292, 295, 305, 309, 320, 328, 331, 332, 333, 334, 340, 423, 482, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 787, 788, 789, 814, 817, 852, 853, 874, 878, 887, 890, 895, 940, 949], "section": [45, 101, 143, 162, 163, 166, 168, 170, 175, 176, 177, 182, 191, 192, 193, 197, 198, 201, 215, 216, 217, 219, 226, 228, 229, 230, 232, 235, 237, 243, 244, 270, 278, 280, 283, 286, 289, 292, 295, 302, 304, 306, 308, 309, 310, 316, 320, 321, 326, 328, 329, 330, 331, 332, 333, 334, 340, 341, 343, 364, 365, 380, 462, 483, 490, 504, 510, 518, 520, 550, 551, 568, 580, 634, 635, 650, 659, 671, 783, 785, 786, 788, 789, 852, 867, 874, 878, 887, 890, 895, 897, 906, 907, 945], "haufeetal2014": 45, "sr": [45, 149, 240, 317, 320, 570], "1e4": 45, "mean_pattern": 45, "max_pattern": 45, "8384": [45, 293], "1758": 45, "177": [45, 61, 171, 195, 223, 255, 260, 277, 770, 771, 773, 774], "2667": 45, "3259": 45, "356": [45, 75, 82, 107, 139, 195, 255, 955], "3674": 45, "443": [45, 169, 236, 277], "3948": 45, "534": [45, 196, 200, 223, 236, 260, 955], "4192": 45, "620": [45, 107, 223], "4344": 45, "706": [45, 170, 221, 222, 955], "4463": 45, "14it": [45, 60, 70, 130, 135, 139, 222, 223, 236, 255, 256, 257, 258, 259, 260, 264], "789": [45, 236, 260], "4538": 45, "872": [45, 154, 156, 236, 955], "4604": 45, "961": [45, 139, 186, 236, 260], "4698": 45, "1049": 45, "4771": 45, "1130": 45, "4795": 45, "1208": [45, 223], "4796": 45, "1291": [45, 238], "4828": 45, "1374": 45, "4854": 45, "1457": [45, 47, 172], "4878": 45, "1546": 45, "4930": 45, "1634": 45, "4972": 45, "1724": 45, "5017": 45, "1814": 45, "5060": 45, "1902": 45, "5089": 45, "1989": [45, 98, 105, 227, 277, 320, 644], "5111": 45, "72it": [45, 123, 130, 135, 136, 139, 223, 236, 255, 256, 260, 263, 264], "2078": 45, "5139": 45, "2169": [45, 67], "5174": 45, "2260": 45, "5204": 45, "2350": 45, "5230": 45, "2440": 45, "5255": 45, "2531": [45, 60, 195, 222, 228, 252], "5281": [45, 277, 314, 463], "2623": [45, 195], "5307": 45, "2715": 45, "5331": 45, "2807": 45, "5355": 45, "2898": 45, "5375": 45, "2988": 45, "5386": 45, "3078": 45, "5398": 45, "3169": 45, "5411": 45, "3261": 45, "5428": 45, "3351": 45, "5438": 45, "3440": 45, "5443": 45, "3528": 45, "5444": 45, "3619": 45, "5454": 45, "86it": [45, 60, 123, 135, 222, 223, 236, 255, 260], "3710": 45, "5466": 45, "3803": 45, "5484": 45, "3896": 45, "5500": 45, "3989": 45, "5514": 45, "4083": 45, "5531": 45, "4177": 45, "5546": 45, "4269": 45, "5554": 45, "4364": 45, "5573": 45, "4458": 45, "5588": 45, "4548": 45, "5589": 45, "4639": 45, "5594": 45, "27it": [45, 59, 60, 130, 139, 223, 236, 255, 256, 257, 259, 260], "4729": 45, "5595": 45, "4821": 45, "5602": 45, "4909": 45, "5596": 45, "4999": 45, "5597": 45, "5091": 45, "5603": 45, "5180": 45, "5598": 45, "5271": 45, "5599": 45, "5362": 45, "5452": 45, "54it": [45, 59, 130, 131, 136, 139, 222, 223, 236, 255, 259, 260, 264], "5541": 45, "5629": 45, "5590": 45, "5718": 45, "5806": 45, "5582": 45, "5895": 45, "5581": 45, "5985": 45, "6074": 45, "5577": 45, "6169": 45, "6263": 45, "5608": 45, "6355": 45, "5614": 45, "6447": 45, "5621": 45, "6538": 45, "5623": 45, "6628": 45, "6718": 45, "5622": 45, "6810": 45, "5628": 45, "6903": 45, "5635": 45, "6997": 45, "5646": 45, "7087": 45, "5643": 45, "7176": 45, "5638": 45, "7268": 45, "5644": 45, "88": [45, 52, 61, 67, 71, 73, 76, 106, 107, 108, 130, 136, 139, 141, 184, 195, 202, 206, 207, 208, 212, 218, 222, 223, 236, 255, 256, 257, 259, 260, 264, 265, 277, 423], "7366": 45, "5668": 45, "7461": 45, "5680": 45, "7560": 45, "5705": 45, "7656": 45, "7753": 45, "5735": 45, "7851": 45, "5753": 45, "7948": 45, "5767": 45, "8044": 45, "5778": 45, "8140": 45, "5786": 45, "8235": 45, "5791": 45, "8331": 45, "5801": 45, "5495": 45, "2518": 45, "3393": 45, "267": [45, 93, 169, 194, 195, 236, 255, 277, 314], "3947": 45, "357": [45, 107, 139, 195, 229, 236], "4293": 45, "4525": 45, "4676": 45, "625": [45, 63, 169, 223, 251, 258, 260], "4808": 45, "715": [45, 211, 214, 955], "4913": 45, "806": 45, "5003": [45, 320], "896": [45, 223, 260], "5072": 45, "986": 45, "5129": 45, "5175": 45, "1164": [45, 236], "5203": 45, "1255": 45, "5243": 45, "1347": [45, 236], "5284": 45, "1436": [45, 236], "5306": 45, "1522": [45, 110, 195], "5309": 45, "1612": [45, 195], "5329": 45, "1704": 45, "5359": 45, "1798": 45, "5395": 45, "1888": [45, 277, 635], "5409": 45, "1977": 45, "5418": 45, "2068": [45, 187], "5437": 45, "2160": 45, "5457": 45, "2251": 45, "5470": 45, "2344": 45, "5491": [45, 202], "2435": 45, "5501": 45, "2526": 45, "5512": 45, "2616": 45, "5516": 45, "2707": 45, "5524": 45, "2796": 45, "5523": 45, "2885": 45, "2975": 45, "5529": 45, "3066": 45, "5536": 45, "3156": 45, "3244": [45, 222], "5538": 45, "3334": [45, 235, 277, 331, 332, 333, 334, 550, 551, 727], "5542": 45, "3423": 45, "5540": 45, "3513": 45, "3601": [45, 403], "3690": 45, "3777": 45, "5532": 45, "3867": 45, "5537": 45, "3958": 45, "4050": 45, "5550": 45, "4140": 45, "5552": 45, "4231": 45, "5558": 45, "4321": 45, "5560": 45, "4412": 45, "5565": 45, "4504": 45, "4592": 45, "5568": 45, "4682": 45, "4770": 45, "5561": 45, "4856": 45, "5549": 45, "4945": 45, "5548": 45, "5034": 45, "5124": 45, "5216": 45, "5556": 45, "5566": 45, "5400": 45, "5571": 45, "5489": 45, "5579": 45, "5570": 45, "5669": 45, "5760": 45, "5575": 45, "5853": 45, "5584": 45, "5945": 45, "6037": 45, "6128": 45, "5600": 45, "6218": 45, "5601": 45, "44it": [45, 59, 60, 130, 135, 139, 222, 223, 236, 255, 256, 259, 260], "6310": 45, "5607": 45, "6400": 45, "6493": 45, "5615": 45, "6585": 45, "5620": 45, "6679": 45, "5632": 45, "6773": 45, "6864": [45, 207], "5645": 45, "6957": 45, "5652": 45, "7052": 45, "5665": 45, "7143": 45, "5666": 45, "7235": 45, "7328": 45, "5676": 45, "7423": 45, "5688": 45, "7518": 45, "5698": 45, "7613": 45, "5708": 45, "7708": 45, "5719": 45, "7799": 45, "5715": 45, "7892": 45, "7985": 45, "5720": 45, "8080": 45, "5730": 45, "8178": 45, "5746": 45, "8274": 45, "5758": 45, "8371": 45, "5773": 45, "2514": 45, "182": [45, 107, 195, 218, 260], "3468": 45, "275": [45, 63, 72, 151, 192, 195, 196, 218, 223, 236, 255, 277, 317, 320, 406, 483], "4038": 45, "367": [45, 107, 195, 227, 236], "4389": 45, "458": [45, 210, 255, 260], "4614": 45, "548": [45, 223, 260], "4769": [45, 202], "640": [45, 107, 209, 236, 250], "4904": 45, "732": [45, 260], "5010": 45, "821": 45, "5073": 45, "910": [45, 107, 236, 260], "1091": 45, "5221": 45, "1180": 45, "5252": 45, "1269": 45, "5276": 45, "1359": 45, "5305": 45, "1448": 45, "5326": 45, "1538": [45, 268, 277, 331, 332, 333, 334, 550, 551, 785, 788, 797, 803], "5347": 45, "1629": 45, "5373": 45, "1719": 45, "5391": 45, "1806": 45, "5394": 45, "1892": 45, "5390": 45, "1981": [45, 108], "2073": 45, "5422": 45, "2164": 45, "5439": 45, "2255": 45, "2345": 45, "5460": 45, "2434": 45, "5463": 45, "2522": [45, 127, 195], "5465": 45, "2614": 45, "5480": 45, "5498": 45, "2799": 45, "5513": 45, "2881": 45, "5487": 45, "2938": 45, "5367": 45, "2996": 45, "5261": 45, "3060": 45, "5187": 45, "3137": 45, "5162": 45, "3218": 45, "5154": 45, "3298": 45, "5144": 45, "3377": 45, "3453": 45, "5107": 45, "3531": 45, "5092": 45, "3609": 45, "5078": 45, "3686": 45, "5061": 45, "3764": 45, "5051": 45, "3842": 45, "5038": 45, "3921": 45, "5031": 45, "3993": 45, "5002": [45, 320], "4921": 45, "4107": 45, "4847": 45, "4163": 45, "4774": 45, "4219": 45, "4704": 45, "4276": 45, "4641": 45, "4346": 45, "4625": 45, "4435": 45, "4673": 45, "4720": 45, "4618": 45, "4775": 45, "4708": 45, "4819": 45, "4798": 45, "4860": 45, "4885": 45, "4889": 45, "4971": 45, "4914": 45, "5062": 45, "4952": 45, "5152": 45, "4985": 45, "5021": 45, "5334": 45, "5053": 45, "5427": 45, "5518": 45, "5119": 45, "5610": 45, "5149": 45, "5697": 45, "5163": 45, "5785": 45, "5179": 45, "5872": 45, "5190": 45, "5960": 45, "5205": 45, "6050": 45, "5224": 45, "6139": 45, "5239": 45, "6230": 45, "5260": 45, "6320": 45, "5277": 45, "6409": 45, "5289": 45, "6500": 45, "5308": 45, "6592": 45, "5330": 45, "6685": 45, "5353": [45, 403], "6778": 45, "5374": 45, "6871": 45, "6966": 45, "5420": 45, "7055": 45, "7146": 45, "7237": 45, "5449": 45, "7330": 45, "7422": 45, "5478": 45, "7515": 45, "5493": 45, "7607": 45, "5505": 45, "7698": 45, "7791": 45, "5527": 45, "7884": 45, "7980": 45, "8075": 45, "8168": 45, "8260": 45, "8356": [45, 293], "5280": 45, "sens": [45, 87, 97, 168, 186, 229, 234, 239, 240, 270, 309, 310, 319, 320, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 613, 857, 875], "actual": [45, 49, 53, 67, 69, 87, 90, 107, 142, 155, 170, 177, 184, 186, 188, 194, 196, 198, 201, 208, 209, 210, 211, 216, 217, 222, 227, 228, 229, 230, 240, 245, 255, 257, 260, 263, 264, 265, 270, 285, 286, 292, 293, 304, 309, 317, 319, 320, 324, 341, 517, 615, 635, 655], "valid_samples_": [45, 489], "grei": [45, 140, 168, 270, 286, 333, 334, 783, 871], "attempt": [45, 102, 222, 226, 257, 285, 293, 310, 319, 331, 332, 333, 334, 339, 345, 347, 445, 550, 551, 558, 568, 635, 713, 727, 782, 898, 933], "reflect": [45, 87, 97, 147, 161, 167, 175, 177, 186, 187, 203, 207, 226, 231, 232, 234, 243, 278, 283, 288, 291, 292, 305, 307, 309, 316, 319, 320, 331, 332, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 521, 522, 523, 526, 527, 545, 547, 548, 550, 551, 613, 700, 763, 874, 875, 888], "toward": [45, 69, 72, 80, 81, 97, 130, 186, 206, 219, 228, 259, 270, 277, 286, 320, 525, 527, 617, 638], "obtain": [45, 64, 68, 69, 87, 117, 121, 122, 163, 172, 177, 181, 183, 184, 196, 198, 201, 203, 204, 210, 211, 212, 229, 231, 237, 243, 244, 252, 255, 257, 260, 269, 283, 288, 292, 298, 300, 301, 303, 305, 310, 316, 317, 319, 320, 329, 331, 332, 333, 334, 335, 338, 342, 346, 347, 365, 377, 411, 413, 423, 425, 429, 443, 489, 491, 533, 534, 544, 547, 548, 550, 551, 559, 566, 571, 587, 602, 610, 621, 635, 639, 646, 668, 687, 695, 699, 705, 732, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 753, 757, 770, 771, 772, 773, 774, 784, 813, 816, 833, 835, 854, 870, 893, 894, 899, 936], "via": [45, 161, 162, 166, 168, 170, 171, 175, 176, 183, 194, 195, 196, 197, 198, 201, 206, 219, 226, 227, 228, 232, 233, 243, 246, 255, 256, 259, 263, 265, 268, 269, 277, 278, 284, 286, 287, 288, 291, 292, 293, 294, 295, 298, 300, 301, 303, 304, 305, 309, 319, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 341, 343, 344, 346, 347, 350, 364, 365, 377, 386, 390, 396, 397, 445, 494, 517, 519, 521, 522, 535, 542, 550, 551, 564, 635, 764, 770, 771, 773, 774, 785, 787, 788, 789, 835, 836, 851, 855, 856, 865, 869, 870, 874, 882, 888, 926, 935, 940, 941, 943, 944, 949], "procedur": [45, 140, 170, 187, 188, 215, 231, 232, 237, 255, 257, 258, 259, 265, 270, 277, 291, 303, 317, 319, 320, 324, 326, 331, 332, 333, 334, 416, 423, 428, 491, 550, 551, 635, 636, 650, 652, 668, 678, 700, 770, 935], "straightforward": [45, 130, 216, 229, 252, 303, 320], "sign": [45, 54, 64, 65, 73, 177, 232, 255, 258, 263, 285, 287, 292, 295, 296, 303, 309, 320, 333, 334, 338, 339, 342, 345, 346, 347, 403, 517, 525, 545, 547, 548, 588, 602, 603, 604, 605, 606, 668, 770, 771, 773, 774], "strength": [45, 48, 61, 121, 177, 201, 232, 274, 320, 339, 345, 347, 650], "direct": [45, 87, 106, 151, 176, 182, 186, 187, 194, 204, 206, 211, 227, 233, 234, 236, 270, 277, 283, 285, 292, 307, 309, 310, 319, 320, 323, 329, 331, 332, 338, 339, 341, 342, 345, 346, 347, 357, 364, 365, 505, 517, 525, 550, 551, 562, 602, 645, 665, 735, 785, 788, 833, 865, 877, 888, 898, 914, 935, 947], "nbetween": 45, "giovanni": [45, 222, 277, 317, 489], "di": [45, 66, 169, 212, 222, 277, 317, 489], "liberto": [45, 222, 277, 317, 489], "adam": [45, 161, 162, 222, 277, 291, 292, 293, 294, 295, 303, 304, 317, 489, 953], "bednar": [45, 222, 277, 317, 489], "edmund": [45, 222, 277, 317, 489], "fnhum": [45, 177, 222, 277, 317, 489, 640], "00604": [45, 222, 277, 317, 489], "receptive_field_mtrf": [45, 46, 955], "404": [46, 107, 260, 955], "ssd_spatial_filt": [46, 47, 955], "622": [46, 47, 223, 260, 277, 423, 955], "152": [46, 71, 195, 217, 255, 259, 260, 269, 344, 955], "retain": [47, 139, 175, 204, 227, 228, 243, 255, 293, 304, 312, 326, 331, 332, 341, 344, 507, 635, 770, 771, 773, 774, 878, 940], "oscillatori": [47, 140, 252, 269, 277, 364, 365, 801, 811, 812, 815], "propos": [47, 270, 309, 312, 650, 659], "surround": [47, 108, 128, 240, 270, 309, 491, 640, 665, 679, 778], "victoria": [47, 293, 294], "peterson": [47, 278, 293, 294, 295], "victoriapeterson09": 47, "freqs_sig": 47, "freqs_nois": 47, "sort_by_spectral_ratio": [47, 491], "filt_params_sign": [47, 491], "l_trans_bandwidth": [47, 140, 141, 229, 238, 283, 302, 331, 332, 333, 334, 485, 494, 519, 521, 550, 551, 674], "filt_params_nois": [47, 491], "72000": [47, 108, 218], "196608": 47, "262144": 47, "327680": 47, "393216": 47, "458752": 47, "67108864": 47, "67174400": 47, "134742016": 47, "136314880": 47, "268435456": 47, "legaci": [47, 120, 148, 166, 168, 178, 188, 198, 203, 209, 246, 278, 305, 307, 308, 331, 332, 333, 334, 550, 551, 783, 785, 786, 787, 788, 789, 867, 889], "inst": [47, 120, 148, 178, 188, 198, 203, 209, 232, 278, 283, 284, 286, 287, 289, 303, 304, 305, 307, 323, 325, 330, 331, 332, 333, 334, 336, 340, 341, 348, 380, 382, 409, 427, 483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 542, 550, 551, 634, 635, 636, 643, 644, 649, 654, 658, 662, 669, 685, 724, 727, 737, 768, 783, 785, 786, 787, 788, 789, 815, 816, 817, 878, 879, 880, 882, 889], "825": [47, 109, 141, 277, 635], "086": [47, 277, 740, 745], "preserv": [47, 60, 181, 182, 186, 192, 193, 222, 227, 232, 243, 255, 259, 287, 291, 292, 303, 304, 320, 326, 331, 332, 333, 334, 482, 513, 514, 515, 516, 550, 551, 570, 652, 666, 783, 785, 786, 787, 788, 789], "ratio": [47, 84, 114, 170, 192, 223, 229, 232, 234, 252, 257, 258, 259, 260, 273, 277, 285, 316, 320, 338, 339, 342, 345, 346, 347, 354, 491, 617, 618, 619, 635, 636, 723, 741, 742, 783, 787, 837, 895], "accord": [47, 182, 195, 196, 219, 222, 243, 283, 286, 292, 304, 317, 320, 324, 331, 332, 333, 334, 489, 491, 512, 550, 551, 559, 562, 566, 568, 630, 671, 688, 727, 733], "either": [47, 58, 69, 168, 175, 176, 177, 192, 193, 194, 196, 197, 198, 217, 226, 230, 235, 237, 244, 245, 251, 255, 270, 299, 309, 316, 317, 326, 328, 331, 332, 333, 334, 335, 338, 339, 340, 342, 344, 345, 346, 347, 355, 370, 389, 406, 423, 424, 425, 426, 483, 490, 491, 500, 507, 510, 518, 541, 543, 550, 551, 563, 583, 584, 587, 593, 597, 600, 601, 634, 635, 637, 646, 650, 655, 659, 670, 700, 710, 727, 729, 734, 735, 736, 748, 768, 769, 783, 784, 785, 786, 788, 789, 797, 807, 812, 813, 815, 816, 820, 833, 844, 851, 852, 856, 859, 866, 867, 874, 878, 879, 887, 888, 889, 890, 893, 895, 897, 898, 903, 906, 935, 947], "multipli": [47, 215, 229, 255, 320, 336, 338, 339, 342, 345, 346, 347, 366, 491, 517, 602, 608, 783], "eq": [47, 320, 491, 801, 811], "c_n": [47, 320], "reli": [47, 195, 228, 270, 287, 295, 309, 316, 320, 380, 935], "suggest": [47, 52, 167, 170, 188, 228, 229, 230, 231, 232, 234, 307, 310, 331, 332, 356, 358, 833, 935, 941, 945], "pariet": [47, 75, 317, 717, 833], "ssd_sourc": [47, 491], "psd": [47, 53, 95, 101, 119, 132, 133, 138, 159, 163, 166, 192, 198, 223, 226, 230, 239, 246, 250, 268, 269, 282, 284, 285, 287, 288, 289, 292, 297, 298, 302, 303, 305, 306, 308, 317, 328, 331, 332, 333, 334, 336, 337, 341, 342, 428, 488, 524, 550, 551, 592, 597, 601, 608, 609, 613, 616, 632, 689, 704, 731, 785, 786, 788, 789, 792, 795, 803, 804, 827, 833, 851, 867, 889, 903, 955], "n_fft": [47, 135, 136, 141, 159, 212, 239, 250, 268, 270, 283, 284, 331, 332, 333, 334, 491, 550, 551, 608, 784, 785, 788, 790, 792, 793, 795, 804, 814, 817, 889], "4096": [47, 208, 335], "spec_ratio": [47, 491], "sorter": 47, "get_spectral_ratio": [47, 491], "spectral": [47, 53, 58, 59, 60, 95, 98, 132, 133, 139, 140, 141, 144, 159, 163, 168, 192, 198, 212, 223, 228, 236, 252, 269, 277, 283, 286, 287, 293, 298, 300, 304, 305, 306, 312, 317, 328, 331, 332, 333, 334, 336, 337, 342, 356, 357, 358, 364, 428, 488, 491, 524, 527, 550, 551, 592, 597, 601, 608, 609, 613, 616, 632, 635, 689, 697, 704, 731, 771, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 802, 803, 804, 812, 813, 815, 816, 827, 833, 851, 861, 867, 889, 903, 955], "orang": [47, 177, 182, 217, 238, 260, 265, 892], "frac": [47, 175, 229, 230, 237, 255, 320, 342, 610, 743, 798, 801, 811, 812, 813, 815, 816], "p_f": 47, "p_": [47, 320], "sf": [47, 255], "384": [47, 61, 107, 136, 170, 197, 255], "lowest": [47, 149, 270, 326, 331, 332, 333, 334, 337, 410, 652, 760, 783, 784, 787, 859, 869], "below50": 47, "bandfilt": 47, "loglog": 47, "fill_between": [47, 140, 177, 265, 269, 270], "10000": [47, 110, 138, 212, 512, 545, 668, 748, 772], "green": [47, 74, 75, 76, 107, 143, 177, 182, 207, 217, 234, 270, 288, 333, 334, 833, 856, 869, 886, 892], "enjoi": [47, 270], "situat": [47, 231, 235, 250, 252, 294, 309, 310, 341, 387, 510, 635, 945], "chunk": [47, 106, 110, 163, 166, 172, 210, 237, 285, 304, 316, 426, 428, 512, 550, 551, 635, 659, 733], "overlap": [47, 97, 110, 126, 136, 166, 169, 172, 177, 178, 192, 194, 218, 228, 244, 245, 250, 268, 277, 280, 283, 285, 288, 292, 293, 294, 295, 299, 303, 308, 319, 325, 331, 332, 333, 334, 394, 428, 485, 494, 507, 519, 521, 522, 541, 550, 551, 594, 595, 608, 621, 636, 652, 653, 670, 750, 769, 804, 833, 889], "ssd_epoch": 47, "pattern_epoch": 47, "1251": 47, "647": [47, 172], "1151": [47, 172], "guido": [47, 277, 491], "nolt": [47, 277, 491], "gabriel": [47, 66, 231, 277, 491, 547, 634, 685], "curio": [47, 277, 491], "reliabl": [47, 130, 195, 230, 277, 491, 635], "basi": [47, 172, 188, 223, 277, 278, 292, 294, 320, 491, 504, 646, 649, 659, 670, 935], "spatio": [47, 72, 85, 191, 210, 222, 223, 255, 256, 266, 267, 277, 292, 293, 299, 320, 331, 333, 334, 336, 342, 343, 344, 429, 489, 491, 506, 546, 547, 550, 601, 602, 616, 632, 670, 697, 710, 712, 738, 739, 740, 741, 742, 743, 744, 745, 755, 757, 758, 759, 764, 766, 773, 774, 775, 833, 955], "1528": [47, 277, 491], "1535": [47, 277, 491], "057": [47, 166, 168, 175, 195, 237, 242, 252, 277, 491, 955], "179": [47, 61, 102, 195, 218, 223, 236, 255, 260, 277, 320, 677], "produc": [48, 64, 108, 109, 144, 146, 155, 170, 187, 191, 198, 205, 209, 217, 219, 229, 231, 237, 255, 270, 275, 277, 278, 283, 285, 286, 289, 291, 304, 307, 310, 316, 320, 323, 326, 329, 331, 332, 337, 341, 344, 371, 372, 395, 398, 420, 424, 425, 426, 428, 435, 458, 541, 550, 551, 587, 593, 594, 597, 608, 621, 635, 638, 644, 647, 648, 659, 666, 668, 687, 693, 697, 717, 732, 734, 735, 736, 737, 746, 747, 748, 749, 751, 770, 771, 772, 773, 774, 778, 822, 833, 851, 852, 888, 929], "abl": [48, 117, 161, 163, 170, 185, 187, 191, 198, 231, 232, 237, 252, 263, 282, 306, 309, 312, 317, 320, 341, 522, 550, 551, 635, 878, 935, 940], "region": [48, 64, 67, 73, 75, 121, 122, 134, 155, 161, 163, 176, 181, 207, 217, 229, 230, 255, 256, 269, 270, 283, 292, 295, 316, 319, 329, 331, 332, 333, 334, 336, 344, 392, 485, 494, 519, 521, 522, 535, 536, 537, 541, 550, 551, 587, 687, 732, 743, 833, 865, 888, 891], "source_estim": [48, 53, 62, 82, 337, 342, 704, 710, 832, 955], "surf_ori": [48, 73, 74, 75, 80, 81, 95, 184, 204, 251, 285, 335, 433, 613], "leadfield": [48, 67, 184, 189, 191, 198, 291, 364, 365, 366], "7498": [48, 57, 61, 66, 68, 69, 73, 74, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 95, 117, 119, 120, 121, 122, 157, 198, 201, 203, 204, 205, 207, 223, 251, 252], "combin": [48, 50, 55, 56, 57, 60, 61, 63, 66, 67, 68, 70, 73, 74, 75, 77, 80, 81, 84, 85, 86, 95, 113, 117, 119, 120, 121, 122, 128, 139, 154, 155, 157, 158, 163, 166, 167, 168, 171, 176, 177, 181, 192, 194, 196, 201, 203, 204, 205, 206, 207, 208, 215, 217, 218, 222, 223, 226, 234, 235, 237, 238, 240, 243, 245, 252, 255, 257, 260, 263, 265, 277, 278, 284, 287, 288, 289, 291, 292, 294, 295, 298, 299, 301, 302, 303, 304, 306, 307, 308, 309, 312, 320, 323, 326, 331, 332, 333, 334, 337, 338, 339, 342, 344, 345, 346, 347, 357, 364, 365, 373, 374, 382, 423, 424, 425, 426, 431, 441, 458, 483, 488, 490, 502, 505, 542, 550, 551, 567, 570, 595, 596, 602, 605, 608, 609, 611, 612, 635, 647, 648, 683, 694, 704, 710, 717, 754, 783, 785, 786, 787, 788, 789, 792, 795, 803, 833, 851, 859, 866, 867, 874, 877, 895], "grad_map": 48, "mag_map": [48, 52], "eeg_map": 48, "204": [48, 60, 157, 184, 192, 195, 198, 209, 210, 237, 243, 252, 255, 259, 269, 299], "gain": [48, 50, 57, 67, 92, 117, 120, 121, 122, 136, 184, 206, 229, 252, 285, 287, 288, 292, 294, 295, 301, 303, 304, 305, 306, 307, 320, 364, 365, 518, 527, 876, 883], "picks_meg": 48, "picks_eeg": 48, "sharex": [48, 71, 100, 117, 140, 222, 234, 270], "fontsiz": [48, 63, 139, 147, 170, 202, 237, 273, 894], "fig_2": [48, 198], "hist": [48, 97, 157, 170, 238], "ravel": [48, 138, 140, 144, 157, 222, 229, 256], "gradiomet": [48, 58, 60, 61, 72, 85, 98, 100, 103, 106, 108, 113, 120, 127, 130, 135, 136, 137, 138, 140, 144, 146, 147, 168, 171, 172, 176, 188, 192, 193, 194, 195, 206, 209, 210, 215, 218, 226, 227, 228, 230, 232, 233, 234, 236, 237, 243, 244, 245, 246, 250, 252, 255, 257, 258, 259, 269, 282, 285, 287, 291, 294, 295, 299, 302, 316, 319, 320, 323, 326, 328, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 364, 365, 423, 424, 425, 426, 427, 428, 439, 440, 441, 483, 490, 504, 526, 527, 545, 547, 548, 550, 551, 590, 613, 632, 633, 634, 635, 645, 646, 647, 648, 650, 651, 652, 653, 659, 670, 681, 769, 783, 785, 786, 787, 788, 789, 852, 858, 859, 865, 866, 867, 869, 871, 873, 874, 875, 878, 887, 888, 890, 895, 896, 897, 935], "brain_sen": 48, "add_text": [48, 69, 73, 74, 75, 76, 80, 81, 201, 203, 205, 833], "font_siz": [48, 69, 73, 74, 75, 76, 80, 81, 201, 203, 205, 833], "02108201": 48, "32186553": 48, "euclidean": [48, 337, 342, 344, 617, 743, 746, 749, 751, 754], "maxdep": 48, "vertno": [48, 69, 74, 75, 76, 184, 201, 204, 251, 263, 264, 265, 342, 344, 345], "depths_map": 48, "brain_dep": 48, "like": [48, 52, 53, 57, 60, 61, 62, 66, 67, 68, 73, 82, 85, 87, 97, 108, 109, 128, 136, 139, 161, 162, 166, 167, 168, 169, 170, 175, 176, 177, 181, 182, 186, 187, 188, 192, 193, 194, 195, 197, 198, 201, 203, 207, 208, 212, 215, 216, 217, 219, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 243, 244, 245, 246, 250, 255, 259, 270, 273, 274, 278, 283, 284, 286, 287, 288, 289, 292, 294, 295, 299, 303, 304, 306, 308, 309, 310, 312, 316, 318, 319, 320, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 355, 368, 370, 371, 372, 375, 376, 377, 380, 381, 389, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 416, 420, 421, 422, 423, 429, 434, 435, 436, 438, 442, 450, 455, 456, 458, 460, 483, 490, 504, 506, 507, 512, 518, 524, 526, 533, 535, 536, 539, 541, 542, 543, 544, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 589, 591, 593, 596, 597, 601, 602, 604, 613, 616, 620, 621, 622, 624, 625, 634, 635, 640, 650, 653, 655, 656, 657, 661, 665, 666, 667, 668, 670, 678, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 720, 721, 728, 731, 732, 734, 735, 736, 737, 746, 747, 748, 749, 752, 760, 764, 766, 769, 770, 771, 772, 773, 774, 778, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 801, 805, 806, 807, 811, 818, 820, 821, 825, 827, 830, 833, 842, 851, 852, 853, 859, 863, 865, 867, 869, 871, 873, 874, 875, 878, 882, 885, 887, 888, 889, 890, 891, 893, 895, 897, 898, 899, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 940, 941, 942, 944, 945, 947, 948, 949, 955], "corr": [48, 323], "gradiomt": 48, "815476": 48, "sensitivii": 48, "highest": [48, 202, 232, 320, 326, 329, 331, 332, 333, 334, 337, 527, 550, 551, 559, 566, 652, 760, 783, 784, 787, 863, 875], "close": [48, 87, 97, 124, 138, 144, 147, 166, 168, 170, 175, 177, 184, 186, 198, 218, 227, 228, 231, 232, 234, 235, 238, 246, 252, 255, 260, 273, 285, 294, 303, 308, 309, 320, 329, 331, 332, 333, 334, 336, 337, 411, 427, 450, 506, 526, 542, 550, 551, 635, 653, 661, 754, 778, 785, 786, 788, 789, 801, 811, 833, 840, 841, 863, 865, 882, 888, 891, 908, 935, 951, 954], "decreas": [48, 81, 139, 229, 252, 283, 285, 299, 320, 330, 331, 332, 333, 334, 483, 504, 635, 779, 783, 787, 812, 813, 815, 816, 833], "rapidli": [48, 239], "inreas": 48, "confirm": [48, 73, 97, 197, 217, 228, 232, 240, 309, 320], "078": [48, 51, 955], "249": [48, 51, 68, 72, 74, 82, 100, 111, 142, 156, 177, 195, 223, 236, 255, 260, 277, 955], "forward_sensitivity_map": [48, 51, 955], "displai": [49, 50, 51, 53, 70, 73, 103, 139, 143, 153, 166, 169, 177, 182, 184, 186, 188, 192, 219, 232, 235, 240, 243, 246, 256, 260, 278, 280, 281, 282, 284, 286, 288, 289, 293, 294, 295, 298, 300, 301, 303, 304, 305, 306, 308, 312, 319, 320, 323, 324, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 344, 345, 346, 347, 380, 433, 550, 551, 593, 632, 634, 635, 655, 657, 702, 723, 751, 783, 785, 786, 788, 789, 833, 834, 835, 850, 851, 859, 864, 865, 866, 868, 869, 870, 871, 873, 874, 875, 876, 879, 880, 885, 888, 889, 890, 891, 893, 894, 896, 898, 899, 935, 940, 941, 944, 947, 951, 955], "cerebellum": [49, 51, 53, 67, 344, 731, 732, 851, 903, 955], "volum": [49, 51, 53, 57, 62, 70, 82, 85, 98, 161, 162, 181, 182, 184, 186, 192, 198, 202, 206, 237, 277, 285, 287, 288, 290, 291, 292, 293, 294, 295, 296, 300, 302, 305, 307, 312, 314, 316, 319, 320, 323, 328, 329, 333, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 371, 377, 380, 429, 517, 528, 536, 537, 545, 547, 548, 589, 597, 601, 602, 612, 613, 614, 616, 665, 667, 691, 700, 710, 713, 722, 731, 732, 755, 758, 775, 778, 821, 822, 823, 833, 851, 893, 898, 899, 903, 933, 955], "morph": [49, 51, 53, 62, 66, 82, 160, 162, 181, 186, 203, 207, 263, 264, 265, 280, 285, 287, 288, 289, 291, 292, 293, 298, 299, 300, 316, 317, 319, 323, 333, 335, 336, 337, 338, 342, 343, 344, 345, 346, 347, 429, 539, 556, 597, 601, 602, 616, 621, 622, 631, 632, 667, 700, 702, 707, 710, 711, 712, 723, 732, 821, 822, 823, 833, 893, 899, 954, 955], "its": [50, 97, 102, 121, 154, 161, 163, 166, 167, 169, 171, 176, 182, 184, 186, 192, 194, 195, 196, 197, 198, 201, 206, 209, 216, 217, 223, 226, 227, 229, 230, 232, 233, 234, 235, 237, 243, 244, 246, 255, 260, 268, 270, 274, 277, 283, 285, 286, 291, 293, 295, 302, 303, 307, 309, 310, 316, 318, 319, 320, 328, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 380, 483, 486, 490, 497, 498, 517, 524, 547, 548, 549, 550, 551, 559, 566, 634, 635, 650, 723, 739, 749, 769, 770, 771, 773, 774, 783, 785, 786, 787, 788, 789, 801, 803, 804, 811, 812, 815, 823, 852, 859, 863, 865, 866, 867, 874, 878, 886, 887, 888, 890, 893, 895, 897, 898, 935, 941, 945, 947], "freesurf": [50, 58, 59, 60, 64, 67, 69, 70, 73, 143, 161, 162, 182, 184, 187, 189, 190, 191, 197, 198, 201, 208, 218, 277, 291, 292, 295, 298, 302, 304, 306, 307, 317, 319, 327, 329, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 371, 375, 376, 377, 380, 429, 434, 435, 436, 442, 455, 457, 458, 460, 463, 482, 502, 517, 535, 536, 537, 539, 541, 542, 543, 544, 556, 587, 589, 591, 593, 621, 665, 666, 687, 703, 704, 705, 706, 712, 713, 714, 715, 726, 731, 732, 746, 749, 760, 778, 779, 781, 825, 832, 833, 846, 851, 853, 863, 893, 898, 899, 903, 929, 930, 933, 935, 945, 947, 948, 951, 955], "alan": [50, 277, 280, 300, 301, 302, 330, 331, 332, 333, 334, 783, 787], "leggitt": [50, 280, 300, 301, 302], "ucsf": 50, "aseg_fnam": 50, "aseg": [50, 67, 161, 202, 207, 292, 319, 329, 338, 339, 342, 345, 346, 347, 517, 535, 536, 589, 732, 833], "mgz": [50, 56, 67, 70, 76, 182, 184, 186, 187, 202, 206, 207, 208, 286, 288, 291, 292, 304, 308, 319, 320, 323, 338, 339, 342, 344, 345, 346, 347, 371, 375, 376, 377, 460, 517, 536, 589, 732, 853, 899, 935], "surf": [50, 52, 67, 107, 136, 145, 161, 181, 182, 183, 184, 185, 186, 187, 198, 202, 207, 251, 255, 316, 317, 320, 323, 329, 337, 342, 344, 346, 347, 375, 533, 534, 587, 592, 622, 690, 713, 746, 749, 780, 819, 833, 853, 863, 923], "add_dist": [50, 67, 136, 184, 291, 301, 320, 323, 731, 753, 757], "lh_surf": 50, "cortex": [50, 52, 57, 63, 67, 69, 78, 79, 80, 81, 84, 87, 121, 136, 143, 154, 161, 171, 177, 184, 192, 204, 207, 217, 222, 232, 238, 252, 277, 295, 316, 317, 319, 320, 338, 339, 342, 344, 345, 346, 347, 458, 489, 674, 687, 749, 833, 893, 898], "volume_label": [50, 67, 289, 292, 338, 339, 342, 344, 345, 346, 347, 517, 589, 732], "lh_cereb": 50, "sphere_unit": [50, 184, 291, 732], "octahedron": [50, 67, 136, 182, 184, 186, 323, 338, 342, 346, 731, 893], "subdivis": [50, 67, 136, 184], "octahedr": [50, 67, 136, 184, 482], "vertex": [50, 52, 67, 74, 75, 76, 109, 117, 136, 182, 183, 184, 186, 187, 201, 203, 206, 207, 251, 252, 255, 265, 285, 295, 303, 304, 320, 337, 338, 339, 342, 343, 344, 345, 346, 347, 349, 364, 365, 517, 539, 541, 587, 611, 612, 621, 635, 704, 705, 716, 717, 722, 749, 750, 751, 756, 759, 760, 775, 778, 779, 780, 832, 833, 912], "lh": [50, 52, 54, 55, 63, 64, 65, 67, 69, 73, 74, 75, 80, 81, 87, 95, 117, 119, 121, 122, 131, 134, 135, 136, 143, 154, 160, 161, 181, 182, 183, 184, 185, 186, 187, 198, 201, 202, 204, 205, 208, 209, 218, 251, 252, 264, 265, 273, 320, 323, 327, 337, 338, 339, 342, 345, 346, 347, 539, 587, 687, 705, 710, 720, 833, 893, 898, 912, 930], "triangl": [50, 52, 67, 78, 136, 182, 183, 184, 186, 187, 201, 204, 251, 320, 337, 344, 482, 716, 752, 756, 759, 780], "neighbor": [50, 52, 67, 136, 168, 182, 183, 184, 187, 227, 251, 255, 257, 270, 289, 292, 301, 302, 310, 320, 390, 397, 410, 525, 575, 666, 753, 754, 755, 757, 758, 763, 770, 771, 773, 774, 780], "geometri": [50, 67, 87, 97, 136, 184, 187, 209, 210, 237, 277, 292, 295, 303, 316, 319, 323, 460, 483, 527, 713, 833], "triangul": [50, 67, 78, 136, 184, 201, 256, 257, 285, 320, 323, 344, 386, 713, 716, 928, 933], "4098": [50, 69, 185, 186, 208, 316], "155407": [50, 52, 67, 69, 78, 184, 186], "156866": [50, 52, 67, 69, 78, 184, 186], "132651": 50, "57769": 50, "50733": 50, "401": [50, 107, 223, 236, 260], "voxel": [50, 67, 70, 76, 182, 184, 186, 235, 255, 277, 289, 292, 303, 320, 341, 344, 346, 347, 429, 665, 776, 777, 823, 833, 853, 899], "neighborhood": [50, 67, 76, 182, 184, 235, 344], "005000": [50, 184], "001000": [50, 67, 76, 184], "556177": 50, "16777216": 50, "nonzero": [50, 238, 320], "nifti": [50, 56, 67, 181, 287, 344, 346, 347], "nii_fnam": [50, 67], "mne_sample_lh": 50, "nii": [50, 56, 67, 181, 323], "export_volum": [50, 67, 292, 344], "mri_resolut": [50, 56, 67, 70, 292, 343, 344, 346, 347, 517], "And": [50, 68, 80, 97, 136, 186, 205, 207, 217, 223, 229, 234, 238, 309, 316, 320, 344, 600, 610, 773, 774], "freeview": [50, 149, 208, 280, 307, 320, 935], "run_subprocess": 50, "mri_fnam": 50, "lut": [50, 319, 536, 703, 833], "opac": [50, 57, 61, 66, 72, 85, 119, 182, 197, 303, 323, 333, 334, 341, 542, 785, 786, 788, 789, 833, 835, 844, 870, 894, 900, 906], "jet": 50, "colorscal": 50, "slice": [50, 61, 66, 85, 166, 169, 182, 184, 186, 198, 207, 222, 245, 259, 282, 284, 288, 290, 292, 303, 312, 320, 323, 325, 326, 329, 330, 331, 332, 333, 334, 336, 341, 346, 347, 378, 381, 395, 397, 428, 439, 485, 486, 489, 493, 496, 499, 504, 521, 522, 550, 551, 559, 566, 634, 635, 637, 649, 651, 652, 653, 659, 662, 666, 676, 678, 685, 751, 769, 770, 771, 773, 774, 778, 783, 785, 786, 787, 788, 789, 791, 793, 794, 795, 796, 798, 810, 812, 813, 815, 816, 853, 859, 863, 865, 866, 869, 871, 872, 878, 879, 880, 882, 884, 886, 889, 899], "157": [50, 151, 163, 177, 195, 196, 215, 236, 238, 255, 259, 260, 265, 267, 277, 282, 406, 743, 955], "719": [50, 51, 232, 242, 248, 260, 955], "297": [50, 51, 61, 195, 260, 955], "left_cerebellum_volume_sourc": [50, 51, 955], "342": [51, 139, 140, 148, 188, 195, 222, 260, 277, 333, 334, 423, 875, 935], "source_space_morph": [51, 52, 955], "545": [51, 52, 97, 223, 227, 236, 242, 260, 277, 643, 955], "oppos": [52, 87, 240, 252, 282, 309, 319, 416, 492], "evenli": [52, 235, 237, 320, 333, 334, 428, 670, 872], "caution": [52, 53, 168, 183, 195, 219, 331, 332, 333, 334, 336, 485, 550, 551, 552, 787, 843], "fname_tran": [52, 67, 76, 78, 152, 202, 207, 316], "sample_audvis_raw": [52, 55, 67, 71, 76, 78, 95, 98, 109, 119, 120, 121, 130, 131, 134, 135, 137, 138, 143, 145, 151, 152, 166, 168, 172, 175, 176, 182, 184, 186, 188, 192, 193, 194, 196, 198, 202, 204, 207, 208, 226, 227, 230, 231, 233, 234, 235, 237, 243, 244, 245, 246, 251, 252, 257, 258, 259, 268, 273, 274, 309, 323], "fname_bem": [52, 67, 76, 185, 202, 207, 208], "fname_src_f": 52, "fsaverag": [52, 66, 69, 70, 153, 154, 161, 162, 182, 183, 186, 197, 207, 217, 238, 263, 264, 265, 277, 284, 288, 292, 295, 303, 316, 329, 337, 338, 342, 343, 346, 347, 372, 380, 396, 429, 434, 435, 436, 442, 455, 457, 458, 539, 593, 597, 621, 666, 719, 720, 751, 775, 778, 779, 822, 833, 851, 893, 899], "ico": [52, 66, 69, 162, 184, 185, 187, 218, 263, 264, 265, 300, 316, 323, 338, 342, 346, 349, 482, 591, 731, 755, 758, 893], "src_f": [52, 70, 206], "src_morph": 52, "subject_to": [52, 66, 69, 70, 263, 265, 316, 323, 337, 343, 346, 347, 429, 621, 622, 707, 719, 720, 721, 722, 899], "return": [52, 57, 60, 95, 96, 102, 110, 119, 120, 121, 126, 130, 134, 135, 136, 137, 140, 141, 142, 144, 148, 163, 166, 167, 170, 172, 175, 176, 177, 186, 187, 192, 193, 194, 195, 197, 204, 215, 232, 233, 234, 235, 237, 240, 243, 245, 252, 255, 256, 259, 265, 268, 269, 270, 278, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 307, 308, 310, 312, 318, 320, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 447, 448, 449, 450, 452, 453, 454, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 723, 724, 727, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 831, 832, 833, 834, 836, 837, 838, 839, 842, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 904, 905, 921, 932, 933, 934], "mag_map_f": 52, "to_original_src": [52, 280, 285, 342, 345], "sulcal": [52, 186, 833], "gyral": [52, 186, 833], "outlier": [52, 97, 183, 502, 635, 881], "mai": [52, 97, 101, 103, 109, 130, 161, 166, 167, 169, 170, 172, 175, 176, 177, 178, 182, 184, 187, 192, 194, 196, 198, 215, 216, 217, 219, 222, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 238, 243, 244, 245, 246, 250, 252, 257, 260, 263, 277, 295, 309, 310, 312, 314, 316, 318, 320, 326, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 345, 346, 347, 366, 386, 397, 398, 403, 422, 434, 482, 483, 485, 490, 492, 496, 502, 507, 513, 514, 515, 516, 517, 522, 533, 535, 542, 550, 551, 553, 559, 566, 567, 572, 596, 599, 602, 622, 634, 635, 637, 650, 652, 653, 659, 661, 670, 671, 688, 690, 692, 694, 700, 719, 721, 765, 769, 770, 771, 773, 774, 776, 778, 783, 785, 786, 787, 788, 789, 810, 812, 813, 814, 815, 816, 817, 833, 835, 851, 852, 865, 867, 869, 870, 872, 874, 878, 882, 887, 888, 890, 895, 897, 918, 928, 935, 940, 942, 944, 945, 947, 948, 949], "occur": [52, 70, 73, 97, 102, 117, 121, 122, 166, 169, 170, 177, 187, 194, 228, 229, 234, 240, 243, 257, 258, 282, 304, 309, 310, 316, 320, 324, 326, 330, 331, 332, 333, 334, 342, 349, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 506, 507, 509, 525, 526, 527, 545, 547, 548, 550, 551, 580, 613, 652, 653, 655, 733, 783, 787, 865, 875, 888, 942, 947], "kwarg": [52, 84, 136, 139, 143, 151, 167, 205, 206, 222, 229, 251, 269, 309, 331, 332, 333, 334, 336, 341, 344, 486, 493, 550, 551, 557, 624, 783, 833, 834, 857, 872, 891, 894], "smooth": [52, 64, 69, 85, 98, 109, 141, 149, 160, 161, 168, 177, 182, 192, 197, 207, 222, 234, 255, 256, 263, 264, 265, 277, 291, 298, 301, 303, 311, 331, 332, 333, 334, 337, 338, 339, 342, 343, 345, 346, 347, 429, 550, 551, 635, 644, 770, 771, 773, 774, 779, 801, 803, 811, 812, 813, 815, 816, 833, 843, 844, 866, 893, 896, 898, 900, 901, 904, 954], "smoothing_step": [52, 67, 68, 69, 81, 85, 87, 131, 136, 143, 157, 162, 201, 203, 205, 207, 251, 263, 338, 339, 342, 345, 346, 347, 833, 893, 898], "almost": [52, 141, 166, 194, 309, 320], "equidist": [52, 341], "unevenli": [52, 596], "achiev": [52, 69, 70, 139, 168, 170, 172, 186, 187, 206, 229, 238, 245, 252, 273, 291, 300, 312, 320, 333, 334, 423, 432, 587, 610, 635, 668, 687, 735, 736, 737, 746, 747, 749, 770, 771, 772, 773, 774, 875, 935, 938], "closest": [52, 170, 183, 184, 243, 270, 294, 303, 320, 326, 331, 332, 333, 334, 337, 344, 550, 551, 779, 785, 786, 788, 789, 833, 853, 867], "brain_subject": 52, "time_label": [52, 59, 60, 85, 87, 136, 152, 157, 252, 263, 264, 265, 274, 333, 334, 338, 339, 342, 345, 346, 347, 833, 835, 870, 893, 898], "brain_f": 52, "remap": [52, 53, 104, 111, 291, 302, 333, 334, 700, 955], "destin": [52, 69, 70, 106, 181, 186, 282, 291, 292, 299, 325, 328, 329, 331, 332, 333, 334, 335, 338, 339, 341, 342, 343, 344, 345, 346, 347, 355, 376, 377, 380, 381, 429, 442, 482, 504, 513, 514, 515, 516, 550, 551, 585, 620, 622, 634, 635, 659, 670, 719, 720, 722, 783, 784, 785, 786, 787, 788, 789, 818, 819, 820, 877, 922, 923, 924, 925, 926, 927, 928, 931, 932, 933, 934], "n_vertic": [52, 67, 69, 79, 136, 184, 185, 186, 327, 337, 338, 339, 342, 345, 346, 347, 517, 527, 617, 618, 713, 716, 751, 770, 771, 773, 774, 781, 832, 833, 928, 933], "n_use": [52, 67, 69, 71, 76, 136, 184, 185, 186, 202, 235], "10242": [52, 69, 185, 263, 264, 265, 316, 337, 349, 539, 775], "coord": [52, 67, 69, 71, 76, 136, 153, 184, 185, 186, 187, 202, 235, 411, 526, 833, 834, 905, 933], "conductor": [52, 67, 71, 76, 136, 182, 184, 185, 202, 208, 285, 319, 320, 372, 526, 598, 732, 851], "20484": [52, 162, 185, 187, 263, 264, 323, 591], "999310": [52, 67, 76, 184, 202, 207, 208], "009985": [52, 67, 76, 184, 202, 207, 208], "035787": [52, 67, 76, 184, 202, 207, 208], "012759": [52, 67, 76, 184, 202, 207, 208], "812405": [52, 67, 76, 184, 202, 207], "582954": [52, 67, 76, 184, 202, 207], "034894": [52, 67, 76, 184, 202, 207, 208], "583008": [52, 67, 76, 184, 202, 207], "811716": [52, 67, 76, 184, 202, 207, 208], "991420": [52, 67, 71, 76, 184, 202, 207], "039936": [52, 67, 71, 76, 184, 202, 207], "124467": [52, 67, 71, 76, 184, 202, 207], "060661": [52, 67, 71, 76, 184, 202, 207], "984012": [52, 67, 71, 76, 184, 202, 207], "167456": [52, 67, 71, 76, 184, 202, 207], "115790": [52, 67, 71, 76, 184, 202, 207], "173570": [52, 67, 71, 76, 184, 202, 207], "977991": [52, 67, 71, 76, 184, 202, 207], "homogen": [52, 67, 76, 136, 184, 202, 235, 277, 281, 286, 320, 649], "2154": 52, "8088": 52, "8079": 52, "10233": [52, 303], "4436": 52, "2113": [52, 195], "8129": 52, "8125": 52, "10237": 52, "4236": 52, "20470": 52, "finish": [52, 67, 71, 76, 136, 184, 185, 202, 208, 235, 245, 303, 318], "00205101": 52, "08784125": 52, "17433707": 52, "often": [53, 94, 97, 101, 102, 109, 166, 168, 176, 192, 194, 195, 201, 204, 206, 215, 217, 219, 223, 227, 229, 230, 233, 235, 237, 244, 245, 257, 270, 294, 309, 310, 316, 319, 320, 321, 333, 334, 338, 339, 342, 345, 346, 347, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 613, 671, 833, 875, 893, 898, 935, 945], "lack": [53, 97, 217, 308, 321, 328, 355, 370, 601, 655, 671, 820], "narr": [53, 191, 319, 321], "explan": [53, 100, 168, 181, 191, 259, 307, 321, 331, 332, 785, 786, 953], "discov": [53, 304, 318, 321], "ve": [53, 142, 166, 175, 177, 182, 186, 197, 212, 226, 228, 232, 234, 243, 244, 246, 270, 309, 318, 321, 905, 935], "flag": [53, 191, 193, 282, 289, 309, 316, 323, 331, 332, 336, 338, 339, 342, 345, 346, 347, 377, 550, 551, 591, 854, 888, 893, 898, 899, 935], "tutorial_script": [53, 191], "them": [53, 73, 76, 94, 97, 101, 142, 160, 161, 163, 166, 167, 168, 170, 171, 175, 176, 177, 182, 186, 187, 191, 192, 194, 196, 197, 198, 212, 218, 219, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 240, 243, 244, 245, 252, 255, 256, 263, 265, 270, 273, 288, 289, 295, 299, 303, 309, 310, 312, 316, 317, 318, 319, 320, 323, 325, 331, 332, 333, 334, 337, 358, 359, 362, 428, 431, 436, 486, 487, 501, 562, 563, 570, 595, 596, 604, 606, 609, 630, 634, 635, 654, 671, 678, 692, 697, 737, 747, 760, 788, 789, 828, 881, 940, 949], "shortcut": [53, 246, 288, 304, 823, 833], "intention": [53, 236], "record": [53, 89, 92, 97, 101, 109, 110, 136, 149, 163, 166, 170, 172, 177, 182, 188, 192, 194, 195, 196, 198, 201, 210, 212, 213, 215, 217, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 243, 244, 245, 250, 252, 255, 270, 277, 278, 280, 284, 286, 288, 289, 291, 292, 293, 294, 295, 301, 303, 304, 307, 308, 312, 316, 317, 318, 319, 320, 325, 326, 331, 332, 333, 334, 336, 341, 348, 367, 388, 416, 423, 428, 432, 475, 506, 515, 550, 551, 553, 560, 564, 570, 572, 575, 580, 582, 595, 635, 637, 638, 639, 643, 645, 646, 655, 657, 659, 670, 671, 678, 684, 700, 727, 769, 783, 785, 786, 787, 788, 789, 868, 882, 888, 935, 948, 951], "past": [53, 177, 229, 310, 495, 733, 935, 945], "recip": [53, 89, 309], "write": [53, 55, 67, 89, 93, 135, 137, 166, 186, 187, 196, 197, 198, 203, 216, 230, 243, 265, 268, 278, 281, 282, 283, 285, 286, 287, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 309, 316, 318, 320, 323, 325, 328, 329, 333, 334, 336, 337, 338, 339, 341, 344, 345, 347, 355, 375, 421, 524, 556, 585, 586, 620, 634, 686, 691, 782, 818, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 944, 945, 955], "ensembl": [53, 89, 93, 163, 336, 443, 550, 551, 955], "neo": [53, 89, 93, 215, 302, 336, 443, 550, 551, 955], "xdf": [53, 89, 93, 336, 443, 551, 955], "anatomi": [53, 116, 118, 182, 201, 288, 317, 319, 328, 331, 333, 334, 335, 336, 337, 342, 344, 376, 551, 556, 601, 602, 613, 691, 697, 702, 705, 733, 735, 736, 737, 748, 833, 955], "contact": [53, 104, 161, 164, 191, 226, 295, 303, 304, 307, 309, 317, 400, 665], "contralater": [53, 104, 111, 121, 177, 235, 336, 392, 557, 724, 955], "css": [53, 104, 111, 198, 277, 286, 295, 328, 334, 335, 336, 337, 341, 342, 433, 550, 632, 633, 651, 691, 702, 705, 747, 749, 955], "bridg": [53, 104, 111, 277, 304, 305, 336, 380, 396, 443, 551, 557, 643, 669, 855, 897, 955], "much": [53, 70, 81, 101, 104, 109, 111, 163, 166, 167, 168, 170, 175, 187, 191, 192, 196, 209, 218, 223, 229, 231, 232, 233, 234, 235, 236, 239, 243, 252, 270, 277, 282, 304, 309, 320, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 380, 396, 443, 507, 518, 522, 523, 550, 551, 557, 643, 669, 723, 855, 897, 944, 945, 955], "gel": [53, 104, 111, 304, 336, 380, 396, 443, 551, 557, 643, 669, 855, 897, 955], "densiti": [53, 58, 59, 60, 95, 102, 104, 105, 111, 132, 133, 146, 159, 163, 168, 186, 187, 192, 198, 212, 217, 223, 227, 228, 236, 252, 269, 277, 283, 286, 291, 300, 303, 304, 305, 306, 317, 319, 320, 328, 331, 332, 333, 334, 336, 337, 342, 357, 364, 394, 428, 441, 488, 524, 550, 551, 592, 597, 601, 608, 609, 613, 616, 632, 635, 643, 644, 672, 673, 677, 689, 697, 704, 731, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 802, 803, 804, 827, 833, 835, 851, 861, 867, 870, 889, 903, 955], "csd": [53, 58, 59, 60, 104, 111, 132, 133, 195, 252, 300, 304, 319, 331, 332, 333, 334, 336, 357, 364, 379, 394, 398, 441, 524, 550, 551, 632, 644, 697, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 802, 805, 861, 955], "maxwel": [53, 104, 110, 111, 191, 192, 210, 226, 241, 242, 281, 282, 286, 291, 294, 304, 307, 331, 333, 334, 336, 364, 365, 416, 417, 420, 423, 427, 428, 439, 440, 441, 483, 490, 504, 524, 526, 527, 545, 547, 548, 550, 551, 613, 646, 659, 670, 671, 875, 877, 955], "movement": [53, 101, 102, 104, 109, 111, 139, 163, 191, 219, 226, 232, 233, 234, 240, 241, 242, 245, 246, 277, 281, 282, 291, 303, 317, 319, 323, 325, 331, 333, 334, 336, 410, 411, 412, 413, 414, 416, 418, 420, 421, 432, 504, 524, 542, 550, 564, 639, 642, 659, 670, 736, 748, 835, 851, 858, 870, 877, 903, 955], "reestim": [53, 104, 111, 303, 325, 336, 413, 414, 432, 564, 639, 642, 645, 851, 877, 903, 955], "muscl": [53, 104, 111, 170, 232, 277, 292, 304, 325, 380, 396, 564, 566, 635, 640, 955], "denois": [53, 104, 111, 223, 280, 286, 328, 331, 333, 334, 336, 423, 428, 491, 503, 524, 526, 550, 598, 632, 636, 646, 678, 697, 866, 955], "oversampl": [53, 104, 111, 277, 331, 333, 334, 423, 503, 524, 526, 550, 598, 678, 955], "shift": [53, 102, 104, 111, 166, 192, 212, 222, 226, 229, 230, 235, 246, 277, 286, 287, 288, 291, 294, 295, 299, 304, 326, 330, 331, 332, 333, 334, 346, 347, 489, 511, 550, 551, 559, 566, 635, 637, 666, 677, 700, 783, 787, 797, 833, 876, 888, 899, 955], "2d": [53, 57, 61, 66, 85, 123, 124, 146, 150, 156, 177, 192, 198, 212, 217, 223, 227, 230, 232, 233, 234, 235, 255, 260, 284, 285, 294, 295, 299, 303, 304, 317, 319, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 380, 381, 386, 389, 397, 406, 435, 486, 491, 493, 494, 498, 500, 521, 522, 550, 551, 563, 572, 583, 589, 635, 768, 770, 771, 833, 834, 847, 851, 852, 856, 873, 894, 896, 897, 903, 904, 905, 920, 945, 955], "arrowmap": [53, 150, 156, 287, 333, 336, 564, 631, 632, 700, 852, 955], "heatmap": [53, 150, 156, 161, 237, 240, 317, 331, 512, 570, 656, 844, 955], "parcel": [53, 64, 67, 95, 117, 121, 122, 150, 156, 161, 181, 202, 207, 251, 277, 284, 285, 288, 298, 299, 304, 319, 337, 455, 457, 458, 535, 687, 705, 833, 846, 930, 955], "roi": [53, 64, 150, 156, 177, 181, 227, 256, 277, 283, 292, 319, 320, 329, 331, 333, 334, 336, 392, 509, 512, 567, 602, 833, 871, 955], "rt": [53, 150, 156, 194, 331, 336, 392, 509, 512, 567, 955], "lock": [53, 132, 133, 166, 182, 188, 194, 231, 234, 259, 270, 277, 326, 331, 336, 337, 507, 524, 550, 601, 616, 619, 632, 635, 704, 882, 935, 955], "vectorview": [53, 88, 132, 133, 146, 196, 209, 317, 319, 320, 324, 328, 333, 334, 336, 342, 381, 387, 388, 402, 406, 428, 460, 503, 504, 550, 553, 592, 597, 608, 613, 646, 659, 670, 689, 731, 827, 833, 851, 903, 951, 955], "induc": [53, 132, 133, 134, 188, 192, 257, 258, 259, 270, 277, 285, 331, 332, 336, 342, 524, 550, 601, 616, 618, 619, 632, 783, 787, 801, 811, 812, 815, 935, 955], "erd": [53, 132, 133, 269, 277, 285, 287, 317, 328, 331, 332, 333, 334, 340, 432, 483, 490, 512, 550, 551, 566, 634, 635, 770, 783, 785, 786, 787, 788, 789, 816, 852, 867, 874, 878, 887, 890, 895, 897, 955], "multitap": [53, 101, 109, 130, 132, 133, 136, 163, 168, 169, 192, 198, 223, 232, 260, 268, 269, 277, 278, 282, 285, 288, 302, 305, 306, 312, 331, 332, 333, 334, 336, 354, 443, 496, 522, 550, 551, 608, 783, 785, 788, 792, 795, 812, 813, 814, 815, 816, 817, 838, 955], "stockwel": [53, 132, 133, 260, 277, 283, 302, 305, 331, 336, 354, 443, 551, 783, 812, 814, 815, 816, 817, 838, 955], "hilbert": [53, 108, 132, 133, 140, 193, 260, 287, 305, 331, 332, 333, 334, 336, 354, 443, 550, 551, 783, 812, 815, 816, 817, 838, 955], "permut": [53, 125, 129, 139, 191, 255, 256, 257, 258, 261, 262, 265, 266, 267, 277, 299, 301, 302, 303, 331, 333, 334, 336, 342, 343, 344, 386, 429, 506, 550, 601, 602, 616, 632, 697, 710, 712, 755, 763, 770, 771, 772, 773, 774, 775, 787, 815, 833, 856, 859, 955], "1d": [53, 125, 129, 144, 212, 237, 331, 336, 350, 354, 547, 548, 550, 589, 632, 646, 659, 670, 679, 697, 770, 771, 773, 774, 838, 876, 955], "fdr": [53, 125, 128, 129, 290, 331, 336, 550, 632, 697, 761, 767, 955], "rer": [53, 125, 129, 331, 333, 334, 336, 422, 524, 550, 632, 769, 955], "p": [53, 73, 77, 84, 86, 123, 124, 125, 127, 128, 129, 139, 182, 186, 198, 215, 229, 252, 255, 256, 257, 259, 260, 263, 264, 265, 270, 277, 280, 281, 285, 289, 291, 309, 316, 320, 323, 330, 331, 332, 333, 334, 336, 342, 422, 522, 524, 545, 550, 551, 613, 632, 635, 646, 740, 743, 745, 761, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 783, 787, 853, 866, 935, 955], "sloreta": [53, 54, 56, 57, 62, 64, 65, 67, 74, 76, 82, 85, 117, 131, 191, 192, 201, 204, 205, 207, 213, 214, 251, 263, 265, 277, 297, 299, 319, 328, 331, 333, 334, 336, 337, 338, 339, 342, 345, 346, 347, 423, 524, 550, 601, 602, 603, 604, 605, 606, 608, 609, 613, 614, 615, 616, 618, 619, 702, 704, 833, 860, 955], "timecours": [53, 59, 62, 68, 82, 328, 329, 331, 333, 334, 335, 336, 342, 346, 355, 359, 364, 370, 524, 526, 550, 596, 601, 602, 604, 613, 689, 691, 692, 702, 717, 784, 787, 796, 815, 833, 955], "dic": [53, 57, 62, 82, 130, 191, 206, 253, 254, 277, 284, 286, 300, 302, 306, 317, 319, 328, 331, 335, 336, 342, 355, 356, 357, 358, 359, 361, 364, 365, 423, 427, 524, 550, 551, 557, 590, 601, 602, 603, 613, 631, 632, 702, 717, 737, 748, 784, 787, 794, 796, 815, 833, 948, 955], "er": [53, 58, 59, 62, 82, 139, 269, 277, 305, 317, 328, 331, 332, 335, 336, 342, 357, 361, 364, 365, 423, 427, 524, 550, 603, 613, 632, 702, 769, 794, 833, 866, 955], "lcmv": [53, 57, 62, 82, 191, 201, 213, 214, 284, 285, 286, 287, 288, 297, 299, 300, 302, 319, 328, 331, 333, 334, 335, 336, 342, 343, 344, 346, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 423, 427, 429, 433, 441, 524, 527, 550, 603, 611, 613, 632, 691, 702, 712, 794, 833, 955], "gamma": [53, 62, 82, 139, 140, 144, 277, 299, 320, 328, 331, 332, 333, 334, 335, 336, 342, 441, 545, 546, 550, 551, 610, 691, 700, 702, 785, 786, 788, 789, 801, 811, 812, 815, 862, 863, 867, 894, 955], "bayesian": [53, 62, 82, 277, 320, 328, 333, 335, 336, 342, 423, 441, 545, 546, 691, 700, 702, 862, 863, 894, 948, 955], "mix": [53, 62, 82, 85, 130, 223, 232, 270, 277, 284, 287, 292, 295, 297, 298, 302, 306, 307, 308, 312, 328, 329, 333, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 364, 365, 429, 517, 528, 545, 546, 547, 548, 559, 566, 589, 597, 601, 602, 613, 635, 668, 691, 700, 702, 705, 710, 712, 731, 732, 738, 739, 740, 741, 742, 743, 744, 745, 775, 778, 833, 862, 863, 878, 893, 894, 898, 955], "mxne": [53, 57, 62, 82, 201, 280, 285, 297, 298, 319, 328, 329, 331, 333, 334, 335, 336, 342, 343, 344, 423, 429, 524, 546, 547, 548, 601, 602, 613, 691, 700, 702, 712, 833, 862, 863, 894, 955], "irmxn": [53, 62, 82, 328, 329, 333, 335, 336, 342, 343, 344, 429, 546, 547, 601, 602, 613, 691, 700, 702, 712, 862, 863, 894, 955], "volumetr": [53, 62, 76, 82, 161, 184, 186, 201, 203, 207, 285, 289, 292, 293, 303, 312, 319, 333, 338, 339, 342, 343, 344, 345, 346, 347, 429, 589, 601, 602, 616, 665, 700, 712, 833, 893, 898, 899, 901, 955], "xfit": [53, 62, 82, 282, 291, 298, 304, 328, 329, 331, 333, 334, 335, 336, 346, 370, 524, 526, 550, 596, 601, 602, 604, 613, 689, 691, 692, 717, 955], "reweight": [53, 62, 66, 82, 277, 328, 331, 333, 334, 335, 342, 423, 524, 546, 547, 548, 702, 894, 955], "tf": [53, 57, 62, 82, 85, 229, 280, 285, 298, 328, 331, 333, 334, 335, 342, 423, 524, 546, 548, 702, 894, 955], "multiscal": [53, 62, 82, 328, 331, 333, 334, 335, 342, 423, 524, 546, 548, 702, 894, 955], "circular": [53, 62, 82, 177, 251, 298, 320, 342, 344, 433, 541, 612, 614, 616, 702, 705, 833, 839, 948, 955], "graph": [53, 62, 82, 144, 277, 298, 342, 344, 433, 612, 614, 616, 702, 705, 753, 754, 755, 756, 757, 758, 759, 833, 839, 955], "spread": [53, 62, 68, 80, 81, 82, 98, 107, 109, 110, 140, 191, 194, 229, 234, 235, 237, 253, 254, 277, 291, 301, 309, 320, 328, 331, 333, 334, 335, 336, 337, 342, 344, 346, 423, 433, 524, 550, 597, 601, 602, 603, 611, 612, 613, 614, 616, 617, 643, 670, 691, 700, 702, 705, 732, 745, 747, 750, 833, 955], "psf": [53, 62, 80, 81, 82, 291, 328, 333, 335, 336, 342, 344, 346, 433, 597, 601, 611, 612, 613, 614, 617, 691, 700, 702, 732, 833, 955], "talk": [53, 62, 82, 186, 229, 237, 257, 281, 286, 291, 301, 310, 319, 328, 331, 333, 335, 336, 342, 355, 365, 366, 423, 433, 441, 504, 524, 601, 611, 612, 613, 614, 617, 632, 645, 659, 670, 691, 700, 702, 833, 955], "rap": [53, 62, 82, 86, 277, 302, 328, 333, 335, 367, 369, 691, 700, 702, 862, 863, 955], "music": [53, 62, 82, 232, 277, 302, 307, 328, 333, 335, 367, 369, 691, 700, 702, 862, 863, 955], "resolut": [53, 56, 62, 70, 73, 74, 76, 82, 141, 147, 149, 172, 182, 183, 184, 202, 239, 240, 257, 258, 277, 283, 285, 291, 295, 303, 304, 310, 316, 319, 320, 324, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 366, 429, 433, 483, 490, 517, 539, 542, 550, 551, 601, 602, 611, 612, 613, 614, 617, 633, 634, 635, 655, 657, 691, 700, 702, 783, 785, 786, 788, 789, 801, 811, 812, 813, 814, 815, 816, 817, 833, 844, 852, 867, 874, 878, 887, 890, 893, 895, 897, 898, 912, 948, 955], "trap": [53, 62, 82, 85, 277, 307, 328, 333, 335, 369, 691, 700, 702, 862, 863, 955], "auto_examples_python": 53, "auto_examples_jupyt": 53, "fname_raw": [54, 55, 88, 130, 131, 183, 208, 236, 273], "fname_ev": [54, 121, 130, 131], "label_nam": [54, 55, 73, 119, 121, 131, 134, 207, 251, 536], "fname_label": [54, 55, 131, 134, 135], "assumpt": [54, 136, 148, 166, 167, 170, 178, 188, 229, 233, 237, 255, 289, 305, 320, 333, 334, 678, 765, 875, 935], "053": [54, 75, 96, 100, 119, 120, 131, 134, 135, 137, 138, 144, 166, 167, 175, 177, 188, 192, 193, 194, 195, 203, 226, 227, 228, 232, 233, 234, 235, 237, 243, 244, 245, 246, 252, 257, 258, 273], "sqrt": [54, 144, 209, 210, 212, 251, 252, 320, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 640, 668, 801, 811, 889, 954], "mean_stc": 54, "flip": [54, 64, 65, 142, 187, 232, 255, 285, 288, 294, 296, 320, 323, 338, 339, 342, 345, 346, 347, 371, 517, 588, 770, 905], "cancel": [54, 107, 206, 229, 237, 316, 320, 338, 339, 342, 345, 346, 347, 504, 517, 670], "label_mean": 54, "label_mean_flip": 54, "stc_evok": 54, "sub": [54, 58, 59, 60, 67, 72, 92, 94, 97, 109, 140, 149, 172, 181, 196, 239, 240, 269, 270, 304, 320, 331, 332, 333, 334, 336, 510, 550, 551, 668, 732, 784, 833, 861, 935, 951], "stc_evoked_label": 54, "in_label": [54, 63, 64, 65, 289, 292, 302, 342, 345, 346, 347], "polar": [54, 73, 168, 234, 857], "label_mean_evok": 54, "1711": [54, 60, 71, 134, 148, 158, 168, 171, 172, 178, 192, 195, 203, 206, 228, 252, 260, 263, 265], "benefit": [54, 71, 72, 81, 85, 98, 154, 198, 217, 277, 310, 316, 617, 644, 743], "1e3": [54, 55, 64, 65, 67, 96, 99, 124, 140, 149, 163, 175, 177, 182, 183, 203, 211, 219, 240, 251, 257, 258, 259, 265], "h0": [54, 123, 127, 255, 256, 257, 258, 259, 263, 264, 265, 770, 771, 772, 773, 774], "h1": [54, 123, 139, 255, 256, 257, 258, 259, 260, 263, 264, 265], "linewidth": [54, 65, 124, 139, 140, 162, 176, 186, 233, 255, 328, 331, 332, 333, 334, 483, 490, 550, 551, 634, 783, 785, 786, 788, 789, 833, 852, 859, 867, 874, 890, 891, 894, 895, 897], "h2": 54, "unflip": 54, "pool": [54, 166, 175, 177, 192, 244, 312, 364, 365, 545, 547, 548, 602, 603, 604, 605, 606, 608, 609, 619], "stc_trial": 54, "_nolegend_": 54, "116": [54, 71, 82, 146, 195, 223, 260, 955], "compute_mne_inverse_epochs_in_label": [54, 82, 955], "smaller": [55, 67, 102, 131, 168, 175, 184, 229, 234, 237, 255, 256, 270, 273, 287, 303, 307, 316, 320, 326, 331, 332, 338, 339, 342, 345, 346, 347, 548, 570, 637, 652, 659, 668, 770, 771, 773, 774, 800, 808, 833, 893, 898], "time_as_index": [55, 66, 110, 166, 175, 201, 243, 287, 298, 329, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 783, 787], "mne_": [55, 56], "s_raw_inverse_": 55, "overwrit": [55, 67, 131, 135, 137, 166, 187, 198, 218, 245, 278, 284, 288, 292, 293, 294, 299, 303, 308, 323, 325, 328, 329, 331, 332, 333, 334, 335, 338, 339, 341, 342, 343, 344, 345, 346, 347, 355, 375, 376, 377, 380, 381, 513, 514, 515, 516, 550, 551, 585, 620, 634, 635, 644, 720, 721, 724, 728, 783, 784, 785, 786, 787, 788, 789, 818, 820, 922, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934], "25800": [55, 71, 95, 98, 106, 109, 119, 120, 130, 131, 134, 137, 138, 145, 151, 172, 182, 188, 193, 194, 198, 208, 226, 230, 231, 233, 234, 235, 243, 246, 251, 252, 257, 258, 259, 273], "192599": [55, 71, 95, 98, 109, 119, 120, 130, 131, 134, 137, 138, 145, 151, 172, 182, 188, 193, 194, 198, 208, 226, 230, 231, 233, 234, 243, 246, 251, 252, 257, 258, 259, 273], "670": [55, 71, 95, 98, 107, 109, 119, 120, 130, 131, 134, 137, 138, 145, 151, 172, 182, 188, 193, 194, 198, 208, 226, 230, 231, 233, 234, 236, 243, 246, 251, 252, 257, 258, 259, 273], "949": [55, 82, 955], "compute_mne_inverse_raw_in_label": [55, 82, 955], "nilearn": [56, 67, 70, 197, 202, 207, 208, 346, 347, 899, 941], "index_img": 56, "plot_stat_map": 56, "vol": [56, 70, 76, 161, 186, 202, 206, 207, 277, 329, 331, 332, 333, 334, 344, 367, 504, 710, 738, 739, 740, 741, 742, 743, 744, 745, 875, 912], "4d": [56, 151, 191, 213, 214, 215, 282, 286, 289, 299, 320, 328, 329, 331, 332, 333, 334, 336, 370, 423, 524, 526, 550, 551, 562, 598, 632, 633, 770, 771, 783, 785, 786, 787, 788, 789, 851, 863, 955], "img": [56, 143, 186, 208, 255, 346, 347], "as_volum": [56, 287, 346, 347], "nib": [56, 70, 182], "s_invers": 56, "gz": [56, 166, 181, 198, 233, 294, 298, 323, 330, 331, 332, 333, 334, 335, 344, 380, 456, 550, 551, 572, 616, 620, 635, 682, 688, 691, 693, 700, 702, 708, 712, 748, 921, 924, 926, 927, 931, 932, 947], "t1_fname": [56, 186, 202], "499": [56, 57, 61, 64, 65, 66, 67, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 105, 112, 113, 143, 146, 147, 168, 169, 175, 194, 198, 202, 204, 205, 207, 258, 259, 273, 274], "11271": [56, 70, 207, 306], "639": [56, 82, 159, 192, 198, 955], "482": [56, 223, 236, 255, 260], "compute_mne_inverse_volum": [56, 82, 955], "plug": [57, 309, 320], "facil": [57, 324], "wmne": [57, 547, 548], "eloreta": [57, 191, 192, 201, 204, 205, 213, 214, 263, 265, 286, 287, 291, 292, 319, 328, 331, 333, 334, 336, 342, 364, 365, 423, 524, 545, 547, 548, 601, 602, 603, 604, 605, 606, 608, 609, 613, 615, 618, 619, 702, 833, 860, 955], "educ": [57, 310], "shall": [57, 170, 228, 309, 310, 333, 334, 507, 635, 751, 835, 870], "develop": [57, 97, 197, 232, 237, 295, 310, 313, 317, 322, 323, 400, 659, 782, 843, 935, 944, 945, 947, 948], "meant": [57, 117, 122, 136, 197, 255, 292, 340, 356, 358, 410, 485, 495, 589, 729, 827, 828, 837], "practic": [57, 98, 126, 141, 177, 186, 194, 228, 229, 235, 237, 270, 277, 309, 310, 312, 319, 320, 337, 364, 507, 635, 644, 704, 710, 769], "apply_solv": 57, "linalg": [57, 110, 182, 186, 211, 233, 282, 287, 427, 769, 935], "ave_fnam": [57, 66, 85, 95, 119], "cov_fnam": [57, 61, 66, 71, 77, 85, 86, 95, 119, 198, 252, 341], "handl": [57, 66, 72, 85, 159, 166, 170, 172, 177, 181, 186, 191, 192, 194, 196, 198, 199, 234, 237, 241, 242, 273, 274, 278, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 298, 300, 303, 304, 306, 307, 308, 309, 326, 331, 332, 333, 334, 336, 411, 510, 524, 550, 551, 629, 632, 635, 670, 727, 834, 843, 852, 855, 857, 868, 879, 883, 920, 955], "365": [57, 66, 67, 71, 85, 107, 195, 223, 236, 277, 337, 342, 423], "auxiliari": [57, 168, 442], "def": [57, 60, 95, 103, 110, 119, 120, 121, 136, 140, 144, 159, 163, 176, 177, 182, 186, 229, 230, 233, 252, 255, 259, 265, 270, 274, 309], "account": [57, 106, 136, 151, 167, 168, 182, 184, 188, 206, 211, 219, 227, 228, 234, 235, 237, 243, 244, 255, 260, 270, 281, 282, 288, 291, 292, 293, 304, 309, 320, 325, 328, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 613, 635, 638, 668, 875, 935], "constraint": [57, 87, 184, 192, 204, 222, 235, 277, 285, 331, 332, 354, 366, 526, 613, 866], "weigth": 57, "formul": [57, 320, 801, 811, 812, 815], "problem": [57, 66, 85, 97, 114, 123, 124, 141, 163, 170, 187, 192, 201, 202, 215, 216, 223, 227, 231, 232, 234, 235, 243, 255, 256, 260, 263, 264, 265, 270, 277, 283, 285, 286, 287, 288, 292, 304, 309, 312, 320, 547, 567, 635, 659, 688, 694, 770, 771, 773, 774, 776, 777, 901, 935, 936, 941], "bia": [57, 66, 97, 110, 167, 177, 210, 229, 263, 265, 269, 277, 280, 292, 293, 299, 304, 320, 328, 333, 334, 364, 365, 429, 496, 545, 547, 548, 613, 668, 804, 869, 874], "callabl": [57, 176, 292, 294, 306, 328, 331, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 350, 380, 382, 408, 434, 483, 486, 490, 493, 500, 512, 550, 551, 605, 634, 635, 650, 718, 749, 750, 762, 769, 770, 771, 773, 774, 783, 785, 786, 787, 788, 789, 831, 833, 848, 852, 859, 866, 867, 869, 874, 878, 887, 890, 893, 895, 896, 897, 898, 916, 918], "boolean": [57, 128, 167, 169, 195, 197, 233, 234, 243, 245, 283, 289, 302, 304, 308, 309, 328, 331, 332, 333, 334, 340, 342, 483, 490, 550, 551, 634, 635, 770, 771, 773, 774, 783, 785, 786, 788, 789, 866, 867, 871, 874, 878, 887, 890, 895, 897, 938], "tangenti": [57, 320, 364, 365, 528, 545, 547, 548, 613], "discret": [57, 71, 131, 184, 202, 223, 235, 268, 277, 285, 289, 295, 300, 304, 306, 310, 330, 331, 332, 333, 334, 344, 490, 528, 545, 547, 548, 550, 551, 596, 613, 732, 783, 785, 787, 788, 797, 803], "coeffici": [57, 128, 136, 167, 172, 184, 222, 229, 231, 280, 284, 285, 287, 293, 487, 489, 495, 501, 518, 519, 520, 547, 548, 634, 645, 646, 659, 670, 681, 685, 737, 746, 747, 768, 769, 785, 786, 788, 789, 798, 800, 803, 804, 808, 876], "privat": [57, 302, 309], "mxne_invers": 57, "_make_sparse_stc": 57, "_prepare_gain": 57, "_reapply_source_weight": 57, "is_fixed_ori": [57, 288], "all_ch_nam": 57, "gain_info": 57, "source_weight": 57, "weights_min": [57, 66, 85, 289, 547, 548], "dot": [57, 105, 113, 139, 146, 152, 170, 176, 186, 201, 204, 208, 211, 217, 222, 227, 234, 238, 240, 263, 265, 273, 274, 306, 307, 309, 320, 329, 333, 334, 338, 342, 346, 769, 863, 869], "n_orient": [57, 338, 339, 342, 345, 346, 347, 517, 617], "active_set": 57, "penal": 57, "strongest": [57, 61, 66, 73, 85, 177], "n_dipol": [57, 77, 86, 95, 119, 120, 184, 329, 338, 339, 342, 345, 346, 347, 367, 369, 503, 611, 612, 614, 749], "depend": [57, 97, 108, 128, 154, 161, 162, 163, 167, 175, 177, 181, 183, 184, 188, 196, 197, 198, 217, 222, 228, 229, 231, 233, 234, 237, 245, 252, 255, 256, 257, 265, 270, 277, 283, 285, 289, 293, 294, 295, 305, 307, 309, 314, 316, 317, 320, 325, 331, 332, 333, 334, 338, 339, 342, 344, 345, 346, 347, 366, 386, 397, 411, 412, 476, 489, 495, 509, 517, 527, 550, 551, 553, 559, 566, 568, 635, 645, 659, 665, 678, 684, 764, 770, 771, 773, 774, 776, 778, 779, 782, 783, 785, 786, 787, 788, 789, 807, 833, 843, 856, 858, 859, 865, 866, 869, 882, 888, 935, 940, 941, 944, 947, 948, 949], "n_active_dipol": 57, "bool": [57, 147, 197, 260, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 388, 389, 390, 391, 392, 394, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 504, 505, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 531, 533, 534, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 675, 677, 678, 679, 682, 683, 684, 685, 689, 690, 691, 692, 693, 694, 696, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 764, 767, 770, 771, 772, 773, 774, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 801, 802, 803, 804, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 828, 832, 833, 835, 839, 842, 843, 844, 848, 849, 851, 852, 853, 854, 856, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 904, 905, 906, 914, 915, 916, 917, 918, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935], "entri": [57, 136, 166, 168, 170, 176, 177, 192, 196, 197, 223, 227, 243, 284, 288, 291, 293, 305, 309, 320, 325, 328, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 353, 382, 410, 411, 412, 413, 414, 415, 483, 490, 493, 505, 515, 518, 548, 549, 550, 551, 553, 602, 610, 634, 635, 650, 728, 732, 734, 735, 736, 748, 763, 783, 785, 786, 787, 788, 789, 833, 835, 844, 852, 853, 865, 866, 867, 870, 871, 874, 878, 887, 888, 890, 893, 894, 895, 897, 898, 944], "x_full": 57, "solv": [57, 85, 187, 201, 312, 320, 483, 567, 635, 688, 694, 769], "dtype": [57, 119, 121, 141, 147, 170, 182, 193, 250, 252, 260, 308, 320, 331, 332, 333, 334, 489, 549, 550, 551], "bgcolor": [57, 61, 66, 72, 85, 119, 182, 186, 204, 550, 551, 843, 854, 888, 894], "542": [57, 82, 223, 260, 955], "custom_inverse_solv": [57, 82, 955], "synchron": [58, 59, 60, 139, 172, 238, 269, 277, 304, 309, 317, 324, 364, 552, 559, 566], "rockhil": [58, 97, 98, 109, 141, 142, 143, 147, 161, 162, 259, 260, 277, 278, 291, 292, 294, 295, 303, 304, 305, 306, 307, 308, 953], "aprockhil": [58, 97, 98, 109, 141, 142, 143, 147, 161, 162, 259, 260], "mailbox": [58, 59, 97, 98, 109, 140, 141, 142, 143, 147, 161, 162, 257, 259, 260, 263, 269, 273], "organ": [58, 98, 259, 260, 277, 310, 317, 644, 773, 774], "_task": [58, 59, 60, 72, 140, 269], "_meg": [58, 59, 60, 72, 140, 198, 269, 289, 294, 323, 550, 551, 572, 573], "5000e": 58, "mostli": [58, 136, 167, 201, 204, 215, 228, 231, 317, 319, 447, 448, 449, 452, 453, 454, 456, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 528, 545, 547, 548, 550, 551, 613, 833], "wavelet": [58, 130, 140, 192, 229, 259, 277, 286, 319, 496, 619, 783, 787, 791, 794, 799, 801, 810, 811, 812, 813, 815, 816], "wish": [58, 170, 197, 217, 235, 250, 256, 257, 263, 309, 310, 432, 550, 551, 659, 834, 837, 949], "epochs_tfr": [58, 359, 606, 796], "return_itc": [58, 139, 141, 192, 257, 258, 259, 260, 269, 814, 815, 816, 817], "buffer": [58, 141, 216, 240, 283, 284, 286, 287, 300, 302, 323, 336, 549, 550, 551, 567, 656, 659, 670, 688, 694], "01_task": [58, 59, 60, 72, 94, 140, 149, 196, 240, 269, 270], "somato_meg": [58, 59, 60, 72, 140, 269], "237600": [58, 59, 60, 72, 140, 269], "506999": [58, 59, 60, 72, 140, 269], "791": [58, 59, 60, 72, 140, 207, 269], "1688": [58, 59, 60, 72, 140, 269], "sti": [58, 59, 60, 68, 71, 72, 75, 96, 98, 99, 100, 106, 117, 120, 121, 122, 126, 134, 135, 137, 140, 166, 167, 168, 172, 175, 178, 188, 192, 194, 195, 198, 203, 206, 208, 215, 223, 227, 230, 231, 232, 234, 240, 244, 251, 252, 257, 268, 269, 278, 280, 284, 319, 324, 524, 525, 550, 551, 568], "014": [58, 59, 60, 68, 71, 72, 75, 88, 96, 98, 99, 100, 106, 117, 120, 121, 122, 126, 134, 135, 137, 140, 155, 166, 167, 168, 172, 175, 178, 188, 192, 194, 195, 198, 203, 206, 208, 215, 223, 227, 230, 231, 232, 234, 240, 244, 251, 252, 257, 268, 269, 278, 280, 284, 324, 524, 525, 550, 551, 568], "9989760657919393": 58, "1052": [58, 59, 60, 222], "0121": [58, 60, 171, 192, 195, 243, 252], "0211": [58, 60, 192, 195, 252], "1331": [58, 60, 171, 195, 228, 236, 252], "2211": [58, 60, 195, 252], "2241": [58, 60, 185, 195, 252], "2521": [58, 60, 166, 175, 195, 252], "1641": [58, 60, 195, 252], "1831": [58, 60, 195, 252], "1921": [58, 60, 195, 252], "1941": [58, 60, 61, 195, 252], "1611": [58, 60, 147, 195, 252], "0441": [58, 60, 195, 252], "1631": [58, 60, 147, 195, 240, 252], "period": [58, 107, 148, 166, 167, 170, 171, 175, 176, 198, 206, 212, 226, 228, 229, 230, 232, 239, 240, 270, 291, 292, 293, 295, 304, 306, 308, 309, 310, 319, 326, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 423, 635, 638, 639, 640, 652, 700, 701, 797, 829, 869], "baseline_csd": 58, "scalar": [58, 167, 186, 206, 252, 292, 294, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 357, 364, 365, 366, 483, 490, 550, 551, 635, 769, 785, 786, 788, 789, 833, 867, 874, 878, 887, 893, 898], "beamfom": 58, "noise_csd": [58, 59, 364], "reduce_rank": [58, 59, 60, 75, 291, 364, 365], "real_filt": [58, 59, 60, 252, 284, 294, 364], "epochs_stc": 58, "return_gener": [58, 131, 358, 359, 362, 517, 604, 606, 609], "nsourc": [58, 78, 335], "epoch_stc": 58, "conj": [58, 141, 364, 365], "apply_baselin": [58, 139, 167, 175, 198, 204, 226, 231, 232, 234, 240, 257, 258, 259, 260, 269, 273, 274, 280, 282, 283, 286, 293, 303, 304, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 783, 787], "8155": [58, 59, 60, 72], "006": [58, 59, 148, 155, 166, 168, 171, 175, 184, 192, 195, 225, 231, 234, 252, 277, 316, 323, 337, 342, 591], "015": [58, 59, 155, 166, 168, 175, 195, 212, 231, 232, 252, 263, 277, 329, 650, 743, 863], "001": [58, 59, 98, 106, 109, 110, 148, 155, 166, 167, 168, 170, 171, 175, 176, 177, 186, 192, 194, 195, 198, 215, 222, 226, 228, 229, 230, 231, 234, 239, 243, 252, 255, 256, 257, 259, 260, 263, 264, 269, 272, 274, 277, 317, 320, 610, 644, 733, 770, 771, 773, 774], "005": [58, 59, 148, 155, 166, 168, 175, 183, 185, 188, 192, 195, 231, 252, 265, 269, 329, 413, 637, 863], "003": [58, 59, 99, 148, 155, 166, 167, 168, 171, 175, 192, 193, 195, 198, 206, 214, 228, 229, 231, 232, 234, 243, 252, 277, 955], "074": 58, "gyri": [58, 121, 181, 184, 251, 277], "border": [58, 64, 85, 131, 143, 154, 181, 207, 291, 292, 304, 306, 328, 331, 332, 333, 334, 340, 483, 490, 509, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 833, 867, 873, 874, 878, 887, 890, 895, 896, 897], "central": [58, 155, 167], "sulcu": 58, "primari": [58, 121, 175, 310, 320], "s1": [58, 575], "m1": [58, 94, 196, 235, 255, 270, 291, 331, 332, 333, 334, 550, 551, 727], "4500": 58, "dorsal": [58, 833], "brain_kwarg": [58, 67, 143, 206, 207, 338, 339, 342, 345, 346, 347, 893, 898], "add_data_kwarg": [58, 161, 207, 338, 339, 342, 345, 346, 347, 893, 898], "fmid": [58, 302, 338, 339, 342, 345, 346, 347, 833, 854, 893, 898, 899, 906], "scale_factor": [58, 61, 74, 75, 76, 85, 203, 339, 345, 347, 380, 833, 885, 894, 898], "colorbar_kwarg": [58, 161, 207, 833], "label_font_s": [58, 161, 207], "688": [58, 235, 236, 242, 260, 955], "33913449": 58, "817": 58, "80202112": 58, "3163": 58, "68479992": 58, "062": [58, 82, 955], "1545": [58, 82, 955], "dics_epoch": [58, 82, 284, 286, 955], "roman": [59, 277, 299, 300, 301, 314], "goj": [59, 277, 299, 300, 301, 314], "appelhoff": [59, 140, 257, 260, 263, 269, 273, 286, 287, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 953], "shorter": [59, 141, 229, 237, 270, 285, 338, 339, 342, 345, 346, 347, 507, 512, 550, 551, 640, 671, 677, 801, 811, 812, 813, 815, 816, 888], "498464098687909": [59, 60], "logspac": [59, 60, 222, 269, 423], "log10": [59, 60, 127, 159, 229, 239, 252, 255, 269, 270, 783], "loss": [59, 97, 228, 233, 320, 331, 332, 333, 334, 486, 493, 513, 514, 515, 516, 550, 551, 765], "csd_baselin": [59, 60], "csd_er": [59, 60], "block": [59, 60, 85, 90, 130, 149, 159, 168, 169, 198, 219, 228, 240, 252, 280, 285, 287, 303, 304, 308, 320, 329, 331, 332, 333, 334, 336, 341, 524, 542, 547, 550, 551, 624, 635, 668, 701, 770, 771, 773, 774, 785, 786, 788, 789, 833, 863, 865, 882, 888, 889, 891, 940], "rather": [59, 60, 87, 166, 167, 172, 175, 182, 192, 193, 194, 196, 197, 204, 215, 223, 228, 234, 235, 239, 243, 255, 259, 263, 268, 278, 284, 286, 287, 288, 291, 292, 294, 303, 304, 305, 306, 307, 308, 309, 310, 312, 316, 317, 319, 320, 331, 332, 335, 338, 339, 342, 345, 346, 347, 490, 550, 551, 600, 608, 609, 619, 669, 775, 778, 833, 853, 888, 940], "entir": [59, 101, 131, 170, 177, 202, 210, 228, 229, 231, 237, 239, 244, 255, 270, 292, 293, 308, 309, 326, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 354, 484, 499, 602, 603, 604, 605, 606, 635, 652, 700, 733, 783], "baseline_source_pow": 59, "beta_source_pow": 59, "messag": [59, 197, 240, 268, 278, 282, 285, 287, 288, 289, 291, 292, 304, 307, 309, 323, 338, 339, 342, 345, 346, 347, 434, 517, 567, 570, 688, 694, 728, 729, 828, 829, 830, 833, 935, 940, 947, 950], "40188307": 59, "5102619": 59, "34636424": 59, "joachim": [59, 206, 252, 277, 357, 364], "gro\u00df": [59, 206, 252, 277, 357, 364], "jan": [59, 206, 252, 277, 291, 292, 295, 303, 307, 316, 357, 364, 365], "kujala": [59, 206, 252, 277, 357, 364, 365], "matti": [59, 66, 80, 81, 84, 85, 86, 154, 188, 204, 206, 237, 252, 277, 279, 301, 304, 314, 320, 342, 357, 364, 369, 547, 548, 602, 613, 617, 646, 651, 670, 740, 745, 935, 948], "h\u00e4m\u00e4l\u00e4inen": [59, 66, 84, 85, 154, 204, 206, 252, 277, 279, 301, 342, 357, 364, 504, 547, 548, 602, 613, 617, 651, 740, 743, 745, 948], "lar": [59, 206, 252, 277, 357, 364], "timmermann": [59, 206, 252, 277, 357, 364], "alfon": [59, 206, 252, 277, 357, 364], "schnitzler": [59, 206, 252, 277, 357, 364], "riitta": [59, 140, 204, 206, 252, 277, 357, 364, 365], "salmelin": [59, 140, 206, 252, 277, 357, 364, 365], "nation": [59, 206, 252, 277, 322, 357, 364, 953], "academi": [59, 206, 252, 277, 357, 364], "694": [59, 206, 252, 260, 277, 357, 364], "699": [59, 166, 177, 206, 252, 260, 277, 357, 364], "2001": [59, 67, 97, 206, 222, 235, 252, 277, 331, 332, 333, 334, 357, 364, 489, 550, 551, 643, 727, 767], "1073": [59, 206, 236, 252, 277, 357, 364], "pna": [59, 206, 252, 277, 357, 364], "227": [59, 82, 177, 195, 255, 259, 260, 277, 317, 459, 955], "167": [59, 86, 156, 157, 195, 255, 277, 369, 955], "dics_source_pow": [59, 82, 284, 286, 955], "luke": [60, 64, 68, 102, 107, 108, 136, 278, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 300, 303, 304, 307, 308, 953], "bloi": [60, 64, 68, 107, 108, 136, 284, 285, 286, 287, 289, 291, 292, 294, 295, 300, 303], "90092": 60, "maxfilt": [60, 215, 237, 278, 284, 293, 297, 302, 336, 419, 420, 421, 504, 550, 551, 608, 609, 618, 619, 645, 646, 659, 670, 734, 735, 736, 748], "conserv": [60, 97, 172, 255, 302, 643, 732, 833], "onc": [60, 69, 70, 87, 97, 121, 147, 159, 161, 168, 169, 170, 171, 176, 177, 192, 194, 195, 196, 198, 203, 207, 226, 227, 229, 231, 232, 233, 234, 240, 243, 245, 273, 283, 288, 294, 300, 304, 309, 310, 316, 320, 324, 325, 331, 332, 333, 334, 343, 349, 445, 518, 519, 521, 522, 550, 551, 654, 668, 813, 816, 856, 888], "advanc": [60, 100, 187, 188, 191, 197, 231, 245, 273, 275, 277, 299, 306, 312, 320, 328, 331, 332, 333, 334, 340, 423, 443, 483, 490, 542, 545, 550, 551, 634, 635, 650, 748, 783, 785, 786, 788, 789, 843, 852, 867, 874, 878, 887, 890, 895, 897, 935, 936, 937, 941, 943, 945], "correctli": [60, 69, 70, 176, 217, 231, 265, 278, 280, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 316, 317, 320, 331, 332, 333, 334, 400, 516, 550, 551, 658, 850, 869, 940, 941, 947], "active_win": 60, "baseline_win": 60, "baseline_cov": 60, "active_cov": 60, "common_cov": 60, "3737": 60, "ref": [60, 88, 94, 151, 177, 289, 293, 309, 323, 833, 851], "ex": [60, 237, 309, 336, 941, 945], "_gen_dic": 60, "stc_base": [60, 68], "stc_act": 60, "_gen_lcmv": 60, "_gen_mn": 60, "stc_dic": 60, "stc_lcmv": 60, "stc_dspm": [60, 66, 85], "19it": [60, 130, 135, 139, 222, 223, 236, 255, 256, 257, 260, 264, 265], "2621": [60, 195, 228, 252], "1121": [60, 195, 252], "0531": [60, 195, 252], "1211": [60, 195, 252], "0431": [60, 195, 252], "0621": [60, 195, 252], "1441": [60, 171, 195, 218, 228, 236, 252], "1821": [60, 195, 252], "0711": [60, 195, 252], "0421": [60, 195, 252], "1911": [60, 195, 252], "1841": [60, 195, 252], "1741": [60, 195, 228, 252, 277], "0411": [60, 195, 252], "2021": [60, 170, 195, 206, 217, 239, 252, 277, 304, 310, 313, 317, 459, 580, 649], "1221": [60, 195, 223, 228, 252], "0641": [60, 195, 252], "2641": [60, 195, 252], "0721": [60, 195, 252], "1131": [60, 195, 223, 252], "1621": [60, 147, 195, 236, 252], "2041": [60, 195, 252], "1021": [60, 195, 252, 277, 331, 332, 333, 334, 550, 551], "1931": [60, 195, 252], "0741": [60, 195, 252], "2611": [60, 195, 222, 228, 252], "2141": [60, 195, 228, 252, 255, 277, 776, 777], "0611": [60, 195, 252], "0921": [60, 195, 252], "0811": [60, 195, 228, 252], "2321": [60, 195, 252], "2231": [60, 195, 252], "1341": [60, 195, 236, 252], "0731": [60, 195, 252], "1541": [60, 195, 228, 236, 252], "1521": [60, 192, 195, 252], "1041": [60, 195, 252], "0221": [60, 192, 195, 252], "0521": [60, 195, 228, 252], "1141": [60, 195, 252], "1231": [60, 195, 223, 252], "1731": [60, 61, 195, 252], "2121": [60, 195, 252], "1431": [60, 195, 228, 252], "2411": [60, 147, 195, 252], "0321": [60, 192, 195, 252], "0941": [60, 195, 252], "2631": [60, 195, 228, 252], "2221": [60, 195, 252], "2421": [60, 147, 195, 228, 252], "0821": [60, 195, 252], "1311": [60, 161, 195, 236, 252], "2131": [60, 195, 228, 252, 255, 277, 776, 777], "2511": [60, 195, 252], "2311": [60, 195, 252], "1811": [60, 147, 176, 195, 243, 252], "1721": [60, 195, 252], "0131": [60, 171, 192, 195, 252], "2331": [60, 195, 252, 629], "1421": [60, 171, 172, 195, 228, 234, 252], "2031": [60, 195, 252], "0311": [60, 192, 195, 252], "0331": [60, 192, 195, 252], "2341": [60, 195, 252], "1011": [60, 195, 252], "1321": [60, 195, 228, 252], "0231": [60, 147, 192, 195, 252], "0931": [60, 195, 252], "2431": [60, 195, 252], "2441": [60, 195, 252], "1241": [60, 195, 252], "0541": [60, 195, 252], "1031": [60, 195, 223, 252], "1411": [60, 171, 172, 195, 228, 234, 252], "1511": [60, 192, 195, 252], "1531": [60, 192, 195, 252, 323], "0141": [60, 195, 228, 252], "0511": [60, 172, 195, 252], "0631": [60, 195, 252], "0341": [60, 195, 252], "2541": [60, 195, 228, 252], "2111": [60, 195, 252], "0111": [60, 171, 192, 195, 228, 234, 243, 252, 717], "0911": [60, 195, 228, 252], "1111": [60, 126, 167, 177, 195, 229, 252, 260, 277, 309, 423, 769, 770, 771, 773, 774], "0241": [60, 195, 252], "planar": [60, 66, 68, 76, 84, 85, 98, 110, 119, 121, 136, 138, 146, 157, 168, 172, 198, 203, 204, 205, 209, 215, 223, 226, 233, 234, 237, 252, 255, 291, 320, 852], "7615": [60, 154, 277, 458], "004172": 60, "17919e": 60, "exp": [60, 66, 68, 76, 84, 85, 117, 119, 121, 136, 203, 204, 205, 208, 218, 223, 234, 252, 255, 364, 365, 527, 545, 547, 548, 613], "37519": 60, "81525e": 60, "brain_dic": 60, "5205929": 60, "6585548": 60, "71744034": 60, "brain_lcmv": 60, "47976501": 60, "58604361": 60, "05052667": 60, "brain_dspm": 60, "71156005": 60, "88777473": 60, "99146759": 60, "569": [60, 82, 175, 223, 260, 955], "evoked_ers_source_pow": [60, 82, 955], "detail": [61, 70, 71, 106, 146, 166, 168, 175, 176, 177, 181, 182, 184, 192, 193, 194, 195, 196, 197, 198, 201, 203, 206, 215, 216, 217, 222, 223, 227, 228, 230, 232, 233, 234, 237, 243, 244, 245, 246, 265, 268, 277, 283, 292, 298, 305, 308, 309, 311, 312, 316, 317, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 491, 493, 494, 496, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 533, 534, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 597, 598, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626, 627, 628, 631, 634, 635, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 677, 678, 679, 682, 683, 684, 685, 687, 689, 690, 691, 692, 693, 694, 696, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 727, 731, 732, 734, 735, 736, 737, 746, 747, 748, 749, 751, 753, 754, 755, 756, 757, 758, 759, 770, 771, 772, 773, 774, 776, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 802, 803, 804, 807, 808, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 828, 832, 833, 835, 842, 850, 851, 852, 859, 860, 863, 866, 867, 868, 869, 870, 873, 874, 875, 877, 878, 879, 880, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 898, 899, 900, 904, 914, 915, 916, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935], "luessi": [61, 73, 131, 277, 279, 290, 296, 297, 298, 299, 300, 301, 302, 314], "mluessi": [61, 73, 131], "nmr": [61, 69, 73, 131, 141, 181, 243, 320, 338, 342, 346, 436, 893], "mgh": [61, 69, 73, 84, 131, 141, 181, 196, 243, 282, 285, 303, 312, 317, 320, 338, 342, 346, 396, 436, 732, 893, 950], "harvard": [61, 69, 73, 84, 131, 141, 181, 320, 322, 338, 342, 346, 436, 893, 953], "daniel": [61, 66, 72, 84, 85, 119, 236, 273, 277, 278, 280, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 314, 342, 547, 548, 953], "strohmeier": [61, 66, 72, 85, 119, 277, 280, 285, 286, 297, 298, 299, 300, 301, 302, 314, 547, 548], "tu": [61, 66, 72, 85, 119], "ilmenau": [61, 66, 72, 85, 119, 322, 953], "de": [61, 66, 72, 85, 119, 126, 139, 222, 223, 240, 270, 277, 280, 291, 303, 306, 307, 312, 316, 322, 489, 635, 650, 953], "evoked_fnam": [61, 77, 86, 117, 122, 331, 332, 333, 334, 550, 551], "50e": [61, 119, 177, 231], "300e": 61, "xyz_same_gamma": [61, 292, 545], "return_residu": [61, 66, 72, 77, 85, 86, 203, 285, 367, 369, 545, 547, 548, 602], "return_as_dipol": [61, 66, 72, 85, 292, 545, 547, 548], "303": [61, 114, 195, 236, 251, 264], "364": [61, 66, 74, 75, 80, 81, 84, 85, 95, 107, 119, 121, 148, 188, 192, 195, 204, 255, 260, 268], "converg": [61, 66, 72, 85, 198, 205, 232, 286, 306, 320, 545, 602, 635, 792, 803], "055e": 61, "22233": 61, "855e": 61, "20712": 61, "375e": 61, "17166": 61, "061e": 61, "12996": 61, "272e": 61, "10107": 61, "574e": 61, "8307": 61, "319e": 61, "7209": 61, "369e": 61, "6342": 61, "631e": 61, "5694": 61, "047e": 61, "5142": 61, "579e": 61, "4692": 61, "199e": 61, "4287": 61, "889e": 61, "4002": [61, 320], "634e": 61, "3696": 61, "422e": 61, "3429": 61, "246e": 61, "3153": 61, "099e": 61, "2952": [61, 188], "747e": 61, "2745": 61, "702e": 61, "2559": 61, "817e": 61, "2394": 61, "062e": 61, "2229": 61, "417e": 61, "2067": 61, "883e": 61, "711e": 61, "1836": 61, "552e": 61, "400e": 61, "1617": 61, "266e": 61, "1509": [61, 222], "166e": 61, "1440": 61, "066e": 61, "1350": 61, "965e": 61, "1245": 61, "861e": 61, "1200": [61, 223, 251], "754e": 61, "1128": 61, "643e": 61, "1077": [61, 84, 277, 342, 617, 743], "529e": 61, "1017": [61, 277], "410e": 61, "975": [61, 260], "288e": 61, "924": 61, "163e": 61, "873": 61, "036e": 61, "837": [61, 171, 260], "906e": 61, "798": [61, 170], "776e": 61, "744": [61, 195, 200, 223, 260, 955], "644e": 61, "705": 61, "513e": 61, "687": [61, 88, 236], "382e": 61, "253e": 61, "627": [61, 260], "125e": 61, "600": [61, 66, 84, 85, 98, 101, 107, 109, 117, 120, 154, 160, 181, 182, 186, 193, 194, 204, 205, 206, 210, 218, 223, 226, 227, 230, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 252, 273, 277, 282, 548, 833], "000e": 61, "588": [61, 223], "877e": 61, "570": [61, 107, 161, 165, 223, 955], "758e": 61, "552": [61, 260], "642e": 61, "528": [61, 169, 204, 223, 236, 260], "495": [61, 108, 250, 260], "421e": 61, "316e": 61, "215e": 61, "118e": 61, "026e": 61, "408": [61, 107, 211, 260], "937e": 61, "853e": 61, "387": [61, 107, 223, 260, 277, 364], "772e": 61, "378": [61, 107, 222, 268, 272, 955], "695e": 61, "348": [61, 139, 195, 223, 229, 260, 272, 282, 955], "622e": 61, "339": [61, 139, 195, 255], "333": [61, 102, 139, 195, 236, 255], "486e": 61, "330": [61, 67, 76, 82, 84, 107, 108, 139, 195, 209, 252, 254, 256, 260, 262, 299, 955], "423e": 61, "312": [61, 195, 223], "306e": 61, "252e": 61, "201e": 61, "152e": 61, "273": [61, 72, 192, 195, 210, 255, 260, 280], "106e": 61, "020e": 61, "807e": 61, "432e": 61, "222": [61, 72, 195, 218, 236, 260, 265], "075e": 61, "735e": 61, "413e": 61, "207": [61, 141, 184, 195, 255, 259, 260, 277], "814e": 61, "198": [61, 178, 180, 195, 210, 222, 259, 260, 265, 955], "536e": 61, "192": [61, 123, 195, 197, 223, 236], "271e": 61, "186": [61, 71, 82, 83, 170, 195, 202, 207, 259, 260, 955], "019e": 61, "779e": 61, "174": [61, 154, 195, 236, 255, 259, 277, 344], "549e": 61, "168": [61, 71, 195, 202, 207, 223, 255, 259, 260, 265], "122e": 61, "159": [61, 141, 175, 187, 190, 195, 255, 259, 955], "922e": 61, "732e": 61, "550e": 61, "138": [61, 86, 188, 190, 192, 195, 197, 236, 255, 259, 277, 300, 344, 640, 955], "896e": 61, "132": [61, 72, 177, 195, 223, 240, 255, 259, 260], "749e": 61, "609e": 61, "345e": 61, "123": [61, 151, 195, 232, 234, 259, 260, 414], "220e": 61, "104": [61, 88, 195, 223, 255, 259, 277, 298, 743], "101e": 61, "117": [61, 88, 171, 195, 255, 259, 277, 281, 814, 817], "986e": 61, "875e": 61, "769e": 61, "667e": 61, "474e": 61, "209e": 61, "127e": 61, "689e": 61, "500e": 61, "441e": 61, "384e": 61, "329e": 61, "275e": 61, "985e": 61, "154": [61, 68, 82, 163, 194, 195, 255, 259, 260, 955], "273e": 61, "247e": 61, "650e": 61, "815e": 61, "524e": 61, "211": [61, 67, 85, 171, 195, 236, 259, 260], "307e": 61, "226": [61, 111, 114, 170, 195, 210, 298, 955], "274e": 61, "042e": 61, "293": [61, 118, 119, 139, 195, 209, 236, 239, 242, 255, 277, 955], "161e": 61, "313": [61, 195, 222, 236, 255, 298], "784e": 61, "340": [61, 77, 107, 108, 139, 151, 195, 218, 255, 260, 277, 299, 367], "169e": 61, "343": [61, 139, 169, 195, 196, 236, 255, 302], "949e": 61, "886e": 61, "420": [61, 107, 223], "857e": 61, "reach": [61, 66, 72, 85, 198, 270, 306, 324, 331, 332, 333, 334, 550, 551, 739, 783, 785, 786, 788, 789, 792, 803, 813, 816, 830, 867, 874, 895], "mri_head_t": [61, 66, 77, 85, 86, 207, 335, 336, 543, 544], "fig_nam": [61, 66, 72, 85, 894], "david": [61, 68, 146, 154, 222, 229, 268, 277, 287, 288, 295, 320, 331, 332, 333, 334, 423, 458, 489, 545, 550, 551, 603, 785, 788, 797, 803, 814, 817, 852], "wipf": [61, 277, 545], "srikantan": [61, 252, 277, 364, 365, 545], "nagarajan": [61, 252, 277, 364, 365, 545], "unifi": [61, 163, 206, 229, 277, 282, 287, 291, 299, 301, 409, 545, 743], "947": [61, 277, 545], "966": [61, 68, 188, 198, 223, 234, 260, 277, 545], "059": [61, 166, 168, 175, 195, 227, 243, 252, 277, 545], "gamma_map_invers": [61, 82, 955], "form": [63, 167, 169, 186, 194, 201, 204, 226, 229, 231, 232, 233, 237, 255, 257, 260, 263, 283, 287, 301, 309, 310, 311, 320, 328, 331, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 347, 403, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 518, 545, 547, 548, 550, 551, 587, 596, 602, 604, 605, 606, 634, 635, 636, 644, 650, 670, 713, 716, 732, 733, 734, 735, 736, 748, 770, 771, 773, 774, 783, 785, 786, 787, 788, 789, 797, 852, 867, 869, 874, 878, 887, 890, 895, 897, 928, 933, 935], "merg": [63, 167, 244, 245, 282, 285, 289, 293, 298, 307, 309, 310, 326, 331, 333, 334, 422, 525, 570, 600, 724, 732], "christian": [63, 147, 154, 160, 170, 277, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 304, 305, 314, 317, 458, 459, 483, 507, 743], "brodbeck": [63, 147, 160, 277, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 293, 294, 297, 298, 299, 300, 301, 302, 305, 314], "christianbrodbeck": [63, 147, 160], "aud_lh": 63, "aud_rh": 63, "stc_lh": [63, 73], "stc_rh": [63, 73], "stc_bh": 63, "calcul": [63, 64, 84, 107, 128, 134, 139, 155, 170, 176, 177, 184, 188, 192, 196, 202, 206, 215, 222, 228, 229, 232, 234, 239, 243, 255, 256, 260, 269, 282, 283, 285, 286, 287, 289, 291, 292, 293, 294, 295, 299, 300, 302, 303, 319, 326, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 364, 365, 372, 386, 423, 427, 428, 439, 440, 441, 483, 490, 491, 518, 526, 527, 540, 545, 547, 548, 550, 551, 591, 596, 597, 598, 613, 635, 642, 647, 648, 652, 659, 670, 674, 690, 700, 712, 748, 762, 770, 771, 773, 774, 776, 777, 784, 797, 804, 875, 880, 889, 935], "mni": [63, 161, 162, 185, 202, 207, 208, 217, 286, 289, 294, 295, 320, 329, 346, 347, 380, 396, 436, 543, 714, 825, 832, 833, 899], "vtx": 63, "t_lh": 63, "center_of_mass": [63, 251, 283, 337, 342, 746, 749, 954], "mni_lh": 63, "t_rh": 63, "mni_rh": 63, "hl": 63, "hr": 63, "hb": 63, "figlegend": 63, "520": [63, 82, 107, 223, 260, 955], "label_activation_from_stc": [63, 82, 955], "typic": [64, 70, 87, 97, 109, 169, 171, 175, 177, 182, 186, 193, 194, 196, 215, 218, 219, 223, 226, 227, 229, 231, 232, 233, 234, 235, 237, 239, 245, 255, 270, 284, 285, 309, 310, 317, 318, 319, 320, 325, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 345, 346, 347, 364, 365, 380, 381, 399, 411, 413, 423, 427, 428, 429, 431, 490, 501, 507, 526, 536, 539, 550, 551, 615, 634, 635, 637, 645, 650, 671, 681, 684, 694, 732, 754, 768, 769, 770, 771, 773, 774, 783, 787, 833, 873, 882, 886, 888, 935, 941, 947], "anatom": [64, 70, 97, 121, 161, 182, 186, 202, 207, 277, 295, 301, 319, 320, 329, 346, 347, 434, 535, 833, 853, 857, 899], "yield": [64, 166, 168, 171, 175, 177, 181, 187, 197, 206, 219, 230, 232, 243, 244, 270, 288, 294, 317, 318, 319, 320, 326, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 386, 500, 504, 635, 638, 645, 646, 659, 670, 696, 735, 736, 775, 801, 811, 813, 816, 833, 935], "peak": [64, 80, 81, 87, 97, 99, 101, 108, 117, 121, 122, 158, 171, 175, 176, 192, 198, 201, 203, 204, 206, 209, 210, 211, 212, 218, 226, 228, 231, 232, 234, 236, 238, 255, 270, 273, 280, 282, 288, 294, 295, 303, 316, 320, 323, 326, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 428, 617, 635, 637, 640, 647, 648, 652, 653, 659, 660, 661, 663, 664, 665, 679, 740, 769, 783, 835, 865, 870, 872, 873, 874], "banksst": [64, 67, 73], "aparc_label_nam": 64, "stc_mean": 64, "grow": [64, 117, 122, 270, 310, 541, 587, 687, 948], "halt": [64, 168, 304, 329, 331, 332, 333, 334, 336, 542, 550, 551, 635, 785, 786, 788, 789, 863, 865, 882, 888, 891, 947], "parc": [64, 67, 73, 705, 930], "aparc": [64, 67, 73, 95, 117, 121, 122, 154, 161, 181, 202, 207, 251, 288, 319, 329, 338, 339, 342, 345, 346, 347, 455, 517, 535, 589, 705, 720, 833], "regexp": [64, 117, 121, 122, 227, 232, 234, 239, 288, 512, 629, 705], "stc_mean_label": 64, "func_label": 64, "maximum": [64, 73, 74, 76, 84, 109, 142, 146, 177, 202, 203, 207, 208, 228, 229, 232, 243, 274, 277, 285, 292, 294, 299, 301, 303, 306, 319, 320, 326, 331, 332, 333, 334, 338, 339, 342, 344, 345, 346, 347, 364, 365, 394, 411, 434, 491, 516, 517, 520, 541, 545, 547, 548, 550, 551, 587, 595, 602, 611, 612, 617, 635, 637, 652, 655, 665, 668, 669, 723, 748, 770, 771, 773, 774, 779, 783, 790, 791, 792, 793, 794, 795, 796, 797, 799, 801, 803, 811, 814, 817, 833, 835, 859, 864, 870, 873, 893, 898, 899, 906], "anat_label": 64, "stc_anat_label": 64, "pca_anat": 64, "pca_flip": [64, 65, 338, 339, 342, 345, 346, 347, 517], "stc_func_label": 64, "pca_func": 64, "show_view": [64, 74, 136, 143, 161, 186, 207, 217, 238, 252, 265, 274, 278, 294, 295, 304, 338, 339, 342, 345, 346, 347, 833, 893, 898], "add_label": [64, 85, 131, 143, 154, 833], "73227205": 64, "80078852": 64, "62750681": 64, "736": [64, 82, 260, 955], "label_from_stc": [64, 82, 955], "strategi": [65, 223, 226, 232, 234, 235, 277, 422, 434, 488, 500, 547, 743, 803, 867, 935], "simpl": [65, 72, 155, 170, 171, 177, 186, 187, 192, 207, 212, 222, 223, 229, 233, 252, 255, 270, 277, 301, 309, 317, 320, 323, 392, 422, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 568, 636, 801, 811, 883], "patheffect": [65, 186], "path_effect": [65, 186], "label_fnam": 65, "stc_label": 65, "mean_flip": [65, 285, 338, 339, 342, 345, 346, 347, 517], "tc": 65, "pe": 65, "stroke": [65, 186], "foreground": [65, 168, 186, 292, 338, 339, 342, 345, 346, 347, 833, 893, 898], "possibl": [65, 69, 71, 141, 163, 166, 168, 169, 171, 175, 176, 177, 182, 186, 187, 194, 195, 196, 197, 198, 204, 206, 215, 217, 219, 223, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 239, 243, 244, 245, 246, 250, 252, 255, 259, 260, 268, 270, 278, 283, 286, 287, 289, 293, 299, 303, 304, 306, 310, 317, 318, 320, 325, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 394, 423, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 500, 506, 524, 534, 542, 550, 551, 559, 576, 635, 636, 655, 677, 678, 696, 697, 727, 765, 770, 772, 783, 784, 788, 789, 819, 835, 851, 861, 869, 870, 873, 878, 881, 882, 889, 906, 907, 935, 938, 940], "stc_vec": [65, 67, 206], "stc_vec_label": 65, "ee6677": [65, 186, 801, 811], "228833": 65, "4477aa": [65, 801, 811], "xyz": [65, 182, 186, 204, 294, 338, 339, 342, 345, 346, 347, 380, 398, 517, 545, 576, 905], "767": [65, 82, 277, 316, 955], "184": [65, 98, 102, 105, 195, 227, 228, 236, 242, 255, 260, 277, 320, 644, 677, 955], "label_source_activ": [65, 82, 955], "ir": 66, "l0": [66, 547], "sparser": [66, 338, 342, 346, 893], "convex": [66, 72, 85, 277, 292, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 852, 867, 874, 878, 887, 890, 895, 897], "sure": [66, 69, 71, 94, 97, 136, 140, 161, 166, 167, 170, 177, 182, 187, 188, 192, 196, 197, 198, 202, 216, 227, 230, 231, 232, 234, 237, 243, 259, 263, 264, 265, 288, 291, 295, 309, 323, 331, 332, 333, 334, 336, 348, 514, 515, 547, 550, 551, 563, 619, 634, 645, 778, 801, 811, 812, 813, 815, 872, 926, 940, 941, 949], "criterion": [66, 282, 285, 602], "n_mxne_it": [66, 547], "use_cp": [66, 119, 184, 251, 285, 286, 291, 320, 339, 345, 347, 351, 352, 433, 602, 603, 604, 605, 606, 609, 613, 618, 619, 747, 748], "maxit": [66, 85, 545, 547, 548], "3000": [66, 75, 140, 163, 168, 171, 172, 219, 228, 234, 239, 323, 547, 548], "active_set_s": [66, 547], "debia": [66, 85, 547, 548], "slower": [66, 70, 72, 229, 309, 312, 326, 331, 432, 482, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 594, 605, 678], "sure_alpha_grid": [66, 547], "083": [66, 152], "tidx": [66, 207], "7262": [66, 84, 85, 121, 204, 223, 252], "020866": [66, 84, 223], "58122e": [66, 84, 85, 121, 204, 223, 252], "element": [66, 84, 117, 194, 198, 204, 205, 208, 218, 219, 223, 229, 233, 234, 243, 245, 255, 257, 277, 288, 309, 310, 319, 325, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 390, 391, 483, 490, 495, 504, 505, 517, 518, 538, 550, 551, 589, 590, 591, 634, 650, 656, 670, 732, 763, 771, 783, 785, 786, 788, 789, 839, 852, 854, 859, 867, 874, 887, 890, 893, 895, 897, 898, 899, 936, 947], "21995": 66, "82623e": 66, "warm": 66, "33333333333333": 66, "66666666666667": 66, "66666666666666": 66, "666666666666664": 66, "60279": 66, "6036917851": 66, "59855": 66, "33381591424": 66, "60434": 66, "8708663271": 66, "60386": 66, "806545232204": 66, "60336": 66, "58240550615": 66, "60303": 66, "83155507343": 66, "60157": 66, "01344242948": 66, "59974": 66, "675255708076": 66, "59597": 66, "869136565314": 66, "59084": 66, "52688073421": 66, "subject_from": [66, 69, 70, 206, 316, 337, 343, 429, 621, 622, 707, 719, 720, 721, 722], "stc_fsaverag": [66, 69, 70, 316], "src_fsaverage_fnam": 66, "src_fsaverag": 66, "matthieu": [66, 85, 277, 547, 548], "kowalski": [66, 85, 277, 547, 548], "acceler": [66, 277, 295, 320, 547, 935, 947], "gradient": [66, 146, 239, 277, 283, 295, 307, 326, 331, 332, 333, 334, 336, 547, 549, 550, 551, 597, 635, 649, 783, 785, 786, 787, 788, 789, 852], "physic": [66, 182, 186, 196, 202, 204, 216, 237, 277, 307, 319, 320, 333, 334, 336, 504, 516, 547, 550, 551, 602, 646, 659, 670, 869], "medicin": [66, 109, 202, 237, 277, 320, 547, 635, 670], "biologi": [66, 109, 202, 237, 277, 320, 547, 635, 670], "1937": [66, 277, 547], "1961": [66, 277, 547], "2012": [66, 85, 177, 195, 229, 255, 277, 313, 337, 342, 349, 423, 547, 548, 776, 777], "0031": [66, 202, 237, 277, 320, 547, 670], "9155": [66, 202, 237, 277, 320, 547, 670], "jen": [66, 72, 85, 277, 286, 287, 547, 548], "haueisen": [66, 72, 85, 277, 547, 548], "improv": [66, 97, 170, 222, 223, 231, 234, 239, 277, 278, 281, 283, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 316, 318, 331, 332, 333, 334, 373, 410, 412, 416, 440, 441, 485, 494, 519, 521, 522, 523, 550, 551, 613, 636, 678, 681, 740, 745, 813, 816, 935], "prni": [66, 72, 277, 548], "t\u00fcbingen": [66, 277], "6858545": [66, 277], "charl": [66, 70, 277, 343, 429, 547], "alban": [66, 277, 547], "deledal": [66, 277, 547], "samuel": [66, 121, 122, 277, 288, 304, 307, 308, 547], "vaiter": [66, 277, 547], "jalal": [66, 277, 547], "fadili": [66, 277, 547], "peyr\u00e9": [66, 277, 547], "stein": [66, 277, 547], "unbias": [66, 277, 547], "risk": [66, 207, 229, 232, 259, 277, 331, 332, 333, 334, 547, 550, 551, 659, 833], "sugar": [66, 277, 547], "siam": [66, 277, 547], "journal": [66, 69, 97, 98, 101, 146, 183, 223, 229, 237, 260, 268, 277, 314, 331, 332, 333, 334, 343, 423, 429, 503, 504, 547, 550, 551, 635, 643, 644, 646, 670, 743, 770, 771, 773, 774, 785, 788, 797, 801, 803, 811, 812, 814, 815, 817, 852], "2448": [66, 277, 547], "2487": [66, 277, 547], "1137": [66, 277, 547], "140968045": [66, 277, 547], "964": [66, 82, 99, 111, 260, 955], "mixed_norm_invers": [66, 82, 955], "annalisa": [67, 284, 286], "pascarella": [67, 284, 286], "iac": 67, "cnr": 67, "dir": [67, 197, 320, 323, 833], "data_dir": [67, 83, 160, 170], "bem_dir": [67, 71, 136, 185, 187, 208], "fname_mixed_src": 67, "fname_aseg": [67, 207], "fname_model": 67, "_audvi": 67, "_audvis_raw": [67, 183], "substructur": 67, "labels_vol": 67, "amygdala": 67, "thalamu": 67, "proper": [67, 97, 255, 270, 283, 285, 292, 302, 303, 307, 309, 312, 317, 332, 333, 334, 337, 364, 365, 423, 427, 428, 434, 439, 440, 441, 443, 483, 490, 526, 527, 545, 547, 548, 551, 613, 846, 875], "stem": [67, 99, 342, 346, 558, 578], "oct6": [67, 136, 184, 316, 323, 338, 342, 346, 722, 731, 893], "oct5": [67, 136, 316], "1026": [67, 136, 316], "bound": [67, 184, 274, 278, 281, 282, 292, 305, 320, 328, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 483, 490, 507, 527, 550, 551, 634, 635, 732, 783, 784, 785, 786, 788, 789, 803, 821, 833, 844, 850, 852, 854, 859, 867, 874, 878, 887, 888, 889, 890, 893, 895, 897, 898, 899, 903, 906], "10mm": 67, "someth": [67, 175, 187, 197, 198, 218, 229, 234, 235, 243, 273, 278, 294, 309, 319, 338, 339, 342, 345, 346, 347, 786, 789, 833, 834, 893, 898, 940, 941, 944, 945, 948], "vol_src": [67, 161, 184], "add_interpol": [67, 76, 184, 732], "usual": [67, 76, 97, 109, 139, 141, 149, 166, 169, 171, 175, 176, 177, 181, 182, 186, 187, 192, 193, 194, 196, 198, 206, 209, 215, 218, 219, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 243, 244, 245, 246, 263, 265, 268, 269, 308, 309, 319, 320, 323, 329, 330, 331, 332, 333, 334, 335, 336, 344, 371, 393, 398, 403, 405, 407, 534, 550, 551, 576, 748, 770, 771, 773, 774, 935, 942, 944, 947, 949], "nuse": [67, 336, 344], "2562": [67, 136, 176, 184, 274, 316], "node": [67, 73, 184, 301, 757, 758, 759, 839], "4590": 67, "2961": 67, "346": [67, 139, 170, 195, 255], "1275": 67, "2615": 67, "1340": 67, "1589": 67, "1372": 67, "1306": [67, 236], "010000": [67, 182], "again": [67, 167, 168, 170, 176, 177, 181, 182, 187, 198, 223, 226, 227, 229, 231, 232, 233, 234, 243, 255, 260, 270, 303, 304, 307, 310, 320, 331, 332, 333, 334, 341, 550, 551, 635, 678, 886, 926, 941], "plot_img": 67, "nipy_spectr": 67, "exist": [67, 70, 126, 128, 166, 169, 175, 176, 182, 187, 196, 197, 198, 202, 206, 228, 229, 230, 233, 234, 235, 245, 250, 255, 257, 273, 274, 285, 286, 287, 288, 289, 291, 292, 295, 299, 300, 303, 309, 310, 312, 316, 317, 323, 325, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 355, 375, 376, 377, 380, 381, 442, 447, 448, 449, 450, 452, 453, 454, 456, 457, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 505, 509, 513, 514, 515, 516, 518, 535, 550, 551, 552, 566, 570, 585, 620, 622, 624, 634, 635, 638, 645, 671, 690, 700, 720, 721, 724, 727, 728, 729, 733, 735, 736, 753, 754, 757, 783, 784, 785, 786, 787, 788, 789, 818, 820, 821, 833, 858, 874, 889, 922, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 938, 949], "5mm": [67, 110, 161, 503, 833], "innerskul": 67, "815": [67, 236], "766": 67, "807": 67, "762": [67, 223, 260], "6003": 67, "inv_method": [67, 117], "a2009": [67, 121, 161, 181, 202, 338, 339, 342, 345, 346, 347, 517, 589, 705], "39266": 67, "01344e": 67, "coron": [67, 161, 184, 186, 206, 329, 833, 853, 863], "silhouett": [67, 206, 207, 294, 338, 339, 342, 345, 346, 347, 833, 893, 898], "43101017": 67, "98225664": 67, "7504814": 67, "45409596": 67, "02821047": 67, "97219252": 67, "vox": [67, 186, 206, 207, 208], "2045": 67, "21567156": 67, "47889133": 67, "39837939": 67, "labels_parc": 67, "label_t": 67, "allow_empti": [67, 338, 339, 342, 345, 346, 347, 517], "nam": [67, 120, 121, 122, 209, 210, 212, 252, 284, 291, 749], "614": [67, 82, 223, 955], "mixed_source_space_invers": [67, 82, 955], "computation": [68, 198, 229, 232, 233, 320, 678], "sabbagh": [68, 277, 287, 603], "pierr": [68, 103, 232, 277, 286, 295, 603, 635], "ablin": [68, 103, 232, 277, 286, 603, 635], "ga\u00ebl": [68, 277, 603], "varoquaux": [68, 277, 603], "state": [68, 117, 120, 136, 154, 166, 188, 192, 194, 201, 226, 227, 234, 235, 244, 255, 270, 277, 280, 287, 302, 309, 310, 312, 319, 320, 324, 326, 331, 332, 418, 507, 547, 567, 587, 594, 603, 635, 668, 687, 688, 693, 694, 735, 736, 737, 746, 747, 749, 770, 771, 772, 773, 774, 783, 785, 786, 787, 833, 878, 940, 949], "2020": [68, 101, 170, 183, 277, 313, 317, 459, 603, 635], "116893": [68, 277, 603], "alexand": [68, 239, 277, 281, 283, 284, 285, 288, 306, 307, 317, 649], "captur": [68, 72, 163, 170, 192, 209, 210, 223, 231, 232, 233, 234, 235, 302, 319, 336, 341, 527, 634, 647, 648, 652, 684, 685], "environ": [68, 69, 70, 181, 198, 201, 274, 292, 294, 304, 305, 307, 316, 320, 329, 337, 338, 339, 341, 342, 344, 345, 346, 347, 371, 375, 376, 377, 380, 429, 434, 435, 436, 442, 447, 448, 449, 450, 452, 453, 454, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 502, 531, 533, 535, 539, 541, 542, 543, 544, 587, 591, 593, 621, 622, 666, 687, 705, 707, 714, 719, 720, 721, 722, 726, 729, 731, 732, 746, 749, 760, 778, 779, 825, 832, 833, 851, 853, 863, 893, 898, 899, 901, 930, 935, 940, 941, 944, 945, 946, 947, 949], "raw_empty_room_fnam": [68, 188], "ernoise_raw": [68, 188, 198, 234], "raw_empty_room": [68, 188], "19800": [68, 188, 198, 234], "85867": [68, 188, 198, 234], "142": [68, 109, 126, 188, 195, 198, 234, 236, 255, 302, 344], "965": [68, 188, 198, 234], "18000": 68, "658": [68, 223], "319": [68, 75, 99, 100, 126, 167, 178, 192, 195, 203, 206, 223, 228, 236, 260, 277, 635], "environment": [68, 192, 226, 230, 233, 235, 237, 243, 245, 246, 316], "rest": [68, 97, 100, 136, 154, 163, 166, 188, 192, 194, 195, 244, 277, 287, 292, 309, 310, 319, 321, 331, 332, 333, 334, 342, 443, 463, 550, 551, 727, 736], "base_cov": 68, "data_cov": [68, 206, 361, 365], "fig_noise_cov": 68, "show_svd": [68, 91, 328, 860], "fig_base_cov": 68, "fig_data_cov": 68, "1680": 68, "_cov": 68, "_kw": 68, "7265": [68, 203, 205], "037795": [68, 203], "52065e": [68, 203, 205], "40105": 68, "62956e": 68, "stc_data": [68, 121, 750], "11870454": 68, "45629497": 68, "03742168": 68, "mne_cov_pow": [68, 82, 955], "pre": [69, 75, 166, 167, 188, 192, 206, 228, 229, 232, 243, 250, 289, 292, 299, 301, 309, 331, 332, 333, 334, 423, 550, 551, 635, 724, 727, 942, 946, 951], "surfer": [69, 181, 320, 338, 342, 346, 436, 833, 893], "fswiki": [69, 181, 320, 338, 342, 346, 436, 893], "surfaceregandtempl": 69, "depict": [69, 320, 333, 334, 339, 345, 347, 875, 898], "success": [69, 170, 309, 323, 331, 332, 338, 339, 342, 343, 345, 346, 347, 429, 548, 611, 612, 668, 733, 770, 771, 773, 774, 785, 786, 787, 800, 808, 823, 856], "inflat": [69, 74, 75, 80, 81, 85, 87, 154, 161, 177, 201, 218, 277, 291, 294, 307, 320, 338, 342, 346, 482, 833, 851, 893, 947], "overlaid": [69, 70, 162, 198, 291, 320, 323, 732], "tommi": [69, 70, 286, 287], "clausner": [69, 70, 286, 287], "sample_dir": [69, 70, 143, 184, 198, 201], "fname_src": [69, 161, 185, 208], "fname_fsaverage_src": 69, "fname_stc": [69, 201, 207, 273], "repres": [69, 97, 101, 107, 142, 146, 166, 167, 168, 169, 170, 175, 177, 182, 184, 187, 188, 192, 194, 195, 196, 197, 201, 216, 222, 229, 232, 246, 277, 287, 298, 303, 309, 316, 319, 320, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 344, 345, 346, 347, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 517, 526, 527, 545, 547, 548, 550, 551, 567, 573, 576, 587, 601, 613, 635, 650, 683, 694, 696, 771, 783, 786, 787, 789, 833, 852, 875, 878, 880, 882, 893, 894, 898, 935], "itself": [69, 97, 169, 177, 186, 198, 215, 229, 232, 233, 234, 245, 255, 308, 309, 320, 325, 331, 332, 337, 342, 345, 375, 516, 550, 551, 622, 833, 935, 940], "proxim": [69, 161, 295, 335, 778], "src_orig": [69, 342, 345], "3732": [69, 201], "3766": 69, "src_to": [69, 70, 206, 291, 292, 293, 429], "argument": [69, 70, 147, 177, 181, 187, 188, 195, 196, 198, 206, 215, 216, 217, 218, 219, 228, 229, 230, 233, 237, 240, 243, 255, 259, 265, 269, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 316, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 387, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 488, 489, 493, 494, 496, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 533, 534, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 589, 590, 591, 592, 593, 594, 596, 597, 598, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626, 627, 628, 630, 631, 635, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 677, 678, 679, 682, 683, 684, 685, 689, 690, 691, 692, 693, 694, 696, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 727, 731, 732, 734, 735, 736, 737, 747, 748, 751, 753, 754, 755, 756, 757, 758, 759, 765, 770, 771, 772, 773, 774, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 802, 803, 804, 807, 808, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 828, 829, 830, 831, 832, 833, 834, 835, 842, 850, 851, 855, 857, 860, 863, 866, 867, 868, 869, 870, 872, 875, 878, 879, 880, 885, 886, 887, 888, 889, 891, 892, 893, 894, 896, 898, 899, 900, 904, 914, 915, 916, 917, 918, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934], "special": [69, 186, 195, 233, 243, 270, 274, 288, 310, 312, 320, 441, 559, 566, 945], "alwai": [69, 100, 169, 170, 175, 177, 186, 193, 194, 195, 201, 217, 226, 228, 229, 230, 231, 232, 233, 234, 235, 243, 250, 255, 270, 278, 280, 287, 289, 291, 293, 294, 295, 302, 305, 307, 308, 309, 319, 320, 329, 331, 332, 336, 338, 339, 341, 342, 344, 345, 346, 347, 386, 507, 517, 584, 635, 659, 700, 702, 770, 784, 842, 853, 863, 864, 894, 896, 905, 927, 938], "10239": 69, "10240": 69, "10241": 69, "give": [69, 70, 85, 97, 101, 122, 168, 178, 187, 194, 197, 206, 208, 223, 227, 229, 230, 233, 255, 285, 293, 309, 310, 316, 319, 320, 323, 328, 331, 332, 333, 334, 336, 340, 344, 380, 483, 484, 485, 490, 494, 499, 500, 504, 519, 521, 522, 526, 547, 548, 550, 551, 567, 634, 635, 650, 659, 670, 688, 694, 769, 770, 771, 773, 774, 782, 783, 785, 786, 788, 789, 797, 801, 811, 833, 852, 859, 867, 869, 871, 874, 875, 878, 885, 887, 889, 890, 891, 895, 897, 935, 940, 947], "surfer_kwarg": [69, 201, 203], "brain_inf": 69, "under": [69, 70, 87, 169, 170, 188, 216, 223, 226, 229, 233, 251, 255, 257, 263, 273, 278, 282, 285, 295, 304, 308, 309, 310, 312, 316, 320, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 380, 392, 423, 424, 426, 428, 447, 448, 449, 450, 452, 453, 454, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 486, 493, 496, 499, 500, 526, 539, 541, 550, 551, 563, 571, 593, 596, 597, 608, 609, 618, 619, 640, 647, 648, 650, 678, 695, 699, 731, 732, 734, 735, 736, 744, 748, 768, 770, 771, 772, 773, 774, 785, 788, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 814, 815, 816, 835, 867, 870, 889, 946], "h5": [69, 70, 198, 206, 252, 287, 292, 335, 338, 339, 341, 342, 343, 345, 346, 347, 355, 634, 680, 702, 783, 784, 787, 805, 807, 818, 922, 923, 927], "respect": [69, 70, 73, 81, 95, 98, 117, 158, 166, 170, 177, 182, 185, 194, 195, 198, 201, 215, 223, 227, 229, 232, 233, 235, 236, 243, 244, 260, 278, 288, 289, 292, 293, 294, 295, 303, 304, 305, 306, 307, 309, 316, 320, 326, 328, 331, 332, 333, 334, 340, 341, 342, 346, 347, 364, 365, 366, 403, 423, 427, 428, 434, 439, 440, 441, 483, 485, 490, 494, 507, 519, 521, 526, 527, 545, 547, 548, 550, 551, 557, 576, 587, 590, 598, 613, 634, 635, 636, 637, 639, 650, 652, 688, 696, 732, 740, 743, 745, 751, 771, 783, 785, 786, 788, 789, 804, 812, 813, 815, 816, 833, 835, 851, 852, 856, 859, 865, 867, 869, 870, 874, 875, 878, 879, 882, 887, 888, 890, 895, 897, 899, 935, 944, 947], "my": [69, 70, 198, 208, 250], "further": [69, 167, 177, 183, 192, 194, 204, 215, 223, 228, 232, 234, 237, 243, 255, 260, 265, 270, 293, 304, 310, 318, 320, 331, 332, 356, 358, 388, 434, 635, 639, 770, 771, 773, 774, 787, 850, 866, 951], "assign": [69, 71, 128, 130, 147, 162, 166, 169, 170, 177, 187, 194, 196, 201, 204, 215, 216, 219, 234, 237, 244, 250, 281, 286, 292, 303, 304, 316, 320, 325, 331, 336, 341, 344, 541, 559, 563, 566, 568, 574, 576, 587, 596, 635, 652, 653, 660, 661, 663, 664, 692, 726, 833, 857, 930], "chain": [69, 193, 223, 227, 243, 318, 320, 489], "handi": [69, 217, 232, 274], "liner": 69, "shortest": [69, 182, 229, 331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551, 640], "dougla": [69, 277, 343, 429], "greve": [69, 277, 343, 429], "lise": [69, 277, 343, 429], "der": [69, 277, 287, 292, 320, 343, 429], "haegen": [69, 277, 343, 429], "qing": [69, 277, 343, 429], "cai": [69, 277, 343, 429], "steven": [69, 84, 154, 170, 177, 229, 277, 287, 292, 294, 317, 342, 343, 429, 483, 613, 740, 745], "stufflebeam": [69, 84, 154, 277, 342, 343, 429, 613, 617, 740, 743, 745], "mert": [69, 277, 343, 429], "sabuncu": [69, 277, 343, 429], "bruce": [69, 121, 181, 277, 320, 343, 429, 602], "fischl": [69, 121, 181, 277, 320, 343, 429, 602], "marc": [69, 277, 343, 429], "brysbaert": [69, 277, 343, 429], "languag": [69, 177, 198, 229, 259, 265, 277, 288, 328, 331, 332, 333, 334, 340, 341, 343, 429, 483, 490, 550, 551, 634, 635, 783, 785, 786, 788, 789, 867, 874, 878, 887, 890, 895, 937, 945], "asymmetri": [69, 277, 343, 429], "1477": [69, 277, 343, 429], "1492": [69, 236, 277, 316, 343, 429], "1162": [69, 236, 277, 343, 429, 635], "jocn_a_00405": [69, 277, 343, 429], "423": [69, 82, 223, 954, 955], "morph_surface_stc": [69, 82, 955], "symmetr": [70, 229, 277, 295, 306, 331, 332, 333, 334, 338, 339, 342, 343, 345, 346, 347, 429, 518, 519, 521, 522, 550, 551, 667, 770, 771, 773, 774, 784, 797, 821, 822, 823, 833, 854, 893, 898, 899], "diffeomorph": [70, 277, 295, 343, 429, 667, 821, 822, 823], "sdr": [70, 206, 292, 343, 429, 667, 821, 822, 823], "afterward": [70, 175, 293, 304, 331, 332, 333, 334, 550, 551, 727, 747], "nibabel": [70, 182, 186, 197, 208, 304, 309, 320, 344, 543, 544, 665, 833, 941], "plot_glass_brain": [70, 208], "sample_dir_raw": [70, 201], "fname_t1_fsaverag": 70, "ensur": [70, 71, 109, 139, 170, 175, 185, 187, 188, 206, 229, 230, 233, 235, 237, 238, 252, 283, 289, 291, 293, 294, 295, 309, 310, 312, 320, 328, 331, 332, 333, 334, 336, 337, 338, 339, 342, 345, 346, 347, 388, 410, 423, 517, 518, 550, 551, 552, 570, 599, 626, 627, 628, 638, 670, 671, 702, 783, 784, 785, 786, 787, 788, 789, 801, 802, 811, 828, 940, 949], "fname_src_fsaverag": 70, "root": [70, 108, 161, 162, 175, 176, 177, 185, 198, 206, 217, 252, 283, 291, 309, 320, 328, 333, 334, 338, 339, 342, 345, 346, 347, 364, 365, 450, 456, 475, 860, 869], "txt": [70, 161, 185, 206, 209, 244, 245, 287, 298, 309, 325, 398, 407, 456, 554, 558, 576, 688, 696, 697, 925, 935], "zoom": [70, 97, 177, 186, 206, 232, 234, 274, 293, 294, 303, 343, 429, 823], "reslic": [70, 206, 429, 823], "isotrop": [70, 320], "niter_affin": [70, 206, 295, 343, 429], "niter_sdr": [70, 206, 295, 343, 429], "999999888241291": 70, "translat": [70, 161, 182, 186, 206, 212, 216, 237, 263, 281, 286, 323, 331, 332, 333, 334, 419, 434, 483, 490, 504, 562, 635, 639, 670, 783, 823, 833, 851, 866, 871, 874, 879, 882], "optim": [70, 85, 108, 168, 183, 186, 188, 205, 206, 228, 229, 232, 237, 255, 263, 264, 265, 277, 287, 292, 295, 299, 319, 333, 334, 337, 423, 483, 526, 547, 550, 551, 635, 645, 670, 760, 814, 817, 823, 935], "r\u00b2": [70, 206], "rigid": [70, 206, 239, 823], "compute_vol_morph_mat": [70, 293, 343, 429], "equival": [70, 161, 167, 176, 182, 184, 186, 188, 191, 197, 213, 214, 216, 229, 232, 235, 251, 255, 268, 280, 283, 305, 309, 312, 316, 319, 320, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 345, 346, 347, 364, 365, 380, 422, 483, 489, 490, 523, 526, 527, 545, 547, 548, 550, 551, 596, 602, 613, 634, 635, 638, 640, 650, 659, 700, 729, 747, 770, 783, 785, 786, 788, 789, 801, 811, 815, 816, 823, 833, 851, 852, 859, 865, 867, 869, 871, 874, 875, 878, 885, 887, 889, 890, 891, 893, 895, 897, 898, 935, 938, 955], "reus": [70, 101, 163, 320, 333, 334, 783, 871], "exce": [70, 255, 291, 326, 331, 332, 333, 334, 410, 412, 483, 490, 550, 551, 637, 640, 652, 770, 812, 815, 874, 888], "thousand": [70, 128, 233, 256, 277, 294, 317, 429, 464], "nifti1": [70, 343, 346, 347], "img_fsaverag": 70, "t1_fsaverag": 70, "plot_anat": [70, 202], "draw_cross": 70, "overlai": [70, 181, 186, 198, 206, 232, 284, 333, 334, 338, 339, 342, 345, 346, 347, 635, 833, 835, 870, 879, 893, 898], "add_overlai": [70, 833], "brian": [70, 222, 277, 320, 343, 429, 489], "avant": [70, 277, 343, 429], "epstein": [70, 277, 343, 429], "murrai": [70, 177, 277, 343, 429], "grossman": [70, 277, 343, 429], "jame": [70, 229, 277, 343, 429], "gee": [70, 277, 343, 429], "autom": [70, 109, 140, 148, 170, 182, 188, 189, 190, 191, 192, 197, 226, 227, 228, 231, 232, 237, 277, 287, 288, 289, 299, 300, 301, 302, 312, 320, 323, 333, 334, 336, 343, 423, 429, 434, 459, 556, 721, 730, 851, 875, 903, 935, 949, 955], "elderli": [70, 277, 343, 429], "neurodegen": [70, 277, 343, 429], "medic": [70, 85, 233, 234, 277, 320, 322, 343, 429, 547, 548, 602, 953], "media": [70, 277, 343, 429], "2007": [70, 206, 260, 277, 343, 429, 545, 635, 770, 771, 773, 774, 814, 817], "933": [70, 82, 260, 955], "795": [70, 170], "morph_volume_stc": [70, 82, 955], "megin": [71, 182, 278, 289, 670], "program": [71, 177, 187, 198, 309, 320, 323, 329, 331, 332, 333, 334, 336, 341, 375, 542, 550, 551, 635, 785, 786, 788, 789, 863, 865, 882, 888, 891, 937, 945, 947, 948], "offer": [71, 207, 223, 229, 235, 252, 255, 256, 288, 309, 312, 324, 325, 833, 938, 946], "guid": [71, 181, 294, 310, 311, 321, 336, 940, 945], "ecd": [71, 191, 213, 214, 304, 319, 329, 330, 333, 334, 335, 336, 346, 422, 526, 596, 700, 747, 955], "manual": [71, 109, 147, 163, 168, 175, 177, 182, 183, 186, 187, 188, 198, 208, 215, 217, 219, 226, 227, 228, 230, 233, 237, 273, 277, 283, 286, 288, 292, 303, 304, 317, 320, 324, 327, 336, 337, 386, 396, 423, 445, 504, 518, 635, 645, 646, 659, 670, 671, 723, 935, 947], "advantag": [71, 140, 163, 176, 177, 193, 194, 229, 231, 232, 235, 239, 255, 270, 940, 949], "graphic": [71, 181, 216, 288, 292, 302, 309, 317, 331, 332, 341, 550, 551, 635, 865, 882, 888, 940, 945, 947, 948], "everyth": [71, 131, 139, 161, 185, 186, 195, 204, 208, 218, 229, 243, 273, 309, 317, 318, 333, 334, 873, 935, 940, 943], "audvi": [71, 317], "evoked_left": [71, 238], "evoked_right": [71, 238], "09989760657919393": [71, 88], "80m": 71, "picks_left": 71, "evoked_fit_left": 71, "cov_fit_left": 71, "picks_right": 71, "evoked_fit_right": 71, "cov_fit_right": 71, "sss": [71, 188, 191, 226, 236, 241, 242, 281, 287, 292, 294, 295, 320, 331, 332, 333, 334, 336, 410, 412, 416, 417, 420, 441, 504, 550, 551, 572, 635, 646, 659, 670, 700, 865, 869, 877, 888, 935, 955], "normalize_proj": [71, 282, 336], "dip_left": 71, "dip_right": 71, "38720": [71, 208], "354": [71, 107, 139, 195, 202, 207, 222, 236, 260], "195": [71, 192, 195, 202, 207, 212, 259, 260, 277], "9828": [71, 295], "112": [71, 97, 142, 195, 197, 202, 223, 255, 260, 277, 643], "9733": 71, "prevent": [71, 97, 147, 227, 237, 281, 283, 285, 291, 292, 295, 303, 304, 305, 306, 323, 587, 640, 665, 670, 748], "lambda": [71, 94, 127, 139, 171, 223, 238, 251, 270, 320, 328, 331, 332, 333, 334, 340, 382, 483, 490, 550, 551, 610, 634, 635, 650, 749, 783, 785, 786, 788, 789, 852, 859, 866, 874, 878, 887, 890, 895], "fulli": [71, 101, 198, 228, 230, 255, 259, 280, 285, 312, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 388, 550, 551, 552, 764, 833, 854, 893, 898, 899], "stc_left": 71, "stc_right": 71, "sharei": [71, 100, 140, 141, 222, 234, 270], "supylabel": 71, "meter": [71, 107, 120, 121, 177, 182, 183, 186, 196, 202, 208, 219, 234, 240, 250, 283, 306, 320, 323, 328, 329, 331, 332, 333, 334, 336, 337, 340, 349, 380, 396, 405, 434, 483, 490, 504, 550, 551, 567, 576, 593, 634, 635, 639, 644, 645, 646, 650, 655, 657, 659, 670, 675, 676, 683, 694, 704, 732, 778, 783, 785, 786, 788, 789, 833, 852, 859, 863, 867, 869, 871, 874, 875, 878, 885, 887, 889, 890, 891, 895, 897], "kb": [71, 76, 163, 169, 202, 207, 235, 250], "7064": 71, "97954e": 71, "stcs_left": 71, "stcs_right": 71, "90m": 71, "amplitudes_left": 71, "amplitudes_right": 71, "vstack": [71, 142, 162, 167, 210, 252], "ampltud": 71, "n_left": 71, "mean_left": 71, "mean_right": 71, "transition_point": 71, "c0": [71, 177, 233], "c1": [71, 97, 139, 177, 233], "text": [71, 95, 161, 168, 177, 186, 203, 209, 215, 216, 218, 219, 229, 230, 233, 234, 244, 245, 255, 270, 273, 283, 291, 292, 308, 309, 316, 320, 323, 331, 332, 344, 400, 550, 551, 576, 697, 748, 833, 925, 945], "409": [71, 82, 107, 146, 222, 236, 260, 277, 852, 955], "652": [71, 82, 170, 955], "multi_dipole_model": [71, 82, 955], "promot": [72, 85], "focal": [72, 85, 109, 206, 292, 635, 833, 903], "assum": [72, 85, 90, 120, 121, 142, 151, 161, 167, 170, 177, 184, 186, 191, 198, 208, 215, 216, 219, 228, 229, 232, 239, 245, 255, 257, 259, 270, 294, 295, 305, 308, 309, 319, 320, 323, 325, 328, 329, 331, 332, 333, 334, 336, 337, 340, 344, 364, 365, 371, 372, 375, 380, 393, 405, 423, 427, 428, 434, 439, 440, 441, 443, 483, 490, 502, 510, 518, 524, 525, 526, 527, 533, 545, 547, 548, 550, 551, 558, 559, 566, 582, 593, 597, 605, 613, 634, 635, 649, 650, 690, 697, 716, 719, 721, 732, 748, 770, 771, 773, 774, 777, 778, 783, 785, 786, 787, 788, 789, 821, 833, 851, 852, 859, 867, 869, 871, 874, 875, 876, 877, 878, 885, 887, 889, 890, 891, 895, 897, 928, 938, 949], "stationar": [72, 85, 522, 550, 551], "properti": [72, 85, 101, 128, 141, 169, 187, 198, 216, 222, 227, 232, 233, 243, 246, 273, 283, 284, 287, 288, 291, 292, 293, 306, 324, 325, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 370, 434, 482, 550, 551, 601, 621, 635, 652, 653, 671, 733, 748, 765, 783, 784, 785, 786, 787, 788, 789, 820, 833, 836, 854, 863, 865, 869, 875, 876, 878, 880, 888, 893, 898, 899, 906, 907, 908, 909, 910, 911, 912, 938], "bias": [72, 97, 177, 192, 206, 227, 229, 234, 240, 259, 277, 291, 527], "short": [72, 85, 92, 108, 130, 139, 141, 162, 163, 166, 186, 194, 198, 226, 229, 233, 234, 236, 238, 245, 256, 268, 270, 273, 277, 280, 282, 283, 295, 299, 309, 317, 319, 320, 321, 331, 332, 333, 334, 550, 551, 568, 675, 678, 785, 788, 790, 793, 800, 801, 804, 808, 811], "transient": [72, 108, 226, 237, 270, 640], "mathurin": [72, 277, 284, 285, 286, 291], "massia": [72, 277, 284, 285, 286, 291], "yousra": [72, 77, 120, 154, 277, 280, 282, 285, 299, 300, 302, 547, 548], "bekhti": [72, 77, 120, 154, 277, 280, 282, 285, 299, 300, 302, 547, 548], "350e": [72, 140, 269], "49948803289596966": 72, "301": [72, 141, 195, 218, 236, 240, 255, 260, 268], "16610": 72, "multidict": 72, "l1_ratio": [72, 85, 286, 548], "wsize": [72, 85, 548, 800, 808, 809], "n_tfmxne_it": [72, 548], "dgap": [72, 85], "89e": 72, "p_obj": [72, 85], "289": [72, 175, 190, 195, 222, 236, 259, 260, 277, 489, 635], "000835": 72, "d_obj": [72, 85], "190": [72, 85, 102, 107, 143, 195, 210, 212, 255, 260, 277, 770, 771, 773, 774], "083203": 72, "n_activ": [72, 85, 237, 417], "247": [72, 195, 236, 239, 259, 260, 277, 317], "27e": 72, "253": [72, 195, 236, 255, 260, 277], "327890": 72, "582652": 72, "53e": 72, "707285": 72, "246": [72, 195, 206, 236, 255, 277], "182101": 72, "18e": 72, "589468": 72, "408712": 72, "82e": 72, "243688": 72, "248": [72, 151, 195, 203, 214, 238, 255, 955], "420556": 72, "67e": [72, 85], "094971": 72, "57e": 72, "991067": 72, "49e": [72, 85], "936498": 72, "442467": 72, "08e": 72, "906871": 72, "829870": 72, "70e": 72, "887205": 72, "017223": 72, "24e": 72, "872107": 72, "148583": 72, "11e": 72, "762424": 72, "94e": 72, "854012": 72, "259629": 72, "659": [72, 181, 190, 194, 955], "867870": 72, "46e": 72, "043596": 72, "270": [72, 107, 180, 195, 218, 255, 280], "587841": 72, "87e": 72, "274": [72, 107, 108, 151, 192, 195, 218, 236, 260], "722230": 72, "272": [72, 146, 155, 156, 195, 197, 236, 255, 260, 277, 740, 745, 955], "856399": 72, "29e": 72, "678013": 72, "849283": 72, "335": [72, 136, 139, 195, 236, 255, 277, 320], "966495": 72, "73e": 72, "239": [72, 95, 107, 108, 184, 195, 218, 230, 236, 259, 260], "215341": 72, "236": [72, 195, 223, 236, 255, 259, 262, 955], "481796": 72, "17e": 72, "095509": 72, "238": [72, 195, 236, 255, 256, 259], "178504": 72, "77e": 72, "068507": 72, "591286": 72, "298": [72, 102, 195, 223, 255, 260, 655, 657], "546285": 72, "06e": 72, "223": [72, 192, 195, 200, 236, 255, 259, 955], "133013": 72, "826666": 72, "295": [72, 139, 195, 222, 236, 260], "194637": 72, "debias": [72, 85], "d0": [72, 85], "235946e": 72, "000000e": [72, 85], "irtf": 72, "2015": [72, 98, 126, 128, 140, 148, 188, 229, 232, 256, 270, 277, 313, 317, 333, 334, 423, 459, 464, 503, 644, 769, 814, 817, 875, 935], "intern": [72, 97, 98, 109, 159, 162, 186, 194, 196, 209, 217, 219, 227, 234, 237, 257, 273, 277, 278, 281, 288, 292, 309, 331, 332, 333, 334, 380, 423, 428, 434, 460, 483, 504, 550, 551, 566, 572, 632, 635, 643, 644, 645, 646, 659, 670, 700, 769, 770, 783, 784, 785, 786, 787, 788, 789, 833, 881], "workshop": [72, 277, 483], "roland": [72, 277, 548], "badeau": [72, 277, 548], "trento": [72, 277, 548], "7552337": [72, 277, 548], "077": [72, 82, 140, 955], "multidict_reweighted_tfmxn": [72, 82, 955], "plane": [73, 182, 196, 233, 257, 260, 269, 319, 320, 503, 736, 813, 816, 853], "olaf": [73, 74, 75, 76, 80, 81, 128, 277, 291, 292, 293, 301, 305, 617, 740, 745], "hauk": [73, 74, 75, 76, 80, 81, 128, 277, 291, 292, 293, 301, 305, 617, 740, 745], "mrc": [73, 74, 75, 76, 80, 81, 320], "cbu": [73, 74, 75, 76, 80, 81, 320], "cam": [73, 74, 75, 76, 80, 81, 320], "ac": [73, 74, 75, 76, 80, 81, 217, 226, 230, 277, 319, 320, 423, 441], "uk": [73, 74, 75, 76, 80, 81, 277, 320, 423], "rougier": 73, "borrow": [73, 259, 265], "hi": [73, 323], "plot_connectivity_circl": [73, 857], "rm_mne": [73, 80], "n_label": [73, 251, 338, 339, 342, 345, 346, 347, 517, 589, 618, 619, 750], "label_color": [73, 536], "lh_label": [73, 833], "endswith": [73, 196], "label_ypo": 73, "ypo": 73, "yp": 73, "rh_label": [73, 833], "summaris": [73, 239], "five": [73, 168, 176, 197, 209, 236, 246, 277, 320, 410, 550, 551, 635, 812, 815, 833, 880], "princip": [73, 232, 233, 277, 281, 320, 337, 423, 635, 760], "probabl": [73, 97, 191, 215, 226, 227, 228, 229, 232, 233, 255, 257, 260, 270, 309, 320, 493, 512, 550, 551, 563, 833, 892, 947, 948], "n_comp": [73, 611, 612], "stcs_psf_mne": 73, "pca_vars_mn": 73, "return_pca_var": [73, 611, 612], "n_vert": 73, "printopt": 73, "caudalanteriorcingul": 73, "caudalmiddlefront": [73, 117, 122, 161], "cuneu": [73, 833], "entorhin": 73, "frontalpol": 73, "fusiform": 73, "inferiorpariet": [73, 251], "inferiortempor": 73, "insula": 73, "isthmuscingul": 73, "lateraloccipit": 73, "lateralorbitofront": 73, "lingual": 73, "medialorbitofront": 73, "middletempor": 73, "paracentr": 73, "parahippocamp": [73, 95], "parsoperculari": 73, "parsorbitali": 73, "parstriangulari": 73, "pericalcarin": 73, "postcentr": [73, 95], "posteriorcingul": 73, "precentr": [73, 161], "precuneu": 73, "rostralanteriorcingul": 73, "rostralmiddlefront": [73, 251], "superiorfront": [73, 161], "superiorpariet": 73, "superiortempor": 73, "supramargin": 73, "temporalpol": 73, "transversetempor": [73, 251], "overal": [73, 234, 257, 263, 264, 273, 294, 310, 548], "bigger": [73, 107, 264, 273, 550, 551], "leaker": 73, "psfs_mat": 73, "pearson": [73, 229, 232, 277, 330, 331, 332, 333, 334, 635, 783, 787], "arbitrari": [73, 142, 186, 191, 192, 193, 197, 219, 229, 250, 253, 257, 260, 285, 287, 291, 301, 302, 304, 310, 320, 328, 330, 331, 332, 333, 334, 340, 483, 490, 550, 551, 568, 635, 653, 661, 770, 771, 773, 774, 783, 785, 786, 787, 788, 789, 867, 874, 881, 887, 895], "absolut": [73, 87, 108, 112, 151, 161, 177, 205, 216, 255, 291, 303, 309, 319, 326, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 427, 483, 550, 551, 554, 611, 612, 617, 635, 652, 682, 732, 744, 776, 783, 787, 853, 859, 879, 899, 947], "leakage_mn": 73, "node_ord": [73, 839], "mirror": [73, 94, 97, 196, 292, 312, 331, 332, 333, 334, 338, 342, 346, 347, 521, 522, 523, 550, 551, 850, 854, 893, 899], "node_angl": [73, 839], "start_po": [73, 839], "group_boundari": [73, 839], "subplot_kw": 73, "n_line": 73, "node_color": 73, "neighbour": [73, 291, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 867, 874, 878, 887, 890, 895, 897], "deeper": [73, 80, 81, 206, 320], "versu": [73, 167, 177, 192, 244, 252, 366, 949], "fname_fig": 73, "plot_label_leakag": 73, "savefig": [73, 142], "inde": [73, 97, 167, 194, 201, 233, 234, 270], "max_val": 73, "brain_lh": 73, "caudal": [73, 117, 122, 833], "pos_lim": [73, 80, 81, 206, 251, 263, 338, 339, 342, 345, 346, 347, 854, 893, 898, 899], "brain_rh": 73, "209": [73, 82, 118, 195, 210, 229, 236, 260, 277, 955], "585": [73, 223, 277], "psf_ctf_label_leakag": [73, 82, 955], "fname_evo": [74, 75, 76, 80, 81, 91], "regularis": [74, 80, 81, 614], "rm_lor": 74, "stc_psf": 74, "stc_ctf": 74, "31738": [74, 80, 81], "68644e": [74, 80, 81], "vertno_lh": 74, "verttru": [74, 75], "maxima": [74, 171, 303, 333, 334, 679, 872, 874], "vert_max_psf": 74, "vert_max_ctf": 74, "brain_psf": 74, "ventral": [74, 833], "add_foci": [74, 75, 76, 186, 201, 203, 252, 303, 833], "coords_as_vert": [74, 75, 76, 201, 203, 252, 833], "22842778": 74, "2956258": 74, "85246681": 74, "brain_ctf": 74, "10932369": 74, "16149934": 74, "93351158": 74, "439": [74, 75, 236, 260, 518], "psf_ctf_vertic": [74, 82, 955], "vi": [75, 176, 260, 331, 859], "cov_pr": 75, "post": [75, 147, 206, 229, 234, 237, 309, 310, 311, 319, 935, 947, 948], "cov_post": 75, "4433": 75, "filters_pr": 75, "weight_norm": [75, 206, 252, 285, 287, 288, 292, 364, 365], "filters_post": 75, "rm_pre": 75, "stc_pre": 75, "rm_post": 75, "stc_post": 75, "brain_pr": 75, "ndata": 75, "brain_post": 75, "psf_ctf_vertices_lcmv": [75, 82, 955], "coars": 76, "don": [76, 122, 142, 144, 147, 167, 170, 171, 172, 183, 184, 185, 188, 194, 197, 227, 230, 232, 233, 234, 240, 243, 257, 258, 259, 260, 265, 270, 274, 302, 303, 309, 310, 321, 323, 326, 331, 332, 442, 562, 563, 624, 671, 687, 694, 696, 732, 770, 773, 786, 935, 942, 947, 949], "src_vol": 76, "forward_vol": 76, "3375": 76, "1045": [76, 223, 236], "895": 76, "015000": [76, 235], "860": [76, 107, 236, 260], "304": [76, 136, 139, 152, 176, 195, 197, 210, 256, 260, 274, 302], "158": [76, 195, 223, 236, 242, 255, 260, 269, 272, 955], "488": [76, 118, 120, 193, 200, 255, 955], "403": [76, 107, 182, 190, 236, 255, 955], "inverse_operator_vol": 76, "rm_lor_vol": 76, "sources_vol": 76, "stc_psf_vol": 76, "383": [76, 107, 111, 136, 156, 159, 223, 260, 955], "140193": 76, "7904e": 76, "66519": 76, "31885e": 76, "1209": 76, "verttrue_vol": 76, "max_vert_idx": 76, "unravel_index": [76, 207, 257], "vert_max_ctf_vol": 76, "brain_psf_vol": 76, "plot_3d": [76, 161, 206, 292, 293, 346, 347], "volume_opt": [76, 338, 339, 342, 345, 346, 347, 833, 893, 898], "32501697": 76, "38884743": 76, "87974682": 76, "psf_volum": [76, 82, 955], "recurs": [77, 86, 186, 229, 277, 323, 338, 342, 346, 367, 369, 731, 893], "n100": [77, 86, 192, 218, 229, 234], "1834": [77, 86], "ori": [77, 86, 202, 206, 209, 211, 212, 252, 329, 364, 365, 503, 526], "24703241413887334": [77, 86], "7764326014811735": [77, 86], "5797649538579381": [77, 86], "5304": [77, 86], "5154591819142753": [77, 86], "5345116894131513": [77, 86], "6697753994145834": [77, 86], "332": [77, 139, 195, 218, 236, 255, 277, 367], "1999": [77, 139, 270, 277, 320, 330, 331, 332, 333, 334, 367, 423, 635, 668, 783, 787], "740118": [77, 277, 367], "321": [77, 82, 195, 229, 255, 260, 955], "inv_fnam": 78, "fmri": [78, 223, 277, 317, 319, 320, 547, 548, 602], "fmri_prior": 78, "rr": [78, 186, 187, 201, 204, 344, 411, 413, 414, 415, 713, 716, 732, 752, 928], "use_tri": [78, 186, 344], "8192": [78, 208, 211, 482], "318": [78, 82, 195, 236, 955], "read_invers": [78, 82, 955], "nb": [79, 550, 551], "read_stc": [79, 82, 955], "localis": [80, 81, 211, 255, 256, 277, 307, 617, 770, 771, 773, 774], "mimic": [80, 81, 484, 507, 602], "ple": [80, 81, 617], "sd": [80, 81, 270, 745, 785, 786, 788, 789], "ple_mne_psf": 80, "peak_err": [80, 81, 617], "sd_mne_psf": 80, "sd_ext": [80, 81, 617], "rm_dspm": 80, "ple_dspm_psf": 80, "sd_dspm_psf": 80, "brain_ple_mn": 80, "brain_ple_dspm": 80, "subtract": [80, 81, 92, 97, 100, 134, 140, 147, 160, 167, 177, 202, 229, 235, 237, 255, 257, 283, 300, 302, 319, 320, 323, 326, 327, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 345, 346, 347, 354, 364, 365, 422, 423, 427, 428, 439, 440, 441, 483, 490, 491, 526, 527, 545, 547, 548, 550, 551, 552, 613, 618, 619, 635, 636, 652, 670, 700, 701, 724, 727, 770, 773, 783, 785, 787, 788, 803, 804, 875, 895], "diff_pl": [80, 81], "brain_ple_diff": [80, 81], "superfici": [80, 206, 320], "brain_sd_mn": 80, "brain_sd_dspm": 80, "diff_sd": [80, 81], "brain_sd_diff": [80, 81], "wors": [80, 197, 316, 670], "distinguish": [80, 99, 177, 198, 223, 226, 227, 228, 231, 232, 234, 243, 291, 319, 430], "stenroo": [80, 81, 86, 277, 369, 617, 740, 745], "matthia": [80, 81, 277, 303, 304, 617], "treder": [80, 81, 277, 617], "biorxiv": [80, 81, 252, 277, 364, 365, 617], "2019": [80, 81, 92, 102, 167, 235, 238, 255, 260, 277, 313, 617, 651, 677, 770, 771, 773, 774, 799, 801, 811, 814, 817, 947], "1101": [80, 81, 141, 252, 277, 364, 365, 617], "672956": [80, 81, 277, 617], "533": [80, 223, 260], "resolution_matrix": 81, "spatial_resolut": 81, "fname_fwd_emeg": 81, "forward_emeg": 81, "forward_meg": 81, "inv_emeg": 81, "inv_meg": 81, "63485": 81, "05542e": 81, "rm_emeg": 81, "ple_psf_emeg": 81, "sd_psf_emeg": 81, "rm_meg": 81, "ple_psf_meg": 81, "sd_psf_meg": 81, "brain_ple_emeg": 81, "emeg": 81, "brain_ple_meg": 81, "bring": [81, 97, 182, 207, 232, 245, 320, 336, 346, 347, 504, 646, 659, 670, 899], "brain_sd_emeg": 81, "brain_sd_meg": 81, "resolution_metrics_eegmeg": [81, 82, 955], "957": [82, 169, 260], "vector_mne_solut": [82, 87, 955], "759": [82, 87, 260, 955], "228": [82, 161, 165, 195, 218, 277, 651, 955], "329": [82, 139, 195, 255, 260, 955], "532": [82, 96, 223, 235, 260, 955], "386": [82, 107, 136, 223, 269, 955], "584": [82, 223, 260, 955], "time_frequency_mixed_norm_invers": [82, 85, 955], "073": [82, 85, 277, 491, 955], "187": [82, 85, 98, 102, 105, 195, 227, 236, 259, 260, 277, 320, 635, 644, 955], "794": [82, 170, 236, 260, 955], "166": [82, 176, 195, 223, 229, 255, 259, 265, 277, 955], "438": [82, 260, 955], "source_space_snr": [82, 84, 955], "285": [82, 84, 195, 260, 955], "563": [82, 86, 955], "481": [82, 222, 236, 255, 955], "280": [82, 107, 139, 195, 196, 222, 223, 236, 255, 304, 406, 955], "snr_estim": [82, 83, 955], "padma": [84, 277, 291, 651], "sundaram": [84, 277, 291, 651], "tottochan": 84, "kaisu": [84, 291], "lankinen": [84, 291], "klankinen": 84, "inv_op": [84, 251], "snr_stc": [84, 342], "maxidx": 84, "med": [84, 121, 162, 192, 223, 251], "viridi": [84, 128, 149, 162, 169, 255, 273, 784, 877], "70263": [84, 204], "18949e": [84, 204], "evoked_eeg": [84, 175, 234], "inv_op_eeg": 84, "stc_eeg": 84, "snr_stc_eeg": 84, "7499": [84, 117], "118742": [84, 117], "155292": [84, 117], "81981": 84, "0644e": 84, "goldenholz": [84, 277, 342], "seppo": [84, 277, 342, 613, 740, 745], "ahlfor": [84, 277, 342, 504, 613, 740, 745], "dahlia": [84, 277, 342], "sharon": [84, 277, 342], "mamiko": [84, 277, 342], "ishitobi": [84, 277, 342], "lucia": [84, 154, 277, 342], "vaina": [84, 154, 277, 342], "magnetoencephalographi": [84, 183, 204, 277, 320, 342, 503, 743, 814, 817], "1086": [84, 236, 277, 342], "hbm": [84, 204, 277, 316, 342, 772], "20571": [84, 277, 342], "built": [85, 166, 176, 177, 183, 185, 191, 192, 193, 201, 207, 230, 232, 238, 243, 247, 248, 255, 285, 289, 291, 294, 304, 309, 329, 331, 332, 333, 334, 336, 372, 396, 397, 406, 435, 512, 534, 535, 550, 551, 572, 593, 597, 666, 717, 751, 778, 788, 822, 833, 851, 935, 936, 946, 947, 951, 955], "fourier": [85, 130, 229, 268, 270, 277, 331, 332, 333, 334, 550, 551, 785, 788, 790, 793, 797, 800, 801, 803, 804, 808, 811, 812, 813, 815, 816], "henc": [85, 141, 168, 176, 182, 188, 201, 217, 231, 234, 243, 255, 268, 270, 319, 330, 331, 332, 333, 334, 341, 783, 787, 848, 935, 948], "minima": [85, 679], "slightli": [85, 97, 186, 206, 210, 229, 234, 237, 238, 259, 273, 282, 292, 295, 307, 316, 317, 320, 331, 332, 333, 334, 337, 428, 550, 551, 605, 613, 760, 833, 872], "eventu": [85, 162, 309, 316, 386, 397, 654], "020865": [85, 121, 204, 252], "96729": 85, "38524e": 85, "descent": [85, 277, 280, 295, 298, 547], "4411": 85, "845726": 85, "4408": [85, 210, 218], "353441": 85, "4410": 85, "859492": 85, "292946": 85, "51e": 85, "670058": 85, "519426": 85, "61e": 85, "669663": 85, "668049": 85, "547913e": 85, "049948803289596964": [85, 122, 205, 207], "2996928197375818": [85, 166, 175, 177, 257], "10e": [85, 95, 117, 122], "15e": 85, "20e": [85, 331, 332, 341, 550, 551, 865, 888], "medial": [85, 265, 770, 771, 833], "yellow": [85, 234, 333, 334, 850, 869, 886], "scalar_thresh": [85, 833], "stationari": [85, 106, 232, 234, 239, 277, 316, 416, 548], "051": [85, 166, 168, 175, 195, 227, 252, 277, 548], "sparsiti": [85, 277, 548, 743], "g\u00e1bor": [85, 277, 548], "sz\u00e9keli": [85, 277, 548], "horst": [85, 277, 548], "hahn": [85, 277, 548], "editor": [85, 218, 277, 309, 318, 400, 545, 548, 635, 814, 817, 945], "6801": [85, 277, 548], "page": [85, 198, 229, 246, 277, 285, 286, 296, 303, 309, 310, 311, 314, 316, 320, 321, 331, 332, 397, 458, 548, 550, 551, 635, 801, 811, 812, 814, 815, 817, 833, 865, 888, 935, 936, 940, 942, 945, 947, 948, 951], "611": [85, 277, 423, 548], "springer": [85, 252, 277, 364, 365, 458, 548, 635], "berlin": [85, 252, 277, 364, 365, 548], "heidelberg": [85, 252, 277, 364, 365, 548], "1007": [85, 177, 233, 234, 235, 252, 277, 320, 364, 365, 483, 548, 602, 635, 651, 748], "978": [85, 140, 177, 210, 214, 229, 232, 252, 277, 330, 331, 332, 333, 334, 364, 365, 423, 548, 635, 765, 783, 787, 955], "22092": [85, 277, 548], "0_49": [85, 277, 548], "truncat": [86, 105, 113, 146, 152, 176, 227, 234, 244, 274, 277, 286, 289, 329, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 369, 506, 512, 550, 551, 564, 783, 787, 859], "th\u00e9odor": [86, 289, 307], "papadopoulo": [86, 289, 307], "theodor": [86, 307], "niko": [86, 277, 320, 369], "m\u00e4kel\u00e4": [86, 277, 369, 463], "jukka": [86, 202, 204, 277, 281, 369], "sarva": [86, 202, 277, 369], "risto": [86, 204, 233, 234, 277, 320, 369, 602], "ilmoniemi": [86, 204, 233, 234, 277, 320, 369, 602], "2018": [86, 102, 110, 154, 163, 223, 232, 252, 277, 313, 364, 365, 369, 635, 677, 678], "2017": [86, 110, 177, 232, 277, 291, 313, 369, 463, 635, 678, 743, 748], "013": [86, 92, 155, 166, 167, 175, 177, 195, 252, 277, 369], "magnitud": [87, 90, 97, 139, 140, 161, 168, 171, 175, 176, 192, 194, 204, 206, 226, 227, 229, 244, 252, 263, 264, 292, 339, 345, 347, 423, 483, 504, 527, 610, 640, 646, 659, 670, 679, 775, 876, 898, 935, 940], "accomplish": [87, 161, 175, 187, 197, 316, 317, 320, 940, 947], "hood": [87, 169, 216, 226, 229, 233, 273, 282, 946], "impos": [87, 222, 228, 294, 801, 811], "underli": [87, 186, 192, 229, 233, 255, 256, 268, 277, 286, 289, 292, 306, 325, 330, 331, 332, 333, 334, 337, 342, 483, 557, 661, 783, 787, 823], "getter": [87, 203, 284], "peak_tim": [87, 201], "get_peak": [87, 175, 177, 201, 203, 204, 206, 273, 281, 285, 286, 301, 304, 333, 334, 338, 339, 342, 345, 346, 347], "movi": [87, 161, 162, 203, 207, 292, 833], "save_movi": [87, 161, 162, 203, 207, 292, 833], "time_dil": [87, 161, 162, 203, 207, 833], "framer": [87, 161, 162, 203, 207, 833], "95048065": 87, "56941314": 87, "72451438": 87, "stc_max": 87, "cosin": [87, 117, 229, 250, 320, 738], "source_nn": [87, 335, 364, 365], "brain_max": 87, "975978731472672": 87, "90575168": 87, "52414196": 87, "71336747": 87, "brain_norm": 87, "83607509": 87, "44726242": 87, "57923594": 87, "lot": [87, 97, 178, 184, 186, 192, 195, 227, 229, 231, 232, 233, 238, 243, 245, 273, 309, 428, 434, 502, 533, 690, 719, 721, 928], "fname_inv_fix": 87, "inv_fix": 87, "stc_fix": 87, "brain_fix": [87, 204], "00351751": 87, "62842071": 87, "43519503": 87, "229": [87, 195, 236, 259, 260], "pars": [88, 166, 177, 191, 197, 199, 200, 217, 228, 244, 278, 283, 288, 291, 292, 293, 294, 301, 302, 305, 319, 324, 325, 331, 336, 350, 512, 524, 531, 550, 559, 566, 567, 574, 581, 595, 625, 697, 955], "elekta": [88, 110, 182, 191, 213, 214, 237, 282, 283, 286, 297, 317, 320, 324, 328, 329, 331, 332, 333, 334, 336, 341, 370, 423, 503, 524, 526, 550, 551, 598, 851, 863, 865, 875, 888, 903, 951, 955], "triux": [88, 209, 278, 317, 320, 324, 331, 332, 333, 334, 460, 550, 551, 632, 783, 785, 786, 787, 788, 789], "dacq": [88, 317, 324], "accordingli": [88, 176, 184, 204, 216, 243, 287, 320, 326, 331, 332, 333, 334, 542, 550, 551, 559, 566, 572, 671], "multimodal_raw": 88, "grad_ssp_upright": 88, "mag_ssp_upright": 88, "v4": [88, 236, 237], "v5": [88, 236, 237], "183600": 88, "576599": 88, "960": [88, 107, 128, 169, 222, 223, 240, 256, 317], "categori": [88, 139, 171, 283, 285, 291, 320, 321, 324, 403, 701, 830], "acqpars": [88, 283, 324, 550], "get_condit": [88, 324], "plot_topo": [88, 176, 178, 192, 246, 268, 269, 280, 285, 286, 292, 299, 302, 306, 307, 331, 332, 333, 334, 389, 550, 551, 783, 785, 786, 788, 789, 954], "background_color": [88, 158, 285, 333, 334, 873], "cat": [88, 139], "flat": [88, 109, 138, 161, 166, 167, 176, 207, 227, 228, 229, 233, 234, 235, 237, 281, 288, 292, 295, 299, 316, 319, 324, 326, 331, 332, 338, 342, 346, 426, 428, 635, 637, 647, 648, 652, 653, 659, 769, 833, 893], "fiff": [88, 142, 182, 186, 278, 281, 283, 289, 291, 293, 294, 296, 299, 300, 301, 302, 317, 331, 332, 335, 341, 344, 550, 551, 553, 555, 568, 584, 585, 635, 647, 648, 819, 842], "fname_out": [88, 842], "118": [88, 195, 260, 277, 297, 635], "0812": [88, 195], "0123": [88, 171, 192, 195, 243], "0942": [88, 195], "2232": [88, 195, 222, 403], "newcat": 88, "longer": [88, 141, 171, 188, 193, 194, 198, 218, 227, 228, 229, 230, 232, 255, 270, 281, 282, 283, 284, 287, 288, 289, 291, 292, 293, 295, 299, 302, 303, 304, 308, 309, 320, 331, 332, 333, 334, 336, 410, 507, 518, 522, 524, 550, 551, 637, 670, 787, 812, 813, 815, 816, 833, 845, 865, 868, 903, 935, 947], "reqev": [88, 324], "requir": [88, 136, 161, 162, 166, 168, 170, 176, 182, 184, 187, 188, 192, 194, 196, 197, 198, 208, 216, 217, 218, 219, 223, 226, 229, 230, 232, 235, 237, 239, 243, 250, 252, 255, 256, 259, 263, 284, 285, 286, 287, 288, 290, 291, 292, 293, 295, 302, 308, 310, 312, 316, 317, 319, 320, 323, 324, 328, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 364, 365, 371, 376, 380, 423, 424, 425, 426, 428, 429, 432, 456, 482, 483, 485, 486, 490, 492, 493, 496, 499, 500, 521, 522, 524, 526, 539, 541, 543, 544, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 589, 593, 594, 596, 597, 605, 608, 609, 618, 619, 634, 635, 637, 640, 647, 648, 650, 662, 671, 679, 688, 725, 731, 732, 734, 735, 736, 748, 770, 771, 772, 773, 774, 779, 783, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 814, 815, 816, 827, 833, 835, 852, 858, 865, 867, 870, 874, 878, 882, 887, 888, 889, 890, 893, 895, 897, 898, 904, 940, 942, 945, 946], "reqwithin": [88, 324], "reqwhen": [88, 324], "freeli": 88, "564": [88, 93, 260, 277, 475, 955], "elekta_epoch": [88, 93, 955], "scratch": [90, 166, 175, 191, 215, 217, 218, 243, 253, 254, 270, 331, 332, 333, 334, 336, 443, 550, 551, 595, 786, 788, 789, 804, 955], "exampleio": 90, "won": [90, 177, 233, 234, 245, 259, 277, 331, 332, 333, 334, 429, 550, 551, 635, 700, 783, 785, 786, 787, 788, 789, 823], "consult": [90, 229, 233, 309, 310, 316, 320, 670, 935, 947], "reader": [90, 192, 201, 215, 233, 243, 278, 281, 282, 286, 287, 289, 291, 292, 293, 302, 304, 305, 308, 312, 320, 398, 549, 557, 559, 560, 561, 563, 566, 569, 570, 572, 574, 575, 576, 578, 579, 580, 581, 582, 583, 694, 696, 698, 938], "fakedata": 90, "nof": 90, "lazi": 90, "analogsign": 90, "multichannel": [90, 97, 139, 177, 223, 237, 277, 504, 643, 646, 670], "sampling_r": 90, "show_scrollbar": [90, 102, 177, 232, 238, 250, 289, 331, 332, 550, 551, 635, 865, 882, 888], "100000": [90, 520], "99999": [90, 512], "609": [90, 93, 177, 260, 277, 955], "read_neo_format": [90, 93, 955], "ev_info": 91, "15972": 91, "546": [91, 93, 169, 223, 955], "read_noise_covariance_matrix": [91, 93, 955], "analyz": [92, 98, 166, 191, 194, 206, 219, 223, 226, 227, 229, 230, 237, 240, 244, 245, 255, 277, 294, 295, 309, 316, 320, 331, 332, 509, 638, 644, 766, 939], "pabr": 92, "maddox": [92, 277, 280, 285, 295, 301], "lab": [92, 95, 311, 312], "clemen": [92, 139, 278, 280, 281, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 303, 304, 305, 307, 308, 953], "brunner": [92, 139, 278, 280, 281, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 303, 304, 305, 307, 308, 953], "pyxdf": [92, 216], "p001_se": 92, "s004_task": 92, "default_run": 92, "001_eeg_a2": 92, "stream": [92, 216, 227, 230, 278, 288, 312], "header": [92, 140, 151, 182, 186, 208, 216, 218, 282, 283, 285, 286, 288, 291, 292, 294, 295, 303, 333, 334, 364, 365, 407, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 549, 558, 561, 563, 578, 580, 582, 613, 875], "load_xdf": 92, "time_seri": 92, "assert": [92, 136, 166, 170, 175, 182, 197, 212, 218, 244, 252, 255, 257, 289, 306, 310], "four": [92, 97, 167, 170, 177, 192, 211, 229, 255, 265, 277, 316, 320, 321, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 833, 852, 867, 874, 878, 887, 890, 895, 897], "plu": [92, 192, 194, 203, 208, 212, 229, 232, 234, 236, 259, 282, 292, 303, 318, 320, 804, 948], "rerefer": 92, "bipolar": [92, 94, 218, 231, 232, 255, 283, 288, 302, 331, 332, 333, 334, 550, 551, 724, 727], "subselect": [92, 143, 169, 175, 176, 177, 192, 243, 257, 260, 268, 270, 282, 283, 292, 330, 331, 332, 333, 334, 336, 440, 783, 784, 785, 786, 787, 935], "uv": [92, 282, 331, 332, 333, 334, 550, 551], "preamp": 92, "nominal_sr": 92, "100e": [92, 171, 177, 228, 252], "2320128": 92, "2320127": 92, "232": [92, 170, 195, 236], "melissa": [92, 277], "polonenko": [92, 277], "ross": [92, 277, 280, 285, 295, 301], "brainstem": [92, 277], "hear": [92, 277, 674], "2331216519871395": [92, 277], "1177": [92, 128, 256, 277, 317, 464], "547": [92, 93, 223, 955], "134": [92, 93, 97, 147, 156, 195, 255, 259, 277, 344, 600, 643, 955], "read_xdf": [92, 93, 955], "mastoid": [94, 216, 235, 331, 332, 333, 334, 550, 551, 727], "bone": [94, 338, 339, 342, 345, 346, 347, 833, 893, 898], "sleep": [94, 164, 165, 191, 194, 277, 288, 319, 325, 331, 475, 476, 512, 566, 688, 785, 868, 935, 955], "ssvep_fold": [94, 196], "ssvep_data_raw_path": [94, 196], "se": [94, 196, 228, 239, 270, 320], "02_se": [94, 196, 270], "ssvep_eeg": [94, 196, 270], "vhdr": [94, 162, 196, 270, 285, 302, 304, 317, 320, 516, 550, 551, 688], "easycap": [94, 196, 255, 270, 291, 308], "467579": 94, "tp9": 94, "tp10": 94, "m2": [94, 235, 331, 332, 333, 334, 550, 551, 727], "midlin": [94, 155, 195, 196, 246, 256, 307, 392], "return_ch_nam": [94, 307, 392], "rereferenc": [94, 193, 270], "rereferenced_midline_ch": 94, "alter": [94, 235, 237, 243, 293, 305, 325, 671], "anod": [94, 235, 285, 288, 724], "cathod": [94, 235, 288, 724], "strip": [94, 139, 277], "suffix": [94, 286, 303, 323, 341, 550, 551, 564], "replac": [94, 105, 114, 128, 167, 169, 177, 185, 198, 215, 217, 228, 233, 234, 237, 243, 245, 277, 278, 280, 282, 283, 285, 287, 288, 292, 293, 294, 295, 303, 306, 307, 309, 320, 328, 331, 332, 333, 334, 340, 341, 483, 490, 505, 518, 550, 551, 563, 580, 600, 634, 635, 650, 783, 785, 786, 788, 789, 852, 874, 878, 887, 890, 895, 945, 947, 950], "unreferenc": [94, 724], "add_channel": [94, 97, 101, 240, 287, 294, 305, 331, 332, 333, 334, 550, 551, 635, 783, 785, 786, 787, 788, 789], "467580": 94, "o1": [94, 97, 155, 185, 250, 270], "po9": [94, 270], "p7": [94, 97, 155, 185, 575], "p3": [94, 97, 155, 170, 185, 575], "cp5": [94, 155, 575], "cp1": [94, 97, 155], "t7": [94, 155, 185, 196, 304, 328, 331, 332, 333, 334, 336, 340, 380, 483, 490, 550, 551, 575, 634, 635, 650, 783, 785, 786, 788, 789, 852, 859, 867, 869, 871, 874, 875, 878, 885, 887, 889, 890, 891, 895, 897], "c3": [94, 139, 155, 170, 185, 575], "fc1": [94, 97, 155, 549], "fc5": [94, 155, 575], "f3": [94, 97, 155, 170, 185, 235, 575], "f7": [94, 170, 185, 403, 575], "fp1": [94, 170, 185, 235, 250, 403, 519, 522, 559, 566, 653, 661], "o2": [94, 155, 185, 250, 270], "po10": [94, 270], "p8": [94, 97, 155, 185], "p4": [94, 97, 155, 170, 185], "cp6": [94, 155], "cp2": [94, 97, 155], "c4": [94, 97, 139, 155, 170, 185], "t8": [94, 97, 155, 185, 196, 304, 328, 331, 332, 333, 334, 336, 340, 380, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 852, 859, 867, 869, 871, 874, 875, 878, 885, 887, 889, 890, 891, 895, 897], "fc2": [94, 97, 155], "fc6": [94, 97, 155], "f4": [94, 97, 155, 170, 185, 196, 235], "f8": [94, 170, 185], "fp2": [94, 170, 185, 250, 403, 519, 522, 653, 661], "still": [94, 97, 101, 105, 142, 147, 168, 169, 170, 186, 197, 215, 216, 226, 227, 229, 230, 231, 233, 235, 237, 239, 243, 246, 255, 263, 287, 293, 295, 298, 307, 309, 318, 331, 336, 344, 388, 434, 502, 533, 550, 635, 670, 690, 719, 721, 765, 787, 843, 858, 859, 900, 928, 940, 947], "fpz": [94, 155, 163, 196, 232, 304, 328, 331, 332, 333, 334, 336, 340, 380, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 852, 859, 867, 869, 871, 874, 875, 878, 885, 887, 889, 890, 891, 895, 897], "oz": [94, 97, 155, 163, 185, 196, 270, 304, 328, 331, 332, 333, 334, 336, 340, 380, 483, 490, 550, 551, 634, 635, 650, 732, 783, 785, 786, 788, 789, 852, 859, 867, 869, 871, 874, 875, 878, 885, 887, 889, 890, 891, 895, 897], "045": [94, 111, 166, 168, 175, 195, 252, 955], "241": [94, 111, 151, 176, 195, 217, 221, 230, 236, 260, 522, 550, 551, 955], "contralateral_referenc": [94, 111, 955], "facilit": [95, 139, 161, 162, 193, 217, 223, 256, 288, 291, 292, 293, 305, 312, 316, 320, 331, 332, 333, 334, 550, 551, 783, 785, 786, 787, 788, 789], "subcort": [95, 277, 295, 651], "samuelsson": [95, 277, 295, 651], "johnsam": 95, "mit": [95, 98, 177, 277, 317, 320, 545, 644, 950], "all_label": 95, "select_label": 95, "hiplab": 95, "postcenlab": 95, "cortical_waveform": 95, "waveform": [95, 126, 229, 231, 234, 238, 277, 339, 345, 347, 733, 735, 749, 750, 769, 894, 948], "pi": [95, 117, 120, 121, 122, 141, 229, 234, 250, 251, 252, 320, 610, 679, 749, 801, 809, 811, 812, 815], "subcortical_waveform": 95, "data_fun": [95, 119, 120, 121, 749], "isin": [95, 139, 147, 170], "evoked_subcort": [95, 651], "n_proj": [95, 651], "fft": [95, 135, 159, 229, 268, 270, 280, 283, 295, 299, 306, 331, 332, 333, 334, 491, 495, 496, 550, 551, 608, 618, 619, 784, 790, 791, 792, 793, 794, 795, 797, 804, 810, 812, 813, 814, 815, 816, 817, 889], "rfft": 95, "psd_proc": 95, "transax": 95, "footbibliographi": [95, 309], "973": [95, 111, 260, 955], "put": [96, 143, 151, 167, 170, 181, 182, 187, 196, 198, 208, 209, 211, 222, 229, 232, 243, 250, 251, 252, 255, 273, 304, 309, 333, 334, 337, 456, 833, 869], "earli": [96, 97, 167, 198, 227, 229, 270, 277, 326, 331, 332, 333, 334, 550, 551, 594, 693], "button": [96, 98, 121, 148, 155, 166, 168, 170, 178, 182, 187, 192, 194, 218, 226, 228, 233, 244, 245, 246, 289, 294, 303, 304, 309, 317, 328, 331, 332, 333, 334, 340, 341, 483, 490, 509, 550, 551, 634, 635, 783, 785, 786, 788, 789, 865, 866, 867, 869, 871, 874, 878, 887, 888, 889, 890, 895, 897], "press": [96, 98, 140, 148, 155, 166, 168, 170, 177, 178, 182, 187, 192, 194, 198, 218, 226, 228, 244, 245, 246, 277, 284, 288, 289, 317, 331, 332, 423, 509, 522, 545, 550, 551, 635, 644, 865, 880, 882, 888], "590": [96, 101, 107, 111, 223, 260, 955], "millisecond": [96, 108, 139, 166, 171, 175, 194, 243, 263, 264, 265, 304, 308, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 509, 550, 551, 783, 787, 833, 893, 898], "late": [96, 188, 935], "quickli": [96, 191, 192, 222, 232, 233, 245, 280, 282, 291, 309, 321], "slowli": 96, "quick": [96, 100, 120, 209, 226, 269, 309, 600], "reference_id": [96, 155, 509], "smilei": [96, 98, 121, 178, 192, 194, 244, 317], "target_id": [96, 155, 509], "new_id": [96, 155, 509, 600], "hit": [96, 270, 286, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 783, 785, 786, 788, 789, 866, 867, 871, 874, 878, 887, 890, 895, 897], "fill_na": [96, 509], "fill": [96, 251, 285, 298, 301, 337, 342, 344, 345, 429, 509, 539, 550, 551, 662, 750, 779, 833, 954], "events_": 96, "besid": [96, 228, 233], "tmin_": 96, "tmax_": 96, "8522": [96, 293], "10649": 96, "12859": 96, "14830": 96, "16850": 96, "18826": 96, "21224": 96, "23200": 96, "25272": 96, "27243": 96, "29525": 96, "31530": 96, "33481": 96, "35611": 96, "38007": 96, "08643728": 96, "78723509": 96, "352": [96, 107, 139, 195, 197, 236, 255], "97154325": 96, "359": [96, 107, 139, 195, 260], "63138369": 96, "20930939": 96, "40611816": 96, "512": [96, 99, 223, 341, 344, 482], "80771377": 96, "ft": [96, 168, 171, 192, 228, 234, 269, 319, 320, 323, 328, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 483, 490, 550, 551, 590, 634, 635, 650, 659, 783, 785, 786, 788, 789, 852, 866, 867, 869, 871, 874, 878, 887, 890, 895, 896, 897], "conduct": [97, 98, 128, 177, 184, 218, 255, 256, 257, 259, 277, 291, 304, 309, 311, 316, 319, 320, 323, 591, 598, 655, 740, 745], "undesir": [97, 231, 304, 635], "otherwis": [97, 109, 147, 170, 177, 188, 198, 215, 228, 229, 260, 263, 265, 285, 292, 309, 320, 325, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 355, 364, 365, 370, 380, 392, 405, 423, 427, 428, 429, 439, 440, 441, 456, 476, 483, 490, 518, 521, 522, 526, 527, 541, 545, 547, 548, 550, 551, 559, 561, 566, 599, 600, 601, 602, 608, 613, 634, 635, 650, 655, 688, 697, 719, 720, 722, 728, 732, 749, 768, 769, 783, 785, 786, 787, 788, 789, 797, 809, 820, 823, 833, 835, 851, 852, 859, 863, 865, 866, 867, 869, 870, 871, 872, 873, 874, 875, 878, 885, 887, 888, 889, 890, 891, 893, 894, 895, 897, 898, 925, 940], "introduc": [97, 102, 166, 167, 175, 177, 191, 192, 199, 201, 226, 228, 229, 230, 232, 233, 234, 239, 243, 263, 265, 294, 312, 320, 326, 331, 332, 333, 334, 388, 550, 551, 635, 865, 869, 888, 935], "smear": [97, 106, 107, 168, 229, 270, 304, 669, 812, 813, 815, 816], "unfortun": [97, 188, 935], "brigd": 97, "far": [97, 109, 166, 167, 170, 183, 197, 204, 228, 229, 230, 233, 235, 243, 244, 255, 273, 320, 434, 563, 638, 770, 771, 773, 774, 813, 816, 859], "address": [97, 123, 124, 192, 229, 255, 256, 263, 264, 265, 277, 309, 336, 770, 771, 773, 774, 947], "Or": [97, 147, 197, 226, 236, 250, 309, 650], "quantifi": [97, 238, 270, 342], "outcom": 97, "awar": [97, 130, 166, 170, 193, 194, 240, 245, 257, 263, 284, 308, 331, 332, 333, 334, 336, 550, 551, 872], "mitig": [97, 206, 229, 230, 237, 320], "confound": [97, 177, 635], "psychophysiologi": [97, 98, 126, 167, 177, 229, 260, 277, 644, 769, 770, 771, 773, 774], "cpmc": 97, "columbia": 97, "ebridg": 97, "html": [97, 169, 195, 197, 277, 278, 281, 285, 288, 292, 294, 295, 301, 305, 309, 323, 341, 650, 728], "linearsegmentedcolormap": [97, 850], "nearli": [97, 309], "exactli": [97, 166, 170, 201, 210, 223, 243, 270, 273, 291, 292, 294, 637, 769, 853, 897], "suffici": [97, 227, 229, 237, 257, 291, 309, 316, 320, 331, 332, 333, 334, 336, 349, 423, 550, 551, 593, 865, 888, 935, 940, 947], "portion": [97, 204, 226, 228, 243, 269, 307, 309, 310, 331, 332, 389, 550, 551, 635, 865, 882, 888, 935], "plenti": 97, "settl": [97, 364], "ed_data": 97, "raw_data": 97, "1959919512423807e": 97, "665886892347761": 97, "iz": 97, "43673209034739": 97, "fcz": [97, 170, 270], "fc4": [97, 170], "f2": 97, "4835197413857302e": 97, "5878177987698265": 97, "fc3": [97, 170, 575], "cp3": [97, 575], "af7": 97, "af3": 97, "af4": 97, "af8": 97, "f5": [97, 575], "fz": [97, 155, 170, 185, 250, 256, 516, 550, 551, 566], "ft8": 97, "tp8": 97, "p5": [97, 575], "p1": [97, 139, 238], "p6": 97, "po3": [97, 155, 270], "po4": [97, 155, 270], "po8": [97, 155, 270, 304], "746002687400852": 97, "cz": [97, 139, 155, 163, 170, 185, 196, 216, 218, 233, 235, 250, 256, 304, 331, 332, 333, 334, 550, 551, 727], "c2": [97, 139, 233], "cp4": 97, "pz": [97, 155, 163, 169, 185, 218, 250, 256], "p2": [97, 139], "590631749463075": 97, "f6": 97, "understand": [97, 161, 170, 217, 229, 270, 307, 309, 312, 320, 321], "physiologi": 97, "clip": [97, 198, 246, 278, 292, 323, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 852, 867, 874, 878, 887, 888, 890, 895, 897], "bridged_idx": [97, 643, 669, 855], "ed_matrix": [97, 643, 855], "ax1": [97, 112, 117, 126, 163, 209, 222], "ax2": [97, 112, 117, 123, 126, 163, 209, 222, 257, 258], "triangular": [97, 186, 187, 316, 320, 337, 713, 770, 771, 773, 774, 894, 933], "ed_plot": 97, "triu_idx": 97, "triu_indic": 97, "idx0": 97, "idx1": 97, "nanmedian": 97, "im1": 97, "cax1": 97, "set_label": [97, 223, 255], "mu": [97, 229, 255, 303, 643], "im2": 97, "cax2": 97, "histogram": [97, 184, 331, 332, 865], "previou": [97, 149, 166, 170, 177, 187, 196, 197, 198, 207, 228, 229, 233, 235, 246, 283, 287, 289, 292, 295, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 489, 490, 526, 527, 545, 547, 548, 613, 645, 659, 670, 833, 853, 875, 945, 950], "pair": [97, 130, 147, 163, 170, 194, 215, 216, 217, 219, 223, 237, 238, 255, 263, 270, 282, 285, 294, 299, 307, 309, 323, 328, 331, 332, 333, 334, 336, 338, 339, 342, 344, 345, 346, 347, 350, 355, 370, 483, 490, 550, 551, 575, 601, 634, 635, 643, 655, 669, 681, 713, 770, 772, 773, 783, 784, 785, 786, 788, 789, 820, 833, 851, 855, 856, 859, 867, 873, 874, 878, 890, 893, 895, 897, 898, 933], "isnan": 97, "arrang": [97, 177, 191, 196, 246, 273, 277, 392, 839], "light": [97, 163, 168, 197, 217, 227, 303, 317, 319, 331, 332, 333, 334, 486, 493, 550, 551, 635, 833, 865, 869, 882, 888], "horizont": [97, 107, 161, 163, 166, 167, 168, 206, 218, 226, 237, 255, 289, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 635, 655, 833, 854, 869, 881, 882, 888, 893, 898], "stand": [97, 181, 195, 201, 309, 744, 951], "insert": [97, 177, 195, 243, 328, 336, 355, 370, 509, 525, 601, 655, 820, 839], "syring": 97, "tip": [97, 232, 277, 423, 936, 938, 945], "saniti": [97, 147, 170, 208, 212, 229, 284, 292, 312, 519, 748], "implausibli": [97, 229, 255, 776], "interestingli": [97, 320], "though": [97, 101, 139, 177, 182, 186, 194, 198, 205, 209, 217, 226, 229, 230, 232, 233, 234, 239, 255, 286, 317, 319, 320, 336, 837], "distinct": [97, 98, 223, 277, 328, 331, 332, 333, 334, 483, 490, 550, 551, 634, 783, 785, 786, 788, 789, 852, 867, 874, 890, 895, 897], "unlik": [97, 166, 167, 175, 176, 182, 186, 196, 207, 226, 229, 231, 243, 283, 316, 320, 330, 331, 332, 333, 334, 339, 345, 347, 430, 460, 491, 671, 788, 789, 898], "ch1": 97, "ch2": [97, 250], "9760": [97, 109], "9759": [97, 109], "lesser": [97, 288, 293, 550, 551, 888], "trough": [97, 170], "monoton": [97, 128, 562, 665, 838], "discrep": [97, 320], "driven": [97, 223, 255, 441, 490, 545], "blink": [97, 99, 109, 120, 121, 149, 170, 198, 219, 226, 228, 231, 232, 234, 235, 243, 245, 270, 277, 288, 308, 325, 331, 332, 570, 634, 650, 656, 735, 736], "flatten": [97, 146, 233, 255, 259, 265, 277, 291, 852], "axvspan": [97, 123, 177], "compel": 97, "evid": [97, 140, 229, 230, 277, 635, 814, 817], "judici": [97, 309], "electrolyt": [97, 277, 643], "tri": [97, 186, 187, 194, 201, 204, 285, 318, 320, 331, 332, 337, 338, 342, 344, 346, 386, 434, 506, 538, 713, 716, 732, 752, 756, 759, 893, 928], "those": [97, 101, 105, 126, 168, 170, 177, 183, 187, 191, 192, 194, 195, 196, 197, 198, 201, 206, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 240, 243, 244, 245, 250, 251, 255, 273, 280, 289, 292, 304, 309, 310, 316, 320, 323, 326, 331, 332, 333, 334, 336, 344, 364, 378, 380, 392, 395, 424, 425, 426, 428, 438, 439, 485, 489, 499, 504, 506, 507, 512, 516, 535, 550, 551, 562, 580, 613, 621, 634, 635, 637, 638, 651, 652, 653, 662, 666, 676, 678, 685, 732, 735, 736, 751, 769, 778, 783, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 812, 813, 815, 816, 859, 865, 866, 869, 871, 872, 879, 886, 889, 937, 940], "biolog": [97, 226, 233, 234, 277, 316, 320, 602], "midwai": [97, 669], "aid": [97, 277, 303, 307, 669], "recov": [97, 192, 289, 434], "impli": [97, 188, 251, 270, 336, 398, 433, 566, 935], "unbridg": 97, "ch0": 97, "bridged_idx_simul": 97, "data_orig": 97, "rng": [97, 119, 120, 121, 141, 222, 229, 255, 587, 635, 668, 687, 735, 736, 737, 746, 747, 749, 770, 771, 772, 773, 774], "random": [97, 110, 117, 119, 120, 121, 141, 185, 217, 218, 222, 226, 229, 232, 252, 255, 256, 258, 263, 264, 265, 285, 286, 288, 547, 587, 635, 668, 687, 735, 736, 737, 746, 747, 749, 770, 771, 772, 773, 774], "default_rng": [97, 258], "seed": [97, 117, 122, 139, 141, 232, 251, 252, 256, 258, 263, 264, 265, 285, 299, 541, 587, 635, 668, 687, 735, 736, 737, 746, 747, 749, 762, 770, 771, 772, 773, 774], "raw_sim": [97, 120, 121], "bridged_data": 97, "tile": [97, 141, 212], "back": [97, 101, 109, 114, 143, 166, 169, 184, 187, 188, 192, 197, 198, 206, 207, 227, 229, 232, 233, 234, 235, 268, 282, 287, 291, 303, 309, 324, 331, 332, 333, 334, 341, 434, 439, 498, 524, 550, 551, 635, 869, 935], "raw_virtu": 97, "data_virtu": 97, "raw_comp": 97, "data_comp": 97, "With": [97, 134, 141, 148, 188, 197, 198, 215, 218, 233, 234, 239, 245, 252, 309, 310, 319, 320, 331, 332, 333, 334, 349, 525, 550, 551, 576, 635, 720, 833, 870, 883, 935, 944, 949, 951], "comp": [97, 195, 287, 336], "108628963104301e": 97, "1398345563221063e": 97, "brought": [97, 182], "impend": 97, "help": [97, 99, 147, 161, 166, 170, 171, 172, 177, 185, 186, 187, 188, 192, 195, 197, 198, 207, 212, 215, 217, 223, 226, 227, 228, 230, 231, 232, 234, 246, 259, 278, 281, 283, 285, 287, 292, 304, 307, 308, 309, 310, 316, 318, 320, 321, 323, 329, 330, 331, 332, 333, 334, 337, 338, 339, 342, 345, 346, 347, 510, 512, 518, 542, 550, 551, 559, 566, 567, 574, 584, 635, 688, 694, 727, 732, 746, 749, 775, 783, 787, 830, 833, 842, 865, 879, 893, 940, 945, 947, 954], "quest": 97, "technician": [97, 316, 317], "noisi": [97, 119, 168, 176, 227, 229, 234, 237, 240, 255, 263, 265, 270, 295, 316, 336, 659, 660, 663, 735, 736, 747], "bid": [97, 162, 197, 277, 287, 292, 293, 294, 295, 312, 317, 331, 332, 380, 550, 551, 941, 948], "tsv": [97, 294, 398], "kohm": 97, "passiv": [97, 226], "accept": [97, 121, 166, 195, 197, 198, 215, 227, 228, 229, 232, 233, 234, 243, 278, 282, 284, 285, 286, 287, 289, 291, 292, 294, 295, 303, 304, 305, 307, 308, 309, 311, 326, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 382, 413, 428, 447, 448, 449, 456, 458, 550, 551, 576, 637, 652, 653, 768, 770, 771, 773, 774, 785, 786, 788, 789, 833, 859, 866, 867, 873, 891, 933], "from_list": 97, "impedance_cmap": 97, "cn": [97, 897], "cax": [97, 139, 143, 260, 273], "omega": [97, 136], "hopefulli": [97, 212, 226, 270, 523], "convinc": [97, 177], "tenk": [97, 98, 277, 643, 644], "kayser": [97, 98, 277, 643, 644], "electroencephalogram": [97, 277, 643], "offici": [97, 98, 217, 277, 303, 309, 310, 576, 635, 643, 644, 696, 937, 949], "feder": [97, 277, 635, 643], "550": [97, 107, 188, 252, 260, 277, 504, 643], "march": [97, 277, 303, 643], "s1388": [97, 139, 277, 643], "2457": [97, 139, 277, 643], "00553": [97, 277, 643], "arnaud": [97, 277, 635, 643], "delorm": [97, 277, 635, 643], "scott": [97, 139, 170, 240, 277, 278, 303, 304, 307, 308, 316, 507, 545, 635, 643], "makeig": [97, 139, 170, 277, 316, 507, 545, 635, 643], "jneumeth": [97, 101, 229, 260, 277, 503, 635, 643, 743, 770, 771, 773, 774], "2003": [97, 222, 270, 277, 316, 489, 643], "009": [97, 100, 148, 155, 166, 175, 195, 252, 277, 643], "494": [97, 111, 223, 255, 955], "eeg_bridg": [97, 111, 955], "laplacian": [98, 222, 277, 285, 291, 495, 644, 727], "sharper": [98, 229], "impact": [98, 163, 204, 227, 270, 282, 302, 483], "166799": [98, 193, 208, 231], "714": [98, 193, 208, 230, 231, 242, 955], "date": [98, 100, 103, 107, 108, 109, 117, 120, 167, 172, 177, 193, 194, 195, 216, 226, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 250, 252, 273, 282, 283, 286, 287, 288, 289, 291, 293, 303, 304, 308, 309, 323, 325, 331, 332, 333, 334, 336, 550, 551, 552, 563, 566, 671, 782, 940], "decemb": [98, 100, 103, 107, 108, 109, 117, 120, 167, 172, 177, 193, 194, 195, 226, 227, 228, 230, 232, 233, 234, 235, 237, 243, 244, 245, 246, 252, 273], "2002": [98, 100, 103, 109, 117, 120, 139, 167, 172, 177, 192, 193, 194, 195, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 243, 244, 245, 246, 252, 273, 277, 320, 325, 602, 765, 767, 772], "gmt": [98, 100, 103, 107, 108, 109, 117, 120, 167, 172, 177, 193, 194, 195, 226, 227, 228, 230, 232, 233, 234, 235, 237, 238, 240, 243, 244, 245, 246, 252, 273], "hh": [98, 100, 103, 107, 108, 109, 117, 120, 167, 172, 177, 193, 194, 226, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 252, 273], "ss": [98, 100, 103, 107, 108, 109, 117, 120, 167, 172, 177, 193, 194, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 252, 273, 320], "raw_csd": 98, "421": [98, 134, 137, 168, 188, 202, 208, 231, 236, 251, 255, 258, 259], "evoked_csd": 98, "stiff": [98, 644], "flexibl": [98, 169, 198, 216, 239, 293, 295, 305, 833], "set_size_inch": [98, 231], "this_evoked_csd": 98, "contour": [98, 128, 147, 184, 198, 269, 278, 284, 285, 292, 301, 323, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 666, 783, 785, 786, 788, 789, 835, 852, 853, 867, 870, 871, 874, 878, 887, 890, 895, 897, 954], "n\u03bb\u00b2": 98, "perrin": [98, 105, 227, 277, 320, 644], "pernier": [98, 105, 227, 277, 320, 644, 801, 811, 812, 815], "bme": [98, 277, 644], "1987": [98, 202, 229, 277, 644], "326089": [98, 277, 644], "jacqu": [98, 105, 227, 277, 320, 644, 801, 811, 812, 815], "olivi": [98, 105, 227, 277, 320, 423, 635, 644, 801, 811, 812, 815], "fran\u0107oi": [98, 105, 227, 277, 320, 644], "echalli": [98, 105, 227, 277, 320, 644], "90180": [98, 105, 227, 277, 320, 644], "mike": [98, 277, 644], "cohen": [98, 146, 277, 287, 644, 799, 801, 811, 852], "theori": [98, 191, 204, 237, 277, 644, 670], "j\u00fcrgen": [98, 232, 277, 635, 644], "craig": [98, 277, 644], "methodologi": [98, 128, 277, 423, 644], "electrophysiologi": [98, 277, 644], "171": [98, 102, 154, 156, 159, 195, 223, 229, 232, 255, 260, 277, 281, 458, 613, 644, 677, 740, 745, 955], "173": [98, 171, 184, 195, 223, 255, 260, 277, 344, 644], "ijpsycho": [98, 277, 644], "595": [98, 111, 223, 277, 955], "eeg_csd": [98, 111, 955], "eog_event_id": 99, "eog_ev": [99, 228, 325, 648, 661, 664], "add_ev": [99, 198, 287, 301, 341, 550, 551], "audr": 99, "visr": 99, "squeez": [99, 167, 259, 260, 265], "375": [99, 107, 121, 195, 223, 226, 228, 234], "dc": [99, 192, 194, 198, 212, 217, 226, 228, 229, 230, 231, 232, 234, 239, 244, 278, 285, 288, 289, 319, 326, 331, 333, 334, 336, 410, 550, 551, 635, 637, 670, 888], "offset": [99, 120, 162, 187, 194, 198, 212, 218, 226, 228, 229, 231, 232, 233, 234, 240, 243, 244, 245, 287, 291, 294, 302, 303, 308, 319, 323, 325, 326, 330, 331, 332, 333, 334, 336, 430, 512, 524, 550, 551, 570, 584, 638, 655, 684, 697, 763, 783, 787, 833], "saccad": [99, 198, 218, 219, 226, 228, 231, 232, 234, 240, 570, 634], "firwin2": [99, 172, 198, 218, 226, 228, 229, 231, 232, 234, 285, 297, 331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551], "hann": [99, 110, 135, 136, 172, 198, 226, 228, 229, 231, 232, 234, 285, 331, 332, 333, 334, 494, 519, 521, 522, 550, 551, 608, 609, 734, 735, 736, 748], "1502": [99, 198, 228, 232], "eog_artifact_histogram": [99, 111, 955], "basic": [100, 109, 139, 176, 177, 184, 187, 188, 191, 192, 197, 198, 199, 202, 220, 226, 231, 232, 233, 234, 237, 243, 246, 247, 252, 271, 272, 277, 295, 317, 320, 323, 331, 336, 380, 396, 443, 460, 512, 518, 561, 632, 785, 897, 955], "thorough": [100, 191, 227, 321], "elimin": [100, 195, 231, 233, 237, 255, 263, 265, 297, 320, 424, 425, 426, 483, 662, 935], "slow": [100, 155, 163, 167, 170, 176, 229, 231, 238, 277, 309, 317, 331, 332, 475, 476, 488, 608, 609, 668, 803, 823, 867], "drift": [100, 167, 229, 231, 238, 239, 293, 635, 684], "1653": [100, 101], "offpca": [100, 103, 120, 193, 194, 195, 226, 227, 228, 230, 232, 233, 234, 237, 243, 244, 245, 246, 252], "offaverag": [100, 120, 195, 228, 232], "raw_clean": [100, 110, 231, 678], "evoked_befor": 100, "evoked_aft": 100, "epochs_aft": 100, "spatial_color": [100, 121, 126, 163, 170, 176, 177, 234, 246, 250, 284, 285, 289, 305, 331, 332, 333, 334, 550, 551, 785, 786, 788, 789, 869, 872, 889], "726": [100, 111, 186, 223, 260, 955], "eog_regress": [100, 111, 955], "intermitt": 101, "extern": [101, 177, 206, 215, 237, 277, 303, 316, 317, 320, 331, 332, 333, 334, 410, 412, 416, 504, 513, 514, 515, 516, 550, 551, 635, 645, 646, 659, 670], "magnet": [101, 107, 146, 176, 182, 202, 215, 230, 231, 239, 260, 274, 277, 316, 317, 319, 411, 602, 635, 649, 852, 942], "fail": [101, 234, 278, 283, 285, 288, 295, 303, 305, 306, 307, 308, 309, 310, 427, 434, 502, 504, 533, 567, 568, 645, 646, 659, 670, 688, 690, 694, 719, 721, 928], "succe": [101, 187, 197, 947], "choos": [101, 108, 134, 141, 142, 161, 167, 172, 177, 186, 188, 206, 207, 216, 222, 226, 229, 231, 232, 237, 257, 270, 285, 292, 306, 309, 310, 324, 331, 332, 338, 339, 342, 344, 345, 346, 347, 387, 524, 602, 610, 634, 640, 647, 660, 663, 670, 697, 746, 749, 769, 833, 851, 854, 893, 898, 899, 935, 940], "made": [101, 143, 181, 198, 226, 229, 255, 282, 284, 287, 293, 299, 302, 303, 304, 308, 309, 310, 317, 331, 332, 337, 339, 344, 345, 347, 382, 396, 559, 684, 748, 866, 868, 898, 940], "whose": [101, 122, 170, 194, 196, 215, 223, 252, 294, 310, 320, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 512, 517, 526, 527, 545, 547, 548, 550, 551, 594, 613, 635, 640, 650, 652, 653, 660, 736, 787, 788, 859, 862, 865, 875, 880, 889, 890, 913, 914, 917], "particularli": [101, 187, 217, 231, 255, 320, 331, 332, 333, 334, 507, 510, 550, 551, 635, 659, 944], "heavi": [101, 263, 265, 293, 935], "jeff": [101, 277, 293, 295, 303, 635], "hanna": [101, 277, 288, 289, 306, 307, 635], "sample_reference_meg_nois": 101, "refmeg": 101, "165353": 101, "530": [101, 107, 223, 235, 277], "30000": [101, 482], "select_pick": 101, "plot_kwarg": [101, 183, 231, 239], "raw_tog": 101, "ica_kwarg": 101, "picard": [101, 103, 109, 232, 286, 635, 948], "fit_param": [101, 103, 198, 285, 288, 291, 483, 484, 485, 486, 487, 488, 490, 491, 493, 494, 500, 635, 636], "all_pick": 101, "ica_tog": 101, "allow_ref_meg": [101, 635], "bad_comp": 101, "find_bads_ref": [101, 295, 635], "plot_properti": [101, 109, 192, 232, 283, 285, 288, 292, 293, 294, 304, 635, 938], "147": [101, 195, 217, 223, 236, 255, 259, 260], "patient": [101, 103, 109, 162, 192, 198, 232, 288], "took": [101, 103, 109, 192, 198, 232, 635], "dpss": [101, 109, 130, 131, 163, 168, 169, 192, 198, 232, 268, 269, 288, 306, 331, 332, 333, 334, 496, 550, 551, 785, 788, 797, 803, 813, 816], "raw_sep": 101, "ref_pick": 101, "ica_ref": 101, "ica_sep": 101, "think": [101, 170, 198, 223, 229, 255, 311, 319], "ekg": [101, 162], "cardiac": [101, 238], "ref_comp": 101, "get_sourc": [101, 284, 301, 635], "ref_": 101, "recognis": 101, "cora": [101, 277, 294, 304, 635], "kim": [101, 277, 294, 304, 635], "nadia": [101, 277, 635], "voggel": [101, 277, 635], "magnetoencephalograph": [101, 277, 635], "108592": [101, 277, 635], "235": [101, 184, 195, 207, 212, 236, 259, 260], "find_ref_artifact": [101, 111, 955], "fnir": [102, 191, 195, 196, 220, 221, 241, 242, 277, 278, 283, 291, 292, 293, 294, 295, 303, 304, 319, 320, 331, 332, 333, 334, 336, 380, 396, 422, 441, 443, 512, 550, 551, 575, 580, 583, 632, 672, 673, 674, 676, 677, 783, 785, 786, 787, 788, 789, 833, 851, 859, 868, 873, 948, 955], "mail": [102, 255, 950], "robertluk": 102, "net": [102, 196, 222, 277, 304, 320, 489, 765, 947], "exact": [102, 130, 230, 255, 263, 270, 277, 285, 302, 304, 319, 320, 331, 332, 333, 334, 357, 500, 550, 551, 602, 770, 772, 773, 784, 790, 792, 793, 795, 945], "fnirs_data_fold": [102, 238], "fnirs_cw_amplitude_dir": [102, 238], "raw_intens": [102, 238], "raw_od": [102, 238], "new_annot": [102, 245], "set_annot": [102, 107, 108, 163, 194, 218, 228, 245, 287, 288, 289, 325, 331, 332, 550, 551, 637, 671, 954], "23238": [102, 238], "2974": [102, 238], "464": [102, 170, 197, 238, 255, 344], "spike": [102, 109, 316, 324, 677], "person": [102, 177, 219, 238, 309, 310, 316, 336], "optod": [102, 217, 238, 292, 294, 317, 583, 674, 833, 851], "corrupted_data": 102, "750": [102, 107, 169, 236, 260, 317], "corrupted_od": 102, "245": [102, 195, 211, 228, 259, 260, 277, 320], "8924": 102, "8923": 102, "suppli": [102, 128, 178, 198, 206, 234, 250, 255, 286, 288, 289, 292, 293, 294, 295, 329, 330, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 429, 456, 507, 517, 518, 550, 551, 635, 650, 676, 677, 724, 783, 787, 858, 859, 878], "corrected_tddr": 102, "said": [102, 201], "fishburn": [102, 277, 677], "ruth": [102, 277, 677], "ludlum": [102, 277, 677], "chandan": [102, 277, 677], "vaidya": [102, 277, 677], "andrei": [102, 277, 677], "medvedev": [102, 277, 677], "tddr": [102, 277, 292, 304, 677], "motion": [102, 277, 291, 639, 677], "025": [102, 155, 162, 166, 175, 195, 218, 226, 229, 252, 255, 277, 656, 677], "018": [102, 111, 154, 155, 166, 175, 195, 252, 277, 651, 955], "fnirs_artifact_remov": [102, 111, 955], "pierreablin": 103, "9009": [103, 198, 232], "run_ica": [103, 282, 288, 291], "t0": [103, 127, 211, 270, 324, 437, 790, 791, 792], "fit_tim": 103, "ica_comparison": [103, 111, 955], "evoked_interp": 105, "product": [105, 113, 146, 152, 176, 196, 215, 216, 222, 227, 234, 274, 277, 304, 310, 320, 336, 399, 496, 763, 813, 814, 816, 817, 843], "evoked_interp_mn": 105, "\u03b1": [105, 168, 234, 246], "0e": [105, 222, 234], "075": [105, 111, 196, 955], "interpolate_bad_channel": [105, 111, 955], "bilater": [106, 234, 291, 731], "repeat": [106, 120, 128, 140, 166, 187, 191, 193, 233, 234, 243, 244, 255, 261, 262, 266, 267, 280, 288, 291, 299, 302, 303, 309, 325, 331, 332, 333, 334, 336, 342, 344, 429, 507, 550, 601, 602, 616, 632, 635, 650, 679, 697, 712, 755, 764, 766, 767, 771, 774, 775, 787, 815, 833, 873, 935, 949, 955], "head_po": [106, 107, 236, 237, 291, 504, 659, 670, 734, 735, 736, 748], "simulated_quat": 106, "simulated_movement_raw": 106, "raw_stat": 106, "simulated_stationary_raw": 106, "34208": 106, "955": [106, 109, 169, 260], "backward": [106, 229, 280, 282, 283, 287, 289, 295, 302, 320, 323, 331, 332, 333, 334, 441, 483, 489, 490, 494, 511, 518, 519, 521, 522, 550, 551, 608, 785, 786, 788, 789, 833, 867, 876, 900], "quiver": [106, 329, 833, 863, 877], "306m": [106, 136, 143, 151, 152, 176, 182, 184, 196, 198, 209, 274], "topo_kwarg": [106, 167], "evoked_stat": 106, "naiv": [106, 259], "therebi": [106, 201, 231, 233, 320, 813, 816], "third": [106, 121, 122, 177, 195, 198, 215, 234, 238, 245, 309, 320, 325, 326, 331, 332, 511, 512, 524, 525, 550, 551, 595, 630, 635, 696, 697, 773, 774, 786, 788, 789, 868, 925], "restor": [106, 228, 235, 292, 298, 333, 334, 483, 487, 635, 636, 682, 833, 926], "raw_sss": [106, 198, 237, 323, 550, 551, 572, 670], "evoked_raw_mc": 106, "harmon": [106, 120, 209, 210, 218, 226, 230, 236, 237, 270, 277, 307, 320, 649], "fourth": [106, 229, 245, 320, 541], "cleanli": [106, 195], "evoked_evo_mc": 106, "movement_compens": [106, 111, 955], "contamin": [107, 229, 232, 277, 635], "similarli": [107, 126, 139, 169, 175, 197, 223, 229, 235, 238, 318, 320, 325, 635, 859], "suffer": [107, 316], "adonai": [107, 108, 291, 292], "nune": [107, 108, 277, 291, 292, 743], "data_path_meg": 107, "raw_fname1": [107, 218], "s01_aef_20131218_01": [107, 108, 218], "raw_fname2": [107, 218], "s01_aef_20131218_02": [107, 218], "mismatch": [107, 186, 187, 218, 284, 287, 306, 423, 517, 610, 892], "on_mismatch": [107, 218, 295, 423, 430, 432, 926], "264": [107, 108, 111, 129, 177, 195, 218, 236, 255, 277, 955], "s01_20131218_01": [107, 108, 218], "2400": [107, 108, 210, 218], "864000": [107, 108, 218], "263": [107, 108, 139, 195, 218, 236, 237], "udio001": [107, 108], "eab": [107, 108], "s01": [107, 108], "lt": [107, 142], "br": 107, "gt": 107, "chpi_loc": [107, 236, 411, 413, 414, 415], "original_head_dev_t": 107, "invert_transform": [107, 161], "average_head_dev_t": 107, "val": [107, 128], "val_ori": 107, "010": [107, 121, 155, 166, 175, 181, 195, 252, 277], "020": [107, 155, 166, 175, 195, 252], "090": [107, 236], "160": [107, 108, 110, 151, 195, 196, 197, 212, 215, 255, 277, 406, 613, 647, 660, 663, 740, 745], "220": [107, 163, 195, 205, 212, 236, 260], "260": [107, 195, 219, 223, 236, 255, 260, 317, 679], "290": [107, 170, 195, 210, 277, 743], "370": [107, 195, 223, 236, 255, 277, 337, 342], "380": [107, 223], "490": [107, 223], "510": [107, 170, 223, 236, 255, 270], "540": [107, 223, 252, 277, 364, 365], "560": [107, 235], "580": [107, 210, 214, 223, 236, 260, 955], "610": [107, 223, 236], "630": [107, 123, 236], "650": [107, 108, 172, 239], "680": [107, 260], "690": [107, 228, 242, 955], "710": [107, 236, 277, 643], "720": [107, 230, 236, 242, 277, 317, 643, 955], "730": [107, 176, 180, 260, 955], "760": [107, 236], "770": [107, 260], "780": [107, 192, 200, 260, 955], "790": [107, 236, 260], "810": [107, 236], "830": [107, 148, 260], "840": [107, 118, 121, 955], "850": [107, 236, 303], "870": [107, 277, 767], "880": [107, 156, 158, 206, 236, 277, 364, 365, 955], "890": [107, 236, 260, 277, 344], "920": [107, 128, 169, 256, 260], "930": [107, 236], "940": [107, 260], "950": [107, 236, 257, 260, 262, 270, 955], "970": [107, 223, 260], "980": [107, 232, 236, 260], "990": [107, 163, 236, 260], "353": [107, 139, 195], "355": [107, 139, 193, 195, 200, 236, 260, 955], "358": [107, 139, 195, 223, 255], "369": [107, 195, 223, 277, 320, 602, 743], "361": [107, 136, 139, 195, 223, 236, 264], "362": [107, 139, 195, 251, 256], "363": [107, 139, 195, 222, 223, 255], "371": [107, 195, 255], "372": [107, 195, 236, 260], "373": [107, 195, 223, 236, 255], "376": [107, 120, 121, 122, 175, 192, 193, 195, 205, 243], "377": [107, 223, 255, 260], "379": [107, 223, 236, 260], "381": [107, 136, 222, 236, 255], "382": [107, 223, 236, 277, 743], "388": [107, 133, 137, 236, 260, 277, 955], "389": [107, 222, 255], "391": [107, 236], "392": [107, 223, 233, 236, 242, 255, 955], "393": [107, 260], "394": [107, 223, 255, 260, 765], "397": [107, 236], "399": [107, 223, 255], "406": [107, 255, 260], "407": [107, 223, 236, 255], "mean_distance_limit": [107, 639], "0015": 107, "annotation_mov": 107, "hpi_disp": [107, 639], "disp": 107, "0015m": 107, "0036m": 107, "new_dev_head_t": 107, "ctf_275": [107, 151, 210], "movement_detect": [107, 111, 955], "contract": [108, 310], "clench": [108, 232], "jaw": [108, 232], "swallow": [108, 226, 232], "twitch": 108, "cranial": 108, "notic": [108, 110, 166, 167, 169, 171, 175, 176, 177, 182, 186, 188, 192, 193, 196, 201, 218, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 243, 245, 246, 250, 251, 309, 659], "taken": [108, 121, 163, 168, 219, 227, 231, 233, 234, 260, 263, 270, 285, 288, 292, 310, 317, 324, 325, 333, 334, 336, 337, 341, 342, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 549, 550, 551, 613, 668, 688, 784, 797, 875, 888], "analyt": [108, 140, 277, 296, 300, 331, 332, 333, 334, 550, 551], "divid": [108, 128, 168, 169, 170, 173, 174, 188, 191, 237, 255, 257, 260, 273, 301, 319, 321, 331, 332, 333, 334, 336, 337, 338, 339, 342, 345, 346, 347, 354, 548, 550, 551, 594, 618, 619, 640, 643, 647, 670, 704, 760, 770, 773, 783, 785, 786, 787, 788, 789, 800, 808, 867, 891, 895, 935, 955], "squar": [108, 140, 155, 166, 175, 176, 177, 188, 194, 195, 204, 216, 229, 243, 250, 252, 255, 257, 268, 277, 291, 319, 320, 328, 331, 332, 333, 334, 338, 339, 340, 342, 345, 346, 347, 364, 365, 395, 483, 490, 527, 550, 551, 610, 617, 634, 635, 650, 763, 768, 770, 771, 773, 774, 783, 784, 785, 786, 788, 789, 833, 852, 860, 861, 867, 869, 874, 876, 878, 881, 887, 890, 893, 895, 897, 898, 935], "hundr": [108, 232, 233, 541], "bad_muscl": [108, 640], "min_length_good": [108, 640], "fraction": [108, 140, 170, 201, 226, 232, 255, 305, 310, 394, 608, 617, 635, 654, 778, 879], "notch": [108, 218, 230, 239, 416, 522, 550, 551], "603": [108, 260], "scores_muscl": [108, 640], "threshold_muscl": 108, "annot_muscl": 108, "filter_freq": [108, 640], "zscore": [108, 354, 618, 619, 635, 783, 787, 895], "144": [108, 195, 197, 231, 238, 255, 259, 260, 301, 344], "164": [108, 195, 229, 259, 260, 262, 267, 277, 770, 771, 773, 774, 955], "562": [108, 111, 163, 221, 223, 955], "muscle_detect": [108, 111, 955], "gross": [109, 277, 483], "widespread": [109, 232], "recover": 109, "ubiquit": 109, "postur": [109, 232], "mainten": [109, 234, 303, 309], "appropri": [109, 134, 172, 175, 188, 192, 208, 209, 217, 228, 232, 234, 237, 250, 255, 257, 259, 270, 274, 277, 282, 289, 309, 314, 320, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 386, 392, 429, 459, 460, 550, 551, 598, 613, 769, 833, 859, 888, 893, 898, 935, 940], "wouldn": [109, 282], "pronounc": [109, 229, 935], "simultan": [109, 163, 168, 219, 223, 230, 232, 240, 246, 274, 293, 303, 312, 317, 320, 491, 541, 575, 596, 684, 692, 772, 914], "18019": 109, "1983": [109, 231, 277, 330, 331, 332, 333, 334, 634, 685, 783, 787], "18020": 109, "exclus": [109, 196, 227, 232, 284, 568, 630, 635, 879, 881, 882], "mdash": [109, 232], "plot_sourc": [109, 232, 289, 292, 293, 294, 295, 303, 304, 308, 331, 332, 550, 551, 635, 865, 882, 888], "85861": 109, "103880": 109, "criteria": [109, 166, 192, 228, 233, 234, 238, 286, 324, 331, 332, 341, 630, 635], "slope": [109, 215, 229, 299, 323, 324, 336, 410, 411, 576, 635], "peripher": [109, 635], "pole": [109, 186], "foci": [109, 303, 833], "blob": [109, 263, 264], "worth": [109, 128, 175, 256, 277, 309, 317, 318, 464, 559, 566, 935], "fire": 109, "fuzzi": 109, "textbook": [109, 233, 277, 765], "temporali": 109, "ear": [109, 192, 196, 206, 317], "muscle_idx": [109, 635], "log_scal": [109, 635, 880], "blink_idx": 109, "heartbeat_idx": 109, "muscle_idx_auto": 109, "find_bads_muscl": [109, 304, 305, 306, 635], "s001r01": 109, "529": 109, "s002": [109, 232], "s002r01": 109, "dhani": [109, 277, 635], "dharmaprani": [109, 277, 635], "hoang": [109, 277, 635], "nguyen": [109, 277, 635], "trent": [109, 277, 635], "lewi": [109, 277, 320, 635], "delosangel": [109, 277, 635], "willoughbi": [109, 277, 635], "kenneth": [109, 170, 277, 507, 635], "pope": [109, 277, 635], "38th": [109, 277, 635], "annual": [109, 234, 277, 635, 937], "confer": [109, 170, 277, 367, 507, 635, 937], "societi": [109, 217, 277, 320, 423, 602, 635, 814, 817], "embc": [109, 232, 277, 635], "828": [109, 260, 277, 635], "orlando": [109, 277, 635], "fl": [109, 134, 277, 635], "usa": [109, 226, 277, 635], "7590828": [109, 277, 635], "muscle_ica": [109, 111, 955], "otp": [110, 111, 678, 955], "flux": [110, 237, 239, 317, 320, 331, 332, 333, 334, 550, 551, 632, 783, 785, 786, 787, 788, 789], "jump": [110, 139, 170, 226, 237, 301, 770, 771, 773, 774], "bst_phantom_elekta": [110, 209], "rid": [110, 259], "dipole_numb": 110, "kojak_all_200nam_pp_no_chpi_no_ms_raw": [110, 209], "47000": [110, 209], "437999": [110, 209], "437": [110, 163, 209, 222, 223, 255], "alongsid": [110, 171, 175, 181, 227, 232, 233, 235, 244, 319, 886, 948], "lump": [110, 670], "compute_bia": 110, "sti201": [110, 209, 336], "036": [110, 166, 175, 195, 209, 252, 277, 743], "1fmm": 110, "worst": [110, 148, 292, 423, 428, 739, 741, 742], "bias_clean": 110, "2mm": [110, 320], "4mm": 110, "samu": [110, 188, 237, 277, 281, 646, 670, 678, 748, 935], "taulu": [110, 188, 237, 277, 281, 504, 646, 670, 678, 748, 935], "1013": [110, 195, 223, 277, 678], "2734641": [110, 277, 678], "197": [110, 195, 255, 317, 955], "231": [111, 195, 198, 200, 223, 255, 259, 260, 955], "196": [111, 195, 236, 243, 248, 255, 259, 260, 955], "virtual_evok": [111, 113, 955], "011": [111, 113, 155, 166, 175, 195, 229, 252, 277, 955], "xdawn_denois": [111, 114, 955], "shift_evok": [111, 112, 955], "783": [111, 112, 955], "hut": 112, "2332": [112, 195, 629], "ax3": [112, 117, 126, 209, 222], "magnomet": 113, "virt_evok": 113, "as_typ": [113, 285, 291, 302, 331, 332, 333, 334], "signal_cov": [114, 636], "xd": 114, "1388": 114, "41640": 114, "epochs_denois": 114, "brief": [117, 122, 192, 226, 246, 255, 309], "introduct": [117, 122, 177, 260, 268, 270, 277, 341, 937], "simplest": [117, 122, 194, 223, 239, 255, 320], "kostiantyn": [117, 121, 122, 277, 286, 288, 289, 305, 743], "maksymenko": [117, 121, 122, 277, 286, 288, 289, 305, 743], "functool": [117, 255, 309, 338, 339, 342, 345, 346, 347], "partial": [117, 175, 177, 192, 228, 243, 244, 255, 277, 288, 293, 295, 312, 317, 331, 332, 338, 339, 342, 345, 346, 347, 386, 672, 814, 817, 833, 859, 900, 904], "determinist": [117, 232, 282], "middl": [117, 122, 139, 186, 192, 229, 233, 250, 299, 309, 320, 329, 336, 338, 339, 342, 345, 346, 347, 519, 854, 863, 893, 898, 899], "frontal": [117, 122, 192, 226, 232, 234, 240, 243, 252, 373, 717, 833], "selected_label": [117, 122], "term": [117, 130, 154, 192, 194, 219, 222, 229, 233, 255, 259, 265, 270, 304, 309, 310, 312, 317, 319, 320, 321, 330, 331, 332, 333, 334, 398, 410, 447, 448, 449, 458, 610, 622, 644, 649, 743, 783, 787, 800, 801, 808, 811], "label_region": 117, "1915": 117, "One": [117, 123, 124, 127, 167, 169, 175, 176, 177, 181, 183, 192, 197, 204, 218, 229, 231, 232, 239, 243, 255, 277, 304, 309, 316, 320, 331, 332, 333, 334, 341, 380, 382, 510, 516, 550, 551, 635, 765, 772, 853, 865, 866, 882, 888, 937], "label_dipol": 117, "source_time_seri": [117, 121, 122], "sin": [117, 119, 120, 121, 122, 141, 229, 250, 251, 252, 410, 679, 749], "n_event": [117, 122, 319, 326, 331, 332, 336, 341, 350, 432, 511, 512, 524, 550, 551, 568, 595, 630, 638, 662, 684, 694, 696, 697, 733, 769, 786, 787, 865, 868, 925], "source_simulator_region": 117, "add_data": [117, 121, 122, 143, 338, 339, 342, 345, 346, 347, 733, 833, 893, 898], "source_simulator_dipol": 117, "gaussian": [117, 121, 141, 148, 178, 187, 188, 229, 232, 251, 255, 316, 320, 331, 332, 333, 334, 545, 668, 737, 801, 811, 812, 814, 815, 817, 844, 866, 875, 896, 935], "raw_region": 117, "iir_filt": [117, 119, 120, 122, 252, 737, 747], "raw_dipol": 117, "cos2": [117, 120, 121, 122, 252, 734, 735, 736, 748], "498": [117, 170, 174, 208, 214, 223, 255, 955], "evoked_region": 117, "evoked_dipol": 117, "stc_true_region": 117, "get_stc": [117, 121, 733], "start_sampl": [117, 243, 733], "stop_sampl": [117, 243, 733], "stc_true_dipol": 117, "stc_est_region": 117, "stc_est_dipol": 117, "0004": 117, "2931": 117, "34986e": 117, "scorer": [117, 282, 291, 489, 500], "rle": [117, 743], "region_result": 117, "thx": 117, "per_sampl": [117, 738, 739, 740, 741, 742, 743, 744, 745], "ax4": 117, "col": [117, 139, 295, 833], "super": [117, 270], "ticklabel_format": 117, "style": [117, 176, 177, 197, 215, 238, 273, 282, 283, 286, 294, 303, 304, 308, 323, 326, 328, 331, 332, 333, 334, 341, 346, 347, 364, 483, 489, 490, 542, 550, 551, 576, 634, 635, 783, 785, 786, 787, 788, 789, 833, 835, 851, 852, 859, 866, 867, 870, 872, 873, 874, 882, 883, 888, 890, 895, 896, 897, 899], "sci": [117, 238, 674], "scilimit": 117, "tweak": [117, 141, 270, 273, 318, 935, 940], "dipole_result": 117, "plot_stc_metr": [117, 118, 955], "826": 118, "simulated_raw_data_using_subject_anatomi": [118, 121, 955], "774": [118, 121, 955], "simulate_raw_data": [118, 120, 955], "source_simul": [118, 121, 122, 955], "simulate_evoked_data": [118, 119, 955], "sample_audvis_ecg": [119, 138, 157, 168, 198, 233, 323], "randomst": [119, 120, 121, 141, 185, 222, 229, 252, 255, 285, 587, 635, 668, 687, 735, 736, 737, 746, 747, 749, 770, 771, 772, 773, 774], "randn": [119, 141, 185, 222, 229, 252, 255, 263, 264, 265], "high_resolut": [119, 894], "wronkiewicz": [120, 280, 281, 282, 300, 302], "wronk": 120, "epoch_dur": [120, 643], "stagger": 120, "sinusoid": [120, 121, 141, 209, 210, 212, 229, 236, 250, 252, 319, 410, 522, 550, 551, 749], "10hz": 120, "global": [120, 140, 148, 155, 168, 170, 175, 176, 181, 188, 192, 209, 234, 277, 278, 280, 294, 309, 319, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 507, 831, 859, 866, 869, 872, 874, 875, 893, 898, 935], "n_samp": [120, 243, 252, 281], "25e": 120, "1e9": [120, 210, 212, 252], "plt_show": [120, 206], "input": [120, 121, 141, 181, 198, 215, 222, 223, 229, 234, 237, 240, 243, 255, 259, 260, 265, 285, 286, 287, 288, 292, 294, 303, 304, 305, 306, 307, 310, 316, 320, 323, 331, 332, 333, 334, 337, 338, 339, 342, 345, 346, 347, 350, 382, 398, 424, 425, 426, 430, 438, 483, 484, 486, 487, 489, 490, 491, 493, 495, 500, 507, 512, 518, 540, 542, 547, 550, 551, 576, 578, 635, 636, 644, 645, 647, 648, 652, 653, 659, 660, 665, 683, 697, 749, 760, 762, 769, 770, 771, 773, 774, 781, 783, 803, 804, 833, 834, 835, 837, 838, 851, 859, 866, 870, 874, 882, 893, 896, 898], "millimet": [120, 121, 182, 186, 208, 306, 320, 403, 407, 526, 541, 567, 587, 683, 694], "calc": 120, "orphan": 120, "ivana": [121, 288], "kojcic": [121, 288], "deslauri": [121, 122, 288], "gauthier": [121, 122, 287, 288], "sam": [121, 122, 287], "doesn": [121, 166, 182, 196, 197, 232, 234, 235, 237, 243, 257, 260, 270, 292, 294, 295, 307, 308, 309, 316, 447, 448, 449, 452, 453, 454, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 624, 635, 638, 653, 661, 670, 690, 729, 784, 787, 805, 880, 935], "fname_info": 121, "g_temp_sup": 121, "g_t_transv": 121, "s_calcarin": 121, "vice": [121, 160, 186, 229, 320, 342], "versa": [121, 160, 186, 229, 320, 342], "moreov": [121, 163, 233, 234, 255], "ipsilater": [121, 177, 202], "activation_list": 121, "region_nam": 121, "latenc": [121, 169, 170, 171, 175, 260, 277, 286, 333, 334, 338, 339, 342, 345, 346, 347, 507, 770, 771, 773, 774, 835, 870], "sigma": [121, 144, 149, 155, 163, 168, 223, 255, 320, 331, 332, 598, 776, 777, 801, 811, 812, 815, 823, 844, 866, 896], "gf": 121, "rand": [121, 252], "100m": 121, "30m": 121, "15m": 121, "region_id": 121, "events_tmp": 121, "label_tmp": 121, "amplitude_tmp": 121, "latency_tmp": 121, "wf_tmp": 121, "evoked_aud_left": 121, "evoked_vis_right": 121, "mere": [121, 198, 232, 310, 700], "stc_aud": 121, "stc_vi": 121, "stc_diff": 121, "49264": [121, 204], "64e": [121, 204], "32542029": 121, "92022543": 121, "5110744": 121, "christoph": [121, 142, 177, 181, 222, 277, 280, 282, 283, 285, 294, 299, 300, 302, 423, 489, 767], "destrieux": [121, 181, 277], "ander": [121, 181, 204, 277, 320, 602], "dale": [121, 181, 204, 277, 320, 602], "halgren": [121, 181, 277, 602], "sulci": [121, 181, 186, 251, 277], "nomenclatur": [121, 181, 243, 277], "sine": [122, 250, 323, 800, 808], "everi": [122, 130, 140, 167, 170, 177, 194, 198, 201, 223, 230, 231, 232, 246, 270, 273, 309, 326, 330, 331, 332, 333, 334, 417, 532, 540, 547, 548, 587, 635, 637, 652, 653, 657, 668, 687, 735, 736, 737, 746, 747, 749, 770, 771, 772, 773, 774, 783, 787, 935, 936], "significantli": [123, 124, 127, 255, 258, 263, 264, 270, 308, 310, 338, 339, 342, 345, 346, 347, 770, 771, 773, 774], "1332": [123, 124, 171, 192, 195, 257, 258, 259], "epochs1": [123, 263, 506], "condition1": [123, 263], "epochs2": [123, 263, 506], "condition2": [123, 263], "t_ob": [123, 256, 257, 263, 303, 770, 772, 773], "cluster_p_valu": [123, 257, 258, 259, 263, 264, 265], "n_permut": [123, 127, 139, 255, 256, 257, 258, 259, 260, 264, 265, 770, 771, 772, 773, 774], "tail": [123, 139, 177, 255, 257, 258, 259, 260, 263, 270, 284, 329, 770, 771, 772, 773, 774, 812, 815, 863, 894], "out_typ": [123, 139, 255, 257, 258, 259, 292, 294, 770, 771, 773, 774], "stat_fun": [123, 139, 140, 255, 256, 257, 258, 259, 260, 263, 264, 265, 762, 770, 771, 773, 774], "000227": 123, "167093": 123, "2847": 123, "2809": 123, "314": [123, 139, 195, 255], "3088": 123, "3763": 123, "785": [123, 260], "3918": 123, "927": [123, 260], "3964": 123, "3999": 123, "3930": 123, "erf": [123, 144, 155, 218, 226, 229, 260, 277, 280, 298, 635, 878, 880, 948], "i_c": 123, "cluster_stats_evok": [123, 129, 955], "discoveri": [124, 259, 277, 307, 767], "pval": [124, 259, 761, 767, 770, 771, 773, 774], "ttest_1samp": [124, 255, 776], "n_test": [124, 772], "threshold_uncorrect": 124, "ppf": [124, 238, 255, 257, 260, 263, 264, 672, 770, 771, 773, 774], "reject_bonferroni": 124, "pval_bonferroni": 124, "threshold_bonferroni": 124, "reject_fdr": 124, "pval_fdr": 124, "indep": [124, 767], "threshold_fdr": 124, "xmin": 124, "xmax": 124, "hline": [124, 167, 333, 334, 869], "uncorrect": [124, 255], "bonferroni": [124, 290, 522, 550, 551, 761, 772], "008": [124, 129, 148, 155, 166, 171, 175, 177, 192, 195, 237, 252, 277, 670, 955], "fdr_stats_evok": [124, 129, 955], "generalis": 126, "tradit": [126, 169, 235, 239, 812, 813, 815, 816, 859], "predictor": [126, 167, 255, 634, 685, 769], "inapplic": 126, "rerp": [126, 277, 769], "smith": [126, 154, 255, 256, 277, 458, 769, 770, 771, 773, 774], "kuta": [126, 277, 769], "jona": [126, 128, 155, 223, 260, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 302, 304, 770, 771, 773, 774], "sassenhagen": [126, 128, 155, 223, 260, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 302, 304, 770, 771, 773, 774], "rerf": 126, "param": [126, 140, 212, 283, 294, 483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 624, 636, 709], "nathaniel": [126, 277, 769], "marta": [126, 277, 769], "169": [126, 195, 223, 236, 255, 277, 769], "psyp": [126, 167, 177, 229, 260, 277, 769, 770, 771, 773, 774], "12320": [126, 277, 769], "temporal_mask": 127, "logical_and": [127, 141], "50000": 127, "p_valu": [127, 255, 260, 522, 550, 551, 772], "significant_sensor": 127, "significant_sensors_nam": 127, "49999": 127, "0243": [127, 168, 195], "1323": [127, 195], "1333": [127, 195, 263, 265], "1613": [127, 195], "1643": [127, 195], "2423": [127, 195], "2622": [127, 195], "2632": [127, 195], "2642": [127, 195], "2643": [127, 195], "cbar_fmt": [127, 136, 306, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 783, 785, 786, 788, 789, 867, 874, 878, 887, 890, 895], "sensor_permutation_test": [127, 129, 955], "psycholinguist": [128, 255], "tal": [128, 147, 154, 277, 284, 285, 288, 291, 301, 559, 566], "linzen": [128, 147, 301], "pd": [128, 139, 162, 169, 177, 217, 218, 237], "kword_metadata": [128, 169, 256], "epo": [128, 166, 169, 198, 256, 295, 323, 331, 332, 693], "concret": [128, 169, 170], "consonantvowelproport": [128, 169], "visualcomplex": [128, 169], "film": [128, 169, 256], "783710": [128, 169], "cent": [128, 169], "141553": [128, 169], "shot": [128, 169], "600033": [128, 169], "cold": [128, 169], "657457": [128, 169], "945661": [128, 169], "characterist": [128, 177, 229, 230, 277, 319, 331, 332, 475, 506, 518, 659], "imagin": [128, 139, 233], "df": [128, 139, 166, 171, 218, 243, 255, 256, 257, 263, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 618, 770, 773, 783, 785, 786, 787, 788, 789], "cut": [128, 139, 140, 206, 212, 233, 270, 295, 323, 331, 332, 333, 334, 485, 494, 519, 521, 550, 551, 647, 648, 661, 664, 670, 674, 949], "split_legend": [128, 260, 859], "percentil": [128, 161, 162, 172, 212, 302, 331, 332, 338, 339, 341, 342, 345, 346, 347, 550, 551, 821, 854, 859, 865, 888, 893, 898, 899], "gfp": [128, 140, 155, 168, 170, 176, 188, 192, 218, 260, 280, 283, 289, 294, 308, 319, 331, 332, 333, 334, 610, 635, 859, 866, 869, 875, 879, 892, 935], "7424": 128, "null": [128, 292, 350, 509, 765], "hypothesi": [128, 198, 256, 761, 765, 767, 772], "colour": [128, 202, 305], "palett": [128, 139, 171], "dark": [128, 197, 198, 294, 303, 331, 332, 550, 551, 635, 833, 865, 882, 888], "reject_h0": 128, "fdr_pval": 128, "plot_imag": [128, 155, 168, 169, 172, 176, 192, 226, 228, 238, 256, 278, 282, 285, 287, 291, 294, 301, 306, 331, 332, 333, 334], "st\u00e9phane": [128, 256, 277, 317, 464], "dufau": [128, 256, 277, 317, 464], "grainger": [128, 256, 277, 317, 464], "katherin": [128, 256, 277, 317, 464, 814, 817], "midglei": [128, 256, 277, 317, 464], "phillip": [128, 167, 256, 277, 283, 285, 286, 304, 317, 459, 464], "holcomb": [128, 256, 277, 317, 464], "pictur": [128, 256, 277, 317, 341, 464], "snapshot": [128, 198, 256, 277, 284, 292, 295, 309, 317, 464, 905], "megastudi": [128, 256, 277, 317, 464], "psycholog": [128, 256, 277, 317, 464], "1887": [128, 256, 277, 317, 464], "1897": [128, 256, 277, 317, 464], "0956797615603934": [128, 256, 277, 317, 464], "matt": [128, 277, 284, 285, 294, 302, 304], "davi": [128, 277], "ford": [128, 277], "friedmann": [128, 277], "pulverm\u00fcl": [128, 277], "william": [128, 222, 277, 489], "marslen": [128, 277], "wilson": [128, 277], "1383": [128, 277], "1400": [128, 277], "2006": [128, 204, 222, 237, 277, 331, 332, 613, 670, 740, 745, 814, 817], "2005": [128, 188, 237, 277, 504, 613, 646, 670, 740, 743, 745, 935], "048": [128, 166, 168, 175, 195, 209, 246, 252, 256, 277, 799, 801, 811], "578": [128, 129, 177, 212, 955], "sensor_regress": [128, 129, 955], "605": 129, "141": [129, 195, 255, 260, 344, 955], "core": [130, 170, 192, 194, 197, 216, 250, 277, 283, 291, 293, 309, 310, 312, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 486, 493, 496, 499, 500, 526, 539, 541, 550, 551, 593, 596, 597, 608, 609, 618, 619, 640, 647, 648, 670, 722, 731, 732, 734, 735, 736, 748, 770, 771, 772, 773, 774, 785, 788, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 814, 815, 816, 835, 867, 870, 889, 940, 941, 948], "clariti": [130, 938], "722": [130, 223, 258, 277, 801, 811, 812, 815], "adapt": [130, 140, 192, 217, 235, 252, 255, 277, 280, 306, 309, 310, 317, 331, 332, 333, 334, 364, 365, 488, 522, 523, 550, 551, 608, 609, 635, 670, 785, 788, 792, 795, 801, 803, 811, 829, 867, 947, 948], "csd_fft": 130, "csd_mt": 130, "convolv": [130, 138, 229, 255, 270, 489, 496], "600hz": 130, "enough": [130, 184, 206, 230, 231, 232, 234, 237, 243, 255, 270, 282, 301, 306, 310, 320, 328, 331, 332, 333, 334, 336, 340, 373, 374, 380, 483, 490, 502, 550, 551, 634, 635, 650, 778, 783, 785, 786, 787, 788, 789, 843, 852, 859, 865, 867, 869, 871, 874, 875, 878, 882, 885, 887, 888, 889, 890, 891, 895, 897, 945], "10th": 130, "greatli": [130, 507], "minim": [130, 167, 195, 229, 250, 270, 320, 331, 332, 429, 491, 506, 645, 769, 813, 816, 833, 935, 945], "csd_wav": 130, "trick": [130, 227, 270, 277, 290, 772, 945], "comma": [130, 293, 294, 295, 309, 323], "plot_dict": [130, 269], "251": [130, 195, 236, 239, 260, 277, 503, 550, 551], "compute_csd": [130, 133, 955], "taper": [131, 141, 287, 298, 303, 306, 331, 332, 333, 334, 488, 496, 522, 550, 551, 608, 609, 785, 788, 792, 795, 797, 803, 813, 816, 867], "prolat": [131, 268, 277, 331, 332, 333, 334, 550, 551, 785, 788, 797, 803], "spheroid": [131, 268, 277, 331, 332, 333, 334, 550, 551, 785, 788, 797, 803], "sequenc": [131, 163, 277, 317, 320, 323, 331, 332, 333, 334, 550, 551, 760, 785, 786, 788, 789, 797, 833, 867], "n_epochs_us": 131, "psd_avg": 131, "set_xlim": [131, 140, 177, 212, 233], "233": [131, 133, 195, 259, 955], "664": [133, 236, 260], "source_power_spectrum_opm": [133, 136, 955], "515": [133, 136, 169, 174, 197, 200, 223, 260, 302, 955], "time_frequency_erd": [133, 139, 303, 955], "time_frequency_global_field_pow": [133, 140, 955], "784": [133, 140, 223, 260, 955], "809": [133, 140, 260, 955], "source_label_time_frequ": [133, 134, 955], "055": [133, 134, 166, 168, 175, 195, 235, 252, 277, 459, 955], "time_frequency_simul": [133, 141, 955], "source_space_time_frequ": [133, 137, 955], "633": [133, 137, 180, 955], "source_power_spectrum": [133, 135, 955], "918": [133, 135, 260, 955], "temporal_whiten": [133, 138, 955], "former": [134, 168, 259, 302, 310, 423, 635], "latter": [134, 168, 177, 194, 320, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 636], "epochs_induc": 134, "subtract_evok": [134, 140, 231, 292, 331, 332, 685, 954], "this_epoch": 134, "itc": [134, 812, 813, 814, 815, 816, 817], "baseline_mod": [134, 618, 619], "multi_label_pow": 134, "return_plv": [134, 619], "l_idx": 134, "l_power": 134, "100hz": 135, "2048": [135, 138, 141, 159, 331, 332, 333, 334, 482, 550, 551, 608, 889], "psd_dspm": 135, "welch": [136, 252, 268, 269, 270, 277, 278, 282, 302, 306, 307, 331, 332, 333, 334, 550, 551, 785, 788, 804, 889], "next_fast_len": 136, "src_fname": [136, 263, 264, 265], "vv_fname": 136, "squid_resting_st": 136, "vv_erm_fnam": 136, "squid_empty_room": 136, "vv_trans_fnam": 136, "opm_fnam": 136, "opm_resting_state_raw": 136, "opm_erm_fnam": 136, "opm_empty_room_raw": 136, "opm_tran": 136, "opm_coil_def_fnam": 136, "vv": 136, "simplifi": [136, 205, 229, 277, 288, 301, 303, 304, 323, 331, 332, 333, 334, 550, 551, 935, 936], "housekeep": [136, 239], "raw_erm": [136, 210, 218, 316], "new_sfreq": 136, "nyquist": [136, 229, 230, 285, 291], "meg2233": 136, "meg1842": 136, "hold": [136, 212, 218, 252, 255, 312, 319, 320, 331, 332, 333, 334, 336, 340, 504, 550, 551, 659, 670, 781, 869, 889, 891], "61999": 136, "60999": 136, "dist": [136, 182, 183, 238, 251, 323, 337, 344, 349, 434, 502, 535, 676, 753, 754, 755, 757, 758], "169022": 136, "169992": 136, "2052": 136, "995623": 136, "029776": 136, "088592": 136, "062622": 136, "916188": 136, "395825": 136, "069381": 136, "399641": 136, "914042": 136, "993107": 136, "074371": 136, "090590": 136, "079171": 136, "995577": 136, "050589": 136, "086427": 136, "057412": 136, "994603": 136, "692": [136, 170, 260, 270], "percentag": [136, 232, 281, 331, 332, 637, 739, 740, 741, 742, 743, 745, 821, 864], "freq_band": [136, 163], "topo": [136, 142, 168, 176, 238, 269, 278, 284, 288, 331, 332, 837, 848, 859, 896], "stc_psd": [136, 608], "sensor_psd": [136, 608], "return_sensor": [136, 608, 609], "topo_norm": 136, "keepdim": [136, 163], "stc_norm": 136, "3660": 136, "1969": 136, "014611": 136, "18765e": 136, "291": [136, 195, 212, 255, 260], "34378": 136, "07671e": 136, "3720": 136, "1698": 136, "007069": 136, "0841e": 136, "46031": 136, "26253e": 136, "worthwhil": [136, 177, 232], "plot_band": 136, "inferno": [136, 162, 255], "cau": 136, "show_trac": [136, 161, 273, 292, 338, 339, 342, 345, 346, 347, 833, 893, 898], "fig_alpha": 136, "brain_alpha": [136, 339, 345, 347, 898], "70497772": 136, "95689511": 136, "07335117": 136, "profil": [136, 197, 239, 309, 940, 941], "beneath": 136, "fig_beta": 136, "brain_beta": 136, "1893528": 136, "35877086": 136, "88328024": 136, "fig_beta_opm": 136, "brain_beta_opm": 136, "25576851": 136, "68102302": 136, "87437276": 136, "use_fft": [137, 139, 269, 496, 618, 619, 791, 794, 810, 812, 813, 815, 816], "induced_power_": 137, "proj_fnam": [138, 218], "20000": 138, "innov": 138, "d_": 138, "lfilter": [138, 331, 332, 333, 334, 518, 519, 521, 522, 550, 551], "regener": [138, 288, 331, 332], "r_": [138, 320, 740, 745], "dummi": [138, 153, 250, 265], "nfft": [138, 252], "written": [139, 197, 198, 201, 219, 236, 245, 286, 287, 291, 292, 302, 312, 316, 327, 371, 375, 515, 516, 549, 550, 551, 704, 710, 925, 930, 933, 948], "desynchron": [139, 269, 277, 317], "conceptu": [139, 177, 229, 232, 277], "ersp": [139, 285], "perturb": 139, "goal": [139, 163, 309, 310, 312, 318], "35hz": 139, "customari": [139, 320], "klotzsch": [139, 294, 306, 307], "cb": 139, "mpg": 139, "seaborn": [139, 171, 237], "sn": [139, 171, 237], "twoslopenorm": 139, "pcluster_test": 139, "suitabl": [139, 172, 185, 187, 240, 257, 259, 312, 316, 317, 319, 320, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 374, 422, 443, 482, 507, 538, 550, 551, 575, 591, 770, 783, 785, 786, 787, 788, 789], "cnorm": [139, 306, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 783, 785, 786, 788, 789, 852, 867, 874, 878, 887, 890, 895, 897], "asymmetr": [139, 850], "thing": [139, 167, 171, 177, 186, 197, 198, 207, 215, 227, 229, 243, 252, 260, 263, 265, 274, 292, 309, 312, 380, 550, 551, 786, 789, 935], "rdbu": 139, "equal": [139, 166, 173, 174, 175, 177, 191, 194, 198, 201, 202, 206, 226, 229, 245, 246, 263, 265, 287, 289, 292, 293, 294, 301, 304, 310, 319, 320, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 341, 353, 364, 365, 385, 422, 423, 427, 428, 439, 440, 441, 483, 490, 491, 496, 506, 508, 526, 527, 540, 545, 547, 548, 550, 551, 568, 594, 602, 613, 618, 619, 634, 635, 647, 653, 668, 675, 676, 701, 739, 764, 765, 770, 771, 773, 774, 775, 777, 778, 783, 785, 786, 787, 788, 789, 804, 812, 815, 852, 853, 859, 863, 866, 867, 868, 869, 871, 874, 875, 890, 891, 895, 897, 938, 955], "promin": [139, 169, 226, 238, 270, 424, 425, 426], "extrem": [139, 168, 270, 333, 334, 364, 365, 389, 423, 427, 428, 439, 440, 441, 483, 490, 491, 526, 527, 545, 547, 548, 613, 770, 771, 773, 774, 875], "vcenter": 139, "step_down_p": [139, 770, 771, 773, 774], "buffer_s": [139, 255, 259, 260, 263, 264, 265, 605, 770, 771, 773, 774], "tfr_ev": 139, "gridspec_kw": [139, 202, 238, 273], "width_ratio": [139, 202, 238], "stack": [139, 167, 252, 263, 729, 828, 830, 945, 949], "mask_styl": [139, 333, 334, 783, 871], "set_yscal": 139, "724718": 139, "552076": 139, "183231": 139, "327": [139, 195, 236], "311": [139, 195, 260], "316": [139, 170, 195, 222, 223, 260, 277, 489], "326": [139, 195, 255], "337": [139, 195, 222, 223, 236], "345": [139, 195, 236, 255], "344": [139, 170, 195, 222, 260], "528367": 139, "706422": 139, "338": [139, 195, 236], "341": [139, 195, 222, 223, 236, 600], "324": [139, 195, 223, 236, 255], "349": [139, 195, 236, 260, 270, 277, 320], "581589": 139, "346448": 139, "336": [139, 195, 197, 223, 236, 260, 300], "713872": 139, "754759": 139, "360704": 139, "992503": 139, "416450": 139, "044340": 139, "070444": 139, "323": [139, 195, 222, 236, 237], "datafram": [139, 166, 173, 174, 175, 177, 191, 217, 218, 237, 243, 256, 268, 288, 291, 294, 299, 312, 320, 325, 326, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 507, 550, 551, 697, 769, 783, 785, 786, 787, 788, 789, 955], "to_data_fram": [139, 162, 166, 171, 175, 243, 256, 285, 288, 291, 294, 302, 304, 307, 320, 325, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 783, 785, 786, 787, 788, 789], "0000": [139, 309], "473093": 139, "474571": 139, "764021": 139, "9875": 139, "491659": 139, "480088": 139, "762445": 139, "9750": [139, 295], "500872": 139, "469376": 139, "749421": 139, "9625": 139, "500605": 139, "449373": 139, "728686": 139, "9500": 139, "515911": 139, "443439": 139, "719536": 139, "lineplot": [139, 171], "confid": [139, 140, 168, 171, 177, 192, 202, 234, 285, 295, 329, 336, 635, 762, 785, 786, 788, 789, 859, 880, 936], "long_format": [139, 171, 288, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 783, 785, 786, 787, 788, 789], "freq_bound": 139, "delta": [139, 163, 212, 229, 331, 332, 333, 334, 547, 550, 551, 618, 785, 786, 788, 789, 867], "theta": [139, 140, 163, 331, 332, 333, 334, 550, 551, 785, 786, 788, 789, 867], "freq_bands_of_interest": 139, "remove_unused_categori": 139, "reorder_categori": 139, "facetgrid": 139, "margin_titl": 139, "n_boot": 139, "axline_kw": 139, "dash": [139, 166, 176, 198, 230, 233, 237, 238, 246, 278, 293, 328, 331, 332, 333, 334, 550, 551, 785, 786, 788, 789, 859, 860, 886, 889], "set_axis_label": 139, "col_templ": 139, "col_nam": [139, 336], "row_templ": 139, "row_nam": [139, 335], "add_legend": [139, 833], "subplots_adjust": [139, 177, 227, 230, 232, 233, 234, 235, 273], "df_mean": 139, "queri": [139, 166, 171, 175, 191, 247, 256, 268, 326, 331, 332, 510, 787], "groupbi": [139, 171, 177, 256], "reset_index": [139, 171], "col_ord": 139, "violinplot": [139, 171], "deep": [139, 163, 171, 184, 207, 229, 277, 294, 320, 331, 332, 333, 334, 355, 483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 550, 551, 632, 633, 636, 783, 785, 786, 787, 788, 789, 830, 833, 851], "hue_ord": 139, "gert": [139, 277], "pfurtschel": [139, 277], "fernando": [139, 277, 316], "lope": [139, 277, 316], "da": [139, 277, 308, 316], "silva": [139, 277, 316], "principl": [139, 230, 255, 260, 277, 318, 320], "1842": [139, 195, 277], "1857": [139, 277], "00141": [139, 277], "bernhard": [139, 277, 545], "graimann": [139, 277], "jane": [139, 277], "huggin": [139, 277], "simon": [139, 277, 283, 285, 299, 304, 308], "levin": [139, 277], "ecog": [139, 142, 161, 164, 165, 191, 195, 243, 250, 255, 277, 282, 284, 286, 288, 289, 292, 293, 294, 295, 303, 305, 319, 320, 331, 332, 333, 334, 336, 342, 344, 379, 380, 389, 441, 443, 452, 512, 516, 550, 551, 566, 632, 633, 666, 712, 727, 778, 783, 785, 786, 787, 788, 789, 833, 851, 891, 903, 905, 939, 948, 955], "00697": [139, 277], "exposur": [139, 232, 277, 309], "tone": [139, 192, 277, 317], "1993": [139, 204, 277], "90110": [139, 277], "rectifi": 140, "uncertainti": [140, 268, 277, 331, 332, 333, 334, 550, 551, 785, 788, 797, 803, 948], "importantli": [140, 141, 228, 316], "hari": [140, 141, 154, 204, 277, 301, 302], "neuromagnet": [140, 232, 277, 635], "1997": [140, 206, 233, 234, 277, 320, 364, 365, 736, 801, 811, 812, 815], "s0166": [140, 277], "2236": [140, 277], "10065": [140, 277], "328": [140, 148, 188, 195, 236, 255, 277, 333, 334, 423, 875, 935], "bradlei": [140, 277], "efron": [140, 277], "trevor": [140, 277], "hasti": [140, 277], "institut": [140, 277, 814, 817], "mathemat": [140, 177, 202, 227, 229, 237, 255, 277, 294, 309, 316, 320, 580, 602, 770, 814, 817], "monograph": [140, 277], "cambridg": [140, 177, 277, 423], "univers": [140, 277, 283, 310, 317, 322, 423, 522, 953], "york": [140, 229, 277, 289, 322, 522, 953], "isbn": [140, 177, 229, 252, 277, 330, 331, 332, 333, 334, 364, 365, 423, 765, 783, 787], "14989": [140, 277], "web": [140, 172, 232, 240, 270, 277, 304, 341, 623, 842], "stanford": [140, 277], "casi": [140, 277], "iter_freq": 140, "frequency_map": 140, "job": [140, 230, 232, 239, 278, 306, 323, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 485, 486, 488, 489, 493, 494, 495, 496, 499, 500, 521, 522, 523, 526, 539, 541, 550, 551, 593, 596, 597, 608, 609, 618, 619, 640, 647, 648, 722, 731, 732, 734, 735, 736, 748, 770, 771, 772, 773, 774, 785, 788, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 814, 815, 816, 817, 835, 867, 870, 889], "apply_hilbert": [140, 141, 142, 162, 193, 283, 284, 288, 331, 332, 333, 334, 550, 551], "269399": 140, "897": 140, "307": [140, 195, 236, 255], "1202": 140, "emerg": 140, "bootstrap": [140, 168, 198, 285, 762, 785, 786, 788, 789, 859], "domin": [140, 231, 237, 270, 338, 339, 342, 345, 346, 347, 517, 635], "winter_r": 140, "freq_nam": 140, "ci_low": 140, "ci_up": 140, "dhz": 140, "xy": [140, 142, 162, 207, 320, 389, 503, 834, 905], "horizontalalign": [140, 229, 233], "xycoord": 140, "trade": [141, 229, 813, 816], "bharadwaj": [141, 154, 277, 301, 302], "berkelei": [141, 142, 322, 953], "sim0001": 141, "sim0002": 141, "1024": [141, 770, 771, 773, 774], "burst": [141, 209, 212, 226, 317], "ramp": [141, 229], "logical_or": 141, "on_tim": 141, "han": [141, 291, 292, 294, 662, 735, 736, 812, 813, 815, 816], "sin50hz": 141, "4000": [141, 192, 234, 323, 575], "41160": 141, "41159": 141, "time_bandwidth": [141, 496, 813, 816], "sim": [141, 320, 610], "nmore": 141, "1025": [141, 170, 268], "balanc": [141, 228, 229, 255, 259, 280, 739, 764], "strictli": [141, 177, 187, 194, 195, 204, 229, 231, 283, 295, 357, 833], "regard": [141, 235, 252, 260, 269, 285, 301, 320, 655], "recoverd": 141, "lossless": 141, "disregard": 141, "numer": [141, 182, 188, 197, 229, 232, 240, 243, 255, 260, 283, 289, 303, 304, 310, 312, 320, 337, 344, 422, 446, 518, 550, 551, 635, 760, 770, 771, 773, 774, 798, 935, 941], "all_n_cycl": 141, "isinst": [141, 166, 326, 549], "exagger": 141, "wise": [141, 188, 226, 230, 288, 319, 333, 334, 492, 772], "epochs_hilb": 141, "tfr_data": 141, "413": [141, 204, 236, 277], "3301": [141, 222, 240], "255": [141, 186, 195, 259, 270, 273, 338, 339, 342, 345, 346, 347, 833, 854, 893, 898, 899], "avgpow": 141, "avg_pow": [141, 812, 813], "mesh": [141, 182, 186, 187, 201, 285, 291, 292, 295, 303, 304, 333, 334, 337, 339, 345, 347, 376, 377, 429, 482, 538, 539, 713, 833, 835, 870, 894, 898, 912, 933, 947], "electrocorticographi": [142, 162, 277, 282, 317, 320, 331, 332, 333, 334, 550, 551, 632, 633, 783, 785, 786, 787, 788, 789], "scatterplot": 142, "pyvista": [142, 197, 207, 278, 288, 292, 293, 295, 304, 312, 318, 329, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 550, 551, 833, 836, 845, 849, 851, 863, 891, 893, 894, 898, 900, 905, 940, 941], "own": [142, 177, 203, 209, 234, 246, 257, 260, 273, 274, 309, 310, 331, 332, 333, 334, 338, 341, 342, 346, 389, 548, 550, 551, 670, 833, 866, 893, 935, 944, 945], "dirnam": [142, 153, 185, 197], "pathlib": [142, 151, 170, 183, 196, 198, 289, 294, 295, 303, 319, 341, 447, 448, 449, 452, 453, 454, 456, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 597], "noqa": [142, 144, 233, 255], "f401": [142, 255], "misc_path": [142, 161, 208], "ecog_data_fnam": 142, "sample_ecog_ieeg": 142, "click": [142, 159, 168, 176, 177, 182, 187, 207, 218, 227, 232, 245, 246, 269, 280, 283, 286, 288, 293, 294, 300, 301, 302, 309, 312, 318, 328, 331, 332, 333, 334, 336, 340, 346, 347, 483, 490, 550, 551, 634, 635, 783, 785, 786, 788, 789, 834, 848, 856, 865, 866, 867, 869, 871, 873, 874, 878, 882, 887, 888, 889, 890, 891, 895, 896, 897, 899, 940, 947], "layout_path": 142, "__file__": [142, 151, 196, 197, 198], "layout_nam": 142, "custom_layout": 142, "lout": [142, 196, 298, 381, 394, 395, 406], "sample_ecog": 142, "apply_tran": [142, 161, 182, 186, 208, 295, 380], "conjunct": [142, 255, 312, 326, 331, 332, 485], "xy_pt": [142, 162], "beta_pow": 142, "fig2": [142, 177, 196, 274], "coolwarm": 142, "cbar": [142, 172, 223, 255, 273, 854], "set_axis_off": [142, 162, 198], "bbox_inch": [142, 303], "tight": [142, 177, 187, 278, 302, 303, 333, 334, 808, 869, 871], "669": [142, 222, 260], "mous": [142, 218, 245, 274, 285, 294, 318, 328, 329, 331, 332, 333, 334, 340, 483, 490, 542, 550, 551, 634, 635, 783, 785, 786, 788, 789, 834, 835, 849, 851, 863, 865, 866, 867, 869, 870, 871, 874, 878, 887, 889, 890, 895, 897], "imread": [142, 149, 198], "plot_click": [142, 834, 954], "to_layout": [142, 834, 954], "got": [142, 170, 197, 227, 232, 252, 295, 944], "3d_to_2d": [142, 156, 955], "scalarmapp": 143, "low_contrast": [143, 154, 161, 207, 217, 338, 339, 342, 345, 346, 347, 833, 893, 898], "rh_data": [143, 201, 342, 345], "rh_vertno": [143, 201, 342, 345, 746], "recon": [143, 161, 181, 186, 289, 295, 303, 307, 377, 435, 621], "brodmann": 143, "ba44": 143, "add_head": [143, 161, 182, 217, 295, 833], "seghead": [143, 182, 183, 184, 187, 198, 202, 208, 209, 323, 329, 833, 851, 863], "add_sensor": [143, 161, 162, 217, 238, 295, 307, 833], "role": [143, 191, 196, 203, 213, 214, 309, 310, 328, 329, 333, 335, 336, 342, 433, 601, 602, 613, 691, 700, 702, 715, 731, 833, 843, 851, 863, 903, 955], "sample_audvis_set1": 143, "ylorrd": 143, "add_dipol": [143, 303, 833], "1e8": 143, "static": [143, 206, 237, 243, 277, 284, 288, 291, 294, 323, 330, 458, 667, 821, 822, 823, 940], "add_ax": [143, 273], "995": [143, 156, 250, 260, 955], "embed": [144, 182, 198, 228, 229, 285, 309, 341, 948], "simplic": [144, 203, 223, 229, 255, 259, 303, 935], "instal": [144, 161, 162, 172, 181, 187, 197, 207, 287, 288, 295, 303, 307, 309, 321, 323, 331, 332, 333, 334, 349, 371, 375, 455, 458, 482, 485, 489, 494, 521, 522, 523, 550, 551, 787, 935, 936, 949], "order_func": 144, "spectral_embed": 144, "rbf_kernel": 144, "this_data": 144, "good_pick": 144, "bad_pick": [144, 239], "plt_time": 144, "overlay_tim": [144, 155, 282, 331, 332, 866], "renaud": [144, 277], "keriven": [144, 277], "maureen": [144, 277], "clerc": [144, 277], "1051": [144, 236, 277], "1061": [144, 277], "2037139": [144, 277], "channel_epochs_imag": [144, 156, 955], "225": [145, 156, 170, 195, 212, 236, 259, 273, 277, 317, 955], "eeg_on_scalp": [145, 156, 955], "upon": [146, 170, 183, 196, 198, 274, 287, 295, 309, 310, 331, 332, 341, 489, 550, 551, 834, 852, 905, 947], "hosaka": [146, 277, 287, 852], "flow": [146, 204, 277, 287, 852], "underneath": [146, 287, 852], "poor": [146, 226, 229, 238, 288, 852], "man": [146, 177, 198, 277, 852], "hidehiro": [146, 277, 852], "electrocardiologi": [146, 277, 852], "1976": [146, 277, 852], "s0022": [146, 277, 852], "0736": [146, 277, 852], "80041": [146, 277, 852], "khansheraz": 146, "evoked_mag": 146, "evoked_grad": 146, "topoplot": [146, 170, 196, 232, 270, 304, 852, 855], "max_time_idx": 146, "latitud": [146, 852], "longitud": [146, 186, 852], "radial": [146, 184, 608, 609, 619, 723, 852], "cartesian": [146, 201, 204, 320, 852], "info_from": [146, 305, 852], "info_to": [146, 852], "raw_ctf": 146, "raw_ctf_info": 146, "evoked_arrowmap": [146, 156, 955], "engeman": 147, "miko\u0142aj": [147, 283, 284, 285, 286, 288, 291, 293, 295, 303, 304, 306, 307, 953], "magnuski": [147, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 295, 303, 304, 306, 307, 953], "mmagnuski": [147, 282], "swp": [147, 322, 953], "pl": 147, "20m": 147, "regularli": [147, 192, 194], "multilin": [147, 291], "all_tim": 147, "rm": [147, 176, 177, 215, 252, 282, 294, 308, 320, 328, 331, 332, 333, 334, 342, 483, 490, 550, 551, 610, 634, 635, 783, 869, 873, 874, 878, 879, 890, 897], "drawn": [147, 176, 246, 255, 295, 305, 328, 331, 332, 333, 334, 339, 340, 345, 347, 483, 490, 550, 551, 634, 635, 650, 735, 736, 783, 785, 786, 788, 789, 852, 853, 858, 859, 865, 867, 868, 871, 873, 874, 878, 887, 889, 890, 891, 895, 897, 898, 907], "spectral_r": 147, "circl": [147, 187, 196, 219, 251, 280, 301, 304, 309, 319, 328, 331, 332, 333, 334, 336, 340, 380, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 839, 852, 857, 859, 867, 869, 871, 874, 875, 878, 885, 887, 889, 890, 891, 895, 897], "extrapol": [147, 176, 238, 288, 291, 292, 293, 306, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 852, 867, 874, 878, 887, 890, 895, 897], "box": [147, 187, 216, 278, 292, 302, 328, 331, 332, 333, 334, 340, 381, 389, 406, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 829, 852, 867, 869, 871, 873, 874, 878, 887, 890, 895, 897, 947], "stretch": [147, 228, 833], "beyond": [147, 170, 192, 217, 265, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 587, 634, 635, 650, 778, 783, 785, 786, 788, 789, 829, 852, 867, 874, 878, 887, 888, 890, 895, 897], "axes_row": 147, "extr": 147, "margin": [147, 273, 787, 859], "exceed": [147, 210, 234, 237, 257, 331, 635, 668, 787], "mask_param": [147, 260, 328, 331, 332, 333, 334, 483, 490, 550, 551, 634, 783, 785, 786, 788, 789, 852, 867, 874, 890, 895, 897], "markers": [147, 260, 328, 331, 332, 333, 334, 483, 490, 550, 551, 634, 783, 785, 786, 788, 789, 852, 867, 874, 890, 895, 897], "markerfacecolor": [147, 328, 331, 332, 333, 334, 483, 490, 550, 551, 634, 783, 785, 786, 788, 789, 852, 867, 874, 890, 895, 897], "_time": 147, "significant_channel": 147, "_channel": 147, "_ch": 147, "perhap": [147, 229, 234, 243, 255], "imped": [147, 229, 277, 292], "image_interp": [147, 304, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 852, 867, 874, 878, 887, 890, 895, 897], "cubic": [147, 304, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 833, 835, 852, 867, 870, 874, 878, 887, 890, 895, 897], "smoothest": 147, "voronoi": [147, 304, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 852, 867, 874, 878, 887, 890, 895, 897], "debug": [147, 188, 197, 309, 323, 447, 448, 449, 452, 453, 454, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 729, 828, 831, 935], "unalt": [147, 430], "properli": [147, 162, 181, 182, 187, 194, 209, 216, 227, 233, 234, 243, 244, 263, 265, 274, 277, 278, 281, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 309, 316, 323, 326, 330, 331, 332, 333, 334, 336, 342, 371, 375, 416, 429, 485, 489, 494, 521, 522, 523, 550, 551, 652, 653, 727, 748, 783, 787, 829, 875, 901, 940, 944], "animate_topomap": [147, 282, 291, 304, 305, 333, 334], "frame_r": [147, 333, 334], "blit": [147, 333, 334], "evoked_topomap": [147, 156, 955], "excel": [148, 176, 186, 229, 252], "diagnost": [148, 191, 198, 232, 237, 241], "rare": [148, 282, 283, 295, 310, 341], "80e": [148, 238, 320], "uncom": 148, "fewer": [148, 170, 177, 187, 196, 198, 226, 229, 244, 255, 265, 285, 331, 332, 333, 334, 341, 485, 489, 494, 495, 519, 521, 522, 550, 551, 661, 666, 813, 816, 833, 871], "007": [148, 155, 166, 167, 168, 171, 175, 192, 195, 228, 234, 252, 256, 277, 349, 674], "method_param": [148, 205, 423, 428, 602, 603, 604, 605, 606, 608, 609, 615, 618, 619], "diagonal_fix": [148, 188, 287, 423], "return_estim": [148, 188, 423, 428, 935], "likelihood": [148, 177, 188, 203, 277, 320, 328, 333, 334, 423, 428, 635, 875, 935], "loglik": [148, 328], "1891": 148, "unseen": [148, 188, 203, 423, 935], "descend": [148, 188, 203, 288], "1628": 148, "673": [148, 222], "1659": 148, "1802": [148, 206, 227, 277], "672906104771": 148, "829870948659": 148, "1031535821069": 148, "evoked_whiten": [148, 156, 955], "cover": [149, 166, 173, 175, 177, 179, 181, 188, 189, 191, 192, 194, 197, 198, 199, 213, 220, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 241, 243, 246, 247, 255, 266, 270, 271, 275, 292, 303, 309, 320, 321, 337, 341, 670, 678, 687, 767, 930], "tracker": [149, 191, 218, 241, 242, 308, 309, 317, 325, 331, 524, 568, 570, 626, 655, 656, 657, 684, 844, 935, 955], "asc": [149, 240, 320, 570, 657], "plot_gaz": [149, 240], "task_fpath": 149, "et_fpath": [149, 240], "freeview_eyetrack": 149, "stim_fpath": 149, "naturalist": 149, "pixel": [149, 168, 198, 219, 240, 255, 273, 303, 317, 319, 328, 329, 331, 332, 333, 334, 338, 339, 340, 341, 342, 345, 346, 347, 483, 490, 542, 550, 551, 634, 635, 655, 657, 783, 785, 786, 788, 789, 833, 844, 851, 852, 863, 867, 874, 878, 887, 890, 893, 895, 897, 898], "eyegaz": [149, 195, 219, 240, 278, 331, 332, 333, 334, 550, 551, 632, 656, 658, 783, 785, 786, 787, 788, 789, 844], "legibl": [149, 219, 240], "pupil": [149, 195, 240, 278, 331, 332, 333, 334, 550, 551, 632, 656, 658, 783, 785, 786, 787, 788, 789], "bad_acq_skip": [149, 219, 240, 286, 303, 308, 325, 331, 332, 333, 334, 550, 551, 570, 572, 659, 670], "interpolate_gaz": [149, 240, 656], "renam": [149, 163, 177, 216, 238, 243, 280, 282, 285, 289, 292, 295, 300, 303, 307, 308, 309, 325, 331, 332, 333, 334, 336, 380, 408, 550, 551, 559, 566, 718, 833, 845, 900, 949, 954], "dvn": 149, "intuit": [149, 198, 223, 270, 484, 499, 741, 742], "event_dict": [149, 166, 168, 171, 175, 177, 192, 194, 238, 240, 244, 250, 268], "bad_": [149, 240, 245, 288, 308], "bad_blink": [149, 219, 228, 240, 308, 656], "canva": [149, 274, 320, 331, 332, 333, 334, 783, 844, 848, 873, 896], "screen": [149, 166, 197, 219, 240, 277, 278, 285, 288, 307, 317, 323, 331, 332, 550, 551, 635, 655, 657, 844, 865, 882, 888, 901], "1920x1080": [149, 655, 657, 844], "height": [149, 197, 212, 240, 273, 286, 305, 319, 323, 336, 338, 339, 342, 345, 346, 347, 377, 381, 389, 394, 542, 655, 657, 833, 843, 844, 893, 898], "px_width": 149, "px_height": 149, "1920": [149, 240, 255, 655, 657, 844], "get_cmap": [149, 162], "10001": [149, 229, 303], "gaze": [149, 240, 655, 658, 844], "greater": [149, 170, 192, 227, 232, 255, 258, 283, 293, 331, 332, 343, 424, 425, 426, 427, 524, 635, 665, 666, 772, 787, 814, 817, 833], "darkest": 149, "set_und": 149, "0003": [149, 322], "768": [149, 156, 209, 222, 955], "eyetracking_plot_heatmap": [149, 156, 955], "root_path": 151, "parent": [151, 176, 187, 196, 197, 198, 306], "324474": 151, "bti_path": 151, "test_pdf_linux": 151, "test_config_linux": 151, "test_hs_linux": 151, "magn": [151, 215, 320], "3600wh": 151, "pdf": [151, 211, 222, 277, 321, 323, 458, 545, 562], "critic": [151, 177, 186, 197, 204, 211, 229, 237, 255, 257, 260, 317, 670, 729, 831, 938], "mne_create_comp_data": [151, 211, 323, 562], "print_tabl": [151, 211], "magnes_3600wh": [151, 211], "kit_path": 151, "sqd": [151, 197, 212, 320, 323, 554, 576, 696], "artemis_data_2017": 151, "10h": 151, "38m": 151, "59s_phantom_1k_hpi_1": 151, "artemis123_mneloc": 151, "1863": 151, "hpifit": [151, 236, 323], "ok": [151, 215, 236, 327, 337], "997": [151, 229, 237, 277], "cardin": [151, 192, 195, 243, 250, 291, 319, 373, 374, 403, 502], "meg_sensor": [151, 156, 284, 955], "674": [152, 156, 260, 955], "mne_helmet": [152, 156, 955], "ship": [153, 196, 255, 303, 320, 331, 332, 333, 334, 336, 390, 391, 396, 397, 535, 550, 551, 951], "joan": [153, 163, 185, 285, 286, 287, 288, 289, 291, 305], "massich": [153, 163, 185, 285, 286, 287, 288, 289, 291, 305], "mailsik": [153, 163, 185], "op": [153, 185, 210, 211, 236, 331, 332, 333, 334, 550, 551], "against": [153, 166, 167, 175, 232, 243, 277, 281, 284, 295, 309, 740, 745], "current_montag": 153, "fiduci": [153, 162, 182, 185, 186, 196, 215, 216, 278, 284, 285, 287, 289, 291, 293, 294, 295, 300, 303, 304, 305, 316, 319, 320, 380, 383, 384, 393, 403, 404, 434, 435, 436, 457, 555, 558, 576, 585, 696, 721, 851], "mri_fiduci": [153, 182, 185, 209, 293, 851], "montage_sgskip": [153, 156, 955], "hcp": [154, 277, 284, 458, 948], "mmp1": [154, 277, 284, 458], "448": [154, 197, 255, 288, 344], "mmp": [154, 458], "Of": [154, 168, 226, 233, 234, 252, 675, 676], "acknowledg": [154, 229], "wu": 154, "minn": 154, "publicli": [154, 192, 310, 317, 475, 476], "hcpmmp1": 154, "add_annot": [154, 161, 181, 207, 278, 833], "aud_label": 154, "l_a1_roi": 154, "hcpmmp1_combin": [154, 207, 458], "aparc_sub": 154, "matthew": [154, 206, 277, 458], "glasser": [154, 277, 458], "timothi": [154, 277, 295, 458], "coalson": [154, 277, 458], "emma": [154, 277, 458, 635], "robinson": [154, 206, 277, 458], "hacker": [154, 277, 458], "harwel": [154, 277, 458], "essa": [154, 277, 458], "yacoub": [154, 277, 458], "kamil": [154, 277, 458], "ugurbil": [154, 277, 458], "jesper": [154, 277, 285, 458], "andersson": [154, 277, 458], "beckmann": [154, 277, 458], "jenkinson": [154, 277, 458], "stephen": [154, 206, 222, 255, 256, 277, 285, 458, 489, 635, 770, 771, 773, 774, 814, 817], "essen": [154, 277, 458], "modal": [154, 216, 259, 265, 277, 458], "cerebr": [154, 277, 458], "536": [154, 223, 260, 277, 458], "nature18933": [154, 277, 458], "javeria": [154, 277], "hashmi": [154, 277], "fahimeh": [154, 277, 291], "mamashli": [154, 277, 291], "konstantino": [154, 277], "michmizo": [154, 277], "manfr": [154, 277, 290], "kitzbichl": [154, 277, 290], "santosh": [154, 277], "ganesan": [154, 277], "keri": [154, 277], "lee": [154, 277, 302, 337, 342, 635, 668], "garel": [154, 277], "susan": [154, 277, 736], "whitfield": [154, 277], "gabri": [154, 277], "randi": [154, 277, 602], "gollub": [154, 277], "jian": [154, 277], "kong": [154, 277], "kunjan": [154, 277], "rana": [154, 277], "kenet": [154, 277], "matur": [154, 277], "trajectori": [154, 277], "network": [154, 222, 277, 278, 364, 489, 635, 950], "mediat": [154, 277, 814, 817], "notat": [155, 233, 259, 265, 312, 320], "odd": [155, 229, 320, 392, 482], "test_raw": [155, 194, 323], "eog1": 155, "eog2": 155, "012": [155, 166, 175, 195, 246, 252], "017": [155, 166, 175, 195, 212, 243, 252], "019": [155, 166, 175, 195, 235, 252, 277], "021": [155, 166, 167, 175, 192, 195, 252], "022": [155, 166, 175, 195, 210, 252], "023": [155, 166, 168, 175, 195, 252, 277], "024": [155, 166, 175, 195, 252, 260, 277, 770, 771, 773, 774], "po7": [155, 270], "026": [155, 166, 175, 195, 252, 277], "poz": [155, 270], "027": [155, 166, 175, 195, 252, 255, 277, 314, 364, 635, 776, 777], "028": [155, 166, 175, 195, 252, 260, 262, 277, 643, 814, 817, 955], "029": [155, 163, 165, 166, 175, 195, 252, 277, 955], "standard_1020": [155, 177, 185, 196, 250, 575], "fdt": [155, 194, 567, 694], "msec": [155, 177, 783], "new_ev": [155, 244, 509, 511, 600], "203125": 155, "12z": [155, 256], "group_bi": [155, 168, 256, 287, 289, 293, 304, 323, 331, 332, 333, 334, 550, 551, 865, 866, 871, 888], "vline": [155, 288, 333, 334, 859, 873], "roi_erpimage_by_rt": [155, 156, 955], "818": 156, "topo_custom": [156, 159, 955], "ssp_projs_sensitivity_map": [156, 157, 955], "987": [156, 157, 955], "xhemi": [156, 160, 343, 429, 707, 955], "175": [156, 160, 168, 176, 195, 212, 236, 255, 277, 635, 955], "topo_compare_condit": [156, 158, 955], "ecg_fnam": 157, "ssp_ecg_map": 157, "arg": [157, 259, 265, 309, 323, 336, 344, 765], "audio": [158, 201, 218, 223, 268, 277, 331, 332, 333, 334, 490, 550, 551, 785, 787, 788, 804], "nleft": 158, "20hz": 159, "return_freq": [159, 163, 268, 269, 270, 305, 785, 786, 788, 789], "my_callback": 159, "ch_idx": [159, 236, 257, 269], "callback": [159, 274, 284, 301, 434, 833, 848, 915, 916, 918], "fig_facecolor": [159, 168, 268, 331, 332, 333, 334, 550, 551, 783, 785, 786, 788, 789, 848, 896], "axis_facecolor": [159, 268, 331, 332, 333, 334, 550, 551, 785, 786, 788, 789, 848], "axis_spinecolor": [159, 848], "on_pick": [159, 848], "gcf": 159, "stc_path": [160, 198], "fsaverage_sym": [160, 429], "left_right": [160, 429], "stc_xhemi": 160, "70314401": 160, "48867635": 160, "29876034": 160, "stereoelectroencephalographi": [161, 317], "talairach": [161, 186, 206, 207, 286, 289, 320, 346, 347, 435, 436, 714, 899, 935], "xfm": [161, 286, 320, 346, 347, 436, 714, 899], "involv": [161, 162, 182, 184, 186, 226, 229, 230, 233, 245, 310, 320, 436, 637, 917], "pip": [161, 162, 172, 187, 309, 940, 943, 946, 949], "conda": [161, 162, 187, 287, 309, 312, 940, 941, 943, 946, 949], "li": [161, 162, 186, 198, 235, 277, 291, 292, 293, 294, 295, 303, 304, 320, 953], "adam2392": [161, 162], "sample_seeg_ieeg": 161, "1310640": 161, "1370605": 161, "411": [161, 255, 260, 277, 423], "1371": [161, 183, 223, 268, 277, 331, 332, 333, 334, 550, 551, 785, 788, 797, 803], "fixat": [161, 219, 240, 278, 317, 507, 570], "isi": [161, 218], "mni_tal": [161, 162, 380, 393], "this_subject_dir": 161, "head_mri_t": 161, "sample_seeg": 161, "mri_mni_t": [161, 714], "taliarach": 161, "fro": [161, 527, 820], "rostral": [161, 833], "warp": [161, 182, 185, 197, 277, 295, 317, 667], "combine_transform": 161, "view_kwarg": [161, 183, 186], "tan": [161, 239, 295], "video": [161, 182, 186, 187, 304, 307, 317, 909, 937], "nearbi": [161, 162, 222, 226, 234, 237, 251, 277, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 665, 670, 778, 783, 785, 786, 788, 789, 852, 867, 874, 878, 887, 890, 895, 897], "atla": [161, 207, 277, 295, 317, 319, 320, 323, 329, 338, 339, 342, 344, 345, 346, 347, 377, 517, 589, 732, 935], "lami": 161, "lttr": 161, "isdigit": 161, "lpm": 161, "lsma": 161, "elec": [161, 256], "rahp": 161, "lent": 161, "lpit": 161, "lphg": 161, "lbri": 161, "lpcn": 161, "lacn": 161, "lstg": 161, "lpli": 161, "lofc": 161, "ltpo": 161, "rphp": 161, "ctx": 161, "putamen": 161, "add_volume_label": [161, 207, 295, 303, 306, 308, 833], "lfp": 161, "Its": [161, 236, 320], "view_layout": [161, 206, 338, 339, 342, 345, 346, 347, 833, 893, 898], "sagitt": [161, 186, 206, 329, 833, 853, 863], "websit": [161, 162, 177, 203, 207, 216, 234, 274, 309, 310, 475, 476, 650, 944], "m4": 161, "sai": [161, 162, 229, 230, 233, 235, 243, 250, 257, 260, 309, 316, 829, 947], "20_seeg": [161, 165, 955], "epilepsi": [162, 294], "seizur": [162, 294], "complementari": [162, 228, 312], "seeg": [162, 164, 165, 191, 195, 243, 250, 282, 286, 288, 289, 292, 293, 294, 295, 302, 305, 307, 319, 320, 331, 332, 333, 334, 336, 344, 346, 379, 380, 384, 435, 441, 443, 512, 516, 535, 550, 551, 557, 566, 631, 632, 633, 635, 712, 714, 727, 778, 783, 785, 786, 787, 788, 789, 833, 851, 857, 891, 939, 948, 955], "liberti": [162, 277, 292, 294], "hamilton": [162, 277, 292, 294], "libertyhamilton": 162, "mne_bid": 162, "bidspath": 162, "read_raw_bid": 162, "bids_root": 162, "bids_path": 162, "pt1": 162, "session": [162, 166, 168, 175, 176, 192, 197, 198, 227, 237, 239, 245, 278, 298, 303, 316, 321, 331, 332, 445, 446, 550, 551, 635, 657, 865, 882, 888, 896, 935, 940], "presurgeri": 162, "ictal": 162, "datatyp": [162, 219, 286], "trans_bandwidth": [162, 229, 519, 522, 550, 551], "get_posit": [162, 273, 293, 380], "add_mni_fiduci": [162, 295, 380], "posterior": [162, 182, 186, 303, 319, 337, 380, 392, 545, 760], "commissur": [162, 380], "epoch_length": 162, "269079": 162, "269": [162, 195, 222, 236], "2201": 162, "ad1": 162, "att1": 162, "ast1": 162, "g16": 162, "slt1": 162, "sensor_color": [162, 278, 833, 851], "gamma_power_t": 162, "gamma_info": 162, "445": [162, 223, 236], "gamma_power_at_15": 162, "rgba": [162, 295, 337, 338, 339, 342, 345, 346, 347, 833, 850, 854, 893, 898, 899], "tolist": 162, "funcanim": [162, 333, 334], "gamma_pow": 162, "x_line": 162, "epileptiform": 162, "progress": [162, 177, 191, 197, 228, 277, 287, 288, 293, 306, 307, 309, 486, 493], "posteriorli": 162, "becom": [162, 167, 208, 228, 229, 231, 232, 237, 239, 263, 264, 265, 303, 309, 310, 312, 320, 331, 332, 333, 334, 684, 856, 871, 949], "xyz_pt": 162, "vmid": 162, "intra": [162, 754], "4932": 162, "623": [162, 165, 223, 260, 955], "30_ecog": [162, 165, 955], "cite": [163, 309, 317, 330, 331, 332, 333, 334, 459, 522, 783, 787], "toi": [163, 255, 312], "answer": [163, 234, 260, 270, 309, 935], "question": [163, 167, 237, 270, 309, 311, 936, 944], "alic": 163, "tackl": 163, "chambon": [163, 277, 288], "stan": 163, "randomforestclassifi": 163, "accuracy_scor": 163, "functiontransform": 163, "associ": [163, 170, 194, 198, 218, 226, 233, 234, 236, 240, 255, 257, 274, 277, 289, 308, 309, 320, 325, 326, 330, 331, 332, 333, 334, 491, 534, 550, 551, 553, 596, 694, 696, 733, 765, 770, 775, 783, 786, 787, 857, 866, 868, 869, 871, 886, 887, 940], "ground": [163, 192, 234, 312, 635, 886], "truth": [163, 234, 635, 886], "expert": [163, 188, 309, 310, 935], "alice_fil": 163, "bob_fil": 163, "raw_train": 163, "marker": [163, 177, 194, 197, 203, 215, 216, 222, 228, 233, 287, 288, 289, 292, 294, 295, 317, 323, 328, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 483, 486, 490, 493, 496, 499, 500, 526, 539, 541, 550, 551, 554, 576, 593, 596, 597, 608, 609, 618, 619, 634, 635, 640, 647, 648, 650, 696, 731, 732, 734, 735, 736, 748, 770, 771, 772, 773, 774, 783, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 814, 815, 816, 835, 852, 865, 867, 870, 874, 878, 887, 888, 889, 890, 894, 895, 897], "infer_typ": [163, 303, 307, 559, 566], "annot_train": 163, "emit_warn": [163, 325, 550, 551, 671], "resp": [163, 195, 243, 294, 320, 331, 332, 333, 334, 336, 341, 379, 550, 551, 566, 632, 783, 785, 786, 787, 788, 789, 865, 888], "physionet_sleep": 163, "sc4001e0": 163, "recogn": [163, 197, 234, 289, 291, 294, 307, 310, 566], "oro": 163, "nasal": 163, "subment": 163, "temp": [163, 336], "rectal": 163, "7949999": 163, "79499": 163, "wake": 163, "rem": [163, 194], "abbrevi": [163, 201, 233, 305, 320, 833], "rapid": [163, 170, 222, 229, 277, 489], "long": [163, 166, 167, 172, 226, 229, 230, 232, 236, 244, 245, 250, 256, 263, 264, 283, 288, 291, 292, 303, 305, 309, 310, 312, 316, 329, 331, 332, 333, 334, 338, 339, 342, 343, 345, 346, 347, 423, 429, 550, 551, 605, 638, 643, 670, 783, 785, 786, 787, 788, 789, 833, 944, 945], "awak": 163, "night": [163, 317, 475], "imbal": [163, 259, 645, 646, 659, 670, 681], "trim": [163, 331, 332], "occurr": [163, 170, 226, 507, 509], "annotation_desc_2_event_id": 163, "redefin": 163, "events_train": 163, "chunk_dur": [163, 194, 288, 512], "stage_color": 163, "rcparam": [163, 229, 273, 287, 891], "prop_cycl": 163, "by_kei": 163, "841": [163, 174, 223, 229, 242, 260, 955], "raw_test": 163, "annot_test": 163, "events_test": 163, "epochs_test": 163, "sc4011e0": 163, "8405999": 163, "84059": 163, "1103": [163, 204, 277], "signatur": [163, 227, 259, 305, 307, 309, 318, 486, 493, 500], "ci": [163, 172, 229, 238, 255, 268, 283, 309, 312, 635, 762, 785, 786, 788, 789, 859, 880], "\u00b5v\u00b2": 163, "eeg_power_band": 163, "compat": [163, 170, 197, 280, 282, 285, 287, 289, 294, 295, 299, 300, 302, 307, 308, 320, 324, 331, 332, 333, 334, 388, 431, 441, 456, 464, 489, 491, 494, 496, 497, 498, 523, 542, 550, 551, 608, 635, 785, 786, 788, 789, 833, 851, 865, 867, 888, 889, 900, 935, 947, 949], "psds_band": 163, "boilerpl": 163, "sckit": 163, "manner": [163, 177, 204, 255, 256, 284, 326, 331, 332], "thank": [163, 166, 309], "pipe": [163, 309, 317], "n_estim": [163, 486, 493], "acc": 163, "6854034451495921": 163, "ye": [163, 236, 237, 255, 293, 333, 550, 572, 700, 935], "databas": [163, 277, 459, 475, 476], "mathieu": [163, 277, 278, 295, 303, 304, 305, 306, 307, 308, 953], "galtier": [163, 277], "pierrick": [163, 277], "arnal": [163, 277], "gill": [163, 277], "wainrib": [163, 277], "architectur": [163, 277, 293], "rehabilit": [163, 277], "758": [163, 260, 277], "769": [163, 277], "tnsre": [163, 277], "2813138": [163, 277], "kemp": [163, 277, 317, 475, 476], "zwinderman": [163, 277, 317, 475, 476], "tuk": [163, 277, 317, 476], "kamphuisen": [163, 277, 317, 475, 476], "obery\u00e9": [163, 277, 317, 476], "feedback": [163, 277, 300, 317, 476], "microcontinu": [163, 277, 317, 476], "1185": [163, 277, 317, 476], "1194": [163, 277, 317, 476], "867928": [163, 277, 317, 476], "1414": 163, "60_sleep": [163, 165, 955], "polysomnographi": [164, 165, 191, 288, 317, 325, 331, 475, 476, 512, 566, 688, 785, 868, 955], "psg": [164, 165, 191, 288, 317, 325, 331, 475, 512, 566, 688, 785, 868, 955], "567": [165, 223, 277], "auto_tutori": [165, 174, 180, 190, 197, 200, 214, 221, 225, 242, 248, 249, 254, 262, 267, 272, 276], "1413": [165, 195, 236, 955], "possibli": [166, 175, 192, 198, 229, 257, 258, 303, 316, 333, 334, 343, 364, 365, 378, 423, 427, 428, 439, 440, 441, 456, 483, 490, 526, 527, 545, 547, 548, 553, 613, 635, 654, 659, 765, 833, 875], "del_proj": [166, 175, 226, 233, 234, 235, 284, 331, 332, 333, 334, 550, 551, 954], "plot_psd": [166, 168, 246, 268, 269, 282, 284, 285, 286, 289, 291, 292, 295, 302, 308, 309, 320, 331, 332, 333, 334, 341, 550, 551, 954], "plot_psd_topomap": [166, 168, 268, 291, 292, 295, 302, 305, 331, 332, 333, 334, 550, 551, 954], "sample_data_fold": [166, 168, 171, 172, 181, 192, 193, 194, 195, 196, 226, 227, 228, 230, 232, 233, 234, 235, 237, 243, 244, 245, 246, 268], "sample_data_raw_fil": [166, 168, 171, 172, 192, 193, 194, 195, 226, 227, 228, 230, 232, 233, 234, 235, 237, 243, 244, 245, 246, 268], "sample_data_events_fil": [166, 171, 244], "events_from_fil": [166, 244], "bare": [166, 192], "integ": [166, 168, 169, 171, 175, 176, 177, 186, 192, 194, 195, 197, 201, 216, 219, 230, 232, 243, 244, 250, 260, 273, 284, 288, 289, 291, 292, 293, 295, 319, 320, 323, 326, 328, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 350, 364, 365, 378, 381, 382, 389, 395, 397, 423, 424, 425, 426, 427, 428, 439, 440, 441, 483, 485, 490, 499, 500, 504, 505, 512, 521, 522, 525, 526, 527, 541, 545, 547, 548, 550, 551, 585, 611, 612, 613, 634, 635, 637, 650, 651, 652, 653, 662, 666, 676, 678, 685, 694, 696, 700, 731, 733, 751, 769, 778, 783, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 816, 819, 852, 859, 865, 866, 867, 868, 869, 871, 872, 873, 874, 875, 878, 879, 880, 882, 884, 886, 887, 888, 889, 890, 895, 897], "299693": [166, 177], "699283": 166, "quot": [166, 222, 309, 320, 330, 331, 332, 333, 334, 783, 787], "didn": [166, 170, 286, 289, 293, 294, 303, 331, 518, 787], "string": [166, 169, 170, 171, 175, 176, 194, 195, 197, 198, 228, 240, 243, 244, 245, 268, 274, 278, 282, 286, 287, 288, 289, 291, 292, 294, 295, 299, 303, 305, 307, 309, 312, 314, 324, 325, 326, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 350, 378, 380, 389, 395, 397, 408, 422, 423, 427, 428, 432, 439, 444, 447, 448, 449, 452, 453, 454, 456, 461, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 483, 485, 486, 490, 493, 499, 500, 504, 507, 512, 517, 518, 531, 533, 535, 549, 550, 551, 552, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 589, 594, 602, 608, 609, 632, 633, 634, 635, 637, 638, 650, 651, 652, 653, 655, 656, 659, 661, 662, 666, 670, 676, 678, 685, 694, 696, 700, 718, 739, 740, 741, 742, 743, 745, 748, 751, 760, 764, 766, 769, 778, 779, 783, 784, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 816, 820, 821, 823, 833, 842, 851, 852, 859, 865, 866, 867, 869, 871, 872, 873, 874, 875, 878, 879, 886, 887, 888, 889, 890, 893, 895, 897, 898, 899, 906, 918, 935, 940, 941], "buttonpress": [166, 175, 177, 192, 194, 198, 244], "mention": [166, 170, 177, 192, 194, 195, 196, 201, 229, 233, 234, 235, 243, 260, 309, 422, 906, 907], "haven": [166, 245, 287, 309, 321], "turn": [166, 175, 176, 178, 201, 218, 227, 232, 233, 234, 235, 270, 274, 283, 284, 285, 305, 310, 317, 320, 324, 326, 331, 332, 524, 591, 732, 834, 856], "accommod": [166, 285, 288], "request": [166, 187, 192, 197, 198, 232, 234, 237, 243, 244, 283, 291, 293, 304, 307, 310, 319, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 482, 550, 551, 553, 559, 566, 635, 647, 648, 690, 727, 764, 766, 784, 785, 786, 788, 789, 843, 867, 876, 878, 893, 898, 908, 935, 936, 947, 948], "drop_log": [166, 168, 228, 292, 294, 299, 301, 326, 331, 332, 341, 647, 648, 787, 864], "too_short": [166, 177, 331, 787], "forget": [166, 183, 184, 194, 309], "brows": [166, 197, 198, 207, 227, 245, 289, 307, 318, 329, 331, 332, 550, 551, 635, 863, 865, 882, 888, 951], "seem": [166, 167, 169, 170, 177, 178, 188, 218, 229, 232, 234, 250, 270, 309, 635], "duplic": [166, 169, 177, 178, 187, 250, 283, 284, 285, 287, 288, 289, 303, 326, 331, 332, 333, 334, 336, 337, 341, 380, 408, 550, 551, 718], "scrollbar": [166, 289, 303, 331, 332, 550, 551, 635, 865, 882, 888], "focus": [166, 167, 207, 245, 309, 331, 332, 550, 551, 635, 740, 745, 865, 882, 888, 937, 945, 948], "bracket": [166, 175, 177, 195, 216, 243, 250, 268, 303], "catch": [166, 168, 192, 207, 259, 265, 309], "charact": [166, 192, 195, 227, 243, 244, 278, 283, 288, 291, 292, 294, 295, 303, 309, 392, 567, 584, 688, 694, 739, 740, 741, 742, 743, 745, 842], "tag": [166, 170, 177, 191, 271, 272, 277, 283, 291, 294, 295, 303, 308, 309, 312, 317, 319, 323, 331, 332, 336, 341, 380, 396, 507, 512, 561, 584, 632, 785, 787, 842, 897, 955], "complain": 166, "ask": [166, 170, 186, 309, 310, 314, 317, 936], "except": [166, 169, 197, 201, 202, 219, 237, 243, 289, 292, 293, 295, 303, 307, 309, 320, 331, 332, 333, 334, 336, 351, 352, 396, 417, 418, 423, 475, 524, 550, 551, 552, 624, 636, 659, 710, 774, 778, 823], "keyerror": [166, 328, 331, 332, 336, 355, 370, 601, 655, 787, 820], "rais": [166, 170, 235, 278, 283, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 303, 304, 307, 309, 310, 326, 328, 331, 332, 333, 334, 336, 337, 341, 342, 345, 351, 352, 355, 370, 384, 407, 411, 417, 418, 423, 427, 430, 432, 434, 439, 440, 475, 502, 510, 524, 530, 531, 533, 550, 551, 572, 601, 624, 635, 655, 669, 690, 701, 719, 721, 724, 728, 733, 770, 771, 773, 774, 783, 785, 786, 787, 788, 789, 820, 868, 879, 926, 928], "reorder_channel": [166, 175, 243, 286, 293, 331, 332, 333, 334, 550, 551, 783, 785, 786, 787, 788, 789], "exploratori": [166, 175, 193, 233, 243, 256, 318], "epochs_eeg": 166, "new_ord": [166, 175], "epochs_subset": 166, "032": [166, 175, 178, 180, 195, 252, 256, 277, 955], "033": [166, 175, 195, 252], "034": [166, 175, 195, 252], "035": [166, 175, 195, 252], "037": [166, 175, 195, 243, 252], "038": [166, 175, 195, 252], "039": [166, 168, 175, 195, 252], "041": [166, 168, 175, 195, 252], "042": [166, 175, 195, 252, 320], "043": [166, 175, 195, 201, 214, 252, 955], "046": [166, 168, 175, 195, 252, 277, 320, 743], "047": [166, 168, 175, 195, 252], "049": [166, 168, 175, 195, 252], "052": [166, 168, 175, 188, 195, 211, 227, 252, 277, 814, 817], "054": [166, 168, 175, 195, 235, 252, 277, 613, 740, 745], "056": [166, 168, 175, 195, 252], "058": [166, 168, 175, 195, 246, 252], "unchang": [166, 175, 233, 331, 332, 333, 334, 550, 551, 671, 722], "blinkchannel": 166, "20auditori": 166, "20buttonpress": 166, "4face": [166, 177], "4visual": 166, "19visual": 166, "shorter_epoch": 166, "include_tmax": [166, 289, 295, 305, 329, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 783, 787], "obj": [166, 187, 292, 713, 933], "0998976": 166, "expand": [166, 170, 186, 228, 233, 240, 295, 301, 303, 304, 307, 331, 332, 333, 334, 337, 342, 345, 423, 513, 516, 541, 550, 551, 785, 786, 788, 789, 867, 935, 954], "later_epoch": 166, "tshift": [166, 330, 331, 332, 333, 334, 511, 783, 787], "amount": [166, 167, 188, 193, 204, 227, 234, 235, 251, 270, 291, 320, 328, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 345, 346, 347, 432, 444, 483, 490, 523, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 594, 610, 634, 635, 679, 695, 783, 785, 786, 787, 788, 789, 844, 865, 867, 874, 878, 887, 888, 890, 893, 895, 897, 898, 935], "00166496": 166, "00332992": 166, "99833504": 166, "99667008": 166, "enforc": [166, 291, 665], "eog_data": 166, "channel_4_6_8": 166, "arr": [166, 243, 270, 762], "repeatedli": [166, 232, 234, 291, 550, 551, 947], "hierarch": [166, 169, 170, 268, 277, 283, 319, 507, 545, 600], "multiindex": [166, 331, 332, 783, 785, 786, 787, 788, 789], "aggreg": [166, 169, 171, 269, 278, 285, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 382, 507, 517, 550, 551, 783, 785, 786, 788, 789, 866, 867], "endpoint": [166, 169, 194, 198, 250, 326, 331, 332, 333, 334, 338, 339, 341, 342, 345, 346, 347, 354, 652, 700, 701, 801, 811], "sort_index": 166, "inplac": [166, 171, 309, 325, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 385, 508, 518, 550, 551, 631, 684, 737], "audiovisu": [166, 192, 243], "epochs_from_fil": 166, "convent": [166, 186, 196, 198, 215, 217, 233, 234, 244, 277, 305, 308, 320, 323, 336, 371, 392, 402, 568, 678, 701, 717, 801, 810, 811, 833], "basenam": [166, 244], "_epo": 166, "issu": [166, 167, 170, 177, 187, 222, 229, 230, 233, 244, 245, 280, 288, 289, 293, 294, 303, 304, 309, 310, 311, 312, 319, 331, 332, 337, 342, 356, 358, 494, 550, 551, 635, 677, 746, 749, 865, 882, 888, 936, 940], "adher": [166, 169, 427, 515], "epochsfif": [166, 169], "anyth": [166, 215, 232, 309, 457, 833, 946], "592": [166, 174, 223, 955], "10_epochs_overview": [166, 174, 955], "aldai": [167, 277, 283, 285, 286, 304], "reason": [167, 175, 176, 188, 192, 197, 198, 210, 227, 228, 229, 230, 231, 233, 234, 235, 243, 245, 255, 264, 265, 277, 303, 309, 310, 316, 320, 330, 331, 332, 333, 334, 341, 365, 423, 441, 495, 550, 551, 635, 647, 660, 663, 670, 770, 771, 773, 774, 776, 783, 787, 833, 864, 901, 903, 935], "safer": [167, 338, 339, 342, 345, 346, 347, 563], "distort": [167, 216, 229, 246, 270, 563, 823], "spuriou": [167, 172, 188, 524, 935], "carina": [167, 304], "forster": [167, 304], "email": [167, 309, 947], "carinaforster0611": 167, "baseline_tmin": 167, "baseline_tmax": 167, "4957": [167, 177, 403], "trad_aud": 167, "trad_vi": 167, "heterogen": [167, 228, 283, 288], "aud_predictor": 167, "vis_predictor": 167, "trickier": 167, "seaprat": 167, "baseline_predictor": 167, "singleton": [167, 293, 833], "1e6": [167, 175, 177, 273, 328, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 423, 427, 428, 483, 490, 492, 550, 551, 866, 869, 871, 873, 874, 896], "\u03bcv": 167, "microvolt": [167, 215, 320, 561], "unstabl": [167, 188, 231, 293, 423, 935], "transpos": [167, 243, 255, 256, 260, 263, 264, 265, 293], "reg_model": 167, "6360": 167, "lm": [167, 643], "namedtupl": [167, 768], "dict_kei": [167, 195, 233], "1998": [167, 175, 277, 320], "49949": [167, 175], "tell": [167, 176, 181, 188, 192, 197, 228, 232, 234, 240, 243, 257, 259, 265, 309, 311, 320, 344, 944, 945], "strongli": [167, 198, 226, 227, 235, 309, 316, 320, 550, 551, 583, 935, 940], "\u03b2": [167, 168, 246], "constant": [167, 182, 186, 196, 223, 226, 229, 239, 270, 286, 288, 289, 317, 319, 320, 326, 331, 332, 333, 334, 336, 441, 550, 551, 553, 555, 585, 821], "effect_of_baselin": 167, "unsurprisingli": 167, "farther": [167, 935], "weaker": [167, 320, 331, 332, 333, 334, 518, 519, 521, 522, 550, 551], "pure": [167, 309, 342], "influenc": [167, 229, 231, 232, 277, 310], "reg_aud": 167, "reg_vi": 167, "show_sensor": [167, 170, 192, 286, 859], "truncate_yaxi": [167, 260, 285, 289, 859], "subtl": 167, "apart": [167, 176, 194, 250], "diff_tradit": 167, "diff_regress": 167, "themselv": [167, 310, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 613, 875], "ought": 167, "persist": [167, 168, 226, 230, 281, 935], "interaction_effect": 167, "randomli": [167, 192, 255, 587, 668, 687, 749], "glm": [167, 277, 948], "lift": [167, 204, 223, 263, 265, 277], "13451": [167, 277], "634": [167, 174, 175, 260, 277, 635, 955], "15_baseline_regress": [167, 174, 955], "imagemap": 168, "discontinu": [168, 172, 173, 174, 177, 191, 194, 229, 232, 243, 244, 250, 268, 319, 331, 524, 570, 693, 785, 786, 788, 789, 955], "176": [168, 195, 197, 223, 236, 255, 259, 277, 635], "until": [168, 227, 228, 235, 238, 309, 320, 326, 329, 331, 332, 333, 334, 336, 338, 339, 342, 345, 346, 347, 542, 549, 550, 551, 635, 638, 785, 786, 788, 789, 830, 833, 863, 865, 882, 888, 891], "That": [168, 170, 187, 188, 229, 260, 273, 278, 320, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 613, 875], "scroll": [168, 192, 245, 246, 274, 286, 303, 329, 331, 332, 550, 551, 635, 863, 865, 882, 888, 904], "enabl": [168, 198, 246, 270, 278, 280, 282, 283, 285, 289, 292, 294, 302, 304, 305, 307, 310, 316, 320, 323, 324, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 443, 542, 550, 551, 650, 677, 729, 770, 771, 773, 774, 785, 786, 787, 828, 833, 835, 843, 848, 851, 870, 888, 893, 898, 901, 940, 947], "unappli": [168, 176, 233, 235, 303, 331, 332, 333, 334, 513, 514, 515, 516, 550, 551], "purg": 168, "catch_trials_and_buttonpress": 168, "event_color": [168, 240, 244, 291, 293, 331, 332, 550, 551, 865, 888], "butterfli": [168, 175, 177, 178, 198, 227, 233, 237, 246, 285, 288, 289, 303, 331, 332, 333, 334, 341, 550, 551, 635, 865, 869, 872, 879, 888, 904, 938], "ecg_proj_fil": [168, 233], "ecg_proj": [168, 172, 233, 234], "41auditori": 168, "40button": 168, "8face": 168, "8visual": 168, "40visual": 168, "room": [168, 177, 188, 198, 210, 218, 230, 232, 233, 235, 237, 239, 273, 277, 286, 304, 316, 319, 320, 342, 423, 428, 645, 646, 659, 670, 671], "inherit": [168, 268, 306, 423], "joint": [168, 208, 234, 277, 291, 292, 304, 305, 312, 331, 332, 333, 334, 340, 483, 490, 550, 551, 727, 785, 786, 788, 789, 867, 874, 887], "\u03b4": [168, 246], "\u03b8": [168, 246], "\u03b3": [168, 246], "jointli": [168, 188, 232, 234, 280, 288, 291, 305, 331, 332, 333, 334, 340, 364, 365, 424, 425, 426, 483, 490, 550, 551, 635, 647, 648, 785, 786, 788, 789, 867, 874, 886, 887, 935], "prefer": [168, 177, 196, 197, 216, 217, 219, 229, 232, 233, 309, 310, 311, 320, 326, 331, 332, 333, 334, 429, 490, 512, 531, 550, 551, 635, 726, 785, 788, 889, 940, 945, 947, 948], "untransform": 168, "docstr": [168, 177, 206, 229, 230, 237, 243, 246, 268, 280, 288, 295, 303, 305, 306, 307, 308, 350, 364, 365, 545, 547, 548, 613, 785, 786, 829, 831, 850], "plot_topo_imag": [168, 282, 331, 332], "accompani": [168, 310, 748], "scalebar": [168, 294], "highli": [168, 215, 234, 251, 259, 571, 695, 699, 769, 945], "customiz": [168, 333, 334, 783, 872], "respond": [168, 170, 222, 274, 310], "opposit": [168, 194, 320, 589], "0242": [168, 195], "pop": [168, 176, 227, 304, 307, 328, 331, 332, 336, 355, 370, 601, 655, 820, 896, 940], "had": [168, 177, 193, 194, 201, 207, 228, 229, 230, 233, 234, 246, 268, 270, 287, 289, 294, 295, 301, 303, 304, 308, 312, 320, 331, 332, 476, 506, 659, 700, 787, 915], "At": [168, 218, 231, 232, 238, 287, 309, 316, 388, 550, 947], "fullscreen": [168, 304, 542], "unusu": [168, 210, 227, 231], "reject_criteria": [168, 171, 177, 192, 228, 238], "3000e": [168, 171, 228], "\u00b5v": [168, 170, 171, 175, 177, 192, 228, 234, 256, 273, 294, 319, 320, 323, 328, 331, 332, 333, 334, 338, 339, 340, 341, 342, 345, 346, 347, 483, 490, 550, 551, 590, 634, 635, 650, 783, 785, 786, 788, 789, 852, 865, 866, 867, 869, 871, 874, 878, 887, 888, 890, 895, 896, 897], "font_color": [168, 331, 332, 783, 896], "reinforc": 168, "disguis": 168, "mayb": [168, 330, 331, 332, 333, 334, 550, 551, 632, 783, 785, 786, 787, 788, 789], "20_visualize_epoch": [168, 174, 955], "who": [169, 284, 285, 286, 287, 291, 292, 293, 294, 295, 309, 310, 317, 323, 336, 635, 945], "lexic": [169, 317], "decis": [169, 218, 229, 270, 317, 326, 331, 332, 594, 693], "kiloword_data_fold": 169, "kiloword_data_fil": 169, "capabl": [169, 181, 192, 194, 274, 287, 300, 309, 317, 446, 833, 900, 904, 919, 920, 940, 948], "surviv": [169, 336], "reload": 169, "attach": [169, 195, 227, 240, 243, 256, 268, 317, 319, 507, 601], "numberoflett": [169, 256], "english": [169, 317], "lexicon": 169, "wordfrequ": 169, "render": [169, 182, 186, 197, 198, 278, 285, 288, 292, 293, 295, 303, 304, 309, 320, 321, 323, 331, 332, 338, 339, 341, 342, 345, 346, 347, 542, 550, 551, 635, 783, 833, 843, 865, 882, 888, 893, 894, 898, 901, 903, 947], "orthographicdist": 169, "bigramfrequ": 169, "450000": 169, "189490": 169, "900000": 169, "700704": 169, "600000": 169, "858537": 169, "484": [169, 231, 255, 277, 634, 685], "700000": 169, "454540": 169, "1095": [169, 223], "539076": 169, "686": [169, 223], "drudgeri": 169, "473684": 169, "556303": 169, "732357": 169, "991226": 169, "859": [169, 260], "545879": 169, "billiard": 169, "500000": [169, 170, 222], "672098": 169, "838597": 169, "958": [169, 232, 256], "698970": 169, "615": [169, 223, 260], "088112": 169, "959": 169, "solenoid": 169, "111111": 169, "301030": 169, "544507": 169, "iloc": [169, 171], "iat": 169, "nindex": 169, "arbitrarili": [169, 184, 260, 320], "highcomplex": 169, "But": [169, 170, 198, 210, 229, 237, 239, 250, 255, 263, 270, 273, 318, 635], "startswith": [169, 295], "district": 169, "disarrai": 169, "disast": 169, "diseas": 169, "discord": 169, "dispos": 169, "lasso": [169, 277, 283, 331, 332, 333, 334, 336, 550, 551, 865, 888, 891], "tentacl": 169, "banjo": 169, "corsag": 169, "fall": [169, 177, 194, 197, 237, 245, 282, 291, 294, 319, 320, 324, 341, 434, 476, 507, 524, 637], "rich": [169, 197, 940, 945], "typhoon": 169, "bungalow": 169, "colossu": 169, "linguist": 169, "dozen": [169, 227, 232, 234, 318], "share": [169, 217, 229, 240, 245, 289, 291, 295, 304, 309, 318, 320, 325, 364, 684, 770, 771, 773, 774, 914], "letter": [169, 196, 215, 256, 277, 284, 833], "n_letter": 169, "intens": [169, 186, 197, 207, 208, 217, 232, 303, 319, 333, 334, 338, 339, 342, 345, 346, 347, 349, 611, 612, 665, 833, 835, 870, 893, 898], "sort_ord": 169, "obviou": [169, 197, 227, 232, 246, 263], "reaction": [169, 255, 282, 331, 332, 866], "new_metadata": 169, "foo": [169, 176, 197, 309, 331, 332, 456, 787], "30_epochs_metadata": [169, 174, 955], "eriksen": 170, "flanker": [170, 317], "introductori": [170, 176, 188, 194, 195, 226, 243, 244, 255, 935], "straight": [170, 331, 332, 333, 334, 336, 550, 551, 891], "creation": [170, 175, 181, 194, 228, 245, 280, 282, 284, 285, 291, 292, 294, 300, 303, 304, 320, 323, 325, 328, 331, 332, 341, 344, 376, 482, 647, 648], "familiar": [170, 226, 273, 317, 943], "ourselv": [170, 201, 231, 232, 234], "incorrect": [170, 212, 219, 228, 229, 239, 277, 278, 291, 294, 301, 302, 303, 304, 305, 308, 320, 786, 789, 940], "sophist": [170, 216, 525], "infil": 170, "core_subject": 170, "001_task": [170, 239], "flankers_eeg": 170, "all_ev": 170, "all_event_id": 170, "935935": 170, "913": [170, 223, 260], "33793": 170, "target_left": 170, "target_right": 170, "incompat": [170, 284, 292, 704, 710, 940], "decid": [170, 238, 270, 310, 326, 331, 332, 523, 594, 693, 864], "1500": 170, "invalid": [170, 257, 287, 293, 303, 304, 656], "metadata_tmin": 170, "metadata_tmax": 170, "why": [170, 177, 184, 186, 219, 228, 229, 233, 243, 252, 255, 259, 277, 310, 814, 817], "event_nam": [170, 260, 507, 510, 916, 918], "551758": 170, "997070": 170, "434570": 170, "797": [170, 260], "343750": 170, "917969": 170, "425781": 170, "416016": 170, "799": 170, "392578": 170, "990234": 170, "402344": 170, "eleg": 170, "row_ev": [170, 507], "pertain": 170, "508789": 170, "00000": 170, "503906": 170, "449219": 170, "542969": 170, "792": [170, 222, 236], "496094": 170, "437500": 170, "465820": 170, "796": [170, 223], "547852": 170, "46582": 170, "descriptor": [170, 192, 268, 277, 319, 507, 550, 551], "hed": [170, 177, 268, 277, 319, 507], "keep_first": [170, 507], "regardless": [170, 177, 197, 217, 231, 234, 319, 524, 886], "first_respons": [170, 507], "notna": 170, "411133": 170, "454102": 170, "443359": 170, "466797": 170, "400391": 170, "499023": 170, "584961": 170, "421875": 170, "450195": 170, "399414": 170, "316406": 170, "416992": 170, "386719": 170, "410156": 170, "467773": 170, "416": [170, 197, 236, 260], "377930": 170, "483398": 170, "454": [170, 255, 344], "457031": 170, "456": [170, 223, 236, 260, 344], "566406": 170, "395508": 170, "354492": 170, "516": [170, 184, 236], "326172": 170, "432617": 170, "538": [170, 208, 223], "322266": 170, "482422": 170, "606": [170, 260], "484375": 170, "371094": 170, "342773": 170, "704": [170, 222, 223], "307617": 170, "442383": 170, "728": 170, "376953": 170, "first_stimulu": 170, "perfect": [170, 184, 229, 237], "stimulus_sid": 170, "response_correct": 170, "correct_response_count": 170, "rememb": [170, 176, 187, 197, 202, 227, 232, 233, 243, 260, 320], "epochs_tmin": 170, "epochs_tmax": 170, "strong": [170, 209, 227, 232, 259, 316, 635, 740, 745], "099609375": 170, "513": [170, 223, 260], "lastli": [170, 198, 236, 238, 269, 270, 309], "vis_erp": 170, "vis_erp_slow": 170, "asid": [170, 198, 226, 265], "fact": [170, 175, 177, 207, 208, 226, 232, 233, 237, 244, 316, 319, 320, 489, 495, 635, 700], "noisier": [170, 218], "deal": [170, 188, 197, 206, 229, 232, 233, 235, 244, 255, 259, 263, 265, 286, 288, 289, 291, 293, 312, 333, 334, 338, 339, 342, 345, 346, 347, 364, 365, 527, 635, 646, 659, 670, 684], "keep_last": [170, 507], "previous": [170, 175, 196, 231, 232, 282, 283, 284, 291, 292, 294, 295, 303, 304, 323, 357, 364, 365, 720, 833], "last_": [170, 507], "last_stimulu": 170, "last_respons": 170, "431641": 170, "576172": 170, "puls": [170, 172, 192, 194, 226, 232, 234, 244, 320, 660, 663], "c5": [170, 575], "cpz": 170, "isna": 170, "bummer": 170, "nice": [170, 176, 195, 197, 243, 255, 270, 273, 301, 309, 320], "impress": 170, "resp_erp_correct": 170, "resp_erp_incorrect": 170, "deflect": [170, 212, 226, 233, 234, 292], "immedi": [170, 182, 194, 227, 232, 235, 270, 294, 303, 309, 310, 319, 320, 324, 500, 550, 551, 638, 693, 755, 758, 843, 888], "doubt": [170, 949], "resp_erp_diff": 170, "bolder": 170, "set_linewidth": 170, "grai": [170, 182, 186, 198, 227, 237, 240, 244, 257, 258, 259, 260, 265, 278, 337, 541, 635, 687, 833, 850, 851, 859, 878], "trough_time_idx": 170, "trough_tim": 170, "emili": [170, 229, 277, 279, 285, 317], "kappenman": [170, 229, 277, 317], "jaclyn": [170, 277, 317], "farren": [170, 277, 317], "wendi": [170, 222, 277, 317, 489], "zhang": [170, 277, 278, 294, 305, 317, 320], "andrew": [170, 206, 277, 278, 285, 299, 300, 301, 302, 305, 317, 635, 772], "stewart": [170, 277, 317], "luck": [170, 177, 229, 277, 317], "117465": [170, 277, 317], "nima": [170, 277, 507], "bigd": [170, 277, 507], "shamlo": [170, 277, 507], "kreutz": [170, 277, 507], "delgado": [170, 277, 507], "robbin": [170, 277, 507], "makoto": [170, 277, 507], "miyakoshi": [170, 277, 507], "marissa": [170, 277, 507], "westerfield": [170, 277, 507], "tarik": [170, 277, 507], "bel": [170, 277, 507], "bahar": [170, 277, 507], "koth": [170, 277, 507], "jessica": [170, 277, 507], "hsi": [170, 277, 507], "globalsip": [170, 277, 507], "6736796": [170, 277, 507], "415": [170, 174, 236, 255, 955], "40_autogenerate_metadata": [170, 174, 955], "workflow": [171, 181, 228, 299, 311, 317], "200e": [171, 177, 228], "0113": [171, 192, 195, 202, 243], "0112": [171, 192, 195, 243], "0122": [171, 192, 195, 243, 269], "0132": [171, 195], "199795": 171, "320252": 171, "567619": 171, "248584": 171, "609895": 171, "700540": 171, "352746": 171, "908667": 171, "193135": 171, "049675": 171, "702938": 171, "168267": 171, "480975": 171, "182237": 171, "225684": 171, "072452": 171, "186476": 171, "283711": 171, "006895": 171, "912317": 171, "130290": 171, "157198": 171, "842466": 171, "986073": 171, "179816": 171, "040471": 171, "643716": 171, "835772": 171, "517952": 171, "214631": 171, "043144": 171, "672744": 171, "173156": 171, "688943": 171, "974112": 171, "561683": 171, "450115": 171, "778315": 171, "795987": 171, "277138": 171, "timedelta": [171, 245, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 783, 787], "132025e": 171, "156762e": 171, "324858e": 171, "060990e": 171, "870054e": 171, "835275e": 171, "790867e": 171, "049675e": 171, "702938e": 171, "416827e": 171, "748098e": 171, "018224e": 171, "212257e": 171, "072452e": 171, "283711e": 171, "300690e": 171, "691232e": 171, "213029e": 171, "515720e": 171, "178425e": 171, "986073e": 171, "304047e": 171, "643716e": 171, "783577e": 171, "851795e": 171, "521463e": 171, "204314e": 171, "672744e": 171, "568894e": 171, "974112e": 171, "556168e": 171, "450115e": 171, "377831e": 171, "117960e": 171, "727714e": 171, "0133": [171, 195], "dai": [171, 234, 323, 331, 332, 333, 334, 336, 550, 551, 552], "800204787": 171, "379736": 171, "123525": 171, "806864627": 171, "734826": 171, "339465": 171, "813524468": 171, "996158": 171, "627037": 171, "820184308": 171, "748030": 171, "024973": 171, "826844149": 171, "123811": 171, "917677": 171, "pivot": [171, 329, 863, 894], "long_df": [171, 256], "coupl": [171, 238, 243, 265, 291, 486, 674, 937, 948], "1342": [171, 195, 263, 265], "categorydtyp": 171, "nicer": [171, 233, 295], "hue": 171, "peak_lat": 171, "regex": [171, 291], "2123": [171, 195], "idxmax": 171, "melt": 171, "id_var": 171, "var_nam": 171, "value_nam": 171, "satur": [171, 580], "716": [171, 174, 231, 242, 260, 955], "50_epochs_to_data_fram": [171, 174, 955], "equidistantli": 172, "consecut": [172, 194, 263, 285, 338, 339, 342, 345, 346, 347, 524, 594, 637, 638], "briefli": [172, 177, 229, 246, 255], "hous": 172, "envelope_correl": [172, 288, 289, 293], "manag": [172, 192, 197, 198, 289, 294, 303, 309, 310, 312, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 486, 493, 496, 499, 500, 526, 539, 541, 550, 551, 593, 596, 597, 608, 609, 618, 619, 624, 635, 640, 647, 648, 731, 732, 734, 735, 736, 748, 770, 771, 772, 773, 774, 785, 788, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 814, 815, 816, 827, 828, 835, 865, 867, 870, 882, 888, 889, 913, 948], "server": [172, 192, 198, 230, 232, 243, 273, 901, 945], "chan": [172, 322, 763], "221": [172, 195, 236, 259, 260], "heart": [172, 226, 231, 277, 293, 814, 817], "beat": [172, 238, 647, 660, 663, 735], "onpca": 172, "onecg": 172, "unsuit": [172, 295], "misalign": [172, 204, 291, 562], "event_related_plot": 172, "1142": [172, 195], "n_sensor": [172, 269, 338, 342, 346], "alpha_data": 172, "epochconnect": 172, "corr_matrix": 172, "first_30": 172, "last_30": 172, "corr_matric": 172, "color_lim": 172, "mpbl": 172, "775": [172, 174, 273, 955], "194": [172, 174, 195, 209, 223, 260, 277, 280, 320, 955], "60_make_fixed_length_epoch": [172, 174, 955], "565": [174, 223, 260, 955], "raw_fil": [175, 177], "happen": [175, 177, 182, 186, 187, 193, 194, 197, 223, 228, 230, 232, 255, 305, 309, 310, 317, 319, 324, 331, 332, 385, 506, 508, 935], "discuss": [175, 177, 182, 191, 192, 194, 199, 206, 218, 223, 226, 229, 230, 243, 246, 255, 260, 270, 277, 292, 309, 310, 311, 317, 320, 787, 935, 941], "transfer": [175, 223, 227, 229, 316, 319, 671], "maintain": [175, 227, 255, 285, 299, 303, 309, 310, 311, 320, 331, 332, 333, 334, 336, 550, 551, 552, 626], "proven": [175, 301, 304], "never": [175, 291, 309, 320, 331, 332, 386, 654, 853], "72160572e": 175, "57859354e": 175, "98040833e": 175, "75128428e": 175, "15309907e": 175, "83186429e": 175, "bewar": [175, 186, 320], "evoked_subset": 175, "repair": [175, 191, 192, 226, 227, 228, 233, 237, 241, 242, 246, 277, 292, 304, 316, 328, 331, 333, 334, 336, 424, 426, 524, 550, 566, 629, 632, 634, 635, 647, 648, 650, 652, 653, 660, 677, 678, 682, 788, 886, 887, 920, 955], "evk_fil": 175, "evokeds_list": [175, 176], "right_vi": 175, "remedi": 175, "left_right_aud": 175, "6992832460543575": [175, 177], "fairli": [175, 192, 226, 228, 229, 230, 232, 234, 235], "left_aud": 175, "right_aud": 175, "keyword": [175, 181, 195, 198, 218, 229, 237, 269, 273, 278, 284, 285, 287, 291, 293, 303, 304, 305, 308, 309, 316, 319, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 376, 377, 380, 382, 384, 385, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 488, 489, 493, 494, 496, 499, 500, 502, 504, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 528, 533, 534, 538, 539, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 589, 590, 591, 592, 593, 594, 596, 597, 598, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 626, 627, 628, 631, 635, 637, 638, 640, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 677, 678, 679, 682, 683, 684, 685, 689, 690, 691, 692, 693, 694, 696, 697, 698, 700, 701, 702, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 727, 731, 732, 734, 735, 736, 737, 747, 748, 751, 753, 754, 755, 756, 757, 758, 759, 769, 770, 771, 772, 773, 774, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 802, 803, 804, 807, 808, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 828, 831, 832, 833, 834, 835, 842, 851, 852, 857, 860, 863, 867, 868, 869, 870, 875, 878, 879, 880, 885, 886, 888, 889, 891, 892, 893, 894, 898, 899, 900, 904, 914, 915, 916, 917, 918, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934], "proport": [175, 255, 292, 305, 320, 338, 339, 340, 342, 345, 346, 347, 422, 434, 548, 635, 643, 893, 898], "intend": [175, 197, 237, 244, 324, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 507, 550, 551, 635, 671, 677, 948], "standard_error": [175, 298, 331, 332, 333, 334, 700, 954], "iter_evok": [175, 177, 291, 331, 332, 954], "ix": [175, 177], "return_amplitud": [175, 177, 333, 334], "648": [175, 260], "604": [175, 180, 955], "10_evoked_overview": [175, 180, 955], "evoked_fil": 176, "life": [176, 310], "evk": [176, 177], "superimpos": [176, 198, 226, 246, 635, 834, 879], "timeseri": [176, 252, 331, 332, 333, 334, 550, 551, 750, 784], "resembl": [176, 188, 201, 602, 663, 664], "wing": 176, "behav": [176, 229, 243, 304, 335, 336, 512, 655], "time_ranges_of_interest": 176, "drag": [176, 177, 187, 245, 308, 318, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 783, 785, 786, 788, 789, 866, 867, 871, 874, 878, 887, 889, 890, 895, 897, 940], "averaging_dur": 176, "augment": 176, "custom_func": 176, "0x7fb67d0c0d30": 176, "substr": [176, 299, 705, 717], "action": [176, 197, 309, 312], "ambigu": [176, 295, 303, 308, 339, 345, 347], "temp_list": 176, "_comment": 176, "_evk": 176, "overhead": [176, 294, 729, 828], "trans_fil": 176, "00097": [176, 274], "meg_surf": [176, 593], "_map": 176, "20_visualize_evok": [176, 180, 955], "materi": [177, 188, 309, 319, 935], "link": [177, 191, 216, 275, 276, 277, 278, 291, 294, 303, 304, 309, 312, 320, 333, 338, 342, 346, 422, 518, 593, 700, 710, 833, 835, 849, 870, 893, 910, 911, 915, 916, 917, 935, 947, 955], "events_fil": [177, 228], "discard": [177, 227, 232, 233, 234, 237, 265, 282, 669, 670, 697], "last_samp": [177, 302, 319, 336, 431, 549, 550, 551], "13514": 177, "mislabel": 177, "lowercas": 177, "channel_renaming_dict": [177, 243], "schemat": 177, "diagram": [177, 232, 319], "addition": [177, 197, 217, 226, 233, 245, 268, 309, 314, 322, 339, 345, 347, 386, 397, 728, 813, 816, 898, 937], "realist": [177, 277, 316, 320], "xx": [177, 227, 230, 233, 234, 235, 309, 325], "backend": [177, 182, 186, 192, 197, 198, 207, 227, 230, 232, 233, 234, 235, 278, 285, 288, 289, 292, 293, 294, 295, 303, 304, 312, 331, 332, 338, 339, 342, 345, 346, 347, 542, 550, 551, 635, 833, 841, 843, 845, 846, 847, 865, 882, 888, 893, 898, 900, 904, 905, 919, 920, 935, 940, 941, 945], "qt": [177, 192, 197, 198, 227, 230, 232, 233, 234, 235, 278, 294, 303, 304, 307, 331, 332, 550, 551, 635, 833, 865, 882, 888, 904, 920, 935, 940, 941], "scheme": [177, 215, 250, 259, 283, 285, 292, 309, 320, 328, 331, 332, 333, 334, 336, 340, 483, 490, 499, 550, 551, 634, 635, 650, 724, 727, 764, 783, 785, 786, 788, 789, 852, 865, 867, 874, 878, 887, 890, 891, 895, 897], "eeg53": 177, "eog61": 177, "chose": 177, "proce": [177, 326, 331, 332, 475, 635, 638, 645, 843, 935], "consol": [177, 303, 308, 945], "eeg03": 177, "eeg01": 177, "eeg02": 177, "eeg04": 177, "eeg06": 177, "eeg07": 177, "eeg25": 177, "25auditori": 177, "27buttonpress": 177, "5visual": 177, "28visual": 177, "barplot": [177, 232], "lose": [177, 216, 245, 935], "break": [177, 191, 241, 242, 245, 292, 295, 302, 303, 304, 307, 309, 316, 325, 331, 333, 336, 550, 632, 638, 661, 697, 933, 955], "l_aud": [177, 265], "l_vi": [177, 265], "fig1": [177, 196, 274], "speak": [177, 193, 194, 231, 946, 949], "agreement": [177, 310], "warrant": 177, "popul": [177, 181, 191, 250, 253, 258, 277, 287, 289, 293, 319, 332, 334, 443, 483, 515, 551, 671, 765, 829], "leverag": [177, 310], "verifi": [177, 208, 212, 270, 320, 947], "plain": [177, 219, 231, 270, 400, 925], "ddof": [177, 188, 935], "lime": 177, "revisit": [177, 277, 483], "eeg17": 177, "eeg18": 177, "eeg26": 177, "eeg23": 177, "eeg24": 177, "eeg34": 177, "eeg35": 177, "left_ix": 177, "right_ix": 177, "roi_dict": 177, "left_roi": [177, 331, 332, 333, 334, 866, 871], "right_roi": [177, 331, 332, 333, 334, 866, 871], "roi_evok": 177, "aud_minus_vi": 177, "29969": 177, "69928": 177, "weak": [177, 232], "chapter": 177, "erplab": [177, 277], "consequ": [177, 188, 195, 237, 302, 320, 424, 425, 426, 512, 523, 568, 622, 935], "voltag": [177, 192, 194, 215, 216, 235, 244, 302, 319, 576], "p100": 177, "submit": [177, 256, 309, 310], "throughout": [177, 197, 238, 278, 307, 317, 635], "remaind": 177, "print_peak_measur": 177, "3f": [177, 237, 256, 260, 270, 331, 332, 333, 334, 550, 551, 785, 786, 788, 789, 867, 874], "good_tmin": 177, "good_tmax": 177, "eeg55": 177, "508": [177, 255, 256, 260], "pull": [177, 233, 310, 319, 905, 948], "priori": [177, 270, 320], "believ": [177, 270, 309, 320], "eeg59": 177, "fist": 177, "l_vis_roi": 177, "ch_roi": 177, "lat_roi": 177, "amp_roi": 177, "FOR": 177, "ONE": [177, 183, 223, 277], "713": [177, 260], "suscept": [177, 230, 659], "challeng": [177, 239, 277, 312, 317, 935], "meth": [177, 198, 287, 305, 309], "guarante": [177, 215, 227, 232, 235, 237, 255, 295, 331, 332, 333, 334, 513, 514, 515, 516, 550, 551, 583], "rise": [177, 319, 567, 688, 694], "crucial": [177, 182, 226, 263], "095": [177, 196, 291, 328, 331, 332, 333, 334, 336, 340, 380, 398, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 852, 859, 867, 869, 871, 874, 875, 878, 885, 887, 889, 890, 891, 895, 897], "bad_tmin": 177, "bad_tmax": 177, "bad_lat_roi": 177, "bad_amp_roi": 177, "898": [177, 260], "487": [177, 236, 255], "unclear": [177, 309], "truli": [177, 229, 770], "panel": [177, 182, 188, 196, 206, 270, 273, 308, 323, 333, 334, 542, 635, 833, 875, 879, 935], "pink": [177, 182, 319, 851], "star": 177, "yourself": [177, 182, 195, 226, 230, 243, 309, 323, 333, 334, 562, 874], "c6": 177, "act": [177, 195, 230, 231, 233, 237, 303, 307, 310, 318, 319, 331, 332, 333, 334, 344, 364, 365, 416, 545, 547, 548, 550, 551, 613, 670, 727, 787, 935], "eeg54": 177, "eeg57": 177, "l_vis_mean_roi": 177, "mean_amp_roi": 177, "mean_amp_roi_df": 177, "mean_amp": 177, "numeric_onli": 177, "279764": 177, "685840": 177, "reiter": 177, "hypothes": [177, 255, 256], "l_vis_crop": 177, "mean_amp_al": 177, "mean_amp_all_df": 177, "option_context": 177, "max_column": 177, "689513": 177, "078492": 177, "381191": 177, "609264": 177, "eeg05": 177, "113717": 177, "eeg56": 177, "064174": 177, "259681": 177, "eeg58": 177, "156472": 177, "802306": 177, "eeg60": 177, "878811": 177, "dietrich": [177, 277, 320, 602], "lehmann": [177, 277, 320, 602], "wolfgang": [177, 277, 814, 817], "skrandi": [177, 277], "identif": [177, 232, 277, 650], "checkerboard": [177, 192, 270, 277, 317], "621": [177, 223, 277], "90419": [177, 277], "review": [177, 204, 231, 232, 277, 309, 310, 634, 640], "neurobiologi": [177, 277], "1984": [177, 277], "0301": [177, 277], "0082": [177, 277], "90003": [177, 277], "micah": [177, 277], "brunet": [177, 277], "michel": [177, 211, 277, 459, 635, 743], "s10548": [177, 235, 277, 651, 748], "0054": [177, 277], "ma": [177, 277, 306, 307], "edit": [177, 195, 197, 227, 229, 232, 245, 273, 277, 304, 309, 330, 331, 332, 333, 334, 765, 783, 787, 856, 904, 935, 945], "52585": [177, 277], "mitpress": [177, 277], "book": [177, 277, 309, 522], "javier": [177, 277], "lopez": [177, 277], "calderon": [177, 277], "00213": [177, 277], "preclud": [177, 229, 237, 277, 670], "00131": [177, 229, 277], "rufin": [177, 229, 277], "vanrullen": [177, 229, 277], "fallaci": [177, 229, 277], "00365": [177, 229, 277], "nichola": [177, 239, 277, 317, 649], "gaspelin": [177, 277], "12639": [177, 277], "903": [177, 180, 223, 955], "30_eeg_erp": [177, 180, 955], "perspect": [178, 233, 833], "satisfi": [178, 187, 255, 320, 364, 365, 765, 785, 786, 788, 789], "40_whiten": [178, 180, 955], "repetit": [179, 191, 748], "outer": [181, 184, 186, 187, 209, 316, 317, 319, 320, 323, 375, 635, 670, 833, 881, 935, 942, 945, 948], "tissu": [181, 184, 319], "boundari": [181, 184, 198, 208, 212, 218, 246, 278, 282, 284, 288, 292, 303, 319, 328, 331, 332, 333, 334, 337, 340, 341, 432, 483, 490, 541, 550, 551, 634, 635, 659, 687, 748, 762, 783, 785, 786, 788, 789, 833, 839, 844, 852, 853, 867, 874, 878, 887, 889, 890, 895, 897, 947], "analog": [181, 215, 217, 223, 233, 237, 288, 289, 295, 319, 331, 332, 333, 334, 518, 550, 551, 559, 566, 574, 581, 632, 783, 785, 786, 787, 788, 789], "freesurfer_hom": [181, 442, 947], "setupfreesurf": 181, "sh": [181, 944, 947], "folder": [181, 182, 184, 187, 196, 215, 243, 292, 295, 304, 306, 307, 309, 341, 344, 371, 375, 447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 531, 532, 537, 567, 580, 694, 726, 851, 853, 944, 947], "my_subject": 181, "my_nifti": 181, "subfold": [181, 456], "hour": [181, 550, 551, 635, 882, 888], "beforehand": [181, 331, 332, 865], "scan": [181, 192, 202, 206, 209, 237, 336, 460, 665, 666, 942, 945, 948, 951], "buckner40not": 181, "10_background_freesurf": [181, 190, 955], "landmark": [182, 250, 295, 316, 319, 320, 403, 434], "t1w": [182, 380], "nifti1imag": [182, 208, 343, 346, 347, 375], "dataobj": [182, 186, 208], "xyzt_unit": 182, "uint8": 182, "t1_mgh": 182, "mghimag": [182, 320], "ight": 182, "medium": [182, 209, 273, 304, 312, 323, 376], "nterior": 182, "longest": 182, "uperior": 182, "camera": [182, 186, 219, 293, 304, 333, 334, 542, 833, 835, 849, 851, 870, 903], "na": [182, 270, 319, 558], "preauricular": [182, 319, 320, 380, 404], "manufactur": [182, 196, 215, 216, 217, 219, 304, 312, 319, 320], "faq": [182, 216, 229, 235, 377, 441, 559, 670, 936], "intersect": [182, 186, 187, 210, 289, 316, 670, 687], "purpl": [182, 184, 265], "perpendicular": [182, 204, 320], "goe": [182, 186, 229, 245, 274, 320], "upward": [182, 186, 232, 236, 833, 859], "compani": [182, 277, 310, 765], "acquir": [182, 227, 282, 295, 304, 310, 317, 320, 351, 352, 375, 575, 951], "emit": [182, 236, 274, 278, 282, 287, 294, 295, 307, 319, 325, 331, 332, 333, 334, 336, 338, 339, 341, 342, 345, 346, 347, 351, 352, 384, 407, 417, 418, 423, 427, 430, 432, 434, 439, 440, 502, 517, 530, 533, 550, 551, 572, 635, 671, 690, 719, 721, 783, 785, 786, 787, 788, 789, 830, 868, 879, 926, 928], "coregist": [182, 375, 542], "front": [182, 319, 320, 333, 334, 374, 502, 833, 869], "magenta": 182, "1mm": 182, "anisotrop": [182, 277, 320], "incorrectli": [182, 278, 287, 288, 291, 292, 293, 303, 304, 306, 307, 935], "identity_tran": 182, "mri_voxel": [182, 393, 585, 820], "corner": [182, 218, 229, 230, 233, 246, 286, 301, 323, 331, 332, 333, 334, 336, 550, 551, 848, 859, 865, 873, 888], "inferior": [182, 186, 319], "seghead_rr": 182, "seghead_tri": 182, "mri_to_head": 182, "scalp_pts_in_head_coord": 182, "head_to_meg": 182, "scalp_pts_in_meg_coord": 182, "vox_to_mri": 182, "get_vox2ras_tkr": [182, 186, 208], "mri_to_vox": 182, "scalp_points_in_vox": 182, "scene": [182, 186, 197, 222, 277, 286, 292, 303, 317, 318, 323, 333, 334, 338, 339, 342, 345, 346, 347, 489, 542, 833, 835, 840, 841, 843, 851, 870, 893, 898, 902, 903, 905, 940], "nose": [182, 235, 374], "behind": [182, 197, 222, 227, 232, 318, 542, 854], "roughli": [182, 291, 423, 659, 940], "world": [182, 186, 198, 208, 229, 245, 257, 343, 526], "anonym": [182, 282, 283, 286, 291, 294, 301, 308, 331, 332, 333, 334, 336, 550, 551, 552, 935], "blur": [182, 320], "fiffv_point_cardin": [182, 186, 336], "fiffv_point_nas": [182, 186, 336], "fiffv_coord_head": [182, 335, 336], "nasion_mri": [182, 186], "nasion_vox": [182, 186], "toggl": [182, 192, 198, 218, 227, 232, 246, 280, 285, 288, 289, 292, 294, 303, 304, 331, 332, 550, 551, 635, 833, 865, 880, 882, 888, 904], "radio": 182, "icon": [182, 198], "fid": [182, 278, 782], "icp": [182, 286, 289, 305], "finetun": 182, "inner_skul": [182, 184, 185, 187, 198, 209, 316, 317, 344, 719, 851], "outer_skul": [182, 184, 185, 187, 196, 198, 316, 317, 344, 851], "00348961": [182, 235], "944714": [182, 235], "137173": [182, 235], "667447": [182, 235], "683794": [182, 235], "26595": [182, 235], "0105972": [182, 235], "6156": 182, "2300": 182, "1904": 182, "525": [182, 190, 223, 260, 955], "20_source_align": [182, 190, 955], "hsp": [183, 215, 283, 284, 320, 323, 380, 393, 405, 434, 576, 696], "preprat": 183, "jon": [183, 277, 282, 284, 285, 286, 289, 304], "houck": [183, 277, 282, 284, 285, 286, 289, 304], "faveli": [183, 288, 289, 291, 292, 293, 294, 295, 303, 304], "skin": [183, 184, 187, 305, 317, 319, 320, 323, 331, 332, 333, 334, 375, 434, 550, 551, 632, 783, 785, 786, 787, 788, 789, 935], "fit_fiduci": [183, 434], "fit_icp": [183, 434], "n_iter": [183, 434, 668], "nasion_weight": [183, 434], "omit_head_shape_point": [183, 434], "compute_dig_mri_dist": [183, 434], "abil": [183, 204, 206, 223, 280, 282, 283, 284, 286, 287, 291, 292, 295, 298, 299, 301, 307, 310, 312, 318, 741, 742, 813, 816], "set_scale_mod": [183, 434], "clau": [183, 277], "plo": [183, 223, 277], "e0232100": [183, 277], "pone": [183, 223, 277], "0232100": [183, 277], "25_automated_coreg": [183, 190, 955], "concept": [184, 202, 255, 277, 319, 321, 938], "watershed_bem": [184, 287, 289, 320, 666, 935, 948], "flash_bem": [184, 280, 287, 288, 304, 320, 666, 948], "plot_bem_kwarg": 184, "brain_surfac": [184, 853], "mrilab": 184, "isn": [184, 192, 252, 270, 309, 327, 331, 475, 476, 704, 707, 710, 787, 935], "candid": [184, 227, 310, 319], "oct4": 184, "90mm": 184, "57798": 184, "24365": 184, "20377": 184, "32480": 184, "22941": 184, "2787": 184, "9357": 184, "20154": 184, "10797": 184, "12738": 184, "12241": 184, "10203": 184, "2362": [184, 232, 277, 635], "10376": 184, "midpoint": [184, 217, 292, 320, 333, 334, 812, 815, 853], "4th": [184, 226, 331, 332, 333, 334, 485, 494, 518, 519, 521, 522, 550, 551, 647, 648], "icosahedron": [184, 186, 187, 323, 338, 342, 346, 731, 893], "n_tri": [184, 186, 337, 928], "topologi": [184, 229, 286, 622], "commonli": [184, 194, 196, 201, 229, 270, 306, 312, 319, 336, 541, 635], "gone": 184, "adequ": [184, 234, 336], "1422": [184, 195], "fwd_fix": 184, "explicitli": [184, 198, 215, 223, 228, 230, 231, 232, 263, 278, 282, 285, 291, 292, 294, 303, 309, 310, 312, 316, 326, 331, 332, 333, 334, 336, 341, 364, 365, 371, 378, 381, 397, 423, 427, 428, 439, 440, 441, 483, 485, 490, 499, 504, 521, 522, 526, 527, 545, 547, 548, 550, 551, 587, 613, 634, 635, 637, 651, 652, 653, 662, 668, 676, 678, 685, 687, 727, 735, 736, 737, 746, 747, 749, 751, 769, 770, 771, 772, 773, 774, 783, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 816, 859, 865, 866, 869, 871, 872, 875, 884, 889, 940], "src_hemi": 184, "justifi": [184, 303, 522, 550, 551], "claim": 184, "217": [184, 190, 194, 195, 222, 223, 236, 248, 955], "30_forward": [184, 190, 955], "centimet": 185, "fs_dir": [185, 457], "live": [185, 229, 288, 309], "1005": 185, "new_nam": 185, "rstrip": 185, "fp": [185, 519, 741], "999994": 185, "003552": 185, "000202": 185, "003558": 185, "998389": 185, "056626": 185, "000001": [185, 256, 259, 260], "998395": 185, "2433": [185, 195], "7809": 185, "4025": 185, "8001": 185, "6mo": [185, 459], "ants6": 185, "0months3t": 185, "come": [185, 201, 207, 215, 216, 229, 230, 232, 234, 245, 256, 270, 274, 283, 294, 295, 309, 317, 319, 320, 337, 342, 442, 575, 595, 658, 697, 940, 945], "fname_1020": 185, "mon": [185, 575], "03d": [185, 568], "99975431": 185, "01839625": 185, "01236795": 185, "00087239": 185, "0143472": 185, "96230429": 185, "27159646": 185, "01252444": 185, "01689809": 185, "27135229": 185, "96233177": 185, "03137219": 185, "48640": 185, "48214": 185, "749": 185, "35_eeg_no_mri": [185, 190, 955], "outlin": [186, 198, 202, 229, 270, 273, 291, 292, 304, 305, 306, 328, 329, 331, 332, 333, 334, 336, 340, 380, 483, 490, 550, 551, 634, 635, 650, 685, 783, 785, 786, 788, 789, 852, 859, 863, 867, 869, 871, 872, 874, 875, 878, 885, 887, 889, 890, 891, 895, 897], "readabl": [186, 309, 331, 332, 333, 334, 444, 485, 494, 519, 521, 522, 550, 551, 665], "anterior": [186, 303, 319, 320, 337, 392, 760], "superior": [186, 319, 320, 339, 345, 347, 705, 833], "wide": [186, 192, 243, 309, 310], "unfamiliar": [186, 945], "asarrai": [186, 259], "unsign": [186, 303, 338, 339, 342, 345, 346, 347], "triplet": [186, 336, 527, 602, 733], "geograph": 186, "earth": 186, "north": 186, "prime": [186, 196], "meridian": 186, "degre": [186, 188, 219, 233, 240, 255, 257, 260, 263, 288, 291, 319, 320, 323, 328, 333, 334, 336, 371, 375, 562, 639, 655, 668, 736, 770, 771, 773, 774, 783, 833, 839, 871, 903, 935, 947], "nonetheless": [186, 229], "scanner": [186, 317, 320, 344, 544], "nativ": [186, 208, 215, 216, 282, 288, 292, 294, 300, 303, 317, 331, 332, 333, 334, 384, 393, 398, 513, 514, 515, 516, 550, 551, 568, 576, 696, 833, 836, 935], "mind": [186, 188, 201, 229, 309, 322], "si": [186, 217, 219, 255, 269, 331, 332, 333, 334, 365, 527, 550, 551, 658, 869, 871], "xyz_ra": 186, "00000000e": 186, "15484021e": 186, "91852465e": 186, "22726395e": 186, "56816911e": 186, "57160827e": 186, "18960930e": 186, "49011647e": 186, "40284092e": 186, "00712036e": 186, "ras_coords_mm": 186, "inv_affin": 186, "i_": [186, 215], "j_": 186, "k_": 186, "imshow_mri": 186, "aff2axcod": 186, "ori_slic": 186, "ori_nam": 186, "va": [186, 273], "set_path_effect": 186, "reorient": 186, "rightward": 186, "x_order": 186, "lip": 186, "y_order": 186, "torig": 186, "vox2ras_tkr": [186, 208], "conform": [186, 217, 292, 320, 325], "matter": [186, 196, 278, 303, 310, 316, 331, 332, 333, 334, 337, 541, 550, 551, 587, 635, 687, 783, 785, 786, 787, 788, 789, 869], "freeurfer": 186, "whenev": [186, 229, 274, 309, 318, 333, 334, 874, 916], "everywher": 186, "xyz_mri": 186, "digpoint": [186, 288, 434], "nasion_head": 186, "nasion_dig_mri": 186, "nasion_dig_vox": 186, "convention": 186, "facet": [186, 273], "rr_mm": 186, "313728": 186, "80481719970703": 186, "rr_vox": 186, "tricontour": 186, "renderer_kwarg": 186, "curv": [186, 223, 308, 320, 331, 332, 333, 334, 336, 550, 551, 744, 781, 785, 786, 788, 789], "y_shift": 186, "z_shift": 186, "this_rr": 186, "this_tri": 186, "copper_r": 186, "quiver3d": [186, 233, 304], "1050": 186, "wirefram": 186, "cyan": [186, 550, 551, 888], "66ccee": [186, 273, 801, 811], "line_width": 186, "cull": 186, "render_lines_as_tub": 186, "uniformli": [186, 218, 234, 547], "uniform": [186, 284, 292, 293, 307, 319, 434, 504, 602, 735, 750, 773, 774], "subsampl": [186, 291, 316, 326, 330, 331, 332, 333, 334, 344, 550, 551, 591, 652, 653, 731, 769, 783, 787, 797, 833], "rr_sph": 186, "mri_mni_tran": 186, "xyz_mni": 186, "02248488": 186, "00844919": 186, "03621711": 186, "00111715": 186, "07107091": 186, "91486582": 186, "40609791": 186, "02300193": 186, "00875602": 186, "43369992": 186, "02811882": 186, "03356932": 186, "land": [186, 250], "difficult": [186, 216, 228, 260, 320, 635], "gist": [186, 202, 216, 331, 332, 333, 334, 550, 551, 935], "github": [186, 278, 310, 311, 331, 332, 333, 334, 550, 551, 782, 935, 936, 940, 948, 949, 951, 952], "alexrockhil": 186, "b5a1ce6c6ba363cf3f277cd321a763bf": 186, "952": [186, 190, 955], "50_background_freesurfer_mn": [186, 190, 955], "aris": [187, 226, 659], "ezemikulan": 187, "blender_freesurf": 187, "ezequiel": [187, 287, 291, 292], "mikulan": [187, 287, 291, 292], "manorama": [187, 294], "kadwani": [187, 294], "shutil": 187, "flash": [187, 240, 280, 304, 317, 344, 371, 375, 666, 851], "surf_dir": 187, "problemat": [187, 216, 229, 232, 233, 237, 255, 331, 332, 341, 376, 398], "skill": [187, 309], "conv": 187, "conv_dir": 187, "makedir": 187, "exist_ok": 187, "read_metadata": [187, 713], "wavefront": [187, 292, 713, 933], "navig": [187, 243, 321, 331, 332, 341, 346, 347, 550, 551, 865, 888, 899, 940, 945], "vert": [187, 204, 252, 270, 344], "preset": [187, 338, 339, 342, 345, 346, 347, 833, 893, 898], "beginn": [187, 937, 943], "teach": [187, 203, 277, 303], "_fix": 187, "inner_skull_fix": 187, "Be": [187, 240, 243, 245, 331, 332, 333, 334, 550, 551, 872], "backup": 187, "mistak": [187, 309, 935], "inner_skull_orig": 187, "volume_info": [187, 713, 933], "vol_info": 187, "faulti": 187, "head_dir": 187, "shrinkwrap": 187, "\u2460": 187, "\u2461": 187, "\u2462": 187, "\u2464": 187, "tab": [187, 219, 278, 309, 318, 323, 542, 623, 842], "\u2465": 187, "\u2467": 187, "snap": [187, 289], "noth": [187, 210, 211, 228, 286, 307, 317, 328, 331, 332, 333, 334, 340, 343, 423, 434, 483, 490, 494, 496, 550, 551, 634, 635, 650, 724, 783, 785, 786, 788, 789, 837, 848, 852, 867, 874, 878, 887, 890, 895, 897], "toolbar": [187, 900], "\u2468": 187, "extrus": 187, "extrud": 187, "rough": [187, 935], "mri_convert": [187, 320], "t1_smoothed_3": 187, "delet": [187, 197, 212, 227, 228, 238, 284, 285, 287, 294, 309, 320, 325, 328, 331, 332, 333, 334, 340, 432, 483, 490, 550, 551, 634, 635, 650, 726, 783, 785, 786, 788, 789, 852, 874, 878, 887, 890, 895, 949, 954], "cleaner": [187, 229], "encount": [187, 191, 216, 229, 517, 935, 940, 947], "runtimeerror": 187, "20516": 187, "isomorph": 187, "defect": [187, 295, 303, 323, 376, 434, 502, 533, 690, 719, 721, 928, 935], "733": [187, 236], "1014": [187, 236], "7732": 187, "8435": [187, 293], "8489": 187, "10181": 187, "11120": [187, 305], "11121": 187, "11122": [187, 305], "11304": 187, "11788": 187, "disrupt": 187, "999668": 187, "wrong": [187, 289, 291, 293, 294, 295, 298, 306, 307, 308, 941], "easiest": [187, 226, 228, 230, 250, 309, 944], "unedit": 187, "gpl": 187, "water": 187, "clean_from_arrai": 187, "575": [187, 190, 223, 955], "80_fix_bem_in_blend": [187, 190, 955], "bb": [188, 512], "pp": [188, 331, 332, 504, 765], "desc": [188, 233, 340], "66000": 188, "inaccur": [188, 243, 316, 320, 328, 331, 332, 333, 334, 340, 423, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 852, 867, 874, 878, 887, 890, 895, 897], "noise_cov_baselin": 188, "noise_cov_reg": 188, "1768": [188, 208, 237, 277, 670], "507": [188, 223], "1785": 188, "1797": 188, "freedom": [188, 233, 255, 257, 260, 263, 291, 328, 333, 334, 542, 770, 771, 773, 774, 835, 851, 870, 935], "violat": [188, 309, 935], "hack": [188, 270], "evoked_meg": 188, "empty_room": 188, "improp": [188, 278, 288], "overestim": [188, 231], "juha": [188, 237, 277, 670, 935], "simola": [188, 237, 277, 670, 935], "kajola": [188, 237, 277, 320, 504, 646, 670, 935], "3359": [188, 277, 935], "3372": [188, 277, 935], "tsp": [188, 232, 277, 423, 635, 935], "853302": [188, 277, 935], "90_compute_covari": [188, 190, 955], "aka": [189, 191, 217], "748": [190, 260, 955], "emphasi": [191, 321, 333, 334, 869], "topic": [191, 192, 216, 226, 229, 231, 277, 314, 321, 364, 937], "knowledg": [191, 270, 310, 316], "unexplain": 191, "experienc": [191, 310, 637], "troubl": [191, 304], "infrar": [191, 217, 241, 242, 277, 283, 317, 320, 331, 332, 333, 334, 336, 422, 512, 550, 551, 580, 632, 672, 673, 674, 676, 783, 785, 786, 787, 788, 789, 833, 859, 868, 873, 948, 955], "spectroscopi": [191, 217, 241, 242, 277, 283, 317, 320, 331, 332, 333, 334, 336, 422, 512, 550, 551, 580, 632, 672, 673, 674, 676, 783, 785, 786, 787, 788, 789, 833, 859, 868, 873, 948, 955], "vssr": [191, 271, 272, 317, 331, 336, 380, 396, 512, 561, 632, 785, 897, 955], "bti": [191, 213, 214, 255, 282, 286, 289, 299, 302, 320, 328, 329, 331, 333, 334, 336, 370, 423, 524, 526, 562, 598, 851, 863, 955], "twowai": [191, 261, 262, 303, 331, 336, 550, 632, 697, 764, 766, 767, 771, 787, 815, 955], "anova": [191, 223, 255, 258, 261, 262, 266, 267, 280, 299, 303, 331, 333, 334, 336, 342, 344, 429, 550, 601, 602, 616, 632, 697, 712, 755, 764, 765, 766, 767, 771, 774, 775, 787, 815, 833, 955], "spatiotempor": [191, 257, 261, 262, 277, 299, 302, 303, 331, 333, 334, 336, 386, 550, 632, 670, 697, 763, 770, 774, 775, 787, 815, 856, 859, 955], "strf": [191, 224, 225, 489, 495, 523, 955], "submodul": [191, 192, 226, 232, 234, 243, 250, 253, 305, 309], "corrupt": [191, 226, 227, 253, 254, 292, 307, 308, 328, 331, 334, 335, 336, 337, 342, 423, 433, 524, 550, 601, 602, 616, 702, 705, 747, 750, 833, 935, 955], "auto_tutorials_python": 191, "auto_tutorials_jupyt": 191, "varieti": [192, 215, 217, 226, 243, 320], "smoothli": [192, 228, 243, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 783, 785, 786, 788, 789, 867, 874, 878, 887, 890, 895, 897], "substitut": [192, 310, 320, 442, 940], "glimps": [192, 243], "41700": 192, "custom_ref_appli": [192, 195, 243, 250, 292, 336], "file_id": [192, 195, 243, 284, 331, 332, 333, 334, 336, 550, 551, 552], "hpi_mea": [192, 195, 243, 287, 336], "hpi_result": [192, 195, 243, 287, 336], "meas_dat": [192, 194, 195, 228, 243, 245, 250, 286, 287, 289, 291, 292, 293, 303, 325, 331, 332, 333, 334, 336, 549, 550, 551, 552, 635, 671, 882, 888], "utc": [192, 195, 243, 245, 303, 331, 332, 333, 334, 336, 550, 551], "meas_id": [192, 195, 243, 284, 331, 332, 333, 334, 336, 550, 551, 552], "breviti": 192, "walk": [192, 232, 234], "orig_raw": 192, "chan_idx": 192, "sent": [192, 194, 217, 218, 232, 240, 244, 317, 341], "deliveri": 192, "squarewav": 192, "unambigu": [192, 194], "older": [192, 194, 196, 283, 284, 294, 388, 503, 550], "summat": [192, 194, 229, 775], "6994": 192, "7086": 192, "7192": 192, "7304": 192, "7413": 192, "ordinari": [192, 194, 227, 233, 255, 310, 653, 661, 768], "autoreject": [192, 227, 228, 948], "aren": [192, 235, 527], "fewest": 192, "conds_we_care_about": 192, "aud_epoch": 192, "vis_epoch": 192, "271": [192, 195, 236], "136": [192, 195, 197, 255, 259, 260, 344], "richer": 192, "aud_evok": 192, "vis_evok": 192, "classic": [192, 270, 338, 339, 342, 345, 346, 347, 814, 817, 833, 893, 898], "p200": [192, 218], "dorso": 192, "evoked_diff": [192, 238], "underdetermin": 192, "akin": 192, "inverse_operator_fil": 192, "inv_oper": 192, "\u03bb\u00b2": 192, "61922423e": 192, "06837855e": 192, "49139511e": 192, "10_overview": [192, 200, 955], "obligatorili": 193, "unexpect": [193, 223, 277, 331, 332, 333, 334, 386, 423, 580, 935], "apply_funct": [193, 284, 288, 294, 296, 331, 332, 333, 334, 550, 551], "unprocess": 193, "original_raw": 193, "complex128": [193, 331, 332, 333, 334, 550, 551], "certain": [193, 194, 218, 226, 230, 232, 237, 250, 269, 278, 298, 301, 304, 305, 307, 308, 309, 310, 320, 329, 333, 334, 456, 509, 538, 550, 551, 613, 635, 654, 671, 770, 771, 869, 901, 940], "unaffect": [193, 230, 489], "rereferenced_raw": 193, "ref_data": [193, 727], "fig_orig": 193, "fig_reref": 193, "unless": [193, 284, 287, 289, 303, 304, 309, 310, 320, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 483, 486, 490, 493, 496, 499, 500, 502, 507, 526, 528, 539, 541, 545, 547, 548, 550, 551, 553, 561, 593, 596, 597, 608, 609, 613, 618, 619, 634, 635, 640, 647, 648, 670, 731, 732, 734, 735, 736, 748, 770, 771, 772, 773, 774, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 814, 815, 816, 823, 835, 859, 865, 866, 867, 870, 874, 882, 888, 889, 890], "15_inplac": [193, 200, 955], "broadli": 194, "ram": [194, 226, 228, 243, 244, 245, 246, 294, 331, 332, 550, 551, 635, 865, 882, 888], "36037": [194, 226, 230, 233, 234, 235, 237, 244, 245, 246], "necessarili": [194, 196, 216, 226, 228, 231, 320, 324, 331, 332, 364, 843], "instantan": [194, 252], "receiv": [194, 217, 274, 287, 320, 504, 568, 744, 914, 940], "rectangular": [194, 229, 255, 338, 339, 342, 345, 346, 347, 893, 898], "ttl": [194, 684], "upcom": 194, "newer": [194, 196, 232, 306, 940, 944, 947, 949], "27977": 194, "28345": 194, "28771": 194, "29219": 194, "29652": 194, "preced": [194, 279, 280, 281, 282, 290, 296, 297, 298, 299, 300, 301, 302, 309, 319, 429, 833], "config": [194, 197, 215, 282, 289, 292, 305, 307, 309, 323, 324, 331, 332, 445, 447, 448, 449, 450, 452, 453, 454, 456, 457, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 524, 525, 531, 532, 542, 550, 551, 562, 625, 635, 709, 719, 722, 726, 833, 843, 865, 882, 888, 945], "mne_stim_channel": [194, 197, 324, 524, 525, 550, 551], "mne_stim_channel_1": [194, 324, 524, 525], "saver": [194, 228, 230, 318, 935], "testing_data_fold": 194, "eeglab_raw_fil": 194, "eeglab_raw": 194, "began": 194, "000068": 194, "602": [194, 230, 255, 260, 262, 955], "unmodifi": [194, 235, 308, 580], "custom_map": 194, "orig_tim": [194, 228, 245, 284, 287, 288, 291, 292, 303, 325, 350], "annot_from_ev": 194, "event_desc": [194, 350], "suppos": [194, 233, 273, 320, 848], "rem_annot": 194, "rem_ev": 194, "rem_event_dict": 194, "modulo": 194, "501": [194, 223, 230, 236, 255], "onlin": [194, 227, 232, 246, 283, 286, 312, 324, 937, 951], "20_events_from_raw": [194, 200, 955], "alon": [195, 951], "gantri": [195, 286, 336], "blank": [195, 243, 303, 783, 947], "subject_info": [195, 278, 286, 305, 331, 332, 333, 334, 336, 550, 551, 552], "device_info": [195, 289, 331, 332, 333, 334, 336, 515, 550, 551, 552], "helium_info": [195, 289, 331, 332, 333, 334, 336, 550, 551, 552], "hpi_subsystem": [195, 336], "proc_histori": [195, 331, 332, 333, 334, 336, 550, 551, 552], "proj_id": [195, 243, 331, 332, 333, 334, 336, 550, 551, 552], "proj_nam": [195, 243, 331, 332, 333, 334, 336, 550, 551, 552], "utc_offset": [195, 289, 303, 331, 332, 333, 334, 336, 550, 551, 552], "line_freq": [195, 270, 336], "gantry_angl": [195, 336], "ctf_head_t": [195, 336], "dev_ctf_t": [195, 336], "acq_par": [195, 243, 324, 336], "acq_stim": [195, 336], "xplotter_layout": [195, 336], "kit_system_id": [195, 336], "0143": 195, "0142": 195, "0213": 195, "0212": [195, 403], "0222": 195, "0223": 195, "0232": 195, "0233": 195, "0313": 195, "0312": 195, "0322": 195, "0323": 195, "0333": 195, "0332": 195, "0343": 195, "0342": 195, "0413": 195, "0412": 195, "0422": 195, "0423": 195, "0432": 195, "0433": 195, "0443": 195, "0442": 195, "0513": 195, "0512": 195, "0523": [195, 277, 748], "0522": 195, "0532": 195, "0533": 195, "0542": 195, "0543": 195, "0613": 195, "0612": 195, "0622": 195, "0623": 195, "0633": 195, "0632": 195, "0643": 195, "0713": 195, "0712": 195, "0723": 195, "0722": 195, "0733": 195, "0732": 195, "0743": 195, "0742": 195, "0813": 195, "0822": 195, "0823": 195, "0913": 195, "0912": 195, "0923": 195, "0922": 195, "0932": 195, "0933": 195, "0943": 195, "1012": [195, 222], "1023": 195, "1022": [195, 223, 236], "1032": 195, "1033": 195, "1042": [195, 403], "1112": 195, "1113": [195, 223], "1123": 195, "1133": 195, "1132": 195, "1143": 195, "1213": 195, "1212": 195, "1223": 195, "1232": 195, "1233": [195, 236], "1243": 195, "1242": [195, 223], "1312": 195, "1313": 195, "1322": 195, "1343": 195, "1412": 195, "1423": 195, "1433": 195, "1432": [195, 222], "1442": 195, "1443": 195, "1512": [195, 277, 545], "1513": 195, "1523": [195, 277, 801, 811, 812, 814, 815, 817], "1533": 195, "1532": 195, "1543": 195, "1542": 195, "1622": 195, "1623": 195, "1632": 195, "1633": 195, "1642": 195, "1713": 195, "1712": 195, "1722": 195, "1723": 195, "1732": 195, "1733": 195, "1743": 195, "1742": 195, "1813": 195, "1812": 195, "1822": 195, "1823": 195, "1832": 195, "1833": 195, "1843": [195, 222], "1912": 195, "1913": 195, "1923": 195, "1922": 195, "1932": 195, "1933": [195, 255], "1943": 195, "1942": 195, "2023": [195, 197, 240, 313, 315, 941], "2022": [195, 206, 239, 277, 313, 317, 649], "2032": 195, "2033": 195, "2042": 195, "2112": 195, "2122": 195, "2133": 195, "2132": 195, "2143": [195, 222, 277, 814, 817], "2142": 195, "2212": 195, "2213": 195, "2223": 195, "2222": 195, "2233": 195, "2242": [195, 243], "2243": 195, "2312": 195, "2313": [195, 237], "2323": 195, "2322": 195, "2333": [195, 629], "2343": 195, "2342": 195, "2412": 195, "2413": 195, "2422": 195, "2432": 195, "2442": 195, "2512": 195, "2513": 195, "2523": 195, "2533": 195, "2532": 195, "2543": 195, "2542": 195, "2612": 195, "2613": 195, "2633": 195, "bear": [195, 289, 309, 935], "scanno": [195, 336], "logno": [195, 336], "cal": [195, 240, 336, 388, 549, 655], "coil_typ": [195, 317, 336, 553], "unit_mul": [195, 336], "131": [195, 255, 403], "148": [195, 236, 255], "162": [195, 222, 223, 236, 255, 259, 260, 277, 344], "163": [195, 223, 236, 255, 344], "185": [195, 212, 228, 236, 255, 259, 260, 344], "193": [195, 214, 236, 255, 259, 260, 300, 955], "206": [195, 236, 259], "208": [195, 197, 215, 255, 259, 277], "212": [195, 229, 255, 259, 260, 277], "215": [195, 212, 223, 267, 277, 651, 955], "216": [195, 255, 259, 260, 264], "218": [195, 229, 245, 255, 260, 277], "224": [195, 197, 202, 214, 215, 255, 955], "237": 195, "242": [195, 255, 259, 301], "254": [195, 236, 255, 259], "259": [195, 236, 277, 320], "268": [195, 211, 218, 260], "276": [195, 255], "278": [195, 260], "279": [195, 230, 255, 260, 277, 635, 814, 817], "282": [195, 236, 260], "286": [195, 255], "292": [195, 236, 260], "294": [195, 236, 255, 260], "296": 195, "308": [195, 236, 255], "309": [195, 260, 277, 674, 814, 817], "315": [195, 279], "322": [195, 236, 260], "oxyhemoglobin": [195, 319, 320, 331, 332, 333, 334, 550, 551, 632, 783, 785, 786, 787, 788, 789], "deoxyhemoglobin": [195, 217, 319, 320, 331, 332, 333, 334, 550, 551, 632, 783, 785, 786, 787, 788, 789], "hbo": [195, 217, 238, 243, 250, 319, 320, 331, 332, 333, 334, 336, 379, 441, 443, 550, 551, 632, 783, 785, 786, 787, 788, 789], "hbr": [195, 217, 238, 243, 250, 319, 320, 331, 332, 333, 334, 336, 379, 441, 443, 550, 551, 632, 783, 785, 786, 787, 788, 789], "express": [195, 227, 295, 299, 310, 320, 500, 512, 559, 566, 574, 610, 629, 659, 688, 705, 799], "unawar": 195, "accident": [195, 245, 284, 294, 303, 308, 748], "emb": 195, "comprehens": [195, 223, 243, 255, 257, 309, 310, 483], "ch_idx_by_typ": 195, "exci": [195, 243, 320, 331, 332, 333, 334, 336, 379, 550, 551, 632, 783, 785, 786, 787, 788, 789], "ia": [195, 243, 283, 289, 320, 331, 332, 333, 334, 336, 379, 550, 551, 632, 783, 785, 786, 787, 788, 789], "syst": [195, 243, 320, 331, 332, 333, 334, 336, 379, 550, 551, 632, 783, 785, 786, 787, 788, 789], "bio": [195, 250, 320, 331, 332, 333, 334, 379, 443, 516, 550, 551, 566, 632, 783, 785, 786, 787, 788, 789], "temperatur": [195, 305, 317, 319, 320, 331, 332, 333, 334, 336, 379, 550, 551, 632, 783, 785, 786, 787, 788, 789], "gsr": [195, 305, 320, 331, 332, 333, 334, 336, 379, 550, 551, 632, 783, 785, 786, 787, 788, 789], "fnirs_cw_amplitud": [195, 217, 238, 319, 331, 332, 333, 334, 336, 441, 550, 551], "fnirs_fd_ac_amplitud": [195, 217, 319, 331, 332, 333, 334, 336, 441, 550, 551], "fnirs_fd_phas": [195, 217, 319, 331, 332, 333, 334, 336, 441, 550, 551], "fnirs_od": [195, 319, 331, 332, 333, 334, 336, 441, 550, 551], "eeg_indic": 195, "ipython": [195, 310, 321, 331, 332, 550, 551, 635, 865, 882, 888, 935, 940, 950], "30_info": [195, 200, 955], "plai": [196, 232, 252, 270, 310, 320, 813, 816], "eeg_posit": 196, "builtin_montag": 196, "montage_nam": 196, "montage_descript": 196, "standard_alphabet": 196, "a1": [196, 235], "b2": 196, "standard_postfix": 196, "postfix": 196, "intermedi": [196, 227, 307, 320, 337, 356, 358, 769, 833, 906], "standard_prefix": 196, "standard_prim": 196, "biosemi16": [196, 255], "biosemi": [196, 255, 320, 406, 559], "cap": [196, 223, 255, 303, 317, 319], "biosemi32": [196, 255], "biosemi64": [196, 255], "biosemi160": 196, "biosemi256": 196, "m10": [196, 291], "m43": [196, 308], "egi_256": 196, "geodes": [196, 304, 541, 587, 753, 754, 755, 757, 758], "gsn": [196, 515], "hydrocel": [196, 515], "64_1": 196, "65_1": 196, "mgh60": [196, 306], "mgh70": [196, 287], "brainvis": [196, 281, 283, 284, 285, 287, 288, 289, 292, 293, 295, 300, 302, 303, 304, 317, 320, 398, 399, 512, 516, 550, 551, 561, 688], "artini": [196, 217, 278, 294, 303, 396], "octamon": [196, 217, 294], "detector": [196, 217, 238, 243, 292, 295, 320, 575, 675, 676, 833, 851], "brite23": [196, 294], "brainproduct": 196, "rnp": 196, "ba": [196, 283, 305, 320, 518], "easycap_montag": 196, "headshap": [196, 292, 323, 373, 380, 393, 405, 576], "gca": 196, "view_init": [196, 233, 255], "azim": [196, 233], "ssvep_raw": 196, "circumfer": 196, "t4": 196, "t3": [196, 292, 388, 550], "sample_data_raw_path": 196, "sample_raw": 196, "ax2d": 196, "add_subplot": [196, 255], "ax3d": 196, "irregular": [196, 282, 935], "fastrak": 196, "predefin": [196, 319], "layout_dir": 196, "iterdir": 196, "IN": 196, "ctf151": [196, 255, 406], "lai": [196, 292, 295, 304, 320, 406, 582], "ctf275": [196, 255, 406], "eeg1005": [196, 406], "egi256": [196, 406], "geodesicheadweb": [196, 406], "AS": [196, 406], "umd": [196, 255, 406], "neuromag_122": [196, 406], "grad_norm": [196, 406], "magneswh3600": [196, 406, 562], "biosemi_layout": 196, "layout_from_raw": 196, "make_meg_layout": 196, "snugli": 196, "40_sensor_loc": [196, 200, 955], "suit": [197, 951], "unnam": 197, "mne_use_cuda": [197, 445, 940], "json": [197, 532], "unset": [197, 286, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 486, 493, 496, 499, 500, 526, 539, 541, 550, 551, 593, 596, 597, 608, 609, 618, 619, 640, 647, 648, 731, 732, 734, 735, 736, 748, 770, 771, 772, 773, 774, 785, 788, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 814, 815, 816, 835, 867, 870, 889], "typeerror": [197, 202, 283, 859], "err": [197, 231, 413], "nonetyp": 197, "unsur": [197, 230, 309], "fallback": [197, 283, 310, 331, 332, 550, 551, 865, 888], "missing_config_kei": 197, "mne_browse_raw_s": 197, "mne_datasets_brainstorm_path": 197, "mne_datasets_eegbci_path": [197, 450, 456], "mne_datasets_epilepsy_ecog_path": [197, 452], "mne_datasets_erp_core_path": [197, 453], "mne_datasets_eyelink_path": [197, 454], "mne_datasets_fieldtrip_cmc_path": 197, "mne_datasets_fnirs_motor_path": [197, 461], "mne_datasets_hf_sef_path": [197, 463], "mne_datasets_kiloword_path": [197, 464], "mne_datasets_limo_path": [197, 465], "mne_datasets_misc_path": [197, 466], "mne_datasets_mtrf_path": [197, 467], "mne_datasets_multimodal_path": [197, 468], "mne_datasets_opm_path": 197, "mne_datasets_phantom_4dbti_path": [197, 470], "mne_datasets_phantom_kernel_path": [197, 471], "mne_datasets_phantom_kit_path": [197, 472], "mne_datasets_refmeg_noise_path": [197, 473], "mne_datasets_sample_path": [197, 456, 474], "mne_datasets_somato_path": [197, 477], "mne_datasets_spm_face_path": 197, "mne_datasets_ssvep_path": [197, 479], "mne_datasets_testing_path": 197, "mne_datasets_ucl_opm_auditory_path": [197, 480], "mne_logging_level": [197, 729], "mne_browser_precomput": [197, 331, 332, 550, 551, 635, 865, 882, 888], "mne_3d_option_them": [197, 303, 833], "mne_browser_backend": [197, 278, 303, 331, 332, 550, 551, 635, 865, 882, 888], "mne_browser_them": [197, 303, 331, 332, 550, 551, 635, 865, 882, 888], "mne_browser_overview_mod": [197, 331, 332, 550, 551, 635, 865, 882, 888], "hidden": [197, 198, 293, 294, 305, 331, 332, 550, 551, 635, 833, 865, 882, 888], "mne_3d_option_antialia": [197, 292, 901, 940], "antialias": [197, 292, 940], "mne_3d_option_depth_peel": [197, 901], "peel": 197, "mne_3d_option_multi_sampl": [197, 304, 940], "mne_3d_option_smooth_shad": [197, 843, 901], "theme": [197, 294, 303, 304, 331, 332, 550, 551, 635, 833, 865, 882, 888], "browser": [197, 198, 218, 243, 278, 280, 303, 309, 323, 331, 332, 341, 550, 551, 623, 635, 842, 847, 865, 882, 888, 904, 920, 941], "inch": [197, 273, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 783, 785, 786, 788, 789, 867, 874, 878, 887, 890, 895, 897], "mne_browser_use_opengl": [197, 303, 331, 332, 550, 551, 635, 865, 882, 888], "opengl": [197, 323, 331, 332, 542, 550, 551, 635, 865, 882, 888, 940, 941, 947, 951], "mne_cache_dir": 197, "cach": [197, 940], "mne_coreg_advanced_rend": 197, "mne_coreg_copy_annot": 197, "mne_coreg_fullscreen": [197, 542], "mne_coreg_guess_mri_subject": 197, "mne_coreg_head_high_r": [197, 542], "mne_coreg_head_opac": [197, 542], "mne_coreg_head_insid": 197, "opaqu": [197, 198, 294, 341, 542], "occlud": [197, 542], "mne_coreg_interact": 197, "trackbal": [197, 323, 333, 334, 542, 833, 835, 851, 870], "terrain": [197, 286, 303, 323, 333, 334, 542, 833, 835, 851, 870], "mne_coreg_mark_insid": 197, "mne_coreg_prepare_bem": 197, "mne_coreg_orient_to_surfac": 197, "mne_coreg_scale_label": 197, "mne_coreg_scale_by_dist": 197, "mne_coreg_scene_scal": 197, "mne_coreg_window_height": 197, "mne_coreg_window_width": [197, 542], "mne_coreg_subjects_dir": 197, "mne_cuda_devic": [197, 289], "gpu": [197, 289, 935], "mne_datasets_megsim_path": 197, "megsim": [197, 285], "mne_datasets_spm_face_datasets_test": 197, "mne_datasets_visual_92_categories_path": [197, 481], "mne_force_seri": 197, "serial": [197, 336], "decor": [197, 829, 831], "stabl": [197, 206, 229, 231, 277, 309, 326, 364, 365, 410, 522, 549, 550, 551, 623, 635, 645, 843, 935, 947], "intro": [197, 198, 200, 270, 955], "50_configure_mn": [197, 200, 955], "mne_memmap_min_s": 197, "worker": [197, 312], "1m": [197, 730], "5g": 197, "mne_repr_html": [197, 305], "mne_skip_network_test": 197, "requires_good_network": 197, "mne_skip_testing_dataset_test": 197, "requires_spm_data": 197, "requires_bstraw_data": 197, "mne_tqdm": [197, 292, 293], "tqdm": [197, 292, 293], "presenc": [197, 227, 238, 252, 270, 277, 282, 291, 293, 304, 309, 316, 336, 462, 507], "absenc": [197, 507], "mne_use_numba": 197, "numba": [197, 289, 291, 292, 293, 941], "compil": [197, 671], "misspel": 197, "mnee_use_cuudaa": 197, "runtimewarn": [197, 830], "unrecogn": [197, 294, 331, 332, 333, 334, 336, 550, 551], "concern": [197, 231, 255, 571, 659, 695, 699], "userprofil": [197, 532], "linux": [197, 287, 309, 942, 944, 947, 949], "maco": [197, 288, 294, 309, 942, 944, 945], "home_dir": [197, 531, 532, 726], "use_env": [197, 531], "set_env": [197, 283, 726], "python_env": [197, 232], "minimal_cmd": 197, "usr": [197, 947, 950], "sbin": 197, "statement": [197, 198, 255, 728, 947], "fresh": 197, "me": [197, 778], "worrisom": 197, "temporarili": [197, 233, 234, 331, 332, 333, 334, 446, 485, 521, 550, 551, 635, 865, 882, 888, 913], "kit_data_path": 197, "abspath": 197, "432": [197, 223, 236], "496": [197, 236, 344], "meg160": 197, "v2r004": 197, "160ch": 197, "jan24": 197, "eq1160c": 197, "dewar": 197, "fll": 197, "board": 197, "adc": [197, 216], "alloc": [197, 770, 771, 773, 774], "shorthand": 197, "whatev": [197, 235, 309, 550, 551, 787], "recent": [197, 229, 304, 309, 316, 483, 941], "hasn": [197, 294, 303, 647], "stdout": [197, 305, 728, 782], "platform": [197, 322, 331, 332, 333, 334, 550, 551, 785, 786, 788, 789, 888, 941, 944, 949, 951, 953], "1039": [197, 223], "aw": [197, 322], "x86_64": [197, 947], "glibc2": 197, "jun": [197, 277, 743, 941], "gcc": 197, "cpu": [197, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 486, 493, 495, 496, 499, 500, 526, 539, 541, 550, 551, 593, 596, 597, 608, 609, 618, 619, 635, 640, 647, 648, 670, 731, 732, 734, 735, 736, 748, 770, 771, 772, 773, 774, 785, 788, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 814, 815, 816, 835, 865, 867, 870, 882, 888, 889, 940, 941], "gb": [197, 940, 941, 947], "dev210": 197, "gd8448e394": 197, "devel": [197, 309], "latest": [197, 291, 304, 309, 782, 935, 940, 949], "releas": [197, 216, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 309, 310, 782, 935, 949], "openbla": [197, 935, 941], "dev": [197, 252, 623, 728, 941], "thread": [197, 265, 320, 331, 332, 550, 551, 635, 865, 882, 888, 941], "agg": 197, "pooch": [197, 295, 303, 456, 941], "jinja2": [197, 303, 941], "dipi": [197, 307, 343, 667, 821, 822, 823, 941], "openmeeg": [197, 305, 592, 597, 941], "unavail": [197, 291, 941], "cupi": [197, 287, 331, 332, 333, 334, 485, 489, 494, 521, 522, 523, 550, 551, 940, 941], "mesa": [197, 292, 303, 304, 306, 542, 901, 941], "0ubuntu1": 197, "llvmpipe": [197, 940, 941], "llvm": [197, 940, 941], "pyvistaqt": [197, 295, 338, 342, 346, 845, 893, 900, 919, 940, 941], "vtk": [197, 303, 482, 833, 850, 940, 941], "qtpy": [197, 941], "pyqt6": 197, "ipympl": [197, 941], "pyqtgraph": [197, 295, 303, 331, 332, 550, 551, 635, 865, 882, 888, 941], "ipywidget": 197, "trame_cli": 197, "trame_serv": 197, "trame_vtk": 197, "trame_vuetifi": 197, "ecosystem": [197, 941, 942, 945, 948], "icalabel": [197, 304, 941, 948], "shell": [198, 209, 237, 277, 309, 320, 323, 591, 598, 935, 941, 947, 948], "deploi": [198, 935], "tempfil": 198, "ndimag": 198, "raw_tsss": [198, 323, 550, 551, 572], "_eeg": [198, 294, 323, 550, 551], "_ieeg": [198, 294, 323, 550, 551], "underscor": [198, 228, 232, 243, 635], "parse_fold": [198, 286, 287, 291, 292, 293, 294, 295, 302, 341], "add_raw": [198, 303, 341], "slider": [198, 274, 287, 294, 303, 304, 333, 334, 341, 874, 940], "scrub": 198, "report_raw": 198, "jqueri": 198, "bundl": [198, 303, 944], "tableexport": 198, "highlightj": 198, "atom": 198, "meaning": [198, 244, 309, 724], "events_path": 198, "report_ev": 198, "add_epoch": [198, 303, 341], "fly": [198, 257, 302, 331, 332, 550, 551, 818, 831, 865, 888], "report_epoch": 198, "add_evok": [198, 341], "n_time_point": [198, 341], "evoked_path": 198, "cov_path": 198, "evokeds_subset": 198, "report_evok": 198, "add_covari": [198, 341], "report_cov": 198, "ecg_proj_path": 198, "report_proj": 198, "add_ica": [198, 278, 305, 341], "ecg_evok": [198, 232, 234, 341], "eog_evok": [198, 231, 232, 234, 341], "artifactu": [198, 226, 229, 232, 277, 635], "find_bads_ecg": [198, 232, 284, 292, 295, 341, 635], "ecg_scor": [198, 232, 341], "liber": 198, "eog_compon": 198, "report_ica": 198, "add_bem": [198, 295, 341], "th": [198, 320, 331, 635, 740, 743, 745, 787, 935], "report_mri_and_bem": 198, "add_tran": [198, 303, 341], "trans_path": 198, "report_coregistr": 198, "add_forward": [198, 303, 341, 833, 954], "fwd_path": 198, "report_forward_sol": 198, "add_inverse_oper": [198, 341], "inverse_op_path": 198, "report_inverse_op": 198, "add_stc": [198, 303, 341], "report_inverse_sol": 198, "01632618": 198, "06303297": 198, "63565434": 198, "add_cod": [198, 341], "syntax": [198, 309, 320, 341], "snippet": [198, 263, 341, 935], "liter": [198, 320, 341], "mne_init_py_path": 198, "__init__": [198, 624], "mne_init_py_cont": 198, "read_text": 198, "utf": [198, 287, 304, 567, 688, 694], "report_cod": 198, "add_figur": [198, 295, 303, 304, 341], "caption": [198, 295, 341], "num": [198, 269], "sky": 198, "image_format": [198, 306, 307, 323, 341], "report_custom_figur": 198, "fig_1": 198, "ax_1": 198, "ax_2": 198, "report_custom_figure_sect": 198, "logo": [198, 280], "mne_logo_path": 198, "mne_icon": 198, "fig_arrai": 198, "rotation_angl": 198, "fig_array_rot": 198, "fun": [198, 331, 332, 333, 334, 550, 551], "photo": 198, "screenshot": [198, 273, 295, 833, 905], "sketch": 198, "add_imag": [198, 295, 304, 306, 341], "jpeg": [198, 341], "gif": [198, 306, 341, 833], "svg": [198, 285, 302, 307, 323, 341], "report_custom_imag": 198, "add_": 198, "dropdown": [198, 303], "menu": [198, 245, 321, 944, 947], "hide": [198, 245, 268, 280, 289, 303], "checkbox": [198, 303], "report_tag": 198, "hdf5": [198, 278, 287, 301, 335, 338, 339, 341, 345, 347, 355, 368, 624, 634, 680, 710, 783, 784, 785, 786, 787, 788, 789, 805, 806, 807, 818, 922, 923, 927, 935], "report_parti": 198, "amend": [198, 400], "report_from_disk": 198, "report_fin": 198, "invok": [198, 301, 323, 848, 947], "barebon": [198, 323], "render_bem": [198, 286, 341], "raw_butterfli": [198, 341], "report_parse_folder_bas": 198, "raw_psd": [198, 287, 341], "refin": [198, 343, 388, 429], "report_parse_folder_raw_psd_proj": 198, "mri_decim": [198, 323, 341], "report_parse_folder_mri_bem": 198, "temporarydirectori": 198, "n_time_points_evok": [198, 341], "report_parse_folder_evok": 198, "tmp": 198, "tmp_zlbargh": 198, "add_html": [198, 295, 341], "remind": [198, 309, 635], "my_html": 198, "ol": [198, 301, 312, 768], "manifest": [198, 230, 231, 232, 234, 319], "n1": 198, "report_add_html": 198, "70_report": [198, 200, 955], "realli": 201, "carri": [201, 226, 232, 270, 559, 764], "belong": [201, 336, 337, 341, 704, 760, 832, 833], "shape_lh": 201, "is_equ": 201, "suspect": 201, "nth": [201, 232, 326, 330, 331, 332, 333, 334, 652, 653, 783, 787], "peak_vertex": 201, "vert_as_index": [201, 206, 338, 339, 342, 345, 346, 347], "peak_vertex_surf": 201, "peak_valu": 201, "logic": [201, 250, 257, 260, 305, 331, 332, 333, 334, 336, 542, 550, 551, 552, 635, 659], "lh_coordin": 201, "rh_coordin": 201, "10_stc_class": [201, 214, 955], "load_mni152_templ": 202, "fname_av": 202, "fname_surf_lh": 202, "n100m": 202, "evoked_ful": 202, "posixpath": [202, 207], "6179": 202, "6941": 202, "2193": 202, "0405": 202, "7598": 202, "mni_po": 202, "to_mni": [202, 294, 329], "mri_po": 202, "to_mri": [202, 305, 329], "best_dip_idx": 202, "to_volume_label": [202, 295, 329], "fig_t1": 202, "cut_coord": 202, "fig_templ": 202, "pred_evok": 202, "inf": [202, 218, 226, 251, 284, 331, 332, 333, 334, 349, 488, 547, 548, 550, 551, 584, 648, 783, 785, 786, 788, 789, 790, 792, 793, 795, 803, 804, 842, 889, 895], "best_idx": 202, "best_tim": 202, "conf": [202, 309, 329], "plot_param": 202, "0f": [202, 333, 334, 835, 870], "dip_fix": 202, "7506": 202, "6606": 202, "electromagnet": [202, 204, 226, 234, 237, 252, 277, 319, 320, 364, 365, 504, 602, 646, 670], "biomagnet": [202, 277], "953": [202, 214, 955], "20_dipole_fit": [202, 214, 955], "200m": 203, "500m": 203, "fig_cov": [203, 328, 860], "fig_spectra": 203, "1705": [203, 206], "1468": 203, "506": [203, 255], "1574": 203, "608": 203, "67933": 203, "16538e": 203, "set_color": [203, 209], "98df81": [203, 209], "vertno_max": 203, "time_max": [203, 204], "30_mne_dspm_loreta": [203, 214, 955], "left_auditori": 204, "dip_po": 204, "dip_ori": 204, "dip_len": 204, "dip_tim": 204, "rgb": [204, 338, 339, 342, 345, 346, 347, 536, 541, 833, 854, 893, 898, 899], "outward": [204, 329, 339, 345, 347, 434, 863, 935], "moment": [204, 206, 336, 339, 345, 347, 386, 411, 413, 414, 415, 504, 645, 646, 659, 670, 898], "06165525": 204, "70033915": 204, "34794621": 204, "inward": [204, 935], "curvatur": [204, 295, 338, 339, 342, 345, 346, 347, 781, 833, 893, 898], "collaps": [204, 341, 505], "brain_mag": 204, "overlay_alpha": [204, 339, 345, 347, 898], "2188": 204, "44205e": 204, "79973942": 204, "38378769": 204, "8347911": 204, "somewhat": [204, 226], "strai": 204, "unrestrict": 204, "brain_loos": 204, "03844879": 204, "68532258": 204, "12541436": 204, "knuutila": [204, 277], "olli": [204, 277], "lounasmaa": [204, 277], "instrument": [204, 226, 232, 277], "noninvas": [204, 277], "modern": [204, 215, 277, 288, 295, 320, 457, 937, 940], "revmodphi": [204, 277], "fa": [204, 277, 613, 740, 745], "hsuan": [204, 277, 613, 740, 745], "lin": [204, 222, 277, 489, 613, 740, 745], "belliveau": [204, 277, 602, 613, 740, 745], "20155": [204, 277], "35_dipole_orient": [204, 214, 955], "variant": [205, 216, 291, 536, 646, 940], "1498464098687909": [205, 207], "037797": 205, "65922": 205, "72259e": 205, "28047949e": 205, "72734062e": 205, "97200565e": 205, "56295849": 205, "27742998": 205, "00597185": 205, "65359441": 205, "22223216": 205, "63030546": 205, "eigen": [205, 337, 760], "34003429e": 205, "79067976e": 205, "93243713e": 205, "61893": 205, "8713e": 205, "81398590e": 205, "00293217e": 205, "59049573e": 205, "79225614": 205, "45181115": 205, "88420759": 205, "65906465": 205, "11446799": 205, "4224023": 205, "41240750e": 205, "15338772e": 205, "80101709e": 205, "556": [205, 214, 223, 955], "40_mne_fixed_fre": [205, 214, 955], "britta": [206, 277, 285, 286, 287, 288, 291, 292, 294, 295, 303, 306, 307, 308, 953], "westner": [206, 277, 285, 286, 287, 288, 291, 292, 294, 295, 303, 306, 307, 308, 953], "wstnr": 206, "linearli": [206, 233, 237, 277, 319, 360, 361, 362, 363, 364, 365, 935], "ingredi": 206, "valuabl": [206, 320], "gaug": 206, "incorpor": [206, 255, 260, 304, 309, 320, 388, 507, 516, 550, 551, 640], "rule": [206, 226, 230, 277, 320, 635], "thumb": [206, 226, 230, 317, 635], "advic": [206, 309], "defici": [206, 284, 285, 320, 439, 635], "misrepres": 206, "3757": [206, 207], "inher": [206, 216, 260, 500], "somehow": [206, 208, 232], "nai": [206, 287, 292, 364, 365], "switch": [206, 209, 210, 229, 236, 252, 277, 288, 292, 295, 309, 323, 337, 342, 418, 550, 551, 940, 947], "invari": [206, 364, 365], "filters_vec": 206, "087": 206, "stat_map": [206, 346, 347, 899], "5184": 206, "glass_brain": [206, 207, 289, 346, 347, 899], "022485": [206, 207], "008449": [206, 207], "036217": [206, 207], "071071": [206, 207], "914866": [206, 207], "406098": [206, 207], "008756": [206, 207], "433700": [206, 207], "028119": [206, 207], "plotter": [206, 280, 293, 318, 331, 332, 635, 833, 836, 865, 882], "peak_vox": 206, "ori_label": 206, "fname_fs_src": 206, "stc_f": [206, 207], "085": [206, 212], "17352": 206, "barri": [206, 229, 231, 232, 277, 364, 365, 634, 650], "veen": [206, 277, 364, 365], "wim": [206, 277, 364, 365], "drongelen": [206, 277, 364, 365], "mosh": [206, 277, 364, 365], "yuchtman": [206, 277, 364, 365], "akifumi": [206, 277, 364, 365], "suzuki": [206, 277, 364, 365], "867": [206, 236, 277, 364, 365], "623056": [206, 277, 364, 365], "brook": [206, 277, 280, 281, 282, 283, 284, 285, 287, 288, 292, 298, 299, 300, 301, 302, 314], "jiri": [206, 277], "vrba": [206, 277], "clair": [206, 277, 286], "stevenson": [206, 277], "gareth": [206, 239, 277, 317, 649], "barn": [206, 239, 277, 317, 649], "arjan": [206, 277], "hillebrand": [206, 277], "morri": [206, 277], "optimis": [206, 277], "1788": [206, 277], "sarang": [206, 277, 312], "dalal": [206, 277, 312], "vladimir": [206, 255, 277, 776, 777], "litvak": [206, 255, 277, 776, 777], "oostenveld": [206, 260, 277, 291, 770, 771, 773, 774], "mathij": [206, 277], "schoffelen": [206, 277], "118789": [206, 277], "808": [206, 214, 955], "50_beamformer_lcmv": [206, 214, 955], "flatmap": [207, 294, 338, 342, 346, 833, 893], "mpl_fig": 207, "94880328959697": 207, "84640986879091": 207, "649601096532322": 207, "5653": 207, "67635542": 207, "11717401": 207, "19136023": 207, "atlas": [207, 292, 732], "label_tc": [207, 338, 339, 342, 345, 346, 347, 517], "lidx": 207, "xytext": 207, "arrowprop": [207, 222], "arrowstyl": [207, 222], "spine": [207, 273, 848, 859], "set_vis": 207, "grain": [207, 295], "loci": 207, "stc_back": 207, "6210": 207, "69834054": 207, "98871778": 207, "62206532": 207, "70708526": 207, "36619556": 207, "64056812": 207, "60_visualize_stc": [207, 214, 955], "reconstrct": 208, "elc": [208, 283, 398], "synthes": [208, 215, 288, 371, 375, 576, 660], "fname_t1_electrod": 208, "sample_eeg_mri": 208, "t1_electrod": 208, "fname_mon": 208, "sample_mri_montag": 208, "ras_mni_t": [208, 825], "mni_affin": 208, "img_mni": 208, "hot_black_bon": 208, "black_bg": 208, "resampling_interpol": 208, "pos_vox": 208, "fname_t1": 208, "vox2mri_t": 208, "pos_mri": [208, 329], "tkmedit": [208, 320, 947], "dig_montag": 208, "head_siz": [208, 396, 398], "99930957": 208, "00998471": 208, "03578661": 208, "00316747": 208, "01275917": 208, "81240435": 208, "58295487": 208, "00685511": 208, "03489383": 208, "58300899": 208, "81171605": 208, "02888406": 208, "812404": 208, "582955": 208, "583009": 208, "3252": 208, "3250": 208, "3223": 208, "4097": [208, 229], "1789": 208, "8193": 208, "040598": 208, "157084": 208, "86184": 208, "24877e": 208, "17591891": 208, "939572": 208, "86348066": 208, "70_eeg_mri_coord": [208, 214, 955], "planor": 209, "meg1933": 209, "meg2421": 209, "645": [209, 223, 272, 955], "1792": 209, "3840": 209, "7936": 209, "bmax": [209, 323], "ring": [209, 229, 285, 286, 518, 520], "otaniemi": [209, 284, 295, 317, 460, 503], "phantom_otaniemi": 209, "32640": 209, "32639": 209, "976295": 209, "211976": 209, "043756": 209, "206488": 209, "972764": 209, "105326": 209, "064891": 209, "093794": 209, "993475": 209, "rad2deg": [209, 212], "arcco": [209, 212], "80_brainstorm_phantom_elekta": [209, 214, 955], "phantomctf": 210, "bst_phantom_ctf": 210, "phantom_200ua_20150709_01": 210, "dip_freq": [210, 212], "phantom_20ua_20150603_03": 210, "erm_path": 210, "emptyroom_20150709_01": 210, "24000": 210, "23999": 210, "hdac006": 210, "zeros_lik": [210, 222], "ones_lik": [210, 257, 258], "tsss": [210, 281, 307, 333, 336, 550, 572, 670, 678, 700], "apply_gradient_compens": [210, 215, 283, 320, 550, 551], "un": [210, 230, 233, 237, 246, 320, 550, 551, 611, 612, 888], "mf_kwarg": 210, "st_durat": [210, 237, 659, 670], "021666666666666667": 210, "catch_warn": 210, "simplefilt": 210, "60000": 210, "998": [210, 218, 236, 237, 648, 653, 661, 664], "999939": 210, "002039": 210, "010868": 210, "001115": 210, "959234": 210, "282612": 210, "011001": 210, "282607": 210, "959173": 210, "expected_po": 210, "array_str": 210, "85_brainstorm_phantom_ctf": [210, 214, 955], "4dbti": 211, "badier": [211, 277, 743], "marseil": [211, 317], "franc": 211, "rfhp1": 211, "0hz": 211, "a173": 211, "a213": 211, "a232": 211, "4350": 211, "not_and": [211, 285, 324, 524, 697], "hs_file": [211, 215, 562], "13599": 211, "20053968578577042": 211, "6576": 211, "6575": 211, "975564": 211, "033891": 211, "217085": 211, "044586": 211, "998011": 211, "044560": 211, "215143": 211, "053150": 211, "975135": 211, "975554": 211, "034041": 211, "217109": 211, "044503": 211, "998063": 211, "043482": 211, "215208": 211, "052081": 211, "975178": 211, "975577": 211, "033678": 211, "217061": 211, "044611": 211, "997960": 211, "045666": 211, "215080": 211, "054233": 211, "975089": 211, "975557": 211, "033946": 211, "217110": 211, "044391": 211, "998071": 211, "043409": 211, "215218": 211, "051986": 211, "975181": 211, "37436305": 211, "3777228": 211, "21169488": 211, "17616473": 211, "90_phantom_4dbti": [211, 214, 955], "find_peak": 212, "oyama": [212, 277, 503], "002_phantom_11hz_100ua": 212, "con": [212, 226, 229], "plot_scal": 212, "raw_plot_kwarg": 212, "582800": 212, "boxcar": [212, 270, 287, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 523, 550, 551, 935], "downward": [212, 331, 332, 333, 334, 336, 550, 551, 891], "dip_act": 212, "dip_t": 212, "thresh": [212, 653, 661, 665, 679, 770, 771, 773, 774, 833], "min_dist": [212, 526], "safe": [212, 230, 243, 277, 331, 332, 388, 447, 448, 449, 452, 453, 454, 456, 461, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 550, 947, 949], "peak_idx": 212, "ro": 212, "n_dip": 212, "bo": 212, "caught": [212, 232], "onset_idx": 212, "rx": 212, "n_rep": 212, "group_delta": 212, "1029": 212, "544": 212, "hleft": 212, "088": 212, "pitch": 212, "rot": [212, 434, 824, 826], "yaw": 212, "deg2rad": 212, "18522": 212, "18521": 212, "998477": 212, "050618": 212, "021924": 212, "052328": 212, "994909": 212, "086126": 212, "017452": 212, "087142": 212, "996043": 212, "2096": 212, "95_phantom_kit": [212, 214, 955], "537": [214, 223, 955], "2095": [214, 955], "527": [214, 223, 955], "maxshield": [215, 283, 286, 323, 333, 336, 550, 572, 670, 700], "allow_maxshield": [215, 236, 237, 333, 550, 572, 700], "ucl": [215, 239, 277, 307, 423], "mandatori": [215, 320, 364, 365, 388, 550, 635], "rfdc": [215, 323], "realiz": [215, 229], "carefulli": [215, 227, 229, 317], "technic": [215, 268, 277, 310, 316, 320, 331, 332, 333, 334, 550, 551, 602, 785, 788, 797, 803], "disturb": [215, 316, 320], "mainli": [215, 270, 309, 320], "nicknam": 215, "n_1": 215, "n_2": 215, "n_3": 215, "x_1": [215, 320], "x_2": [215, 320], "x_3": 215, "denot": [215, 223, 245, 319, 320, 339, 345, 347, 668, 740, 743, 745, 764, 766, 784], "x_": [215, 223, 320], "m_": 215, "bmatrix": [215, 320], "c_": [215, 255, 320], "standardize_nam": [215, 292, 576, 696], "nx3": [215, 538], "mrk": [215, 289, 323, 554, 576, 696], "elp": [215, 283, 291, 320, 323, 398, 405, 576, 696, 698], "onward": [215, 733], "miscellan": [215, 243, 320, 331, 332, 333, 334, 550, 551, 632, 783, 785, 786, 787, 788, 789], "eight": [215, 305, 320], "endian": [215, 293], "big": [215, 232, 273, 280, 282, 293, 295, 318, 492, 772], "stimthresh": [215, 323, 576], "sum_": [215, 229, 320, 743], "t_p": 215, "d_p": 215, "bigg": 215, "leq": [215, 255], "intent": [215, 318], "original_data": 215, "read_raw_fiff": 215, "original_info": 215, "data_from_ft": 215, "evoked_data": [215, 257], "untest": 215, "cnt": [215, 282, 288, 289, 307, 320, 512, 563, 688], "egi": [215, 240, 284, 285, 286, 287, 288, 289, 292, 293, 301, 302, 304, 317, 320, 398, 401, 568], "eximia": [215, 286, 320, 569], "3rd": [215, 226, 338, 339, 342, 345, 346, 347, 769], "parti": 215, "librari": [215, 289, 298, 309, 318, 836, 935, 940, 947, 948, 951], "abund": 215, "electrophysiolog": [215, 229, 277, 319], "10_reading_meg_data": [215, 221, 955], "meta": [216, 312, 331, 332, 333, 334, 336, 550, 551, 552], "ini": 216, "host": [216, 285, 310], "pybv": [216, 516, 550, 551], "mnelab": [216, 948], "pyedflib": 216, "amplifi": [216, 231, 235, 304, 580, 951], "byte": [216, 292, 308, 323, 331, 332, 550, 551, 584, 842], "overcom": 216, "gender": [216, 277, 475], "danger": [216, 336], "x_coord": 216, "y_coord": 216, "electloc": 216, "encourag": [216, 252, 306, 310, 950], "netstat": [216, 301, 568], "nexstim": 216, "nk": 216, "11d": 216, "cmt": 216, "cn2": 216, "histori": [216, 302, 319, 336, 515], "successfulli": [216, 244, 309], "neither": [216, 450, 540, 550, 551, 949], "nor": [216, 235, 310, 540, 550, 551, 949], "20_reading_eeg_data": [216, 221, 955], "emitt": 217, "transmitt": 217, "oxyhaemoglobin": [217, 238], "modif": [217, 219, 265, 301, 398, 443, 948], "Near": 217, "effort": [217, 309, 312, 559, 936], "sfnir": 217, "gowerlab": [217, 304], "cortivis": 217, "provis": 217, "haemoglobin": [217, 291, 303, 672], "optode_fram": [217, 583], "vendor": [217, 320], "icbm": 217, "2009b": 217, "nirstar": [217, 580], "aurora": [217, 295, 304, 580], "nirscout": [217, 580], "nirsport": [217, 295, 580], "iss": [217, 293, 560], "paren": 217, "unmodul": 217, "unpars": 217, "organis": 217, "digaux": 217, "port": [217, 947, 951], "discourag": [217, 305, 331, 332, 333, 334, 550, 551, 785, 786, 788, 789, 867, 935], "standardis": [217, 305], "to_csv": [217, 243], "_d": 217, "wavelength": [217, 226], "s1_d1": [217, 238], "s2_d1": 217, "s3_d1": 217, "s4_d1": 217, "s5_d2": 217, "s6_d2": 217, "s7_d2": 217, "s8_d2": 217, "ficidu": 217, "30_reading_fnirs_data": [217, 221, 955], "site": [218, 231, 232, 237, 277, 309, 336, 388, 550, 646, 659, 670], "beep": 218, "deviant": [218, 229], "finger": [218, 317], "bug": [218, 290, 309, 310, 311, 324, 524, 542, 782, 833, 936], "consumpt": [218, 286, 294, 303, 333, 334, 500, 869], "use_precomput": 218, "erm_fnam": 218, "s01_noise_20131218_01": 218, "demand": [218, 243, 280, 320, 500, 504, 549, 693], "n_times_run1": 218, "4800": 218, "unus": [218, 278, 286, 291, 303, 309, 344, 659], "heog": [218, 563], "veog": [218, 305, 563], "favorit": [218, 309], "annotations_df": 218, "csv_fname": 218, "events_bad_0": 218, "concat": [218, 483], "saccades_ev": 218, "7625": 218, "2776": 218, "142459": 218, "892": 218, "216954": 218, "345135": 218, "5816": 218, "357687": 218, "1053": 218, "409101": 218, "3736": 218, "461110": 218, "479866": 218, "764914": 218, "11500": [218, 307], "798174": 218, "6589": 218, "846880": 218, "5383": 218, "858863": 218, "5136": 218, "5583": 218, "9256": 218, "3114": 218, "14287": 218, "3456": 218, "116432": 218, "134489": 218, "1329": 218, "464527": 218, "4727": 218, "494136": 218, "4519": 218, "749288": 218, "788623": 218, "7937": 218, "21179": 218, "72993": 218, "134527": 218, "196555": 218, "249894": 218, "343357": 218, "400771": 218, "450256": 218, "593101": 218, "733942": 218, "765939": 218, "789476": 218, "792852": 218, "833208": 218, "859869": 218, "862888": 218, "saccade_epoch": 218, "reject_by_annot": [218, 238, 245, 284, 285, 286, 288, 292, 331, 428, 550, 551, 594, 635, 652, 653, 660, 661, 788, 880, 889], "projs_saccad": 218, "n_mag": [218, 234, 278, 323, 424, 425, 426, 647, 648], "n_eeg": [218, 234, 278, 323, 424, 425, 426, 647, 648, 833, 851], "desc_prefix": [218, 424, 425], "projs_eog": 218, "1201": [218, 277, 367], "spectra": [218, 250, 268, 277, 278, 319, 328, 331, 332, 333, 334, 488, 550, 551, 608, 609, 770, 785, 786, 788, 789, 792, 795, 803, 804, 860, 867, 889], "doubl": [218, 229, 232, 270, 281, 283, 299, 309, 320, 331, 332, 333, 334, 485, 494, 516, 518, 519, 521, 522, 549, 550, 551, 573, 670, 947], "filter_length": [218, 229, 230, 234, 283, 292, 323, 331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551, 647, 648, 660, 661], "sound": [218, 222, 223, 232, 277, 490, 814, 817], "uadc001": 218, "sound_data": 218, "min_diff": 218, "\u03bc": [218, 237, 492], "\u03c3": [218, 237, 492, 598], "mlo52": 218, "mrt51": 218, "mlo42": 218, "mlo43": 218, "epochs_standard": 218, "epochs_devi": 218, "mlp52": 218, "evoked_std": 218, "evoked_dev": 218, "p50": 218, "paint": [218, 331, 332, 333, 334, 550, 551, 869, 889], "mmn": 218, "emphasis": 218, "evoked_differ": 218, "ico4": [218, 316, 722], "8033": 218, "015871": 218, "10585e": 218, "09843": 218, "11765e": 218, "stc_standard": 218, "80289065": 218, "69025561": 218, "89954825": 218, "stc_deviant": 218, "12814543": 218, "29154718": 218, "6203076": 218, "stc_differ": 218, "96162575": 218, "78319301": 218, "94351171": 218, "906": [218, 221, 260, 955], "60_ctf_bst_auditori": [218, 221, 955], "radian": [219, 240, 434], "glossari": [219, 309, 321], "ascii": [219, 278, 284, 292, 295, 304, 317, 320, 323, 567, 570, 688, 694, 716], "edf2asc": 219, "european": [219, 320, 322], "ocular": [219, 231, 232, 234, 277, 308, 634, 685], "binocular": [219, 240], "ypos_right": [219, 240], "fpath": 219, "px_textpage_w": 219, "create_annot": [219, 240, 570], "custom_sc": 219, "trackabl": 219, "href_textpage_w": 219, "diamet": [219, 320], "ellips": 219, "delimint": 219, "2000hz": 219, "timestamp": [219, 245, 289, 325, 338, 339, 342, 345, 346, 347, 550, 551, 568, 688], "414": [219, 221, 223, 236, 255, 955], "70_reading_eyetracking_data": [219, 221, 955], "multivariate_norm": 222, "1337": 222, "path_audio": 222, "spectrogram": [222, 260, 270, 300, 312, 319], "n_decim": 222, "explicit": [222, 283, 292, 294, 295, 309, 330, 427, 439, 440], "delays_samp": 222, "delays_sec": 222, "5000": [222, 257], "meshgrid": [222, 233, 260], "swap": [222, 259, 265, 294, 320, 716], "swapax": [222, 259, 265], "gabor": 222, "means_high": 222, "means_low": 222, "2500": [222, 282], "gauss_high": 222, "gauss_low": 222, "artifici": [222, 277, 317, 568, 635], "convolut": [222, 229, 270, 295, 496, 618, 619, 791, 794, 801, 810, 811, 812, 813, 815, 816, 948], "n_second": 222, "x_del": 222, "ix_delai": 222, "ndim": [222, 270], "elif": 222, "rollaxi": 222, "weights_sim": 222, "iep": 222, "noise_amp": 222, "x_plt": 222, "hstack": [222, 233], "y_plt": 222, "autocorrel": [222, 489, 495], "ix_best_alpha": 222, "best_mod": 222, "best_pr": 222, "iax": 222, "time_pr": 222, "3450": 222, "747": 222, "1138": [222, 223], "1494": 222, "1877": [222, 277, 635], "2234": 222, "2997": 222, "3371": 222, "555": [222, 223, 236, 260], "19523": 222, "21588": 222, "1075": [222, 277], "22429": 222, "1460": 222, "22860": 222, "1846": 222, "23137": 222, "23317": 222, "2619": 222, "23459": 222, "2936": 222, "22915": 222, "3251": 222, "22475": 222, "22320": 222, "18395": 222, "573": [222, 223, 236], "17863": 222, "19505": 222, "1227": 222, "19174": 222, "18825": 222, "1774": 222, "18398": 222, "2054": 222, "18247": 222, "2319": 222, "17993": 222, "2579": 222, "17747": 222, "2864": 222, "17751": 222, "18494": 222, "18688": 222, "21478": 222, "20983": 222, "21923": 222, "1434": 222, "22441": 222, "1824": 222, "22864": 222, "2208": 222, "23072": 222, "22578": 222, "2901": 222, "22656": 222, "3282": 222, "22811": 222, "22669": 222, "12363": 222, "12321": 222, "593": [222, 223, 236, 260], "12327": 222, "12343": 222, "12487": 222, "1389": 222, "14710": 222, "1763": 222, "16141": 222, "2134": 222, "17182": 222, "2527": 222, "18178": 222, "2912": 222, "18910": 222, "19535": 222, "18805": 222, "16770": 222, "20704": 222, "1027": 222, "21449": 222, "1404": 222, "22005": 222, "1759": [222, 237, 277, 670], "22043": 222, "2148": 222, "22469": 222, "2538": 222, "22776": 222, "2916": 222, "22901": 222, "23057": 222, "22663": 222, "24305": 222, "754": [222, 277, 316], "23529": 222, "1146": 222, "23857": 222, "1524": 222, "23794": 222, "23769": 222, "2292": [222, 277], "23869": 222, "2676": 222, "23885": 222, "2972": 222, "22245": 222, "22201": 222, "subplot2grid": [222, 273], "i_alpha": 222, "ddot": 222, "tikhonov": 222, "trf": [222, 259], "insensit": [222, 284, 331, 332, 512, 559, 566, 574, 581, 638, 787], "whilst": [222, 239], "mse": 222, "scores_lap": 222, "models_lap": 222, "reg_typ": [222, 495], "ix_best_alpha_lap": 222, "21339": 222, "708": 222, "22122": 222, "1058": [222, 277, 367, 772], "22017": 222, "22381": 222, "1777": 222, "22190": 222, "2139": 222, "22264": 222, "2505": 222, "22361": 222, "2868": 222, "22403": 222, "3215": 222, "22304": 222, "22335": 222, "20163": 222, "20907": 222, "21077": 222, "1401": 222, "21942": 222, "1782": [222, 265], "22347": 222, "22273": 222, "2489": 222, "22253": 222, "2861": 222, "22398": 222, "3225": 222, "22443": 222, "22426": 222, "22081": 222, "21956": 222, "1089": 222, "22683": 222, "1466": 222, "22911": 222, "1799": 222, "22436": 222, "2179": 222, "22676": 222, "2554": 222, "22795": 222, "2917": 222, "22775": 222, "3271": 222, "22684": 222, "22635": 222, "20980": 222, "22022": 222, "1069": [222, 236, 277, 617, 743], "22252": 222, "1425": 222, "22231": 222, "1815": 222, "22696": 222, "22281": 222, "2534": 222, "22630": 222, "2865": 222, "22334": 222, "3239": 222, "22467": 222, "22506": 222, "23795": 222, "771": [222, 236], "24072": 222, "1166": 222, "24274": 222, "1560": 222, "24355": 222, "1953": 222, "24399": 222, "2346": 222, "24418": 222, "2709": 222, "24128": 222, "3098": 222, "24151": 222, "24240": 222, "12805": 222, "18266": 222, "20153": 222, "21366": 222, "1749": 222, "22078": 222, "2140": 222, "22522": 222, "22837": 222, "2923": 222, "23076": 222, "3315": [222, 277], "23267": 222, "23033": 222, "23615": 222, "23992": 222, "1152": [222, 223, 277], "23947": 222, "1455": 222, "22586": 222, "22946": 222, "2235": 222, "23236": 222, "2627": 222, "23441": 222, "3022": [222, 320, 388, 550], "23624": 222, "3417": 222, "23766": 222, "23667": 222, "rf_lap": 222, "fr\u00e9d\u00e9ric": [222, 277, 489], "theunissen": [222, 277, 489], "nandini": [222, 277, 489], "singh": [222, 277, 282, 489], "ann": [222, 245, 277, 286, 489], "hsu": [222, 277, 489], "vinj": [222, 277, 489], "jack": [222, 277, 278, 294, 305, 489], "gallant": [222, 277, 489], "ben": [222, 277, 304, 489], "willmor": [222, 277, 489], "darragh": [222, 277, 489], "smyth": [222, 277, 489], "cell": [222, 226, 277, 291, 489], "553": [222, 223, 277, 489], "577": [222, 236, 260, 277, 489], "0954": [222, 277, 489], "898x_14_3_309": [222, 277, 489], "heer": [222, 277, 489], "paslei": [222, 277, 489], "jochem": [222, 277, 489], "rieger": [222, 277, 489], "nathan": [222, 277, 489], "crone": [222, 277, 489], "knight": [222, 277, 489], "tune": [222, 234, 277, 489], "ncomms13654": [222, 277, 489], "30_strf": [222, 225, 955], "visit": [223, 277, 309, 951], "insight": [223, 320], "eas": 223, "camel": 223, "n_meg_channel": 223, "standand": 223, "interquartil": 223, "robustscal": [223, 492], "n_frequenc": [223, 364, 618, 619, 784], "popular": [223, 319, 945], "win": [223, 270], "grasp": 223, "competit": 223, "kaggl": 223, "week": [223, 310], "clf_csp": 223, "ssnr": [223, 636], "rewrit": [223, 280], "boil": [223, 940], "evoked_time_gen": 223, "joint_kwarg": 223, "diag": [223, 763], "1296": [223, 236, 277], "616": [223, 260], "618": [223, 260, 277, 765], "624": [223, 254, 955], "626": [223, 277, 635], "617": 223, "594": 223, "612": [223, 236, 260], "599": 223, "597": [223, 260, 277, 491], "596": [223, 236, 260], "591": [223, 260, 264, 267, 955], "765": 223, "589": 223, "583": [223, 260, 277, 491], "862": 223, "587": [223, 236, 260], "883": [223, 260], "905": [223, 260], "926": [223, 236], "948": [223, 236], "992": [223, 238, 242, 955], "1064": 223, "1078": 223, "568": [223, 236], "1172": 223, "1190": 223, "1228": 223, "1249": 223, "1270": 223, "571": [223, 260], "1292": 223, "572": [223, 260], "558": 223, "586": 223, "485": [223, 344], "559": [223, 236, 260], "511": 223, "679": 223, "737": 223, "757": 223, "777": [223, 260], "827": [223, 236, 260], "865": [223, 260], "539": [223, 260], "884": [223, 260, 277], "931": [223, 260], "941": 223, "514": [223, 260], "977": [223, 236], "489": [223, 260, 270], "1004": [223, 236], "483": [223, 246, 248, 260, 955], "1060": [223, 277], "1079": 223, "1099": 223, "1119": 223, "504": [223, 255], "1159": [223, 277, 635, 668], "509": [223, 256, 260], "1179": 223, "518": [223, 260], "522": 223, "1262": 223, "1283": 223, "493": [223, 236, 260], "554": [223, 260], "576": [223, 260], "632": [223, 260], "643": [223, 260], "655": [223, 235], "667": [223, 260], "681": [223, 260], "721": [223, 260], "476": [223, 236, 255, 260, 277, 483], "741": [223, 260], "782": 223, "803": [223, 260], "824": [223, 260], "866": 223, "885": [223, 260], "521": [223, 260, 277, 423], "981": 223, "1063": [223, 237, 277, 646, 670], "1083": 223, "1147": 223, "1168": 223, "1210": [223, 236], "1244": 223, "1260": 223, "1280": [223, 323, 482, 591], "lanczo": 223, "1353": 223, "91709": 223, "26373e": 223, "98776221": 223, "41838256": 223, "06628583": 223, "methodolog": [223, 277], "uncov": [223, 277], "hal": [223, 277], "01848442": [223, 277], "archiv": [223, 277, 309, 313, 456, 935, 947], "ouvert": [223, 277], "lionel": [223, 277], "naccach": [223, 277], "subtend": [223, 277, 320], "e85791": [223, 277], "0085791": [223, 277], "50_decod": [223, 225, 955], "vibrat": 226, "door": [226, 228], "slam": [226, 228], "phone": 226, "geomagnet": 226, "unshield": 226, "headphon": 226, "malfunct": [226, 227, 316], "qr": [226, 298, 300, 323, 647, 660, 663], "sensori": 226, "plan": [226, 227, 230, 235, 310, 507, 940, 945], "genesi": 226, "intact": [226, 243, 273], "ssp_projector": 226, "readili": [226, 230, 312, 507], "mag_channel": 226, "remove_dc": [226, 230, 278, 289, 303, 331, 332, 333, 334, 550, 551, 785, 788, 803, 804, 888], "get_xdata": [226, 230], "get_ydata": [226, 230], "searchsort": [226, 230], "dx": [226, 230], "dy": [226, 230], "head_width": [226, 230], "length_includes_head": [226, 230], "ecg_epoch": [226, 232, 652], "6007": [226, 231], "streak": 226, "avg_ecg_epoch": 226, "blocki": 226, "efficaci": 226, "pro": [226, 229, 309], "10_preprocessing_overview": [226, 242, 955], "deepcopi": 227, "usabl": [227, 282, 293, 294, 498, 645, 678], "wildcard": 227, "original_bad": 227, "bad_chan": 227, "paus": [227, 295, 333, 334, 833], "codebas": [227, 309, 312, 314, 321], "good_eeg": 227, "all_eeg": 227, "setdiff1d": 227, "excess": [227, 229, 305, 307, 550, 551, 888], "protocol": [227, 316], "sheet": [227, 316], "offlin": 227, "raw2": [227, 245], "invest": [227, 310], "unrealist": [227, 316], "shrink": [227, 255, 256, 273, 666, 935], "dramat": 227, "robust": [227, 231, 232, 269, 277, 282, 287, 296, 331, 332, 483, 635, 740, 745], "uninform": 227, "deweight": 227, "fair": [227, 235], "eeg_data": [227, 243], "eeg_data_interp": 227, "interp": [227, 284, 734, 735, 736, 748], "00000022": 227, "bad_color": [227, 550, 551, 888], "grad_data": 227, "grad_data_interp": 227, "00000009": 227, "propag": [227, 230, 325, 942], "15_handling_bad_channel": [227, 242, 955], "fake_keypress": [228, 245], "keyboard": [228, 246, 288, 291, 304, 317, 833], "push": [228, 229, 303, 309], "enter": [228, 234, 245, 246, 309, 941, 944], "bad_cough": 228, "wrapper": [228, 282, 297, 299, 335, 514, 518, 557, 773, 774], "blink_annot": 228, "eeg_pick": 228, "albeit": 228, "first_tim": [228, 291, 292, 549, 550, 551, 572, 671, 684], "block_1": 228, "block_2": 228, "block_annot": 228, "break_annot": [228, 638], "min_break_dur": [228, 638], "t_start_after_previ": [228, 638], "t_stop_before_next": [228, 638], "bad_break": [228, 638], "events_subset": 228, "flat_criteria": 228, "stringent": 228, "reject_tmin": [228, 292, 294, 326, 331, 332, 652], "reject_tmax": [228, 292, 294, 326, 331, 332, 652], "disappear": [228, 270, 307], "subsum": 228, "stronger_reject_criteria": 228, "2000e": 228, "20_rejecting_bad_data": [228, 242, 955], "park": [229, 277], "burru": [229, 277], "ifeachor": [229, 277], "jervi": [229, 277], "widmann": [229, 277], "somedai": 229, "conclud": [229, 259], "lightli": [229, 309], "cautious": 229, "hope": [229, 230, 232, 270], "math": [229, 935], "b_0": 229, "b_1": [229, 320], "b_2": 229, "ldot": 229, "b_m": [229, 320], "a_1": 229, "a_2": 229, "a_n": 229, "mb_kz": 229, "na_kz": 229, "b_k": [229, 320, 342], "denomin": [229, 260, 291, 364, 365, 737, 747, 771, 774, 798], "a_k": 229, "autoregress": 229, "broken": [229, 304, 309, 336, 523], "finit": [229, 251, 260, 277, 295, 316, 320, 527], "impuls": [229, 935], "infinit": [229, 289, 295, 320], "qquad": 229, "foral": [229, 320], "steeper": [229, 230], "accumul": [229, 331, 332], "despit": [229, 259], "throughput": 229, "sharp": [229, 255, 294], "steep": 229, "broader": [229, 330, 331, 332, 333, 334, 783, 787], "fundament": 229, "fftfreq": 229, "f_p": [229, 320], "flim": [229, 230, 876, 883], "dlim": [229, 876], "f_": 229, "nyq": [229, 519, 522], "third_height": 229, "hypothet": [229, 635], "na\u00efv": 229, "brick": [229, 230], "wall": [229, 230, 277, 770, 771], "correspondingli": [229, 320, 331, 332], "tighter": [229, 286], "fortun": [229, 233, 320], "remez": 229, "firl": 229, "ifft": 229, "relax": [229, 265, 285], "shallow": 229, "gradual": 229, "shorten": [229, 246, 270, 292, 320, 859, 945], "benefici": [229, 343], "wherebi": 229, "came": [229, 947], "minimum_phas": 229, "falloff": 229, "h_min": 229, "uncompens": 229, "imaginari": [229, 277, 291, 812, 813], "dur": 229, "morlet_freq": 229, "tlim": 229, "ttick": 229, "blip": 229, "n_onset": 229, "x_orig": 229, "transition_band": 229, "x_v16": 229, "twice": [229, 331, 332, 333, 334, 518, 519, 521, 522, 550, 551, 888], "filter_dur": 229, "x_v14": 229, "x_v13": 229, "h_eff": 229, "design_mne_c_filt": 229, "x_mne_c": 229, "hpw": 229, "lpw": 229, "x_min": [229, 381], "cost": [229, 312, 320, 338, 339, 342, 345, 346, 347, 489, 495, 635, 770, 771, 773, 774, 833, 893, 898], "plot_sign": 229, "yscale": [229, 284, 783], "yticklabel": 229, "get_yticklabel": 229, "iirfilt": [229, 518], "iirdesign": [229, 518], "butterworth": [229, 298, 331, 332, 333, 334, 485, 494, 518, 519, 521, 522, 550, 551, 647, 648], "worsen": 229, "filtfilt": [229, 331, 332, 333, 334, 494, 518, 519, 521, 522, 550, 551, 888], "btype": [229, 518], "ftype": [229, 338, 339, 342, 345, 346, 347, 518], "butter": [229, 518], "x_shallow": 229, "sosfiltfilt": 229, "sosfilt": 229, "zpk2so": 229, "polynomi": [229, 295, 320, 331, 332, 333, 334, 550, 551, 593], "iir_param": [229, 234, 288, 331, 332, 333, 334, 485, 494, 518, 519, 521, 522, 550, 551, 647, 648], "filt": [229, 519], "x_steep": 229, "chebychev": [229, 518], "cheby1": [229, 518], "rp": [229, 518], "chebyshev": [229, 298, 518], "substanti": [229, 237, 310, 312, 320, 331, 332, 337, 443, 539], "adjust_ax": 229, "errant": [229, 278], "misappl": 229, "deleteri": 229, "schr\u00f6ger": [229, 277], "uncontrol": 229, "acunzo": [229, 277], "misinterpret": 229, "tanner": [229, 277], "semant": 229, "syntact": 229, "n400": 229, "p600": 229, "5\u00b5v": 229, "sic": 229, "poststimulu": 229, "octav": 229, "energi": [229, 302, 322, 935], "understood": [229, 833], "cos_t": 229, "sig": [229, 259, 264, 265], "iir_lp_30": 229, "iir_hp_p1": 229, "iir_lp_2": 229, "iir_hp_2": 229, "x_lp_30": 229, "padlen": [229, 518], "x_hp_p1": 229, "x_lp_2": 229, "x_hp_2": 229, "x_f": 229, "lp": 229, "_2": [229, 320], "hp": [229, 237, 323], "evolv": 229, "maess": [229, 277, 284], "rebut": 229, "old": [229, 243, 245, 268, 277, 285, 287, 289, 291, 292, 294, 297, 301, 309, 313, 325, 328, 331, 332, 333, 334, 336, 342, 345, 380, 388, 408, 475, 550, 551, 563, 576, 600, 674, 696, 717, 718, 729, 833, 900, 904, 949], "baseline_plot": 229, "all_ax": 229, "ri": [229, 255, 277, 814, 817], "iir_hp": 229, "x_hp": 229, "leak": [229, 251, 310, 320], "n_pre": 229, "sig_pr": 229, "adopt": [229, 309], "reciproc": [229, 331, 332, 333, 334, 410, 485, 494, 504, 519, 521, 522, 550, 551, 646, 659, 670], "decent": 229, "blackman": [229, 331, 332, 333, 334, 494, 519, 521, 522, 550, 551], "fir_window": [229, 331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551], "fir_desgin": 229, "meet": [229, 310], "8197": 229, "outdat": 229, "transition_bandwidth": 229, "fir_coef": 229, "0545": 229, "0017": 229, "wider": [229, 230], "thoma": [229, 255, 256, 277, 287, 289, 291, 292, 293, 303, 307, 308, 613, 740, 745, 767, 770, 771, 772, 773, 774], "sidnei": [229, 277], "wilei": [229, 277], "82896": [229, 277], "andrea": [229, 277, 283, 284, 364], "erich": [229, 277], "burkhard": [229, 277, 284], "00233": [229, 277], "graham": [229, 277], "mackenzi": [229, 277], "rossum": [229, 277], "darren": [229, 277], "kara": [229, 277], "morgan": [229, 277], "inappropri": [229, 277, 338, 339, 342, 345, 346, 347], "conclus": [229, 257, 277], "1009": [229, 277], "12437": [229, 277], "1469": [229, 277], "8986": [229, 277], "01009": [229, 277], "commentari": [229, 277], "artefact": [229, 239, 277], "norton": [229, 277], "ermf": [229, 277], "25_background_filt": [229, 242, 955], "mathrm": [230, 237, 255, 801, 811, 813, 816], "raw_highpass": 230, "19821": 230, "9911": [230, 295], "filter_param": 230, "add_arrow": 230, "ymax": [230, 260, 265, 273], "shield": [230, 239, 277, 320, 331, 332, 333, 334, 336, 550, 551, 632, 670, 783, 785, 786, 787, 788, 789], "meg_pick": 230, "raw_notch": 230, "3965": 230, "raw_notch_fit": 230, "spectrum_fit": [230, 292, 522, 550, 551], "notabl": [230, 269, 304], "consum": [230, 295, 341, 645, 776], "raw_downsampl": 230, "pitfal": 230, "614990234375": [230, 243], "current_sfreq": 230, "desired_sfreq": 230, "obtained_sfreq": 230, "lowpass_freq": 230, "19813025304873463": 230, "80214146205357": 230, "synch": 230, "30_filtering_resampl": [230, 242, 955], "gratton": [231, 277, 634, 685], "croft": [231, 277, 634], "articl": [231, 314], "6607": 231, "bleed": [231, 349, 665], "250m": 231, "model_plain": 231, "picks_artifact": [231, 239, 634, 685], "epochs_clean_plain": 231, "redo": 231, "partli": 231, "variat": [231, 252, 303, 316, 483], "prone": 231, "allevi": [231, 320], "epochs_sub": 231, "model_sub": 231, "epochs_clean_sub": 231, "piec": [231, 245, 320, 331, 332, 550, 551], "ongo": [231, 312, 316, 638], "alik": 231, "model_evok": 231, "epochs_clean_evok": 231, "eog_evoked_clean": 231, "raw_kwarg": 231, "cole": [231, 277, 634, 685], "emanuel": [231, 277, 300, 634, 685, 736], "donchin": [231, 277, 634, 685], "90135": [231, 277, 634, 685], "s0987": [231, 277, 634], "7053": [231, 277, 634], "00055": [231, 277, 634], "35_artifact_correction_regress": [231, 242, 955], "guidanc": [232, 234, 310], "blind": [232, 277, 635, 668], "microphon": 232, "unmix": [232, 293, 301, 635, 636, 668, 879, 882], "analogi": 232, "unwant": [232, 234, 238, 303, 386], "ic": [232, 280, 283, 341, 635, 650, 878, 880, 882], "n_pca_compon": [232, 293, 635, 879], "pc": 232, "smallest": [232, 260, 320, 410, 483, 635, 935], "runica": [232, 635], "mixing_matrix_": [232, 635], "unmixing_matrix_": [232, 635], "tesla": [232, 234, 250, 320], "artifact_pick": [232, 234], "harder": [232, 309], "filt_raw": 232, "huge": [232, 769], "parallelfun": 232, "logcoshfun_arg": 232, "nonemax_it": 232, "9010": 232, "get_explained_variance_ratio": [232, 305, 635], "explained_var_ratio": 232, "9358001342790973": 232, "7798689203334388": 232, "ratio_perc": 232, "trackpad": [232, 333, 334, 542, 835, 851, 870], "15459": 232, "954": [232, 236, 260], "ica000": [232, 285], "ica001": [232, 341, 635, 878, 880, 882], "anywai": [232, 244, 303, 309, 947], "reconst_raw": 232, "tediou": 232, "reset": [232, 291, 302, 328, 331, 332, 333, 334, 340, 434, 483, 490, 550, 551, 634, 635, 783, 785, 786, 787, 788, 789, 833, 866, 867, 871, 874, 878, 887, 890, 895, 897, 954], "eog_indic": 232, "prefront": 232, "ctp": [232, 292, 635], "ecg_indic": 232, "ica014": 232, "refit": [232, 291], "new_ica": 232, "neck": [232, 376], "trail": [232, 308, 635, 670, 829], "s001r03": 232, "s002r03": 232, "19679": 232, "s003": 232, "s003r03": 232, "lib": [232, 940, 947], "python3": [232, 301], "_fastica": 232, "convergencewarn": 232, "s004": 232, "s004r03": 232, "6250": 232, "6249": 232, "6150": 232, "6149": 232, "ica002": 232, "labels_": [232, 635, 650, 881], "get_compon": [232, 284, 635], "subject_index": 232, "component_index": 232, "template_eog_compon": 232, "33638605": 232, "32708878": 232, "32846765": 232, "32807248": 232, "35916344": 232, "37615216": 232, "42464993": 232, "21789139": 232, "22387812": 232, "22237922": 232, "21342143": 232, "2425263": 232, "26757238": 232, "27806995": 232, "15470616": 232, "1693302": 232, "17711037": 232, "17373137": 232, "19651749": 232, "21091786": 232, "22459439": 232, "68783519": 232, "46717407": 232, "64182737": 232, "34165002": 232, "28991817": 232, "76938995": 232, "0057612": 232, "54311043": 232, "54567127": 232, "63806031": 232, "57058636": 232, "52637437": 232, "51788659": 232, "55774431": 232, "56188149": 232, "69340923": 232, "73333856": 232, "2829121": 232, "39253171": 232, "16120286": 232, "25431324": 232, "06352167": 232, "1647002": 232, "11930156": 232, "1811579": 232, "10112171": 232, "12638332": 232, "13623739": 232, "1301851": 232, "14380943": 232, "15329772": 232, "1715539": 232, "16560352": 232, "13293812": 232, "08175318": 232, "10173655": 232, "10764581": 232, "12707317": 232, "09785876": 232, "07433338": 232, "08470678": 232, "07373196": 232, "03379354": 232, "recomput": [232, 235, 260, 301, 302, 524, 635, 668, 722], "ecg_ind": 232, "francoi": [232, 277, 635], "cardoso": [232, 277, 635], "precondit": [232, 237, 277, 304, 635, 671], "hessian": [232, 277, 635], "4040": [232, 277, 635], "4049": [232, 277, 635], "2844203": [232, 277, 635], "iren": [232, 277], "winkler": [232, 277], "deben": [232, 277, 650], "4101": [232, 277], "4105": [232, 277], "milan": [232, 277, 289], "7319296": [232, 277], "dammer": [232, 277, 286, 301, 635], "schiek": [232, 277, 635], "boer": [232, 277, 635], "carmen": [232, 277, 459, 635], "silex": [232, 277, 635], "mikhail": [232, 277, 635], "zvyagintsev": [232, 277, 635], "uw": [232, 240, 277, 635], "pietrzyk": [232, 277, 635], "mathiak": [232, 277, 635], "2353": [232, 277, 635], "926677": [232, 277, 635], "filipa": [232, 277, 650], "campo": [232, 277, 650], "viola": [232, 277, 280, 650], "jeremi": [232, 277, 650], "thorn": [232, 277, 650], "edmond": [232, 277, 650], "till": [232, 277, 650], "schneider": [232, 277, 650], "tom": [232, 277, 282, 287, 306, 307, 650], "eichel": [232, 277, 650], "semi": [232, 277, 280, 650], "868": [232, 260, 277, 650], "877": [232, 260, 277, 650], "clinph": [232, 277, 635, 643, 650, 814, 817], "40_artifact_correction_ica": [232, 242, 955], "mpl_toolkit": [233, 255, 260, 273, 859], "mplot3d": [233, 255], "axes3d": [233, 255, 294, 329, 331, 332, 333, 334, 336, 380, 550, 551, 863, 885, 891], "setup_3d_ax": 233, "set_zlabel": 233, "set_ylim": [233, 270], "set_zlim": 233, "geometr": [233, 316, 320, 338, 339, 342, 345, 346, 347, 517, 900], "shadow": [233, 723], "cast": [233, 292, 324, 524, 838], "sun": 233, "xy_projection_matrix": 233, "projected_point": 233, "projected_vector": 233, "arrow_coord": 233, "arrow_length_ratio": 233, "symbol": [233, 304, 320, 323, 782, 936], "expans": [233, 237, 320, 331, 332, 333, 334, 504, 550, 551, 593, 645, 646, 659, 670], "unpack": [233, 260, 848, 947], "lucki": 233, "bother": [233, 243], "trigger_effect": 233, "internet": [233, 310], "algebra": [233, 290, 291, 935], "full_matric": 233, "trigger_projection_matrix": 233, "plot_trisurf": 233, "interchang": [233, 319, 364], "ten": [233, 270, 317, 541, 945], "hyperplan": [233, 486, 493], "synonym": 233, "incident": [233, 333, 334, 542, 835, 851, 870], "phrase": 233, "publish": [233, 274, 277, 318, 333, 334, 635, 833, 835, 874, 906, 907, 908, 909, 910, 911, 912, 914, 916], "first_projector": 233, "explained_var": [233, 281, 340], "inact": [233, 237, 310, 331, 332, 333, 334, 550, 551], "ortho": [233, 635], "forgo": 233, "offecg": 233, "remove_exist": [233, 234, 331, 332, 333, 334, 550, 551, 833], "perman": [233, 303, 316, 940, 945], "mags_ecg": 233, "_projector": 233, "cheaper": 233, "consequenti": 233, "mikko": [233, 234, 277, 320], "uusitalo": [233, 234, 277, 320], "bf02534144": [233, 234, 277, 320], "45_projectors_background": [233, 242, 955], "equip": [234, 320], "system_proj": 234, "empty_room_fil": 234, "empty_room_raw": 234, "_ex": 234, "xscale": [234, 291, 331, 332, 333, 334, 550, 551, 785, 786, 788, 789, 889], "n_grad": [234, 278, 323, 424, 425, 426, 647, 648], "empty_room_proj": 234, "distant": [234, 935], "_proj": [234, 302], "no_proj": [234, 647, 648], "picks_trac": [234, 886], "ecg_l_freq": [234, 323, 647], "ecg_h_freq": [234, 323, 647], "filter_method": [234, 647, 648], "presum": 234, "clutter": 234, "eog_proj": 234, "okai": 234, "eog_projs_bad": 234, "perfectli": [234, 270, 320, 808], "get_titl": [234, 238], "get_ylabel": 234, "yaxi": [234, 273], "set_tick_param": 234, "labelbottom": 234, "557": [234, 242, 252, 254, 260, 277, 475, 955], "50_artifact_correction_ssp": [234, 242, 955], "earlob": 235, "collarbon": 235, "disadvantag": [235, 255], "ref_channel": [235, 331, 332, 333, 334, 348, 550, 551, 727, 783, 785, 786, 787, 788, 789], "raw_new_ref": 235, "raw_avg_ref": 235, "wasn": [235, 305], "infin": [235, 277, 292, 331, 332, 333, 334, 550, 551, 727], "raw_rest": 235, "_raw": [235, 238], "2197": 235, "00413199": 235, "0159844": 235, "05174612": 235, "eeg_bipolar": [235, 724], "transvers": [235, 329], "raw_bip_ref": 235, "36038": [235, 243], "61837": 235, "valueerror": [235, 342, 345, 517, 701, 724, 733, 859], "yao": [235, 277, 331, 332, 333, 334, 550, 551, 727, 743], "693": [235, 236, 242, 277, 331, 332, 333, 334, 550, 551, 727, 955], "711": [235, 263, 267, 277, 331, 332, 333, 334, 550, 551, 727, 955], "0967": [235, 277, 331, 332, 333, 334, 550, 551, 727], "dezhong": [235, 277], "yun": [235, 277], "qin": [235, 277], "shiang": [235, 277], "hu": [235, 277], "dong": [235, 277, 301], "maria": [235, 277], "bringa": [235, 277], "vega": [235, 277], "pedro": [235, 277], "vald": [235, 277], "\u00e9": [235, 277], "sosa": [235, 277], "00707": [235, 277], "55_setting_eeg_refer": [235, 242, 955], "h\u00f6chenberg": [236, 269, 278, 282, 284, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 953], "hoechenberg": [236, 269], "mccloi": [236, 273, 278, 280, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 310, 953], "dan": [236, 273, 280, 298, 301, 302], "test_move_anon_raw": [236, 237], "v6": [236, 237], "v7": [236, 237, 287, 305], "10800": [236, 237, 304], "31199": [236, 237], "20399": 236, "chpi_freq": 236, "chpi_cod": 236, "chpi_amplitud": [236, 410, 411], "1696": 236, "505": [236, 260], "641": [236, 260], "779": 236, "823": [236, 260], "845": [236, 260], "574": [236, 260], "932": 236, "649": 236, "668": [236, 260], "976": 236, "1093": [236, 277, 475], "1116": 236, "812": 236, "1140": 236, "833": [236, 260], "854": 236, "1187": 236, "891": [236, 260], "909": [236, 260], "1256": 236, "1279": 236, "943": 236, "1302": 236, "1325": 236, "1369": 236, "1390": 236, "1030": 236, "1459": 236, "1059": 236, "1482": 236, "1505": [236, 277, 545], "1529": 236, "1102": 236, "1552": 236, "1115": 236, "1575": 236, "1127": 236, "1598": 236, "1150": 236, "1644": 236, "1667": 236, "1690": 236, "1183": 236, "4385": 236, "418": [236, 255, 260, 301], "503": 236, "651": [236, 260], "752": [236, 260], "805": [236, 260], "819": [236, 260], "848": 236, "1040": 236, "1062": 236, "1072": 236, "1134": 236, "1238": 236, "1286": 236, "1301": 236, "1315": 236, "1319": 236, "1393": 236, "1565": [236, 277], "1573": 236, "1580": [236, 331, 332], "1586": 236, "1590": 236, "1594": 236, "1599": 236, "1609": 236, "1652": 236, "snr_dict": [236, 858], "427": [236, 260], "433": [236, 255, 260, 273, 276, 955], "451": [236, 255, 260, 344], "59_head_posit": [236, 242, 955], "obliqu": 237, "crosstalk": 237, "fine_cal_fil": 237, "sss_cal_mgh": 237, "crosstalk_fil": 237, "ct_sparse_mgh": 237, "raw_check": 237, "auto_noisy_ch": 237, "auto_flat_ch": 237, "auto_scor": 237, "cross_talk": [237, 645, 659, 670], "return_scor": [237, 659], "ei": [237, 336], "ch_subset": 237, "scores_noisi": [237, 659], "limits_noisi": [237, 659], "bin_label": 237, "data_to_plot": 237, "cbar_kw": 237, "nanmin": 237, "nanmax": [237, 258], "appar": [237, 316], "fashion": [237, 295, 441], "min_count": [237, 659], "qualifi": 237, "int_ord": [237, 307, 504, 646, 659, 670], "ext_ord": [237, 410, 412, 416, 504, 645, 646, 659, 670], "thick": [237, 320], "mathtt": [237, 801, 811, 812, 813, 815, 816], "st": [237, 323], "_durat": 237, "penultim": 237, "st_correl": [237, 659, 670, 678], "st_onli": [237, 282, 659, 670], "doublecheck": 237, "chpi_fif_fil": 237, "head_pos_fil": 237, "headpo": [237, 323, 420], "patent": [237, 670, 678], "legal": [237, 310, 859], "commerci": [237, 670], "124905": [237, 277, 504, 646, 670], "1935742": [237, 277, 646, 670], "60_maxwell_filtering_sss": [237, 242, 955], "deoxyhaemoglobin": [238, 295], "itertool": 238, "compress": [238, 286, 326, 330, 331, 332, 333, 334, 456, 550, 551, 652, 653, 783, 787, 947], "novemb": [238, 277, 367, 740, 745], "cw": [238, 319, 441], "set_dur": [238, 295, 325, 954], "mid": [238, 255], "photodetect": 238, "beer": 238, "lambert": 238, "law": [238, 295, 310], "raw_haemo": 238, "haemodynam": 238, "predominantli": 238, "raw_haemo_unfilt": 238, "s4_d4": 238, "s8_d8": 238, "s3_d3": 238, "s7_d6": 238, "s7_d7": 238, "s6_d8": 238, "oxi": [238, 295], "morphologi": 238, "evoked_dict": 238, "color_dict": 238, "aa3377": [238, 801, 811], "styles_dict": 238, "chroma": 238, "drive": [238, 432, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 594], "tidi": 238, "leg_lin": 238, "get_c": 238, "70_fnirs_process": [238, 242, 955], "technologi": [239, 277, 322, 953], "placement": [239, 288, 291, 319, 333, 334, 872], "opm_data_fold": 239, "opm_fil": 239, "002_se": 239, "aef_run": 239, "001_meg": 239, "540000": 239, "6000": [239, 668], "pt": [239, 278, 555, 585], "amp_scal": 239, "1e12": [239, 440], "data_d": 239, "time_d": 239, "set_kwarg": 239, "ambient": 239, "knowldg": 239, "evironment": [239, 649], "g2": 239, "psd_kwarg": 239, "psd_pre": 239, "psd_post_reg": 239, "9901": [239, 295], "relatiship": 239, "hfc": [239, 307, 649], "homgen": 239, "psd_post_hfc": 239, "broadband": 239, "remnant": 239, "motiv": [239, 270], "minimis": 239, "interfec": 239, "39601": 239, "ni": 239, "trig": 239, "seymour": [239, 277, 294, 307, 317, 649], "stephani": [239, 277, 317, 649], "mellor": [239, 277, 317, 649], "neill": [239, 277, 307, 308, 317, 649], "tim": [239, 277, 317, 649], "tiernei": [239, 277, 317, 649], "eleanor": [239, 277, 317, 649], "maguir": [239, 277, 317, 649], "opportun": [239, 277, 317], "118834": [239, 277, 317], "februari": [239, 277, 317], "755": [239, 242, 274, 276, 955], "80_opm_process": [239, 242, 955], "huberti": [240, 278, 303, 304, 307, 308], "seh33": 240, "dominik": [240, 270, 286, 291, 294, 304, 305, 307], "welk": [240, 270, 291, 294, 304, 307], "mff": [240, 278, 284, 285, 286, 287, 288, 293, 295, 304, 320, 333, 334, 401, 514, 515, 568, 701], "plr_eyetrack": 240, "eeg_fpath": 240, "plr_eeg": 240, "raw_et": 240, "raw_eeg": 240, "june": 240, "signal1": [240, 252], "monocular": 240, "xpos_right": 240, "pupil_right": 240, "first_cal": 240, "hv5": 240, "photodiod": [240, 317], "signifi": [240, 403, 635], "et_ev": 240, "shortest_ev": [240, 524], "uint_cast": [240, 324, 524], "eeg_ev": 240, "din3": 240, "din": [240, 278], "et_flash_tim": 240, "eeg_flash_tim": 240, "force_update_info": [240, 331, 332, 333, 334, 550, 551, 783, 785, 786, 787, 788, 789], "e19": 240, "e11": 240, "e4": 240, "e12": 240, "e5": 240, "e61": 240, "e62": 240, "e78": 240, "e67": 240, "e72": 240, "e77": 240, "picks_idx": 240, "constrict": 240, "crosshair": 240, "kept": [240, 268, 282, 288, 308, 309, 326, 331, 332, 337, 392, 441, 507, 545, 547, 548, 570, 594, 602, 603, 604, 605, 606, 608, 609, 619, 635, 636, 646, 693, 879], "899": [240, 242, 270, 955], "90_eyetracking_data": [240, 242, 955], "911": 242, "166800": 243, "read_raw_": [243, 287, 320, 549], "famili": [243, 772, 941], "seriou": [243, 310], "parenthes": [243, 320], "estimate_rank": [243, 282, 288], "n_time_samp": 243, "time_sec": 243, "n_chan": [243, 763, 812, 813, 897], "000167471573526": 243, "megacq": 243, "acqch001": 243, "110113": 243, "acqch002": 243, "110112": 243, "acqch003": 243, "110111": 243, "acqch004": 243, "110122": 243, "frequent": [243, 291, 292, 309, 318, 570, 936, 940], "12012": 243, "18018": 243, "24024": 243, "underlyingli": [243, 318], "n_timepoint": [243, 768], "pose": [243, 309], "undo": [243, 292, 700], "eeg_and_eog": 243, "raw_temp": 243, "channel_nam": [243, 284, 568, 701], "eog_and_frontal_eeg": 243, "frivol": 243, "eeg_059": 243, "eeg_060": 243, "blink_detector": 243, "makeshift": 243, "eeg_001": 243, "raw_select": 243, "1503": 243, "unspecifi": [243, 250, 859], "500770084699155": 243, "5001290587975622": 243, "raw_selection1": 243, "raw_selection2": 243, "raw_selection3": 243, "5041000049184614": 243, "sampling_freq": [243, 250], "start_stop_second": 243, "channel_index": [243, 848], "85742192e": 243, "64355481e": 243, "89306644e": 243, "99872648": 243, "00039144": 243, "0020564": 243, "9933487": 243, "99501366": 243, "99667862": 243, "data_arrai": 243, "times_arrai": 243, "meg_0712": 243, "meg_1022": 243, "two_meg_chan": 243, "y_offset": 243, "safest": [243, 316], "eeg_channel_indic": 243, "planar1": [243, 328, 331, 332, 333, 334, 483, 490, 550, 551, 632, 633, 634, 635, 650, 783, 785, 786, 787, 788, 789, 867, 874, 878, 890, 895, 897], "planar2": [243, 328, 331, 332, 333, 334, 483, 490, 550, 551, 632, 633, 634, 635, 650, 783, 785, 786, 787, 788, 789, 867, 874, 878, 890, 895, 897], "return_tim": [243, 273, 550, 551], "first_channel_data": [243, 320], "eeg_and_eog_data": 243, "two_meg_chans_data": 243, "my_data": 243, "npy": [243, 244], "afford": 243, "scaling_tim": 243, "start_end_sec": 243, "to_hdf": 243, "eeg_002": 243, "999750": 243, "847885e": 243, "243790e": 243, "952283e": 243, "001415": 243, "612900e": 243, "200958e": 243, "069226e": 243, "003080": 243, "589401e": 243, "176483e": 243, "080921e": 243, "004745": 243, "724518e": 243, "182602e": 243, "010755e": 243, "006410": 243, "286621e": 243, "10_raw_overview": [243, 248, 955], "lst": [244, 697, 925], "array_equ": 244, "_eve": 244, "my_experi": 244, "told": 244, "events_no_button": 244, "merged_ev": 244, "ultim": [244, 309], "send": [244, 830], "cumbersom": 244, "835": [244, 248, 260, 955], "20_event_arrai": [244, 248, 955], "datetim": [245, 291, 303, 325, 331, 332, 333, 334, 336, 350, 550, 551], "compris": [245, 250, 320, 331, 332, 771, 785, 786, 787, 788, 789], "posix": [245, 325], "my_annot": 245, "aaa": 245, "bbb": 245, "ccc": 245, "microsecond": [245, 325, 331, 332, 333, 334, 336, 550, 551], "time_of_first_sampl": 245, "95597083": 245, "iso": 245, "8601": 245, "new_orig_tim": 245, "strftime": 245, "later_annot": 245, "ddd": 245, "eee": 245, "fff": 245, "720100": 245, "rectangl": [245, 273, 783, 852], "darker": 245, "spinbox": 245, "safeguard": [245, 281, 336], "interactive_annot": 245, "ordereddict": 245, "95597082905339": [245, 325], "tzinfo": 245, "timezon": [245, 331, 332, 333, 334, 336, 550, 551], "descr": 245, "70597082905339": 245, "45597082905339": 245, "20597082905339": 245, "WILL": 245, "NOT": 245, "annot_from_fil": 245, "30_annotate_raw": [245, 248, 955], "versatil": 246, "lengthen": 246, "unmark": 246, "newli": [246, 312, 856], "hover": 246, "thumbnail": 246, "plot_psd_topo": [246, 268, 331, 332, 333, 334, 550, 551, 954], "40_visualize_raw": [246, 248, 955], "synthet": [250, 278, 282, 320, 568, 652, 660], "hertz": [250, 252, 336, 784, 790, 791, 792, 793, 794, 795], "eog001": 250, "meg001": 250, "meg002": 250, "meg003": 250, "meg004": 250, "meg005": 250, "meg006": 250, "meg007": 250, "meg008": 250, "seven": [250, 281, 320], "molar": [250, 320], "amper": [250, 320], "simulated_raw": 250, "show_scalebar": [250, 295, 331, 332, 550, 551, 865, 888], "simulated_epoch": 250, "column_stack": 250, "condition_a": 250, "condition_b": 250, "evoked_arrai": 250, "n_per_seg": [250, 270, 284, 331, 332, 333, 334, 550, 551, 785, 788, 804], "psd_ave": 250, "10_array_obj": [250, 254, 955], "dt": [251, 504, 797], "17545": 251, "hemi_to_ind": 251, "elig": [251, 310], "surf_vertic": 251, "restrict_vert": 251, "intersect1d": 251, "restrict_vertic": [251, 337, 342], "cent_idx": 251, "elsewher": 251, "distances_to_outsid": [251, 295, 337], "compute_area": [251, 295, 337], "stc_gen": 251, "value_fun": [251, 750], "brain_gen": 251, "evoked_gen": 251, "stc_inv": 251, "brain_inv": 251, "45968308": 251, "57021267": 251, "69354621": 251, "evoked_snr": 251, "969": [251, 254, 260, 955], "70_point_spread": [251, 254, 955], "unit_impuls": 252, "coh_signal_gen": 252, "t_rand": 252, "base_freq": 252, "cumsum": 252, "signal2": 252, "am": [252, 284, 329, 332, 334, 443, 551], "nperseg": 252, "coh": [252, 784, 861], "noverlap": 252, "146374": 252, "33830": 252, "stc_signal": 252, "stc_nois": 252, "pretend": [252, 255], "s_rm": 252, "59828": 252, "89697e": 252, "40489756": 252, "65479053": 252, "61269642": 252, "dampen": [252, 723], "consensu": [252, 310], "csd_signal": 252, "filters_approach1": 252, "filters_approach2": 252, "filters_1": 252, "power_approach1": 252, "power_approach2": 252, "plot_approach": 252, "brain1": 252, "42918831e": 252, "04345299e": 252, "40589757e": 252, "brain2": 252, "mia": [252, 277, 364, 365], "liljestr\u00f6m": [252, 277, 364, 365], "susanna": [252, 277, 286, 364, 365], "aro": [252, 277, 286, 364, 365], "245530": [252, 277, 364, 365], "kensuk": [252, 277, 364, 365], "sekihara": [252, 277, 364, 365], "79369": [252, 277, 364, 365], "79370": [252, 277, 364, 365], "80_dic": [252, 254, 955], "phenomena": 255, "n_subject": [255, 263, 265, 766], "signal_mean": 255, "signal_sd": 255, "noise_sd": 255, "gaussian_sd": 255, "n_src": [255, 339, 344], "h_0": 255, "colon": [255, 323, 456], "h_1": 255, "neq": [255, 320], "geq": 255, "cdot": [255, 320, 743, 812, 815], "1600": 255, "mcc": 255, "plot_t_p": 255, "p_lim": 255, "t_lim": 255, "mgrid": 255, "plot_surfac": [255, 291, 292], "rstride": 255, "cstride": 255, "ztick": 255, "mappabl": 255, "set_tick": 255, "set_ticklabel": 255, "get_xaxi": 255, "set_label_coord": 255, "set_weight": 255, "use_p": 255, "log_": 255, "t_": [255, 320], "exchang": [255, 282], "verid": 255, "n_": [255, 320], "samp": 255, "gymnast": 255, "declar": [255, 310], "p_type_i": 255, "combat": 255, "familywis": 255, "fwer": 255, "benjamini": [255, 767], "hochberg": [255, 767], "strict": [255, 526], "indistinguish": 255, "mathbf": [255, 646], "perm_": 255, "aforement": 255, "rethink": 255, "thought": [255, 319, 764], "refram": 255, "drawback": 255, "touch": [255, 389], "feature_extract": 255, "grid_to_graph": 255, "e402": 255, "mini_adjac": 255, "toarrai": 255, "builtin_ch_adj": 255, "adj_nam": 255, "adj_descript": 255, "bti148": 255, "bti248": 255, "bti248grad": 255, "ctf64": 255, "easycap128ch": 255, "easycap32ch": 255, "easycap64ch": 255, "easycapm1": [255, 304], "easycapm11": 255, "m11": 255, "easycapm14": 255, "m14": 255, "easycapm15": 255, "m15": 255, "ecog256": 255, "256channel": 255, "ecog256bipolar": 255, "eeg1010_neighb": 255, "elec1005": 255, "elec1010": 255, "elec1020": 255, "itab153": 255, "itab": 255, "itab28": 255, "language29ch": 255, "mpi": 255, "mpi_59_channel": 255, "neuromag122cmb": 255, "neuromag122": [255, 294], "neuromag306cmb": 255, "neuromag306": 255, "neuromag306mag": [255, 260], "neuromag306planar": [255, 257], "yokogawa160": 255, "yokogawa440": 255, "n_space": 255, "t_thresh": [255, 257], "t_clust": 255, "viewabl": 255, "p_clust": 255, "cl": 255, "195527": 255, "120434": 255, "1916": 255, "1945": 255, "1946": 255, "1917": 255, "1938": 255, "1935": 255, "stat_fun_hat": 255, "t_hat": 255, "p_hat": 255, "043603": 255, "127369": 255, "4417": 255, "4621": 255, "4628": 255, "4634": 255, "riemann": 255, "threshold_tfc": 255, "t_tfce": 255, "p_tfce": 255, "h_power": [255, 256], "e_pow": [255, 256], "429": [255, 260], "t_tfce_hat": 255, "p_tfce_hat": 255, "jag": 255, "peaki": 255, "broad": [255, 270], "tighten": 255, "broaden": 255, "exhaust": [255, 364], "unbalanc": 255, "anova_lm": 255, "wrap": [255, 292, 335, 608], "q": [255, 320, 323, 743, 770, 771, 773, 774], "unpair": 255, "gerard": [255, 277, 776, 777], "ridgwai": [255, 277, 776, 777], "flandin": [255, 277, 776, 777], "karl": [255, 277, 322, 776, 777, 953], "friston": [255, 277, 776, 777], "Will": [255, 277, 323, 331, 332, 335, 379, 519, 549, 635, 776, 777, 782, 797, 804, 829, 921], "penni": [255, 277, 776, 777], "haircut": [255, 277, 776, 777], "nichol": [255, 256, 277, 767, 770, 771, 772, 773, 774], "10_background_stat": [255, 262, 955], "confirmatori": 256, "tfce": [256, 292, 299, 303, 770, 771, 773, 774], "ttest_ind": [256, 777], "unsaf": [256, 787], "median_valu": 256, "long_word": 256, "short_word": 256, "time_window": [256, 783], "ntarget": 256, "short_df": 256, "format_dict": 256, "096": 256, "453939": 256, "232879": 256, "222424": 256, "518939": 256, "214091": 256, "371515": 256, "064": [256, 277, 415, 617, 743], "811667": 256, "793636": 256, "250152": 256, "039697": 256, "188636": 256, "318030": 256, "163030": 256, "018939": 256, "425152": 256, "682": 256, "684": 256, "absent": [256, 285, 293, 434], "amongst": [256, 270], "temor": 256, "cluster_pv": [256, 770, 771, 773, 774], "significant_point": 256, "delaunai": [256, 257, 285, 386], "917298": 256, "1856": 256, "20_erp_stat": [256, 262, 955], "whom": [257, 260, 309], "picks_eog": 257, "picks_grad": 257, "picks_rtemp": 257, "downstream": [257, 258, 786, 789], "nonparametr": [257, 258, 260, 277, 770, 771, 772, 773, 774], "spectrotempor": [257, 258, 812, 813, 815, 816], "tfr_epoch": 257, "logratio": [257, 269, 354, 618, 619, 783, 787, 895], "epochs_pow": [257, 259, 260], "541": [257, 277, 504], "lattic": [257, 260, 763, 770, 771, 773, 774], "sensor_adjac": 257, "use_idx": 257, "n_ch": 257, "unrol": 257, "degrees_of_freedom": 257, "455144": 257, "265125": 257, "caveat": [257, 260, 277, 320, 635], "anywher": [257, 288], "t_obs_plot": 257, "f_idx": 257, "t_idx": [257, 550, 551], "nanargmax": 257, "40_cluster_1samp_time_freq": [257, 262, 955], "epochs_condition_1": 258, "epochs_condition_2": 258, "comptuat": 258, "tfr_epochs_1": 258, "tfr_epochs_2": 258, "epochs_power_1": 258, "epochs_power_2": 258, "f_ob": [258, 259, 260, 264, 265, 771, 774], "8675309": 258, "566824": 258, "evoked_power_1": 258, "evoked_power_2": 258, "evoked_power_contrast": 258, "f_obs_plot": [258, 259, 260], "max_f": 258, "evoked_condition_1": 258, "evoked_condition_2": 258, "evoked_contrast": 258, "50_cluster_between_time_freq": [258, 262, 955], "interplai": 259, "perceptu": 259, "56aud_r": 259, "60vis_l": 259, "64vis_r": 259, "forgiv": 259, "zero_mean": [259, 619, 801, 811, 812, 813, 815], "this_tfr": [259, 260], "this_pow": 259, "n_condit": [259, 260, 265, 771, 774], "n_replic": 259, "factor_level": [259, 265, 764, 766], "formula": [259, 265, 289, 291, 312, 320, 364, 365, 423, 739, 743, 798, 799], "a1b1": [259, 764], "a1b2": [259, 764], "a2b1": [259, 764], "b2b2": 259, "fval": 259, "effect_label": 259, "autumn": [259, 260], "overrid": [259, 310, 341, 440, 442, 550, 551, 568, 719, 720, 721, 722, 831, 859, 945, 947], "necessit": [259, 265, 306], "return_pv": [259, 265, 764], "pthresh": [259, 265], "f_thresh": [259, 260, 265], "419588": 259, "good_clust": [259, 263], "f_imag": [259, 260], "f_obs_plot2": 259, "70_cluster_rmanova_time_freq": [259, 262, 955], "differenti": [260, 277, 312, 331, 332, 333, 334, 507, 550, 551, 814, 817], "axes_grid1": [260, 273, 859], "make_axes_locat": [260, 273], "_csr": 260, "csr_matrix": [260, 343, 344, 386, 397, 707], "bind": [260, 265], "stackexchang": 260, "73993": 260, "alpha_cluster_form": 260, "n_observ": [260, 768, 770, 771, 773, 774, 859], "dfn": [260, 771, 774], "dfd": [260, 771, 774], "cluster_stat": [260, 312], "003379": 260, "775354": 260, "431": 260, "628": 260, "635": 260, "654": 260, "738": 260, "745": 260, "751": 260, "764": 260, "816": 260, "853": 260, "871": 260, "902": 260, "915": 260, "939": 260, "945": [260, 333, 334, 783, 873], "963": 260, "982": 260, "988": 260, "p_accept": 260, "good_cluster_ind": [260, 264, 265], "crimson": [260, 833], "steelblu": [260, 550, 551, 888], "i_clu": 260, "clu_idx": 260, "time_ind": 260, "space_ind": 260, "ch_ind": 260, "f_map": 260, "sig_tim": 260, "ax_topo": 260, "f_evok": 260, "ax_colorbar": 260, "append_ax": [260, 273], "ax_sign": 260, "ymin": [260, 265], "get_ylim": 260, "fill_betweenx": [260, 265], "tfr_adjac": 260, "tfr_threshold": 260, "408366": 260, "435": 260, "636": 260, "662": 260, "671": 260, "677": 260, "683": 260, "689": 260, "695": 260, "696": 260, "697": 260, "703": [260, 954], "712": 260, "718": 260, "727": 260, "739": 260, "743": 260, "746": 260, "776": 260, "811": 260, "813": 260, "822": 260, "839": [260, 320], "843": 260, "849": 260, "855": 260, "856": 260, "858": 260, "864": [260, 344], "888": 260, "908": 260, "912": 260, "922": 260, "925": 260, "928": 260, "935": 260, "937": 260, "944": 260, "983": 260, "difficulti": [260, 476, 935, 940], "freq_ind": 260, "ax_spec": 260, "f_obs_plot_sig": 260, "ax_colorbar2": 260, "mari": [260, 277, 292, 770, 771, 773, 774], "dejan": [260, 277, 770, 771, 773, 774], "draschkow": [260, 277, 770, 771, 773, 774], "e13335": [260, 277, 770, 771, 773, 774], "13335": [260, 277, 770, 771, 773, 774], "75_cluster_ftest_spatiotempor": [260, 262, 955], "725": 262, "1000e": [263, 265], "sample_vertic": [263, 265], "evoked1": [263, 938], "evoked2": [263, 938], "n_vertices_sampl": [263, 265], "morph_data": [263, 287, 297], "fsave_vertic": [263, 264, 265], "morph_mat": [263, 265, 343], "n_vertices_fsav": [263, 264, 265], "govern": 263, "member": [263, 310, 768], "max_step": [263, 770, 771, 773, 774], "p_threshold": [263, 264], "t_threshold": 263, "clu": [263, 264, 265, 775], "563537": 263, "791547": 263, "permutationt": 263, "good_clusters_idx": 263, "stc_all_cluster_vi": [263, 264, 265], "20_cluster_1samp_spatiotempor": [263, 267, 955], "stc_fname": [264, 274], "n_subjects1": 264, "n_subjects2": 264, "x1": [264, 768, 771], "x2": [264, 768, 771], "subjects_k": 264, "f_threshold": [264, 766], "632172": 264, "30_cluster_ftest_spatiotempor": [264, 267, 955], "engemannn": 265, "r_aud": 265, "r_vi": 265, "tini": [265, 365], "851281": 265, "brighter": 265, "inds_t": 265, "inds_v": 265, "cluster_ind": 265, "eve_id": 265, "mean_tc": 265, "std_tc": 265, "60_cluster_rmanova_spatiotempor": [265, 267, 955], "v\u00b2": 268, "\u00b2": [268, 269], "t\u00b2": [268, 270], "overridden": [268, 291, 548], "esp": 268, "method_kw": [268, 331, 332, 333, 334, 550, 551, 785, 788], "irrelev": [268, 309, 320, 323], "epo_spectrum": 268, "npsd": 268, "__getitem__": [268, 291, 292, 324, 325, 326, 328, 329, 331, 332, 336, 344, 355, 370, 550, 551, 601, 655, 784, 785, 786, 787, 788, 789, 820], "evk_spectrum": 268, "61863537e": 268, "13487136e": 268, "88010499e": 268, "89065956e": 268, "24056397e": 268, "91160668e": 268, "56762015e": 268, "65842303e": 268, "39426775e": 268, "38758770e": 268, "03771739e": 268, "98519756e": 268, "agg_fun": [268, 331, 332, 333, 334, 550, 551, 785, 786, 788, 789, 867], "psd_welch": [268, 282, 284, 285, 289, 291, 292, 293, 305], "psd_multitap": [268, 282, 285, 305], "area_mod": [268, 331, 332, 333, 334, 550, 551, 889], "periodogram": [268, 277, 331, 332, 333, 334, 550, 551, 785, 788, 804], "electroacoust": [268, 277, 331, 332, 333, 334, 550, 551, 785, 788, 804], "1967": [268, 277, 331, 332, 333, 334, 550, 551, 785, 788, 804], "tau": [268, 277, 331, 332, 333, 334, 550, 551, 785, 788, 804], "1161901": [268, 277, 331, 332, 333, 334, 550, 551, 785, 788, 804], "slepian": [268, 277, 331, 332, 333, 334, 550, 551, 785, 788, 797, 803], "bell": [268, 277, 331, 332, 333, 334, 550, 551, 635, 668, 785, 788, 797, 803], "1430": [268, 277, 331, 332, 333, 334, 550, 551, 785, 788, 797, 803], "1978": [268, 277, 331, 332, 333, 334, 550, 551, 785, 788, 797, 803], "7305": [268, 277, 331, 332, 333, 334, 550, 551, 785, 788, 797, 803], "tb02104": [268, 277, 331, 332, 333, 334, 550, 551, 785, 788, 797, 803], "646": 268, "10_spectrum_class": [268, 272, 955], "72074": 269, "mean_spectrum": 269, "psds_mean": [269, 270], "psds_std": [269, 270], "arithmet": [269, 281, 296, 635, 804], "psds_welch_mean": 269, "freqs_mean": 269, "psds_welch_median": 269, "freqs_median": 269, "epo_idx": 269, "unaggreg": [269, 289, 306, 804], "n_segment": [269, 804], "welch_unagg": 269, "topomap_kw": 269, "fmin_fmax": 269, "timefreq": [269, 783], "20_sensors_time_frequ": [269, 272, 955], "fpv": 270, "steadi": 270, "assr": 270, "norcia": 270, "picton": 270, "wet": [270, 317], "evgenii": [270, 292, 293, 294], "kalenkovich": [270, 288, 292, 293, 294], "ttest_rel": 270, "bids_fnam": 270, "12hz": 270, "15hz": 270, "decai": 270, "stabil": [270, 302, 518, 635, 646], "bach": 270, "meigen": 270, "n_overlap": [270, 331, 332, 333, 334, 550, 551, 785, 788, 804, 889], "snr_spectrum": 270, "noise_n_neighbor_freq": 270, "noise_skip_neighbor_freq": 270, "n_trial": [270, 499], "n_frequency_bin": 270, "increment": [270, 547, 635], "ON": 270, "averaging_kernel": 270, "mean_nois": 270, "apply_along_axi": 270, "psd_": 270, "edge_width": 270, "pad_width": 270, "constant_valu": 270, "drastic": [270, 303, 343], "reappear": 270, "grand": [270, 302, 320, 540], "floor": [270, 496, 668, 813, 816], "ceil": [270, 808], "psds_plot": 270, "snr_mean": 270, "snr_std": 270, "stim_freq": 270, "i_bin_12hz": 270, "1st": [270, 724], "i_bin_24hz": 270, "i_bin_36hz": 270, "i_bin_15hz": 270, "i_bin_30hz": 270, "i_bin_45hz": 270, "i_trial_12hz": 270, "i_trial_15hz": 270, "roi_vi": 270, "o9": 270, "o10": 270, "picks_roi_vi": 270, "hotel": 270, "snrs_target": 270, "6936554171862": 270, "wait": [270, 287, 309, 326, 331, 949], "snrs_12hz": 270, "snrs_12hz_chaverag": 270, "tstat_roi_vs_scalp": 270, "985902": 270, "693655": 270, "000067": 270, "Such": [270, 310, 319, 320, 330, 331, 332, 333, 334, 364, 365, 723, 783, 787], "somewher": [270, 321, 550, 551, 888], "unintend": 270, "preregist": 270, "peopl": [270, 284, 285, 286, 287, 291, 292, 293, 294, 295, 309, 310, 317, 950], "detour": 270, "snrs_roi": 270, "freq_plot": 270, "color_plot": 270, "darkblu": [270, 550, 551, 888], "darkgreen": 270, "mediumblu": 270, "seagreen": 270, "xpos_plot": 270, "stim_12hz_tmp": 270, "stim_15hz_tmp": 270, "snr_tmp": 270, "yerr": 270, "stim_12hz_snrs_": 270, "ihz": 270, "stim_15hz_snrs_": 270, "tick": [270, 273, 295, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 852, 859, 867, 871, 874, 878, 887, 890, 895, 896, 897], "strike": 270, "tstat_12hz_trial_stim": 270, "stim_12hz_snrs_12hz": 270, "stim_12hz_snrs_15hz": 270, "tstat_12hz_trial_1st_harmon": 270, "stim_12hz_snrs_24hz": 270, "stim_12hz_snrs_30hz": 270, "tstat_12hz_trial_2nd_harmon": 270, "stim_12hz_snrs_36hz": 270, "stim_12hz_snrs_45hz": 270, "tstat_15hz_trial_stim": 270, "stim_15hz_snrs_12hz": 270, "stim_15hz_snrs_15hz": 270, "tstat_15hz_trial_1st_harmon": 270, "stim_15hz_snrs_24hz": 270, "stim_15hz_snrs_30hz": 270, "tstat_15hz_trial_2nd_harmon": 270, "stim_15hz_snrs_36hz": 270, "stim_15hz_snrs_45hz": 270, "000037": 270, "000014": 270, "000297": 270, "916": 270, "000024": 270, "006525": 270, "tour": [270, 282, 287], "overli": 270, "stim_bandwidth": 270, "window_length": 270, "window_snr": 270, "i_win": 270, "this_spectrum": 270, "windowed_psd": 270, "windowed_freq": 270, "stimfreq": 270, "bin_width": 270, "skip_neighbor_freq": 270, "n_neighbor_freq": 270, "windowed_snr": 270, "boxplot": 270, "stochast": [270, 277, 635], "window_start": 270, "greyscal": 270, "optimist": 270, "serious": [270, 320], "50_ssvep": [270, 272, 955], "imagegrid": 273, "inset_loc": [273, 859], "max_t": 273, "17909658": [273, 274], "18448887": [273, 274], "83197989": [273, 274], "nonwhite_pix": 273, "nonwhite_row": 273, "nonwhite_col": 273, "cropped_screenshot": 273, "nrows_ncol": 273, "axes_pad": 273, "labels": 273, "titles": 273, "gridspec": [273, 333, 334, 874], "height_ratio": 273, "rowspan": 273, "bot": 273, "evoked_idx": 273, "brain_idx": 273, "peak_lin": 273, "columnspac": 273, "labelspac": 273, "fancybox": 273, "handlelength": 273, "n_ave": 273, "set_axisbelow": 273, "wspace": 273, "hspace": 273, "transfigur": 273, "to_plot": 273, "inset_ax": [273, 859], "axin": 273, "tast": 273, "luckili": 273, "set_": 273, "get_children": 273, "line2d": 273, "0x7fb676171b40": 273, "0x7fb676172c50": 273, "0x7fb676172770": 273, "0x7fb676170640": 273, "pathcollect": 273, "0x7fb676172aa0": 273, "0x7fb676d39750": 273, "0x7fb676d387c0": 273, "0x7fb676d3b280": 273, "0x7fb67c9039a0": 273, "0x7fb676d380d0": 273, "0x7fb67c902ad0": 273, "0x7fb713b40eb0": 273, "certainli": 273, "artistlist": 273, "sensor_dot": 273, "set_siz": 273, "10_publication_figur": [273, 276, 955], "timechang": [274, 333, 334, 833, 835, 874], "subscrib": [274, 333, 334, 833, 835, 874, 915, 918, 950], "ion": 274, "evokeds_fnam": 274, "avg_evok": 274, "fieldlin": [274, 835, 897], "fig_brain": 274, "field_map": 274, "fig_field": 274, "set_tim": [274, 293, 833, 835, 954], "ing": 274, "snake": [274, 906, 907, 908, 909, 910, 911, 912], "time_chang": 274, "hassl": 274, "fig3": 274, "fig4": 274, "fig5": 274, "time_bar": 274, "on_motion_notifi": 274, "mpl_event": 274, "xdata": 274, "on_time_chang": 274, "set_xdata": 274, "curstom": 274, "motion_notify_ev": 274, "20_ui_ev": [274, 276, 955], "alphabet": [277, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 309], "fiorenzo": [277, 635], "artoni": [277, 635], "magazin": [277, 483], "962275": 277, "stephan": [277, 483], "bonnet": [277, 483], "marco": [277, 483], "congedo": [277, 483], "jutten": [277, 483], "riemannian": [277, 483], "multimedia": [277, 483], "mmsp": [277, 483], "5662067": [277, 483], "barber": [277, 423], "51814": [277, 423], "www": [277, 309, 423, 522, 559, 650, 935], "staff": [277, 423, 947], "brml": [277, 423], "becker": [277, 743], "albera": [277, 743], "comon": [277, 743], "gribonv": [277, 743], "fleureau": [277, 743], "guillotel": [277, 743], "merlet": [277, 743], "sissi": [277, 743], "august": [277, 315, 503, 743], "anthoni": [277, 635], "terrenc": [277, 635], "sejnowski": [277, 635, 668], "deconvolut": [277, 635, 668], "1129": [277, 635, 668], "1995": [277, 320, 475, 635, 668], "neco": [277, 635], "anna": [277, 294, 736], "rita": [277, 736], "bentivoglio": [277, 736], "bressman": [277, 736], "cassetta": [277, 736], "donatella": [277, 736], "carretta": [277, 736], "pietro": [277, 736], "tonali": [277, 736], "alberto": [277, 736], "albanes": [277, 736], "disord": [277, 736], "1028": [277, 736], "870120629": [277, 736], "berg": [277, 320], "scherg": [277, 320], "1994": [277, 320, 602], "90113": [277, 320], "quentin": [277, 287, 307], "anderson": [277, 295], "arindam": 277, "banerje": 277, "kenji": 277, "fukumizu": 277, "24th": 277, "1288": 277, "pmlr": 277, "apr": 277, "mlr": 277, "v130": 277, "bertrand21a": 277, "ryota": [277, 483], "tomioka": [277, 483], "lemm": [277, 483], "motoaki": [277, 483], "kawanab": [277, 483], "msp": [277, 483], "4408441": [277, 483], "fred": 277, "bookstein": 277, "thin": 277, "plate": 277, "24792": 277, "oleg": 277, "burdakov": 277, "bori": 277, "merkulov": 277, "lith": 277, "\u00f6": 277, "ping": 277, "yilun": [277, 423], "chen": [277, 423], "ami": [277, 423], "wiesel": [277, 423], "yonina": [277, 423], "eldar": [277, 423], "alfr": [277, 316, 423], "hero": [277, 423], "shrinkag": [277, 285, 423, 483, 490, 491, 636], "mmse": [277, 423], "5016": [277, 423], "5029": [277, 423], "2053029": [277, 423], "readthedoc": 277, "octob": [277, 743], "ronald": [277, 330, 331, 332, 333, 334, 783, 787], "crochier": [277, 330, 331, 332, 333, 334, 783, 787], "lawrenc": [277, 330, 331, 332, 333, 334, 643, 783, 787], "rabin": [277, 330, 331, 332, 333, 334, 783, 787], "multir": [277, 330, 331, 332, 333, 334, 783, 787], "englewood": [277, 330, 331, 332, 333, 334, 783, 787], "cliff": [277, 330, 331, 332, 333, 334, 783, 787], "nj": [277, 330, 331, 332, 333, 334, 783, 787], "605162": [277, 330, 331, 332, 333, 334, 783, 787], "adrian": [277, 337, 342], "guggisberg": 277, "erik": [277, 286, 306, 307], "edward": 277, "findlai": 277, "ryan": [277, 295, 649], "canolti": 277, "mitchel": 277, "berger": 277, "barbaro": 277, "heidi": 277, "kirsch": 277, "1686": 277, "1700": 277, "sereno": [277, 320], "1006": [277, 320, 767], "nimg": [277, 320, 767], "0395": [277, 320], "arthur": [277, 602, 814, 817], "liu": [277, 602], "buckner": [277, 602], "lewin": [277, 602], "s0896": [277, 602], "6273": [277, 602], "81138": [277, 602], "jocn": 277, "darva": 277, "ermer": 277, "20171": 277, "salat": [277, 320], "andr\u00e9": [277, 320], "kouw": [277, 320], "makri": [277, 320], "florent": [277, 320], "s\u00e9gonn": [277, 320], "quinn": [277, 305, 320], "reson": [277, 320], "s69": [277, 320], "s84": [277, 320], "0396": 277, "tootel": 277, "intersubject": 277, "sici": 277, "1097": 277, "0193": 277, "hbm10": 277, "genoves": [277, 767], "nicol": [277, 285, 767], "lazar": [277, 483, 767], "878": [277, 767], "1037": [277, 767], "supplementari": [277, 458], "neuroanatom": [277, 458], "esm": [277, 458], "art": [277, 312, 458], "3a10": [277, 458], "2fnature18933": [277, 458], "mediaobject": [277, 458], "41586_2016_bfnature18933_moesm330_esm": [277, 458], "s\u00f3nia": [277, 316], "gon\u00e7alv": [277, 316], "casper": [277, 316], "munck": [277, 316], "jeroen": [277, 292, 316], "verbunt": [277, 316], "fetsj": [277, 316], "bijma": [277, 316], "rob": [277, 304, 307, 308, 316], "heethaar": [277, 316], "vivo": [277, 316], "resist": [277, 316], "eit": [277, 316], "812164": [277, 316], "teon": [277, 280, 281, 282, 283, 284, 285, 287, 288, 292, 298, 299, 300, 301, 302, 314], "lauri": [277, 314], "parkkonen": [277, 314], "\u00e4": [277, 314, 491], "inen": [277, 314], "fnin": [277, 314], "00267": [277, 314], "greischar": [277, 643], "cori": [277, 643], "burghi": [277, 643], "carien": [277, 643], "reekum": [277, 643], "daren": [277, 643], "jackson": [277, 643], "diego": [277, 643], "pizzag": [277, 643], "corrina": [277, 643], "mueller": [277, 643], "davidson": [277, 643], "electroencephalograph": [277, 643], "neuroinformat": 277, "fninf": 277, "00062": 277, "hne": [277, 491], "gari": [277, 765], "heiman": [277, 765], "houghton": [277, 765], "mifflin": [277, 765], "boston": [277, 322, 765, 953], "17028": [277, 765], "joerg": [277, 364], "hipp": [277, 364], "hawellek": 277, "maurizio": 277, "corbetta": 277, "marku": [277, 364], "siegel": [277, 364], "engel": [277, 364], "spontan": [277, 316], "3101": 277, "percept": [277, 294, 317, 319, 364], "aapo": [277, 635], "hyv\u00e4rinen": [277, 635], "761722": [277, 635], "toga": 277, "mazziotta": 277, "academ": 277, "san": 277, "b978": 277, "012693019": 277, "50012": 277, "bf02512476": [277, 602], "tkk": 277, "a559": 277, "helsinki": 277, "16463": 277, "kevin": [277, 814, 817], "jone": [277, 814, 817], "bernic": [277, 814, 817], "porjesz": [277, 814, 817], "chorlian": [277, 814, 817], "madhavi": [277, 814, 817], "rangaswami": [277, 814, 817], "chella": [277, 814, 817], "kamarajan": [277, 814, 817], "ajayan": [277, 814, 817], "padmanabhapillai": [277, 814, 817], "stimu": [277, 814, 817], "henri": [277, 814, 817], "begleit": [277, 814, 817], "deficit": [277, 814, 817], "diagnos": [277, 302, 814, 817], "alcohol": [277, 814, 817], "2128": [277, 814, 817], "jorg": 277, "jovicich": 277, "silvest": 277, "czanner": 277, "elizabeth": 277, "halei": 277, "andr": [277, 294], "kennedi": 277, "franz": 277, "schmitt": 277, "gregori": 277, "brown": [277, 617, 743], "macfal": 277, "scientif": [277, 937, 945], "056101": 277, "4802845": 277, "antti": [277, 284], "ahonen": 277, "lain": 277, "claudia": [277, 320], "tesch": [277, 320], "3320": 277, "281163": 277, "zhou": [277, 483], "1990": [277, 483], "bf01129656": [277, 483], "philipp": 277, "lachaux": 277, "eugenio": 277, "rodriguez": [277, 294], "martineri": 277, "francisco": 277, "varela": 277, "synchroni": 277, "hbm4": 277, "attent": [277, 309, 337, 342], "ledoit": [277, 423], "wolf": [277, 423], "s0047": [277, 423], "259x": [277, 423], "00096": [277, 423], "te": [277, 291, 635], "girolami": [277, 635, 668], "subgaussian": [277, 280, 635, 668], "supergaussian": [277, 635, 668], "089976699300016719": [277, 635], "seok": [277, 316], "lew": [277, 316], "carsten": [277, 316], "wolter": [277, 316], "anwand": [277, 316], "macleod": [277, 316], "compart": [277, 316, 319, 323, 598], "2862": [277, 316], "2878": [277, 316], "20714": [277, 316], "witzel": [277, 613, 740, 745], "8945": 277, "8950": 277, "10024": [277, 303], "lowri": [277, 765], "vassarstat": [277, 765], "bernard": [277, 743], "giusiano": [277, 743], "roehri": [277, 743], "b\u00e9nar": [277, 743], "kathryn": [277, 458], "mill": [277, 458], "6084": [277, 458], "m9": [277, 458], "figshar": [277, 458], "3498446": [277, 458], "molin": [277, 617, 743], "quantif": [277, 504, 617, 743, 948], "thirtieth": [277, 367], "asilomar": [277, 367], "1207": [277, 367], "1996": [277, 367], "issn": [277, 367], "6393": [277, 367], "acssc": [277, 367], "599135": [277, 367], "paul": [277, 278, 284, 288, 320], "748978": [277, 320], "ali": [277, 814, 817], "moukadem": [277, 814, 817], "zi": [277, 814, 817], "bouguila": [277, 814, 817], "djaffar": [277, 814, 817], "ould": [277, 814, 817], "abdeslam": [277, 814, 817], "alain": [277, 814, 817], "dieterlen": [277, 814, 817], "lisbon": [277, 814, 817], "6952743": [277, 814, 817], "mourtazaev": [277, 475], "suresh": [277, 640], "muthukumaraswami": [277, 640], "00138": [277, 640], "ndiay": 277, "fercoq": 277, "salmon": 277, "sugiyama": 277, "luxburg": 277, "guyon": 277, "garnett": 277, "curran": 277, "inc": [277, 309], "nip": [277, 545], "cc": [277, 310, 545], "6405": 277, "holm": [277, 649, 772], "primer": [277, 772], "ou": 277, "bai": 277, "wheaton": 277, "sherri": 277, "vorbach": 277, "hallett": 277, "2307": 277, "zieh": 277, "aloi": 277, "schl\u00f6gl": 277, "kr\u00e4mer": 277, "brismar": 277, "robustli": 277, "physrevlett": 277, "234101": 277, "hilla": [277, 463], "paananen": [277, 463], "jyrki": [277, 463], "zenodo": [277, 314, 463], "889234": [277, 463], "reilli": [277, 291, 292, 294, 304, 317, 459], "mayada": [277, 317, 459], "elsabbagh": [277, 317, 459], "infant": [277, 284, 294, 459], "117682": [277, 317, 459], "thom": [277, 316], "oostendorp": [277, 316], "delbek": [277, 316], "dick": [277, 316], "stegeman": [277, 316], "vitro": [277, 316], "1487": [277, 316], "880100": [277, 316], "oppenheim": [277, 330, 331, 332, 333, 334, 783, 787], "schafer": [277, 330, 331, 332, 333, 334, 783, 787], "buck": [277, 330, 331, 332, 333, 334, 783, 787], "prentic": [277, 330, 331, 332, 333, 334, 783, 787], "hall": [277, 330, 331, 332, 333, 334, 783, 787], "saddl": [277, 330, 331, 332, 333, 334, 783, 787], "river": [277, 330, 331, 332, 333, 334, 783, 787], "754920": [277, 330, 331, 332, 333, 334, 783, 787], "daisuk": [277, 503], "yoshiaki": [277, 503], "adachi": [277, 503], "masato": [277, 503], "yumoto": [277, 503], "isao": [277, 503], "hashimoto": [277, 503], "gen": [277, 503, 848], "uehara": [277, 503], "dry": [277, 503, 650], "roberto": [277, 320, 602], "pascual": [277, 320, 602], "marqui": [277, 320, 602], "martha": [277, 320, 602], "koukkou": [277, 320, 602], "kieko": [277, 320, 602], "kochi": [277, 320, 602], "bernd": [277, 320, 602], "saletu": [277, 320, 602], "hideaki": [277, 320, 602], "tanaka": [277, 320, 602], "koichi": [277, 320, 602], "hirata": [277, 320, 602], "lesli": [277, 320, 602], "prichep": [277, 320, 602], "rolando": [277, 320, 602], "biscai": [277, 320, 602], "lirio": [277, 320, 602], "toshihiko": [277, 320, 602], "kinoshita": [277, 320, 602], "tomographi": [277, 307, 319, 320, 602], "royal": [277, 320, 423, 602], "1952": [277, 320, 602], "3768": [277, 320, 602], "3784": [277, 320, 602], "1098": [277, 320, 602], "rsta": [277, 320, 602], "0081": [277, 320, 602], "donald": 277, "perciv": 277, "walden": 277, "35532": 277, "cbo9780511622762": 277, "dinh": [277, 299, 300, 302], "tuan": 277, "pham": 277, "hermitian": 277, "1136": 277, "s089547980035689x": 277, "luca": [277, 674], "pollonini": [277, 674], "cristen": [277, 674], "homer": [277, 674], "abaya": [277, 674], "heather": [277, 674], "bortfeld": [277, 674], "beauchamp": [277, 338, 342, 346, 674, 893], "oghalai": [277, 674], "cochlear": [277, 674], "implant": [277, 674], "ernesto": 277, "pereda": 277, "ricardo": 277, "bru": 277, "\u00f1": 277, "maest": 277, "\u00fa": 277, "dog": 277, "056011": 277, "2552": 277, "aacfe4": 277, "sanchez": [277, 459], "meek": [277, 459], "wanz": [277, 459], "xie": [277, 459], "1254": [277, 459], "1259": [277, 459], "hat": [277, 292, 299, 320, 610, 646, 743, 776, 777], "brittani": 277, "stedelin": 277, "alessandra": 277, "mantovani": 277, "ahm": 277, "raslan": 277, "swann": 277, "3897": 277, "21105": 277, "joss": 277, "03897": 277, "noam": [277, 651], "pele": [277, 651], "00694": [277, 651], "abraham": [277, 331, 332, 333, 334, 550, 551], "savitzki": [277, 331, 332, 333, 334, 550, 551], "marcel": [277, 331, 332, 333, 334, 550, 551], "golai": [277, 302, 331, 332, 333, 334, 550, 551], "chemistri": [277, 331, 332, 333, 334, 550, 551], "1627": [277, 331, 332, 333, 334, 550, 551], "1639": [277, 331, 332, 333, 334, 550, 551], "1964": [277, 331, 332, 333, 334, 550, 551], "ac60214a047": [277, 331, 332, 333, 334, 550, 551], "corn": 277, "stam": 277, "daffertshof": 277, "diminish": 277, "1178": 277, "1193": 277, "20346": 277, "luigi": [277, 814, 817], "rodino": [277, 814, 817], "bert": [277, 814, 817], "schulz": [277, 278, 292, 294, 295, 303, 304, 814, 817], "wong": [277, 291, 292, 305, 814, 817], "pseudo": [277, 364, 365, 382, 814, 817], "american": [277, 814, 817], "1090": [277, 814, 817], "fic": [277, 814, 817], "2218": [277, 547], "2228": [277, 547], "tmi": [277, 547], "2553445": [277, 547], "evelina": 277, "busa": 277, "glessner": 277, "hybrid": 277, "catherin": [277, 801, 811, 812, 815], "tallon": [277, 801, 811, 812, 815], "baudri": [277, 801, 811, 812, 815], "claud": [277, 801, 811, 812, 815], "delpuech": [277, 801, 811, 812, 815], "734": [277, 801, 811, 812, 815], "jneurosci": [277, 801, 811, 812, 814, 815, 817], "00722": [277, 801, 811, 812, 815], "minna": [277, 320], "huotilainen": [277, 320], "oili": [277, 320], "salonen": [277, 320], "00064": [277, 320], "niall": [277, 649], "118484": [277, 649], "nd": [277, 649], "timm": [277, 649], "119338": [277, 649], "bishop": [277, 423], "1467": [277, 423], "9868": [277, 423], "00196": [277, 423], "vinck": 277, "wingerden": 277, "franscesco": 277, "battaglia": 277, "cyriel": 277, "pennartz": 277, "1548": 277, "womelsdorf": 277, "pascal": 277, "fri": 277, "rhythmic": 277, "wehner": [277, 504], "modi": [277, 504], "children": [277, 322, 504, 953], "wheat": [277, 814, 817], "pier": [277, 814, 817], "cornelissen": [277, 814, 817], "frost": [277, 814, 817], "hansen": [277, 814, 817], "phonologi": [277, 814, 817], "5229": [277, 814, 817], "5233": [277, 814, 817], "4448": [277, 814, 817], "whitham": [277, 635], "sean": [277, 635], "fitzgibbon": [277, 635], "clark": [277, 294, 635], "loveless": [277, 635], "marita": [277, 635], "broberg": [277, 635], "angu": [277, 635], "wallac": [277, 635], "lilli": [277, 635], "hardi": [277, 635], "rik": [277, 635], "fronsko": [277, 635], "alyson": [277, 635], "pulbrook": [277, 635], "paralysi": [277, 635], "rei": [277, 545], "ram\u00edrez": [277, 545], "jason": [277, 545], "palmer": [277, 545], "bhaskar": [277, 545], "rao": [277, 545], "neuroelectromagnet": [277, 545], "sch\u00f6lkopf": [277, 545], "platt": [277, 545], "hoffman": [277, 545], "3089": [277, 545], "juliu": [277, 305, 743], "dewald": [277, 743], "april": [277, 743], "zhi": [277, 294, 320], "multilay": [277, 320], "moritz": [277, 305, 306, 307, 483], "wentrup": [277, 483], "buss": [277, 483], "921154": [277, 483], "jair": [277, 280, 283, 635], "montoya": [277, 280, 283, 635], "mart\u00ednez": [277, 635], "petr": [277, 635], "tichavsk\u00fd": [277, 635], "massoud": [277, 635], "babai": [277, 635], "zadeh": [277, 635], "nad\u00e8g": [277, 635], "thirion": [277, 635], "moreau": [277, 308, 635], "latent": [277, 635, 882], "10169": [277, 635], "lectur": [277, 635, 937], "cham": [277, 635], "53547": [277, 635], "0_27": [277, 635], "pharmacologi": [277, 320, 602], "pubm": [277, 320, 602], "ncbi": [277, 320, 602], "nlm": [277, 320, 602], "nih": [277, 320, 602], "gov": [277, 320, 602], "12575463": [277, 320, 602], "encyclopedia": 277, "php": 277, "international_system_of_unit": 277, "oldid": 277, "982683558": 277, "neuralynx": 278, "read_raw_neuralynx": 278, "11969": 278, "kristijan": 278, "armeni": 278, "ivan": 278, "skelin": 278, "11884": 278, "dmitrii": [278, 291], "altukhov": [278, 291], "11685": 278, "11891": 278, "anchor": 278, "incrementor": 278, "11890": 278, "complement": [278, 320], "11918": 278, "11769": 278, "nikolai": [278, 303], "chapochnikov": [278, 303], "cumul": [278, 424, 425, 426, 635], "11919": 278, "scheltienn": [278, 295, 303, 304, 305, 306, 307, 308, 953], "12001": 278, "hamza": [278, 308], "abdelhedi": [278, 308], "11926": 278, "11306": 278, "12067": 278, "montage_unit": [278, 306, 567, 683, 694], "11925": 278, "11951": 278, "11803": 278, "12036": 278, "refactor": [278, 283, 286, 294], "11964": 278, "roujanski": [278, 288], "12098": 278, "12181": 278, "check_vers": [278, 456, 782], "12146": 278, "12142": 278, "12050": 278, "12103": 278, "11942": 278, "uievent": [278, 915], "12057": 278, "santeri": [278, 306, 307], "ruuskanen": [278, 306, 307], "12105": 278, "judi": [278, 294], "zhu": [278, 294], "12118": 278, "12026": 278, "erica": [278, 294, 295], "12160": 278, "jacob": [278, 307, 308], "woessner": [278, 307, 308], "splash": [278, 307, 331, 332, 550, 551, 635, 865, 882, 888], "12185": 278, "12194": 278, "12168": 278, "rasmu": [278, 287], "aagaard": 278, "unsync": 278, "11950": 278, "qian": 278, "chu": 278, "11958": 278, "gilbert": 278, "test_adjacency_matches_ft": 278, "test_fetch_uncompressed_fil": 278, "12041": 278, "maksym": 278, "balatsko": 278, "11608": 278, "zubarev": 278, "errantli": [278, 289, 292, 293, 294, 306, 308], "12121": 278, "pablo": [278, 283], "mainar": 278, "11876": 278, "11896": 278, "12154": 278, "birthdai": [278, 292, 331, 332, 333, 334, 336, 550, 551, 552], "11912": 278, "12186": 278, "trip": [278, 292, 294, 303], "11934": 278, "compliant": [278, 312, 764], "11915": 278, "benerradi": [278, 292, 294, 295, 304], "11927": 278, "trame": [278, 312], "11956": 278, "11910": 278, "get_view": [278, 304, 833], "11946": 278, "12155": 278, "12167": 278, "11999": 278, "11952": 278, "12145": 278, "glitch": 278, "12038": 278, "12147": 278, "12164": 278, "11960": 278, "12017": 278, "12044": 278, "12004": 278, "apply_offset": [278, 570], "12003": 278, "prune": 278, "12010": 278, "12025": 278, "12080": 278, "12019": 278, "12078": 278, "12113": 278, "12122": 278, "12165": 278, "12198": 278, "12192": 278, "12189": 278, "12205": 278, "apply_maxfilt": 278, "11938": 278, "pickl": 278, "savetxt": 278, "delimit": [278, 325], "newlin": 278, "11937": 278, "wherev": [278, 677], "11907": 278, "reset_camera": [278, 833, 903], "favor": [278, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 301, 302, 303, 305, 306, 307, 308, 312, 320], "scrollabl": [278, 542], "head_insid": [278, 542], "guess_mri_subject": [278, 542], "advanced_rend": [278, 542], "commit": [279, 280, 281, 282, 290, 296, 297, 298, 299, 300, 301, 302, 309, 310, 312], "committ": [279, 280, 281, 282, 283, 290, 296, 297, 298, 299, 300, 301, 302], "ellen": 279, "lau": [279, 292], "ruzich": 279, "keypress": [280, 294], "timedecod": [280, 282, 284, 285], "freeview_bem_surfac": 280, "skirt": [280, 305], "martinez": [280, 283], "clarifi": [280, 292, 304, 310], "jeythekei": [280, 287, 288], "lorenzo": [280, 284], "desanti": 280, "add_slider_to_sect": [280, 294, 295], "federico": [280, 281, 282, 283, 286, 291, 295, 301, 302, 303], "raimondo": [280, 281, 282, 283, 285, 286, 291, 292, 293, 295, 301, 302], "bailei": [280, 282, 283, 285, 286, 294], "_setup_vmin_vmax": 280, "concatenatechannel": 280, "epochsvector": [280, 283], "ledoit_wolf": [280, 423], "redesign": [280, 301], "rewrot": 280, "gsoc": [280, 287, 312], "plot_image_epoch": 280, "preload_data": [280, 302], "rawbrainvis": [280, 561], "santi": 280, "natali": [280, 282], "klein": [280, 282], "fede": [280, 281, 282, 285, 286, 291, 292, 293, 295], "roan": [280, 301, 302], "laplant": [280, 301, 302], "wakeman": [280, 298, 301, 302], "googl": [281, 312, 315, 322, 900], "summer": [281, 312, 322], "nenonen": 281, "nicolet": [281, 320, 578], "generalizationacrosstim": [281, 282, 284, 285, 302], "add_eeg_average_proj": 281, "silent": [281, 289, 295, 307, 318, 326, 331, 332, 475, 671], "add_eeg_ref": [281, 283], "n_samp_tot": 281, "rudiuk": [281, 283, 284, 285], "emilyps14": 281, "lennyvarghes": 281, "marian": [281, 295, 305], "dovgialo": [281, 295, 305], "show_info": 282, "neuroscan": [282, 284, 320, 512], "cwt_morlet": [282, 283], "read_select": [282, 294], "compute_raw_psd": [282, 302], "compute_epochs_psd": [282, 302], "614990234": 282, "00064103": 282, "99897607": 282, "minor": [282, 283, 309, 312], "spectral_connect": [282, 285, 291, 294], "vision": [282, 310, 561], "orth": [282, 427], "train_tim": 282, "ecg_criterion": 282, "eog_criterion": 282, "replace_ev": [282, 600], "rawedf": [282, 559, 566, 581], "coordinan": 282, "plot_tran": [282, 283, 284, 285], "ware": 282, "score_mod": 282, "stimserv": [282, 300], "superflu": [282, 284], "ip": 282, "mesh_color": 282, "brain_color": [282, 894], "multitaper_psd": 282, "dig_kind": [282, 373, 374, 502], "inconsist": [282, 289, 303, 307], "pseudoinvers": [282, 285, 320, 635, 646], "choleski": [282, 320, 769], "vertor": 282, "renorm": 282, "drop_bad_epoch": [282, 290], "drop_epoch": 282, "do_forward_solut": 282, "chronolog": [282, 295], "kaichogami": 282, "cl\u00e9ment": [282, 302], "moutard": [282, 302], "camilo": [282, 283], "lamu": [282, 283], "martinbab": 282, "mikolaj": [282, 283, 284, 285, 286, 287, 291, 292, 293], "nikla": [282, 284], "wilm": [282, 284], "sagun": 282, "pai": [282, 309], "sourav": 282, "dupr\u00e9": [282, 287], "la": [282, 287, 291, 306, 307, 317, 322, 953], "kambyses": 282, "pbnsilva": 282, "sviter": [282, 302], "zuxfoucault": 282, "csd_arrai": [283, 286], "nick": [283, 301], "foti": 283, "pop_prop": 283, "maryland": 283, "kit2fiff": [283, 295, 300, 301], "read_dig_montag": [283, 284, 285, 289], "preview": 283, "repr": [283, 291, 292, 305, 306], "selector": [283, 331, 332, 333, 334, 336, 550, 551, 865, 888, 891], "filterchpi": [283, 323], "browse_raw": [283, 288, 289, 292, 294, 309], "raimundo": 283, "transform_into": [283, 483, 490], "hid": 283, "aria": 283, "merge_grad": [283, 333, 334, 873], "assertionerror": [283, 284, 295], "duma": 283, "fieldtripcli": 283, "get_data_as_epoch": 283, "crash": [283, 285, 288, 291, 325], "unitsposit": 283, "mullin": 283, "bva": 283, "latin": [283, 287, 295, 303], "strictest": 283, "weakest": [283, 333, 334, 869], "hojlund": 283, "niediek": 283, "slight": [283, 324], "revert": [283, 331, 332, 702, 927], "csd_epoch": [283, 286], "csd_compute_epoch": 283, "ev2": 283, "\u00b5": 283, "aru": 283, "unsupport": 283, "pysurf": [283, 291, 295, 298, 299], "config_opt": 283, "favour": 283, "compli": [283, 285, 948], "single_trial_pow": 283, "uint16_codec": [283, 567, 688, 694], "f\u00e9lix": 283, "keith": [283, 284, 288, 289, 293], "doell": [283, 284, 288, 289, 293], "kraus": 283, "shlomo": 283, "poil": 283, "yaroslav": [283, 284, 286, 290, 300], "halchenko": [283, 284, 286, 290, 300], "artemis123": [284, 287, 304, 320, 558], "toddler": 284, "fasttrack": 284, "boggess": [284, 285], "tf_dic": [284, 294], "brovelli": 284, "score_sourc": [284, 288, 635, 954], "to_spher": [284, 331, 332, 333, 334, 336, 550, 551, 891], "improperli": [284, 289, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 613, 875], "_plot_topo_onpick": 284, "erkka": [284, 287, 306, 307], "heinila": [284, 287, 306, 307], "read_montag": [284, 285, 287, 289, 302], "rtepoch": [284, 287, 300, 485], "rantala": 284, "_bad_drop": 284, "_filenam": 284, "pasler": 284, "partit": [284, 320, 331, 332, 428, 550, 551, 771], "predict_mod": 284, "chanloc": 284, "conflict": [284, 309, 337, 940, 945], "dualiti": [284, 285, 286, 547, 548], "mxne_optim": [284, 285, 286], "dgap_l21": 284, "band_pass_filt": 284, "band_stop_filt": 284, "low_pass_filt": 284, "high_pass_filt": 284, "eeg_sensor": 284, "typecheck": 284, "mislead": [284, 303], "nz": [284, 320], "leonardo": 284, "barbosa": 284, "mne_root": [284, 320, 947], "protect": [284, 295], "crist\u00f3bal": [284, 285, 288], "mo\u00ebnn": [284, 285, 288], "loccoz": [284, 285, 288], "hermann": 284, "sonntag": 284, "jakub": 284, "kaczmarzyk": 284, "lorenz": [284, 287], "esch": [284, 287], "alfin": 284, "matteo": [284, 294], "visconti": 284, "reppling": [284, 285, 286, 287, 288, 291], "bvef": [285, 398], "baptist": 285, "schiratti": 285, "utilis": 285, "gdf": [285, 287, 288, 289, 293, 320, 559, 566, 574], "find_edf_ev": [285, 288], "dgap_l21l1": 285, "find_ch_connect": [285, 289, 292], "ramonapariciog": 285, "get_pos2d": 285, "\u03c7\u00b2": 285, "writabl": 285, "anti": [285, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 901], "plot_roi_erpimage_by_rt": 285, "spatial_src_connect": [285, 292], "spatio_temporal_src_connect": [285, 292], "hcpmmp": [285, 319], "compute_morph_matrix": [285, 287], "return_drop_log": [285, 647, 648], "ansi": 285, "codepag": 285, "okba": 285, "bekhelifi": 285, "duemos": 285, "nielsen": 285, "luk\u00e1\u0161": 285, "hejtm\u00e1nek": 285, "_v": [285, 331, 332, 333, 334], "_virtual": 285, "char": [285, 303], "treatment": 285, "alejandro": [285, 286, 292], "weinstein": [285, 286, 292], "mrn": 285, "reformat": 285, "lcmv_epoch": [285, 286, 299], "lcmv_raw": [285, 286], "plot_gat_tim": 285, "plot_gat_matrix": 285, "read_events_eeglab": 285, "tf_lcmv": 285, "scale_tim": 285, "scalings_tim": 285, "akshay0724": 285, "dykstra": [285, 299, 300, 301, 302], "laetitia": 285, "grabot": 285, "proulx": 285, "apariciogarcia": 285, "robin": 285, "tibor": 285, "schirrmeist": 285, "rodrigo": 285, "h\u00fcbner": 285, "gutstein": [285, 287], "kern": [285, 304, 308], "nathali": [286, 288], "gayraud": [286, 288], "mayavi": [286, 292, 295, 302, 312], "tilt": [286, 320, 336, 562, 833], "workaround": 286, "read_annotations_eeglab": [286, 287], "builtin": [286, 309, 390, 391, 833], "trainsform": 286, "sophi": [286, 291], "dubarri": 286, "tf_mxne_optim": 286, "alpha_spac": [286, 548], "alpha_tim": [286, 548], "dgap_freq": [286, 547, 548], "multidictionari": 286, "base_estim": [286, 486, 493], "cp": [286, 320, 323, 947], "add_figs_to_sect": [286, 294, 295, 302], "bypass": [286, 309], "failur": [286, 309], "unread": [286, 303, 320], "keep_ecg": [286, 652], "bdf": [286, 288, 289, 291, 300, 320, 559, 566, 574], "anymor": [286, 291, 293, 294, 303, 305, 635, 949], "image_mask": 286, "capit": [286, 392], "clean_nam": [286, 564], "oleh": 286, "kozynet": 286, "braboszcz": 286, "desislava": 286, "petkova": 286, "krzemi\u0144ski": 286, "hornberg": 286, "henrich": [286, 287, 291], "kolkhorst": [286, 287, 291], "evan": [286, 287, 293, 295, 304], "juergen": [286, 301], "kambiz": [286, 287], "tavabi": [286, 287], "katrin": 286, "leinweb": 286, "larri": [286, 288], "eisenman": [286, 288], "hartmann": [287, 291, 292, 293, 303], "dirk": [287, 288, 289], "g\u00fctlin": [287, 288, 289], "zetter": 287, "molfes": 287, "sphx_glr_auto_examples_datasets_plot_opm_rest_data": 287, "pymatread": [287, 305, 945], "trig_shift_by_typ": 287, "split_nam": [287, 292, 293, 295, 331, 332, 550, 551], "read_annotations_brainvis": 287, "bcd": [287, 295, 547], "get_blas_func": 287, "_compute_covariance_auto": 287, "flash30": [287, 288, 304, 308, 320, 323, 371], "onewai": 287, "sara": [287, 292], "sommariva": [287, 292], "marcin": 287, "koculak": 287, "buildup": 287, "incom": 287, "bethard": 287, "ed": [287, 743], "thrown": [287, 833], "resiz": [287, 303, 331, 332, 333, 334, 550, 551, 783, 785, 786, 787, 788, 789, 874], "buffer_size_sec": [287, 549, 550, 551], "parser": [287, 324, 512], "dateutil": 287, "jasper": 287, "den": [287, 294], "bosch": 287, "_current": 287, "symlink": [287, 323, 375, 377], "unit_noise_gain": 287, "buildqa": 287, "synthesi": [287, 288], "sti014": [287, 324, 524], "annotmap": 287, "runtimeexcept": 287, "fmt": [287, 320, 331, 332, 333, 334, 513, 514, 516, 550, 551], "morph_precomput": 287, "morph_data_precomput": 287, "pycuda": 287, "warn_explicit": 287, "save_stc_as_volum": 287, "save_as_volum": [287, 302, 346, 347], "stop_receive_thread": 287, "memmap": [287, 331, 332, 333, 334, 550, 551, 725, 730, 783, 785, 786, 787, 788, 789], "banvil": [287, 288, 292, 295], "johan": 287, "meer": 287, "manu": 287, "sutela": 287, "perri": 287, "sergei": 287, "antopolskii": 287, "teekuninga": 287, "jochmann": 287, "tristan": [287, 294], "stenner": [287, 294], "filtord": [288, 323, 550, 551, 888], "hoc": [288, 590, 948], "drop_ref": [288, 724], "jevri": [288, 289, 306, 307], "card": [288, 940, 947], "mark_flat": [288, 291, 292], "mixin": [288, 301], "channel_wis": [288, 331, 332, 333, 334, 550, 551], "__repr__": [288, 303], "lslclient": 288, "lsl": [288, 312], "nikola": [288, 292], "chala": 288, "mocklslstream": 288, "fault": 288, "vmrk": [288, 304, 317, 516, 550, 551, 688], "kovrig": 288, "n_pad": 288, "bruno": 288, "nicenboim": 288, "32bit": 288, "edge_": 288, "topolog": [288, 295, 303, 316, 323, 376, 434, 482, 502, 533, 690, 719, 721, 928], "lang": [288, 341], "v0": [288, 301, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 352, 355, 360, 364, 365, 367, 373, 374, 375, 377, 380, 381, 385, 386, 389, 396, 398, 407, 408, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 439, 440, 441, 457, 459, 460, 482, 483, 485, 487, 489, 490, 494, 495, 502, 504, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 526, 527, 530, 531, 536, 540, 542, 545, 547, 548, 549, 550, 551, 559, 562, 563, 564, 566, 567, 568, 572, 575, 580, 587, 589, 590, 591, 592, 593, 594, 595, 596, 598, 602, 603, 604, 605, 608, 609, 610, 615, 617, 618, 619, 621, 622, 626, 627, 628, 634, 635, 636, 638, 644, 645, 646, 647, 648, 650, 652, 653, 659, 660, 670, 678, 684, 690, 694, 696, 697, 701, 702, 705, 713, 715, 716, 718, 724, 727, 732, 734, 735, 737, 746, 747, 748, 749, 750, 764, 766, 778, 782, 783, 784, 785, 786, 787, 788, 789, 802, 803, 804, 807, 812, 813, 815, 816, 817, 818, 821, 823, 830, 833, 834, 835, 837, 851, 852, 853, 854, 858, 859, 862, 863, 865, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 887, 888, 889, 890, 891, 892, 893, 895, 897, 898, 899, 901, 904, 921, 926, 930, 933, 952], "dicom": [288, 317], "hidpi": [288, 289], "retina": 288, "hash": [288, 456, 462], "mishandl": 288, "haslach": 288, "clean_eog_ecg": 288, "ascend": [288, 705, 876, 883, 935], "_criterion": 288, "detect_artifact": [288, 291, 295], "katarina": 288, "slama": 288, "limit_depth_ch": [288, 527], "rework": [288, 365], "patch_info": 288, "sebastian": [288, 291], "castano": 288, "finder": 288, "formerli": [288, 654], "enclos": [288, 320, 338, 339, 342, 345, 346, 347, 833, 893, 898], "xml": [289, 320, 399, 401, 515, 701], "read_dig_captrack": [289, 292], "captrak": [289, 292, 399], "bvct": [289, 320, 399], "polici": [289, 310], "markerfil": 289, "brainmask": [289, 291, 323, 377, 935], "autorecon1": [289, 377, 935], "curri": [289, 293, 295, 308, 565, 688], "infrastructur": [289, 310], "complic": [289, 309], "10x": 289, "jit": 289, "plot_sensors_connect": [289, 294], "ryb\u00e1\u0159": 289, "mri_spac": [289, 343], "1970": [289, 291], "abram": 289, "hindl": 289, "mv": [289, 292, 319], "2gb": [289, 331, 332, 550, 551], "joshua": [289, 295, 303, 308], "eberhard": 289, "eich": 289, "radman": 289, "macosx": [289, 294], "erron": [289, 294, 295, 304, 319], "pycord": 289, "set_dig": 289, "update_ch_nam": 289, "raweeglab": [289, 567], "raise_if_subset": 289, "bump": [289, 291], "zen": [289, 294, 331, 332, 550, 551, 635, 865, 882, 888], "smartshield": [289, 336], "_smsh_": 289, "_smartshield": 289, "max_tick": 289, "truncate_xaxi": [289, 859], "show_legend": 289, "textual": [289, 319], "biosig": 289, "nightli": [290, 947], "pick_types_evok": [290, 302], "migrat": [290, 294, 635], "upgrad": [290, 388, 550], "herbst": 291, "allow_line_onli": [291, 416], "set_meas_d": [291, 292, 308, 331, 332, 333, 334, 336, 550, 551], "victor": 291, "ferat": 291, "mohammad": 291, "daneshzand": 291, "dist_limit": [291, 336, 344, 349, 413], "return_event_id": [291, 331, 332, 697, 785, 786, 787], "plv": [291, 619], "match_cas": [291, 331, 332, 333, 334, 336, 550, 551], "nirx": [291, 295, 320, 580], "epochs_color": 291, "setup_forward_model": [291, 292], "prepare_bem_model": 291, "bdip": [291, 329, 692], "besa": [291, 304, 398, 698], "return_n_it": [291, 668], "n_iter_": [291, 635], "eg": [291, 398], "force_equ": [291, 602], "reappli": [291, 305, 635, 879, 927], "compromis": 291, "nfree": [291, 328, 329], "roc_auc_ovo": 291, "roc_auc_ovo_weight": 291, "old_tim": 291, "unix": [291, 948], "subprocess": 291, "servic": [291, 300, 310], "anticip": [291, 310], "cpp": [291, 948], "htp": 291, "insuffici": [291, 940], "demetr": 291, "kosta": 291, "glyph": [291, 304, 329, 339, 345, 347, 833, 851, 863, 894, 898, 900], "gridsearchcv": 291, "chun": 291, "hui": 291, "yu": [291, 292, 294], "luo": [291, 292, 294], "fu": 291, "geoff": 291, "brookshir": 291, "eegmi_url": 291, "ramiro": 291, "gatti": 291, "tandem": 291, "point_spread_funct": 291, "cross_talk_funct": 291, "ariel": 291, "rokem": 291, "torr": [291, 306, 307], "jos\u00e9": 291, "garc\u00eda": 291, "moham": 291, "sherif": 291, "nataliia": 291, "kozhemiako": 291, "legrand": 291, "f\u00e9rat": 291, "rahul": 292, "nadkarni": 292, "m\u00f8ller": 292, "andersen": 292, "kyle": [292, 293], "mathewson": [292, 293], "sedivi": 292, "donckt": 292, "simeon": [292, 305], "svea": 292, "meyer": 292, "lx37": 292, "bierer": [292, 294], "divis": [292, 320], "rai": 292, "n_iter_sdr": 292, "single_volum": [292, 732], "subvolum": [292, 346, 347], "bg_img": [292, 346, 347, 899], "alia": [292, 304, 309, 331, 332, 333, 334, 336, 344, 550, 551, 677, 831, 851, 888], "immut": 292, "show_orient": [292, 853], "on_miss": [292, 305, 326, 331, 332, 333, 334, 336, 351, 352, 384, 417, 418, 475, 510, 530, 550, 551, 783, 785, 786, 787, 788, 789, 868], "max_pca_compon": [292, 293], "fxaa": 292, "_split": 292, "_part": 292, "read_raw_xxx": 292, "esss": [292, 294, 312, 646, 659, 670], "blender": [292, 304], "ricoh": [292, 576, 696], "component_ord": [292, 483], "mutual_info": [292, 483], "simpler": 292, "persyst": [292, 320, 582], "snirf": [292, 294, 295, 307, 583], "permit": 292, "src_mri_t": [292, 344], "use_lut": [292, 344], "outermost": 292, "wrongli": [292, 306], "sfp": [292, 398], "add_bem_to_sect": [292, 294, 295, 302], "hull": [292, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 852, 867, 874, 878, 887, 890, 895, 897], "event_rep": [292, 326, 331], "unicod": [292, 301, 323, 782], "conjug": 292, "watersh": [292, 317, 377], "throw": 292, "trialinfo": [292, 695], "read_ch_connect": [292, 301], "spatial_dist_connect": 292, "spatial_inter_hemi_connect": 292, "spatial_tris_connect": 292, "spatio_temporal_dist_connect": 292, "spatio_temporal_tris_connect": 292, "reserv": [292, 309, 310, 389], "normalize_fwd": 292, "n_col": [292, 395, 635, 784, 787, 861, 881], "stc_mix": 292, "use_dev_head_tran": [292, 639], "spell": 292, "captrack": 292, "annotate_flat": [292, 303], "anton": 292, "waniek": 292, "harmelen": 292, "chapochn": 292, "mshader": 292, "austin": 293, "hurst": 293, "aniket": 293, "pradhan": 293, "eduard": [293, 294, 303, 305], "ort": [293, 294, 303, 305], "hathawai": [293, 295, 304], "hongjiang": 293, "stout": [293, 295, 303], "kuziek": 293, "qianliang": 293, "tod": 293, "flak": 293, "mffpy": [293, 515], "8354": 293, "7070": 293, "imgag": 293, "boxi": [293, 320, 560], "7717": 293, "8275": 293, "8445": 293, "8553": 293, "clearer": [293, 295, 303, 341], "8351": 293, "8190": 293, "realign": [293, 319, 684], "8539": 293, "8379": 293, "8366": 293, "8642": 293, "8447": 293, "8323": 293, "reset_drop_log_select": [293, 331, 332], "8449": 293, "8402": 293, "8460": 293, "8532": 293, "8482": 293, "8608": 293, "8502": 293, "8515": 293, "on_header_miss": [293, 407], "8622": 293, "8862": [293, 294], "8381": 293, "8584": 293, "8442": 293, "8534": 293, "8624": 293, "8519": 293, "8452": 293, "8415": 293, "8395": 293, "8658": 293, "cascad": 293, "8633": 293, "8580": 293, "8400": 293, "test_egi": 293, "mandatorili": 293, "8474": 293, "8339": 293, "8558": 293, "s390x": 293, "8618": 293, "8594": 293, "8610": 293, "8377": 293, "8285": 293, "tight_layout": 293, "8344": 293, "8318": 293, "8637": 293, "8306": 293, "overflow": 293, "8448": 293, "8283": 293, "name_split": 293, "01_meg": 293, "name_meg": 293, "8464": 293, "8326": 293, "8343": 293, "8425": 293, "8317": 293, "8663": 293, "8320": 293, "8303": 293, "8484": 293, "8349": 293, "max_pca_components_": 293, "8321": 293, "8341": 293, "999999": [293, 635], "n_components_": [293, 635], "everyhwer": 293, "8368": 293, "8393": 293, "ch_info": [293, 724], "8416": 293, "8434": 293, "8486": 293, "8491": 293, "8492": 293, "led": [293, 295, 303, 308], "inset": [293, 859], "8545": 293, "8590": 293, "tukei": 293, "8542": 293, "8520": 293, "8589": 293, "8564": 293, "doc": [293, 309, 312, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 728, 783, 785, 786, 788, 789, 801, 811, 852, 867, 874, 878, 887, 890, 895, 897, 935], "tstart": [293, 299, 323, 338, 339, 342, 345, 346, 347, 647, 648, 660, 661, 663], "8605": 293, "8374": 293, "8357": 293, "8389": 293, "justu": 293, "schwabed": 293, "mad": [293, 300, 301, 302], "jensen": [293, 300, 301, 302], "sumalyo": 294, "datta": 294, "pade": 294, "koehler": 294, "rotem": 294, "falach": 294, "sanderson": 294, "enrico": 294, "varano": 294, "valerii": [294, 295, 305], "chirkov": [294, 295, 305], "anelli": 294, "apoorva": 294, "karek": 294, "silvia": 294, "cotroneo": 294, "pari": [294, 322], "maggi": 294, "eeglabio": [294, 331, 332, 513, 516, 550, 551], "9192": 294, "9285": 294, "9278": 294, "9124": 294, "9203": 294, "9174": 294, "9088": 294, "9156": 294, "9043": 294, "9096": 294, "citat": [294, 309], "8867": 294, "8739": 294, "9169": 294, "yokogawa": 294, "8813": 294, "match_alia": [294, 304, 331, 332, 333, 334, 336, 550, 551], "8799": 294, "ipyvtk_simpl": 294, "8503": 294, "allow_dupl": [294, 331, 332, 333, 334, 336, 380, 408, 550, 551, 718], "8346": 294, "8896": 294, "8723": 294, "8738": 294, "8789": 294, "incomplet": [294, 312, 940], "9268": 294, "8790": 294, "8697": 294, "8801": 294, "8829": 294, "8744": 294, "add_custom_j": [294, 341, 954], "add_custom_css": [294, 341, 954], "javascript": [294, 341], "8762": 294, "9037": 294, "8793": 294, "projoff": [294, 323], "9262": 294, "8806": 294, "starstim": 294, "enobio": 294, "nedf": [294, 308, 577], "8734": 294, "8760": 294, "8783": 294, "8822": 294, "8771": 294, "8805": 294, "canon": [294, 314, 434, 558, 833, 851], "8794": 294, "auto_clos": 294, "8730": 294, "8841": 294, "respiratori": [294, 331, 332, 333, 334, 550, 551, 632, 783, 785, 786, 787, 788, 789], "8858": 294, "checker": 294, "pylanc": 294, "8874": 294, "interobail": 294, "8868": 294, "qt_mac_wants_lay": 294, "pyqt": [294, 945], "8959": 294, "8879": 294, "8834": 294, "9023": 294, "9015": 294, "9087": 294, "9113": 294, "add_estimated_fiduci": [294, 380, 954], "9118": 294, "sex": [294, 306, 336], "keep_hi": [294, 323, 331, 332, 333, 334, 336, 550, 551, 552], "9103": 294, "9175": 294, "9149": 294, "9166": 294, "9210": 294, "9136": 294, "9241": 294, "9261": 294, "9269": 294, "9270": 294, "9141": 294, "9347": 294, "misbehav": 294, "8013": 294, "9207": 294, "9187": 294, "9151": 294, "9162": 294, "9152": 294, "x_label": 294, "9115": 294, "9062": 294, "8989": 294, "8839": 294, "stim_pick": [294, 550, 551], "8844": 294, "8311": 294, "8688": 294, "8983": 294, "superset": 294, "8675": 294, "8713": 294, "8689": 294, "8954": 294, "8884": 294, "num_sampl": 294, "duration_in_sec": 294, "8712": 294, "8780": 294, "8804": 294, "8842": 294, "8857": 294, "9315": 294, "overwritten": [294, 331, 332, 333, 334, 336, 457, 550, 551, 552, 650, 671, 783, 785, 786, 787, 788, 789], "8956": 294, "9284": 294, "forev": [294, 331, 332], "9317": 294, "8845": 294, "8811": 294, "8736": 294, "8831": 294, "8728": 294, "8731": 294, "8996": 294, "8752": 294, "8759": 294, "8775": 294, "8800": 294, "8817": 294, "8821": 294, "8856": 294, "viewer": [294, 312, 319, 333, 334, 338, 339, 342, 345, 346, 347, 833, 835, 870, 893, 898], "8965": 294, "8985": 294, "8891": 294, "8963": 294, "9109": 294, "9178": 294, "9252": 294, "concis": [294, 303], "9027": 294, "9236": 294, "9246": 294, "9305": 294, "9277": 294, "9099": 294, "cbar_label": 294, "9248": 294, "8870": 294, "9122": 294, "9033": 294, "9340": 294, "ana": 294, "radanov": 294, "catalina": [294, 944], "magalvan": 294, "mista": 294, "christina": 294, "zhao": 294, "giorgio": 294, "marinato": 294, "jori": 294, "bossch": 294, "gensollen": 294, "treguer": 294, "timon": [294, 306, 307, 317], "merk": [294, 306, 307], "julien": 295, "dominiqu": [295, 304], "makowski": [295, 304], "derollepot": 295, "sosulski": [295, 303], "xiaokai": 295, "xia": 295, "bannier": 295, "darin": 295, "erat": 295, "sleiter": 295, "gate": 295, "reza": [295, 304], "shoorangiz": [295, 304], "evgeni": 295, "goldstein": 295, "teve": [295, 303], "riessariu": 295, "stargardski": 295, "9801": 295, "9575": 295, "nirsport2": 295, "9348": 295, "9401": 295, "9376": 295, "9430": 295, "9481": 295, "9637": 295, "9872": 295, "9782": 295, "9858": 295, "9640": 295, "6888": 295, "9892": 295, "9725": 295, "ckdtree": 295, "9568": 295, "9643": 295, "9369": 295, "9427": 295, "hitachi": [295, 575], "9391": 295, "9396": 295, "9424": 295, "9403": 295, "9463": 295, "9431": 295, "9443": 295, "9406": 295, "9438": 295, "datablock": 295, "acquist": 295, "9437": 295, "9445": 295, "9419": 295, "9458": 295, "9444": 295, "ct": [295, 303, 665, 823], "9503": 295, "mr": [295, 303, 320, 823], "9484": 295, "9697": 295, "9468": 295, "9514": 295, "9541": 295, "9519": 295, "9525": 295, "9529": 295, "9558": 295, "9555": 295, "9553": 295, "warp_montage_volum": [295, 307], "insens": 295, "9544": 295, "9556": 295, "9578": 295, "9570": 295, "9545": 295, "9540": 295, "9601": 295, "9605": 295, "abort": 295, "9614": 295, "9516": 295, "9618": 295, "localit": [295, 404], "9658": 295, "9585": 295, "9682": 295, "remove_fiduci": [295, 380], "circumst": [295, 304, 380, 512], "9684": 295, "9688": [295, 320], "9789": 295, "9694": 295, "9586": 295, "9742": 295, "9796": 295, "9763": 295, "9784": 295, "9810": 295, "revamp": 295, "9754": 295, "9847": 295, "9860": 295, "9861": 295, "9862": 295, "9863": 295, "9871": 295, "9881": 295, "9891": 295, "9795": 295, "9800": 295, "tild": [295, 307, 320, 610], "9613": 295, "9845": 295, "9851": 295, "9869": 295, "by_event_typ": [295, 331, 332], "9859": 295, "9687": 295, "9708": 295, "typo": [295, 309, 311], "9706": 295, "9378": 295, "ceo": [295, 310], "cdt": [295, 565, 688], "9381": 295, "9712": 295, "9719": 295, "9765": 295, "9849": 295, "9897": 295, "9920": 295, "9384": 295, "9404": 295, "9435": 295, "9531": 295, "9447": 295, "9612": 295, "9831": 295, "9522": 295, "9485": 295, "9513": 295, "9489": 295, "9524": 295, "9603": 295, "9528": 295, "imposs": 295, "9893": 295, "9535": 295, "9564": 295, "9565": 295, "spawn": [295, 500], "9629": 295, "9771": 295, "9607": 295, "9663": 295, "9630": 295, "9580": 295, "9758": 295, "dollar": 295, "9695": 295, "9746": 295, "9799": 295, "9804": 295, "9777": 295, "9780": 295, "9933": 295, "9864": 295, "9873": 295, "9940": 295, "9867": 295, "9904": 295, "launch": [295, 309, 542, 623, 940, 945, 947], "mne_kit_gui": 295, "niter": [295, 823], "finer": [295, 305, 813, 816], "9505": 295, "9596": 295, "prox": 295, "cd": [295, 309, 320, 547, 935, 947], "outperform": 295, "9608": 295, "9493": 295, "9685": 295, "dataset_nam": [295, 456, 462], "has_": 295, "_data": 295, "9781": 295, "add_images_to_sect": [295, 302], "add_htmls_to_sect": [295, 302], "sort_sect": 295, "sort_cont": [295, 341], "9815": 295, "center_cmap": 295, "pathlength": [295, 672], "9843": 295, "9909": 295, "gansheng": 295, "josh": 295, "koen": 295, "luka": [295, 301, 304, 305, 306, 307], "hecker": [295, 306, 307], "steve": [295, 303], "matindi": [295, 303], "l21": [297, 298], "speedup": [297, 298], "backport": [297, 309], "mne_analyz": [297, 312, 317, 344, 748, 850, 947], "mne_compute_proj_ecg": 297, "mne_compute_proj_eog": [297, 299], "mne_maxfilt": 297, "tm": [297, 320], "loui": 297, "thibault": 297, "brad": [297, 299, 301], "buran": [297, 299, 301], "mne_dipole_fit": [298, 329], "nitim": [298, 488, 797, 803, 867], "clike": 298, "gzip": [298, 550, 551], "bessel": 298, "time_to_index": 298, "zeroth": [299, 326, 331], "kornblith": 299, "smarter": 299, "sources_as_epoch": 299, "psi": 299, "applicationon": 299, "proj_act": 299, "keep_comp": 299, "dest_comp": 299, "stimclient": 300, "rtclient": 300, "mockrtclient": 300, "polygon": [300, 328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 852, 867, 874, 878, 887, 890, 895, 897, 901], "trelli": 300, "debian": 300, "travi": [300, 308], "ki2fiff": 300, "anaconda": [300, 309, 940, 945, 946, 950], "pick_norm": 300, "write_stc": 300, "praveen": [300, 301], "sripad": [300, 301], "olivetti": 300, "ward": 301, "radic": 301, "tack": 301, "membership": [301, 331, 332, 333, 334, 550, 551, 635, 783, 785, 786, 787, 788, 789], "equalize_channnel": 301, "s\u00e9bastien": 301, "add_channels_epoch": [301, 305], "connector": 301, "client": [301, 302, 309], "cathi": 301, "nangini": 301, "events_list": [301, 432], "succinctli": 301, "breuer": 301, "aesthet": 301, "qunxi": 301, "drop_pick": 301, "labels_from_parc": 301, "parc_from_label": 301, "setno": 301, "plot_": 301, "marmaduk": [301, 302], "woodman": [301, 302], "tanai": 301, "saket": 301, "choudhari": 301, "add_sect": 302, "stereotact": [302, 320, 331, 332, 333, 334, 550, 551, 632, 633, 783, 785, 786, 787, 788, 789], "whiten_evok": 302, "oddbal": 302, "label_1": 302, "label_2": 302, "savitski": 302, "_baseraw": 302, "prof": 302, "decoupl": 302, "read_hsp": 302, "read_elp": 302, "write_hsp": 302, "write_mrk": 302, "label_time_cours": 302, "as_data_fram": 302, "textbox": 302, "iir_filter_raw": 302, "ingoo": 302, "kj": 302, "basil": 302, "pinsard": 302, "hafeza": 302, "anevar": 302, "manoj": 302, "kumar": 302, "tucker": 302, "use_orig_tim": [303, 325], "10396": 303, "michiru": [303, 304, 307], "kaneda": [303, 304, 307], "10089": 303, "senwen": 303, "deng": 303, "10076": 303, "zerfowski": 303, "10054": 303, "etienn": 303, "montalivet": 303, "10174": 303, "veillett": 303, "10307": 303, "10281": 303, "9952": 303, "10379": 303, "cval": [303, 821], "9922": 303, "9978": 303, "9994": 303, "9929": 303, "fill_hole_s": [303, 833], "hole": [303, 833], "debugg": [303, 309], "10042": 303, "10056": 303, "10077": 303, "load_bad_channel": [303, 550, 551, 954], "10102": 303, "10058": 303, "10109": 303, "10115": 303, "10119": 303, "feel": [303, 309, 310, 948], "10114": 303, "10116": 303, "dpi": 303, "10126": 303, "10129": 303, "10135": 303, "10142": 303, "10166": 303, "on_defect": [303, 434, 502, 533, 690, 719, 721, 928], "10175": 303, "drop_log_ignor": [303, 341], "10182": 303, "10186": 303, "10185": 303, "9969": 303, "10019": 303, "10200": 303, "10255": 303, "cube": [303, 329, 863], "10202": 303, "9972": 303, "10206": 303, "widget": [303, 833, 836], "10220": 303, "10230": 303, "10249": 303, "10243": 303, "10212": 303, "10222": 303, "10183": 303, "10247": 303, "10297": 303, "map_surfac": [303, 833], "10299": 303, "10330": 303, "remove_dipol": [303, 833], "remove_forward": [303, 833], "10373": [303, 304], "10384": 303, "10417": 303, "10418": 303, "10408": 303, "subsurfac": 303, "10421": 303, "10429": 303, "eberlein": 303, "10431": 303, "rawmff": 303, "10304": 303, "10361": 303, "shift_jist": 303, "10356": 303, "eog_ch": [303, 323, 562], "10093": 303, "adina": 303, "wagner": 303, "loadtxt": 303, "10189": 303, "zamberlan": 303, "10007": 303, "use_opengl": [303, 331, 332, 550, 551, 635, 865, 882, 888], "9957": 303, "9966": 303, "9998": 303, "9968": 303, "alphanumer": 303, "10002": 303, "9975": 303, "9980": 303, "9990": 303, "suboptim": 303, "9991": 303, "10004": 303, "9970": 303, "10021": 303, "roundtrip": [303, 336], "10040": 303, "10358": 303, "10047": 303, "10399": 303, "10073": 303, "10087": 303, "annotate_": 303, "meas_tim": 303, "10067": 303, "10118": 303, "10074": 303, "grant": [303, 309, 310, 322, 333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 613, 875], "10082": 303, "10112": 303, "10177": 303, "10127": 303, "10132": 303, "10095": 303, "10176": 303, "10210": 303, "10235": 303, "10267": 303, "unabl": [303, 310], "german": 303, "de_d": 303, "french": 303, "fr_fr": 303, "italian": 303, "it_it": 303, "10277": 303, "10292": 303, "10309": 303, "10265": 303, "10415": 303, "10289": 303, "10324": 303, "10342": 303, "10347": 303, "10313": 303, "10400": 303, "10335": 303, "10393": 303, "10392": 303, "10401": 303, "mne_qt_brows": [303, 304, 331, 332, 550, 551, 635, 865, 882, 888], "9960": 303, "10039": 303, "slash": [303, 319, 510], "10348": 303, "event_list": [303, 432], "10143": 303, "max_ori_out": 303, "10366": 303, "10323": 303, "tempita": 303, "10211": 303, "julia": 303, "guiomar": 303, "niso": 303, "gal\u00e1n": 303, "10974": 304, "ilia": 304, "machaira": 304, "10942": 304, "tziona": 304, "nessaiv": 304, "10922": 304, "mingjian": 304, "he": 304, "10736": 304, "jordan": 304, "drew": 304, "10632": 304, "courtemanch": 304, "ahdr": [304, 688], "10515": 304, "alessandro": 304, "tonin": 304, "10555": 304, "powel": 304, "10627": 304, "10615": 304, "overview_mod": [304, 331, 332, 550, 551, 635, 865, 882, 888], "10501": 304, "crop_by_annot": [304, 550, 551, 954], "10460": 304, "10544": 304, "10720": 304, "10464": 304, "10699": 304, "10534": 304, "head_sourc": [304, 329, 593, 863], "10568": 304, "joblib": [304, 312, 323, 331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 486, 493, 496, 499, 500, 526, 539, 541, 550, 551, 593, 596, 597, 608, 609, 618, 619, 640, 647, 648, 725, 731, 732, 734, 735, 736, 748, 770, 771, 772, 773, 774, 785, 788, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 814, 815, 816, 835, 867, 870, 889], "parallel_backend": 304, "10567": 304, "10533": 304, "10557": 304, "10591": 304, "10571": 304, "10587": 304, "hemoglobin": [304, 677], "10125": 304, "10606": 304, "10610": 304, "10614": 304, "10611": 304, "10633": 304, "10661": 304, "10668": 304, "10681": 304, "timeformat": 304, "yyyi": 304, "dd": [304, 512, 563], "_convert_tim": 304, "10674": 304, "10694": 304, "10572": 304, "10734": 304, "10284": 304, "10749": 304, "10788": 304, "avr": [304, 698], "mul": [304, 698], "10892": 304, "10940": 304, "vref": 304, "10823": 304, "10979": 304, "_project_onto_surfac": 304, "return_nn": 304, "10930": 304, "10927": 304, "nasri": 304, "hypnodyn": 304, "zmax": 304, "10754": 304, "frederik": 304, "weber": 304, "10718": 304, "gemein": [304, 305], "t1t2": 304, "10639": 304, "toivonen": 304, "10217": 304, "wang": 304, "10517": 304, "10470": 304, "dold": 304, "10485": 304, "10487": 304, "10500": 304, "10491": 304, "10662": 304, "10866": 304, "10957": 304, "10513": 304, "10493": 304, "10504": 304, "10705": 304, "10521": 304, "10547": 304, "10543": 304, "10912": 304, "10560": 304, "10619": 304, "10618": 304, "10638": 304, "10664": 304, "honor": 304, "10686": 304, "10685": 304, "10688": 304, "8754": 304, "10703": 304, "10730": 304, "10753": 304, "10765": 304, "po6": 304, "youtub": [304, 312], "10778": 304, "10802": 304, "10471": 304, "orig_format": [304, 549, 550, 551], "10851": 304, "10898": 304, "10990": 304, "10968": 304, "10936": 304, "10963": 304, "10978": 304, "10531": 304, "bilinear": 304, "smoother": [304, 320], "set_interpol": 304, "10617": 304, "flash5": [304, 320, 323, 371, 375], "mef05_": [304, 323, 371], "mef30_": [304, 323, 371], "10715": 304, "10950": 304, "10925": 304, "10945": 304, "adelin": 304, "fecker": 304, "ciok": 304, "archit": 304, "singhal": 304, "ashlei": 304, "beaslei": 304, "hamid": 304, "maymandi": 304, "naveen": 304, "srinivasan": 304, "sondr": 304, "foslien": 304, "11073": 305, "10656": 305, "gerster": [305, 306, 307], "10784": 305, "11011": 305, "11006": 305, "6233": 305, "10986": 305, "11048": 305, "8639": 305, "11083": 305, "redund": [305, 320, 423], "11051": 305, "starting_affin": [305, 823], "11020": 305, "11075": 305, "galvan": [305, 320, 331, 332, 333, 334, 550, 551, 632, 783, 785, 786, 787, 788, 789], "electroderm": 305, "11090": 305, "11108": 305, "10980": 305, "11099": 305, "11077": 305, "11094": 305, "11095": 305, "probe": [305, 575], "11186": 305, "11116": 305, "11147": 305, "11150": 305, "unscal": [305, 306, 544], "11185": 305, "utf8": [305, 559, 566, 688], "11154": 305, "11141": 305, "on_baselin": [305, 635, 879], "11232": 305, "11159": 305, "11196": 305, "unlabel": 305, "11074": 305, "sebastiaan": 305, "mathot": 305, "11072": 305, "chetan": 305, "gohil": 305, "clone": [305, 309, 486, 493, 940], "11004": 305, "carlstr\u00f6m": 305, "schad": 305, "sy": [305, 782, 945], "11190": 305, "wetzel": 305, "11019": 305, "sena": 305, "subject_id": [305, 833], "11049": 305, "11084": 305, "11145": 305, "11182": 305, "11040": 305, "11171": 305, "11181": 305, "11193": 305, "11102": 305, "11081": 305, "11191": 305, "6870": 305, "11197": 305, "11212": 305, "11203": 305, "11201": 305, "h\u00fcseyin": 305, "orkun": 305, "elma": 305, "futurewarn": [305, 309, 829], "deprecationwarn": 305, "11123": 305, "11050": 305, "show_toolbar": 305, "10184": 305, "11180": 305, "11046": 305, "welzel": 305, "luzpaz": 305, "11333": 306, "tooma": [306, 307], "anij\u00e4rv": [306, 307], "11237": 306, "11236": 306, "11241": 306, "11357": 306, "webp": [306, 341], "11359": 306, "11096": 306, "11353": 306, "11283": 306, "11329": 306, "edflib": [306, 516, 550, 551], "11375": 306, "hennei": [306, 307], "11310": 306, "11289": 306, "mauricio": [306, 307], "cesped": [306, 307], "tenorio": 306, "11235": 306, "hasegan": [306, 307], "11245": 306, "dinara": [306, 307], "issagaliyeva": [306, 307], "jennif": [306, 307], "behnk": [306, 307], "hakimeh": [306, 307], "aslsardroud": [306, 307], "pavel": [306, 307], "navratil": [306, 307], "ear_left": 306, "ear_right": 306, "11255": 306, "11263": 306, "ortiz": 306, "11351": 306, "enzo": [306, 307], "altamiranda": [306, 307], "reject_": 306, "11244": 306, "11303": 306, "11290": 306, "11248": 306, "11258": 306, "outli": 306, "11298": 306, "11345": 306, "11311": 306, "11300": 306, "11340": 306, "11318": 306, "11346": 306, "11344": 306, "11347": 306, "11293": 306, "11322": 306, "11369": 306, "11361": 306, "nowadai": 306, "interp_from": 306, "interp_kind": 306, "sym": [306, 797], "11371": 306, "brayet": [306, 307], "omer": [306, 307], "shubi": [306, 307], "11631": 307, "11469": 307, "sawradip": 307, "saha": 307, "11458": 307, "binn": 307, "ch_group": [307, 331, 332, 333, 334, 336, 550, 551, 891], "11465": 307, "hyonyoung": 307, "shin": 307, "fil": [307, 312, 317, 320, 573], "11366": 307, "11536": 307, "11470": 307, "ebert": 307, "11078": 307, "barth\u00e9lemi": 307, "11397": 307, "11401": 307, "11407": 307, "11166": 307, "11388": 307, "11556": 307, "11419": 307, "11430": 307, "11440": 307, "11436": 307, "microelectrod": 307, "11567": 307, "imwarp": 307, "diffeomorphicmap": [307, 343, 667, 821, 822, 823], "transform_point": 307, "11572": 307, "11614": 307, "10554": 307, "11152": 307, "11632": 307, "on_unit_chang": [307, 331, 332, 333, 334, 336, 550, 551], "11668": 307, "11679": 307, "qt6": 307, "aa_usehighdpipixmap": 307, "11662": 307, "florin": 307, "gave": [307, 319], "11479": 307, "stone": 307, "setuptool": 307, "11454": 307, "arn": 307, "pelzer": 307, "11666": 307, "timur": 307, "sokhin": 307, "11457": 307, "zvi": 307, "baratz": 307, "11505": 307, "fock": 307, "sanit": 307, "11399": 307, "11398": 307, "lta": [307, 706], "11402": 307, "11421": 307, "11427": 307, "11441": 307, "11450": 307, "11489": 307, "11473": 307, "11499": 307, "dialog": [307, 323, 331, 332, 333, 334, 336, 550, 551, 888, 891, 947], "11409": 307, "11537": 307, "11562": 307, "11563": 307, "11521": 307, "11569": 307, "11502": 307, "11607": 307, "11612": 307, "11664": 307, "11623": 307, "11654": 307, "11683": 307, "11616": 307, "aligned_ct": 307, "base_imag": [307, 665], "unalign": 307, "pick_channels_evok": 307, "11665": 307, "dimitri": 307, "orfano": 307, "giulio": 307, "nsx": [308, 581], "blackrock": [308, 581], "microsystem": [308, 581], "11432": 308, "proloi": 308, "11720": 308, "gennadii": 308, "belonosov": 308, "11736": 308, "quotat": 308, "11718": 308, "11744": 308, "diptyajit": 308, "11719": 308, "11746": 308, "11740": 308, "11770": 308, "show_byt": [308, 584], "11800": 308, "11796": 308, "11830": 308, "11839": 308, "11841": 308, "flash5_reg": [308, 320], "11842": 308, "11786": 308, "louviot": 308, "codec": [308, 567, 688, 694, 833], "11773": 308, "yipe": 308, "zuo": 308, "11704": 308, "earl": 308, "richardson": 308, "11575": 308, "calder": 308, "indexerror": 308, "11808": 308, "11804": 308, "tse": 308, "upsampl": [308, 346, 347, 517, 523, 559, 566], "11549": 308, "unnecessari": [308, 316, 318, 542, 559, 566, 574], "11828": 308, "11730": 308, "11694": 308, "pyside6": 308, "11721": 308, "11853": 308, "hang": 308, "_mpl_figur": 308, "spyder": [308, 309, 935, 940, 944, 945], "11696": 308, "11698": 308, "11857": 308, "gap_descript": 308, "11733": 308, "11754": 308, "11755": 308, "11748": 308, "11846": 308, "fit_intercept_": 308, "fit_intercept": [308, 489, 495], "sl": 308, "11852": 308, "11822": 308, "11778": 308, "11766": 308, "11823": 308, "11862": 308, "11713": 308, "11445": 308, "sustain": [309, 310], "volunt": 309, "welcom": 309, "anyon": [309, 310], "abid": 309, "forum": [309, 311, 317, 935, 936, 940, 941, 944, 947, 948], "fastest": [309, 947], "upstream": 309, "usernam": [309, 456], "desktop": 309, "appreci": 309, "sudo": [309, 942, 947], "apt": [309, 942, 947], "dmg": [309, 947], "atlassian": 309, "macport": [309, 947], "homebrew": [309, 947], "bash": [309, 323, 941, 947, 950], "subsystem": [309, 336], "yourdomain": 309, "sooner": 309, "emac": 309, "vim": 309, "nano": 309, "subl": 309, "makefil": 309, "newest": 309, "guil": 309, "w32": 309, "ezwinport": 309, "path_to_git": 309, "mingw64": 309, "mnedev": 309, "path_to_anaconda": 309, "miniconda": [309, 946], "team": [309, 310], "curl": 309, "githubusercont": 309, "yml": 309, "env": [309, 445, 531, 940, 941, 945, 949], "github_usernam": 309, "insert_your_actual_github_username_her": 309, "install_loc": 309, "opt": [309, 945, 947], "blame": 309, "ignorerevsfil": 309, "rev": 309, "site_packag": 309, "graphviz": 309, "graphviz_dot": 309, "conda_prefix": 309, "optipng": 309, "unzip": [309, 456], "pytest": [309, 940], "traceback": [309, 941], "test_eyelink": 309, "url_of_remote_repo": 309, "nickname_of_remot": 309, "repo": [309, 310], "undoubtedli": 309, "checkout": 309, "colleagu": 309, "unstag": 309, "some_fil": 309, "some_new_fil": 309, "entireti": 309, "some_other_fil": 309, "enh": 309, "some_testing_fil": 309, "new_tutorial_fil": 309, "stuck": 309, "password": [309, 456], "secur": [309, 947], "authent": [309, 456], "secret": 309, "test_evok": 309, "python_refer": 309, "rst": 309, "my_funct": 309, "my_new_funct": 309, "old_param": 309, "new_param": 309, "my_other_funct": 309, "depr_messag": 309, "changeset": 309, "subsect": 309, "bugfix": [309, 949], "happi": 309, "credit": 309, "gh": 309, "newcontrib": 309, "firstnam": 309, "lastnam": 309, "_your": 309, "oxford": [309, 522], "test_topo": 309, "pep": 309, "ruff": 309, "hook": 309, "ins": 309, "linter": 309, "snake_cas": 309, "nsampl": 309, "diverg": [309, 338, 339, 342, 345, 346, 347, 833, 854, 893, 898, 899], "sphinxcontrib": 309, "bibtex": [309, 314], "grep": [309, 940, 949], "bibliograph": 309, "bib": 309, "singleauthor2019": 309, "authoroneauthortwo2020": 309, "firstauthoretal2021a": 309, "firstauthoretal2021b": 309, "param_nam": 309, "test_docstring_paramet": 309, "mod": 309, "attr": [309, 501], "intersphinx": 309, "Their": [309, 659], "inventori": 309, "sphobjinv": 309, "dump": 309, "ext": 309, "backtick": [309, 935], "idiom": [309, 331, 332, 333, 334, 550, 551, 889], "nest": [309, 336, 483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 636, 830], "exit": [309, 323, 337, 542, 624], "pdb": 309, "ultraslowtest": 309, "test_io_evok": 309, "restructuredtext": 309, "imit": 309, "noplot": 309, "regex_to_select_my_tutori": 309, "unrel": 309, "mortem": 309, "pm": 309, "everyon": 309, "scientist": [309, 311, 945], "spare": 309, "streamlin": 309, "collabor": [309, 310, 948], "fruit": 309, "road": 309, "someon": 309, "occasion": [309, 317], "cosmet": 309, "whats_new": 309, "draft": 309, "wip": 309, "mrg": 309, "notifi": [309, 728], "sty": 309, "azp": 309, "azur": 309, "convei": 309, "sg_execution_tim": 309, "sg_api_usag": 309, "exemplifi": 309, "formal": 310, "extraordinari": 310, "profit": 310, "entiti": 310, "openli": 310, "affili": 310, "discours": 310, "foundat": [310, 322], "behalf": 310, "strive": [310, 813, 816], "barrier": 310, "leadership": 310, "neutral": 310, "tradition": [310, 320], "reward": 310, "benevol": 310, "dictat": 310, "defer": 310, "vote": 310, "deadlock": 310, "fork": 310, "disagre": 310, "deleg": 310, "appoint": 310, "successor": 310, "faith": 310, "director": 310, "quantiti": [310, 320, 434, 668], "year": [310, 314, 322, 336, 475], "everydai": 310, "peer": 310, "privileg": 310, "scope": 310, "strateg": 310, "mechan": [310, 331, 332], "nomin": [310, 336], "willing": 310, "capac": 310, "outreach": 310, "deliber": 310, "divers": 310, "viewpoint": 310, "talent": 310, "sole": [310, 317, 638], "soon": [310, 317, 320, 833], "grace": 310, "retir": 310, "eject": 310, "deem": 310, "harm": 310, "financi": 310, "employ": 310, "proprietari": [310, 940], "disclos": 310, "recus": 310, "themself": 310, "sparingli": 310, "privaci": [310, 947], "apach": 310, "veto": 310, "rational": 310, "opinion": 310, "regist": [310, 319, 320, 323, 375, 667, 821, 822, 823], "suffic": 310, "usurp": 310, "duti": [310, 322], "likewis": [310, 320, 331, 332, 787], "countri": 310, "gift": 310, "partnership": 310, "approv": 310, "employe": [310, 322], "commenc": 310, "laps": 310, "resum": [310, 333, 334], "pursu": 310, "monei": 310, "donor": 310, "umbrella": 310, "trademark": 310, "invit": 310, "waiv": 310, "troubleshoot": [311, 936, 941], "cluster_based_statist": 312, "ob": 312, "cluster_alpha": 312, "wilkinson": 312, "patsi": 312, "dmatric": 312, "clusterstat": 312, "4859": 312, "facto": 312, "mint": 312, "recruit": 312, "8221": 312, "11275": 312, "11276": 312, "11579": 312, "12179": 312, "vet": [312, 670], "6784": 312, "crossspectrum": 312, "multitaperspectrum": 312, "6290": 312, "7671": 312, "8026": 312, "8724": 312, "9045": 312, "pr": 312, "6609": 312, "6629": 312, "6672": 312, "6673": 312, "8397": 312, "8892": 312, "ipyvtklink": [312, 941], "7162": 312, "addon": 312, "openneuro": 312, "fund": 312, "mnefun": 312, "pde": 312, "swig": 312, "ambit": 312, "cleanup": [312, 833], "useless": 312, "cibuildwheel": 312, "deploy": 312, "pypi": [312, 946], "forg": [312, 940, 941, 945], "nutmegtrip": 312, "view_vol_stc": 312, "cloud": 312, "dask": 312, "czi": 312, "eoss2": [312, 322], "7751": 312, "docker": 312, "dev0": 313, "sidebar": 314, "592483": 314, "gramfortetal2013a": 314, "gramfortetal2014": 314, "bibliographi": 314, "scholar": 315, "1540": 315, "2040": 315, "meg2443": 316, "essenti": [316, 320, 344, 457], "vanish": 316, "advers": 316, "preliminari": 316, "implicitli": [316, 320, 427, 495, 670], "stamp": 316, "mm2": 316, "ico5": 316, "tessel": 316, "prerequisit": 316, "bulletproof": 316, "feasibl": 316, "sep": 316, "homog": [316, 323, 591], "bem_sol": 316, "reestablish": 316, "corregistr": 316, "charg": 316, "photograph": 316, "uninterest": 316, "epilept": 316, "infrequ": 316, "hesit": [317, 935], "hm": [317, 950], "athinoula": [317, 322, 953], "martino": [317, 322, 953], "siemen": [317, 320], "sonata": 317, "mprage": [317, 320, 935], "interspers": 317, "lv": 317, "audvis_raw": 317, "auvi": 317, "agre": 317, "aalto": [317, 322, 953], "macquari": [317, 322, 953], "tap": [317, 323, 647, 648, 660, 661], "khz": 317, "richli": 317, "sydnei": 317, "australia": 317, "hospit": [317, 322, 953], "ilab": 317, "washington": [317, 322, 953], "9999": 317, "msr": 317, "retrospect": 317, "satisfactori": 317, "chin": 317, "respir": [317, 320], "hypnogram": 317, "rechtschaffen": 317, "kale": 317, "erlangen": 317, "germani": 317, "shaft": 317, "pend": 317, "craft": 317, "elicit": [317, 333, 550, 572, 700], "lrp": 317, "ern": 317, "pupillari": 317, "reflex": 317, "unrecogniz": 317, "neuroscientist": 318, "keystrok": 318, "vocabulari": [319, 321], "spindl": 319, "acronym": [319, 321], "definion": 319, "m\u00b2": [319, 337], "\u00b5m": 319, "fd": [319, 441], "od": 319, "dealt": 319, "synapt": 319, "intracellular": 319, "pyramid": [319, 320], "perpendicularli": 319, "peculiar": 319, "encapsul": [319, 320], "cartoon": 319, "pependicular": 319, "laser": 319, "ga": 319, "rubidium": 319, "rear": [319, 833], "superconduct": 319, "quantum": 319, "scaleogram": 319, "uncorrel": 319, "irrespect": [320, 326, 331, 332, 434, 502, 533, 690, 719, 721, 928], "mole": 320, "unitless": [320, 331, 332, 333, 334, 550, 551], "sensibl": 320, "femtotesla": 320, "typecast": 320, "electrocardiographi": 320, "electromyographi": 320, "monitor": [320, 414, 655, 657], "excit": [320, 331, 332, 333, 334, 336, 550, 551, 632, 783, 785, 786, 787, 788, 789], "celsiu": 320, "nxe": [320, 569], "hpt": [320, 403], "compumed": [320, 400, 563], "fastscan": [320, 407, 576], "channels_3_and_4": 320, "boldsymbol": 320, "r_i": [320, 740, 745], "c_0": 320, "g_": 320, "infti": 320, "2n": [320, 757, 758, 759], "legendr": [320, 331, 332, 333, 334, 550, 551, 593, 644], "r_j": 320, "t_d": 320, "underbrac": 320, "b_": 320, "b_n": 320, "dotso": 320, "uc_n": 320, "constitut": 320, "orthonorm": 320, "c_e": 320, "perp": 320, "uu": 320, "approx": [320, 605], "eigenvector": [320, 328], "segonn": 320, "mri_watersh": [320, 323, 377, 935], "_brain_surfac": 320, "_inner_skull_surfac": 320, "_outer_skull_surfac": 320, "_outer_skin_surfac": 320, "availablili": 320, "echo": [320, 323, 371, 941, 947], "fov": 320, "dcm2niix": 320, "mne_organize_dicom": 320, "flash05": 320, "fat32": 320, "noflash30": [320, 323], "mef": [320, 371], "unwarp": [320, 323, 371], "grad_unwarp": [320, 323, 371], "parameter_map": [320, 323, 375], "mri_ms_fitparm": 320, "mri_synthes": 320, "fsl_rigid_regist": 320, "cor": 320, "mri_make_bem_surfac": 320, "tringul": 320, "t_x": 320, "auricular": [320, 403], "ti": 320, "feed": [320, 650], "mm3": 320, "hardli": 320, "mnitalairach": 320, "mni305": 320, "y_2": 320, "z_2": 320, "y_1": 320, "z_1": 320, "x_0": 320, "y_0": 320, "z_0": 320, "x_k": 320, "y_k": 320, "z_k": 320, "jk": 320, "0485": 320, "9189": 320, "coordinatesystem": [320, 436], "t_1": 320, "s_1": 320, "s_n": 320, "t_2": 320, "filessepar": 320, "t_3": 320, "mghformat": 320, "t_4": 320, "hardcod": 320, "periauricular": [320, 393], "idiosyncrasi": 320, "conceiv": 320, "s_k": [320, 342], "s_p": 320, "50mm": 320, "r_0": 320, "e_x": 320, "e_i": 320, "e_z": 320, "r_c": 320, "r_d": 320, "0d": 320, "n_k": 320, "w_": 320, "kp": 320, "pickup": [320, 504, 646, 659, 670], "sixteen": 320, "centerpoint": 320, "mne_list_coil_def": 320, "3012": 320, "8mm": 320, "3013": 320, "3023": [320, 388, 550], "3024": [320, 388, 550], "4001": 320, "wh": 320, "3600": 320, "4003": 320, "4004": 320, "4005": 320, "5001": 320, "5004": 320, "6001": 320, "pound": [320, 403], "nx": 320, "ny": 320, "csf": [320, 598], "r_1": 320, "dotsc": 320, "r_m": 320, "mu_1": 320, "mu_m": 320, "int_": 320, "v_": 320, "ly": 320, "ensu": 320, "posteriori": 320, "viabl": 320, "mantl": [320, 613], "3p": 320, "unconstrain": 320, "mx": 320, "arriv": 320, "min_": [320, 743], "bigl": 320, "bigr": 320, "u_c": 320, "lambda_c": 320, "grg": 320, "possess": 320, "sum_k": [320, 342], "varepsilon_k": 320, "sigma_k": 320, "rout": 320, "superscript": 320, "gamma_k": [320, 610], "lambda_k": [320, 610], "v_k": 320, "w_k": 320, "propto": 320, "dimensionless": 320, "tendenc": 320, "2_k": 320, "g_i": 320, "u_": 320, "lambda_": 320, "_i": 320, "noiseless": 320, "misfit": 320, "pi_k": 320, "recolor": 320, "eigenfield": 320, "n_d": 320, "a_d": 320, "sigma_d": [320, 659], "postsynapt": 320, "microscop": 320, "rigidli": 320, "floc": 320, "lie": [320, 337], "thereaft": 320, "vloc": 320, "1p": 320, "2p": 320, "l_": 320, "eff": 320, "w_i": 320, "x_i": 320, "c_y": 320, "l_i": 320, "w_1": 320, "w_2": 320, "l_1": 320, "l_2": 320, "supposedli": 320, "x_j": 320, "t_j": 320, "biject": 320, "smudg": 320, "n_j": 320, "prod_": 320, "kindli": 321, "function_nam": 321, "health": 322, "r01": 322, "eb009048": 322, "eb006385": 322, "hd040712": 322, "ns044319": 322, "ns037462": 322, "ns104585": 322, "p41": 322, "eb015896": 322, "rr014075": 322, "0958669": 322, "1042134": 322, "council": 322, "ystg": 322, "263584": 322, "676943": 322, "depart": 322, "fg02": 322, "99er62764": 322, "agenc": 322, "national": 322, "recherch": [322, 953], "neuc": 322, "0002": 322, "idex": 322, "saclai": 322, "amazon": 322, "zuckerberg": 322, "eoss4": 322, "yliopiston": [322, 953], "perustieteiden": [322, 953], "korkeakoulu": [322, 953], "ae": [322, 953], "studio": [322, 944, 945, 953], "philadelphia": [322, 953], "donder": [322, 953], "behaviour": [322, 325, 580, 583, 953], "radboud": [322, 953], "school": [322, 953], "fondat": [322, 953], "campu": [322, 953], "biotech": [322, 953], "geneva": [322, 953], "informatiqu": [322, 953], "automatiqu": [322, 953], "franzen": [322, 953], "universit\u00e4t": [322, 953], "graz": [322, 953], "massachusett": [322, 953], "planck": [322, 953], "f\u00fcr": [322, 953], "bildungsforschung": [322, 953], "uniwersytet": [322, 953], "humanistycznospo\u0142eczni": [322, 953], "aarhu": [322, 953], "universitet": [322, 953], "commissariat": [322, 953], "\u00e0": [322, 953], "\u00e9nergi": [322, 953], "atomiqu": [322, 953], "aux": [322, 953], "forschungszentrum": [322, 953], "j\u00fclich": [322, 953], "du": [322, 953], "cerveau": [322, 953], "moell": [322, 953], "\u00e9pini\u00e8r": [322, 953], "sant\u00e9": [322, 953], "m\u00e9dical": [322, 953], "technisch": [322, 953], "t\u00e9l\u00e9com": [322, 953], "outfil": 323, "anon": 323, "n_dai": 323, "daysback": [323, 331, 332, 333, 334, 336, 550, 551, 552], "resav": 323, "navigaton": 323, "show_opt": [323, 550, 551, 888], "allowmaxshield": 323, "clamp": [323, 550, 551, 833, 888], "head_shap": 323, "out_fnam": 323, "rotation_x": [323, 562], "compensatori": 323, "deg": [323, 658], "ecg_ch": [323, 562], "e31": [323, 562], "e63": [323, 562], "my_raw": 323, "quiet": [323, 331, 332, 787], "mne_process_raw": 323, "in_raw": 323, "clean_raw": 323, "file_a": 323, "file_b": 323, "test_raw_sss": 323, "filters": 323, "rej": 323, "rej_grad": 323, "rej_mag": 323, "rej_eeg": 323, "rej_eog": 323, "bad_fnam": 323, "raw_event_fnam": 323, "qrsthr": 323, "qrs_threshold": [323, 647, 660, 663], "eog_l_freq": [323, 648], "eog_h_freq": [323, 648], "head_opac": [323, 542], "multiecho": [323, 371, 375], "noconvert": 323, "flash_path": 323, "mef05": 323, "mef30": 323, "spin": [323, 375], "kt2fiff": 323, "mkheadsurf": [323, 376], "_sss": 323, "origin_out": 323, "autobad": 323, "maxst": 323, "buflen": 323, "st_buflen": 323, "st_corr": 323, "mv_tran": 323, "in_fnam": 323, "movecomp": 323, "mv_hp": 323, "hpistep": 323, "mv_hpistep": 323, "hpisubt": 323, "mv_hpisubt": 323, "nohpicon": 323, "linefreq": 323, "nooverwrit": 323, "mx_arg": 323, "sof": 323, "bmin": 323, "TO": 323, "brainc": 323, "skullc": 323, "scalpc": 323, "7mm": 323, "gcaatla": [323, 377, 935], "brain_atla": [323, 377], "preflood": [323, 377, 935], "fname2": 323, "reaverag": 324, "category_nam": 324, "acq_dict": 324, "subav": 324, "subaverag": 324, "__len__": [324, 325, 327, 328, 329, 331, 332, 336, 337, 341, 355, 370, 550, 551, 601, 655, 784, 785, 786, 787, 820], "n_cat": 324, "delayed_lookup": 324, "acqp": 324, "mne_stim_channel_2": [324, 524, 525], "uint16": [324, 524], "sti016": [324, 524], "32768": [324, 482, 524], "mne_fix_stim14": [324, 524], "asynchroni": 324, "conds_data": 324, "n_epochs_out": 324, "n_annot": 325, "iso8601": 325, "bad_flux": 325, "bad_nois": 325, "meg0111": [325, 326, 331, 332, 333, 334, 336, 378, 395, 397, 428, 439, 485, 499, 504, 550, 551, 634, 635, 637, 651, 652, 653, 662, 666, 676, 678, 685, 717, 751, 769, 778, 783, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 816, 859, 865, 866, 869, 871, 872, 879, 886, 889], "meg2563": 325, "meg1443": 325, "n_blink": 325, "yy": [325, 563], "______________": 325, "_________": 325, "anot": 325, "___________________": 325, "o_________": 325, "________________________": 325, "o______________": 325, "o________________________": 325, "__add__": [325, 327, 328, 337, 338, 339, 342, 344, 345, 346, 347, 380, 783], "concatenc": 325, "with_ch_nam": 325, "__iter__": [325, 328, 331, 332, 336, 355, 370, 601, 655, 733, 785, 786, 787, 820], "array_lik": [325, 326, 328, 329, 331, 332, 333, 334, 336, 340, 341, 350, 378, 380, 395, 428, 438, 439, 483, 485, 490, 493, 496, 498, 499, 500, 504, 510, 548, 550, 551, 562, 576, 593, 598, 634, 635, 636, 637, 640, 644, 645, 646, 649, 650, 651, 652, 653, 655, 656, 657, 659, 662, 666, 670, 676, 678, 684, 685, 720, 721, 737, 751, 761, 762, 765, 767, 768, 769, 777, 778, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 801, 811, 815, 816, 833, 839, 851, 852, 859, 865, 866, 867, 869, 871, 872, 874, 875, 876, 877, 878, 879, 880, 881, 883, 885, 886, 887, 889, 890, 891, 895, 897], "676071": 325, "shortstimulu": 325, "longstimulu": 325, "tabular": [325, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 783, 785, 786, 787, 788, 789], "preload_at_end": 326, "raw_sfreq": [326, 332], "abstract": [326, 911], "meg2623": [326, 331, 332, 333, 334, 336, 378, 395, 397, 428, 439, 485, 499, 504, 550, 551, 634, 635, 637, 651, 652, 653, 662, 666, 676, 678, 685, 751, 769, 778, 783, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 816, 859, 865, 866, 869, 871, 872, 879, 886, 889], "ptp": [326, 331, 332, 426, 635, 637, 652], "40e": [326, 331, 332, 428, 635, 652, 653, 769], "unproject": [326, 331, 332, 594, 693], "postpon": [326, 331, 332, 594, 693], "coincid": [326, 331], "my_epoch": 326, "compensation_grad": [326, 331, 332, 333, 334, 336, 549, 550, 551, 635, 783, 785, 786, 787, 788, 789], "__sub__": [327, 337, 338, 339, 342, 345, 346, 347, 783], "eig": 328, "eigvec": 328, "__contains__": [328, 331, 332, 333, 334, 336, 355, 370, 550, 551, 601, 635, 655, 783, 785, 786, 787, 788, 789, 820], "as_diag": [328, 954], "diagnois": 328, "fromkei": [328, 336, 355, 370, 601, 655, 820], "fig_svd": [328, 860], "1e13": [328, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 423, 427, 428, 483, 490, 492, 550, 551, 866, 869, 871, 873, 874, 896], "1e15": [328, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 423, 427, 428, 483, 490, 492, 550, 551, 866, 869, 871, 873, 874, 896], "pluss": [328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 852, 867, 874, 878, 887, 890, 895, 897], "markeredgecolor": [328, 331, 332, 333, 334, 483, 490, 550, 551, 634, 783, 785, 786, 788, 789, 852, 867, 874, 890, 895, 897], "mask_po": [328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 852, 867, 874, 878, 887, 890, 895, 897], "cloughtocher2dinterpol": [328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 852, 867, 874, 878, 887, 890, 895, 897], "linearndinterpol": [328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 852, 867, 874, 878, 887, 890, 895, 897], "encompass": [328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 650, 783, 785, 786, 788, 789, 852, 867, 874, 878, 887, 890, 895, 897], "rightmost": [328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 783, 785, 786, 788, 789, 867, 874, 878, 887, 890, 895], "mini": [328, 331, 332, 333, 334, 340, 483, 490, 550, 551, 634, 635, 783, 785, 786, 788, 789, 867, 874, 878, 887, 890, 895], "unrepresent": [328, 336, 355, 370, 601, 655, 820], "popitem": [328, 336, 355, 370, 601, 655, 820], "lifo": [328, 336, 355, 370, 601, 655, 820], "setdefault": [328, 336, 355, 370, 601, 655, 820], "khi2": 329, "longitudin": 329, "qlong": 329, "qtran": 329, "\u03c7": 329, "plot_amplitud": [329, 954], "show_al": [329, 863], "highlight_color": [329, 863], "mri_rot": [329, 863], "600x600": [329, 851, 863], "use_round": [329, 330, 331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 512, 550, 551, 783, 787], "pos_mni": 329, "n_po": [329, 411, 413, 543, 544, 877], "subdirectori": [329, 535, 833], "aspect_kind": 330, "id_numb": 331, "event_id_1": 331, "event_id_2": 331, "new_id_numb": 331, "programmat": 331, "lost": [331, 332, 333, 334, 513, 514, 515, 516, 550, 551, 940], "no_data": [331, 787], "equalized_count": [331, 787], "audio_left": [331, 332, 787], "name_1": [331, 332, 787], "name_2": [331, 332, 787], "eval": [331, 332, 787], "col_a": [331, 332, 787], "col_b": [331, 332, 787], "add_annotations_to_metadata": [331, 332, 954], "annot_onset": [331, 332], "annot_dur": [331, 332], "annot_descript": [331, 332], "add_list": [331, 332, 333, 334, 550, 551, 783, 785, 786, 787, 788, 789], "januari": [331, 332, 333, 334, 336, 550, 551, 552], "1\u02e2\u1d57": [331, 332, 333, 334, 336, 550, 551, 552], "his_id": [331, 332, 333, 334, 336, 550, 551, 552], "parallel_config": [331, 332, 333, 334, 337, 338, 339, 341, 342, 345, 346, 347, 349, 423, 424, 426, 428, 486, 493, 496, 499, 500, 526, 539, 541, 550, 551, 593, 596, 597, 608, 609, 618, 619, 640, 647, 648, 731, 732, 734, 735, 736, 748, 770, 771, 772, 773, 774, 785, 788, 790, 791, 792, 793, 794, 795, 803, 804, 812, 813, 814, 815, 816, 835, 867, 870, 889], "workload": [331, 332, 333, 334, 550, 551], "x_a": [331, 332, 333, 334, 550, 551], "2u": [331, 332, 333, 334, 550, 551], "enevlop": [331, 332, 333, 334, 550, 551], "hint": [331, 332, 333, 334, 550, 551, 866], "projs_a": [331, 332, 333, 334, 550, 551], "proj_a": [331, 332, 333, 334, 550, 551], "projs_b": [331, 332, 333, 334, 550, 551], "proj_b": [331, 332, 333, 334, 550, 551], "emphas": [331, 332, 333, 334], "trim_mean": [331, 332], "low_bia": [331, 332, 333, 334, 488, 550, 551, 608, 609, 785, 788, 792, 795, 797, 803, 867], "undrop": [331, 332], "timeout": [331, 332, 782], "lenient": [331, 332], "drop_log_stat": [331, 332], "perc": [331, 332], "mintim": [331, 332, 506], "seek": [331, 332, 491, 506], "nonspati": [331, 332], "cart_to_eeglab": [331, 332, 513, 516, 550, 551], "5500m": [331, 332, 333, 334, 485, 494, 519, 521, 522, 550, 551], "reflect_limit": [331, 332, 333, 334, 521, 522, 523, 550, 551], "savgol_filt": [331, 332, 333, 334, 550, 551], "get_annotations_per_epoch": [331, 332], "epoch_annot": [331, 332], "only_data_ch": [331, 332, 333, 334, 336, 550, 551, 635, 783, 785, 786, 787, 788, 789], "epoch_color": [331, 332, 865], "5th": [331, 332, 333, 334, 341, 550, 551, 865, 888], "1e2": [331, 332, 341, 550, 551, 865, 888], "20\u00b5v": [331, 332, 341, 550, 551, 865, 888], "disallow": [331, 332, 865], "ital": [331, 332, 333, 334, 550, 551, 865, 869, 873, 888], "processor": [331, 332, 456, 550, 551, 635, 865, 882, 888], "pyopengl": [331, 332, 550, 551, 635, 865, 882, 888], "stylesheet": [331, 332, 550, 551, 635, 833, 865, 882, 888], "qdarkstyl": [331, 332, 550, 551, 635, 833, 865, 882, 888], "darkdetect": [331, 332, 550, 551, 635, 833, 865, 882, 888], "startup": [331, 332, 550, 551, 635, 865, 882, 888], "mneqtbrows": [331, 332, 550, 551, 635, 865, 882, 888], "mpl": [331, 332, 338, 339, 342, 345, 346, 347, 550, 551, 833, 865, 888, 893, 898], "tkagg": [331, 332, 550, 551, 865, 888], "f11": [331, 332, 550, 551, 865, 888], "magic": [331, 332, 550, 551, 635, 865, 882, 888, 935, 940], "qt5": [331, 332, 550, 551, 635, 865, 882, 888, 945], "n_max_plot": [331, 332, 864], "good_epoch": [331, 332, 866], "area_alpha": [331, 332, 333, 334, 550, 551, 889], "line_alpha": [331, 332, 333, 334, 550, 551, 889], "asd": [331, 332, 333, 334, 550, 551, 889], "decibel": [331, 332, 333, 334, 342, 550, 551, 608, 785, 786, 788, 789, 867], "log\u2081\u2080": [331, 332, 333, 334, 550, 551, 768, 785, 786, 788, 789, 867], "n_ch_group": [331, 332, 333, 334, 336, 550, 551], "n_pick": [331, 332, 333, 334, 336, 550, 551, 685], "layout_scal": [331, 332, 333, 334, 783, 848, 873, 896], "fig_background": [331, 332, 333, 334, 783, 873, 896], "eeg061": [331, 332, 333, 334, 336, 380, 408, 550, 551, 718], "eeg161": [331, 332, 333, 334, 336, 380, 408, 550, 551, 718], "meaningless": [331, 332], "split_siz": [331, 332, 550, 551], "100mb": [331, 332, 550, 551], "schema": [331, 332, 550, 551], "fname_split": [331, 332, 550, 551], "bbac101d50176611136b": [331, 332, 333, 334, 550, 551], "setter": [331, 332, 550, 551], "eyetrack_po": [331, 332, 333, 334, 336, 550, 551], "eyetrack_pupil": [331, 332, 333, 334, 336, 550, 551], "channel_loc_alias": [331, 332, 333, 334, 336, 550, 551], "std_err": [331, 332], "1591": [331, 332], "juli": [331, 332], "rangeindex": [331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 783, 785, 786, 787, 788, 789], "timedeltaindex": [331, 332, 333, 334, 338, 339, 342, 345, 346, 347, 550, 551, 783, 787], "__neg__": [333, 334, 338, 339, 342, 345, 346, 347], "negat": [333, 334, 338, 339, 342, 345, 346, 347], "evoked_neg": [333, 334], "prepend": [333, 334, 570], "unsort": [333, 334, 869], "obscur": [333, 334, 869], "multiax": [333, 334, 869], "t_start": [333, 334, 869], "t_end": [333, 334, 869], "surf_map": [333, 334, 593, 835, 870], "n_contour": [333, 334, 835, 870], "show_dens": [333, 334, 835, 870], "interp1d": [333, 334, 833, 835, 870], "slinear": [333, 334, 833, 835, 870], "quadrat": [333, 334, 833, 835, 870], "turntabl": [333, 334, 542, 833, 835, 851, 870], "unintent": [333, 334, 542, 835, 851, 870], "mask_cmap": [333, 334, 783, 871], "mask_alpha": [333, 334, 783, 871], "do_mask": [333, 334, 871], "illeg": [333, 334, 872], "01d": [333, 334, 483, 490, 874], "set_posit": [333, 334, 874], "amplif": [333, 334, 364, 365, 423, 427, 428, 439, 440, 441, 483, 490, 526, 527, 545, 547, 548, 613, 875], "logger": [333, 334, 828, 830, 875], "_ave": [333, 334], "source_ori": 335, "fiffv_mne_fixed_ori": 335, "fiffv_mne_free_ori": 335, "n_ori": 335, "source_rr": 335, "n_sourc": [335, 364, 365, 483, 490, 528, 545, 547, 548, 619], "fiffv_coil_meg": 336, "fiffv_eeg_ch": 336, "ez": 336, "fiff_unit_t_m": 336, "fiff_unitm_non": 336, "ctfkind": 336, "colcal": 336, "rowcal": 336, "save_calibr": 336, "fiffv_point_eeg": 336, "fiffc_vers": 336, "machid": 336, "mac": 336, "usec": 336, "he_level_raw": 336, "helium": 336, "helium_level": 336, "orig_file_guid": 336, "mea": 336, "creator": 336, "ncoil": 336, "hpi_coil": 336, "corr_coeff": 336, "coil_freq": 336, "dig_point": 336, "good_limit": 336, "coord_tran": 336, "event_channel": 336, "mri_id": 336, "block_id": 336, "max_info": 336, "sss_info": 336, "max_st": 336, "sss_ctc": 336, "sss_cal": 336, "last_nam": 336, "first_nam": 336, "middle_nam": 336, "month": 336, "male": [336, 475], "femal": [336, 475], "handed": 336, "ambidextr": 336, "kilogram": 336, "command_lin": [336, 344], "meas_fil": 336, "mri_fil": 336, "shh": 336, "working_dir": [336, 344], "xplotter": 336, "__setitem__": 336, "accuru": [337, 342], "versionad": 337, "outside_vertic": 337, "get_tri": 337, "label_tri": 337, "get_vertices_us": 337, "label_vert": 337, "n_label_vertic": 337, "icosahedr": [337, 429, 482, 538, 539], "div1": [337, 760], "div2": [337, 760], "mris_divide_parcel": [337, 760], "n_part": [337, 760], "fring": 337, "sens_data": [338, 339, 342, 345, 346, 347], "__div__": [338, 339, 342, 345, 346, 347], "__mul__": [338, 339, 342, 345, 346, 347, 783], "tstop": [338, 339, 342, 345, 346, 347], "pane": [338, 342, 346, 833, 893, 947], "n_color": [338, 339, 342, 345, 346, 347, 854, 893, 898, 899], "hot": [338, 339, 342, 345, 346, 347, 893, 898], "binar": [338, 339, 342, 345, 346, 347, 739, 741, 742, 833, 893, 898], "colorschem": [338, 339, 342, 345, 346, 347, 893, 898], "high_contrast": [338, 339, 342, 345, 346, 347, 833, 893, 898], "resort": [338, 342, 346, 893, 935], "devot": [338, 339, 342, 345, 346, 347, 893, 898], "occupi": [338, 339, 342, 345, 346, 347, 541, 732, 893, 898], "blend": [338, 339, 342, 345, 346, 347, 833, 854, 893, 898], "mip": [338, 339, 342, 345, 346, 347, 833, 893, 898], "surface_alpha": [338, 339, 342, 345, 346, 347, 833, 893, 898], "silhouette_alpha": [338, 339, 342, 345, 346, 347, 833, 893, 898], "silhouette_linewidth": [338, 339, 342, 345, 346, 347, 833, 893, 898], "time_label_s": [338, 339, 342, 345, 346, 347, 833, 893, 898], "freesurferoccipitalflattenedpatch": [338, 342, 346, 893], "openwetwar": [338, 342, 346, 893], "transform_data": [338, 339, 342, 345, 346, 347], "tmin_idx": [338, 339, 342, 345, 346, 347], "tmax_idx": [338, 339, 342, 345, 346, 347], "indicic": [338, 339, 342, 345, 346, 347], "data_t": [338, 339, 342, 345, 346, 347], "direction": [339, 345, 347], "vector_alpha": [339, 345, 347, 833, 898], "sane": [339, 345, 347, 898], "fiffv_proj_item_field": 340, "compute_proj_": 340, "info_fnam": 341, "fidel": 341, "n_file": 341, "topomap_kwarg": [341, 886], "declutt": 341, "inverse_op": 341, "altogeth": 341, "stc_plot_kwarg": 341, "add_sys_info": [341, 954], "sysinfo": 341, "on_error": 341, "n_time_points_stc": 341, "remove_al": 341, "removed_index": 341, "open_brows": 341, "nanoamper": 342, "log_10": 342, "subject_orig": [342, 345], "vertices_to": [343, 429], "pre_affin": 343, "sdr_morph": [343, 667, 821, 822, 823], "src_data": 343, "vol_morph_mat": 343, "affinemap": 343, "stc_from": 343, "nifti2": [343, 346, 347], "stc_to": 343, "nifti2imag": 343, "src_from": [343, 622], "monolith": 344, "fiffv_mne_surf_left_hemi": 344, "fiffv_mne_surf_right_hemi": 344, "fiffv_mne_surf_unknown": 344, "fiffv_coord_mri": 344, "inus": 344, "subject_his_id": [344, 429], "ntri": 344, "nuse_tri": 344, "pinfo": 344, "155295": 344, "155323": 344, "155330": 344, "904": 344, "patch_ind": 344, "n_src_remain": 344, "115407": 344, "nearest_dist": 344, "mri_width": 344, "mri_height": 344, "mri_depth": 344, "neighbor_vert": 344, "mri_ras_t": 344, "fiffv_mne_coord_ra": 344, "vox_mri_t": 344, "fiffv_mne_coord_mri_voxel": 344, "mri_volume_nam": 344, "seg_nam": 344, "include_surfac": 344, "include_discret": 344, "dest": [344, 346, 347, 819], "4x4": [344, 575, 734, 735, 736, 748], "trilinear": [346, 347, 517], "ensnur": [346, 347, 517], "initial_po": [346, 347, 899], "nutmeg": [346, 347, 899], "spatialimag": [346, 347, 371, 665, 667, 821, 822, 823, 899], "src_sampl": [346, 347, 899], "stc_vol_sampl": [346, 347, 899], "vl": [346, 710], "evoked_templ": 351, "zlogratio": [354, 618, 619, 783, 787, 895], "data_sc": 354, "meaningfulli": 357, "quadrant": 357, "borgiotti": [364, 365], "kaplan": [364, 365], "\u03b8i": [364, 365], "arguabl": [364, 365], "max_pow": [364, 365], "expon": [364, 365, 527, 545, 547, 548, 613], "n_weight": 364, "src_type": [364, 365], "is_free_ori": [364, 365], "supplement": 364, "is_ssp": 365, "vec_stc": 365, "resmat": [366, 611, 612, 614, 617], "n_dipoles_lcmv": 366, "n_dipoles_fwd": 366, "mef05_001": 371, "mef30_001": 371, "flash5_img": [371, 375], "origin_head": 373, "origin_devic": 373, "exclude_front": [374, 502], "n_pt": 374, "no_decim": 376, "idx_by_typ": 378, "acpc": 380, "ch_po": [380, 393], "x_max": 381, "y_min": 381, "y_max": 381, "my_layout": 381, "keep_stim": 382, "combined_inst": 382, "native_head_t": 384, "equalized_inst": [385, 508], "ch_adjac": [386, 397], "use_c": 388, "sq20483n": [388, 550], "sq20483": [388, 550], "sq20950n": [388, 550], "ch_indic": 389, "bg_imag": 389, "neighbor_nam": 390, "heurist": 392, "n_point": [393, 407, 434, 502, 554, 576, 696], "n_hpi": 393, "fs_tal": [393, 585, 820], "ctf_head": [393, 585, 820], "ctf_meg": [393, 585, 820], "viewport": [394, 550, 551, 888], "95mm": 396, "eloc": 398, "095m": 398, "weakli": 398, "eeg001": 402, "eeg002": 402, "filepath": [403, 405, 781, 833], "digitz": 403, "6729": 403, "3873": 403, "3671": 403, "6782": 403, "5228": 403, "3127": 403, "3976": 403, "2363": 403, "4493": 403, "8450": 403, "6828": 403, "8518": 403, "0697": 403, "0829": 403, "3744": 403, "6297": 403, "1376": 403, "4264": 403, "7352": 403, "7756": 403, "8676": 403, "0439": 403, "9297": 403, "6852": 403, "4881": 403, "2969": 403, "4939": 403, "union": [409, 507, 524, 635, 671], "t_step_min": [410, 411, 412], "t_window": [410, 412, 416, 645], "interf": [410, 412, 416], "_setup_hpi_amplitude_fit": 410, "disambigu": 410, "t_step_max": 411, "too_clos": 411, "adjust_dig": [411, 413], "\u03b4t": 411, "veloc": [411, 639], "chpi_snr": 412, "snr_mag": 412, "power_mag": 412, "resid_mag": 412, "snr_grad": 412, "power_grad": 412, "resid_grad": 412, "gof_limit": 413, "quat": [413, 419, 824, 826], "q1": [413, 550, 551, 824, 826], "q2": [413, 824, 826], "q3": [413, 550, 551, 824, 826], "hlc001": 414, "hlc002": 414, "hlc003": 414, "rawkit": [415, 576], "include_lin": 416, "t_step": 416, "hpi_freq": 418, "n_coil": 418, "hpi_pick": 418, "hpi_on": 418, "all_evok": 422, "keep_sample_mean": 423, "factor_analysi": 423, "store_precis": 423, "assume_cent": 423, "shrikag": 423, "iter_n_compon": 423, "emprici": 423, "on_rank_mismatch": [427, 439, 440], "resultingmorph": 429, "vertices_from": 429, "vert_rh": 429, "vert_lh": 429, "mris_left_right_regist": 429, "epochs_list": [430, 506], "add_offset": 430, "lpa_weight": 434, "rpa_weight": 434, "hsp_weight": 434, "eeg_weight": 434, "hpi_weight": 434, "set_fid_match": 434, "set_grow_hair": 434, "hair": 434, "set_rot": 434, "set_scal": 434, "sca": 434, "scale_mod": 434, "set_transl": 434, "tra": 434, "fids_mri": 436, "return_rank": 439, "return_color": [439, 536], "n_nonzero": 439, "1e11": 440, "1e5": 440, "reg_cov": 441, "fs_home": 442, "create_raw": 443, "ignore_config": 445, "device_id": 446, "force_upd": [447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "update_path": [447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481], "mne_datasets_brainstorm_data_path": [447, 448, 449], "prompt": [447, 448, 449, 450, 452, 453, 454, 456, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 935, 941, 944, 950], "base_url": [450, 475, 476], "foot": 450, "khanetal2018": 455, "dataset_param": 456, "return_vers": 456, "auth": 456, "token": 456, "archive_nam": [456, 462], "folder_nam": [456, 462], "config_kei": 456, "untar": [456, 940], "decompress": 456, "httpdownload": 456, "012345": 456, "uncompress": 456, "cryptograph": 456, "sha256": 456, "19uheid": 456, "md5": 456, "upodh2io": 456, "tar": [456, 940, 947], "12b75d1cb7df9dfb4ad73ed82f61094f": 456, "osf": 456, "86qa2": 456, "webpag": 458, "2wk": 459, "1mo": 459, "2mo": 459, "3mo": 459, "5mo": 459, "9mo": 459, "12mo": 459, "15mo": 459, "18mo": 459, "2yr": 459, "ants4": 459, "5month3t": 459, "subject_dir": 460, "\u00ecnt": 465, "mne_datasets_opml_path": 469, "edfx": [475, 476], "cassett": 475, "physionet_sleep_path": [475, 476], "telemetri": 476, "mild": 476, "asleep": 476, "mne_datasets_spm_data_path": 478, "n_triangl": 482, "quadric": 482, "30001": 482, "20480": 482, "cov_est": 483, "average_pow": [483, 490], "cov_method_param": [483, 490, 491], "csp_space": [483, 490], "mutual": [483, 568, 823], "simplif": 483, "mean_": [483, 490], "std_": [483, 490], "x_new": [483, 484, 485, 488, 490, 491, 494, 636], "n_features_new": [483, 484, 485, 488, 490, 491, 494, 636], "get_param": [483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 636], "subobject": [483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 636], "name_format": [483, 490], "n_pattern": [483, 490], "set_param": [483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 636], "__": [483, 486, 487, 489, 490, 491, 492, 493, 495, 496, 497, 636], "classes_": [484, 486], "n_class": [484, 486, 493, 499], "allow_2d": [486, 493], "score_func": [486, 493, 635], "decision_funct": [486, 493], "nd_featur": [486, 493], "n_slice": 486, "n_features_1": [486, 493], "n_features_2": [486, 493], "n_task": [486, 493], "n_target": [486, 487, 493, 500], "xt": [486, 493, 496], "283185307179586": 488, "n_signal": [488, 808, 810], "r2": 489, "edge_correct": [489, 495], "baseestim": [489, 497, 500], "return_filt": 491, "flank": 491, "spectal": 491, "sprectal": 491, "sorter_spec": 491, "x_ssd": 491, "with_mean": 492, "with_std": 492, "quantil": 492, "estimators_": 493, "unsupervis": 497, "spatialfilt": 498, "_xdawntransform": 498, "features_shape_": 498, "objective_funct": 499, "leaveoneout": 499, "surrogate_tri": 499, "mean_spatial_filt": 499, "pre_dispatch": 500, "n_dimensional_featur": 500, "dispatch": 500, "explos": 500, "lightweight": 500, "n_score": 500, "extrema": [503, 665, 679], "orig_sfreq": 504, "weight_al": 504, "ignore_ref": [504, 597, 646, 659, 670], "return_map": 504, "mag_scal": [504, 646, 659, 670], "multipolar": [504, 645, 646, 659, 670], "magenetomet": [504, 646, 659, 670], "0168": [504, 646, 659, 670], "sp": 504, "old_event_id": 505, "new_event_id": 505, "safeti": [505, 949], "collat": 507, "ancillari": 507, "myevent": 507, "last_myev": 507, "first_": 507, "event_typ": 507, "respet": 507, "n_new_ev": 511, "aa": 512, "ee": 512, "gg": 512, "syncstatu": 512, "99998": 512, "xml_file": 515, "physical_rang": [516, 550, 551], "add_ch_typ": [516, 550, 551], "f_pass": 518, "f_stop": 518, "return_copi": 518, "ellipt": 518, "gpass": 518, "gstop": 518, "weren": 518, "triag": [518, 782], "fs1": 519, "fs2": [519, 522], "fstop": 519, "max_tri": 520, "mt_bandwidth": [522, 550, 551], "centr": [522, 550, 551, 617], "xf": 522, "chronux": 522, "partha": 522, "mitra": 522, "hemant": 522, "bokil": 522, "upfirdn": 523, "00000101": 524, "0000111": 524, "0100101": 524, "0000101": 524, "0000010": 524, "pad_start": 525, "pad_stop": 525, "whichev": [525, 527, 853], "v_from": 525, "v_to": 525, "rhoend": 526, "fmin_cobyla": 526, "combine_xyz": 527, "gk": 527, "frobeniu": 527, "depth_prior": 527, "orient_prior": 528, "fwd_out": [529, 530], "raise_error": 531, "config_path": 532, "mnemn": 532, "mgz_fname": 536, "atlas_id": [536, 703], "labels_aseg": 537, "all_inst": 540, "grown": 541, "territori": 541, "invad": 541, "broadcast": [541, 833, 851], "head_high_r": 542, "orient_to_surfac": 542, "scale_by_dist": 542, "mark_insid": 542, "movabl": 542, "splitter": 542, "qt4": 542, "wx": 542, "coregistrationui": 542, "update_mod": 545, "bay": 545, "mackai": 545, "time_pca": 547, "alpha_max": [547, 548], "epsilon": [547, 602], "raw_extra": 549, "orig_unit": 549, "unsplit": 549, "orig_nchan": 549, "nv": 549, "my_raw_object": 549, "subclass": 549, "_read_segment_fil": 549, "mult": 549, "time_slic": [550, 551], "data_fram": [550, 551], "quartil": [550, 551], "mne_fix_mag_coil_typ": 550, "bad_fil": [550, 551], "mne_mark_bad_channel": [550, 551], "europ": [550, 551], "lightgrai": [550, 551, 864, 888], "show_first_samp": [550, 551, 635, 882, 888], "eventloop": [550, 551, 888], "prj": [550, 551, 888], "secondari": [550, 551, 888], "supersampl": [550, 551], "optimum": [550, 551], "drop_small_buff": [550, 551], "projecton": [550, 551], "datetimeindex": [550, 551], "include_default": 553, "fiffv_coil_magnes_offdiag_ref_grad": 553, "fiffv_coil_vv_mag_t3": 553, "mrk_point": 554, "fiffv_coord_": [555, 585], "input_fnam": [558, 559, 563, 566, 567, 568, 574, 576, 578, 581, 694, 696], "pos_fnam": 558, "add_head_tran": 558, "batteri": 559, "trigger_sign": 559, "htm": 559, "cms_bit": 559, "cms_high": 559, "rawboxi": 560, "vhdr_fname": 561, "heogl": 561, "heogr": 561, "veogb": 561, "pdf_fname": 562, "config_fnam": 562, "head_shape_fnam": 562, "sort_by_ch_nam": 562, "e64": 562, "rawbti": 562, "data_format": 563, "date_format": 563, "int16": 563, "int32": 563, "numsampl": 563, "rawcnt": 563, "system_clock": 564, "rawctf": 564, "dap": [565, 688], "rs3": 565, "dpa": [565, 688], "cef": [565, 688], "rawcurri": 565, "storag": [566, 725], "sao2": 566, "subsecond": 566, "latin1": [567, 688, 694], "trev": 568, "e1": [568, 701], "e2": [568, 701], "e3": [568, 701], "rawegi": 568, "raweximia": 569, "find_overlap": 570, "overlap_threshold": 570, "occular": 570, "blink_l": 570, "blink_r": 570, "blink_both": 570, "raweyelink": 570, "data_nam": [571, 695, 699], "ft_datatype_raw": 571, "binfil": 573, "opmeg": 573, "rawfil": 573, "rawgdf": 574, "rawhitachi": 575, "3x5": 575, "etg": 575, "7000": 575, "d1": 575, "s2": 575, "d2": 575, "s3": 575, "d3": 575, "s4": 575, "d4": 575, "s5": 575, "d5": 575, "s6": 575, "d6": 575, "s7": 575, "d7": 575, "s8": 575, "ft7": 575, "tp7": 575, "3x3": [575, 602], "laid": 575, "d8": 575, "s9": 575, "d9": 575, "s10": 575, "3x11": 575, "d10": 575, "s11": 575, "d11": 575, "s12": 575, "d12": 575, "s13": 575, "d13": 575, "s14": 575, "d14": 575, "s16": 575, "d16": 575, "s17": 575, "d17": 575, "s18": 575, "stim_cod": 576, "allow_unknown_format": [576, 696], "laboratori": [576, 696], "neuroelectr": 577, "rawnedf": 577, "nihon": 579, "kohden": 579, "rawnihon": 579, "nosatflag": 580, "rawnirx": 580, "wlx": 580, "nosatflags_wlx": 580, "neuralsg": 581, "rawpersyst": 582, "jnir": 583, "rawsnirf": 583, "indent": [584, 842], "read_limit": [584, 842], "max_str": [584, 842], "mne_show_fiff": 584, "mri_tal": [585, 820], "data_typ": 586, "reset_rang": 586, "fifft_float": 586, "fifft_doubl": 586, "fifft_dau_pack16": 586, "uniti": 586, "grow_outsid": 587, "standard_devi": 590, "relative_radii": 598, "radii": [598, 735], "n_events_in": 600, "n_events_out": 600, "1111111111111111": [602, 603, 608, 609, 614, 618, 619], "time_func": 605, "inv_split": [608, 609], "snr_est": 610, "unregular": 610, "biggest": 610, "chi": 610, "normalis": [611, 612], "willb": [611, 612], "n_orient_inv": [611, 612, 614], "n_orient_fwd": [611, 612, 614], "pca_var": [611, 612], "cog_err": 617, "graviti": 617, "cog": 617, "maxrad_ext": 617, "peak_amp": 617, "sum_amp": 617, "surf_nam": [621, 705], "mne_docs_kind": 623, "mne_docs_vers": 623, "grad_reject": 625, "mag_reject": 625, "eeg_reject": 625, "eog_reject": 625, "explanatori": [634, 685], "info_": 634, "intercept_": 634, "instabl": 635, "debat": 635, "zca": 635, "tol_fastica": 635, "tol_picard": 635, "current_fit": 635, "unfit": 635, "pre_whitener_": 635, "pca_components_": 635, "pca_mean_": 635, "pca_explained_variance_": 635, "scrap": 635, "n_samples_": 635, "ummix": [635, 636], "supra": [635, 637], "ecg_idx": 635, "kuiper": 635, "eog_idx": 635, "paralyz": 635, "threefold": 635, "farthest": 635, "msucl": 635, "ref_ica": 635, "ref_idx": 635, "unclean": 635, "pvaf": 635, "usecas": [635, 882], "plot_std": [635, 878, 880], "image_arg": [635, 783, 878, 880], "psd_arg": [635, 878, 880], "topomap_axi": [635, 880], "image_axi": [635, 880], "erp_axi": [635, 880], "spectrum_axi": [635, 880], "variance_axi": [635, 880], "logarithm": [635, 880], "ass": [635, 881], "n_ica_compon": [635, 881], "sublabel": [635, 881], "pearsonr": 635, "skew": 635, "correct_overlap": 636, "overlapp_correct": 636, "evokeds_": 636, "event_id_": 636, "correct_overlap_": 636, "n_event_typ": 636, "bad_perc": 637, "bad_peak": 637, "bad_flat": 637, "uncommon": 637, "rotation_velocity_limit": 639, "translation_velocity_limit": 639, "lm_cutoff": 643, "epoch_threshold": 643, "bw_method": 643, "intrins": 643, "hjorth": 643, "gaussian_kd": 643, "n_legendre_term": 644, "lap": [644, 727], "inst_csd": 644, "n_imbal": 645, "multipol": [645, 670], "bad_condit": [646, 659, 670], "extended_proj": [646, 659, 670], "ill": [646, 659, 670], "n_meg": [646, 659], "n_moment": 646, "n_good_meg": 646, "reg_moment": 646, "n_use_in": 646, "dagger": 646, "phi": 646, "phi_in": 646, "data_meg_good": 646, "raw_ev": [647, 648], "avg_ref": [647, 648], "ecg_ev": [647, 660, 663], "0005": [648, 935], "e0g": 648, "magentomet": 649, "quadratur": 649, "corrmapplugin1": 650, "categoris": 650, "preexist": 650, "template_fig": 650, "labelled_": 650, "mag_pick": 651, "grad_pick": 651, "r_peak_events_arrai": 652, "doctest": 652, "interp_thresh": 654, "insts_bad": 654, "avg_error": 655, "max_error": 655, "screen_siz": [655, 657], "screen_dist": [655, 657], "screen_resolut": [655, 657], "h3": 655, "hv3": 655, "n_calibration_point": 655, "show_offset": 655, "unpredict": 656, "px": 658, "l_x": 658, "r_pupil": 658, "noisy_ch": 659, "flat_ch": 659, "scores_flat": 659, "limits_flat": 659, "st_fix": [659, 670], "d_k": 659, "mu_d": 659, "textrm": 659, "return_ecg": 660, "ch_ecg": [660, 663], "average_puls": [660, 663], "ecg_sourc": 663, "eog_sourc": 664, "max_peak_dist": 665, "voxels_max": 665, "use_min": 665, "hypointens": 665, "hyperintens": 665, "elec_imag": 665, "n_neighbor": 666, "pressur": 666, "craniotomi": 666, "reg_affin": [667, 821, 822, 823], "montage_warp": 667, "l_rate": 668, "w_chang": 668, "anneal_deg": 668, "anneal_step": 668, "n_subgauss": 668, "kurt_siz": 668, "ext_block": 668, "blowup": [668, 748], "blowup_fac": 668, "n_small_angl": 668, "use_bia": 668, "kurtosi": 668, "unmixing_matrix": 668, "return_max_it": 668, "bad_limit": 669, "forth": 670, "relicens": 670, "permiss": 670, "certifi": 670, "seamless": 670, "abramowitz": 670, "stegun": 670, "us2006031038": 670, "us6876196": 670, "wo2005067789": 670, "wo2005078467": 670, "wo2006114473": 670, "lawyer": 670, "raw_er": 671, "from_raw": 671, "inject": 671, "raw_er_prepar": 671, "provision": 678, "x0": [679, 768], "peak_loc": 679, "peak_mag": 679, "nathanael": 679, "yoder": 679, "ncyoder": 679, "purdu": 679, "36900026": 679, "76007351": 679, "imb_cal": 681, "t_raw": 684, "t_other": 684, "n_picks_ref": 685, "epochs_no_av": 685, "epochs_clean": 685, "n_parcel": 687, "amrk": 688, "patch_stat": [690, 712], "s_id": 690, "eventtyp": 694, "trialinfo_column": 695, "mne_browse_raw": 697, "sidecar": 698, "timelock": 699, "_fwd": 702, "annot_fnam": [705, 930], "mne_make_morph_map": 707, "morph_map": 707, "left_map": 707, "right_map": 707, "asterisk": 710, "source_morph": 711, "return_dict": 713, "file_format": [713, 933], "voxels": [713, 933], "xra": [713, 933], "yra": [713, 933], "zra": [713, 933], "cra": [713, 933], "n_face": [713, 716, 933], "return_al": 715, "fname_in": 716, "clockwis": [716, 839], "counterclockwis": 716, "spcecifi": 717, "bem_nam": 719, "subjects_from": [719, 722], "ba3a": 720, "cfg": 720, "skip_fiduci": 721, "oserror": 721, "src_name": 722, "my_source_spac": 722, "mne_sensitivity_map": 723, "on_bad": 724, "cache_dir": 725, "output_format": 728, "howto": 728, "asctim": 728, "levelnam": 728, "return_old_level": 729, "add_fram": [729, 828], "old_level": 729, "memmap_min_s": 730, "megabyt": 730, "ox": 732, "oi": 732, "iii": 732, "get_stim_channel": 733, "stim_data": 733, "inhomogen": 736, "poisson": 736, "stc_true": [738, 739, 740, 741, 742, 743, 744, 745], "stc_est": [738, 739, 740, 741, 742, 743, 744, 745], "ppe": 740, "dfrac": [740, 745], "sum_i": [740, 745], "s_i": [740, 745], "tp": [741, 742], "fn": 742, "2q": 743, "r_k": 743, "r_l": 743, "mathbb": 743, "dle": 743, "terminologi": 743, "actual_snr": 747, "sti001": 748, "allow_overlap": 750, "coo_matrix": [753, 754, 755, 756, 757, 758, 759, 763], "additit": 754, "remap_vertic": [756, 759], "reassign": [756, 759], "pval_correct": [761, 767], "n_bootstrap": 762, "spmatrix": [763, 770, 771, 773, 774], "n_ob": 763, "chan_adj": 763, "5600x5600": 763, "27076": 763, "slowest": 764, "a2b2": 764, "greenhous": 764, "geisser": 764, "f_val": 764, "homoscedast": 765, "kruskal": 765, "walli": 765, "pvalu": 766, "yekuti": 767, "negcorr": 767, "n_regressor": 768, "n_cond": 769, "enorm": 769, "overload": 769, "subepoch": 769, "n_predictor": 769, "time_window_length": 769, "t_power": [770, 771, 773, 774], "check_disjoint": [770, 771, 773, 774], "subarrai": 770, "kth": 770, "unconnect": [770, 771, 773, 774], "disjoint": [770, 771, 773, 774], "rv_continu": [770, 771, 773, 774], "untract": 772, "spatial_exclud": [773, 774], "p_thresh": 775, "equal_var": 777, "ball": 778, "volu": 778, "do_neighbor_vert": 780, "do_neighbor_tri": 780, "show_path": 782, "power_baselin": 783, "frequency_window": 783, "as_cov": 784, "pick_frequ": 784, "getitem_epochspectrum_return": [785, 786], "ci_alpha": [785, 786, 788, 789], "latex": [785, 786, 788, 789], "pertin": 787, "12676": 787, "getitem_spectrum_return": [788, 789], "sixth": [788, 789], "subscript": [788, 789], "freq_indic": [788, 789], "half_nbw": 797, "kmax": 797, "nw": 797, "half_bw": 797, "bw": 797, "f0": 797, "tridiagon": 797, "jw": 798, "jnw": 798, "tx": 800, "n_step": [800, 808, 833], "_cycl": [801, 811, 812, 813, 815, 816], "desired_fwhm": [801, 811], "morlet2": [801, 811], "sp_morlet": [801, 811], "this_fwhm": [801, 811], "wavelet_sp": [801, 811], "half_max": [801, 811], "n_taper": [803, 813], "get_window": [804, 889], "epoch_data": [812, 813], "avg_power_itc": [812, 813], "power_": [812, 813], "interrel": [812, 813, 815, 816, 948], "undermin": [813, 816], "intertri": [814, 817], "st_power": 814, "from_str": 820, "to_str": 820, "reg_img": 821, "trans2": 822, "shear": 823, "affine_registr": 823, "contextlib": 827, "contextmanag": 827, "my_fnam": 827, "moin": 829, "pythondecoratorlibrari": 829, "sentenc": 829, "ignore_namespac": 830, "travers": 830, "_funct": 831, "dec": 831, "filler": 831, "5880": 831, "offscreen": 833, "buggi": 833, "playbackspe": [833, 954], "colormaprang": [833, 835, 954], "distributed_source_pow": 833, "vertexselect": [833, 954], "add_skul": [833, 954], "remove_data": 833, "remove_head": 833, "remove_label": 833, "remove_annot": 833, "remove_sensor": 833, "remove_skul": 833, "remove_text": 833, "remove_volume_label": 833, "timeview": 833, "get_picked_point": 833, "geo": 833, "ctab": 833, "lh_ctab": 833, "rh_ctab": 833, "rbga": 833, "icefir": 833, "rocket": 833, "nvtx": 833, "font": [833, 894], "add_scalar_bar": 833, "title_font_s": 833, "hex": [833, 859], "n_coord": 833, "stereotax": 833, "coord_as_vert": 833, "1cm": 833, "subdir": 833, "max_dist": 833, "eeg_color": [833, 851], "to_rgba_arrai": [833, 851], "justif": 833, "update_text": 833, "dilat": 833, "apply_auto_sc": 833, "clear_glyph": 833, "zenith": [833, 903], "plot_time_cours": [833, 954], "vertex_id": [833, 912], "plot_time_lin": [833, 954], "reset_view": [833, 954], "restore_user_sc": [833, 954], "bitrat": 833, "imageio": 833, "mov": 833, "n_frame": 833, "separate_canva": 833, "set_data_smooth": [833, 954], "set_playback_spe": [833, 954], "playback": [833, 909], "set_time_interpol": [833, 954], "set_time_point": [833, 954], "time_idx": 833, "setup_time_view": [833, 954], "time_interpol": 833, "toggle_interfac": [833, 954], "toggle_playback": [833, 954], "update_lut": 833, "imdata": 834, "onclick": [834, 954], "backend_bas": 834, "bg": [834, 837], "field_strength_meg": 835, "field_strength_eeg": 835, "set_contour": [835, 954], "set_vmax": [835, 954], "set_ratio": 837, "ax_im": 837, "node_nam": 839, "start_between": 839, "group_sep": 839, "n_node_nam": 839, "fname_1": 842, "fname_2": 842, "smooth_shad": [843, 901], "_render": 843, "undocu": 843, "backend_us": [845, 847], "ch_dx": 848, "teal": 850, "onselect": [852, 897], "rectangleselector": [852, 897], "show_indic": 853, "halfwai": 853, "colorbarbas": 854, "polarax": 857, "type_snr": 858, "type_pow": 858, "type_resid": 858, "invert_i": 859, "unweight": 859, "n_evok": 859, "hexadecim": 859, "equal_spac": 868, "1f77b4": 876, "fscale": [876, 883], "alim": [876, 883], "pointsiz": 891, "bet": 891, "bluish": 892, "fig_numb": 894, "cone": 894, "axesimag": 897, "contourset": 897, "backend_nam": [900, 904, 919, 920], "old_backend_nam": [900, 904], "inlin": [900, 940, 945], "jupyterlab": 900, "colab": 900, "antialia": [901, 940], "depth_peel": 901, "multi_sampl": 901, "hide_sensor": 905, "dn": 905, "include_ev": 914, "exclude_ev": 914, "bi": 914, "untouch": 918, "hsv": 930, "table_nam": 930, "colort": 930, "create_stamp": 933, "pycharm": [935, 945], "appnop": 935, "nope": 935, "nsappsleepdis": 935, "tempt": 935, "benfrederickson": 935, "dont": 935, "stackoverflow": 935, "21752259": 935, "write_": 935, "h5io": [935, 945], "h5py": [935, 945], "resid": 935, "plot_find_ecg_artifact": 935, "ordinarili": 935, "multithread": [935, 940], "intel": [935, 940, 944], "mkl": 935, "openmp": 935, "omp_num_thread": 935, "openblas_num_thread": 935, "num_cpu": 935, "sample_audvis_eog": 935, "implic": 935, "simplist": 935, "nvidia": [935, 940], "epochs_path": 935, "protrud": 935, "shrunken": 935, "dura": 935, "mri_norm": 935, "xopt": 935, "gentl": 935, "listserv": 935, "recon_al": 935, "autorecon2": 935, "autorecon3": 935, "w3school": 937, "carpentri": 937, "lesson": 937, "cond1": 938, "cond2": 938, "addpath": 938, "pop_fileio": 938, "pop_eegfiltnew": 938, "pop_averef": 938, "pop_select": 938, "pop_runica": 938, "pop_binica": 938, "pop_compprop": 938, "comp_num": 938, "winhandl": 938, "comphead": 938, "pop_selectcomp": 938, "list_of_components_to_exclud": 938, "pop_epoch": 938, "eeg_epoch": 938, "pop_timtopo": 938, "pop_compareerp": 938, "eeg_epochs1": 938, "eeg_epochs2": 938, "pop_saveset": 938, "lfreq": 938, "hfreq": 938, "filtered_raw": 938, "nb_conda_kernel": 940, "osmesa": 940, "xvfb": 940, "mesalib": 940, "git": [940, 941, 949], "driver": 940, "test_filt": 940, "swr": 940, "cento": 940, "mesa_gl_version_overrid": 940, "rend": 940, "msaa": 940, "libgl_always_softwar": 940, "prebuilt": 940, "xzvf": 940, "mesa_18": 940, "6_centos_lib": 940, "tgz": 940, "libgl_drivers_path": 940, "pwd": 940, "ld_library_path": 940, "went": [940, 941], "glxinfo": 940, "uninstal": [940, 949], "20348": 941, "sp0": 941, "msc": 941, "1936": 941, "amd64": 941, "miniconda3": 941, "intel64": 941, "genuineintel": 941, "dev67": 941, "gb12384562": 941, "qtagg": 941, "d92815a": 941, "gallium": 941, "pyqt5": [941, 945], "modulenotfounderror": 941, "bashrc": [941, 947], "zprofil": 941, "zsh": [941, 947], "tcsh": [942, 947], "ubuntu": [942, 944, 947], "bionic": 944, "beaver": 944, "1_0": 944, "appl": 944, "silicon": 944, "python_1": 944, "libmamba": 945, "conda_solv": 945, "unlock": 945, "vscode": 945, "microsoft": 945, "anaconda3": 945, "paid": 945, "profession": 945, "miniforg": 946, "mambaforg": 946, "cpython": 946, "poetri": 946, "venv": 946, "unproblemat": 946, "leopard": 947, "powerpc": 947, "runtim": 947, "mne_convert_mne_data": 947, "mne_epochs2mat": 947, "mne_raw2mat": 947, "mne_simu": 947, "xcode": 947, "xquartz": 947, "x11": 947, "libxt": 947, "dylib": 947, "bak": 947, "flat_namespac": 947, "netpbm": 947, "brew": 947, "app": 947, "path_to_desired_install_loc": 947, "zxvf": 947, "path_to_archive_fil": 947, "pkg": 947, "untrust": 947, "matlab_root": 947, "r2018b": 947, "undefin": 947, "mne_setup_sh": 947, "csh": 947, "mne_setup": 947, "path_to_mn": 947, "path_to_matlab": 947, "emul": 947, "zshrc": 947, "cshrc": 947, "tcshrc": 947, "setenv": [947, 950], "mne_opengl_test": 947, "redraw": 947, "spent": 947, "revolut": 947, "interrupt": 947, "glx": 947, "nondirect": 947, "IT": 947, "vnc": 947, "libxp": 947, "launchpad": 947, "7ezeehio": 947, "ppa": 947, "zeehio": 947, "libxp6": 947, "libgfortran": 947, "libfortran": 947, "gnu": 947, "maxdepth": 947, "interoper": 948, "reimplement": 948, "connectom": 948, "alphacsc": 948, "pactool": 948, "microst": 948, "conpi": 948, "eelbrain": 948, "posthoc": 948, "prep": 948, "pyprep": 948, "sesam": 948, "sesameeg": 948, "invertmeeg": 948, "niseq": 948, "name_of_environ": 949, "fool": 949, "proof": 949, "old_mn": 949, "dep": 949, "pubsw": 950, "modular": 951, "qt3d": 951, "babymeg": 951, "tmsi": 951, "refa": 951, "brainamp": 951, "ant": 951, "eegosport": 951, "gusbamp": 951, "bdfl": 953, "figureclos": 954, "disable_ui_ev": 954, "unlink": 954, "unsubscrib": 954}, "objects": {"": [[14, 0, 0, "-", "mne"]], "mne": [[324, 1, 1, "", "AcqParserFIF"], [325, 1, 1, "", "Annotations"], [326, 1, 1, "", "BaseEpochs"], [327, 1, 1, "", "BiHemiLabel"], [328, 1, 1, "", "Covariance"], [329, 1, 1, "", "Dipole"], [330, 1, 1, "", "DipoleFixed"], [331, 1, 1, "", "Epochs"], [332, 1, 1, "", "EpochsArray"], [333, 1, 1, "", "Evoked"], [334, 1, 1, "", "EvokedArray"], [335, 1, 1, "", "Forward"], [336, 1, 1, "", "Info"], [337, 1, 1, "", "Label"], [338, 1, 1, "", "MixedSourceEstimate"], [339, 1, 1, "", "MixedVectorSourceEstimate"], [340, 1, 1, "", "Projection"], [341, 1, 1, "", "Report"], [342, 1, 1, "", "SourceEstimate"], [343, 1, 1, "", "SourceMorph"], [344, 1, 1, "", "SourceSpaces"], [345, 1, 1, "", "VectorSourceEstimate"], [346, 1, 1, "", "VolSourceEstimate"], [347, 1, 1, "", "VolVectorSourceEstimate"], [348, 4, 1, "", "add_reference_channels"], [349, 4, 1, "", "add_source_space_distances"], [350, 4, 1, "", "annotations_from_events"], [351, 4, 1, "", "apply_forward"], [352, 4, 1, "", "apply_forward_raw"], [353, 4, 1, "", "average_forward_solutions"], [18, 0, 0, "-", "baseline"], [9, 0, 0, "-", "beamformer"], [8, 0, 0, "-", "bem"], [378, 4, 1, "", "channel_indices_by_type"], [379, 4, 1, "", "channel_type"], [13, 0, 0, "-", "channels"], [13, 0, 0, "-", "chpi"], [422, 4, 1, "", "combine_evoked"], [423, 4, 1, "", "compute_covariance"], [424, 4, 1, "", "compute_proj_epochs"], [425, 4, 1, "", "compute_proj_evoked"], [426, 4, 1, "", "compute_proj_raw"], [427, 4, 1, "", "compute_rank"], [428, 4, 1, "", "compute_raw_covariance"], [429, 4, 1, "", "compute_source_morph"], [430, 4, 1, "", "concatenate_epochs"], [431, 4, 1, "", "concatenate_events"], [432, 4, 1, "", "concatenate_raws"], [433, 4, 1, "", "convert_forward_solution"], [437, 4, 1, "", "count_annotations"], [438, 4, 1, "", "count_events"], [442, 4, 1, "", "create_default_subject"], [443, 4, 1, "", "create_info"], [10, 0, 0, "-", "cuda"], [3, 0, 0, "-", "datasets"], [482, 4, 1, "", "decimate_surface"], [4, 0, 0, "-", "decoding"], [502, 4, 1, "", "dig_mri_distances"], [9, 0, 0, "-", "dipole"], [5, 0, 0, "-", "epochs"], [508, 4, 1, "", "equalize_channels"], [5, 0, 0, "-", "event"], [512, 4, 1, "", "events_from_annotations"], [6, 0, 0, "-", "export"], [517, 4, 1, "", "extract_label_time_course"], [13, 0, 0, "-", "filter"], [524, 4, 1, "", "find_events"], [525, 4, 1, "", "find_stim_steps"], [526, 4, 1, "", "fit_dipole"], [531, 4, 1, "", "get_config"], [532, 4, 1, "", "get_config_path"], [533, 4, 1, "", "get_head_surf"], [534, 4, 1, "", "get_meg_helmet_surf"], [535, 4, 1, "", "get_montage_volume_labels"], [536, 4, 1, "", "get_volume_labels_from_aseg"], [537, 4, 1, "", "get_volume_labels_from_src"], [538, 4, 1, "", "grade_to_tris"], [539, 4, 1, "", "grade_to_vertices"], [540, 4, 1, "", "grand_average"], [541, 4, 1, "", "grow_labels"], [543, 4, 1, "", "head_to_mni"], [544, 4, 1, "", "head_to_mri"], [9, 0, 0, "-", "inverse_sparse"], [15, 0, 0, "-", "io"], [588, 4, 1, "", "label_sign_flip"], [589, 4, 1, "", "labels_to_stc"], [590, 4, 1, "", "make_ad_hoc_cov"], [591, 4, 1, "", "make_bem_model"], [592, 4, 1, "", "make_bem_solution"], [593, 4, 1, "", "make_field_map"], [594, 4, 1, "", "make_fixed_length_epochs"], [595, 4, 1, "", "make_fixed_length_events"], [596, 4, 1, "", "make_forward_dipole"], [597, 4, 1, "", "make_forward_solution"], [598, 4, 1, "", "make_sphere_model"], [599, 4, 1, "", "match_channel_orders"], [600, 4, 1, "", "merge_events"], [9, 0, 0, "-", "minimum_norm"], [621, 4, 1, "", "morph_labels"], [622, 4, 1, "", "morph_source_spaces"], [623, 4, 1, "", "open_docs"], [624, 4, 1, "", "open_report"], [625, 4, 1, "", "parse_config"], [626, 4, 1, "", "pick_channels"], [627, 4, 1, "", "pick_channels_cov"], [628, 4, 1, "", "pick_channels_forward"], [629, 4, 1, "", "pick_channels_regexp"], [630, 4, 1, "", "pick_events"], [631, 4, 1, "", "pick_info"], [632, 4, 1, "", "pick_types"], [633, 4, 1, "", "pick_types_forward"], [13, 0, 0, "-", "preprocessing"], [687, 4, 1, "", "random_parcellation"], [688, 4, 1, "", "read_annotations"], [689, 4, 1, "", "read_bem_solution"], [690, 4, 1, "", "read_bem_surfaces"], [691, 4, 1, "", "read_cov"], [692, 4, 1, "", "read_dipole"], [693, 4, 1, "", "read_epochs"], [694, 4, 1, "", "read_epochs_eeglab"], [695, 4, 1, "", "read_epochs_fieldtrip"], [696, 4, 1, "", "read_epochs_kit"], [697, 4, 1, "", "read_events"], [698, 4, 1, "", "read_evoked_besa"], [699, 4, 1, "", "read_evoked_fieldtrip"], [700, 4, 1, "", "read_evokeds"], [701, 4, 1, "", "read_evokeds_mff"], [702, 4, 1, "", "read_forward_solution"], [703, 4, 1, "", "read_freesurfer_lut"], [704, 4, 1, "", "read_label"], [705, 4, 1, "", "read_labels_from_annot"], [706, 4, 1, "", "read_lta"], [707, 4, 1, "", "read_morph_map"], [708, 4, 1, "", "read_proj"], [709, 4, 1, "", "read_reject_parameters"], [710, 4, 1, "", "read_source_estimate"], [711, 4, 1, "", "read_source_morph"], [712, 4, 1, "", "read_source_spaces"], [713, 4, 1, "", "read_surface"], [714, 4, 1, "", "read_talxfm"], [715, 4, 1, "", "read_trans"], [716, 4, 1, "", "read_tri"], [717, 4, 1, "", "read_vectorview_selection"], [718, 4, 1, "", "rename_channels"], [719, 4, 1, "", "scale_bem"], [720, 4, 1, "", "scale_labels"], [721, 4, 1, "", "scale_mri"], [722, 4, 1, "", "scale_source_space"], [723, 4, 1, "", "sensitivity_map"], [724, 4, 1, "", "set_bipolar_reference"], [725, 4, 1, "", "set_cache_dir"], [726, 4, 1, "", "set_config"], [727, 4, 1, "", "set_eeg_reference"], [728, 4, 1, "", "set_log_file"], [729, 4, 1, "", "set_log_level"], [730, 4, 1, "", "set_memmap_min_size"], [731, 4, 1, "", "setup_source_space"], [732, 4, 1, "", "setup_volume_source_space"], [19, 0, 0, "-", "simulation"], [753, 4, 1, "", "spatial_dist_adjacency"], [754, 4, 1, "", "spatial_inter_hemi_adjacency"], [755, 4, 1, "", "spatial_src_adjacency"], [756, 4, 1, "", "spatial_tris_adjacency"], [757, 4, 1, "", "spatio_temporal_dist_adjacency"], [758, 4, 1, "", "spatio_temporal_src_adjacency"], [759, 4, 1, "", "spatio_temporal_tris_adjacency"], [760, 4, 1, "", "split_label"], [21, 0, 0, "-", "stats"], [778, 4, 1, "", "stc_near_sensors"], [779, 4, 1, "", "stc_to_label"], [782, 4, 1, "", "sys_info"], [22, 0, 0, "-", "time_frequency"], [819, 4, 1, "", "transform_surface_to"], [13, 0, 0, "-", "transforms"], [827, 4, 1, "", "use_coil_def"], [828, 1, 1, "", "use_log_level"], [10, 0, 0, "-", "utils"], [831, 4, 1, "", "verbose"], [832, 4, 1, "", "vertex_to_mni"], [23, 0, 0, "-", "viz"], [921, 4, 1, "", "what"], [922, 4, 1, "", "write_bem_solution"], [923, 4, 1, "", "write_bem_surfaces"], [924, 4, 1, "", "write_cov"], [925, 4, 1, "", "write_events"], [926, 4, 1, "", "write_evokeds"], [927, 4, 1, "", "write_forward_solution"], [928, 4, 1, "", "write_head_bem"], [929, 4, 1, "", "write_label"], [930, 4, 1, "", "write_labels_to_annot"], [931, 4, 1, "", "write_proj"], [932, 4, 1, "", "write_source_spaces"], [933, 4, 1, "", "write_surface"], [934, 4, 1, "", "write_trans"]], "mne.AcqParserFIF": [[324, 2, 1, "", "__getitem__"], [324, 2, 1, "", "__len__"], [324, 3, 1, "", "categories"], [324, 3, 1, "", "events"], [324, 2, 1, "", "get_condition"]], "mne.Annotations": [[325, 2, 1, "", "__add__"], [325, 2, 1, "", "__getitem__"], [325, 2, 1, "", "__iter__"], [325, 2, 1, "", "__len__"], [325, 2, 1, "", "append"], [325, 2, 1, "", "copy"], [325, 2, 1, "", "count"], [325, 2, 1, "", "crop"], [325, 2, 1, "", "delete"], [325, 3, 1, "", "orig_time"], [325, 2, 1, "", "rename"], [325, 2, 1, "", "save"], [325, 2, 1, "", "set_durations"], [325, 2, 1, "", "to_data_frame"]], "mne.BiHemiLabel": [[327, 2, 1, "", "__add__"], [327, 2, 1, "", "__len__"], [327, 2, 1, "", "__sub__"]], "mne.Covariance": [[328, 2, 1, "", "__add__"], [328, 2, 1, "", "__contains__"], [328, 2, 1, "", "__getitem__"], [328, 2, 1, "", "__iter__"], [328, 2, 1, "", "__len__"], [328, 2, 1, "", "as_diag"], [328, 3, 1, "", "ch_names"], [328, 2, 1, "", "clear"], [328, 2, 1, "", "copy"], [328, 3, 1, "", "data"], [328, 2, 1, "", "fromkeys"], [328, 2, 1, "", "get"], [328, 2, 1, "", "items"], [328, 2, 1, "", "keys"], [328, 3, 1, "", "nfree"], [328, 2, 1, "", "pick_channels"], [328, 2, 1, "", "plot"], [328, 2, 1, "", "plot_topomap"], [328, 2, 1, "", "pop"], [328, 2, 1, "", "popitem"], [328, 2, 1, "", "save"], [328, 2, 1, "", "setdefault"], [328, 2, 1, "", "update"], [328, 2, 1, "", "values"]], "mne.Dipole": [[329, 2, 1, "", "__getitem__"], [329, 2, 1, "", "__len__"], [329, 2, 1, "", "copy"], [329, 2, 1, "", "crop"], [329, 2, 1, "", "plot_amplitudes"], [329, 2, 1, "", "plot_locations"], [329, 2, 1, "", "save"], [329, 2, 1, "", "time_as_index"], [329, 3, 1, "", "times"], [329, 2, 1, "", "to_mni"], [329, 2, 1, "", "to_mri"], [329, 2, 1, "", "to_volume_labels"]], "mne.DipoleFixed": [[330, 3, 1, "", "ch_names"], [330, 2, 1, "", "copy"], [330, 2, 1, "", "crop"], [330, 2, 1, "", "decimate"], [330, 2, 1, "", "plot"], [330, 2, 1, "", "save"], [330, 2, 1, "", "shift_time"], [330, 2, 1, "", "time_as_index"], [330, 3, 1, "", "times"], [330, 3, 1, "", "tmax"], [330, 3, 1, "", "tmin"]], "mne.Epochs": [[331, 2, 1, "", "__contains__"], [331, 2, 1, "", "__getitem__"], [331, 2, 1, "", "__iter__"], [331, 2, 1, "", "__len__"], [331, 2, 1, "", "add_annotations_to_metadata"], [331, 2, 1, "", "add_channels"], [331, 2, 1, "", "add_proj"], [331, 2, 1, "", "add_reference_channels"], [331, 2, 1, "", "anonymize"], [331, 2, 1, "", "apply_baseline"], [331, 2, 1, "", "apply_function"], [331, 2, 1, "", "apply_hilbert"], [331, 2, 1, "", "apply_proj"], [331, 2, 1, "", "as_type"], [331, 2, 1, "", "average"], [331, 3, 1, "", "ch_names"], [331, 3, 1, "", "compensation_grade"], [331, 2, 1, "", "compute_psd"], [331, 2, 1, "", "copy"], [331, 2, 1, "", "crop"], [331, 2, 1, "", "decimate"], [331, 2, 1, "", "del_proj"], [331, 2, 1, "", "drop"], [331, 2, 1, "", "drop_bad"], [331, 2, 1, "", "drop_channels"], [331, 2, 1, "", "drop_log_stats"], [331, 2, 1, "", "equalize_event_counts"], [331, 2, 1, "", "export"], [331, 3, 1, "", "filename"], [331, 2, 1, "", "filter"], [331, 2, 1, "", "get_annotations_per_epoch"], [331, 2, 1, "", "get_channel_types"], [331, 2, 1, "", "get_data"], [331, 2, 1, "", "get_montage"], [331, 2, 1, "", "interpolate_bads"], [331, 2, 1, "", "iter_evoked"], [331, 2, 1, "", "load_data"], [331, 3, 1, "", "metadata"], [331, 2, 1, "", "next"], [331, 2, 1, "", "pick"], [331, 2, 1, "", "pick_channels"], [331, 2, 1, "", "pick_types"], [331, 2, 1, "", "plot"], [331, 2, 1, "", "plot_drop_log"], [331, 2, 1, "", "plot_image"], [331, 2, 1, "", "plot_projs_topomap"], [331, 2, 1, "", "plot_psd"], [331, 2, 1, "", "plot_psd_topo"], [331, 2, 1, "", "plot_psd_topomap"], [331, 2, 1, "", "plot_sensors"], [331, 2, 1, "", "plot_topo_image"], [331, 3, 1, "", "proj"], [331, 2, 1, "", "rename_channels"], [331, 2, 1, "", "reorder_channels"], [331, 2, 1, "", "resample"], [331, 2, 1, "", "reset_drop_log_selection"], [331, 2, 1, "", "save"], [331, 2, 1, "", "savgol_filter"], [331, 2, 1, "", "set_annotations"], [331, 2, 1, "", "set_channel_types"], [331, 2, 1, "", "set_eeg_reference"], [331, 2, 1, "", "set_meas_date"], [331, 2, 1, "", "set_montage"], [331, 2, 1, "", "shift_time"], [331, 2, 1, "", "standard_error"], [331, 2, 1, "", "subtract_evoked"], [331, 2, 1, "", "time_as_index"], [331, 3, 1, "", "times"], [331, 3, 1, "", "tmax"], [331, 3, 1, "", "tmin"], [331, 2, 1, "", "to_data_frame"]], "mne.EpochsArray": [[332, 2, 1, "", "__contains__"], [332, 2, 1, "", "__getitem__"], [332, 2, 1, "", "__iter__"], [332, 2, 1, "", "__len__"], [332, 2, 1, "", "add_annotations_to_metadata"], [332, 2, 1, "", "add_channels"], [332, 2, 1, "", "add_proj"], [332, 2, 1, "", "add_reference_channels"], [332, 2, 1, "", "anonymize"], [332, 2, 1, "", "apply_baseline"], [332, 2, 1, "", "apply_function"], [332, 2, 1, "", "apply_hilbert"], [332, 2, 1, "", "apply_proj"], [332, 2, 1, "", "as_type"], [332, 2, 1, "", "average"], [332, 3, 1, "", "ch_names"], [332, 3, 1, "", "compensation_grade"], [332, 2, 1, "", "compute_psd"], [332, 2, 1, "", "copy"], [332, 2, 1, "", "crop"], [332, 2, 1, "", "decimate"], [332, 2, 1, "", "del_proj"], [332, 2, 1, "", "drop"], [332, 2, 1, "", "drop_bad"], [332, 2, 1, "", "drop_channels"], [332, 2, 1, "", "drop_log_stats"], [332, 2, 1, "", "equalize_event_counts"], [332, 2, 1, "", "export"], [332, 3, 1, "", "filename"], [332, 2, 1, "", "filter"], [332, 2, 1, "", "get_annotations_per_epoch"], [332, 2, 1, "", "get_channel_types"], [332, 2, 1, "", "get_data"], [332, 2, 1, "", "get_montage"], [332, 2, 1, "", "interpolate_bads"], [332, 2, 1, "", "iter_evoked"], [332, 2, 1, "", "load_data"], [332, 3, 1, "", "metadata"], [332, 2, 1, "", "next"], [332, 2, 1, "", "pick"], [332, 2, 1, "", "pick_channels"], [332, 2, 1, "", "pick_types"], [332, 2, 1, "", "plot"], [332, 2, 1, "", "plot_drop_log"], [332, 2, 1, "", "plot_image"], [332, 2, 1, "", "plot_projs_topomap"], [332, 2, 1, "", "plot_psd"], [332, 2, 1, "", "plot_psd_topo"], [332, 2, 1, "", "plot_psd_topomap"], [332, 2, 1, "", "plot_sensors"], [332, 2, 1, "", "plot_topo_image"], [332, 3, 1, "", "proj"], [332, 2, 1, "", "rename_channels"], [332, 2, 1, "", "reorder_channels"], [332, 2, 1, "", "resample"], [332, 2, 1, "", "reset_drop_log_selection"], [332, 2, 1, "", "save"], [332, 2, 1, "", "savgol_filter"], [332, 2, 1, "", "set_annotations"], [332, 2, 1, "", "set_channel_types"], [332, 2, 1, "", "set_eeg_reference"], [332, 2, 1, "", "set_meas_date"], [332, 2, 1, "", "set_montage"], [332, 2, 1, "", "shift_time"], [332, 2, 1, "", "standard_error"], [332, 2, 1, "", "subtract_evoked"], [332, 2, 1, "", "time_as_index"], [332, 3, 1, "", "times"], [332, 3, 1, "", "tmax"], [332, 3, 1, "", "tmin"], [332, 2, 1, "", "to_data_frame"]], "mne.Evoked": [[333, 2, 1, "", "__contains__"], [333, 2, 1, "", "__neg__"], [333, 2, 1, "", "add_channels"], [333, 2, 1, "", "add_proj"], [333, 2, 1, "", "add_reference_channels"], [333, 2, 1, "", "animate_topomap"], [333, 2, 1, "", "anonymize"], [333, 2, 1, "", "apply_baseline"], [333, 2, 1, "", "apply_function"], [333, 2, 1, "", "apply_hilbert"], [333, 2, 1, "", "apply_proj"], [333, 2, 1, "", "as_type"], [333, 3, 1, "", "ch_names"], [333, 3, 1, "", "compensation_grade"], [333, 2, 1, "", "compute_psd"], [333, 2, 1, "", "copy"], [333, 2, 1, "", "crop"], [333, 3, 1, "", "data"], [333, 2, 1, "", "decimate"], [333, 2, 1, "", "del_proj"], [333, 2, 1, "", "detrend"], [333, 2, 1, "", "drop_channels"], [333, 2, 1, "", "export"], [333, 2, 1, "", "filter"], [333, 2, 1, "", "get_channel_types"], [333, 2, 1, "", "get_data"], [333, 2, 1, "", "get_montage"], [333, 2, 1, "", "get_peak"], [333, 2, 1, "", "interpolate_bads"], [333, 3, 1, "", "kind"], [333, 2, 1, "", "pick"], [333, 2, 1, "", "pick_channels"], [333, 2, 1, "", "pick_types"], [333, 2, 1, "", "plot"], [333, 2, 1, "", "plot_field"], [333, 2, 1, "", "plot_image"], [333, 2, 1, "", "plot_joint"], [333, 2, 1, "", "plot_projs_topomap"], [333, 2, 1, "", "plot_psd"], [333, 2, 1, "", "plot_psd_topo"], [333, 2, 1, "", "plot_psd_topomap"], [333, 2, 1, "", "plot_sensors"], [333, 2, 1, "", "plot_topo"], [333, 2, 1, "", "plot_topomap"], [333, 2, 1, "", "plot_white"], [333, 3, 1, "", "proj"], [333, 2, 1, "", "rename_channels"], [333, 2, 1, "", "reorder_channels"], [333, 2, 1, "", "resample"], [333, 2, 1, "", "save"], [333, 2, 1, "", "savgol_filter"], [333, 2, 1, "", "set_channel_types"], [333, 2, 1, "", "set_eeg_reference"], [333, 2, 1, "", "set_meas_date"], [333, 2, 1, "", "set_montage"], [333, 2, 1, "", "shift_time"], [333, 2, 1, "", "time_as_index"], [333, 3, 1, "", "times"], [333, 3, 1, "", "tmax"], [333, 3, 1, "", "tmin"], [333, 2, 1, "", "to_data_frame"]], "mne.EvokedArray": [[334, 2, 1, "", "__contains__"], [334, 2, 1, "", "__neg__"], [334, 2, 1, "", "add_channels"], [334, 2, 1, "", "add_proj"], [334, 2, 1, "", "add_reference_channels"], [334, 2, 1, "", "animate_topomap"], [334, 2, 1, "", "anonymize"], [334, 2, 1, "", "apply_baseline"], [334, 2, 1, "", "apply_function"], [334, 2, 1, "", "apply_hilbert"], [334, 2, 1, "", "apply_proj"], [334, 2, 1, "", "as_type"], [334, 3, 1, "", "ch_names"], [334, 3, 1, "", "compensation_grade"], [334, 2, 1, "", "compute_psd"], [334, 2, 1, "", "copy"], [334, 2, 1, "", "crop"], [334, 3, 1, "", "data"], [334, 2, 1, "", "decimate"], [334, 2, 1, "", "del_proj"], [334, 2, 1, "", "detrend"], [334, 2, 1, "", "drop_channels"], [334, 2, 1, "", "export"], [334, 2, 1, "", "filter"], [334, 2, 1, "", "get_channel_types"], [334, 2, 1, "", "get_data"], [334, 2, 1, "", "get_montage"], [334, 2, 1, "", "get_peak"], [334, 2, 1, "", "interpolate_bads"], [334, 3, 1, "", "kind"], [334, 2, 1, "", "pick"], [334, 2, 1, "", "pick_channels"], [334, 2, 1, "", "pick_types"], [334, 2, 1, "", "plot"], [334, 2, 1, "", "plot_field"], [334, 2, 1, "", "plot_image"], [334, 2, 1, "", "plot_joint"], [334, 2, 1, "", "plot_projs_topomap"], [334, 2, 1, "", "plot_psd"], [334, 2, 1, "", "plot_psd_topo"], [334, 2, 1, "", "plot_psd_topomap"], [334, 2, 1, "", "plot_sensors"], [334, 2, 1, "", "plot_topo"], [334, 2, 1, "", "plot_topomap"], [334, 2, 1, "", "plot_white"], [334, 3, 1, "", "proj"], [334, 2, 1, "", "rename_channels"], [334, 2, 1, "", "reorder_channels"], [334, 2, 1, "", "resample"], [334, 2, 1, "", "save"], [334, 2, 1, "", "savgol_filter"], [334, 2, 1, "", "set_channel_types"], [334, 2, 1, "", "set_eeg_reference"], [334, 2, 1, "", "set_meas_date"], [334, 2, 1, "", "set_montage"], [334, 2, 1, "", "shift_time"], [334, 2, 1, "", "time_as_index"], [334, 3, 1, "", "times"], [334, 3, 1, "", "tmax"], [334, 3, 1, "", "tmin"], [334, 2, 1, "", "to_data_frame"]], "mne.Forward": [[335, 2, 1, "", "copy"], [335, 2, 1, "", "pick_channels"], [335, 2, 1, "", "save"]], "mne.Info": [[336, 2, 1, "", "__contains__"], [336, 2, 1, "", "__getitem__"], [336, 2, 1, "", "__iter__"], [336, 2, 1, "", "__len__"], [336, 2, 1, "", "anonymize"], [336, 2, 1, "", "clear"], [336, 3, 1, "", "compensation_grade"], [336, 2, 1, "", "copy"], [336, 2, 1, "", "fromkeys"], [336, 2, 1, "", "get"], [336, 2, 1, "", "get_channel_types"], [336, 2, 1, "", "get_montage"], [336, 2, 1, "", "items"], [336, 2, 1, "", "keys"], [336, 2, 1, "", "normalize_proj"], [336, 2, 1, "", "plot_sensors"], [336, 2, 1, "", "pop"], [336, 2, 1, "", "popitem"], [336, 2, 1, "", "rename_channels"], [336, 2, 1, "", "save"], [336, 2, 1, "", "set_channel_types"], [336, 2, 1, "", "set_meas_date"], [336, 2, 1, "", "set_montage"], [336, 2, 1, "", "setdefault"], [336, 2, 1, "", "update"], [336, 2, 1, "", "values"]], "mne.Label": [[337, 2, 1, "", "__add__"], [337, 2, 1, "", "__len__"], [337, 2, 1, "", "__sub__"], [337, 2, 1, "", "center_of_mass"], [337, 2, 1, "", "compute_area"], [337, 2, 1, "", "copy"], [337, 2, 1, "", "distances_to_outside"], [337, 2, 1, "", "fill"], [337, 2, 1, "", "get_tris"], [337, 2, 1, "", "get_vertices_used"], [337, 2, 1, "", "morph"], [337, 2, 1, "", "restrict"], [337, 2, 1, "", "save"], [337, 2, 1, "", "smooth"], [337, 2, 1, "", "split"]], "mne.MixedSourceEstimate": [[338, 2, 1, "", "__add__"], [338, 2, 1, "", "__div__"], [338, 2, 1, "", "__mul__"], [338, 2, 1, "", "__neg__"], [338, 2, 1, "", "__sub__"], [338, 2, 1, "", "apply_baseline"], [338, 2, 1, "", "bin"], [338, 2, 1, "", "copy"], [338, 2, 1, "", "crop"], [338, 3, 1, "", "data"], [338, 2, 1, "", "extract_label_time_course"], [338, 2, 1, "", "get_peak"], [338, 2, 1, "", "mean"], [338, 2, 1, "", "plot"], [338, 2, 1, "", "resample"], [338, 2, 1, "", "save"], [338, 3, 1, "", "sfreq"], [338, 3, 1, "", "shape"], [338, 2, 1, "", "sqrt"], [338, 2, 1, "", "sum"], [338, 2, 1, "", "surface"], [338, 2, 1, "", "time_as_index"], [338, 3, 1, "", "times"], [338, 3, 1, "", "tmin"], [338, 2, 1, "", "to_data_frame"], [338, 2, 1, "", "transform"], [338, 2, 1, "", "transform_data"], [338, 3, 1, "", "tstep"], [338, 2, 1, "", "volume"]], "mne.MixedVectorSourceEstimate": [[339, 2, 1, "", "__add__"], [339, 2, 1, "", "__div__"], [339, 2, 1, "", "__mul__"], [339, 2, 1, "", "__neg__"], [339, 2, 1, "", "__sub__"], [339, 2, 1, "", "apply_baseline"], [339, 2, 1, "", "bin"], [339, 2, 1, "", "copy"], [339, 2, 1, "", "crop"], [339, 3, 1, "", "data"], [339, 2, 1, "", "extract_label_time_course"], [339, 2, 1, "", "get_peak"], [339, 2, 1, "", "magnitude"], [339, 2, 1, "", "mean"], [339, 2, 1, "", "plot"], [339, 2, 1, "", "project"], [339, 2, 1, "", "resample"], [339, 2, 1, "", "save"], [339, 3, 1, "", "sfreq"], [339, 3, 1, "", "shape"], [339, 2, 1, "", "sqrt"], [339, 2, 1, "", "sum"], [339, 2, 1, "", "surface"], [339, 2, 1, "", "time_as_index"], [339, 3, 1, "", "times"], [339, 3, 1, "", "tmin"], [339, 2, 1, "", "to_data_frame"], [339, 2, 1, "", "transform"], [339, 2, 1, "", "transform_data"], [339, 3, 1, "", "tstep"], [339, 2, 1, "", "volume"]], "mne.Projection": [[340, 2, 1, "", "plot_topomap"]], "mne.Report": [[341, 2, 1, "", "__len__"], [341, 2, 1, "", "add_bem"], [341, 2, 1, "", "add_code"], [341, 2, 1, "", "add_covariance"], [341, 2, 1, "", "add_custom_css"], [341, 2, 1, "", "add_custom_js"], [341, 2, 1, "", "add_epochs"], [341, 2, 1, "", "add_events"], [341, 2, 1, "", "add_evokeds"], [341, 2, 1, "", "add_figure"], [341, 2, 1, "", "add_forward"], [341, 2, 1, "", "add_html"], [341, 2, 1, "", "add_ica"], [341, 2, 1, "", "add_image"], [341, 2, 1, "", "add_inverse_operator"], [341, 2, 1, "", "add_projs"], [341, 2, 1, "", "add_raw"], [341, 2, 1, "", "add_stc"], [341, 2, 1, "", "add_sys_info"], [341, 2, 1, "", "add_trans"], [341, 3, 1, "", "html"], [341, 2, 1, "", "parse_folder"], [341, 2, 1, "", "remove"], [341, 2, 1, "", "save"], [341, 3, 1, "", "tags"]], "mne.SourceEstimate": [[342, 2, 1, "", "__add__"], [342, 2, 1, "", "__div__"], [342, 2, 1, "", "__mul__"], [342, 2, 1, "", "__neg__"], [342, 2, 1, "", "__sub__"], [342, 2, 1, "", "apply_baseline"], [342, 2, 1, "", "bin"], [342, 2, 1, "", "center_of_mass"], [342, 2, 1, "", "copy"], [342, 2, 1, "", "crop"], [342, 3, 1, "", "data"], [342, 2, 1, "", "estimate_snr"], [342, 2, 1, "", "expand"], [342, 2, 1, "", "extract_label_time_course"], [342, 2, 1, "", "get_peak"], [342, 2, 1, "", "in_label"], [342, 3, 1, "", "lh_data"], [342, 3, 1, "", "lh_vertno"], [342, 2, 1, "", "mean"], [342, 2, 1, "", "plot"], [342, 2, 1, "", "resample"], [342, 3, 1, "", "rh_data"], [342, 3, 1, "", "rh_vertno"], [342, 2, 1, "", "save"], [342, 3, 1, "", "sfreq"], [342, 3, 1, "", "shape"], [342, 2, 1, "", "sqrt"], [342, 2, 1, "", "sum"], [342, 2, 1, "", "time_as_index"], [342, 3, 1, "", "times"], [342, 3, 1, "", "tmin"], [342, 2, 1, "", "to_data_frame"], [342, 2, 1, "", "to_original_src"], [342, 2, 1, "", "transform"], [342, 2, 1, "", "transform_data"], [342, 3, 1, "", "tstep"]], "mne.SourceMorph": [[343, 2, 1, "", "apply"], [343, 2, 1, "", "compute_vol_morph_mat"], [343, 2, 1, "", "save"]], "mne.SourceSpaces": [[344, 2, 1, "", "__add__"], [344, 2, 1, "", "__getitem__"], [344, 2, 1, "", "copy"], [344, 2, 1, "", "export_volume"], [344, 2, 1, "", "plot"], [344, 2, 1, "", "save"]], "mne.VectorSourceEstimate": [[345, 2, 1, "", "__add__"], [345, 2, 1, "", "__div__"], [345, 2, 1, "", "__mul__"], [345, 2, 1, "", "__neg__"], [345, 2, 1, "", "__sub__"], [345, 2, 1, "", "apply_baseline"], [345, 2, 1, "", "bin"], [345, 2, 1, "", "copy"], [345, 2, 1, "", "crop"], [345, 3, 1, "", "data"], [345, 2, 1, "", "expand"], [345, 2, 1, "", "extract_label_time_course"], [345, 2, 1, "", "get_peak"], [345, 2, 1, "", "in_label"], [345, 3, 1, "", "lh_data"], [345, 3, 1, "", "lh_vertno"], [345, 2, 1, "", "magnitude"], [345, 2, 1, "", "mean"], [345, 2, 1, "", "plot"], [345, 2, 1, "", "project"], [345, 2, 1, "", "resample"], [345, 3, 1, "", "rh_data"], [345, 3, 1, "", "rh_vertno"], [345, 2, 1, "", "save"], [345, 3, 1, "", "sfreq"], [345, 3, 1, "", "shape"], [345, 2, 1, "", "sqrt"], [345, 2, 1, "", "sum"], [345, 2, 1, "", "time_as_index"], [345, 3, 1, "", "times"], [345, 3, 1, "", "tmin"], [345, 2, 1, "", "to_data_frame"], [345, 2, 1, "", "to_original_src"], [345, 2, 1, "", "transform"], [345, 2, 1, "", "transform_data"], [345, 3, 1, "", "tstep"]], "mne.VolSourceEstimate": [[346, 2, 1, "", "__add__"], [346, 2, 1, "", "__div__"], [346, 2, 1, "", "__mul__"], [346, 2, 1, "", "__neg__"], [346, 2, 1, "", "__sub__"], [346, 2, 1, "", "apply_baseline"], [346, 2, 1, "", "as_volume"], [346, 2, 1, "", "bin"], [346, 2, 1, "", "copy"], [346, 2, 1, "", "crop"], [346, 3, 1, "", "data"], [346, 2, 1, "", "extract_label_time_course"], [346, 2, 1, "", "get_peak"], [346, 2, 1, "", "in_label"], [346, 2, 1, "", "mean"], [346, 2, 1, "", "plot"], [346, 2, 1, "", "plot_3d"], [346, 2, 1, "", "resample"], [346, 2, 1, "", "save"], [346, 2, 1, "", "save_as_volume"], [346, 3, 1, "", "sfreq"], [346, 3, 1, "", "shape"], [346, 2, 1, "", "sqrt"], [346, 2, 1, "", "sum"], [346, 2, 1, "", "time_as_index"], [346, 3, 1, "", "times"], [346, 3, 1, "", "tmin"], [346, 2, 1, "", "to_data_frame"], [346, 2, 1, "", "transform"], [346, 2, 1, "", "transform_data"], [346, 3, 1, "", "tstep"]], "mne.VolVectorSourceEstimate": [[347, 2, 1, "", "__add__"], [347, 2, 1, "", "__div__"], [347, 2, 1, "", "__mul__"], [347, 2, 1, "", "__neg__"], [347, 2, 1, "", "__sub__"], [347, 2, 1, "", "apply_baseline"], [347, 2, 1, "", "as_volume"], [347, 2, 1, "", "bin"], [347, 2, 1, "", "copy"], [347, 2, 1, "", "crop"], [347, 3, 1, "", "data"], [347, 2, 1, "", "extract_label_time_course"], [347, 2, 1, "", "get_peak"], [347, 2, 1, "", "in_label"], [347, 2, 1, "", "magnitude"], [347, 2, 1, "", "mean"], [347, 2, 1, "", "plot"], [347, 2, 1, "", "plot_3d"], [347, 2, 1, "", "project"], [347, 2, 1, "", "resample"], [347, 2, 1, "", "save"], [347, 2, 1, "", "save_as_volume"], [347, 3, 1, "", "sfreq"], [347, 3, 1, "", "shape"], [347, 2, 1, "", "sqrt"], [347, 2, 1, "", "sum"], [347, 2, 1, "", "time_as_index"], [347, 3, 1, "", "times"], [347, 3, 1, "", "tmin"], [347, 2, 1, "", "to_data_frame"], [347, 2, 1, "", "transform"], [347, 2, 1, "", "transform_data"], [347, 3, 1, "", "tstep"]], "mne.baseline": [[354, 4, 1, "", "rescale"]], "mne.beamformer": [[355, 1, 1, "", "Beamformer"], [356, 4, 1, "", "apply_dics"], [357, 4, 1, "", "apply_dics_csd"], [358, 4, 1, "", "apply_dics_epochs"], [359, 4, 1, "", "apply_dics_tfr_epochs"], [360, 4, 1, "", "apply_lcmv"], [361, 4, 1, "", "apply_lcmv_cov"], [362, 4, 1, "", "apply_lcmv_epochs"], [363, 4, 1, "", "apply_lcmv_raw"], [364, 4, 1, "", "make_dics"], [365, 4, 1, "", "make_lcmv"], [366, 4, 1, "", "make_lcmv_resolution_matrix"], [367, 4, 1, "", "rap_music"], [368, 4, 1, "", "read_beamformer"], [369, 4, 1, "", "trap_music"]], "mne.beamformer.Beamformer": [[355, 2, 1, "", "__contains__"], [355, 2, 1, "", "__getitem__"], [355, 2, 1, "", "__iter__"], [355, 2, 1, "", "__len__"], [355, 2, 1, "", "clear"], [355, 2, 1, "", "copy"], [355, 2, 1, "", "fromkeys"], [355, 2, 1, "", "get"], [355, 2, 1, "", "items"], [355, 2, 1, "", "keys"], [355, 2, 1, "", "pop"], [355, 2, 1, "", "popitem"], [355, 2, 1, "", "save"], [355, 2, 1, "", "setdefault"], [355, 2, 1, "", "update"], [355, 2, 1, "", "values"]], "mne.bem": [[370, 1, 1, "", "ConductorModel"], [371, 4, 1, "", "convert_flash_mris"], [372, 4, 1, "", "distance_to_bem"], [373, 4, 1, "", "fit_sphere_to_headshape"], [374, 4, 1, "", "get_fitting_dig"], [375, 4, 1, "", "make_flash_bem"], [376, 4, 1, "", "make_scalp_surfaces"], [377, 4, 1, "", "make_watershed_bem"]], "mne.bem.ConductorModel": [[370, 2, 1, "", "__contains__"], [370, 2, 1, "", "__getitem__"], [370, 2, 1, "", "__iter__"], [370, 2, 1, "", "__len__"], [370, 2, 1, "", "clear"], [370, 2, 1, "", "copy"], [370, 2, 1, "", "fromkeys"], [370, 2, 1, "", "get"], [370, 2, 1, "", "items"], [370, 2, 1, "", "keys"], [370, 2, 1, "", "pop"], [370, 2, 1, "", "popitem"], [370, 3, 1, "", "radius"], [370, 2, 1, "", "setdefault"], [370, 2, 1, "", "update"], [370, 2, 1, "", "values"]], "mne.channels": [[380, 1, 1, "", "DigMontage"], [381, 1, 1, "", "Layout"], [382, 4, 1, "", "combine_channels"], [383, 4, 1, "", "compute_dev_head_t"], [384, 4, 1, "", "compute_native_head_t"], [385, 4, 1, "", "equalize_channels"], [386, 4, 1, "", "find_ch_adjacency"], [387, 4, 1, "", "find_layout"], [388, 4, 1, "", "fix_mag_coil_types"], [389, 4, 1, "", "generate_2d_layout"], [390, 4, 1, "", "get_builtin_ch_adjacencies"], [391, 4, 1, "", "get_builtin_montages"], [392, 4, 1, "", "make_1020_channel_selections"], [393, 4, 1, "", "make_dig_montage"], [394, 4, 1, "", "make_eeg_layout"], [395, 4, 1, "", "make_grid_layout"], [396, 4, 1, "", "make_standard_montage"], [397, 4, 1, "", "read_ch_adjacency"], [398, 4, 1, "", "read_custom_montage"], [399, 4, 1, "", "read_dig_captrak"], [400, 4, 1, "", "read_dig_dat"], [401, 4, 1, "", "read_dig_egi"], [402, 4, 1, "", "read_dig_fif"], [403, 4, 1, "", "read_dig_hpts"], [404, 4, 1, "", "read_dig_localite"], [405, 4, 1, "", "read_dig_polhemus_isotrak"], [406, 4, 1, "", "read_layout"], [407, 4, 1, "", "read_polhemus_fastscan"], [408, 4, 1, "", "rename_channels"], [409, 4, 1, "", "unify_bad_channels"]], "mne.channels.DigMontage": [[380, 2, 1, "", "__add__"], [380, 2, 1, "", "add_estimated_fiducials"], [380, 2, 1, "", "add_mni_fiducials"], [380, 2, 1, "", "apply_trans"], [380, 2, 1, "", "copy"], [380, 2, 1, "", "get_positions"], [380, 2, 1, "", "plot"], [380, 2, 1, "", "remove_fiducials"], [380, 2, 1, "", "rename_channels"], [380, 2, 1, "", "save"]], "mne.channels.Layout": [[381, 2, 1, "", "plot"], [381, 2, 1, "", "save"]], "mne.chpi": [[410, 4, 1, "", "compute_chpi_amplitudes"], [411, 4, 1, "", "compute_chpi_locs"], [412, 4, 1, "", "compute_chpi_snr"], [413, 4, 1, "", "compute_head_pos"], [414, 4, 1, "", "extract_chpi_locs_ctf"], [415, 4, 1, "", "extract_chpi_locs_kit"], [416, 4, 1, "", "filter_chpi"], [417, 4, 1, "", "get_active_chpi"], [418, 4, 1, "", "get_chpi_info"], [419, 4, 1, "", "head_pos_to_trans_rot_t"], [420, 4, 1, "", "read_head_pos"], [421, 4, 1, "", "write_head_pos"]], "mne.coreg": [[434, 1, 1, "", "Coregistration"], [435, 4, 1, "", "estimate_head_mri_t"], [436, 4, 1, "", "get_mni_fiducials"]], "mne.coreg.Coregistration": [[434, 2, 1, "", "compute_dig_mri_distances"], [434, 2, 1, "", "fit_fiducials"], [434, 2, 1, "", "fit_icp"], [434, 2, 1, "", "omit_head_shape_points"], [434, 2, 1, "", "reset"], [434, 3, 1, "", "scale"], [434, 2, 1, "", "set_fid_match"], [434, 2, 1, "", "set_grow_hair"], [434, 2, 1, "", "set_rotation"], [434, 2, 1, "", "set_scale"], [434, 2, 1, "", "set_scale_mode"], [434, 2, 1, "", "set_translation"], [434, 3, 1, "", "trans"]], "mne.cov": [[439, 4, 1, "", "compute_whitener"], [440, 4, 1, "", "prepare_noise_cov"], [441, 4, 1, "", "regularize"]], "mne.cuda": [[444, 4, 1, "", "get_cuda_memory"], [445, 4, 1, "", "init_cuda"], [446, 4, 1, "", "set_cuda_device"]], "mne.datasets.brainstorm.bst_auditory": [[447, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_raw": [[448, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_resting": [[449, 4, 1, "", "data_path"]], "mne.datasets.eegbci": [[450, 4, 1, "", "load_data"], [451, 4, 1, "", "standardize"]], "mne.datasets.epilepsy_ecog": [[452, 4, 1, "", "data_path"]], "mne.datasets.erp_core": [[453, 4, 1, "", "data_path"]], "mne.datasets.eyelink": [[454, 4, 1, "", "data_path"]], "mne.datasets": [[455, 4, 1, "", "fetch_aparc_sub_parcellation"], [456, 4, 1, "", "fetch_dataset"], [457, 4, 1, "", "fetch_fsaverage"], [458, 4, 1, "", "fetch_hcp_mmp_parcellation"], [459, 4, 1, "", "fetch_infant_template"], [460, 4, 1, "", "fetch_phantom"], [462, 4, 1, "", "has_dataset"]], "mne.datasets.fnirs_motor": [[461, 4, 1, "", "data_path"]], "mne.datasets.hf_sef": [[463, 4, 1, "", "data_path"]], "mne.datasets.kiloword": [[464, 4, 1, "", "data_path"]], "mne.datasets.limo": [[465, 4, 1, "", "load_data"]], "mne.datasets.misc": [[466, 4, 1, "", "data_path"]], "mne.datasets.mtrf": [[467, 4, 1, "", "data_path"]], "mne.datasets.multimodal": [[468, 4, 1, "", "data_path"]], "mne.datasets.opm": [[469, 4, 1, "", "data_path"]], "mne.datasets.phantom_4dbti": [[470, 4, 1, "", "data_path"]], "mne.datasets.phantom_kernel": [[471, 4, 1, "", "data_path"]], "mne.datasets.phantom_kit": [[472, 4, 1, "", "data_path"]], "mne.datasets.refmeg_noise": [[473, 4, 1, "", "data_path"]], "mne.datasets.sample": [[474, 4, 1, "", "data_path"]], "mne.datasets.sleep_physionet.age": [[475, 4, 1, "", "fetch_data"]], "mne.datasets.sleep_physionet.temazepam": [[476, 4, 1, "", "fetch_data"]], "mne.datasets.somato": [[477, 4, 1, "", "data_path"]], "mne.datasets.spm_face": [[478, 4, 1, "", "data_path"]], "mne.datasets.ssvep": [[479, 4, 1, "", "data_path"]], "mne.datasets.ucl_opm_auditory": [[480, 4, 1, "", "data_path"]], "mne.datasets.visual_92_categories": [[481, 4, 1, "", "data_path"]], "mne.decoding": [[483, 1, 1, "", "CSP"], [484, 1, 1, "", "EMS"], [485, 1, 1, "", "FilterEstimator"], [486, 1, 1, "", "GeneralizingEstimator"], [487, 1, 1, "", "LinearModel"], [488, 1, 1, "", "PSDEstimator"], [489, 1, 1, "", "ReceptiveField"], [490, 1, 1, "", "SPoC"], [491, 1, 1, "", "SSD"], [492, 1, 1, "", "Scaler"], [493, 1, 1, "", "SlidingEstimator"], [494, 1, 1, "", "TemporalFilter"], [495, 1, 1, "", "TimeDelayingRidge"], [496, 1, 1, "", "TimeFrequency"], [497, 1, 1, "", "UnsupervisedSpatialFilter"], [498, 1, 1, "", "Vectorizer"], [499, 4, 1, "", "compute_ems"], [500, 4, 1, "", "cross_val_multiscore"], [501, 4, 1, "", "get_coef"]], "mne.decoding.CSP": [[483, 2, 1, "", "fit"], [483, 2, 1, "", "fit_transform"], [483, 2, 1, "", "get_params"], [483, 2, 1, "", "plot_filters"], [483, 2, 1, "", "plot_patterns"], [483, 2, 1, "", "set_params"], [483, 2, 1, "", "transform"]], "mne.decoding.EMS": [[484, 2, 1, "", "fit"], [484, 2, 1, "", "fit_transform"], [484, 2, 1, "", "get_params"], [484, 2, 1, "", "set_params"], [484, 2, 1, "", "transform"]], "mne.decoding.FilterEstimator": [[485, 2, 1, "", "fit"], [485, 2, 1, "", "fit_transform"], [485, 2, 1, "", "transform"]], "mne.decoding.GeneralizingEstimator": [[486, 2, 1, "", "decision_function"], [486, 2, 1, "", "fit"], [486, 2, 1, "", "fit_transform"], [486, 2, 1, "", "get_params"], [486, 2, 1, "", "predict"], [486, 2, 1, "", "predict_proba"], [486, 2, 1, "", "score"], [486, 2, 1, "", "set_params"], [486, 2, 1, "", "transform"]], "mne.decoding.LinearModel": [[487, 2, 1, "", "fit"], [487, 2, 1, "", "get_params"], [487, 2, 1, "", "set_params"]], "mne.decoding.PSDEstimator": [[488, 2, 1, "", "fit"], [488, 2, 1, "", "fit_transform"], [488, 2, 1, "", "transform"]], "mne.decoding.ReceptiveField": [[489, 2, 1, "", "fit"], [489, 2, 1, "", "get_params"], [489, 2, 1, "", "predict"], [489, 2, 1, "", "score"], [489, 2, 1, "", "set_params"]], "mne.decoding.SPoC": [[490, 2, 1, "", "fit"], [490, 2, 1, "", "fit_transform"], [490, 2, 1, "", "get_params"], [490, 2, 1, "", "plot_filters"], [490, 2, 1, "", "plot_patterns"], [490, 2, 1, "", "set_params"], [490, 2, 1, "", "transform"]], "mne.decoding.SSD": [[491, 2, 1, "", "apply"], [491, 2, 1, "", "fit"], [491, 2, 1, "", "fit_transform"], [491, 2, 1, "", "get_params"], [491, 2, 1, "", "get_spectral_ratio"], [491, 2, 1, "", "inverse_transform"], [491, 2, 1, "", "set_params"], [491, 2, 1, "", "transform"]], "mne.decoding.Scaler": [[492, 2, 1, "", "fit"], [492, 2, 1, "", "fit_transform"], [492, 2, 1, "", "get_params"], [492, 2, 1, "", "inverse_transform"], [492, 2, 1, "", "set_params"], [492, 2, 1, "", "transform"]], "mne.decoding.SlidingEstimator": [[493, 2, 1, "", "decision_function"], [493, 2, 1, "", "fit"], [493, 2, 1, "", "fit_transform"], [493, 2, 1, "", "get_params"], [493, 2, 1, "", "predict"], [493, 2, 1, "", "predict_proba"], [493, 2, 1, "", "score"], [493, 2, 1, "", "set_params"], [493, 2, 1, "", "transform"]], "mne.decoding.TemporalFilter": [[494, 2, 1, "", "fit"], [494, 2, 1, "", "fit_transform"], [494, 2, 1, "", "transform"]], "mne.decoding.TimeDelayingRidge": [[495, 2, 1, "", "fit"], [495, 2, 1, "", "get_params"], [495, 2, 1, "", "predict"], [495, 2, 1, "", "set_params"]], "mne.decoding.TimeFrequency": [[496, 2, 1, "", "fit"], [496, 2, 1, "", "fit_transform"], [496, 2, 1, "", "get_params"], [496, 2, 1, "", "set_params"], [496, 2, 1, "", "transform"]], "mne.decoding.UnsupervisedSpatialFilter": [[497, 2, 1, "", "fit"], [497, 2, 1, "", "fit_transform"], [497, 2, 1, "", "get_params"], [497, 2, 1, "", "inverse_transform"], [497, 2, 1, "", "set_params"], [497, 2, 1, "", "transform"]], "mne.decoding.Vectorizer": [[498, 2, 1, "", "fit"], [498, 2, 1, "", "fit_transform"], [498, 2, 1, "", "inverse_transform"], [498, 2, 1, "", "transform"]], "mne.dipole": [[503, 4, 1, "", "get_phantom_dipoles"]], "mne.epochs": [[504, 4, 1, "", "average_movements"], [505, 4, 1, "", "combine_event_ids"], [506, 4, 1, "", "equalize_epoch_counts"], [507, 4, 1, "", "make_metadata"]], "mne.event": [[509, 4, 1, "", "define_target_events"], [510, 4, 1, "", "match_event_names"], [511, 4, 1, "", "shift_time_events"]], "mne.export": [[513, 4, 1, "", "export_epochs"], [514, 4, 1, "", "export_evokeds"], [515, 4, 1, "", "export_evokeds_mff"], [516, 4, 1, "", "export_raw"]], "mne.filter": [[518, 4, 1, "", "construct_iir_filter"], [519, 4, 1, "", "create_filter"], [520, 4, 1, "", "estimate_ringing_samples"], [521, 4, 1, "", "filter_data"], [522, 4, 1, "", "notch_filter"], [523, 4, 1, "", "resample"]], "mne.forward": [[527, 4, 1, "", "compute_depth_prior"], [528, 4, 1, "", "compute_orient_prior"], [529, 4, 1, "", "restrict_forward_to_label"], [530, 4, 1, "", "restrict_forward_to_stc"]], "mne.gui": [[542, 4, 1, "", "coregistration"]], "mne.inverse_sparse": [[545, 4, 1, "", "gamma_map"], [546, 4, 1, "", "make_stc_from_dipoles"], [547, 4, 1, "", "mixed_norm"], [548, 4, 1, "", "tf_mixed_norm"]], "mne.io": [[549, 1, 1, "", "BaseRaw"], [550, 1, 1, "", "Raw"], [551, 1, 1, "", "RawArray"], [552, 4, 1, "", "anonymize_info"], [553, 4, 1, "", "get_channel_type_constants"], [15, 0, 0, "-", "kit"], [555, 4, 1, "", "read_fiducials"], [556, 4, 1, "", "read_info"], [557, 4, 1, "", "read_raw"], [558, 4, 1, "", "read_raw_artemis123"], [559, 4, 1, "", "read_raw_bdf"], [560, 4, 1, "", "read_raw_boxy"], [561, 4, 1, "", "read_raw_brainvision"], [562, 4, 1, "", "read_raw_bti"], [563, 4, 1, "", "read_raw_cnt"], [564, 4, 1, "", "read_raw_ctf"], [565, 4, 1, "", "read_raw_curry"], [566, 4, 1, "", "read_raw_edf"], [567, 4, 1, "", "read_raw_eeglab"], [568, 4, 1, "", "read_raw_egi"], [569, 4, 1, "", "read_raw_eximia"], [570, 4, 1, "", "read_raw_eyelink"], [571, 4, 1, "", "read_raw_fieldtrip"], [572, 4, 1, "", "read_raw_fif"], [573, 4, 1, "", "read_raw_fil"], [574, 4, 1, "", "read_raw_gdf"], [575, 4, 1, "", "read_raw_hitachi"], [576, 4, 1, "", "read_raw_kit"], [577, 4, 1, "", "read_raw_nedf"], [578, 4, 1, "", "read_raw_nicolet"], [579, 4, 1, "", "read_raw_nihon"], [580, 4, 1, "", "read_raw_nirx"], [581, 4, 1, "", "read_raw_nsx"], [582, 4, 1, "", "read_raw_persyst"], [583, 4, 1, "", "read_raw_snirf"], [584, 4, 1, "", "show_fiff"], [585, 4, 1, "", "write_fiducials"], [586, 4, 1, "", "write_info"]], "mne.io.Raw": [[550, 2, 1, "", "__contains__"], [550, 2, 1, "", "__getitem__"], [550, 2, 1, "", "__len__"], [550, 3, 1, "", "acqparser"], [550, 2, 1, "", "add_channels"], [550, 2, 1, "", "add_events"], [550, 2, 1, "", "add_proj"], [550, 2, 1, "", "add_reference_channels"], [550, 3, 1, "", "annotations"], [550, 2, 1, "", "anonymize"], [550, 2, 1, "", "append"], [550, 2, 1, "", "apply_function"], [550, 2, 1, "", "apply_gradient_compensation"], [550, 2, 1, "", "apply_hilbert"], [550, 2, 1, "", "apply_proj"], [550, 3, 1, "", "ch_names"], [550, 2, 1, "", "close"], [550, 3, 1, "", "compensation_grade"], [550, 2, 1, "", "compute_psd"], [550, 2, 1, "", "copy"], [550, 2, 1, "", "crop"], [550, 2, 1, "", "crop_by_annotations"], [550, 2, 1, "", "del_proj"], [550, 2, 1, "", "describe"], [550, 2, 1, "", "drop_channels"], [550, 2, 1, "", "export"], [550, 3, 1, "", "filenames"], [550, 2, 1, "", "filter"], [550, 3, 1, "", "first_samp"], [550, 3, 1, "", "first_time"], [550, 2, 1, "", "fix_mag_coil_types"], [550, 2, 1, "", "get_channel_types"], [550, 2, 1, "", "get_data"], [550, 2, 1, "", "get_montage"], [550, 2, 1, "", "interpolate_bads"], [550, 3, 1, "", "last_samp"], [550, 2, 1, "", "load_bad_channels"], [550, 2, 1, "", "load_data"], [550, 3, 1, "", "n_times"], [550, 2, 1, "", "notch_filter"], [550, 2, 1, "", "pick"], [550, 2, 1, "", "pick_channels"], [550, 2, 1, "", "pick_types"], [550, 2, 1, "", "plot"], [550, 2, 1, "", "plot_projs_topomap"], [550, 2, 1, "", "plot_psd"], [550, 2, 1, "", "plot_psd_topo"], [550, 2, 1, "", "plot_psd_topomap"], [550, 2, 1, "", "plot_sensors"], [550, 3, 1, "", "proj"], [550, 2, 1, "", "rename_channels"], [550, 2, 1, "", "reorder_channels"], [550, 2, 1, "", "resample"], [550, 2, 1, "", "save"], [550, 2, 1, "", "savgol_filter"], [550, 2, 1, "", "set_annotations"], [550, 2, 1, "", "set_channel_types"], [550, 2, 1, "", "set_eeg_reference"], [550, 2, 1, "", "set_meas_date"], [550, 2, 1, "", "set_montage"], [550, 2, 1, "", "time_as_index"], [550, 3, 1, "", "times"], [550, 2, 1, "", "to_data_frame"]], "mne.io.RawArray": [[551, 2, 1, "", "__contains__"], [551, 2, 1, "", "__getitem__"], [551, 2, 1, "", "__len__"], [551, 2, 1, "", "add_channels"], [551, 2, 1, "", "add_events"], [551, 2, 1, "", "add_proj"], [551, 2, 1, "", "add_reference_channels"], [551, 3, 1, "", "annotations"], [551, 2, 1, "", "anonymize"], [551, 2, 1, "", "append"], [551, 2, 1, "", "apply_function"], [551, 2, 1, "", "apply_gradient_compensation"], [551, 2, 1, "", "apply_hilbert"], [551, 2, 1, "", "apply_proj"], [551, 3, 1, "", "ch_names"], [551, 2, 1, "", "close"], [551, 3, 1, "", "compensation_grade"], [551, 2, 1, "", "compute_psd"], [551, 2, 1, "", "copy"], [551, 2, 1, "", "crop"], [551, 2, 1, "", "crop_by_annotations"], [551, 2, 1, "", "del_proj"], [551, 2, 1, "", "describe"], [551, 2, 1, "", "drop_channels"], [551, 2, 1, "", "export"], [551, 3, 1, "", "filenames"], [551, 2, 1, "", "filter"], [551, 3, 1, "", "first_samp"], [551, 3, 1, "", "first_time"], [551, 2, 1, "", "get_channel_types"], [551, 2, 1, "", "get_data"], [551, 2, 1, "", "get_montage"], [551, 2, 1, "", "interpolate_bads"], [551, 3, 1, "", "last_samp"], [551, 2, 1, "", "load_bad_channels"], [551, 2, 1, "", "load_data"], [551, 3, 1, "", "n_times"], [551, 2, 1, "", "notch_filter"], [551, 2, 1, "", "pick"], [551, 2, 1, "", "pick_channels"], [551, 2, 1, "", "pick_types"], [551, 2, 1, "", "plot"], [551, 2, 1, "", "plot_projs_topomap"], [551, 2, 1, "", "plot_psd"], [551, 2, 1, "", "plot_psd_topo"], [551, 2, 1, "", "plot_psd_topomap"], [551, 2, 1, "", "plot_sensors"], [551, 3, 1, "", "proj"], [551, 2, 1, "", "rename_channels"], [551, 2, 1, "", "reorder_channels"], [551, 2, 1, "", "resample"], [551, 2, 1, "", "save"], [551, 2, 1, "", "savgol_filter"], [551, 2, 1, "", "set_annotations"], [551, 2, 1, "", "set_channel_types"], [551, 2, 1, "", "set_eeg_reference"], [551, 2, 1, "", "set_meas_date"], [551, 2, 1, "", "set_montage"], [551, 2, 1, "", "time_as_index"], [551, 3, 1, "", "times"], [551, 2, 1, "", "to_data_frame"]], "mne.io.kit": [[554, 4, 1, "", "read_mrk"]], "mne.label": [[587, 4, 1, "", "select_sources"]], "mne.minimum_norm": [[601, 1, 1, "", "InverseOperator"], [602, 4, 1, "", "apply_inverse"], [603, 4, 1, "", "apply_inverse_cov"], [604, 4, 1, "", "apply_inverse_epochs"], [605, 4, 1, "", "apply_inverse_raw"], [606, 4, 1, "", "apply_inverse_tfr_epochs"], [607, 4, 1, "", "compute_rank_inverse"], [608, 4, 1, "", "compute_source_psd"], [609, 4, 1, "", "compute_source_psd_epochs"], [610, 4, 1, "", "estimate_snr"], [611, 4, 1, "", "get_cross_talk"], [612, 4, 1, "", "get_point_spread"], [613, 4, 1, "", "make_inverse_operator"], [614, 4, 1, "", "make_inverse_resolution_matrix"], [615, 4, 1, "", "prepare_inverse_operator"], [616, 4, 1, "", "read_inverse_operator"], [617, 4, 1, "", "resolution_metrics"], [618, 4, 1, "", "source_band_induced_power"], [619, 4, 1, "", "source_induced_power"], [620, 4, 1, "", "write_inverse_operator"]], "mne.minimum_norm.InverseOperator": [[601, 2, 1, "", "__contains__"], [601, 2, 1, "", "__getitem__"], [601, 2, 1, "", "__iter__"], [601, 2, 1, "", "__len__"], [601, 3, 1, "", "ch_names"], [601, 2, 1, "", "clear"], [601, 2, 1, "", "copy"], [601, 2, 1, "", "fromkeys"], [601, 2, 1, "", "get"], [601, 3, 1, "", "info"], [601, 2, 1, "", "items"], [601, 2, 1, "", "keys"], [601, 2, 1, "", "pop"], [601, 2, 1, "", "popitem"], [601, 2, 1, "", "setdefault"], [601, 2, 1, "", "update"], [601, 2, 1, "", "values"]], "mne.preprocessing": [[634, 1, 1, "", "EOGRegression"], [635, 1, 1, "", "ICA"], [636, 1, 1, "", "Xdawn"], [637, 4, 1, "", "annotate_amplitude"], [638, 4, 1, "", "annotate_break"], [639, 4, 1, "", "annotate_movement"], [640, 4, 1, "", "annotate_muscle_zscore"], [641, 4, 1, "", "annotate_nan"], [642, 4, 1, "", "compute_average_dev_head_t"], [643, 4, 1, "", "compute_bridged_electrodes"], [644, 4, 1, "", "compute_current_source_density"], [645, 4, 1, "", "compute_fine_calibration"], [646, 4, 1, "", "compute_maxwell_basis"], [647, 4, 1, "", "compute_proj_ecg"], [648, 4, 1, "", "compute_proj_eog"], [649, 4, 1, "", "compute_proj_hfc"], [650, 4, 1, "", "corrmap"], [651, 4, 1, "", "cortical_signal_suppression"], [652, 4, 1, "", "create_ecg_epochs"], [653, 4, 1, "", "create_eog_epochs"], [654, 4, 1, "", "equalize_bads"], [13, 0, 0, "-", "eyetracking"], [659, 4, 1, "", "find_bad_channels_maxwell"], [660, 4, 1, "", "find_ecg_events"], [661, 4, 1, "", "find_eog_events"], [662, 4, 1, "", "fix_stim_artifact"], [663, 4, 1, "", "ica_find_ecg_events"], [664, 4, 1, "", "ica_find_eog_events"], [13, 0, 0, "-", "ieeg"], [668, 4, 1, "", "infomax"], [669, 4, 1, "", "interpolate_bridged_electrodes"], [670, 4, 1, "", "maxwell_filter"], [671, 4, 1, "", "maxwell_filter_prepare_emptyroom"], [13, 0, 0, "-", "nirs"], [678, 4, 1, "", "oversampled_temporal_projection"], [679, 4, 1, "", "peak_finder"], [680, 4, 1, "", "read_eog_regression"], [681, 4, 1, "", "read_fine_calibration"], [682, 4, 1, "", "read_ica"], [683, 4, 1, "", "read_ica_eeglab"], [684, 4, 1, "", "realign_raw"], [685, 4, 1, "", "regress_artifact"], [686, 4, 1, "", "write_fine_calibration"]], "mne.preprocessing.EOGRegression": [[634, 2, 1, "", "apply"], [634, 2, 1, "", "fit"], [634, 2, 1, "", "plot"], [634, 2, 1, "", "save"]], "mne.preprocessing.ICA": [[635, 2, 1, "", "__contains__"], [635, 2, 1, "", "apply"], [635, 3, 1, "", "compensation_grade"], [635, 2, 1, "", "copy"], [635, 2, 1, "", "find_bads_ecg"], [635, 2, 1, "", "find_bads_eog"], [635, 2, 1, "", "find_bads_muscle"], [635, 2, 1, "", "find_bads_ref"], [635, 2, 1, "", "fit"], [635, 2, 1, "", "get_channel_types"], [635, 2, 1, "", "get_components"], [635, 2, 1, "", "get_explained_variance_ratio"], [635, 2, 1, "", "get_sources"], [635, 2, 1, "", "plot_components"], [635, 2, 1, "", "plot_overlay"], [635, 2, 1, "", "plot_properties"], [635, 2, 1, "", "plot_scores"], [635, 2, 1, "", "plot_sources"], [635, 2, 1, "", "save"], [635, 2, 1, "", "score_sources"]], "mne.preprocessing.Xdawn": [[636, 2, 1, "", "apply"], [636, 2, 1, "", "fit"], [636, 2, 1, "", "fit_transform"], [636, 2, 1, "", "get_params"], [636, 2, 1, "", "inverse_transform"], [636, 2, 1, "", "set_params"], [636, 2, 1, "", "transform"]], "mne.preprocessing.eyetracking": [[655, 1, 1, "", "Calibration"], [656, 4, 1, "", "interpolate_blinks"], [657, 4, 1, "", "read_eyelink_calibration"], [658, 4, 1, "", "set_channel_types_eyetrack"]], "mne.preprocessing.eyetracking.Calibration": [[655, 2, 1, "", "__contains__"], [655, 2, 1, "", "__getitem__"], [655, 2, 1, "", "__iter__"], [655, 2, 1, "", "__len__"], [655, 2, 1, "", "clear"], [655, 2, 1, "", "copy"], [655, 2, 1, "", "fromkeys"], [655, 2, 1, "", "get"], [655, 2, 1, "", "items"], [655, 2, 1, "", "keys"], [655, 2, 1, "", "plot"], [655, 2, 1, "", "pop"], [655, 2, 1, "", "popitem"], [655, 2, 1, "", "setdefault"], [655, 2, 1, "", "update"], [655, 2, 1, "", "values"]], "mne.preprocessing.ieeg": [[665, 4, 1, "", "make_montage_volume"], [666, 4, 1, "", "project_sensors_onto_brain"], [667, 4, 1, "", "warp_montage"]], "mne.preprocessing.nirs": [[672, 4, 1, "", "beer_lambert_law"], [673, 4, 1, "", "optical_density"], [674, 4, 1, "", "scalp_coupling_index"], [675, 4, 1, "", "short_channels"], [676, 4, 1, "", "source_detector_distances"], [677, 4, 1, "", "temporal_derivative_distribution_repair"]], "mne.simulation": [[733, 1, 1, "", "SourceSimulator"], [734, 4, 1, "", "add_chpi"], [735, 4, 1, "", "add_ecg"], [736, 4, 1, "", "add_eog"], [737, 4, 1, "", "add_noise"], [19, 0, 0, "-", "metrics"], [746, 4, 1, "", "select_source_in_label"], [747, 4, 1, "", "simulate_evoked"], [748, 4, 1, "", "simulate_raw"], [749, 4, 1, "", "simulate_sparse_stc"], [750, 4, 1, "", "simulate_stc"]], "mne.simulation.SourceSimulator": [[733, 2, 1, "", "__iter__"], [733, 2, 1, "", "add_data"], [733, 3, 1, "", "duration"], [733, 2, 1, "", "get_stc"], [733, 2, 1, "", "get_stim_channel"], [733, 3, 1, "", "n_times"]], "mne.simulation.metrics": [[738, 4, 1, "", "cosine_score"], [739, 4, 1, "", "f1_score"], [740, 4, 1, "", "peak_position_error"], [741, 4, 1, "", "precision_score"], [742, 4, 1, "", "recall_score"], [743, 4, 1, "", "region_localization_error"], [744, 4, 1, "", "roc_auc_score"], [745, 4, 1, "", "spatial_deviation_error"]], "mne.source_space": [[751, 4, 1, "", "compute_distance_to_sensors"], [752, 4, 1, "", "get_decimated_surfaces"]], "mne.stats": [[761, 4, 1, "", "bonferroni_correction"], [762, 4, 1, "", "bootstrap_confidence_interval"], [763, 4, 1, "", "combine_adjacency"], [764, 4, 1, "", "f_mway_rm"], [765, 4, 1, "", "f_oneway"], [766, 4, 1, "", "f_threshold_mway_rm"], [767, 4, 1, "", "fdr_correction"], [768, 4, 1, "", "linear_regression"], [769, 4, 1, "", "linear_regression_raw"], [770, 4, 1, "", "permutation_cluster_1samp_test"], [771, 4, 1, "", "permutation_cluster_test"], [772, 4, 1, "", "permutation_t_test"], [773, 4, 1, "", "spatio_temporal_cluster_1samp_test"], [774, 4, 1, "", "spatio_temporal_cluster_test"], [775, 4, 1, "", "summarize_clusters_stc"], [776, 4, 1, "", "ttest_1samp_no_p"], [777, 4, 1, "", "ttest_ind_no_p"]], "mne.surface": [[780, 4, 1, "", "complete_surface_info"], [781, 4, 1, "", "read_curvature"]], "mne.time_frequency": [[783, 1, 1, "", "AverageTFR"], [784, 1, 1, "", "CrossSpectralDensity"], [785, 1, 1, "", "EpochsSpectrum"], [786, 1, 1, "", "EpochsSpectrumArray"], [787, 1, 1, "", "EpochsTFR"], [788, 1, 1, "", "Spectrum"], [789, 1, 1, "", "SpectrumArray"], [790, 4, 1, "", "csd_array_fourier"], [791, 4, 1, "", "csd_array_morlet"], [792, 4, 1, "", "csd_array_multitaper"], [793, 4, 1, "", "csd_fourier"], [794, 4, 1, "", "csd_morlet"], [795, 4, 1, "", "csd_multitaper"], [796, 4, 1, "", "csd_tfr"], [797, 4, 1, "", "dpss_windows"], [798, 4, 1, "", "fit_iir_model_raw"], [799, 4, 1, "", "fwhm"], [800, 4, 1, "", "istft"], [801, 4, 1, "", "morlet"], [802, 4, 1, "", "pick_channels_csd"], [803, 4, 1, "", "psd_array_multitaper"], [804, 4, 1, "", "psd_array_welch"], [805, 4, 1, "", "read_csd"], [806, 4, 1, "", "read_spectrum"], [807, 4, 1, "", "read_tfrs"], [808, 4, 1, "", "stft"], [809, 4, 1, "", "stftfreq"], [22, 0, 0, "-", "tfr"], [812, 4, 1, "", "tfr_array_morlet"], [813, 4, 1, "", "tfr_array_multitaper"], [814, 4, 1, "", "tfr_array_stockwell"], [815, 4, 1, "", "tfr_morlet"], [816, 4, 1, "", "tfr_multitaper"], [817, 4, 1, "", "tfr_stockwell"], [818, 4, 1, "", "write_tfrs"]], "mne.time_frequency.AverageTFR": [[783, 2, 1, "", "__add__"], [783, 2, 1, "", "__contains__"], [783, 2, 1, "", "__mul__"], [783, 2, 1, "", "__sub__"], [783, 2, 1, "", "add_channels"], [783, 2, 1, "", "add_reference_channels"], [783, 2, 1, "", "apply_baseline"], [783, 3, 1, "", "ch_names"], [783, 3, 1, "", "compensation_grade"], [783, 2, 1, "", "copy"], [783, 2, 1, "", "crop"], [783, 2, 1, "", "decimate"], [783, 2, 1, "", "drop_channels"], [783, 2, 1, "", "get_channel_types"], [783, 2, 1, "", "pick"], [783, 2, 1, "", "pick_channels"], [783, 2, 1, "", "pick_types"], [783, 2, 1, "", "plot"], [783, 2, 1, "", "plot_joint"], [783, 2, 1, "", "plot_topo"], [783, 2, 1, "", "plot_topomap"], [783, 2, 1, "", "reorder_channels"], [783, 2, 1, "", "save"], [783, 2, 1, "", "shift_time"], [783, 2, 1, "", "time_as_index"], [783, 3, 1, "", "times"], [783, 3, 1, "", "tmax"], [783, 3, 1, "", "tmin"], [783, 2, 1, "", "to_data_frame"]], "mne.time_frequency.CrossSpectralDensity": [[784, 2, 1, "", "__getitem__"], [784, 2, 1, "", "__len__"], [784, 2, 1, "", "copy"], [784, 2, 1, "", "get_data"], [784, 2, 1, "", "mean"], [784, 3, 1, "", "n_channels"], [784, 2, 1, "", "pick_channels"], [784, 2, 1, "", "pick_frequency"], [784, 2, 1, "", "plot"], [784, 2, 1, "", "save"], [784, 2, 1, "", "sum"]], "mne.time_frequency.EpochsSpectrum": [[785, 2, 1, "", "__contains__"], [785, 2, 1, "", "__getitem__"], [785, 2, 1, "", "__iter__"], [785, 2, 1, "", "__len__"], [785, 2, 1, "", "add_channels"], [785, 2, 1, "", "add_reference_channels"], [785, 2, 1, "", "average"], [785, 3, 1, "", "compensation_grade"], [785, 2, 1, "", "copy"], [785, 2, 1, "", "drop_channels"], [785, 2, 1, "", "get_channel_types"], [785, 2, 1, "", "get_data"], [785, 3, 1, "", "metadata"], [785, 2, 1, "", "next"], [785, 2, 1, "", "pick"], [785, 2, 1, "", "pick_channels"], [785, 2, 1, "", "pick_types"], [785, 2, 1, "", "plot"], [785, 2, 1, "", "plot_topo"], [785, 2, 1, "", "plot_topomap"], [785, 2, 1, "", "reorder_channels"], [785, 2, 1, "", "save"], [785, 2, 1, "", "to_data_frame"], [785, 2, 1, "", "units"]], "mne.time_frequency.EpochsSpectrumArray": [[786, 2, 1, "", "__contains__"], [786, 2, 1, "", "__getitem__"], [786, 2, 1, "", "__iter__"], [786, 2, 1, "", "__len__"], [786, 2, 1, "", "add_channels"], [786, 2, 1, "", "add_reference_channels"], [786, 2, 1, "", "average"], [786, 3, 1, "", "compensation_grade"], [786, 2, 1, "", "copy"], [786, 2, 1, "", "drop_channels"], [786, 2, 1, "", "get_channel_types"], [786, 2, 1, "", "get_data"], [786, 3, 1, "", "metadata"], [786, 2, 1, "", "next"], [786, 2, 1, "", "pick"], [786, 2, 1, "", "pick_channels"], [786, 2, 1, "", "pick_types"], [786, 2, 1, "", "plot"], [786, 2, 1, "", "plot_topo"], [786, 2, 1, "", "plot_topomap"], [786, 2, 1, "", "reorder_channels"], [786, 2, 1, "", "save"], [786, 2, 1, "", "to_data_frame"], [786, 2, 1, "", "units"]], "mne.time_frequency.EpochsTFR": [[787, 2, 1, "", "__contains__"], [787, 2, 1, "", "__getitem__"], [787, 2, 1, "", "__iter__"], [787, 2, 1, "", "__len__"], [787, 2, 1, "", "add_channels"], [787, 2, 1, "", "add_reference_channels"], [787, 2, 1, "", "apply_baseline"], [787, 2, 1, "", "average"], [787, 3, 1, "", "ch_names"], [787, 3, 1, "", "compensation_grade"], [787, 2, 1, "", "copy"], [787, 2, 1, "", "crop"], [787, 2, 1, "", "decimate"], [787, 2, 1, "", "drop_channels"], [787, 2, 1, "", "get_channel_types"], [787, 3, 1, "", "metadata"], [787, 2, 1, "", "next"], [787, 2, 1, "", "pick"], [787, 2, 1, "", "pick_channels"], [787, 2, 1, "", "pick_types"], [787, 2, 1, "", "reorder_channels"], [787, 2, 1, "", "save"], [787, 2, 1, "", "shift_time"], [787, 2, 1, "", "time_as_index"], [787, 3, 1, "", "times"], [787, 3, 1, "", "tmax"], [787, 3, 1, "", "tmin"], [787, 2, 1, "", "to_data_frame"]], "mne.time_frequency.Spectrum": [[788, 2, 1, "", "__contains__"], [788, 2, 1, "", "__getitem__"], [788, 2, 1, "", "add_channels"], [788, 2, 1, "", "add_reference_channels"], [788, 3, 1, "", "compensation_grade"], [788, 2, 1, "", "copy"], [788, 2, 1, "", "drop_channels"], [788, 2, 1, "", "get_channel_types"], [788, 2, 1, "", "get_data"], [788, 2, 1, "", "pick"], [788, 2, 1, "", "pick_channels"], [788, 2, 1, "", "pick_types"], [788, 2, 1, "", "plot"], [788, 2, 1, "", "plot_topo"], [788, 2, 1, "", "plot_topomap"], [788, 2, 1, "", "reorder_channels"], [788, 2, 1, "", "save"], [788, 2, 1, "", "to_data_frame"], [788, 2, 1, "", "units"]], "mne.time_frequency.SpectrumArray": [[789, 2, 1, "", "__contains__"], [789, 2, 1, "", "__getitem__"], [789, 2, 1, "", "add_channels"], [789, 2, 1, "", "add_reference_channels"], [789, 3, 1, "", "compensation_grade"], [789, 2, 1, "", "copy"], [789, 2, 1, "", "drop_channels"], [789, 2, 1, "", "get_channel_types"], [789, 2, 1, "", "get_data"], [789, 2, 1, "", "pick"], [789, 2, 1, "", "pick_channels"], [789, 2, 1, "", "pick_types"], [789, 2, 1, "", "plot"], [789, 2, 1, "", "plot_topo"], [789, 2, 1, "", "plot_topomap"], [789, 2, 1, "", "reorder_channels"], [789, 2, 1, "", "save"], [789, 2, 1, "", "to_data_frame"], [789, 2, 1, "", "units"]], "mne.time_frequency.tfr": [[810, 4, 1, "", "cwt"], [811, 4, 1, "", "morlet"]], "mne.transforms": [[820, 1, 1, "", "Transform"], [821, 4, 1, "", "apply_volume_registration"], [822, 4, 1, "", "apply_volume_registration_points"], [823, 4, 1, "", "compute_volume_registration"], [824, 4, 1, "", "quat_to_rot"], [825, 4, 1, "", "read_ras_mni_t"], [826, 4, 1, "", "rot_to_quat"]], "mne.transforms.Transform": [[820, 2, 1, "", "__contains__"], [820, 2, 1, "", "__getitem__"], [820, 2, 1, "", "__iter__"], [820, 2, 1, "", "__len__"], [820, 2, 1, "", "clear"], [820, 2, 1, "", "copy"], [820, 3, 1, "", "from_str"], [820, 2, 1, "", "fromkeys"], [820, 2, 1, "", "get"], [820, 2, 1, "", "items"], [820, 2, 1, "", "keys"], [820, 2, 1, "", "pop"], [820, 2, 1, "", "popitem"], [820, 2, 1, "", "save"], [820, 2, 1, "", "setdefault"], [820, 3, 1, "", "to_str"], [820, 2, 1, "", "update"], [820, 2, 1, "", "values"]], "mne.utils": [[829, 1, 1, "", "deprecated"], [830, 4, 1, "", "warn"]], "mne.viz": [[833, 1, 1, "", "Brain"], [834, 1, 1, "", "ClickableImage"], [835, 1, 1, "", "EvokedField"], [836, 1, 1, "", "Figure3D"], [837, 4, 1, "", "add_background_image"], [838, 4, 1, "", "centers_to_edges"], [839, 4, 1, "", "circular_layout"], [840, 4, 1, "", "close_3d_figure"], [841, 4, 1, "", "close_all_3d_figures"], [842, 4, 1, "", "compare_fiff"], [843, 4, 1, "", "create_3d_figure"], [23, 0, 0, "-", "eyetracking"], [845, 4, 1, "", "get_3d_backend"], [846, 4, 1, "", "get_brain_class"], [847, 4, 1, "", "get_browser_backend"], [848, 4, 1, "", "iter_topography"], [849, 4, 1, "", "link_brains"], [850, 4, 1, "", "mne_analyze_colormap"], [851, 4, 1, "", "plot_alignment"], [852, 4, 1, "", "plot_arrowmap"], [853, 4, 1, "", "plot_bem"], [854, 4, 1, "", "plot_brain_colorbar"], [855, 4, 1, "", "plot_bridged_electrodes"], [856, 4, 1, "", "plot_ch_adjacency"], [857, 4, 1, "", "plot_channel_labels_circle"], [858, 4, 1, "", "plot_chpi_snr"], [859, 4, 1, "", "plot_compare_evokeds"], [860, 4, 1, "", "plot_cov"], [861, 4, 1, "", "plot_csd"], [862, 4, 1, "", "plot_dipole_amplitudes"], [863, 4, 1, "", "plot_dipole_locations"], [864, 4, 1, "", "plot_drop_log"], [865, 4, 1, "", "plot_epochs"], [866, 4, 1, "", "plot_epochs_image"], [867, 4, 1, "", "plot_epochs_psd_topomap"], [868, 4, 1, "", "plot_events"], [869, 4, 1, "", "plot_evoked"], [870, 4, 1, "", "plot_evoked_field"], [871, 4, 1, "", "plot_evoked_image"], [872, 4, 1, "", "plot_evoked_joint"], [873, 4, 1, "", "plot_evoked_topo"], [874, 4, 1, "", "plot_evoked_topomap"], [875, 4, 1, "", "plot_evoked_white"], [876, 4, 1, "", "plot_filter"], [877, 4, 1, "", "plot_head_positions"], [878, 4, 1, "", "plot_ica_components"], [879, 4, 1, "", "plot_ica_overlay"], [880, 4, 1, "", "plot_ica_properties"], [881, 4, 1, "", "plot_ica_scores"], [882, 4, 1, "", "plot_ica_sources"], [883, 4, 1, "", "plot_ideal_filter"], [884, 4, 1, "", "plot_layout"], [885, 4, 1, "", "plot_montage"], [886, 4, 1, "", "plot_projs_joint"], [887, 4, 1, "", "plot_projs_topomap"], [888, 4, 1, "", "plot_raw"], [889, 4, 1, "", "plot_raw_psd"], [890, 4, 1, "", "plot_regression_weights"], [891, 4, 1, "", "plot_sensors"], [892, 4, 1, "", "plot_snr_estimate"], [893, 4, 1, "", "plot_source_estimates"], [894, 4, 1, "", "plot_sparse_source_estimates"], [895, 4, 1, "", "plot_tfr_topomap"], [896, 4, 1, "", "plot_topo_image_epochs"], [897, 4, 1, "", "plot_topomap"], [898, 4, 1, "", "plot_vector_source_estimates"], [899, 4, 1, "", "plot_volume_source_estimates"], [900, 4, 1, "", "set_3d_backend"], [901, 4, 1, "", "set_3d_options"], [902, 4, 1, "", "set_3d_title"], [903, 4, 1, "", "set_3d_view"], [904, 4, 1, "", "set_browser_backend"], [905, 4, 1, "", "snapshot_brain_montage"], [23, 0, 0, "-", "ui_events"], [919, 4, 1, "", "use_3d_backend"], [920, 4, 1, "", "use_browser_backend"]], "mne.viz.Brain": [[833, 2, 1, "", "add_annotation"], [833, 2, 1, "", "add_data"], [833, 2, 1, "", "add_dipole"], [833, 2, 1, "", "add_foci"], [833, 2, 1, "", "add_forward"], [833, 2, 1, "", "add_head"], [833, 2, 1, "", "add_label"], [833, 2, 1, "", "add_sensors"], [833, 2, 1, "", "add_skull"], [833, 2, 1, "", "add_text"], [833, 2, 1, "", "add_volume_labels"], [833, 2, 1, "", "apply_auto_scaling"], [833, 2, 1, "", "clear_glyphs"], [833, 2, 1, "", "close"], [833, 3, 1, "", "data"], [833, 2, 1, "", "get_picked_points"], [833, 2, 1, "", "get_view"], [833, 2, 1, "", "help"], [833, 3, 1, "", "interaction"], [833, 2, 1, "", "plot_time_course"], [833, 2, 1, "", "plot_time_line"], [833, 2, 1, "", "remove_annotations"], [833, 2, 1, "", "remove_data"], [833, 2, 1, "", "remove_dipole"], [833, 2, 1, "", "remove_forward"], [833, 2, 1, "", "remove_head"], [833, 2, 1, "", "remove_labels"], [833, 2, 1, "", "remove_sensors"], [833, 2, 1, "", "remove_skull"], [833, 2, 1, "", "remove_text"], [833, 2, 1, "", "remove_volume_labels"], [833, 2, 1, "", "reset"], [833, 2, 1, "", "reset_view"], [833, 2, 1, "", "restore_user_scaling"], [833, 2, 1, "", "save_image"], [833, 2, 1, "", "save_movie"], [833, 2, 1, "", "screenshot"], [833, 2, 1, "", "set_data_smoothing"], [833, 2, 1, "", "set_playback_speed"], [833, 2, 1, "", "set_time"], [833, 2, 1, "", "set_time_interpolation"], [833, 2, 1, "", "set_time_point"], [833, 2, 1, "", "setup_time_viewer"], [833, 2, 1, "", "show"], [833, 2, 1, "", "show_view"], [833, 3, 1, "", "time_interpolation"], [833, 2, 1, "", "toggle_interface"], [833, 2, 1, "", "toggle_playback"], [833, 2, 1, "", "update_lut"]], "mne.viz.ClickableImage": [[834, 2, 1, "", "onclick"], [834, 2, 1, "", "plot_clicks"], [834, 2, 1, "", "to_layout"]], "mne.viz.EvokedField": [[835, 2, 1, "", "set_contours"], [835, 2, 1, "", "set_time"], [835, 2, 1, "", "set_vmax"]], "mne.viz.Figure3D": [[836, 3, 1, "", "plotter"]], "mne.viz.eyetracking": [[844, 4, 1, "", "plot_gaze"]], "mne.viz.ui_events": [[906, 1, 1, "", "ColormapRange"], [907, 1, 1, "", "Contours"], [908, 1, 1, "", "FigureClosing"], [909, 1, 1, "", "PlaybackSpeed"], [910, 1, 1, "", "TimeChange"], [911, 1, 1, "", "UIEvent"], [912, 1, 1, "", "VertexSelect"], [913, 4, 1, "", "disable_ui_events"], [914, 4, 1, "", "link"], [915, 4, 1, "", "publish"], [916, 4, 1, "", "subscribe"], [917, 4, 1, "", "unlink"], [918, 4, 1, "", "unsubscribe"]], "mne.viz.ui_events.ColormapRange": [[906, 3, 1, "", "name"]], "mne.viz.ui_events.Contours": [[907, 3, 1, "", "name"]], "mne.viz.ui_events.FigureClosing": [[908, 3, 1, "", "name"]], "mne.viz.ui_events.PlaybackSpeed": [[909, 3, 1, "", "name"]], "mne.viz.ui_events.TimeChange": [[910, 3, 1, "", "name"]], "mne.viz.ui_events.UIEvent": [[911, 3, 1, "", "name"]], "mne.viz.ui_events.VertexSelect": [[912, 3, 1, "", "name"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"connect": [0, 24, 53, 172, 309], "estim": [0, 45, 60, 64, 67, 68, 69, 70, 83, 117, 179, 191, 192, 207, 208, 222, 236, 251, 266, 316, 320], "covari": [1, 60, 68, 75, 91, 148, 188, 198, 203, 206, 251, 316, 320, 328, 935], "comput": [1, 25, 32, 42, 46, 47, 51, 54, 55, 56, 58, 59, 60, 61, 65, 66, 67, 68, 71, 72, 73, 75, 77, 80, 81, 82, 84, 85, 86, 93, 97, 111, 115, 117, 118, 121, 129, 130, 131, 133, 134, 135, 136, 137, 139, 156, 162, 165, 174, 180, 184, 185, 188, 190, 196, 200, 203, 205, 206, 214, 221, 225, 229, 231, 232, 233, 236, 242, 248, 249, 254, 257, 258, 260, 262, 263, 264, 265, 267, 272, 276, 312, 316, 320, 323, 955], "creat": [2, 45, 117, 121, 142, 143, 163, 166, 170, 175, 215, 222, 231, 234, 235, 245, 250, 251, 259, 309, 316, 320, 323], "data": [2, 15, 18, 20, 29, 30, 31, 33, 34, 37, 39, 41, 44, 45, 47, 53, 55, 56, 67, 68, 75, 77, 83, 86, 90, 92, 98, 100, 102, 106, 107, 112, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 136, 141, 142, 143, 146, 147, 148, 149, 161, 162, 163, 166, 167, 168, 172, 173, 175, 176, 178, 185, 191, 192, 193, 194, 195, 198, 201, 203, 204, 206, 215, 216, 217, 218, 219, 220, 222, 228, 230, 231, 238, 239, 240, 243, 244, 245, 246, 247, 250, 251, 252, 256, 259, 260, 261, 263, 264, 265, 268, 270, 316, 317, 320, 323, 748, 935], "object": [2, 63, 70, 163, 166, 168, 169, 171, 175, 176, 194, 195, 243, 245, 246, 250, 268, 317, 935], "from": [2, 33, 34, 41, 45, 63, 64, 69, 70, 88, 117, 131, 163, 166, 168, 170, 175, 194, 195, 215, 216, 217, 219, 231, 234, 238, 240, 243, 244, 245, 246, 250, 251, 323, 938], "arrai": [2, 141, 194, 244, 320], "dataset": [3, 26, 27, 28, 30, 33, 53, 97, 109, 209, 210, 211, 212, 218, 243, 270, 317, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 935], "decod": [4, 34, 35, 37, 38, 39, 41, 43, 44, 53, 223, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501], "event": [5, 23, 30, 96, 140, 163, 170, 177, 192, 194, 198, 240, 244, 274, 509, 510, 511], "export": [6, 143, 171, 187, 243, 513, 514, 515, 516], "file": [7, 79, 88, 196, 198, 216, 244, 245, 316, 320, 323, 935], "i": [7, 188, 194, 196, 232, 233, 234, 320, 935, 940, 947, 948], "o": [7, 320], "forward": [8, 49, 53, 73, 136, 184, 185, 189, 191, 198, 206, 316, 320, 335, 527, 528, 529, 530, 935], "model": [8, 30, 45, 49, 53, 71, 138, 183, 184, 189, 191, 192, 203, 206, 222, 224, 235, 310, 312, 316, 320, 323], "invers": [9, 53, 54, 55, 56, 57, 61, 62, 65, 66, 67, 68, 73, 78, 83, 121, 131, 191, 192, 203, 213, 314, 316, 320, 935], "solut": [9, 54, 55, 56, 61, 65, 66, 67, 73, 87, 131, 184, 198, 203, 205, 229, 232, 316, 320, 323, 935], "log": [10, 197, 216], "configur": [10, 197, 309, 947], "most": 11, "us": [11, 34, 35, 40, 44, 52, 58, 59, 60, 61, 65, 73, 83, 90, 94, 98, 110, 121, 163, 169, 172, 175, 181, 182, 183, 186, 187, 197, 206, 222, 232, 235, 237, 259, 274, 309, 316, 320, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 350, 354, 355, 357, 359, 360, 361, 364, 365, 366, 367, 369, 370, 378, 379, 380, 381, 382, 384, 386, 390, 391, 392, 394, 396, 398, 402, 406, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 441, 443, 452, 459, 474, 475, 483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 509, 512, 517, 518, 519, 523, 524, 526, 531, 532, 535, 536, 540, 542, 545, 546, 547, 548, 550, 551, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 570, 572, 573, 574, 576, 578, 579, 580, 582, 583, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 622, 624, 626, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 669, 670, 672, 673, 674, 676, 677, 678, 682, 684, 688, 689, 690, 691, 692, 693, 694, 697, 700, 702, 704, 705, 708, 710, 712, 713, 714, 715, 717, 721, 723, 724, 726, 727, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 747, 748, 749, 750, 751, 755, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 778, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 801, 804, 812, 815, 816, 817, 825, 827, 828, 832, 833, 834, 835, 838, 839, 843, 844, 846, 848, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 862, 863, 866, 868, 870, 871, 873, 875, 876, 877, 883, 886, 887, 892, 893, 894, 897, 898, 902, 903, 905, 910, 911, 914, 915, 916, 920, 928, 933, 935, 940], "class": [11, 223, 268, 312, 940, 947], "mri": [12, 181, 182, 185, 186, 198, 206, 208, 317, 320, 323], "process": [12, 67, 149, 193, 206, 309, 312], "preprocess": [13, 53, 104, 136, 162, 167, 191, 192, 238, 239, 241, 245, 270, 316, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "python": [14, 149, 163, 164, 181, 186, 187, 191, 192, 197, 198, 227, 229, 232, 233, 237, 240, 243, 250, 309, 311, 312, 314, 315, 318, 323, 935, 937, 939, 943, 944, 945, 946, 949], "api": [14, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 318, 954], "refer": [14, 26, 30, 34, 36, 38, 39, 41, 42, 44, 45, 47, 59, 61, 66, 68, 69, 70, 72, 77, 80, 81, 84, 85, 86, 92, 97, 98, 101, 102, 105, 109, 110, 114, 121, 128, 136, 139, 140, 144, 146, 148, 154, 163, 167, 170, 177, 181, 183, 188, 202, 204, 206, 209, 210, 216, 218, 222, 223, 227, 229, 231, 232, 233, 234, 235, 237, 239, 252, 255, 256, 260, 268, 309, 316, 317, 320, 935], "read": [15, 69, 70, 73, 78, 79, 91, 92, 163, 191, 194, 196, 216, 220, 244, 245, 260, 263, 265, 935], "raw": [15, 26, 33, 55, 97, 107, 117, 120, 121, 163, 166, 178, 194, 198, 203, 231, 238, 239, 240, 243, 244, 245, 246, 250, 320, 323, 550, 935], "realtim": [16, 312], "mne": [17, 54, 56, 67, 68, 80, 87, 103, 143, 149, 152, 164, 181, 186, 187, 191, 192, 197, 198, 203, 205, 215, 227, 229, 232, 233, 237, 240, 243, 250, 255, 309, 311, 314, 315, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 939, 943, 944, 945, 947, 948, 949, 951], "report": [17, 198, 229, 323, 341], "sensor": [18, 39, 44, 48, 110, 123, 124, 127, 128, 143, 145, 151, 153, 159, 162, 168, 191, 196, 217, 223, 234, 238, 239, 246, 251, 260, 261, 269, 320], "space": [18, 20, 35, 37, 39, 44, 50, 52, 56, 67, 80, 84, 128, 131, 134, 137, 172, 184, 185, 189, 191, 204, 223, 233, 234, 237, 244, 251, 263, 265, 316, 320, 323], "simul": [19, 53, 116, 117, 119, 120, 121, 122, 141, 191, 222, 232, 251, 252, 253, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750], "sourc": [20, 37, 50, 52, 53, 56, 57, 58, 59, 60, 62, 64, 65, 67, 68, 69, 70, 71, 73, 80, 84, 98, 117, 121, 122, 131, 134, 135, 136, 137, 143, 182, 184, 185, 189, 191, 198, 202, 203, 204, 206, 207, 208, 213, 223, 235, 251, 263, 264, 265, 266, 312, 316, 320, 323], "statist": [21, 53, 125, 191, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 270, 312, 320], "time": [22, 25, 32, 35, 39, 46, 51, 53, 58, 63, 65, 72, 82, 85, 93, 96, 97, 99, 111, 112, 115, 118, 121, 129, 132, 133, 141, 156, 162, 165, 166, 168, 170, 171, 174, 180, 190, 191, 192, 200, 207, 214, 221, 223, 225, 232, 242, 243, 248, 249, 254, 257, 258, 260, 262, 267, 269, 270, 271, 272, 276, 309, 312, 955], "frequenc": [22, 35, 53, 58, 72, 85, 132, 140, 141, 162, 191, 192, 217, 226, 229, 236, 257, 258, 260, 268, 269, 270, 271, 312, 317], "visual": [23, 30, 45, 53, 73, 74, 75, 76, 80, 81, 139, 144, 150, 162, 166, 168, 170, 175, 176, 182, 184, 191, 196, 203, 206, 207, 208, 222, 231, 232, 233, 234, 236, 255, 260, 263, 264, 265, 268, 275, 309, 312, 317], "eyetrack": [23, 219, 317, 655, 656, 657, 658, 844], "ui": 23, "analysi": [24, 30, 36, 40, 53, 62, 163, 172, 177, 191, 192, 245, 261, 266, 269, 270, 271, 318, 935, 938], "exampl": [24, 28, 53, 125, 132, 164, 172, 182, 191, 201, 223, 232, 233, 234, 312, 317, 323, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 350, 354, 355, 357, 359, 360, 361, 364, 365, 366, 367, 369, 370, 378, 379, 380, 381, 382, 384, 386, 390, 391, 392, 394, 396, 398, 402, 406, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 441, 443, 452, 459, 474, 475, 483, 484, 486, 487, 489, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 509, 512, 517, 518, 519, 523, 524, 526, 531, 532, 535, 536, 540, 542, 545, 546, 547, 548, 550, 551, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 570, 572, 573, 574, 576, 578, 579, 580, 582, 583, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 622, 624, 626, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 642, 643, 644, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 669, 670, 672, 673, 674, 676, 677, 678, 682, 684, 688, 689, 690, 691, 692, 693, 694, 697, 700, 702, 704, 705, 708, 710, 712, 713, 714, 715, 717, 721, 723, 724, 726, 727, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 747, 748, 749, 750, 751, 755, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 778, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 793, 794, 795, 796, 798, 801, 804, 812, 815, 816, 817, 825, 827, 828, 832, 833, 834, 835, 838, 839, 843, 844, 846, 848, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 862, 863, 866, 868, 870, 871, 873, 875, 876, 877, 883, 886, 887, 892, 893, 894, 897, 898, 902, 903, 905, 910, 911, 914, 915, 916, 920, 928, 933], "brainstorm": [26, 209, 210, 218, 317, 447, 448, 449], "median": [26, 317], "nerv": [26, 317], "hf": 27, "sef": [27, 317], "open": [28, 53, 309, 312, 323], "kernel": [29, 317], "opm": [29, 31, 136, 215, 239, 312, 317, 469], "phantom": [29, 209, 210, 211, 212, 317], "singl": [30, 54, 131, 155, 257, 258, 259], "trial": [30, 155, 238, 244, 257, 258, 259, 269, 270], "linear": [30, 44, 320, 323], "regress": [30, 100, 126, 128, 167, 231, 239], "limo": [30, 317, 465], "about": [30, 196, 197, 226, 320], "load": [30, 45, 73, 100, 142, 143, 149, 162, 163, 166, 167, 175, 185, 192, 201, 204, 217, 222, 233, 240, 243, 251, 320], "condit": [30, 39, 158, 177, 258, 259], "erp": [30, 167, 170, 177, 317], "effect": [30, 42, 222, 223, 231, 233, 255, 270, 320], "stimulu": [30, 45, 240], "phase": [30, 134], "coher": [30, 269], "prepar": [30, 31, 170, 231, 265], "defin": [30, 96, 117, 182, 255, 257], "predictor": 30, "variabl": [30, 197, 309], "design": [30, 163, 223, 229, 318], "matrix": [30, 67, 91, 97, 130, 188, 255, 263, 316, 320, 935], "extract": [30, 63, 65, 121, 163, 166, 236, 238, 240, 243, 270], "coeffici": [30, 45], "plot": [30, 44, 60, 67, 68, 69, 70, 73, 74, 76, 87, 96, 97, 107, 108, 110, 143, 145, 146, 147, 149, 151, 152, 153, 154, 155, 159, 162, 167, 168, 176, 178, 188, 196, 238, 240, 244, 246, 251, 257, 258, 269, 270, 273, 274, 935, 940], "result": [30, 69, 70, 80, 270], "optic": [31, 238, 239], "pump": [31, 239], "magnetomet": [31, 239], "local": [31, 57, 191, 202, 203, 204, 208, 213, 309, 316], "perform": [31, 100, 117, 162, 222], "dipol": [31, 71, 117, 143, 202, 204, 207, 329, 503], "fit": [31, 45, 183, 202, 207, 222, 232], "minimum": [31, 320], "norm": [31, 66, 320], "dspm": [33, 54, 56, 60, 80, 121, 137, 203, 320], "spm": [33, 317], "face": [33, 317], "motor": [34, 317], "imageri": [34, 317], "eeg": [34, 41, 48, 81, 84, 92, 94, 97, 98, 105, 145, 153, 177, 185, 192, 208, 215, 216, 235, 240, 256, 270, 312, 316, 317, 320], "common": [34, 35, 223, 240, 263, 265, 268], "spatial": [34, 35, 42, 47, 80, 81, 206, 223, 251], "pattern": [34, 35, 44, 223], "csp": [34, 35, 483], "represent": [36, 141, 238, 259, 320], "similar": [36, 175], "continu": [38, 107, 126, 128, 172, 173, 191, 192, 217, 222, 236, 243, 245, 246, 247, 320], "target": [38, 96], "spoc": [38, 223, 490], "gener": [39, 50, 64, 119, 120, 122, 170, 216, 223, 228, 239, 251, 277, 309, 320, 935], "across": [39, 97, 108, 177, 238], "evok": [40, 56, 60, 67, 77, 86, 96, 112, 117, 119, 121, 146, 147, 148, 158, 175, 176, 177, 178, 179, 191, 192, 198, 203, 231, 239, 250, 273, 316, 333], "respons": [40, 96, 158, 170, 177, 179, 191, 192, 203, 222, 231, 238, 239, 953], "ica": [40, 103, 109, 198, 232, 316, 635], "pca": [40, 73, 323], "reduct": [40, 232, 233, 234], "techniqu": 40, "xdawn": [41, 114, 223, 636], "match": [42, 223, 232], "filter": [42, 44, 47, 75, 106, 141, 177, 206, 223, 229, 230, 232, 237, 239, 320, 518, 519, 520, 521, 522, 523], "em": [42, 484], "machin": [43, 53, 191, 224], "learn": [43, 53, 163, 191, 224], "encod": [43, 53, 748], "mvpa": [43, 53, 223], "classifi": 44, "logisticregress": 44, "recept": [45, 222], "field": [45, 176, 177, 222, 239, 320], "predict": [45, 320], "public": [45, 273], "investig": 45, "reconstruct": [45, 117, 121, 181, 186, 206, 234, 316], "spectro": [47, 222], "decomposit": 47, "ssd": [47, 491], "epoch": [47, 54, 68, 121, 131, 141, 144, 149, 163, 166, 168, 169, 170, 171, 172, 173, 175, 177, 178, 191, 192, 198, 228, 231, 232, 238, 250, 260, 263, 265, 316, 320, 331, 504, 505, 506, 507], "displai": 48, "sensit": [48, 157], "map": [48, 61, 139, 147, 157, 168, 175, 176, 244, 252, 320], "meg": [48, 81, 101, 105, 113, 151, 159, 192, 215, 239, 251, 312, 317, 320], "left": [50, 238], "cerebellum": 50, "volum": [50, 56, 67, 76, 207], "morph": [52, 69, 70, 206, 320], "galleri": 53, "input": [53, 89], "output": [53, 89, 186, 206], "problem": [53, 62, 229], "sloreta": [55, 203, 320], "custom": [57, 159, 198, 217, 273, 274], "solver": 57, "level": [58, 123], "timecours": [58, 71, 273], "dic": [58, 59, 60, 252], "beamform": [58, 59, 60, 75, 206, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "power": [59, 60, 68, 131, 134, 135, 136, 137, 162, 168, 177, 223, 226, 230, 252, 257, 258, 259, 269, 270], "er": 60, "lcmv": [60, 75, 206], "spars": [61, 66, 85], "gamma": [61, 162], "empir": 61, "bayesian": 61, "method": [61, 102, 239, 243, 246, 255], "cours": [63, 121, 207], "source_estim": 63, "function": [64, 73, 74, 75, 76, 163, 238, 255, 265, 309, 935], "label": [64, 65, 67, 73, 131, 134, 135, 251, 337, 587], "seri": [65, 97, 168], "activ": [65, 117, 121, 155, 191, 206, 224, 238, 273], "view": [65, 67, 108, 143, 169, 238, 257, 258, 323], "vector": [65, 69, 87, 198, 206, 207, 223, 498], "mix": [66, 67], "mxne": [66, 72, 85], "irmxn": 66, "set": [67, 69, 171, 177, 183, 197, 216, 235, 257, 259, 260, 263, 264, 265, 309, 316, 317, 323], "up": [67, 69, 183, 187, 309, 316, 323], "our": [67, 208], "fwd": 67, "surfac": [67, 69, 184, 186, 187, 196, 207, 208, 238, 316, 320, 323, 780, 781], "project": [68, 110, 142, 157, 196, 198, 223, 233, 310, 320, 323, 340], "empti": [68, 234], "room": [68, 234], "appli": [68, 69, 70, 102, 163, 170, 206, 215, 217, 229, 231, 233, 270, 323], "oper": [68, 73, 78, 121, 141, 184, 185, 187, 245, 316, 318, 320], "sourcemorph": [69, 70, 343], "sourceestim": [69, 198, 201, 342], "write": [69, 70, 91, 244, 245], "disk": [69, 70, 166], "volumetr": [70, 206, 320], "get": [70, 88, 185, 187, 197, 198, 208, 270, 935, 936, 937, 948], "volsourceestim": [70, 346], "convert": [70, 142, 171, 194, 238, 323], "nifti": 70, "an": [71, 78, 79, 83, 97, 144, 168, 169, 171, 183, 185, 187, 194, 195, 198, 206, 208, 232, 235, 239, 270, 316], "xfit": 71, "like": [71, 196], "multi": 71, "iter": [72, 166], "reweight": 72, "tf": 72, "multiscal": 72, "dictionari": 72, "leakag": 73, "among": [73, 175], "circular": 73, "graph": 73, "organis": 73, "cortic": [73, 95, 154, 162, 186, 263, 265, 316, 320], "parcel": [73, 154], "point": [73, 74, 76, 183, 251, 320], "spread": [73, 74, 76, 251], "summari": [73, 97, 193, 201, 226, 227, 229, 243, 290], "all": [73, 206, 227, 259, 263, 265, 309, 935, 945, 949], "evalu": [73, 238], "base": [73, 96, 163, 167, 228, 318, 320, 323], "psf": [73, 74, 76], "correl": 73, "save": [73, 166, 175, 198, 233, 243], "figur": [73, 198, 273, 274], "option": [73, 147, 309, 323, 935], "individu": 73, "cross": [74, 75, 130, 160, 309], "talk": [74, 75], "ctf": [74, 151, 210, 215, 218], "differ": [75, 103, 117, 158, 167, 191, 220, 222, 270], "matric": [75, 188, 206], "resolut": [75, 80, 81, 187, 219, 323], "two": [75, 251], "rap": 77, "music": [77, 86], "stc": [79, 117, 201, 207], "metric": [80, 81, 97, 738, 739, 740, 741, 742, 743, 744, 745], "compar": [81, 97, 103, 117, 158, 176, 177, 222, 238, 239, 255, 323], "eegmeg": 81, "snr": [83, 84, 236, 270], "prior": 85, "trap": 86, "full": [87, 260], "valu": [87, 171, 270], "averag": [88, 141, 175, 177, 235, 320], "info": [88, 195, 243, 250, 323, 336], "fif": [88, 215, 323, 935], "how": [90, 142, 186, 188, 227, 234, 245, 314, 935], "neural": [90, 191, 222, 224, 238], "ensembl": 90, "neo": 90, "format": [90, 171, 216, 217, 320], "nois": [91, 148, 203, 226, 230, 233, 234, 251, 270, 316, 317, 320], "xdf": [92, 216], "contralater": 94, "referenc": [94, 219], "signal": [95, 176, 193, 194, 233, 234, 236, 237, 238, 239, 251, 270, 320], "suppress": [95, 316], "css": 95, "remov": [95, 100, 109, 232, 233, 238, 263, 265], "lag": 96, "identifi": 97, "electrod": [97, 142, 162, 208, 216, 320], "bridg": 97, "too": 97, "much": 97, "gel": 97, "electr": 97, "distanc": 97, "examin": [97, 167, 239], "distribut": [97, 102, 204, 312, 946], "topomap": [97, 147], "voltag": 97, "subject": [97, 121, 236, 317, 323], "eegbci": [97, 109, 317, 450, 451], "The": [97, 166, 170, 175, 193, 194, 195, 196, 201, 204, 206, 228, 243, 268, 310, 316, 317, 320], "relationship": [97, 201], "between": [97, 194, 258], "imped": 97, "transform": [98, 141, 163, 182, 186, 223, 263, 265, 320, 820, 821, 822, 823, 824, 825, 826], "current": [98, 143, 202, 320, 322, 953], "densiti": [98, 130, 131, 135, 136, 238, 246, 270], "csd": [98, 130], "show": [99, 240, 323], "eog": [99, 100, 226, 231, 232, 234, 323], "artifact": [99, 100, 101, 102, 107, 108, 226, 230, 231, 232, 234, 240, 316, 323], "reduc": 100, "through": 100, "import": [100, 102, 215, 216, 217, 219, 273, 309, 323], "packag": [100, 320, 949], "befor": [100, 231, 309], "after": [100, 940], "comparison": [100, 160, 255, 259], "find": [101, 251, 260, 263], "channel": [101, 105, 113, 144, 166, 171, 175, 177, 193, 194, 195, 196, 215, 227, 228, 232, 235, 238, 243, 260, 263, 265, 270, 316, 317, 320, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 748], "visualis": [102, 256], "nir": [102, 672, 673, 674, 675, 676, 677], "correct": [102, 124, 167, 170, 239, 255], "add": [102, 143], "artifici": 102, "tempor": [102, 110, 138, 222, 223, 263, 264, 265], "deriv": 102, "repair": [102, 230, 231, 232, 234, 320], "algorithm": [103, 314, 320, 323], "interpol": [105, 147, 227, 320], "bad": [105, 182, 183, 187, 227, 228, 263, 265, 316, 320], "maxwel": [106, 237, 320], "movement": [106, 107, 236, 237], "compens": [106, 215, 237, 320], "annot": [107, 108, 163, 194, 228, 238, 240, 245, 316, 325], "reestim": 107, "dev_head_t": 107, "head": [107, 143, 182, 184, 186, 187, 208, 216, 219, 236, 316, 320, 323], "posit": [107, 142, 143, 219, 236], "respect": 107, "mean": [107, 177], "record": [107, 108, 191, 216, 220, 234], "muscl": [108, 109], "z": 108, "score": [108, 117], "compon": [109, 170, 206, 232], "let": 109, "": [109, 141, 186, 313], "now": 109, "replic": 109, "thi": [109, 222], "denois": [110, 114, 239], "oversampl": 110, "shift": 112, "scale": [112, 171, 178, 320], "remap": 113, "type": [113, 166, 177, 195, 222, 229, 243, 270, 309, 320, 323], "main": 117, "paramet": [117, 193, 228, 257, 259, 260, 263, 264, 265], "true": 117, "correspond": [117, 316], "amplitud": [117, 177, 228], "threshold": [117, 255, 256], "For": 117, "region": [117, 143, 177], "anatomi": 121, "responss": 121, "permut": [123, 127, 259, 260, 263, 264], "f": [123, 126, 260], "test": [123, 124, 127, 163, 255, 259, 260, 263, 264, 309, 941, 947], "1d": 123, "cluster": [123, 255, 257, 258, 259, 260, 263, 264, 265, 312], "fdr": [124, 255, 259], "t": [124, 127, 263, 935], "rer": 126, "p": 126, "analys": [128, 316], "featur": [128, 162, 163], "bin": [128, 215, 935], "spectral": [130, 131, 135, 136, 246, 268, 270], "psd": [131, 135, 136, 270], "lock": [134, 170], "vectorview": [136, 215, 243], "align": [136, 182, 186, 240, 316, 323, 748], "alpha": 136, "beta": 136, "induc": 137, "whiten": [138, 148, 178, 320], "ar": [138, 175, 197, 226, 233, 935], "erd": 139, "explor": [140, 162], "relat": [140, 177, 948], "dynam": 140, "specif": 140, "band": 140, "multitap": 141, "v": [141, 223, 243, 944], "morlet": [141, 801, 811], "stockwel": 141, "hilbert": 141, "calcul": [141, 270, 316, 320], "tfr": [141, 259, 810, 811], "wavelet": 141, "narrow": 141, "bandpass": 141, "without": [141, 182], "over": [141, 144, 166, 223, 238, 274], "3d": [142, 176, 196, 206, 312, 320, 935, 940], "2d": [142, 196, 206, 312], "imag": [142, 143, 144, 149, 168, 176, 198, 238, 312, 314, 320, 323], "snapshot": 142, "manual": [142, 196, 232], "viz": [143, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920], "brain": [143, 152, 162, 186, 206, 238, 273, 833], "inform": [143, 195, 197, 204, 229, 238, 316, 320, 323], "modifi": [143, 169, 193, 243, 309], "highlight": 143, "includ": [143, 244, 323], "screenshot": 143, "scalp": [145, 167, 176], "topograph": [146, 147, 176, 178, 238], "arrowmap": 146, "basic": [147, 162, 166, 170, 175, 229, 270, 309], "plot_topomap": [147, 897], "addit": 147, "more": [147, 238, 273], "advanc": [147, 940], "usag": 147, "anim": 147, "ey": [149, 219, 240, 312], "track": [149, 240, 312], "heatmap": 149, "overlai": [149, 274], "layout": [151, 153, 196, 259, 381], "system": [151, 153, 191, 197, 215, 217, 220, 274, 320, 323, 947], "neuromag": [151, 215], "bti": [151, 211, 215, 317, 323], "kit": [151, 212, 215, 317, 323, 554], "artemis123": [151, 215], "helmet": 152, "group": [155, 170, 316], "roi": [155, 270], "sort": 155, "rt": 155, "ssp": [157, 233, 234, 316, 320, 323], "topographi": [159, 167, 176, 270], "hemispher": [160, 316, 323], "work": [161, 162, 169, 191, 196, 198, 218, 227, 240, 244, 247, 935, 940], "seeg": [161, 312, 317], "ecog": [162, 312, 317], "templat": [162, 185, 232, 317], "evolut": 162, "sleep": [163, 317], "stage": 163, "classif": 163, "polysomnographi": 163, "psg": 163, "hypnogram": 163, "30": 163, "found": [163, 935], "same": 163, "step": [163, 181, 935, 944], "bob": 163, "engin": 163, "scikit": 163, "multiclass": 163, "workflow": [163, 309, 316], "further": 163, "exercis": [163, 184, 223, 251, 260, 269, 270], "clinic": [164, 191, 312], "applic": [164, 191], "gui": [164, 182, 191, 323, 542], "addon": [164, 191], "structur": [166, 175, 194, 195, 201, 215, 243, 250, 320], "discontinu": 166, "subselect": [166, 244], "select": [166, 169, 175, 232, 238, 243, 263], "index": [166, 171, 243, 270], "drop": [166, 175, 195, 243], "reorder": [166, 175, 243], "chang": [166, 235, 243, 278, 290, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 309], "name": [166, 177, 215, 243, 309], "domain": [166, 217, 232, 243, 268], "other": [166, 175, 229, 309, 314, 320, 322, 938, 945, 946], "form": [166, 270], "baselin": [167, 229, 251, 354], "tradit": 167, "regressor": 167, "wave": [167, 217], "interact": [167, 168, 245, 246, 274, 318], "term": 167, "pipelin": [168, 312], "script": [168, 198, 318], "projector": [168, 233, 234, 235, 246], "locat": [168, 177, 196, 208, 216, 217, 238, 246, 320], "spectrum": [168, 268, 788], "metadata": [169, 170], "restrict": 169, "datafram": [169, 171], "queri": [169, 195, 243], "ad": [169, 170, 198, 233], "auto": 170, "make_metadata": [170, 507], "specifi": [170, 217], "keep": 170, "onli": [170, 949], "first": [170, 181, 309, 312, 944], "new": [170, 309, 313], "column": [170, 194], "describ": [170, 309], "stimul": [170, 270], "side": 170, "knowledg": 170, "ern": 170, "panda": 171, "wide": 171, "versu": [171, 259, 318], "long": [171, 243], "divid": 172, "equal": [172, 244], "characterist": 172, "fix": [172, 187, 204, 205], "length": [172, 229], "case": 172, "segment": [173, 191], "subset": [175, 195, 270], "memori": [175, 215, 320], "core": [175, 317, 935, 945], "combin": [175, 244], "trace": 176, "butterfli": 176, "arrow": 176, "joint": [176, 269], "subplot": 176, "potenti": [177, 938], "global": 177, "gfp": 177, "interest": [177, 260, 310], "grand": 177, "latenc": 177, "measur": [177, 259, 265, 323], "peak": 177, "freesurf": [181, 186, 316, 320, 323, 942], "anatom": [181, 316], "fsaverag": [181, 185, 206, 317], "coordin": [182, 186, 217, 316, 320, 323], "frame": [182, 186, 316], "understand": [182, 186], "definit": [182, 260, 320], "A": [182, 935], "good": 182, "defac": 182, "tran": 182, "autom": 183, "approach": [183, 323], "coregistr": [183, 184, 198, 323, 434, 542], "initi": 183, "fiduci": 183, "refin": 183, "icp": 183, "omit": 183, "final": 183, "bem": [184, 187, 198, 316, 320, 323, 370, 371, 372, 373, 374, 375, 376, 377, 935], "adult": 185, "setup": [185, 252, 259, 260, 940, 944, 950], "infant": [185, 317], "surrog": 185, "under": [186, 935], "hood": 186, "ra": [186, 208], "spheric": 186, "decim": [186, 935], "mni": [186, 206], "affin": 186, "inflat": 186, "blender": 187, "edit": [187, 198], "low": [187, 226, 229], "high": [187, 229, 317, 323], "tip": 187, "what": [187, 194, 226, 232, 233, 234, 313, 323, 921, 935, 948], "you": 187, "still": [187, 935], "error": 187, "clean": [187, 323], "dens": 187, "smooth": [187, 320], "topolog": 187, "deal": 187, "topologi": [187, 320], "pymeshfix": 187, "should": [188, 935, 948], "regular": [188, 203, 222, 320, 441, 935], "tutori": [191, 199, 209, 210, 211, 212, 275, 312], "introductori": [191, 199], "overview": [192, 226, 309, 316, 317, 321, 948], "detect": [192, 226, 228, 238], "experiment": 192, "place": [193, 196, 318], "pick": 193, "copi": 193, "pars": 194, "stim": [194, 748], "middl": 194, "embed": 194, "make": [194, 244, 273, 309, 310], "multipl": [194, 255, 259, 935], "per": [194, 316], "obtain": 195, "montag": [196, 273], "built": [196, 246], "eeglab": [196, 216, 938], "sphere": [196, 320], "keyword": 196, "avail": 196, "mani": 196, "control": 196, "digit": [196, 320], "render": [196, 206, 940], "where": 197, "store": 197, "environ": [197, 309], "your": [197, 309, 941], "start": [198, 937], "inverseoper": [198, 601], "code": [198, 268, 309, 317, 944], "e": 198, "g": 198, "tag": [198, 270], "entir": 198, "folder": [198, 323], "html": 198, "descript": [198, 320], "text": 198, "inspect": [201, 269, 320], "sourcespac": [201, 344], "src": 201, "equival": 202, "ecd": 202, "eloreta": [203, 320], "role": 204, "orient": [204, 205, 320], "loos": 204, "limit": 204, "them": 204, "discard": 204, "variou": 205, "free": [205, 255], "introduct": 206, "handl": [206, 227, 240], "depth": [206, 320], "bia": [206, 234], "On": 206, "slice": 206, "orthoview": 206, "glass": 206, "maximum": [206, 255], "voxel": [206, 208], "three": 206, "given": 208, "prerequisit": 208, "coord": 208, "elekta": [209, 215], "4d": [211, 317, 323], "neuroimag": [211, 215, 317], "devic": [215, 216, 217, 219, 320], "megin": 215, "triux": 215, "fil": 215, "4": [215, 297, 307], "d": 215, "dir": 215, "polhemu": 215, "softwar": [215, 229, 314, 320, 938, 948], "gradient": [215, 320], "ricoh": 215, "con": 215, "sqd": 215, "fieldtrip": [215, 260], "mat": 215, "arbitrari": [215, 265], "brainvis": 216, "vhdr": 216, "vmrk": 216, "european": 216, "edf": 216, "biosemi": 216, "bdf": 216, "gdf": 216, "neuroscan": 216, "cnt": 216, "egi": 216, "simpl": [216, 935], "binari": 216, "mff": 216, "fdt": 216, "nicolet": 216, "eximia": 216, "nxe": 216, "persyst": 216, "lai": 216, "dat": 216, "nihon": 216, "kohden": 216, "21e": 216, "pnt": 216, "xdfz": 216, "shape": 216, "fnir": [217, 238, 317], "standard": [217, 238, 255, 309, 451], "snirf": 217, "nirx": 217, "directori": [217, 317, 320], "hdr": 217, "hitachi": 217, "csv": 217, "boxi": 217, "txt": 217, "legaci": [217, 268], "tsv": 217, "auditori": [218, 317], "sr": 219, "research": 219, "eyelink": [219, 317, 454], "asc": 219, "gaze": 219, "angl": 219, "href": 219, "pupil": 219, "size": [219, 255], "veloc": 219, "strf": 222, "audio": 222, "recov": 222, "philosophi": [223, 318], "scaler": [223, 492], "psdestim": [223, 488], "filterestim": [223, 485], "comodul": 223, "do": [226, 935], "drift": [226, 230, 232], "line": [226, 230, 309, 323], "heartbeat": 226, "ecg": [226, 232, 234, 323], "ocular": [226, 240], "mark": [227, 316], "block": 227, "execut": 227, "when": [227, 233, 309], "look": [227, 232, 935], "why": [227, 320, 935], "reject": [228, 316], "span": 228, "break": 228, "reject_by_annot": 228, "programmat": [228, 245], "background": [229, 230, 233, 235, 237, 251], "statement": 229, "fir": 229, "iir": 229, "some": 229, "pitfal": [229, 938], "pass": 229, "default": [229, 320], "c": [229, 947], "cutoff": 229, "order": 229, "transit": 229, "bandwidth": 229, "roll": 229, "off": [229, 940], "passband": 229, "rippl": 229, "stopband": 229, "attenu": 229, "delai": 229, "direct": 229, "resampl": [230, 255, 523, 935], "slow": [230, 232, 935], "best": [230, 233], "practic": [230, 233], "origin": [231, 251], "subtract": 231, "dimension": 232, "ignor": 232, "terminologi": 233, "environment": 234, "affect": [234, 245], "choos": 234, "number": [234, 243, 320], "via": [234, 239, 312, 320, 945], "infinit": 235, "rest": [235, 317], "bipolar": 235, "hpi": 236, "separ": [237, 270], "sss": 237, "spatiotempor": [237, 260], "tsss": 237, "caveat": 237, "infrar": 238, "spectroscopi": 238, "provid": [238, 255], "meaning": 238, "appropri": 238, "intens": 238, "qualiti": 238, "haemoglobin": 238, "heart": 238, "rate": [238, 255], "consist": [238, 250, 309], "tap": 238, "right": 238, "hand": 238, "homogen": 239, "nuisanc": 239, "tracker": 240, "check": [240, 270, 320, 323], "calibr": [240, 655], "blink": 240, "pupillari": 240, "light": 240, "reflex": 240, "attribut": 243, "sampl": [243, 257, 259, 264, 317, 474], "len": 243, "get_data": 243, "wai": 243, "exclud": 244, "id": [244, 945], "descriptor": 244, "togeth": 244, "brows": [246, 323], "scratch": 250, "unit": [250, 320], "corrupt": 251, "known": 251, "period": 251, "sinusoid": 251, "distant": 251, "center": [251, 950], "vertic": 251, "each": 251, "infer": 255, "hypothesi": 255, "null": 255, "parametr": [255, 257, 258], "hat": 255, "varianc": 255, "adjust": 255, "non": [255, 257, 258], "bonferroni": 255, "fals": 255, "discoveri": 255, "adjac": [255, 257, 260, 263], "enhanc": [255, 278, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308], "tfce": 255, "signific": [256, 263], "1": [257, 278, 279, 303, 304, 305, 306, 307, 308], "mass": 259, "univari": 259, "twowai": 259, "repeat": [259, 265], "anova": [259, 265], "account": 259, "neighbor": 260, "spatio": [263, 264, 265], "one": [263, 265, 274], "2": [264, 290, 305], "contrast": 265, "epochsspectrum": [268, 785], "migrat": [268, 938], "quick": 268, "action": 268, "inter": 269, "itc": 269, "ssvep": [270, 317, 479], "vssr": 270, "ratio": 270, "spectra": 270, "12": [270, 281, 282, 293, 298, 306], "hz": 270, "indic": 270, "15": [270, 285, 299], "debrief": 270, "bonu": 270, "durat": 270, "resolv": 270, "readi": 273, "inset": 273, "link": [274, 914], "anoth": 274, "hook": 274, "bibliographi": 277, "version": [278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 940, 949, 952], "6": [278, 299], "dev0": 278, "develop": [278, 309, 311, 940, 949], "bug": [278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 306, 307, 308, 935], "0": [279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "2011": [279, 290], "09": [279, 283, 289, 292], "23": [279, 294, 296], "author": [279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "10": [280, 282, 285, 305, 307], "2015": [280, 281, 302], "26": [280, 300], "changelog": [280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 296, 297, 298, 299, 300, 301, 302, 309], "11": [281, 287, 290, 295, 300, 305], "24": [281, 284, 289, 295, 297], "2016": [282, 283], "05": [282, 286, 288, 302, 307], "13": 283, "27": [283, 291, 294, 298], "14": [284, 308], "2017": [284, 285], "03": [284, 291, 295, 296, 303, 304], "20": [285, 291], "16": 286, "2018": [286, 287], "01": 286, "17": [287, 293], "19": [287, 288, 289], "18": 288, "2019": [288, 289], "08": [290, 297, 304, 308], "2020": [291, 292, 293], "21": [292, 303, 306], "22": [293, 302], "2021": [294, 295], "04": 294, "3": [296, 306, 323], "2012": [296, 297, 298], "5": [298, 308], "2013": [299, 300], "06": [299, 301], "7": 300, "8": 301, "2014": 301, "25": 301, "9": 302, "2022": [303, 304, 305, 306], "depend": [303, 945], "behavior": 304, "2023": [307, 308], "contribut": 309, "guid": 309, "git": 309, "gnu": 309, "fork": 309, "repositori": 309, "virtual": 309, "command": [309, 323, 935], "github": 309, "ssh": 309, "convent": 309, "requir": [309, 947], "must": 309, "have": [309, 316, 935], "coverag": 309, "document": [309, 310, 312, 321, 952, 953], "avoid": 309, "possibl": 309, "deprec": [309, 829], "decor": 309, "warn": [309, 830], "contributor": 309, "recur": 309, "pull": 309, "request": 309, "pr": 309, "fast": 309, "thorough": 309, "style": 309, "adher": 309, "guidelin": [309, 953], "we": 309, "mostli": [309, 318], "follow": 309, "numpi": [309, 320], "docstr": 309, "everywher": 309, "guidanc": 309, "organ": [309, 318, 320], "return": 309, "run": [309, 935], "suit": [309, 948], "build": 309, "tool": [309, 323, 948], "govern": 310, "bdfl": 310, "steer": [310, 953], "council": [310, 953], "membership": 310, "conflict": 310, "privat": 310, "commun": [310, 953], "decis": 310, "institut": [310, 322, 953], "partner": [310, 322, 953], "fund": [310, 322], "histori": [310, 953], "acknowledg": 310, "licens": 310, "roadmap": 312, "page": 312, "content": [312, 317, 323], "modern": 312, "In": [312, 318], "progress": 312, "divers": 312, "equiti": 312, "inclus": 312, "dei": 312, "support": [312, 320, 322, 945], "deep": 312, "updat": [312, 949], "complet": 312, "improv": 312, "db": 312, "access": [312, 320], "databas": [312, 317], "pediatr": 312, "integr": [312, 318], "openmeeg": 312, "bind": 312, "overhaul": 312, "cite": [314, 315, 935], "paper": 315, "typic": 316, "m": [316, 935], "recommend": 316, "subdivis": 316, "icosahedron": 316, "octahedron": 316, "creation": 316, "approxim": 316, "area": 316, "been": 316, "assum": 316, "1000": 316, "cm2": 316, "mesh": [316, 320, 935], "triangul": 316, "boundari": [316, 320], "element": [316, 320], "trigger": 317, "ucl": 317, "state": 317, "somatosensori": 317, "multimod": [317, 468], "92": 317, "categori": 317, "mtrf": [317, 467], "kiloword": [317, 464], "polysomnograph": 317, "miscellan": 317, "freeview": [317, 323], "scientif": 318, "stack": 318, "submodul": 318, "unifi": 318, "glossari": 319, "implement": 320, "detail": 320, "intern": 320, "float": 320, "precis": 320, "effici": 320, "preload": 320, "explicitli": 320, "concept": 320, "subspac": 320, "watersh": [320, 323, 935], "flash": [320, 323], "tessel": 320, "discret": 320, "geometri": 320, "coil": 320, "magnet": 320, "normal": 320, "accur": 320, "accuraci": 320, "purpos": 320, "patch": 320, "constraint": 320, "weight": 320, "former": [322, 953], "anonym": 323, "browse_raw": 323, "bti2fiff": 323, "magneswh3600": 323, "note": 323, "clean_eog_ecg": 323, "ie": 323, "compare_fiff": [323, 842], "fiff": 323, "compute_proj_ecg": [323, 647], "compute_proj_eog": [323, 648], "coreg": [323, 434, 435, 436], "flash_bem": 323, "layer": 323, "freeview_bem_surfac": 323, "kit2fiff": 323, "nyu": 323, "make_scalp_surfac": [323, 376], "maxfilt": 323, "prepare_bem_model": 323, "colloc": 323, "setup_forward_model": 323, "setup_source_spac": [323, 731], "bilater": 323, "subsampl": 323, "show_fiff": [323, 584], "show_info": 323, "surf2bem": 323, "sys_info": [323, 782], "watershed_bem": 323, "acqparserfif": 324, "baseepoch": 326, "bihemilabel": 327, "dipolefix": 330, "epochsarrai": 332, "evokedarrai": 334, "mixedsourceestim": 338, "mixedvectorsourceestim": 339, "vectorsourceestim": 345, "volvectorsourceestim": 347, "add_reference_channel": 348, "add_source_space_dist": 349, "annotations_from_ev": 350, "apply_forward": 351, "apply_forward_raw": 352, "average_forward_solut": 353, "rescal": 354, "apply_d": 356, "apply_dics_csd": 357, "apply_dics_epoch": 358, "apply_dics_tfr_epoch": 359, "apply_lcmv": 360, "apply_lcmv_cov": 361, "apply_lcmv_epoch": 362, "apply_lcmv_raw": 363, "make_d": 364, "make_lcmv": 365, "make_lcmv_resolution_matrix": 366, "rap_mus": 367, "read_beamform": 368, "trap_mus": 369, "conductormodel": 370, "convert_flash_mri": 371, "distance_to_bem": 372, "fit_sphere_to_headshap": 373, "get_fitting_dig": 374, "make_flash_bem": 375, "make_watershed_bem": 377, "channel_indices_by_typ": 378, "channel_typ": 379, "digmontag": 380, "combine_channel": 382, "compute_dev_head_t": 383, "compute_native_head_t": 384, "equalize_channel": [385, 508], "find_ch_adjac": 386, "find_layout": 387, "fix_mag_coil_typ": 388, "generate_2d_layout": 389, "get_builtin_ch_adjac": 390, "get_builtin_montag": 391, "make_1020_channel_select": 392, "make_dig_montag": 393, "make_eeg_layout": 394, "make_grid_layout": 395, "make_standard_montag": 396, "read_ch_adjac": 397, "read_custom_montag": 398, "read_dig_captrak": 399, "read_dig_dat": 400, "read_dig_egi": 401, "read_dig_fif": 402, "read_dig_hpt": 403, "read_dig_localit": 404, "read_dig_polhemus_isotrak": 405, "read_layout": 406, "read_polhemus_fastscan": 407, "rename_channel": [408, 718], "unify_bad_channel": 409, "chpi": [410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "compute_chpi_amplitud": 410, "compute_chpi_loc": 411, "compute_chpi_snr": 412, "compute_head_po": 413, "extract_chpi_locs_ctf": 414, "extract_chpi_locs_kit": 415, "filter_chpi": 416, "get_active_chpi": 417, "get_chpi_info": 418, "head_pos_to_trans_rot_t": 419, "read_head_po": 420, "write_head_po": 421, "combine_evok": 422, "compute_covari": 423, "compute_proj_epoch": 424, "compute_proj_evok": 425, "compute_proj_raw": 426, "compute_rank": 427, "compute_raw_covari": 428, "compute_source_morph": 429, "concatenate_epoch": 430, "concatenate_ev": 431, "concatenate_raw": 432, "convert_forward_solut": 433, "estimate_head_mri_t": 435, "get_mni_fiduci": 436, "count_annot": 437, "count_ev": 438, "cov": [439, 440, 441], "compute_whiten": 439, "prepare_noise_cov": 440, "create_default_subject": 442, "create_info": 443, "cuda": [444, 445, 446, 940], "get_cuda_memori": 444, "init_cuda": 445, "set_cuda_devic": 446, "bst_auditori": 447, "data_path": [447, 448, 449, 452, 453, 454, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481], "bst_raw": 448, "bst_rest": 449, "load_data": [450, 465], "epilepsy_ecog": 452, "erp_cor": 453, "fetch_aparc_sub_parcel": 455, "fetch_dataset": 456, "fetch_fsaverag": 457, "fetch_hcp_mmp_parcel": 458, "fetch_infant_templ": 459, "fetch_phantom": 460, "fnirs_motor": 461, "has_dataset": 462, "hf_sef": 463, "misc": 466, "phantom_4dbti": 470, "phantom_kernel": 471, "phantom_kit": 472, "refmeg_nois": 473, "sleep_physionet": [475, 476], "ag": 475, "fetch_data": [475, 476], "temazepam": 476, "somato": 477, "spm_face": 478, "ucl_opm_auditori": 480, "visual_92_categori": 481, "decimate_surfac": 482, "generalizingestim": 486, "linearmodel": 487, "receptivefield": 489, "slidingestim": 493, "temporalfilt": 494, "timedelayingridg": 495, "timefrequ": 496, "unsupervisedspatialfilt": 497, "compute_em": 499, "cross_val_multiscor": 500, "get_coef": 501, "dig_mri_dist": 502, "get_phantom_dipol": 503, "average_mov": 504, "combine_event_id": 505, "equalize_epoch_count": 506, "define_target_ev": 509, "match_event_nam": 510, "shift_time_ev": 511, "events_from_annot": 512, "export_epoch": 513, "export_evok": 514, "export_evokeds_mff": 515, "export_raw": 516, "extract_label_time_cours": 517, "construct_iir_filt": 518, "create_filt": 519, "estimate_ringing_sampl": 520, "filter_data": 521, "notch_filt": 522, "find_ev": 524, "find_stim_step": 525, "fit_dipol": 526, "compute_depth_prior": 527, "compute_orient_prior": 528, "restrict_forward_to_label": 529, "restrict_forward_to_stc": 530, "get_config": 531, "get_config_path": 532, "get_head_surf": 533, "get_meg_helmet_surf": 534, "get_montage_volume_label": 535, "get_volume_labels_from_aseg": 536, "get_volume_labels_from_src": 537, "grade_to_tri": 538, "grade_to_vertic": 539, "grand_averag": 540, "grow_label": 541, "head_to_mni": 543, "head_to_mri": 544, "inverse_spars": [545, 546, 547, 548], "gamma_map": 545, "make_stc_from_dipol": 546, "mixed_norm": 547, "tf_mixed_norm": 548, "io": [549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "baseraw": 549, "rawarrai": 551, "anonymize_info": 552, "get_channel_type_const": 553, "read_mrk": 554, "read_fiduci": 555, "read_info": 556, "read_raw": 557, "read_raw_artemis123": 558, "read_raw_bdf": 559, "read_raw_boxi": 560, "read_raw_brainvis": 561, "read_raw_bti": 562, "read_raw_cnt": 563, "read_raw_ctf": 564, "read_raw_curri": 565, "read_raw_edf": 566, "read_raw_eeglab": 567, "read_raw_egi": 568, "read_raw_eximia": 569, "read_raw_eyelink": 570, "read_raw_fieldtrip": 571, "read_raw_fif": 572, "read_raw_fil": 573, "read_raw_gdf": 574, "read_raw_hitachi": 575, "read_raw_kit": 576, "read_raw_nedf": 577, "read_raw_nicolet": 578, "read_raw_nihon": 579, "read_raw_nirx": 580, "read_raw_nsx": 581, "read_raw_persyst": 582, "read_raw_snirf": 583, "write_fiduci": 585, "write_info": 586, "select_sourc": 587, "label_sign_flip": 588, "labels_to_stc": 589, "make_ad_hoc_cov": 590, "make_bem_model": 591, "make_bem_solut": 592, "make_field_map": 593, "make_fixed_length_epoch": 594, "make_fixed_length_ev": 595, "make_forward_dipol": 596, "make_forward_solut": 597, "make_sphere_model": 598, "match_channel_ord": 599, "merge_ev": 600, "minimum_norm": [601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620], "apply_invers": 602, "apply_inverse_cov": 603, "apply_inverse_epoch": 604, "apply_inverse_raw": 605, "apply_inverse_tfr_epoch": 606, "compute_rank_invers": 607, "compute_source_psd": 608, "compute_source_psd_epoch": 609, "estimate_snr": 610, "get_cross_talk": 611, "get_point_spread": 612, "make_inverse_oper": 613, "make_inverse_resolution_matrix": 614, "prepare_inverse_oper": 615, "read_inverse_oper": 616, "resolution_metr": 617, "source_band_induced_pow": 618, "source_induced_pow": 619, "write_inverse_oper": 620, "morph_label": 621, "morph_source_spac": 622, "open_doc": 623, "open_report": 624, "parse_config": 625, "pick_channel": 626, "pick_channels_cov": 627, "pick_channels_forward": 628, "pick_channels_regexp": 629, "pick_ev": 630, "pick_info": 631, "pick_typ": 632, "pick_types_forward": 633, "eogregress": 634, "annotate_amplitud": 637, "annotate_break": 638, "annotate_mov": 639, "annotate_muscle_zscor": 640, "annotate_nan": 641, "compute_average_dev_head_t": 642, "compute_bridged_electrod": 643, "compute_current_source_dens": 644, "compute_fine_calibr": 645, "compute_maxwell_basi": 646, "compute_proj_hfc": 649, "corrmap": 650, "cortical_signal_suppress": 651, "create_ecg_epoch": 652, "create_eog_epoch": 653, "equalize_bad": 654, "interpolate_blink": 656, "read_eyelink_calibr": 657, "set_channel_types_eyetrack": 658, "find_bad_channels_maxwel": 659, "find_ecg_ev": 660, "find_eog_ev": 661, "fix_stim_artifact": 662, "ica_find_ecg_ev": 663, "ica_find_eog_ev": 664, "ieeg": [665, 666, 667], "make_montage_volum": 665, "project_sensors_onto_brain": 666, "warp_montag": 667, "infomax": 668, "interpolate_bridged_electrod": 669, "maxwell_filt": 670, "maxwell_filter_prepare_emptyroom": 671, "beer_lambert_law": 672, "optical_dens": 673, "scalp_coupling_index": 674, "short_channel": 675, "source_detector_dist": 676, "temporal_derivative_distribution_repair": 677, "oversampled_temporal_project": 678, "peak_find": 679, "read_eog_regress": 680, "read_fine_calibr": 681, "read_ica": 682, "read_ica_eeglab": 683, "realign_raw": 684, "regress_artifact": 685, "write_fine_calibr": 686, "random_parcel": 687, "read_annot": 688, "read_bem_solut": 689, "read_bem_surfac": 690, "read_cov": 691, "read_dipol": 692, "read_epoch": 693, "read_epochs_eeglab": 694, "read_epochs_fieldtrip": 695, "read_epochs_kit": 696, "read_ev": 697, "read_evoked_besa": 698, "read_evoked_fieldtrip": 699, "read_evok": 700, "read_evokeds_mff": 701, "read_forward_solut": 702, "read_freesurfer_lut": 703, "read_label": 704, "read_labels_from_annot": 705, "read_lta": 706, "read_morph_map": 707, "read_proj": 708, "read_reject_paramet": 709, "read_source_estim": 710, "read_source_morph": 711, "read_source_spac": 712, "read_surfac": 713, "read_talxfm": 714, "read_tran": 715, "read_tri": 716, "read_vectorview_select": 717, "scale_bem": 719, "scale_label": 720, "scale_mri": 721, "scale_source_spac": 722, "sensitivity_map": 723, "set_bipolar_refer": 724, "set_cache_dir": 725, "set_config": 726, "set_eeg_refer": 727, "set_log_fil": 728, "set_log_level": 729, "set_memmap_min_s": 730, "setup_volume_source_spac": 732, "sourcesimul": 733, "add_chpi": 734, "add_ecg": 735, "add_eog": 736, "add_nois": 737, "cosine_scor": 738, "f1_score": 739, "peak_position_error": 740, "precision_scor": 741, "recall_scor": 742, "region_localization_error": 743, "roc_auc_scor": 744, "spatial_deviation_error": 745, "select_source_in_label": 746, "simulate_evok": 747, "simulate_raw": 748, "simulate_sparse_stc": 749, "simulate_stc": 750, "source_spac": [751, 752], "compute_distance_to_sensor": 751, "get_decimated_surfac": 752, "spatial_dist_adjac": 753, "spatial_inter_hemi_adjac": 754, "spatial_src_adjac": 755, "spatial_tris_adjac": 756, "spatio_temporal_dist_adjac": 757, "spatio_temporal_src_adjac": 758, "spatio_temporal_tris_adjac": 759, "split_label": 760, "stat": [761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777], "bonferroni_correct": 761, "bootstrap_confidence_interv": 762, "combine_adjac": 763, "f_mway_rm": 764, "f_onewai": 765, "f_threshold_mway_rm": 766, "fdr_correct": 767, "linear_regress": 768, "linear_regression_raw": 769, "permutation_cluster_1samp_test": 770, "permutation_cluster_test": 771, "permutation_t_test": 772, "spatio_temporal_cluster_1samp_test": 773, "spatio_temporal_cluster_test": 774, "summarize_clusters_stc": 775, "ttest_1samp_no_p": 776, "ttest_ind_no_p": 777, "stc_near_sensor": 778, "stc_to_label": 779, "complete_surface_info": 780, "read_curvatur": 781, "time_frequ": [783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818], "averagetfr": 783, "crossspectraldens": 784, "epochsspectrumarrai": 786, "epochstfr": 787, "spectrumarrai": 789, "csd_array_fouri": 790, "csd_array_morlet": 791, "csd_array_multitap": 792, "csd_fourier": 793, "csd_morlet": 794, "csd_multitap": 795, "csd_tfr": 796, "dpss_window": 797, "fit_iir_model_raw": 798, "fwhm": 799, "istft": 800, "pick_channels_csd": 802, "psd_array_multitap": 803, "psd_array_welch": 804, "read_csd": 805, "read_spectrum": 806, "read_tfr": 807, "stft": 808, "stftfreq": 809, "cwt": 810, "tfr_array_morlet": 812, "tfr_array_multitap": 813, "tfr_array_stockwel": 814, "tfr_morlet": 815, "tfr_multitap": 816, "tfr_stockwel": 817, "write_tfr": 818, "transform_surface_to": 819, "apply_volume_registr": 821, "apply_volume_registration_point": 822, "compute_volume_registr": 823, "quat_to_rot": 824, "read_ras_mni_t": 825, "rot_to_quat": 826, "use_coil_def": 827, "use_log_level": 828, "util": [829, 830], "verbos": 831, "vertex_to_mni": 832, "clickableimag": 834, "evokedfield": 835, "figure3d": 836, "add_background_imag": 837, "centers_to_edg": 838, "circular_layout": 839, "close_3d_figur": 840, "close_all_3d_figur": 841, "create_3d_figur": 843, "plot_gaz": 844, "get_3d_backend": 845, "get_brain_class": 846, "get_browser_backend": 847, "iter_topographi": 848, "link_brain": 849, "mne_analyze_colormap": 850, "plot_align": 851, "plot_arrowmap": 852, "plot_bem": 853, "plot_brain_colorbar": 854, "plot_bridged_electrod": 855, "plot_ch_adjac": 856, "plot_channel_labels_circl": 857, "plot_chpi_snr": 858, "plot_compare_evok": 859, "plot_cov": 860, "plot_csd": 861, "plot_dipole_amplitud": 862, "plot_dipole_loc": 863, "plot_drop_log": 864, "plot_epoch": 865, "plot_epochs_imag": 866, "plot_epochs_psd_topomap": 867, "plot_ev": 868, "plot_evok": 869, "plot_evoked_field": 870, "plot_evoked_imag": 871, "plot_evoked_joint": 872, "plot_evoked_topo": 873, "plot_evoked_topomap": 874, "plot_evoked_whit": 875, "plot_filt": 876, "plot_head_posit": 877, "plot_ica_compon": 878, "plot_ica_overlai": 879, "plot_ica_properti": 880, "plot_ica_scor": 881, "plot_ica_sourc": 882, "plot_ideal_filt": 883, "plot_layout": 884, "plot_montag": 885, "plot_projs_joint": 886, "plot_projs_topomap": 887, "plot_raw": 888, "plot_raw_psd": 889, "plot_regression_weight": 890, "plot_sensor": 891, "plot_snr_estim": 892, "plot_source_estim": 893, "plot_sparse_source_estim": 894, "plot_tfr_topomap": 895, "plot_topo_image_epoch": 896, "plot_vector_source_estim": 898, "plot_volume_source_estim": 899, "set_3d_backend": 900, "set_3d_opt": 901, "set_3d_titl": 902, "set_3d_view": 903, "set_browser_backend": 904, "snapshot_brain_montag": 905, "ui_ev": [906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918], "colormaprang": 906, "contour": 907, "figureclos": 908, "playbackspe": 909, "timechang": 910, "uievent": 911, "vertexselect": 912, "disable_ui_ev": 913, "publish": 915, "subscrib": 916, "unlink": 917, "unsubscrib": 918, "use_3d_backend": 919, "use_browser_backend": 920, "write_bem_solut": 922, "write_bem_surfac": 923, "write_cov": 924, "write_ev": 925, "write_evok": 926, "write_forward_solut": 927, "write_head_bem": 928, "write_label": 929, "write_labels_to_annot": 930, "write_proj": 931, "write_source_spac": 932, "write_surfac": 933, "write_tran": 934, "frequent": 935, "ask": 935, "question": 935, "faq": 935, "issu": 935, "help": [935, 936, 948], "can": 935, "pyvista": 935, "window": [935, 940], "maco": [935, 940, 947], "extrem": 935, "even": 935, "sure": 935, "x": 935, "my": 935, "y": 935, "think": 935, "danger": 935, "pickl": 935, "later": 935, "download": [935, 947], "onc": 935, "again": 935, "cpu": 935, "though": 935, "didn": 935, "tell": 935, "mysteri": 935, "take": 935, "forev": 935, "incorrect": 935, "homepag": 939, "jupyt": 940, "notebook": 940, "jupyterlab": 940, "fa": [940, 947], "brand": [940, 947], "instal": [940, 941, 942, 943, 944, 945, 946, 947, 948], "headless": 940, "linux": 940, "server": 940, "gpu": 940, "acceler": 940, "screen": 940, "mesa": 940, "troubleshoot": [940, 947], "troubl": 940, "upgrad": [940, 949], "pip": 945, "conda": 945, "hdf5": 945, "scenario": 945, "appl": 947, "martino": 950, "cpp": 951, "archiv": 952, "old": 952, "benevol": 953, "dictat": 953, "life": 953, "particip": 953, "lead": 953, "unus": 954, "entri": 954}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Connectivity Estimation": [[0, "connectivity-estimation"]], "Covariance computation": [[1, "covariance-computation"]], "Creating data objects from arrays": [[2, "creating-data-objects-from-arrays"]], "Datasets": [[3, "datasets"]], "Decoding": [[4, "decoding"]], "Events": [[5, "events"]], "Exporting": [[6, "exporting"]], "File I/O": [[7, "file-i-o"]], "Forward Modeling": [[8, "forward-modeling"]], "Inverse Solutions": [[9, "inverse-solutions"]], "Logging and Configuration": [[10, "logging-and-configuration"]], "Most-used classes": [[11, "most-used-classes"]], "MRI Processing": [[12, "mri-processing"]], "Preprocessing": [[13, "preprocessing"], [53, "preprocessing"], [104, "preprocessing"], [136, "preprocessing"], [167, "preprocessing"], [191, "preprocessing"], [192, "preprocessing"], [241, "preprocessing"], [316, "preprocessing"]], "Python API Reference": [[14, "python-api-reference"]], "Reading raw data": [[15, "reading-raw-data"]], "Realtime": [[16, "realtime"]], "MNE-Report": [[17, "mne-report"]], "Sensor Space Data": [[18, "sensor-space-data"]], "Simulation": [[19, "simulation"], [191, "simulation"], [253, "simulation"]], "Source Space Data": [[20, "source-space-data"]], "Statistics": [[21, "statistics"]], "Time-Frequency": [[22, "time-frequency"]], "Visualization": [[23, "visualization"], [53, "visualization"], [81, "visualization"], [150, "visualization"], [203, "visualization"], [309, "visualization"]], "Eyetracking": [[23, "eyetracking"]], "UI Events": [[23, "ui-events"]], "Connectivity Analysis Examples": [[24, "connectivity-analysis-examples"], [53, "connectivity-analysis-examples"]], "Computation times": [[25, "computation-times"], [32, "computation-times"], [46, "computation-times"], [51, "computation-times"], [82, "computation-times"], [93, "computation-times"], [111, "computation-times"], [115, "computation-times"], [118, "computation-times"], [129, "computation-times"], [133, "computation-times"], [156, "computation-times"], [165, "computation-times"], [174, "computation-times"], [180, "computation-times"], [190, "computation-times"], [200, "computation-times"], [214, "computation-times"], [221, "computation-times"], [225, "computation-times"], [242, "computation-times"], [248, "computation-times"], [249, "computation-times"], [254, "computation-times"], [262, "computation-times"], [267, "computation-times"], [272, "computation-times"], [276, "computation-times"], [955, "computation-times"]], "Brainstorm raw (median nerve) dataset": [[26, "brainstorm-raw-median-nerve-dataset"]], "References": [[26, "references"], [30, "references"], [34, "references"], [36, "references"], [38, "references"], [39, "references"], [41, "references"], [42, "references"], [44, "references"], [45, "references"], [47, "references"], [59, "references"], [61, "references"], [66, "references"], [68, "references"], [69, "references"], [70, "references"], [72, "references"], [77, "references"], [80, "references"], [81, "references"], [84, "references"], [85, "references"], [86, "references"], [92, "references"], [97, "references"], [98, "references"], [101, "references"], [102, "references"], [105, "references"], [109, "references"], [110, "references"], [114, "references"], [121, "references"], [128, "references"], [136, "references"], [139, "references"], [140, "references"], [144, "references"], [146, "references"], [148, "references"], [154, "references"], [163, "references"], [167, "references"], [170, "references"], [177, "references"], [181, "references"], [183, "references"], [188, "references"], [202, "references"], [204, "references"], [206, "references"], [209, "references"], [210, "references"], [218, "references"], [222, "references"], [223, "references"], [227, "references"], [229, "references"], [231, "references"], [232, "references"], [233, "references"], [234, "references"], [235, "references"], [237, "references"], [239, "references"], [252, "references"], [255, "references"], [256, "references"], [260, "references"], [268, "references"], [316, "references"], [317, "references"], [320, "references"], [935, "references"]], "HF-SEF dataset": [[27, "hf-sef-dataset"]], "Examples on open datasets": [[28, "examples-on-open-datasets"], [53, "examples-on-open-datasets"]], "Kernel OPM phantom data": [[29, "kernel-opm-phantom-data"]], "Single trial linear regression analysis with the LIMO dataset": [[30, "single-trial-linear-regression-analysis-with-the-limo-dataset"]], "About the data": [[30, "about-the-data"]], "Load the data": [[30, "load-the-data"], [163, "load-the-data"], [167, "load-the-data"], [185, "load-the-data"]], "Visualize events": [[30, "visualize-events"]], "Visualize condition ERPs": [[30, "visualize-condition-erps"]], "Visualize effect of stimulus phase-coherence": [[30, "visualize-effect-of-stimulus-phase-coherence"]], "Prepare data for linear regression analysis": [[30, "prepare-data-for-linear-regression-analysis"]], "Define predictor variables and design matrix": [[30, "define-predictor-variables-and-design-matrix"]], "Extract regression coefficients": [[30, "extract-regression-coefficients"]], "Plot model results": [[30, "plot-model-results"]], "Optically pumped magnetometer (OPM) data": [[31, "optically-pumped-magnetometer-opm-data"]], "Prepare data for localization": [[31, "prepare-data-for-localization"]], "Perform dipole fitting": [[31, "perform-dipole-fitting"]], "Perform minimum-norm localization": [[31, "perform-minimum-norm-localization"]], "From raw data to dSPM on SPM Faces dataset": [[33, "from-raw-data-to-dspm-on-spm-faces-dataset"]], "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)": [[34, "motor-imagery-decoding-from-eeg-data-using-the-common-spatial-pattern-csp"]], "Decoding in time-frequency space using Common Spatial Patterns (CSP)": [[35, "decoding-in-time-frequency-space-using-common-spatial-patterns-csp"]], "Representational Similarity Analysis": [[36, "representational-similarity-analysis"]], "Decoding source space data": [[37, "decoding-source-space-data"]], "Continuous Target Decoding with SPoC": [[38, "continuous-target-decoding-with-spoc"]], "Decoding sensor space data with generalization across time and conditions": [[39, "decoding-sensor-space-data-with-generalization-across-time-and-conditions"]], "Analysis of evoked response using ICA and PCA reduction techniques": [[40, "analysis-of-evoked-response-using-ica-and-pca-reduction-techniques"]], "XDAWN Decoding From EEG data": [[41, "xdawn-decoding-from-eeg-data"]], "Compute effect-matched-spatial filtering (EMS)": [[42, "compute-effect-matched-spatial-filtering-ems"]], "Machine Learning (Decoding, Encoding, and MVPA)": [[43, "machine-learning-decoding-encoding-and-mvpa"], [53, "machine-learning-decoding-encoding-and-mvpa"]], "Linear classifier on sensor data with plot patterns and filters": [[44, "linear-classifier-on-sensor-data-with-plot-patterns-and-filters"]], "Decoding in sensor space using a LogisticRegression classifier": [[44, "decoding-in-sensor-space-using-a-logisticregression-classifier"]], "Receptive Field Estimation and Prediction": [[45, "receptive-field-estimation-and-prediction"]], "Load the data from the publication": [[45, "load-the-data-from-the-publication"]], "Create and fit a receptive field model": [[45, "create-and-fit-a-receptive-field-model"]], "Investigate model coefficients": [[45, "investigate-model-coefficients"], [45, "id7"]], "Create and fit a stimulus reconstruction model": [[45, "create-and-fit-a-stimulus-reconstruction-model"]], "Visualize stimulus reconstruction": [[45, "visualize-stimulus-reconstruction"]], "Compute Spectro-Spatial Decomposition (SSD) spatial filters": [[47, "compute-spectro-spatial-decomposition-ssd-spatial-filters"]], "Epoched data": [[47, "epoched-data"]], "Display sensitivity maps for EEG and MEG sensors": [[48, "display-sensitivity-maps-for-eeg-and-meg-sensors"]], "Forward modeling": [[49, "forward-modeling"], [53, "forward-modeling"]], "Generate a left cerebellum volume source space": [[50, "generate-a-left-cerebellum-volume-source-space"]], "Use source space morphing": [[52, "use-source-space-morphing"]], "Examples Gallery": [[53, "examples-gallery"]], "Input/Output": [[53, "input-output"], [89, "input-output"]], "Data Simulation": [[53, "data-simulation"], [116, "data-simulation"]], "Time-Frequency Examples": [[53, "time-frequency-examples"], [132, "time-frequency-examples"]], "Statistics Examples": [[53, "statistics-examples"], [125, "statistics-examples"]], "Inverse problem and source analysis": [[53, "inverse-problem-and-source-analysis"], [62, "inverse-problem-and-source-analysis"]], "Compute MNE-dSPM inverse solution on single epochs": [[54, "compute-mne-dspm-inverse-solution-on-single-epochs"]], "Compute sLORETA inverse solution on raw data": [[55, "compute-sloreta-inverse-solution-on-raw-data"]], "Compute MNE-dSPM inverse solution on evoked data in volume source space": [[56, "compute-mne-dspm-inverse-solution-on-evoked-data-in-volume-source-space"]], "Source localization with a custom inverse solver": [[57, "source-localization-with-a-custom-inverse-solver"]], "Compute source level time-frequency timecourses using a DICS beamformer": [[58, "compute-source-level-time-frequency-timecourses-using-a-dics-beamformer"]], "Compute source power using DICS beamformer": [[59, "compute-source-power-using-dics-beamformer"]], "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM": [[60, "compute-evoked-ers-source-power-using-dics-lcmv-beamformer-and-dspm"]], "Compute covariances": [[60, "compute-covariances"]], "Plot source estimates": [[60, "plot-source-estimates"]], "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method": [[61, "compute-a-sparse-inverse-solution-using-the-gamma-map-empirical-bayesian-method"]], "Extracting time course from source_estimate object": [[63, "extracting-time-course-from-source-estimate-object"]], "Generate a functional label from source estimates": [[64, "generate-a-functional-label-from-source-estimates"]], "Extracting the time series of activations in a label": [[65, "extracting-the-time-series-of-activations-in-a-label"]], "Compute inverse solution": [[65, "compute-inverse-solution"], [67, "compute-inverse-solution"], [203, "compute-inverse-solution"]], "View source activations": [[65, "view-source-activations"]], "Using vector solutions": [[65, "using-vector-solutions"]], "Compute sparse inverse solution with mixed norm: MxNE and irMxNE": [[66, "compute-sparse-inverse-solution-with-mixed-norm-mxne-and-irmxne"]], "Compute MNE inverse solution on evoked data with a mixed source space": [[67, "compute-mne-inverse-solution-on-evoked-data-with-a-mixed-source-space"]], "Set up our source space": [[67, "set-up-our-source-space"]], "View the source space": [[67, "view-the-source-space"]], "Compute the fwd matrix": [[67, "compute-the-fwd-matrix"]], "Plot the mixed source estimate": [[67, "plot-the-mixed-source-estimate"]], "Plot the surface": [[67, "plot-the-surface"]], "Plot the volume": [[67, "plot-the-volume"]], "Process labels": [[67, "process-labels"]], "Compute source power estimate by projecting the covariance with MNE": [[68, "compute-source-power-estimate-by-projecting-the-covariance-with-mne"]], "Compute empty-room covariance": [[68, "compute-empty-room-covariance"]], "Epoch the data": [[68, "epoch-the-data"]], "Compute and plot covariances": [[68, "compute-and-plot-covariances"]], "Apply inverse operator to covariance": [[68, "apply-inverse-operator-to-covariance"]], "Morph surface source estimate": [[69, "morph-surface-source-estimate"]], "Setting up SourceMorph for SourceEstimate": [[69, "setting-up-sourcemorph-for-sourceestimate"]], "Apply morph to (Vector) SourceEstimate": [[69, "apply-morph-to-vector-sourceestimate"]], "Plot results": [[69, "plot-results"], [70, "plot-results"]], "Reading and writing SourceMorph from and to disk": [[69, "reading-and-writing-sourcemorph-from-and-to-disk"], [70, "reading-and-writing-sourcemorph-from-and-to-disk"]], "Morph volumetric source estimate": [[70, "morph-volumetric-source-estimate"]], "Get a SourceMorph object for VolSourceEstimate": [[70, "get-a-sourcemorph-object-for-volsourceestimate"]], "Apply morph to VolSourceEstimate": [[70, "apply-morph-to-volsourceestimate"]], "Convert morphed VolSourceEstimate into NIfTI": [[70, "convert-morphed-volsourceestimate-into-nifti"]], "Computing source timecourses with an XFit-like multi-dipole model": [[71, "computing-source-timecourses-with-an-xfit-like-multi-dipole-model"]], "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary": [[72, "compute-iterative-reweighted-tf-mxne-with-multiscale-time-frequency-dictionary"]], "Visualize source leakage among labels using a circular graph": [[73, "visualize-source-leakage-among-labels-using-a-circular-graph"]], "Load forward solution and inverse operator": [[73, "load-forward-solution-and-inverse-operator"]], "Read and organise labels for cortical parcellation": [[73, "read-and-organise-labels-for-cortical-parcellation"]], "Compute point-spread function summaries (PCA) for all labels": [[73, "compute-point-spread-function-summaries-pca-for-all-labels"]], "Evaluate leakage based on label-to-label PSF correlations": [[73, "evaluate-leakage-based-on-label-to-label-psf-correlations"]], "Save the figure (optional)": [[73, "save-the-figure-optional"]], "Plot PSFs for individual labels": [[73, "plot-psfs-for-individual-labels"]], "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)": [[74, "plot-point-spread-functions-psfs-and-cross-talk-functions-ctfs"]], "Visualize": [[74, "visualize"], [75, "visualize"], [76, "visualize"]], "Compute cross-talk functions for LCMV beamformers": [[75, "compute-cross-talk-functions-for-lcmv-beamformers"]], "Compute LCMV filters with different data covariance matrices": [[75, "compute-lcmv-filters-with-different-data-covariance-matrices"]], "Compute resolution matrices for the two LCMV beamformers": [[75, "compute-resolution-matrices-for-the-two-lcmv-beamformers"]], "Plot point-spread functions (PSFs) for a volume": [[76, "plot-point-spread-functions-psfs-for-a-volume"]], "Compute Rap-Music on evoked data": [[77, "compute-rap-music-on-evoked-data"]], "Reading an inverse operator": [[78, "reading-an-inverse-operator"]], "Reading an STC file": [[79, "reading-an-stc-file"]], "Compute spatial resolution metrics in source space": [[80, "compute-spatial-resolution-metrics-in-source-space"]], "MNE": [[80, "mne"]], "dSPM": [[80, "dspm"], [320, "dspm"]], "Visualize results": [[80, "visualize-results"]], "Compute spatial resolution metrics to compare MEG with EEG+MEG": [[81, "compute-spatial-resolution-metrics-to-compare-meg-with-eeg-meg"]], "EEGMEG": [[81, "eegmeg"]], "MEG": [[81, "meg"]], "Estimate data SNR using an inverse": [[83, "estimate-data-snr-using-an-inverse"]], "Computing source space SNR": [[84, "computing-source-space-snr"]], "EEG": [[84, "eeg"]], "Compute MxNE with time-frequency sparse prior": [[85, "compute-mxne-with-time-frequency-sparse-prior"]], "Compute Trap-Music on evoked data": [[86, "compute-trap-music-on-evoked-data"]], "Plotting the full vector-valued MNE solution": [[87, "plotting-the-full-vector-valued-mne-solution"]], "Getting averaging info from .fif files": [[88, "getting-averaging-info-from-fif-files"]], "How to use data in neural ensemble (NEO) format": [[90, "how-to-use-data-in-neural-ensemble-neo-format"]], "Reading/Writing a noise covariance matrix": [[91, "reading-writing-a-noise-covariance-matrix"]], "Reading XDF EEG data": [[92, "reading-xdf-eeg-data"]], "Using contralateral referencing for EEG": [[94, "using-contralateral-referencing-for-eeg"]], "Cortical Signal Suppression (CSS) for removal of cortical signals": [[95, "cortical-signal-suppression-css-for-removal-of-cortical-signals"]], "Define target events based on time lag, plot evoked response": [[96, "define-target-events-based-on-time-lag-plot-evoked-response"]], "Identify EEG Electrodes Bridged by too much Gel": [[97, "ex-eeg-bridging"]], "Compute Electrical Distance Metric": [[97, "compute-electrical-distance-metric"]], "Examine an Electrical Distance Matrix": [[97, "examine-an-electrical-distance-matrix"]], "Examine the Distribution of Electrical Distances": [[97, "examine-the-distribution-of-electrical-distances"]], "Plot Electrical Distances on a Topomap": [[97, "plot-electrical-distances-on-a-topomap"]], "Plot the Raw Voltage Time Series for Bridged Electrodes": [[97, "plot-the-raw-voltage-time-series-for-bridged-electrodes"]], "Compare Bridging Across Subjects in the EEGBCI Dataset": [[97, "compare-bridging-across-subjects-in-the-eegbci-dataset"]], "The Relationship Between Bridging and Impedances": [[97, "the-relationship-between-bridging-and-impedances"]], "Summary": [[97, "summary"], [193, "summary"], [201, "summary"], [226, "summary"], [227, "summary"], [229, "summary"]], "Transform EEG data using current source density (CSD)": [[98, "transform-eeg-data-using-current-source-density-csd"]], "Show EOG artifact timing": [[99, "show-eog-artifact-timing"]], "Reduce EOG artifacts through regression": [[100, "reduce-eog-artifacts-through-regression"]], "Import packages and load data": [[100, "import-packages-and-load-data"]], "Perform regression and remove EOG": [[100, "perform-regression-and-remove-eog"]], "Before/after comparison": [[100, "before-after-comparison"]], "Find MEG reference channel artifacts": [[101, "find-meg-reference-channel-artifacts"]], "Visualise NIRS artifact correction methods": [[102, "visualise-nirs-artifact-correction-methods"]], "Import data": [[102, "import-data"]], "Add artificial artifacts to data": [[102, "add-artificial-artifacts-to-data"]], "Apply temporal derivative distribution repair": [[102, "apply-temporal-derivative-distribution-repair"]], "Compare the different ICA algorithms in MNE": [[103, "compare-the-different-ica-algorithms-in-mne"]], "Interpolate bad channels for MEG/EEG channels": [[105, "interpolate-bad-channels-for-meg-eeg-channels"]], "Maxwell filter data with movement compensation": [[106, "maxwell-filter-data-with-movement-compensation"]], "Annotate movement artifacts and reestimate dev_head_t": [[107, "annotate-movement-artifacts-and-reestimate-dev-head-t"]], "Plot continuous head position with respect to the mean recording position": [[107, "plot-continuous-head-position-with-respect-to-the-mean-recording-position"]], "Plot raw data with annotated movement": [[107, "plot-raw-data-with-annotated-movement"]], "Annotate muscle artifacts": [[108, "annotate-muscle-artifacts"]], "Plot muscle z-scores across recording": [[108, "plot-muscle-z-scores-across-recording"]], "View the annotations": [[108, "view-the-annotations"]], "Removing muscle ICA components": [[109, "removing-muscle-ica-components"]], "Let\u2019s now replicate this on the EEGBCI dataset": [[109, "let-s-now-replicate-this-on-the-eegbci-dataset"]], "Plot sensor denoising using oversampled temporal projection": [[110, "plot-sensor-denoising-using-oversampled-temporal-projection"]], "Shifting time-scale in evoked data": [[112, "shifting-time-scale-in-evoked-data"]], "Remap MEG channel types": [[113, "remap-meg-channel-types"]], "XDAWN Denoising": [[114, "xdawn-denoising"]], "Compare simulated and estimated source activity": [[117, "compare-simulated-and-estimated-source-activity"]], "Define main parameters of sources": [[117, "define-main-parameters-of-sources"]], "Create simulated source activity": [[117, "create-simulated-source-activity"], [121, "create-simulated-source-activity"]], "Simulate raw data": [[117, "simulate-raw-data"], [121, "simulate-raw-data"]], "Compute evoked from raw data": [[117, "compute-evoked-from-raw-data"]], "Create true stcs corresponding to evoked": [[117, "create-true-stcs-corresponding-to-evoked"]], "Reconstruct simulated sources": [[117, "reconstruct-simulated-sources"]], "Compute performance scores for different source amplitude thresholds": [[117, "compute-performance-scores-for-different-source-amplitude-thresholds"]], "For region": [[117, "for-region"]], "For Dipoles": [[117, "for-dipoles"]], "Generate simulated evoked data": [[119, "generate-simulated-evoked-data"]], "Generate simulated raw data": [[120, "generate-simulated-raw-data"]], "Simulate raw data using subject anatomy": [[121, "simulate-raw-data-using-subject-anatomy"]], "Extract epochs and compute evoked responsses": [[121, "extract-epochs-and-compute-evoked-responsses"]], "Reconstruct simulated source time courses using dSPM inverse operator": [[121, "reconstruct-simulated-source-time-courses-using-dspm-inverse-operator"]], "Generate simulated source data": [[122, "generate-simulated-source-data"]], "Permutation F-test on sensor data with 1D cluster level": [[123, "permutation-f-test-on-sensor-data-with-1d-cluster-level"]], "FDR correction on T-test on sensor data": [[124, "fdr-correction-on-t-test-on-sensor-data"]], "Regression on continuous data (rER[P/F])": [[126, "regression-on-continuous-data-rer-p-f"]], "Permutation T-test on sensor data": [[127, "permutation-t-test-on-sensor-data"]], "Analysing continuous features with binning and regression in sensor space": [[128, "analysing-continuous-features-with-binning-and-regression-in-sensor-space"]], "Compute a cross-spectral density (CSD) matrix": [[130, "compute-a-cross-spectral-density-csd-matrix"]], "Compute Power Spectral Density of inverse solution from single epochs": [[131, "compute-power-spectral-density-of-inverse-solution-from-single-epochs"]], "Compute source space PSD in label": [[131, "compute-source-space-psd-in-label"]], "Compute power and phase lock in label of the source space": [[134, "compute-power-and-phase-lock-in-label-of-the-source-space"]], "Compute source power spectral density (PSD) in a label": [[135, "compute-source-power-spectral-density-psd-in-a-label"]], "Compute source power spectral density (PSD) of VectorView and OPM data": [[136, "compute-source-power-spectral-density-psd-of-vectorview-and-opm-data"]], "Alignment and forward": [[136, "alignment-and-forward"]], "Alpha": [[136, "alpha"]], "Beta": [[136, "beta"]], "Compute induced power in the source space with dSPM": [[137, "compute-induced-power-in-the-source-space-with-dspm"]], "Temporal whitening with AR model": [[138, "temporal-whitening-with-ar-model"]], "Compute and visualize ERDS maps": [[139, "compute-and-visualize-erds-maps"]], "Explore event-related dynamics for specific frequency bands": [[140, "explore-event-related-dynamics-for-specific-frequency-bands"]], "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)": [[141, "time-frequency-on-simulated-data-multitaper-vs-morlet-vs-stockwell-vs-hilbert"]], "Simulate data": [[141, "simulate-data"]], "Calculate a time-frequency representation (TFR)": [[141, "calculate-a-time-frequency-representation-tfr"]], "Multitaper transform": [[141, "multitaper-transform"]], "Stockwell (S) transform": [[141, "stockwell-s-transform"]], "Morlet Wavelets": [[141, "morlet-wavelets"]], "Narrow-bandpass Filter and Hilbert Transform": [[141, "narrow-bandpass-filter-and-hilbert-transform"]], "Calculating a TFR without averaging over epochs": [[141, "calculating-a-tfr-without-averaging-over-epochs"]], "Operating on arrays": [[141, "operating-on-arrays"]], "How to convert 3D electrode positions to a 2D image": [[142, "how-to-convert-3d-electrode-positions-to-a-2d-image"]], "Load data": [[142, "load-data"], [143, "load-data"], [204, "load-data"]], "Project 3D electrodes to a 2D snapshot": [[142, "project-3d-electrodes-to-a-2d-snapshot"]], "Manually creating 2D electrode positions": [[142, "manually-creating-2d-electrode-positions"]], "Plotting with mne.viz.Brain": [[143, "plotting-with-mne-viz-brain"]], "Add source information": [[143, "add-source-information"]], "Modify the view of the brain": [[143, "modify-the-view-of-the-brain"]], "Highlight a region on the brain": [[143, "highlight-a-region-on-the-brain"]], "Include the head in the image": [[143, "include-the-head-in-the-image"]], "Add sensors positions": [[143, "add-sensors-positions"]], "Add current dipoles": [[143, "add-current-dipoles"]], "Create a screenshot for exporting the brain image": [[143, "create-a-screenshot-for-exporting-the-brain-image"]], "Visualize channel over epochs as an image": [[144, "visualize-channel-over-epochs-as-an-image"]], "Plotting EEG sensors on the scalp": [[145, "plotting-eeg-sensors-on-the-scalp"]], "Plotting topographic arrowmaps of evoked data": [[146, "plotting-topographic-arrowmaps-of-evoked-data"]], "Plotting topographic maps of evoked data": [[147, "plotting-topographic-maps-of-evoked-data"]], "Basic plot_topomap() options": [[147, "basic-plot-topomap-options"]], "Additional plot_topomap() options": [[147, "additional-plot-topomap-options"]], "More advanced usage": [[147, "more-advanced-usage"]], "Interpolating topomaps": [[147, "interpolating-topomaps"]], "Animating the topomap": [[147, "animating-the-topomap"]], "Whitening evoked data with a noise covariance": [[148, "whitening-evoked-data-with-a-noise-covariance"]], "Plotting eye-tracking heatmaps in MNE-Python": [[149, "plotting-eye-tracking-heatmaps-in-mne-python"]], "Data loading": [[149, "data-loading"], [240, "data-loading"]], "Process and epoch the data": [[149, "process-and-epoch-the-data"]], "Plot a heatmap of the eye-tracking data": [[149, "plot-a-heatmap-of-the-eye-tracking-data"]], "Overlaying plots with images": [[149, "overlaying-plots-with-images"]], "Plotting sensor layouts of MEG systems": [[151, "plotting-sensor-layouts-of-meg-systems"]], "Neuromag": [[151, "neuromag"]], "CTF": [[151, "ctf"]], "BTi": [[151, "bti"]], "KIT": [[151, "kit"]], "Artemis123": [[151, "artemis123"]], "Plot the MNE brain and helmet": [[152, "plot-the-mne-brain-and-helmet"]], "Plotting sensor layouts of EEG systems": [[153, "plotting-sensor-layouts-of-eeg-systems"]], "Plot a cortical parcellation": [[154, "plot-a-cortical-parcellation"]], "Plot single trial activity, grouped by ROI and sorted by RT": [[155, "plot-single-trial-activity-grouped-by-roi-and-sorted-by-rt"]], "Sensitivity map of SSP projections": [[157, "sensitivity-map-of-ssp-projections"]], "Compare evoked responses for different conditions": [[158, "compare-evoked-responses-for-different-conditions"]], "Plot custom topographies for MEG sensors": [[159, "plot-custom-topographies-for-meg-sensors"]], "Cross-hemisphere comparison": [[160, "cross-hemisphere-comparison"]], "Working with sEEG data": [[161, "working-with-seeg-data"]], "Working with ECoG data": [[162, "working-with-ecog-data"]], "Load in data and perform basic preprocessing": [[162, "load-in-data-and-perform-basic-preprocessing"]], "Explore the electrodes on a template brain": [[162, "explore-the-electrodes-on-a-template-brain"]], "Compute frequency features of the data": [[162, "compute-frequency-features-of-the-data"]], "Plot Gamma Power on cortical sensors": [[162, "plot-gamma-power-on-cortical-sensors"]], "Visualize the time-evolution of the gamma power on the brain": [[162, "visualize-the-time-evolution-of-the-gamma-power-on-the-brain"]], "Sleep stage classification from polysomnography (PSG) data": [[163, "sleep-stage-classification-from-polysomnography-psg-data"]], "Read the PSG data and Hypnograms to create a raw object": [[163, "read-the-psg-data-and-hypnograms-to-create-a-raw-object"]], "Extract 30s events from annotations": [[163, "extract-30s-events-from-annotations"]], "Create Epochs from the data based on the events found in the annotations": [[163, "create-epochs-from-the-data-based-on-the-events-found-in-the-annotations"]], "Applying the same steps to the test data from Bob": [[163, "applying-the-same-steps-to-the-test-data-from-bob"]], "Feature Engineering": [[163, "feature-engineering"]], "Design a scikit-learn transformer from a Python function": [[163, "design-a-scikit-learn-transformer-from-a-python-function"]], "Multiclass classification workflow using scikit-learn": [[163, "multiclass-classification-workflow-using-scikit-learn"]], "Further analysis of the data": [[163, "further-analysis-of-the-data"]], "Exercise": [[163, "exercise"], [184, "exercise"], [223, "exercise"], [269, "exercise"]], "Clinical applications": [[164, "clinical-applications"], [191, "clinical-applications"]], "MNE-GUI-addons examples": [[164, "mne-gui-addons-examples"], [191, "mne-gui-addons-examples"]], "MNE-Python examples": [[164, "mne-python-examples"], [191, "mne-python-examples"]], "The Epochs data structure: discontinuous data": [[166, "the-epochs-data-structure-discontinuous-data"]], "Creating Epoched data from a Raw object": [[166, "creating-epoched-data-from-a-raw-object"]], "Basic visualization of Epochs objects": [[166, "basic-visualization-of-epochs-objects"]], "Subselecting epochs": [[166, "subselecting-epochs"]], "Selecting epochs by index": [[166, "selecting-epochs-by-index"]], "Selecting, dropping, and reordering channels": [[166, "selecting-dropping-and-reordering-channels"], [175, "selecting-dropping-and-reordering-channels"], [243, "selecting-dropping-and-reordering-channels"]], "Changing channel name and type": [[166, "changing-channel-name-and-type"], [243, "changing-channel-name-and-type"]], "Selection in the time domain": [[166, "selection-in-the-time-domain"], [243, "selection-in-the-time-domain"]], "Extracting data in other forms": [[166, "extracting-data-in-other-forms"]], "Loading and saving Epochs objects to disk": [[166, "loading-and-saving-epochs-objects-to-disk"]], "Iterating over Epochs": [[166, "iterating-over-epochs"]], "Regression-based baseline correction": [[167, "regression-based-baseline-correction"]], "Traditional baselining": [[167, "traditional-baselining"]], "Regression-based baselining": [[167, "regression-based-baselining"]], "Plot the baseline regressor": [[167, "plot-the-baseline-regressor"]], "Plot the ERPs": [[167, "plot-the-erps"]], "Plot the scalp topographies and difference waves": [[167, "plot-the-scalp-topographies-and-difference-waves"]], "Examine the interaction term": [[167, "examine-the-interaction-term"]], "Visualizing epoched data": [[168, "visualizing-epoched-data"]], "Plotting Epochs as time series": [[168, "plotting-epochs-as-time-series"]], "Interactivity in pipelines and scripts": [[168, null]], "Plotting projectors from an Epochs object": [[168, "plotting-projectors-from-an-epochs-object"]], "Plotting sensor locations": [[168, "plotting-sensor-locations"]], "Plotting the power spectrum of Epochs": [[168, "plotting-the-power-spectrum-of-epochs"]], "Plotting Epochs as an image map": [[168, "plotting-epochs-as-an-image-map"]], "Working with Epoch metadata": [[169, "working-with-epoch-metadata"]], "Viewing Epochs metadata": [[169, "viewing-epochs-metadata"]], "Restrictions on metadata DataFrames": [[169, null]], "Modifying the metadata": [[169, "modifying-the-metadata"]], "Selecting epochs using metadata queries": [[169, "selecting-epochs-using-metadata-queries"]], "Adding metadata to an Epochs object": [[169, "adding-metadata-to-an-epochs-object"]], "Auto-generating Epochs metadata": [[170, "auto-generating-epochs-metadata"]], "Preparation": [[170, "preparation"]], "Creating metadata from events": [[170, "creating-metadata-from-events"]], "The basics of make_metadata": [[170, "the-basics-of-make-metadata"]], "Specifying time-locked events": [[170, "specifying-time-locked-events"]], "Keeping only the first events of a group": [[170, "keeping-only-the-first-events-of-a-group"]], "Adding new columns to describe stimulation side and response correctness": [[170, "adding-new-columns-to-describe-stimulation-side-and-response-correctness"]], "Creating Epochs with metadata, and visualizing ERPs": [[170, "creating-epochs-with-metadata-and-visualizing-erps"]], "Applying the knowledge: visualizing the ERN component": [[170, "applying-the-knowledge-visualizing-the-ern-component"]], "Exporting Epochs to Pandas DataFrames": [[171, "exporting-epochs-to-pandas-dataframes"]], "Converting an Epochs object to a DataFrame": [[171, "converting-an-epochs-object-to-a-dataframe"]], "Scaling time and channel values": [[171, "scaling-time-and-channel-values"]], "Setting the index": [[171, "setting-the-index"]], "Wide- versus long-format DataFrames": [[171, "wide-versus-long-format-dataframes"]], "Divide continuous data into equally-spaced epochs": [[172, "divide-continuous-data-into-equally-spaced-epochs"]], "Characteristics of Fixed Length Epochs": [[172, "characteristics-of-fixed-length-epochs"]], "Example Use Case for Fixed Length Epochs: Connectivity Analysis": [[172, "example-use-case-for-fixed-length-epochs-connectivity-analysis"]], "Segmenting continuous data into epochs": [[173, "segmenting-continuous-data-into-epochs"], [191, "segmenting-continuous-data-into-epochs"]], "The Evoked data structure: evoked/averaged data": [[175, "the-evoked-data-structure-evoked-averaged-data"]], "Creating Evoked objects from Epochs": [[175, "creating-evoked-objects-from-epochs"]], "Basic visualization of Evoked objects": [[175, "basic-visualization-of-evoked-objects"]], "Subsetting Evoked data": [[175, "subsetting-evoked-data"]], "Evokeds are not memory-mapped": [[175, null]], "Similarities among the core data structures": [[175, "similarities-among-the-core-data-structures"]], "Loading and saving Evoked data": [[175, "loading-and-saving-evoked-data"]], "Combining Evoked objects": [[175, "combining-evoked-objects"]], "Other uses of Evoked objects": [[175, "other-uses-of-evoked-objects"]], "Visualizing Evoked data": [[176, "visualizing-evoked-data"]], "Plotting signal traces": [[176, "plotting-signal-traces"]], "Butterfly plots": [[176, null]], "Plotting scalp topographies": [[176, "plotting-scalp-topographies"]], "Arrow maps": [[176, "arrow-maps"]], "Joint plots": [[176, "joint-plots"]], "Comparing Evoked objects": [[176, "comparing-evoked-objects"]], "Image plots": [[176, "image-plots"]], "Topographical subplots": [[176, "topographical-subplots"]], "3D Field Maps": [[176, "d-field-maps"]], "EEG analysis - Event-Related Potentials (ERPs)": [[177, "eeg-analysis-event-related-potentials-erps"]], "Channel names and types": [[177, "channel-names-and-types"]], "Channel locations": [[177, "channel-locations"]], "Setting the EEG reference": [[177, "setting-the-eeg-reference"], [235, "setting-the-eeg-reference"]], "Filtering": [[177, "filtering"]], "Evoked responses: epoching and averaging": [[177, "evoked-responses-epoching-and-averaging"]], "Global field power (GFP)": [[177, "global-field-power-gfp"]], "Averaging across channels with regions of interest": [[177, "averaging-across-channels-with-regions-of-interest"]], "Comparing conditions": [[177, "comparing-conditions"]], "Grand averages": [[177, "grand-averages"]], "Amplitude and latency measures": [[177, "amplitude-and-latency-measures"]], "Peak latency and amplitude": [[177, "peak-latency-and-amplitude"]], "Mean Amplitude": [[177, "mean-amplitude"]], "Plotting whitened data": [[178, "plotting-whitened-data"]], "Raw data with whitening": [[178, "raw-data-with-whitening"]], "Epochs with whitening": [[178, "epochs-with-whitening"]], "Evoked data with whitening": [[178, "evoked-data-with-whitening"]], "Evoked data with scaled whitening": [[178, "evoked-data-with-scaled-whitening"]], "Topographic plot with whitening": [[178, "topographic-plot-with-whitening"]], "Estimating evoked responses": [[179, "estimating-evoked-responses"], [191, "estimating-evoked-responses"], [192, "estimating-evoked-responses"]], "FreeSurfer MRI reconstruction": [[181, "freesurfer-mri-reconstruction"]], "First steps": [[181, "first-steps"], [944, "first-steps"]], "Anatomical reconstruction": [[181, "anatomical-reconstruction"]], "Use with MNE-Python": [[181, "use-with-mne-python"]], "\u2018fsaverage\u2019": [[181, "fsaverage"]], "Source alignment and coordinate frames": [[182, "source-alignment-and-coordinate-frames"]], "Understanding coordinate frames": [[182, "understanding-coordinate-frames"]], "Coordinate frame definitions": [[182, "coordinate-frame-definitions"]], "A bad example": [[182, "a-bad-example"]], "A good example": [[182, "a-good-example"]], "Visualizing the transformations": [[182, "visualizing-the-transformations"]], "Example: MRI defacing": [[182, "example-mri-defacing"]], "Defining the head\u2194MRI trans using the GUI": [[182, "defining-the-headmri-trans-using-the-gui"]], "Alignment without MRI": [[182, "alignment-without-mri"]], "Using an automated approach to coregistration": [[183, "using-an-automated-approach-to-coregistration"]], "Set up the coregistration model": [[183, "set-up-the-coregistration-model"]], "Initial fit with fiducials": [[183, "initial-fit-with-fiducials"]], "Refining with ICP": [[183, "refining-with-icp"]], "Omitting bad points": [[183, "omitting-bad-points"]], "Final coregistration fit": [[183, "final-coregistration-fit"]], "Head model and forward computation": [[184, "head-model-and-forward-computation"]], "Computing the forward operator": [[184, "computing-the-forward-operator"]], "Compute and visualize BEM surfaces": [[184, "compute-and-visualize-bem-surfaces"]], "Visualizing the coregistration": [[184, "visualizing-the-coregistration"]], "Compute Source Space": [[184, "compute-source-space"]], "Compute forward solution": [[184, "compute-forward-solution"]], "EEG forward operator with a template MRI": [[185, "eeg-forward-operator-with-a-template-mri"]], "Adult template MRI (fsaverage)": [[185, "adult-template-mri-fsaverage"]], "Setup source space and compute forward": [[185, "setup-source-space-and-compute-forward"]], "Infant MRI surrogates": [[185, "infant-mri-surrogates"]], "Get an infant MRI template": [[185, "get-an-infant-mri-template"]], "How MNE uses FreeSurfer\u2019s outputs": [[186, "how-mne-uses-freesurfer-s-outputs"]], "MRI coordinate frames": [[186, "mri-coordinate-frames"]], "Under the hood": [[186, null]], "\u201cMRI coordinates\u201d in MNE-Python: FreeSurfer surface RAS": [[186, "mri-coordinates-in-mne-python-freesurfer-surface-ras"]], "Head coordinate frame": [[186, null]], "Using FreeSurfer\u2019s surface reconstructions": [[186, "using-freesurfer-s-surface-reconstructions"]], "Cortical alignment (spherical)": [[186, "cortical-alignment-spherical"]], "Surface decimation": [[186, "surface-decimation"]], "FreeSurfer\u2019s MNI affine transformation": [[186, "freesurfer-s-mni-affine-transformation"]], "Understanding the inflated brain": [[186, "understanding-the-inflated-brain"]], "Fixing BEM and head surfaces": [[187, "fixing-bem-and-head-surfaces"]], "Exporting surfaces to Blender": [[187, "exporting-surfaces-to-blender"]], "Editing in Blender": [[187, "editing-in-blender"]], "Using the fixed surfaces in MNE-Python": [[187, "using-the-fixed-surfaces-in-mne-python"]], "Editing the head surfaces": [[187, "editing-the-head-surfaces"]], "Low-resolution head": [[187, "low-resolution-head"]], "High-resolution head": [[187, "high-resolution-head"]], "Blender editing tips": [[187, "blender-editing-tips"]], "What if you still get an error?": [[187, "what-if-you-still-get-an-error"]], "Blender operations": [[187, "blender-operations"]], "Cleaning up a bad dense head surface by smoothing": [[187, "cleaning-up-a-bad-dense-head-surface-by-smoothing"]], "Topological errors": [[187, "topological-errors"]], "Dealing with topology in blender": [[187, "dealing-with-topology-in-blender"]], "Dealing with topology using pymeshfix": [[187, "dealing-with-topology-using-pymeshfix"]], "Computing a covariance matrix": [[188, "computing-a-covariance-matrix"]], "Plot the covariance matrices": [[188, "plot-the-covariance-matrices"]], "How should I regularize the covariance matrix?": [[188, "how-should-i-regularize-the-covariance-matrix"], [935, "how-should-i-regularize-the-covariance-matrix"]], "Forward models and source spaces": [[189, "forward-models-and-source-spaces"], [191, "forward-models-and-source-spaces"]], "Tutorials": [[191, "tutorials"]], "Introductory tutorials": [[191, "introductory-tutorials"], [199, "introductory-tutorials"]], "Reading data for different recording systems": [[191, "reading-data-for-different-recording-systems"], [220, "reading-data-for-different-recording-systems"]], "Working with continuous data": [[191, "working-with-continuous-data"], [247, "working-with-continuous-data"]], "Time-frequency analysis": [[191, "time-frequency-analysis"], [192, "time-frequency-analysis"], [271, "time-frequency-analysis"]], "Source localization and inverses": [[191, "source-localization-and-inverses"], [213, "source-localization-and-inverses"]], "Statistical analysis of sensor data": [[191, "statistical-analysis-of-sensor-data"], [261, "statistical-analysis-of-sensor-data"]], "Statistical analysis of source estimates": [[191, "statistical-analysis-of-source-estimates"], [266, "statistical-analysis-of-source-estimates"]], "Machine learning models of neural activity": [[191, "machine-learning-models-of-neural-activity"], [224, "machine-learning-models-of-neural-activity"]], "Visualization tutorials": [[191, "visualization-tutorials"], [275, "visualization-tutorials"]], "Overview of MEG/EEG analysis with MNE-Python": [[192, "overview-of-meg-eeg-analysis-with-mne-python"]], "Loading data": [[192, "loading-data"]], "Detecting experimental events": [[192, "detecting-experimental-events"]], "Epoching continuous data": [[192, "epoching-continuous-data"]], "Inverse modeling": [[192, "inverse-modeling"]], "Modifying data in-place": [[193, "modifying-data-in-place"]], "Signal processing": [[193, "signal-processing"]], "Channel picking": [[193, "channel-picking"]], "The copy parameter": [[193, "the-copy-parameter"]], "Parsing events from raw data": [[194, "parsing-events-from-raw-data"]], "The Events and Annotations data structures": [[194, "the-events-and-annotations-data-structures"]], "What is a STIM channel?": [[194, "what-is-a-stim-channel"]], "Converting a STIM channel signal to an Events array": [[194, "converting-a-stim-channel-signal-to-an-events-array"]], "The middle column of the Events array": [[194, null]], "Reading embedded events as Annotations": [[194, "reading-embedded-events-as-annotations"]], "Converting between Events arrays and Annotations objects": [[194, "converting-between-events-arrays-and-annotations-objects"]], "Making multiple events per annotation": [[194, "making-multiple-events-per-annotation"]], "The Info data structure": [[195, "the-info-data-structure"]], "Querying the Info object": [[195, "querying-the-info-object"]], "Obtaining subsets of channels": [[195, "obtaining-subsets-of-channels"]], "Obtaining channel type information": [[195, "obtaining-channel-type-information"]], "Dropping channels from an Info object": [[195, "dropping-channels-from-an-info-object"]], "Working with sensor locations": [[196, "working-with-sensor-locations"]], "About montages and layouts": [[196, "about-montages-and-layouts"]], "Working with built-in montages": [[196, "working-with-built-in-montages"]], "Computing sensor locations": [[196, null]], "Plotting 2D sensor locations like EEGLAB": [[196, "plotting-2d-sensor-locations-like-eeglab"]], "The sphere keyword is available in many places!": [[196, null]], "Manually controlling 2D channel projection": [[196, "manually-controlling-2d-channel-projection"]], "Reading sensor digitization files": [[196, "reading-sensor-digitization-files"]], "Visualizing sensors in 3D surface renderings": [[196, "visualizing-sensors-in-3d-surface-renderings"]], "Working with layout files": [[196, "working-with-layout-files"]], "Configuring MNE-Python": [[197, "configuring-mne-python"]], "Getting and setting configuration variables": [[197, "getting-and-setting-configuration-variables"]], "Where configurations are stored": [[197, "where-configurations-are-stored"]], "Using environment variables": [[197, "using-environment-variables"]], "Logging": [[197, "logging"]], "Getting information about your system": [[197, "getting-information-about-your-system"]], "Getting started with mne.Report": [[198, "getting-started-with-mne-report"]], "Adding Raw data": [[198, "adding-raw-data"]], "Adding events": [[198, "adding-events"]], "Adding Epochs": [[198, "adding-epochs"]], "Adding Evoked": [[198, "adding-evoked"]], "Adding Covariance": [[198, "adding-covariance"]], "Adding Projection vectors": [[198, "adding-projection-vectors"]], "Adding ICA": [[198, "adding-ica"]], "Adding MRI with BEM": [[198, "adding-mri-with-bem"]], "Adding coregistration": [[198, "adding-coregistration"]], "Adding a Forward solution": [[198, "adding-a-forward-solution"]], "Adding an InverseOperator": [[198, "adding-an-inverseoperator"]], "Adding a SourceEstimate": [[198, "adding-a-sourceestimate"]], "Adding source code (e.g., a Python script)": [[198, "adding-source-code-e-g-a-python-script"]], "Adding custom figures": [[198, "adding-custom-figures"]], "Adding image files": [[198, "adding-image-files"]], "Working with tags": [[198, "working-with-tags"]], "Editing a saved report": [[198, "editing-a-saved-report"]], "Adding an entire folder of files": [[198, "adding-an-entire-folder-of-files"]], "Adding custom HTML (e.g., a description text)": [[198, "adding-custom-html-e-g-a-description-text"]], "The SourceEstimate data structure": [[201, "the-sourceestimate-data-structure"]], "Load and inspect example data": [[201, "load-and-inspect-example-data"]], "SourceEstimate (stc)": [[201, "sourceestimate-stc"]], "Relationship to SourceSpaces (src)": [[201, "relationship-to-sourcespaces-src"]], "Source localization with equivalent current dipole (ECD) fit": [[202, "source-localization-with-equivalent-current-dipole-ecd-fit"]], "Source localization with MNE, dSPM, sLORETA, and eLORETA": [[203, "source-localization-with-mne-dspm-sloreta-and-eloreta"]], "Compute regularized noise covariance": [[203, "compute-regularized-noise-covariance"]], "Compute the evoked response": [[203, "compute-the-evoked-response"]], "Inverse modeling: MNE/dSPM on evoked and raw data": [[203, "inverse-modeling-mne-dspm-on-evoked-and-raw-data"]], "The role of dipole orientations in distributed source localization": [[204, "the-role-of-dipole-orientations-in-distributed-source-localization"]], "The source space": [[204, "the-source-space"]], "Fixed dipole orientations": [[204, "fixed-dipole-orientations"]], "Loose dipole orientations": [[204, "loose-dipole-orientations"]], "Limiting orientations, but not fixing them": [[204, "limiting-orientations-but-not-fixing-them"]], "Discarding dipole orientation information": [[204, "discarding-dipole-orientation-information"]], "Computing various MNE solutions": [[205, "computing-various-mne-solutions"]], "Fixed orientation": [[205, "fixed-orientation"]], "Free orientation": [[205, "free-orientation"]], "Source reconstruction using an LCMV beamformer": [[206, "source-reconstruction-using-an-lcmv-beamformer"]], "Introduction to beamformers": [[206, "introduction-to-beamformers"]], "Data processing": [[206, "data-processing"]], "Computing the covariance matrices": [[206, "computing-the-covariance-matrices"]], "The forward model": [[206, "the-forward-model"]], "Handling depth bias": [[206, "handling-depth-bias"]], "Compute the spatial filter": [[206, "compute-the-spatial-filter"]], "Apply the spatial filter": [[206, "apply-the-spatial-filter"]], "Visualize the reconstructed source activity": [[206, "visualize-the-reconstructed-source-activity"]], "On MRI slices (orthoview; 2D)": [[206, "on-mri-slices-orthoview-2d"]], "On MNI glass brain (orthoview; 2D)": [[206, "on-mni-glass-brain-orthoview-2d"]], "Volumetric rendering (3D) with vectors": [[206, "volumetric-rendering-3d-with-vectors"]], "Visualize the activity of the maximum voxel with all three components": [[206, "visualize-the-activity-of-the-maximum-voxel-with-all-three-components"]], "Morph the output to fsaverage": [[206, "morph-the-output-to-fsaverage"]], "Visualize source time courses (stcs)": [[207, "visualize-source-time-courses-stcs"]], "Surface Source Estimates": [[207, "surface-source-estimates"]], "Volume Source Estimates": [[207, "volume-source-estimates"]], "Vector Source Estimates": [[207, "vector-source-estimates"]], "Dipole fits": [[207, "dipole-fits"]], "EEG source localization given electrode locations on an MRI": [[208, "eeg-source-localization-given-electrode-locations-on-an-mri"]], "Prerequisites": [[208, "prerequisites"]], "Visualizing the MRI": [[208, "visualizing-the-mri"]], "Getting our MRI voxel EEG locations to head (and MRI surface RAS) coords": [[208, "getting-our-mri-voxel-eeg-locations-to-head-and-mri-surface-ras-coords"]], "Getting a source estimate": [[208, "getting-a-source-estimate"]], "Brainstorm Elekta phantom dataset tutorial": [[209, "brainstorm-elekta-phantom-dataset-tutorial"]], "Brainstorm CTF phantom dataset tutorial": [[210, "brainstorm-ctf-phantom-dataset-tutorial"]], "4D Neuroimaging/BTi phantom dataset tutorial": [[211, "d-neuroimaging-bti-phantom-dataset-tutorial"]], "KIT phantom dataset tutorial": [[212, "kit-phantom-dataset-tutorial"]], "Importing data from MEG devices": [[215, "importing-data-from-meg-devices"]], "MEGIN/Elekta Neuromag VectorView and TRIUX (.fif)": [[215, "megin-elekta-neuromag-vectorview-and-triux-fif"]], "FIL OPM (.bin)": [[215, "fil-opm-bin"]], "Artemis123 (.bin)": [[215, "artemis123-bin"]], "4-D Neuroimaging / BTI data (dir)": [[215, "d-neuroimaging-bti-data-dir"]], "CTF data (dir)": [[215, "ctf-data-dir"]], "CTF Polhemus data": [[215, "ctf-polhemus-data"]], "Applying software gradient compensation": [[215, "applying-software-gradient-compensation"]], "Ricoh/KIT MEG system data (.con/.sqd)": [[215, "ricoh-kit-meg-system-data-con-sqd"]], "Channel naming": [[215, null]], "FieldTrip MEG/EEG data (.mat)": [[215, "fieldtrip-meg-eeg-data-mat"]], "Creating MNE data structures from arbitrary data (from memory)": [[215, "creating-mne-data-structures-from-arbitrary-data-from-memory"]], "Importing data from EEG devices": [[216, "importing-data-from-eeg-devices"]], "BrainVision (.vhdr, .vmrk, .eeg)": [[216, "brainvision-vhdr-vmrk-eeg"]], "European data format (.edf)": [[216, "european-data-format-edf"]], "BioSemi data format (.bdf)": [[216, "biosemi-data-format-bdf"]], "General data format (.gdf)": [[216, "general-data-format-gdf"]], "Neuroscan CNT (.cnt)": [[216, "neuroscan-cnt-cnt"]], "EGI simple binary (.egi)": [[216, "egi-simple-binary-egi"]], "EGI MFF (.mff)": [[216, "egi-mff-mff"]], "EEGLAB files (.set, .fdt)": [[216, "eeglab-files-set-fdt"]], "Nicolet (.data)": [[216, "nicolet-data"]], "eXimia EEG data (.nxe)": [[216, "eximia-eeg-data-nxe"]], "Persyst EEG data (.lay, .dat)": [[216, "persyst-eeg-data-lay-dat"]], "Nihon Kohden EEG data (.eeg, .21e, .pnt, .log)": [[216, "nihon-kohden-eeg-data-eeg-21e-pnt-log"]], "XDF data (.xdf, .xdfz)": [[216, "xdf-data-xdf-xdfz"]], "Setting EEG references": [[216, "setting-eeg-references"]], "Reading electrode locations and head shapes for EEG recordings": [[216, "reading-electrode-locations-and-head-shapes-for-eeg-recordings"]], "Importing data from fNIRS devices": [[217, "importing-data-from-fnirs-devices"]], "Standardized data": [[217, "standardized-data"]], "SNIRF (.snirf)": [[217, "snirf-snirf"]], "Specifying the coordinate system": [[217, "specifying-the-coordinate-system"]], "Continuous Wave Devices": [[217, "continuous-wave-devices"]], "NIRx (directory or hdr)": [[217, "nirx-directory-or-hdr"]], "Hitachi (.csv)": [[217, "hitachi-csv"]], "Frequency Domain Devices": [[217, "frequency-domain-devices"]], "BOXY (.txt)": [[217, "boxy-txt"]], "Custom Data Import": [[217, "custom-data-import"]], "Loading legacy data in CSV or TSV format": [[217, "loading-legacy-data-in-csv-or-tsv-format"]], "Applying standard sensor locations to imported data": [[217, "applying-standard-sensor-locations-to-imported-data"]], "Working with CTF data: the Brainstorm auditory dataset": [[218, "working-with-ctf-data-the-brainstorm-auditory-dataset"]], "Importing Data from Eyetracking devices": [[219, "importing-data-from-eyetracking-devices"]], "SR Research (Eyelink) (.asc)": [[219, "sr-research-eyelink-asc"]], "Eye Position Data": [[219, "eye-position-data"]], "Gaze": [[219, "gaze"]], "Head-Referenced Eye Angle (HREF)": [[219, "head-referenced-eye-angle-href"]], "Pupil Position": [[219, "pupil-position"]], "Pupil Size Data": [[219, "pupil-size-data"]], "Velocity, resolution, and head position data": [[219, "velocity-resolution-and-head-position-data"]], "Spectro-temporal receptive field (STRF) estimation on continuous data": [[222, "spectro-temporal-receptive-field-strf-estimation-on-continuous-data"]], "Load audio data": [[222, "load-audio-data"]], "Create a receptive field": [[222, "create-a-receptive-field"]], "Simulate a neural response": [[222, "simulate-a-neural-response"]], "Fit a model to recover this receptive field": [[222, "fit-a-model-to-recover-this-receptive-field"]], "Visualize the effects of regularization": [[222, "visualize-the-effects-of-regularization"]], "Using different regularization types": [[222, "using-different-regularization-types"]], "Compare model performance": [[222, "compare-model-performance"]], "Decoding (MVPA)": [[223, "decoding-mvpa"]], "Design philosophy": [[223, "design-philosophy"], [318, "design-philosophy"]], "Transformation classes": [[223, "transformation-classes"]], "Scaler": [[223, "scaler"]], "Vectorizer": [[223, "vectorizer"]], "PSDEstimator": [[223, "psdestimator"]], "FilterEstimator": [[223, "filterestimator"]], "Spatial filters": [[223, "spatial-filters"]], "Common spatial pattern": [[223, "common-spatial-pattern"]], "Examples": [[223, null], [223, null], [223, null], [223, null], [223, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [317, null], [323, "examples"], [323, "id6"], [323, "id9"], [323, "id12"], [323, "id15"], [323, "id18"], [323, "id21"], [323, "id24"], [323, "id27"], [323, "id31"], [323, "id34"], [323, "id37"], [323, "id40"], [323, "id43"], [323, "id46"], [323, "id49"], [323, "id52"], [323, "id55"], [323, "id58"], [323, "id61"], [323, "id64"], [323, "id67"], [323, "id70"]], "Source power comodulation (SPoC)": [[223, "source-power-comodulation-spoc"]], "xDAWN": [[223, "xdawn"]], "Effect-matched spatial filtering": [[223, "effect-matched-spatial-filtering"]], "Patterns vs. filters": [[223, "patterns-vs-filters"]], "Decoding over time": [[223, "decoding-over-time"]], "Temporal decoding": [[223, "temporal-decoding"]], "Temporal generalization": [[223, "temporal-generalization"]], "Projecting sensor-space patterns to source space": [[223, "projecting-sensor-space-patterns-to-source-space"]], "Source-space decoding": [[223, "source-space-decoding"]], "Overview of artifact detection": [[226, "overview-of-artifact-detection"]], "What are artifacts?": [[226, "what-are-artifacts"]], "What to do about artifacts": [[226, "what-to-do-about-artifacts"]], "Artifact detection": [[226, "artifact-detection"]], "Low-frequency drifts": [[226, "low-frequency-drifts"]], "Power line noise": [[226, "power-line-noise"], [230, "power-line-noise"]], "Heartbeat artifacts (ECG)": [[226, "heartbeat-artifacts-ecg"]], "Ocular artifacts (EOG)": [[226, "ocular-artifacts-eog"]], "Handling bad channels": [[227, "handling-bad-channels"]], "Marking bad channels": [[227, "marking-bad-channels"], [316, "marking-bad-channels"]], "Blocking execution": [[227, null]], "When to look for bad channels": [[227, "when-to-look-for-bad-channels"]], "Why mark bad channels at all?": [[227, "why-mark-bad-channels-at-all"]], "Interpolating bad channels": [[227, "interpolating-bad-channels"]], "How interpolation works": [[227, "how-interpolation-works"]], "Interpolation in MNE-Python": [[227, "interpolation-in-mne-python"]], "Rejecting bad data spans and breaks": [[228, "rejecting-bad-data-spans-and-breaks"]], "Annotating bad spans of data": [[228, "annotating-bad-spans-of-data"]], "The reject_by_annotation parameter": [[228, "the-reject-by-annotation-parameter"]], "Generating annotations programmatically": [[228, "generating-annotations-programmatically"]], "Detecting and annotating breaks": [[228, "detecting-and-annotating-breaks"]], "Rejecting Epochs based on channel amplitude": [[228, "rejecting-epochs-based-on-channel-amplitude"]], "Background information on filtering": [[229, "background-information-on-filtering"]], "Problem statement": [[229, "problem-statement"]], "Filtering basics": [[229, "filtering-basics"]], "FIR Filters": [[229, "fir-filters"]], "Designing FIR filters": [[229, "designing-fir-filters"]], "Applying FIR filters": [[229, "applying-fir-filters"]], "IIR filters": [[229, "iir-filters"]], "Designing IIR filters": [[229, "designing-iir-filters"]], "Applying IIR filters": [[229, "applying-iir-filters"]], "Some pitfalls of filtering": [[229, "some-pitfalls-of-filtering"]], "Low-pass problems": [[229, "low-pass-problems"]], "High-pass problems": [[229, "high-pass-problems"]], "Baseline problems (or solutions?)": [[229, "baseline-problems-or-solutions"]], "Filtering defaults": [[229, "filtering-defaults"]], "Defaults in MNE-Python": [[229, "defaults-in-mne-python"]], "Defaults in MNE-C": [[229, "defaults-in-mne-c"]], "Defaults in other software": [[229, "defaults-in-other-software"]], "Reporting Filters": [[229, "reporting-filters"]], "Filter type": [[229, "filter-type"]], "Cutoff frequency": [[229, "cutoff-frequency"]], "Filter length (order) and transition bandwidth (roll-off)": [[229, "filter-length-order-and-transition-bandwidth-roll-off"]], "Passband ripple and stopband attenuation": [[229, "passband-ripple-and-stopband-attenuation"]], "Filter delay and direction of computation": [[229, "filter-delay-and-direction-of-computation"]], "Filtering and resampling data": [[230, "filtering-and-resampling-data"]], "Background on filtering": [[230, "background-on-filtering"]], "Repairing artifacts by filtering": [[230, "repairing-artifacts-by-filtering"]], "Slow drifts": [[230, "slow-drifts"]], "Resampling": [[230, "resampling"]], "Best practices": [[230, "best-practices"], [233, "best-practices"]], "Repairing artifacts with regression": [[231, "repairing-artifacts-with-regression"]], "Prepare the data": [[231, "prepare-the-data"]], "Visualize the original data": [[231, "visualize-the-original-data"]], "Compute and apply EOG regression": [[231, "compute-and-apply-eog-regression"]], "Subtract the evoked response from the epoch data before regression": [[231, "subtract-the-evoked-response-from-the-epoch-data-before-regression"]], "Create EOG evoked before regression": [[231, "create-eog-evoked-before-regression"]], "Visualize the effect on raw data": [[231, "visualize-the-effect-on-raw-data"]], "Repairing artifacts with ICA": [[232, "repairing-artifacts-with-ica"]], "What is ICA?": [[232, "what-is-ica"]], "ICA in MNE-Python": [[232, "ica-in-mne-python"]], "ICA and dimensionality reduction": [[232, null]], "Example: EOG and ECG artifact repair": [[232, "example-eog-and-ecg-artifact-repair"], [234, "example-eog-and-ecg-artifact-repair"]], "Visualizing the artifacts": [[232, "visualizing-the-artifacts"], [234, "visualizing-the-artifacts"]], "Filtering to remove slow drifts": [[232, "filtering-to-remove-slow-drifts"]], "Fitting ICA": [[232, "fitting-ica"]], "Ignoring the time domain": [[232, null]], "Looking at the ICA solution": [[232, "looking-at-the-ica-solution"]], "Selecting ICA components manually": [[232, "selecting-ica-components-manually"]], "Using an EOG channel to select ICA components": [[232, "using-an-eog-channel-to-select-ica-components"]], "Using a simulated channel to select ICA components": [[232, "using-a-simulated-channel-to-select-ica-components"]], "Selecting ICA components using template matching": [[232, "selecting-ica-components-using-template-matching"]], "Compute ICA components on Epochs": [[232, "compute-ica-components-on-epochs"]], "Background on projectors and projections": [[233, "background-on-projectors-and-projections"]], "What is a projection?": [[233, "what-is-a-projection"]], "Example: projection as noise reduction": [[233, "example-projection-as-noise-reduction"]], "Terminology": [[233, null]], "Signal-space projection (SSP)": [[233, "signal-space-projection-ssp"]], "Projectors in MNE-Python": [[233, "projectors-in-mne-python"]], "Computing projectors": [[233, "computing-projectors"]], "Visualizing the effect of projectors": [[233, "visualizing-the-effect-of-projectors"]], "Loading and saving projectors": [[233, "loading-and-saving-projectors"]], "Adding and removing projectors": [[233, "adding-and-removing-projectors"]], "When are projectors \u201capplied\u201d?": [[233, "when-are-projectors-applied"]], "Repairing artifacts with SSP": [[234, "repairing-artifacts-with-ssp"]], "What is SSP?": [[234, "what-is-ssp"]], "Example: Environmental noise reduction from empty-room recordings": [[234, "example-environmental-noise-reduction-from-empty-room-recordings"]], "Visualizing the empty-room noise": [[234, "visualizing-the-empty-room-noise"]], "Creating the empty-room projectors": [[234, "creating-the-empty-room-projectors"]], "Visualizing how projectors affect the signal": [[234, "visualizing-how-projectors-affect-the-signal"]], "Repairing ECG artifacts with SSP": [[234, "repairing-ecg-artifacts-with-ssp"]], "Repairing EOG artifacts with SSP": [[234, "repairing-eog-artifacts-with-ssp"]], "Choosing the number of projectors": [[234, "choosing-the-number-of-projectors"]], "Visualizing SSP sensor-space bias via signal reconstruction": [[234, "visualizing-ssp-sensor-space-bias-via-signal-reconstruction"]], "SSP reconstruction": [[234, null]], "Background": [[235, "background"]], "Setting or changing the reference channel": [[235, "setting-or-changing-the-reference-channel"]], "Setting average reference": [[235, "setting-average-reference"]], "Creating the average reference as a projector": [[235, "creating-the-average-reference-as-a-projector"]], "Using an infinite reference (REST)": [[235, "using-an-infinite-reference-rest"]], "Using a bipolar reference": [[235, "using-a-bipolar-reference"]], "EEG reference and source modeling": [[235, "eeg-reference-and-source-modeling"]], "Extracting and visualizing subject head movement": [[236, "extracting-and-visualizing-subject-head-movement"]], "HPI frequencies": [[236, "hpi-frequencies"]], "Estimating continuous head position": [[236, "estimating-continuous-head-position"]], "Visualizing continuous head position": [[236, "visualizing-continuous-head-position"]], "Computing SNR of the HPI signal": [[236, "computing-snr-of-the-hpi-signal"]], "Signal-space separation (SSS) and Maxwell filtering": [[237, "signal-space-separation-sss-and-maxwell-filtering"]], "Background on SSS and Maxwell filtering": [[237, "background-on-sss-and-maxwell-filtering"]], "Using SSS and Maxwell filtering in MNE-Python": [[237, "using-sss-and-maxwell-filtering-in-mne-python"]], "Spatiotemporal SSS (tSSS)": [[237, "spatiotemporal-sss-tsss"]], "Movement compensation": [[237, "movement-compensation"]], "Caveats to using SSS / Maxwell filtering": [[237, "caveats-to-using-sss-maxwell-filtering"]], "Preprocessing functional near-infrared spectroscopy (fNIRS) data": [[238, "preprocessing-functional-near-infrared-spectroscopy-fnirs-data"]], "Providing more meaningful annotation information": [[238, "providing-more-meaningful-annotation-information"]], "Viewing location of sensors over brain surface": [[238, "viewing-location-of-sensors-over-brain-surface"]], "Selecting channels appropriate for detecting neural responses": [[238, "selecting-channels-appropriate-for-detecting-neural-responses"]], "Converting from raw intensity to optical density": [[238, "converting-from-raw-intensity-to-optical-density"]], "Evaluating the quality of the data": [[238, "evaluating-the-quality-of-the-data"]], "Converting from optical density to haemoglobin": [[238, "converting-from-optical-density-to-haemoglobin"]], "Removing heart rate from signal": [[238, "removing-heart-rate-from-signal"]], "Extract epochs": [[238, "extract-epochs"]], "View consistency of responses across trials": [[238, "view-consistency-of-responses-across-trials"]], "View consistency of responses across channels": [[238, "view-consistency-of-responses-across-channels"]], "Plot standard fNIRS response image": [[238, "plot-standard-fnirs-response-image"]], "View topographic representation of activity": [[238, "view-topographic-representation-of-activity"]], "Compare tapping of left and right hands": [[238, "compare-tapping-of-left-and-right-hands"]], "Preprocessing optically pumped magnetometer (OPM) MEG data": [[239, "preprocessing-optically-pumped-magnetometer-opm-meg-data"]], "Examining raw data": [[239, "examining-raw-data"]], "Denoising: Regressing via reference sensors": [[239, "denoising-regressing-via-reference-sensors"]], "Denoising: Regressing via homogeneous field correction": [[239, "denoising-regressing-via-homogeneous-field-correction"]], "Comparing denoising methods": [[239, "comparing-denoising-methods"]], "Filtering nuisance signals": [[239, "filtering-nuisance-signals"]], "Generating an evoked response": [[239, "generating-an-evoked-response"]], "Working with eye tracker data in MNE-Python": [[240, "working-with-eye-tracker-data-in-mne-python"]], "Ocular annotations": [[240, "ocular-annotations"]], "Checking the calibration": [[240, "checking-the-calibration"]], "Plot the raw eye-tracking data": [[240, "plot-the-raw-eye-tracking-data"]], "Handling blink artifacts": [[240, "handling-blink-artifacts"]], "Extract common stimulus events from the data": [[240, "extract-common-stimulus-events-from-the-data"]], "Align the eye-tracking data with EEG data": [[240, "align-the-eye-tracking-data-with-eeg-data"]], "Showing the pupillary light reflex": [[240, "showing-the-pupillary-light-reflex"]], "The Raw data structure: continuous data": [[243, "the-raw-data-structure-continuous-data"]], "Loading continuous data": [[243, "loading-continuous-data"]], "Datasets in MNE-Python": [[243, null]], "Querying the Raw object": [[243, "querying-the-raw-object"]], "Attributes vs. Methods": [[243, null]], "The Raw.info attribute": [[243, "the-raw-info-attribute"]], "Time, sample number, and sample index": [[243, "time-sample-number-and-sample-index"]], "Sample numbering in VectorView data": [[243, null]], "Modifying Raw objects": [[243, "modifying-raw-objects"]], "len(raw)": [[243, null]], "Long channel names": [[243, null]], "Extracting data from Raw objects": [[243, "extracting-data-from-raw-objects"]], "Extracting data by index": [[243, "extracting-data-by-index"]], "Extracting channels by name": [[243, "extracting-channels-by-name"]], "Extracting channels by type": [[243, "extracting-channels-by-type"]], "The Raw.get_data() method": [[243, "the-raw-get-data-method"]], "Summary of ways to extract data from Raw objects": [[243, "summary-of-ways-to-extract-data-from-raw-objects"]], "Exporting and saving Raw objects": [[243, "exporting-and-saving-raw-objects"]], "Working with events": [[244, "working-with-events"]], "Reading and writing events from/to a file": [[244, "reading-and-writing-events-from-to-a-file"]], "Subselecting and combining events": [[244, "subselecting-and-combining-events"]], "Including/excluding events": [[244, null]], "Mapping Event IDs to trial descriptors": [[244, "mapping-event-ids-to-trial-descriptors"]], "Plotting events": [[244, "plotting-events"]], "Plotting events and raw data together": [[244, "plotting-events-and-raw-data-together"]], "Making equally-spaced Events arrays": [[244, "making-equally-spaced-events-arrays"]], "Annotating continuous data": [[245, "annotating-continuous-data"]], "Creating annotations programmatically": [[245, "creating-annotations-programmatically"]], "Annotating Raw objects interactively": [[245, "annotating-raw-objects-interactively"]], "How annotations affect preprocessing and analysis": [[245, "how-annotations-affect-preprocessing-and-analysis"]], "Operations on Annotations objects": [[245, "operations-on-annotations-objects"]], "Reading and writing Annotations to/from a file": [[245, "reading-and-writing-annotations-to-from-a-file"]], "Built-in plotting methods for Raw objects": [[246, "built-in-plotting-methods-for-raw-objects"]], "Interactive data browsing with Raw.plot()": [[246, "interactive-data-browsing-with-raw-plot"]], "Plotting spectral density of continuous data": [[246, "plotting-spectral-density-of-continuous-data"]], "Plotting sensor locations from Raw objects": [[246, "plotting-sensor-locations-from-raw-objects"]], "Plotting projectors from Raw objects": [[246, "plotting-projectors-from-raw-objects"]], "Creating MNE-Python data structures from scratch": [[250, "creating-mne-python-data-structures-from-scratch"]], "Creating Info objects": [[250, "creating-info-objects"]], "Info objects": [[250, null]], "Info consistency": [[250, null]], "Creating Raw objects": [[250, "creating-raw-objects"]], "Units": [[250, null]], "Creating Epochs objects": [[250, "creating-epochs-objects"]], "Creating Evoked Objects": [[250, "creating-evoked-objects"]], "Corrupt known signal with point spread": [[251, "corrupt-known-signal-with-point-spread"]], "Load the MEG data": [[251, "load-the-meg-data"]], "Estimate the background noise covariance from the baseline period": [[251, "estimate-the-background-noise-covariance-from-the-baseline-period"]], "Generate sinusoids in two spatially distant labels": [[251, "generate-sinusoids-in-two-spatially-distant-labels"]], "Find the center vertices in source space of each label": [[251, "find-the-center-vertices-in-source-space-of-each-label"]], "Create source-space data with known signals": [[251, "create-source-space-data-with-known-signals"]], "Plot original signals": [[251, "plot-original-signals"]], "Simulate sensor-space signals": [[251, "simulate-sensor-space-signals"]], "Plot the point-spread of corrupted signal": [[251, "plot-the-point-spread-of-corrupted-signal"]], "Exercises": [[251, "exercises"], [260, "exercises"]], "DICS for power mapping": [[252, "dics-for-power-mapping"]], "Setup": [[252, "setup"]], "Data simulation": [[252, "data-simulation"]], "Power mapping": [[252, "power-mapping"]], "Statistical inference": [[255, "statistical-inference"]], "Hypothesis testing": [[255, "hypothesis-testing"]], "Null hypothesis": [[255, "null-hypothesis"]], "Parametric tests": [[255, "parametric-tests"]], "\u201cHat\u201d variance adjustment": [[255, "hat-variance-adjustment"], [255, "id5"]], "Non-parametric tests": [[255, "non-parametric-tests"]], "Multiple comparisons": [[255, "multiple-comparisons"]], "Bonferroni correction": [[255, "bonferroni-correction"]], "False discovery rate (FDR) correction": [[255, "false-discovery-rate-fdr-correction"]], "Non-parametric resampling test with a maximum statistic": [[255, "non-parametric-resampling-test-with-a-maximum-statistic"]], "Clustering": [[255, "clustering"]], "Effect size": [[255, null]], "Defining the adjacency matrix": [[255, "defining-the-adjacency-matrix"]], "Standard clustering": [[255, "standard-clustering"]], "Threshold-free cluster enhancement (TFCE)": [[255, "threshold-free-cluster-enhancement-tfce"]], "Visualize and compare methods": [[255, "visualize-and-compare-methods"]], "Statistical functions in MNE": [[255, "statistical-functions-in-mne"]], "Parametric methods provided by MNE": [[255, "parametric-methods-provided-by-mne"]], "Non-parametric methods": [[255, "non-parametric-methods"]], "Visualising statistical significance thresholds on EEG data": [[256, "visualising-statistical-significance-thresholds-on-eeg-data"]], "Non-parametric 1 sample cluster statistic on single trial power": [[257, "non-parametric-1-sample-cluster-statistic-on-single-trial-power"]], "Set parameters": [[257, "set-parameters"], [259, "set-parameters"], [260, "set-parameters"], [263, "set-parameters"], [264, "set-parameters"], [265, "set-parameters"]], "Define adjacency for statistics": [[257, "define-adjacency-for-statistics"]], "Compute statistic": [[257, "compute-statistic"], [258, "compute-statistic"], [263, "compute-statistic"], [264, "compute-statistic"]], "View time-frequency plots": [[257, "view-time-frequency-plots"], [258, "view-time-frequency-plots"]], "Non-parametric between conditions cluster statistic on single trial power": [[258, "non-parametric-between-conditions-cluster-statistic-on-single-trial-power"]], "Mass-univariate twoway repeated measures ANOVA on single trial power": [[259, "mass-univariate-twoway-repeated-measures-anova-on-single-trial-power"]], "Create TFR representations for all conditions": [[259, "create-tfr-representations-for-all-conditions"]], "Setup repeated measures ANOVA": [[259, "setup-repeated-measures-anova"]], "Sample data layout": [[259, "id3"]], "Account for multiple comparisons using FDR versus permutation clustering test": [[259, "account-for-multiple-comparisons-using-fdr-versus-permutation-clustering-test"]], "Spatiotemporal permutation F-test on full sensor data": [[260, "spatiotemporal-permutation-f-test-on-full-sensor-data"]], "Read epochs for the channel of interest": [[260, "read-epochs-for-the-channel-of-interest"]], "Find the FieldTrip neighbor definition to setup sensor adjacency": [[260, "find-the-fieldtrip-neighbor-definition-to-setup-sensor-adjacency"]], "Compute permutation statistic": [[260, "compute-permutation-statistic"]], "Visualize clusters": [[260, "visualize-clusters"]], "Permutation statistic for time-frequencies": [[260, "permutation-statistic-for-time-frequencies"]], "Permutation t-test on source data with spatio-temporal clustering": [[263, "permutation-t-test-on-source-data-with-spatio-temporal-clustering"]], "Read epochs for all channels, removing a bad one": [[263, "read-epochs-for-all-channels-removing-a-bad-one"], [265, "read-epochs-for-all-channels-removing-a-bad-one"]], "Transform to source space": [[263, "transform-to-source-space"], [265, "transform-to-source-space"]], "Transform to common cortical space": [[263, "transform-to-common-cortical-space"], [265, "transform-to-common-cortical-space"]], "Find adjacency matrix": [[263, "find-adjacency-matrix"]], "Selecting \u201csignificant\u201d clusters": [[263, "selecting-significant-clusters"]], "Visualize the clusters": [[263, "visualize-the-clusters"], [264, "visualize-the-clusters"], [265, "visualize-the-clusters"]], "2 samples permutation test on source data with spatio-temporal clustering": [[264, "samples-permutation-test-on-source-data-with-spatio-temporal-clustering"]], "Repeated measures ANOVA on source data with spatio-temporal clustering": [[265, "repeated-measures-anova-on-source-data-with-spatio-temporal-clustering"]], "Prepare function for arbitrary contrast": [[265, "prepare-function-for-arbitrary-contrast"]], "Compute clustering statistic": [[265, "compute-clustering-statistic"]], "The Spectrum and EpochsSpectrum classes: frequency-domain data": [[268, "the-spectrum-and-epochsspectrum-classes-frequency-domain-data"]], "Visualizing Spectrum objects": [[268, "visualizing-spectrum-objects"]], "Migrating legacy code": [[268, "migrating-legacy-code"]], "Quick reference for common Spectral class actions": [[268, "id6"]], "Frequency and time-frequency sensor analysis": [[269, "frequency-and-time-frequency-sensor-analysis"]], "Frequency analysis": [[269, "frequency-analysis"], [270, "frequency-analysis"]], "Time-frequency analysis: power and inter-trial coherence": [[269, "time-frequency-analysis-power-and-inter-trial-coherence"]], "Inspect power": [[269, "inspect-power"]], "Joint Plot": [[269, "joint-plot"]], "Inspect ITC": [[269, "inspect-itc"]], "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset": [[270, "frequency-tagging-basic-analysis-of-an-ssvep-vssr-dataset"]], "Data preprocessing": [[270, "data-preprocessing"]], "Calculate power spectral density (PSD)": [[270, "calculate-power-spectral-density-psd"]], "Calculate signal to noise ratio (SNR)": [[270, "calculate-signal-to-noise-ratio-snr"]], "Plot PSD and SNR spectra": [[270, "plot-psd-and-snr-spectra"]], "Extract SNR values at the stimulation frequency": [[270, "extract-snr-values-at-the-stimulation-frequency"]], "Get index for the stimulation frequency (12 Hz)": [[270, "get-index-for-the-stimulation-frequency-12-hz"]], "Get indices for the different trial types": [[270, "get-indices-for-the-different-trial-types"]], "Get indices of EEG channels forming the ROI": [[270, "get-indices-of-eeg-channels-forming-the-roi"]], "Apply the subset, and check the result": [[270, "apply-the-subset-and-check-the-result"]], "Topography of the vSSR": [[270, "topography-of-the-vssr"]], "Statistical separation of 12 Hz and 15 Hz vSSR": [[270, "statistical-separation-of-12-hz-and-15-hz-vssr"]], "Debriefing": [[270, "debriefing"]], "Bonus exercises": [[270, "bonus-exercises"]], "Effect of trial duration on SNR": [[270, "effect-of-trial-duration-on-snr"]], "Time resolved SNR": [[270, "time-resolved-snr"]], "Make figures more publication ready": [[273, "make-figures-more-publication-ready"]], "Imports": [[273, "imports"]], "Evoked plot with brain activation": [[273, "evoked-plot-with-brain-activation"]], "Custom timecourse with montage inset": [[273, "custom-timecourse-with-montage-inset"]], "Using the event system to link figures": [[274, "using-the-event-system-to-link-figures"]], "Linking interactive plots": [[274, "linking-interactive-plots"]], "Overlaying one figure over another": [[274, "overlaying-one-figure-over-another"]], "Hooking a custom plot into the event system": [[274, "hooking-a-custom-plot-into-the-event-system"]], "General bibliography": [[277, "general-bibliography"]], "Version 1.6.dev0 (development)": [[278, "version-1-6-dev0-development"]], "Enhancements": [[278, "enhancements"], [292, "enhancements"], [293, "enhancements"], [294, "enhancements"], [295, "enhancements"], [303, "enhancements"], [304, "enhancements"], [305, "enhancements"], [306, "enhancements"], [307, "enhancements"], [308, "enhancements"]], "Bugs": [[278, "bugs"], [292, "bugs"], [293, "bugs"], [294, "bugs"], [295, "bugs"], [303, "bugs"], [304, "bugs"], [305, "bugs"], [306, "bugs"], [307, "bugs"], [308, "bugs"]], "API changes": [[278, "api-changes"], [292, "api-changes"], [293, "api-changes"], [294, "api-changes"], [295, "api-changes"], [303, "api-changes"], [305, "api-changes"], [306, "api-changes"], [307, "api-changes"], [308, "api-changes"]], "Version 0.1 (2011-09-23)": [[279, "version-0-1-2011-09-23"]], "Authors": [[279, "authors"], [280, "authors"], [281, "authors"], [282, "authors"], [283, "authors"], [284, "authors"], [285, "authors"], [286, "authors"], [287, "authors"], [290, "authors"], [291, "authors"], [292, "authors"], [293, "authors"], [294, "authors"], [295, "authors"], [296, "authors"], [297, "authors"], [298, "authors"], [299, "authors"], [300, "authors"], [301, "authors"], [302, "authors"], [303, "authors"], [304, "authors"], [305, "authors"], [306, "authors"], [307, "authors"], [308, "authors"]], "Version 0.10 (2015-10-26)": [[280, "version-0-10-2015-10-26"]], "Changelog": [[280, "changelog"], [281, "changelog"], [282, "changelog"], [283, "changelog"], [284, "changelog"], [285, "changelog"], [286, "changelog"], [287, "changelog"], [288, "changelog"], [289, "changelog"], [290, "changelog"], [291, "changelog"], [296, "changelog"], [297, "changelog"], [298, "changelog"], [299, "changelog"], [300, "changelog"], [301, "changelog"], [302, "changelog"]], "BUG": [[280, "bug"], [281, "bug"], [282, "bug"], [283, "bug"], [284, "bug"], [285, "bug"], [301, "bug"], [302, "bug"]], "API": [[280, "api"], [281, "api"], [282, "api"], [283, "api"], [284, "api"], [285, "api"], [286, "api"], [287, "api"], [288, "api"], [289, "api"], [291, "api"], [298, "api"], [299, "api"], [300, "api"], [301, "api"], [302, "api"]], "Version 0.11 (2015-12-24)": [[281, "version-0-11-2015-12-24"]], "Version 0.12 (2016-05-10)": [[282, "version-0-12-2016-05-10"]], "Version 0.13 (2016-09-27)": [[283, "version-0-13-2016-09-27"]], "Version 0.14 (2017-03-24)": [[284, "version-0-14-2017-03-24"]], "Version 0.15 (2017-10-20)": [[285, "version-0-15-2017-10-20"]], "Version 0.16 (2018-05-01)": [[286, "version-0-16-2018-05-01"]], "Bug": [[286, "bug"], [287, "bug"], [288, "bug"], [289, "bug"], [291, "bug"]], "Version 0.17 (2018-11-19)": [[287, "version-0-17-2018-11-19"]], "Version 0.18 (2019-05-19)": [[288, "version-0-18-2019-05-19"]], "Version 0.19 (2019-09-24)": [[289, "version-0-19-2019-09-24"]], "Version 0.2 (2011-11-08)": [[290, "version-0-2-2011-11-08"]], "API changes summary": [[290, "api-changes-summary"]], "Version 0.20 (2020-03-27)": [[291, "version-0-20-2020-03-27"]], "Version 0.21 (2020-09-21)": [[292, "version-0-21-2020-09-21"]], "Version 0.22.0 (2020-12-17)": [[293, "version-0-22-0-2020-12-17"]], "Version 0.23.0 (2021-04-27)": [[294, "version-0-23-0-2021-04-27"]], "Version 0.24.0 (2021-11-03)": [[295, "version-0-24-0-2021-11-03"]], "Version 0.3 (2012-03-23)": [[296, "version-0-3-2012-03-23"]], "Version 0.4 (2012-08-24)": [[297, "version-0-4-2012-08-24"]], "Version 0.5 (2012-12-27)": [[298, "version-0-5-2012-12-27"]], "Version 0.6 (2013-06-15)": [[299, "version-0-6-2013-06-15"]], "Version 0.7 (2013-11-26)": [[300, "version-0-7-2013-11-26"]], "Version 0.8 (2014-06-25)": [[301, "version-0-8-2014-06-25"]], "Version 0.9 (2015-05-22)": [[302, "version-0-9-2015-05-22"]], "Version 1.0.0 (2022-03-21)": [[303, "version-1-0-0-2022-03-21"]], "Dependencies": [[303, "dependencies"]], "Version 1.1.0 (2022-08-03)": [[304, "version-1-1-0-2022-08-03"]], "API and behavior changes": [[304, "api-and-behavior-changes"]], "Version 1.2.0 (2022-10-11)": [[305, "version-1-2-0-2022-10-11"]], "Version 1.3.0 (2022-12-21)": [[306, "version-1-3-0-2022-12-21"]], "Version 1.4.0 (2023-05-10)": [[307, "version-1-4-0-2023-05-10"]], "Version 1.5.0 (2023-08-14)": [[308, "version-1-5-0-2023-08-14"]], "Contributing guide": [[309, "contributing-guide"]], "Overview of contribution process": [[309, "overview-of-contribution-process"]], "Setting up your local development environment": [[309, "setting-up-your-local-development-environment"]], "Configuring git": [[309, "configuring-git"]], "GNU Make": [[309, "gnu-make"]], "Forking the MNE-Python repository": [[309, "forking-the-mne-python-repository"]], "Creating the virtual environment": [[309, "creating-the-virtual-environment"]], "Basic git commands": [[309, "basic-git-commands"]], "Connecting to GitHub with SSH (optional)": [[309, "connecting-to-github-with-ssh-optional"]], "MNE-Python coding conventions": [[309, "mne-python-coding-conventions"]], "General requirements": [[309, "general-requirements"]], "All new functionality must have test coverage": [[309, "all-new-functionality-must-have-test-coverage"]], "All new functionality must be documented": [[309, "all-new-functionality-must-be-documented"]], "Avoid API changes when possible": [[309, "avoid-api-changes-when-possible"]], "Deprecate with a decorator or a warning": [[309, "deprecate-with-a-decorator-or-a-warning"]], "Describe your changes in the changelog": [[309, "describe-your-changes-in-the-changelog"]], "First-time contributors": [[309, "first-time-contributors"]], "Recurring contributors": [[309, "recurring-contributors"]], "Test locally before opening pull requests (PRs)": [[309, "test-locally-before-opening-pull-requests-prs"]], "Make tests fast and thorough": [[309, "make-tests-fast-and-thorough"]], "Code style": [[309, "code-style"]], "Adhere to standard Python style guidelines": [[309, "adhere-to-standard-python-style-guidelines"]], "Use consistent variable naming": [[309, "use-consistent-variable-naming"]], "We (mostly) follow NumPy style for docstrings": [[309, "we-mostly-follow-numpy-style-for-docstrings"]], "Cross-reference everywhere": [[309, "cross-reference-everywhere"]], "Other style guidance": [[309, "other-style-guidance"]], "Code organization": [[309, "code-organization"]], "Importing": [[309, "importing"]], "Return types": [[309, "return-types"]], "Running the test suite": [[309, "running-the-test-suite"]], "Building the documentation": [[309, "building-the-documentation"]], "Modifying command-line tools": [[309, "modifying-command-line-tools"]], "GitHub workflow": [[309, "github-workflow"]], "Project Governance": [[310, "project-governance"]], "The Project": [[310, "the-project"]], "Governance model": [[310, "governance-model"]], "BDFL": [[310, "bdfl"]], "Steering Council": [[310, "steering-council"], [953, "steering-council"]], "Council membership": [[310, "council-membership"]], "Conflict of interest": [[310, "conflict-of-interest"]], "Private communications of the Council": [[310, "private-communications-of-the-council"]], "Council decision making": [[310, "council-decision-making"]], "Institutional Partners and funding": [[310, "institutional-partners-and-funding"]], "Document history": [[310, "document-history"], [953, "document-history"]], "Acknowledgements": [[310, "acknowledgements"]], "License": [[310, "license"]], "MNE-Python Development": [[311, "mne-python-development"]], "Roadmap": [[312, "roadmap"]], "Page contents": [[312, "page-contents"]], "Open": [[312, "open"]], "Clustering statistics API": [[312, "clustering-statistics-api"]], "Modernization of realtime processing": [[312, "modernization-of-realtime-processing"]], "In progress": [[312, "in-progress"]], "Diversity, Equity, and Inclusion (DEI)": [[312, "diversity-equity-and-inclusion-dei"]], "First-class OPM support": [[312, "first-class-opm-support"]], "Deep source modeling": [[312, "deep-source-modeling"]], "Time-frequency classes": [[312, "time-frequency-classes"]], "3D visualization": [[312, "d-visualization"]], "Documentation updates": [[312, "documentation-updates"]], "Completed": [[312, "completed"]], "Improved sEEG/ECoG/DBS support": [[312, "improved-seeg-ecog-dbs-support"]], "Access to open EEG/MEG databases": [[312, "access-to-open-eeg-meg-databases"]], "Eye-tracking support": [[312, "eye-tracking-support"]], "Pediatric and clinical MEG pipelines": [[312, "pediatric-and-clinical-meg-pipelines"]], "Integrate OpenMEEG via improved Python bindings": [[312, "integrate-openmeeg-via-improved-python-bindings"]], "Time-frequency visualization": [[312, "time-frequency-visualization"]], "Distributed computing support": [[312, "distributed-computing-support"]], "2D visualization": [[312, "id4"]], "Tutorial / example overhaul": [[312, "tutorial-example-overhaul"]], "Cluster computing images": [[312, "cluster-computing-images"]], "What\u2019s new": [[313, "what-s-new"]], "How to cite MNE-Python": [[314, "how-to-cite-mne-python"]], "Citing the software": [[314, "citing-the-software"]], "Citing the inverse imaging algorithms": [[314, "citing-the-inverse-imaging-algorithms"]], "Citing other algorithms": [[314, "citing-other-algorithms"]], "Papers citing MNE-Python": [[315, "papers-citing-mne-python"]], "The typical M/EEG workflow": [[316, "the-typical-m-eeg-workflow"]], "Overview": [[316, "overview"]], "Artifact suppression": [[316, "artifact-suppression"]], "SSP": [[316, "ssp"]], "ICA": [[316, "ica"]], "Epoching and evoked data": [[316, "epoching-and-evoked-data"]], "Rejection using annotations": [[316, "rejection-using-annotations"]], "Source localization": [[316, "source-localization"]], "Anatomical information": [[316, "anatomical-information"]], "Cortical surface reconstruction with FreeSurfer": [[316, "cortical-surface-reconstruction-with-freesurfer"]], "Setting up the source space": [[316, "setting-up-the-source-space"]], "Recommended subdivisions of an icosahedron and an octahedron for\n       the creation of source spaces. The approximate source spacing and\n       corresponding surface area have been calculated assuming a\n       1000-cm2 surface area per hemisphere.": [[316, "id11"]], "Creating the BEM model meshes": [[316, "creating-the-bem-model-meshes"]], "Setting up the head surface triangulation files": [[316, "setting-up-the-head-surface-triangulation-files"]], "Setting up the boundary-element model": [[316, "setting-up-the-boundary-element-model"]], "Aligning coordinate frames": [[316, "aligning-coordinate-frames"]], "Computing the forward solution": [[316, "computing-the-forward-solution"], [320, "computing-the-forward-solution"]], "Computing the noise-covariance matrix": [[316, "computing-the-noise-covariance-matrix"]], "Calculating the inverse operator": [[316, "calculating-the-inverse-operator"]], "Creating source estimates": [[316, "creating-source-estimates"]], "Group analyses": [[316, "group-analyses"]], "Datasets Overview": [[317, "datasets-overview"]], "Sample": [[317, "sample"]], "Trigger codes for the sample data set.": [[317, "id23"]], "Contents of the data set": [[317, "contents-of-the-data-set"]], "Contents of the MEG/sample directory.": [[317, "id24"]], "Overview of the contents of the subjects/sample directory.": [[317, "id25"]], "UCL OPM Auditory": [[317, "ucl-opm-auditory"]], "Brainstorm": [[317, "brainstorm"]], "Auditory": [[317, "auditory"]], "Resting state": [[317, "resting-state"]], "Median nerve": [[317, "median-nerve"]], "SPM faces": [[317, "spm-faces"]], "EEGBCI motor imagery": [[317, "eegbci-motor-imagery"]], "Somatosensory": [[317, "somatosensory"]], "Multimodal": [[317, "multimodal"]], "fNIRS motor": [[317, "fnirs-motor"]], "High frequency SEF": [[317, "high-frequency-sef"]], "Visual 92 object categories": [[317, "visual-92-object-categories"]], "mTRF Dataset": [[317, "mtrf-dataset"]], "Kiloword dataset": [[317, "kiloword-dataset"]], "KIT phantom dataset": [[317, "kit-phantom-dataset"]], "4D Neuroimaging / BTi dataset": [[317, "d-neuroimaging-bti-dataset"]], "Kernel OPM phantom dataset": [[317, "kernel-opm-phantom-dataset"]], "OPM": [[317, "opm"]], "The Sleep PolySomnoGraphic Database": [[317, "the-sleep-polysomnographic-database"]], "Reference channel noise MEG data set": [[317, "reference-channel-noise-meg-data-set"]], "Miscellaneous Datasets": [[317, "miscellaneous-datasets"]], "fsaverage": [[317, "fsaverage"]], "Infant template MRIs": [[317, "infant-template-mris"]], "ECoG Dataset": [[317, "ecog-dataset"]], "sEEG Dataset": [[317, "seeg-dataset"]], "LIMO Dataset": [[317, "limo-dataset"]], "ERP CORE Dataset": [[317, "erp-core-dataset"]], "SSVEP": [[317, "ssvep"]], "EYELINK": [[317, "eyelink"]], "EEG-Eyetracking": [[317, "eeg-eyetracking"]], "Freeviewing": [[317, "freeviewing"]], "Interactive versus scripted analysis": [[318, "interactive-versus-scripted-analysis"]], "Integration with the scientific python stack": [[318, "integration-with-the-scientific-python-stack"]], "Submodule-based organization": [[318, "submodule-based-organization"]], "(Mostly) unified API": [[318, "mostly-unified-api"]], "In-place operation": [[318, "in-place-operation"]], "Glossary": [[319, "glossary"]], "Algorithms and other implementation details": [[320, "algorithms-and-other-implementation-details"]], "Internal representation (units)": [[320, "internal-representation-units"]], "Floating-point precision": [[320, "floating-point-precision"]], "Supported channel types": [[320, "supported-channel-types"]], "Supported data formats": [[320, "supported-data-formats"]], "Supported formats for digitized 3D locations": [[320, "supported-formats-for-digitized-3d-locations"]], "Memory-efficient I/O": [[320, "memory-efficient-i-o"]], "Preloading continuous (raw) data": [[320, "preloading-continuous-raw-data"]], "Preloading epoched data": [[320, "preloading-epoched-data"]], "Loading data explicitly": [[320, "loading-data-explicitly"]], "Accessing data as NumPy arrays": [[320, "accessing-data-as-numpy-arrays"]], "Bad channel repair via interpolation": [[320, "bad-channel-repair-via-interpolation"]], "Maxwell filtering": [[320, "maxwell-filtering"]], "Signal-Space Projection (SSP)": [[320, "signal-space-projection-ssp"]], "General concepts": [[320, "general-concepts"]], "Estimation of the noise subspace": [[320, "estimation-of-the-noise-subspace"]], "EEG average electrode reference": [[320, "eeg-average-electrode-reference"]], "The Boundary Element Model (BEM)": [[320, "the-boundary-element-model-bem"]], "Using the watershed algorithm": [[320, "using-the-watershed-algorithm"]], "Using FLASH images": [[320, "using-flash-images"]], "Organizing MRI data into directories": [[320, "organizing-mri-data-into-directories"]], "Creating the surface tessellations": [[320, "creating-the-surface-tessellations"]], "Inspecting the meshes": [[320, "inspecting-the-meshes"]], "The forward solution": [[320, "the-forward-solution"]], "MEG/EEG and MRI coordinate systems": [[320, "meg-eeg-and-mri-coordinate-systems"]], "Coordinate transformations in FreeSurfer and MNE software packages.": [[320, "id20"]], "The head and device coordinate systems": [[320, "the-head-and-device-coordinate-systems"]], "Creating a surface-based source space": [[320, "creating-a-surface-based-source-space"]], "Creating a volumetric or discrete source space": [[320, "creating-a-volumetric-or-discrete-source-space"]], "Creating the BEM meshes": [[320, "creating-the-bem-meshes"]], "Topology checks": [[320, "topology-checks"]], "Computing the BEM geometry data": [[320, "computing-the-bem-geometry-data"]], "Coil geometry information": [[320, "coil-geometry-information"]], "The sensor coordinate system": [[320, "the-sensor-coordinate-system"]], "Calculation of the magnetic field": [[320, "calculation-of-the-magnetic-field"]], "Implemented coil geometries": [[320, "implemented-coil-geometries"]], "Normal coil descriptions.": [[320, "id22"]], "Accurate coil descriptions": [[320, "id23"]], "The coil definition file": [[320, "the-coil-definition-file"]], "Coil representation accuracies.": [[320, "id24"]], "Purpose": [[320, "purpose"]], "Implementation of software gradient compensation": [[320, "implementation-of-software-gradient-compensation"]], "The EEG sphere model definition file": [[320, "the-eeg-sphere-model-definition-file"]], "Structure of the default EEG model": [[320, "id25"]], "EEG forward solution in the sphere model": [[320, "eeg-forward-solution-in-the-sphere-model"]], "Averaging forward solutions": [[320, "averaging-forward-solutions"]], "The minimum-norm current estimates": [[320, "the-minimum-norm-current-estimates"]], "The linear inverse operator": [[320, "the-linear-inverse-operator"]], "Regularization": [[320, "regularization"]], "Whitening and scaling": [[320, "whitening-and-scaling"]], "Regularization of the noise-covariance matrix": [[320, "regularization-of-the-noise-covariance-matrix"]], "Computation of the solution": [[320, "computation-of-the-solution"]], "Noise normalization": [[320, "noise-normalization"]], "sLORETA": [[320, "sloreta"]], "eLORETA": [[320, "eloreta"]], "Predicted data": [[320, "predicted-data"]], "Cortical patch statistics": [[320, "cortical-patch-statistics"]], "Orientation constraints": [[320, "orientation-constraints"]], "Depth weighting": [[320, "depth-weighting"]], "Effective number of averages": [[320, "effective-number-of-averages"]], "Morphing and averaging source estimates": [[320, "morphing-and-averaging-source-estimates"]], "Why morphing?": [[320, "why-morphing"]], "The morphing maps": [[320, "the-morphing-maps"]], "About smoothing": [[320, "about-smoothing"]], "Documentation overview": [[321, "documentation-overview"]], "Funding and other support": [[322, "funding-and-other-support"]], "Institutional partners": [[322, "institutional-partners"]], "Current partners": [[322, "current-partners"], [953, "current-partners"]], "Former partners": [[322, "former-partners"], [953, "former-partners"]], "Command line tools using Python": [[323, "command-line-tools-using-python"]], "mne anonymize": [[323, "mne-anonymize"]], "Anonymize raw fif file.": [[323, "anonymize-raw-fif-file"]], "Options": [[323, "options"], [323, "id5"], [323, "id8"], [323, "id11"], [323, "id14"], [323, "id17"], [323, "id20"], [323, "id23"], [323, "id26"], [323, "id30"], [323, "id33"], [323, "id36"], [323, "id39"], [323, "id42"], [323, "id45"], [323, "id48"], [323, "id51"], [323, "id54"], [323, "id57"], [323, "id60"], [323, "id63"], [323, "id66"], [323, "id69"]], "mne browse_raw": [[323, "mne-browse-raw"]], "Browse raw data.": [[323, "browse-raw-data"]], "mne bti2fiff": [[323, "mne-bti2fiff"]], "Import BTi / 4D MagnesWH3600 data to fif file.": [[323, "import-bti-4d-magneswh3600-data-to-fif-file"]], "Notes": [[323, "notes"], [323, "id28"]], "mne clean_eog_ecg": [[323, "mne-clean-eog-ecg"]], "Clean a raw file from EOG and ECG artifacts with PCA (ie SSP).": [[323, "clean-a-raw-file-from-eog-and-ecg-artifacts-with-pca-ie-ssp"]], "mne compare_fiff": [[323, "mne-compare-fiff"]], "Compare FIFF files.": [[323, "compare-fiff-files"]], "mne compute_proj_ecg": [[323, "mne-compute-proj-ecg"]], "Compute SSP/PCA projections for ECG artifacts.": [[323, "compute-ssp-pca-projections-for-ecg-artifacts"]], "mne compute_proj_eog": [[323, "mne-compute-proj-eog"]], "Compute SSP/PCA projections for EOG artifacts.": [[323, "compute-ssp-pca-projections-for-eog-artifacts"]], "mne coreg": [[323, "mne-coreg"]], "Open the coregistration GUI.": [[323, "open-the-coregistration-gui"]], "mne flash_bem": [[323, "mne-flash-bem"]], "Create 3-layer BEM model from Flash MRI images.": [[323, "create-3-layer-bem-model-from-flash-mri-images"]], "mne freeview_bem_surfaces": [[323, "mne-freeview-bem-surfaces"]], "View the 3-Layers BEM model using Freeview.": [[323, "view-the-3-layers-bem-model-using-freeview"]], "mne kit2fiff": [[323, "mne-kit2fiff"]], "Import KIT / NYU data to fif file.": [[323, "import-kit-nyu-data-to-fif-file"]], "mne make_scalp_surfaces": [[323, "mne-make-scalp-surfaces"]], "Create high-resolution head surfaces for coordinate alignment.": [[323, "create-high-resolution-head-surfaces-for-coordinate-alignment"]], "mne maxfilter": [[323, "mne-maxfilter"]], "Apply MaxFilter.": [[323, "apply-maxfilter"]], "mne prepare_bem_model": [[323, "mne-prepare-bem-model"]], "Create a BEM solution using the linear collocation approach.": [[323, "create-a-bem-solution-using-the-linear-collocation-approach"]], "mne report": [[323, "mne-report"]], "Create mne report for a folder.": [[323, "create-mne-report-for-a-folder"]], "mne setup_forward_model": [[323, "mne-setup-forward-model"]], "Create a BEM model for a subject.": [[323, "create-a-bem-model-for-a-subject"]], "mne setup_source_space": [[323, "mne-setup-source-space"]], "Set up bilateral hemisphere surface-based source space with subsampling.": [[323, "set-up-bilateral-hemisphere-surface-based-source-space-with-subsampling"]], "mne show_fiff": [[323, "mne-show-fiff"]], "Show the contents of a FIFF file.": [[323, "show-the-contents-of-a-fiff-file"]], "mne show_info": [[323, "mne-show-info"]], "Show measurement info from .fif file.": [[323, "show-measurement-info-from-fif-file"]], "mne surf2bem": [[323, "mne-surf2bem"]], "Convert surface to BEM FIF file.": [[323, "convert-surface-to-bem-fif-file"]], "mne sys_info": [[323, "mne-sys-info"]], "Show system information.": [[323, "show-system-information"]], "mne watershed_bem": [[323, "mne-watershed-bem"]], "Create BEM surfaces using the watershed algorithm included with FreeSurfer.": [[323, "create-bem-surfaces-using-the-watershed-algorithm-included-with-freesurfer"]], "mne what": [[323, "mne-what"]], "Check type of FIF file.": [[323, "check-type-of-fif-file"]], "mne.AcqParserFIF": [[324, "mne-acqparserfif"]], "mne.Annotations": [[325, "mne-annotations"]], "Examples using mne.Annotations": [[325, "examples-using-mne-annotations"]], "mne.BaseEpochs": [[326, "mne-baseepochs"]], "mne.BiHemiLabel": [[327, "mne-bihemilabel"]], "mne.Covariance": [[328, "mne-covariance"]], "Examples using mne.Covariance": [[328, "examples-using-mne-covariance"]], "mne.Dipole": [[329, "mne-dipole"]], "Examples using mne.Dipole": [[329, "examples-using-mne-dipole"]], "mne.DipoleFixed": [[330, "mne-dipolefixed"]], "Examples using mne.DipoleFixed": [[330, "examples-using-mne-dipolefixed"]], "mne.Epochs": [[331, "mne-epochs"]], "Examples using mne.Epochs": [[331, "examples-using-mne-epochs"]], "mne.EpochsArray": [[332, "mne-epochsarray"]], "Examples using mne.EpochsArray": [[332, "examples-using-mne-epochsarray"]], "mne.Evoked": [[333, "mne-evoked"]], "Examples using mne.Evoked": [[333, "examples-using-mne-evoked"]], "mne.EvokedArray": [[334, "mne-evokedarray"]], "Examples using mne.EvokedArray": [[334, "examples-using-mne-evokedarray"]], "mne.Forward": [[335, "mne-forward"]], "Examples using mne.Forward": [[335, "examples-using-mne-forward"]], "mne.Info": [[336, "mne-info"]], "Examples using mne.Info": [[336, "examples-using-mne-info"]], "mne.Label": [[337, "mne-label"]], "Examples using mne.Label": [[337, "examples-using-mne-label"]], "mne.MixedSourceEstimate": [[338, "mne-mixedsourceestimate"]], "Examples using mne.MixedSourceEstimate": [[338, "examples-using-mne-mixedsourceestimate"]], "mne.MixedVectorSourceEstimate": [[339, "mne-mixedvectorsourceestimate"]], "Examples using mne.MixedVectorSourceEstimate": [[339, "examples-using-mne-mixedvectorsourceestimate"]], "mne.Projection": [[340, "mne-projection"]], "Examples using mne.Projection": [[340, "examples-using-mne-projection"]], "mne.Report": [[341, "mne-report"]], "Examples using mne.Report": [[341, "examples-using-mne-report"]], "mne.SourceEstimate": [[342, "mne-sourceestimate"]], "Examples using mne.SourceEstimate": [[342, "examples-using-mne-sourceestimate"]], "mne.SourceMorph": [[343, "mne-sourcemorph"]], "Examples using mne.SourceMorph": [[343, "examples-using-mne-sourcemorph"]], "mne.SourceSpaces": [[344, "mne-sourcespaces"]], "Examples using mne.SourceSpaces": [[344, "examples-using-mne-sourcespaces"]], "mne.VectorSourceEstimate": [[345, "mne-vectorsourceestimate"]], "Examples using mne.VectorSourceEstimate": [[345, "examples-using-mne-vectorsourceestimate"]], "mne.VolSourceEstimate": [[346, "mne-volsourceestimate"]], "Examples using mne.VolSourceEstimate": [[346, "examples-using-mne-volsourceestimate"]], "mne.VolVectorSourceEstimate": [[347, "mne-volvectorsourceestimate"]], "mne.add_reference_channels": [[348, "mne-add-reference-channels"]], "Examples using mne.add_reference_channels": [[348, "examples-using-mne-add-reference-channels"]], "mne.add_source_space_distances": [[349, "mne-add-source-space-distances"]], "mne.annotations_from_events": [[350, "mne-annotations-from-events"]], "Examples using mne.annotations_from_events": [[350, "examples-using-mne-annotations-from-events"]], "mne.apply_forward": [[351, "mne-apply-forward"]], "mne.apply_forward_raw": [[352, "mne-apply-forward-raw"]], "mne.average_forward_solutions": [[353, "mne-average-forward-solutions"]], "mne.baseline.rescale": [[354, "mne-baseline-rescale"]], "Examples using mne.baseline.rescale": [[354, "examples-using-mne-baseline-rescale"]], "mne.beamformer.Beamformer": [[355, "mne-beamformer-beamformer"]], "Examples using mne.beamformer.Beamformer": [[355, "examples-using-mne-beamformer-beamformer"]], "mne.beamformer.apply_dics": [[356, "mne-beamformer-apply-dics"]], "mne.beamformer.apply_dics_csd": [[357, "mne-beamformer-apply-dics-csd"]], "Examples using mne.beamformer.apply_dics_csd": [[357, "examples-using-mne-beamformer-apply-dics-csd"]], "mne.beamformer.apply_dics_epochs": [[358, "mne-beamformer-apply-dics-epochs"]], "mne.beamformer.apply_dics_tfr_epochs": [[359, "mne-beamformer-apply-dics-tfr-epochs"]], "Examples using mne.beamformer.apply_dics_tfr_epochs": [[359, "examples-using-mne-beamformer-apply-dics-tfr-epochs"]], "mne.beamformer.apply_lcmv": [[360, "mne-beamformer-apply-lcmv"]], "Examples using mne.beamformer.apply_lcmv": [[360, "examples-using-mne-beamformer-apply-lcmv"]], "mne.beamformer.apply_lcmv_cov": [[361, "mne-beamformer-apply-lcmv-cov"]], "Examples using mne.beamformer.apply_lcmv_cov": [[361, "examples-using-mne-beamformer-apply-lcmv-cov"]], "mne.beamformer.apply_lcmv_epochs": [[362, "mne-beamformer-apply-lcmv-epochs"]], "mne.beamformer.apply_lcmv_raw": [[363, "mne-beamformer-apply-lcmv-raw"]], "mne.beamformer.make_dics": [[364, "mne-beamformer-make-dics"]], "Examples using mne.beamformer.make_dics": [[364, "examples-using-mne-beamformer-make-dics"]], "mne.beamformer.make_lcmv": [[365, "mne-beamformer-make-lcmv"]], "Examples using mne.beamformer.make_lcmv": [[365, "examples-using-mne-beamformer-make-lcmv"]], "mne.beamformer.make_lcmv_resolution_matrix": [[366, "mne-beamformer-make-lcmv-resolution-matrix"]], "Examples using mne.beamformer.make_lcmv_resolution_matrix": [[366, "examples-using-mne-beamformer-make-lcmv-resolution-matrix"]], "mne.beamformer.rap_music": [[367, "mne-beamformer-rap-music"]], "Examples using mne.beamformer.rap_music": [[367, "examples-using-mne-beamformer-rap-music"]], "mne.beamformer.read_beamformer": [[368, "mne-beamformer-read-beamformer"]], "mne.beamformer.trap_music": [[369, "mne-beamformer-trap-music"]], "Examples using mne.beamformer.trap_music": [[369, "examples-using-mne-beamformer-trap-music"]], "mne.bem.ConductorModel": [[370, "mne-bem-conductormodel"]], "Examples using mne.bem.ConductorModel": [[370, "examples-using-mne-bem-conductormodel"]], "mne.bem.convert_flash_mris": [[371, "mne-bem-convert-flash-mris"]], "mne.bem.distance_to_bem": [[372, "mne-bem-distance-to-bem"]], "mne.bem.fit_sphere_to_headshape": [[373, "mne-bem-fit-sphere-to-headshape"]], "mne.bem.get_fitting_dig": [[374, "mne-bem-get-fitting-dig"]], "mne.bem.make_flash_bem": [[375, "mne-bem-make-flash-bem"]], "mne.bem.make_scalp_surfaces": [[376, "mne-bem-make-scalp-surfaces"]], "mne.bem.make_watershed_bem": [[377, "mne-bem-make-watershed-bem"]], "mne.channel_indices_by_type": [[378, "mne-channel-indices-by-type"]], "Examples using mne.channel_indices_by_type": [[378, "examples-using-mne-channel-indices-by-type"]], "mne.channel_type": [[379, "mne-channel-type"]], "Examples using mne.channel_type": [[379, "examples-using-mne-channel-type"]], "mne.channels.DigMontage": [[380, "mne-channels-digmontage"]], "Examples using mne.channels.DigMontage": [[380, "examples-using-mne-channels-digmontage"]], "mne.channels.Layout": [[381, "mne-channels-layout"]], "Examples using mne.channels.Layout": [[381, "examples-using-mne-channels-layout"]], "mne.channels.combine_channels": [[382, "mne-channels-combine-channels"]], "Examples using mne.channels.combine_channels": [[382, "examples-using-mne-channels-combine-channels"]], "mne.channels.compute_dev_head_t": [[383, "mne-channels-compute-dev-head-t"]], "mne.channels.compute_native_head_t": [[384, "mne-channels-compute-native-head-t"]], "Examples using mne.channels.compute_native_head_t": [[384, "examples-using-mne-channels-compute-native-head-t"]], "mne.channels.equalize_channels": [[385, "mne-channels-equalize-channels"]], "mne.channels.find_ch_adjacency": [[386, "mne-channels-find-ch-adjacency"]], "Examples using mne.channels.find_ch_adjacency": [[386, "examples-using-mne-channels-find-ch-adjacency"]], "mne.channels.find_layout": [[387, "mne-channels-find-layout"]], "mne.channels.fix_mag_coil_types": [[388, "mne-channels-fix-mag-coil-types"]], "mne.channels.generate_2d_layout": [[389, "mne-channels-generate-2d-layout"]], "mne.channels.get_builtin_ch_adjacencies": [[390, "mne-channels-get-builtin-ch-adjacencies"]], "Examples using mne.channels.get_builtin_ch_adjacencies": [[390, "examples-using-mne-channels-get-builtin-ch-adjacencies"]], "mne.channels.get_builtin_montages": [[391, "mne-channels-get-builtin-montages"]], "Examples using mne.channels.get_builtin_montages": [[391, "examples-using-mne-channels-get-builtin-montages"]], "mne.channels.make_1020_channel_selections": [[392, "mne-channels-make-1020-channel-selections"]], "Examples using mne.channels.make_1020_channel_selections": [[392, "examples-using-mne-channels-make-1020-channel-selections"]], "mne.channels.make_dig_montage": [[393, "mne-channels-make-dig-montage"]], "mne.channels.make_eeg_layout": [[394, "mne-channels-make-eeg-layout"]], "Examples using mne.channels.make_eeg_layout": [[394, "examples-using-mne-channels-make-eeg-layout"]], "mne.channels.make_grid_layout": [[395, "mne-channels-make-grid-layout"]], "mne.channels.make_standard_montage": [[396, "mne-channels-make-standard-montage"]], "Examples using mne.channels.make_standard_montage": [[396, "examples-using-mne-channels-make-standard-montage"]], "mne.channels.read_ch_adjacency": [[397, "mne-channels-read-ch-adjacency"]], "mne.channels.read_custom_montage": [[398, "mne-channels-read-custom-montage"]], "Examples using mne.channels.read_custom_montage": [[398, "examples-using-mne-channels-read-custom-montage"]], "mne.channels.read_dig_captrak": [[399, "mne-channels-read-dig-captrak"]], "mne.channels.read_dig_dat": [[400, "mne-channels-read-dig-dat"]], "mne.channels.read_dig_egi": [[401, "mne-channels-read-dig-egi"]], "mne.channels.read_dig_fif": [[402, "mne-channels-read-dig-fif"]], "Examples using mne.channels.read_dig_fif": [[402, "examples-using-mne-channels-read-dig-fif"]], "mne.channels.read_dig_hpts": [[403, "mne-channels-read-dig-hpts"]], "mne.channels.read_dig_localite": [[404, "mne-channels-read-dig-localite"]], "mne.channels.read_dig_polhemus_isotrak": [[405, "mne-channels-read-dig-polhemus-isotrak"]], "mne.channels.read_layout": [[406, "mne-channels-read-layout"]], "Examples using mne.channels.read_layout": [[406, "examples-using-mne-channels-read-layout"]], "mne.channels.read_polhemus_fastscan": [[407, "mne-channels-read-polhemus-fastscan"]], "mne.channels.rename_channels": [[408, "mne-channels-rename-channels"]], "mne.channels.unify_bad_channels": [[409, "mne-channels-unify-bad-channels"]], "mne.chpi.compute_chpi_amplitudes": [[410, "mne-chpi-compute-chpi-amplitudes"]], "Examples using mne.chpi.compute_chpi_amplitudes": [[410, "examples-using-mne-chpi-compute-chpi-amplitudes"]], "mne.chpi.compute_chpi_locs": [[411, "mne-chpi-compute-chpi-locs"]], "Examples using mne.chpi.compute_chpi_locs": [[411, "examples-using-mne-chpi-compute-chpi-locs"]], "mne.chpi.compute_chpi_snr": [[412, "mne-chpi-compute-chpi-snr"]], "Examples using mne.chpi.compute_chpi_snr": [[412, "examples-using-mne-chpi-compute-chpi-snr"]], "mne.chpi.compute_head_pos": [[413, "mne-chpi-compute-head-pos"]], "Examples using mne.chpi.compute_head_pos": [[413, "examples-using-mne-chpi-compute-head-pos"]], "mne.chpi.extract_chpi_locs_ctf": [[414, "mne-chpi-extract-chpi-locs-ctf"]], "Examples using mne.chpi.extract_chpi_locs_ctf": [[414, "examples-using-mne-chpi-extract-chpi-locs-ctf"]], "mne.chpi.extract_chpi_locs_kit": [[415, "mne-chpi-extract-chpi-locs-kit"]], "mne.chpi.filter_chpi": [[416, "mne-chpi-filter-chpi"]], "Examples using mne.chpi.filter_chpi": [[416, "examples-using-mne-chpi-filter-chpi"]], "mne.chpi.get_active_chpi": [[417, "mne-chpi-get-active-chpi"]], "Examples using mne.chpi.get_active_chpi": [[417, "examples-using-mne-chpi-get-active-chpi"]], "mne.chpi.get_chpi_info": [[418, "mne-chpi-get-chpi-info"]], "Examples using mne.chpi.get_chpi_info": [[418, "examples-using-mne-chpi-get-chpi-info"]], "mne.chpi.head_pos_to_trans_rot_t": [[419, "mne-chpi-head-pos-to-trans-rot-t"]], "mne.chpi.read_head_pos": [[420, "mne-chpi-read-head-pos"]], "Examples using mne.chpi.read_head_pos": [[420, "examples-using-mne-chpi-read-head-pos"]], "mne.chpi.write_head_pos": [[421, "mne-chpi-write-head-pos"]], "Examples using mne.chpi.write_head_pos": [[421, "examples-using-mne-chpi-write-head-pos"]], "mne.combine_evoked": [[422, "mne-combine-evoked"]], "Examples using mne.combine_evoked": [[422, "examples-using-mne-combine-evoked"]], "mne.compute_covariance": [[423, "mne-compute-covariance"]], "Examples using mne.compute_covariance": [[423, "examples-using-mne-compute-covariance"]], "mne.compute_proj_epochs": [[424, "mne-compute-proj-epochs"]], "Examples using mne.compute_proj_epochs": [[424, "examples-using-mne-compute-proj-epochs"]], "mne.compute_proj_evoked": [[425, "mne-compute-proj-evoked"]], "Examples using mne.compute_proj_evoked": [[425, "examples-using-mne-compute-proj-evoked"]], "mne.compute_proj_raw": [[426, "mne-compute-proj-raw"]], "Examples using mne.compute_proj_raw": [[426, "examples-using-mne-compute-proj-raw"]], "mne.compute_rank": [[427, "mne-compute-rank"]], "Examples using mne.compute_rank": [[427, "examples-using-mne-compute-rank"]], "mne.compute_raw_covariance": [[428, "mne-compute-raw-covariance"]], "Examples using mne.compute_raw_covariance": [[428, "examples-using-mne-compute-raw-covariance"]], "mne.compute_source_morph": [[429, "mne-compute-source-morph"]], "Examples using mne.compute_source_morph": [[429, "examples-using-mne-compute-source-morph"]], "mne.concatenate_epochs": [[430, "mne-concatenate-epochs"]], "Examples using mne.concatenate_epochs": [[430, "examples-using-mne-concatenate-epochs"]], "mne.concatenate_events": [[431, "mne-concatenate-events"]], "mne.concatenate_raws": [[432, "mne-concatenate-raws"]], "Examples using mne.concatenate_raws": [[432, "examples-using-mne-concatenate-raws"]], "mne.convert_forward_solution": [[433, "mne-convert-forward-solution"]], "Examples using mne.convert_forward_solution": [[433, "examples-using-mne-convert-forward-solution"]], "mne.coreg.Coregistration": [[434, "mne-coreg-coregistration"]], "Examples using mne.coreg.Coregistration": [[434, "examples-using-mne-coreg-coregistration"]], "mne.coreg.estimate_head_mri_t": [[435, "mne-coreg-estimate-head-mri-t"]], "Examples using mne.coreg.estimate_head_mri_t": [[435, "examples-using-mne-coreg-estimate-head-mri-t"]], "mne.coreg.get_mni_fiducials": [[436, "mne-coreg-get-mni-fiducials"]], "Examples using mne.coreg.get_mni_fiducials": [[436, "examples-using-mne-coreg-get-mni-fiducials"]], "mne.count_annotations": [[437, "mne-count-annotations"]], "mne.count_events": [[438, "mne-count-events"]], "mne.cov.compute_whitener": [[439, "mne-cov-compute-whitener"]], "mne.cov.prepare_noise_cov": [[440, "mne-cov-prepare-noise-cov"]], "mne.cov.regularize": [[441, "mne-cov-regularize"]], "Examples using mne.cov.regularize": [[441, "examples-using-mne-cov-regularize"]], "mne.create_default_subject": [[442, "mne-create-default-subject"]], "mne.create_info": [[443, "mne-create-info"]], "Examples using mne.create_info": [[443, "examples-using-mne-create-info"]], "mne.cuda.get_cuda_memory": [[444, "mne-cuda-get-cuda-memory"]], "mne.cuda.init_cuda": [[445, "mne-cuda-init-cuda"]], "mne.cuda.set_cuda_device": [[446, "mne-cuda-set-cuda-device"]], "mne.datasets.brainstorm.bst_auditory.data_path": [[447, "mne-datasets-brainstorm-bst-auditory-data-path"]], "mne.datasets.brainstorm.bst_raw.data_path": [[448, "mne-datasets-brainstorm-bst-raw-data-path"]], "mne.datasets.brainstorm.bst_resting.data_path": [[449, "mne-datasets-brainstorm-bst-resting-data-path"]], "mne.datasets.eegbci.load_data": [[450, "mne-datasets-eegbci-load-data"]], "mne.datasets.eegbci.standardize": [[451, "mne-datasets-eegbci-standardize"]], "mne.datasets.epilepsy_ecog.data_path": [[452, "mne-datasets-epilepsy-ecog-data-path"]], "Examples using mne.datasets.epilepsy_ecog.data_path": [[452, "examples-using-mne-datasets-epilepsy-ecog-data-path"]], "mne.datasets.erp_core.data_path": [[453, "mne-datasets-erp-core-data-path"]], "mne.datasets.eyelink.data_path": [[454, "mne-datasets-eyelink-data-path"]], "mne.datasets.fetch_aparc_sub_parcellation": [[455, "mne-datasets-fetch-aparc-sub-parcellation"]], "mne.datasets.fetch_dataset": [[456, "mne-datasets-fetch-dataset"]], "mne.datasets.fetch_fsaverage": [[457, "mne-datasets-fetch-fsaverage"]], "mne.datasets.fetch_hcp_mmp_parcellation": [[458, "mne-datasets-fetch-hcp-mmp-parcellation"]], "mne.datasets.fetch_infant_template": [[459, "mne-datasets-fetch-infant-template"]], "Examples using mne.datasets.fetch_infant_template": [[459, "examples-using-mne-datasets-fetch-infant-template"]], "mne.datasets.fetch_phantom": [[460, "mne-datasets-fetch-phantom"]], "mne.datasets.fnirs_motor.data_path": [[461, "mne-datasets-fnirs-motor-data-path"]], "mne.datasets.has_dataset": [[462, "mne-datasets-has-dataset"]], "mne.datasets.hf_sef.data_path": [[463, "mne-datasets-hf-sef-data-path"]], "mne.datasets.kiloword.data_path": [[464, "mne-datasets-kiloword-data-path"]], "mne.datasets.limo.load_data": [[465, "mne-datasets-limo-load-data"]], "mne.datasets.misc.data_path": [[466, "mne-datasets-misc-data-path"]], "mne.datasets.mtrf.data_path": [[467, "mne-datasets-mtrf-data-path"]], "mne.datasets.multimodal.data_path": [[468, "mne-datasets-multimodal-data-path"]], "mne.datasets.opm.data_path": [[469, "mne-datasets-opm-data-path"]], "mne.datasets.phantom_4dbti.data_path": [[470, "mne-datasets-phantom-4dbti-data-path"]], "mne.datasets.phantom_kernel.data_path": [[471, "mne-datasets-phantom-kernel-data-path"]], "mne.datasets.phantom_kit.data_path": [[472, "mne-datasets-phantom-kit-data-path"]], "mne.datasets.refmeg_noise.data_path": [[473, "mne-datasets-refmeg-noise-data-path"]], "mne.datasets.sample.data_path": [[474, "mne-datasets-sample-data-path"]], "Examples using mne.datasets.sample.data_path": [[474, "examples-using-mne-datasets-sample-data-path"]], "mne.datasets.sleep_physionet.age.fetch_data": [[475, "mne-datasets-sleep-physionet-age-fetch-data"]], "Examples using mne.datasets.sleep_physionet.age.fetch_data": [[475, "examples-using-mne-datasets-sleep-physionet-age-fetch-data"]], "mne.datasets.sleep_physionet.temazepam.fetch_data": [[476, "mne-datasets-sleep-physionet-temazepam-fetch-data"]], "mne.datasets.somato.data_path": [[477, "mne-datasets-somato-data-path"]], "mne.datasets.spm_face.data_path": [[478, "mne-datasets-spm-face-data-path"]], "mne.datasets.ssvep.data_path": [[479, "mne-datasets-ssvep-data-path"]], "mne.datasets.ucl_opm_auditory.data_path": [[480, "mne-datasets-ucl-opm-auditory-data-path"]], "mne.datasets.visual_92_categories.data_path": [[481, "mne-datasets-visual-92-categories-data-path"]], "mne.decimate_surface": [[482, "mne-decimate-surface"]], "mne.decoding.CSP": [[483, "mne-decoding-csp"]], "Examples using mne.decoding.CSP": [[483, "examples-using-mne-decoding-csp"]], "mne.decoding.EMS": [[484, "mne-decoding-ems"]], "Examples using mne.decoding.EMS": [[484, "examples-using-mne-decoding-ems"]], "mne.decoding.FilterEstimator": [[485, "mne-decoding-filterestimator"]], "mne.decoding.GeneralizingEstimator": [[486, "mne-decoding-generalizingestimator"]], "Examples using mne.decoding.GeneralizingEstimator": [[486, "examples-using-mne-decoding-generalizingestimator"]], "mne.decoding.LinearModel": [[487, "mne-decoding-linearmodel"]], "Examples using mne.decoding.LinearModel": [[487, "examples-using-mne-decoding-linearmodel"]], "mne.decoding.PSDEstimator": [[488, "mne-decoding-psdestimator"]], "mne.decoding.ReceptiveField": [[489, "mne-decoding-receptivefield"]], "Examples using mne.decoding.ReceptiveField": [[489, "examples-using-mne-decoding-receptivefield"]], "mne.decoding.SPoC": [[490, "mne-decoding-spoc"]], "Examples using mne.decoding.SPoC": [[490, "examples-using-mne-decoding-spoc"]], "mne.decoding.SSD": [[491, "mne-decoding-ssd"]], "Examples using mne.decoding.SSD": [[491, "examples-using-mne-decoding-ssd"]], "mne.decoding.Scaler": [[492, "mne-decoding-scaler"]], "Examples using mne.decoding.Scaler": [[492, "examples-using-mne-decoding-scaler"]], "mne.decoding.SlidingEstimator": [[493, "mne-decoding-slidingestimator"]], "Examples using mne.decoding.SlidingEstimator": [[493, "examples-using-mne-decoding-slidingestimator"]], "mne.decoding.TemporalFilter": [[494, "mne-decoding-temporalfilter"]], "mne.decoding.TimeDelayingRidge": [[495, "mne-decoding-timedelayingridge"]], "Examples using mne.decoding.TimeDelayingRidge": [[495, "examples-using-mne-decoding-timedelayingridge"]], "mne.decoding.TimeFrequency": [[496, "mne-decoding-timefrequency"]], "mne.decoding.UnsupervisedSpatialFilter": [[497, "mne-decoding-unsupervisedspatialfilter"]], "Examples using mne.decoding.UnsupervisedSpatialFilter": [[497, "examples-using-mne-decoding-unsupervisedspatialfilter"]], "mne.decoding.Vectorizer": [[498, "mne-decoding-vectorizer"]], "Examples using mne.decoding.Vectorizer": [[498, "examples-using-mne-decoding-vectorizer"]], "mne.decoding.compute_ems": [[499, "mne-decoding-compute-ems"]], "Examples using mne.decoding.compute_ems": [[499, "examples-using-mne-decoding-compute-ems"]], "mne.decoding.cross_val_multiscore": [[500, "mne-decoding-cross-val-multiscore"]], "Examples using mne.decoding.cross_val_multiscore": [[500, "examples-using-mne-decoding-cross-val-multiscore"]], "mne.decoding.get_coef": [[501, "mne-decoding-get-coef"]], "Examples using mne.decoding.get_coef": [[501, "examples-using-mne-decoding-get-coef"]], "mne.dig_mri_distances": [[502, "mne-dig-mri-distances"]], "Examples using mne.dig_mri_distances": [[502, "examples-using-mne-dig-mri-distances"]], "mne.dipole.get_phantom_dipoles": [[503, "mne-dipole-get-phantom-dipoles"]], "Examples using mne.dipole.get_phantom_dipoles": [[503, "examples-using-mne-dipole-get-phantom-dipoles"]], "mne.epochs.average_movements": [[504, "mne-epochs-average-movements"]], "Examples using mne.epochs.average_movements": [[504, "examples-using-mne-epochs-average-movements"]], "mne.epochs.combine_event_ids": [[505, "mne-epochs-combine-event-ids"]], "mne.epochs.equalize_epoch_counts": [[506, "mne-epochs-equalize-epoch-counts"]], "Examples using mne.epochs.equalize_epoch_counts": [[506, "examples-using-mne-epochs-equalize-epoch-counts"]], "mne.epochs.make_metadata": [[507, "mne-epochs-make-metadata"]], "Examples using mne.epochs.make_metadata": [[507, "examples-using-mne-epochs-make-metadata"]], "mne.equalize_channels": [[508, "mne-equalize-channels"]], "mne.event.define_target_events": [[509, "mne-event-define-target-events"]], "Examples using mne.event.define_target_events": [[509, "examples-using-mne-event-define-target-events"]], "mne.event.match_event_names": [[510, "mne-event-match-event-names"]], "mne.event.shift_time_events": [[511, "mne-event-shift-time-events"]], "mne.events_from_annotations": [[512, "mne-events-from-annotations"]], "Examples using mne.events_from_annotations": [[512, "examples-using-mne-events-from-annotations"]], "mne.export.export_epochs": [[513, "mne-export-export-epochs"]], "mne.export.export_evokeds": [[514, "mne-export-export-evokeds"]], "mne.export.export_evokeds_mff": [[515, "mne-export-export-evokeds-mff"]], "mne.export.export_raw": [[516, "mne-export-export-raw"]], "mne.extract_label_time_course": [[517, "mne-extract-label-time-course"]], "Examples using mne.extract_label_time_course": [[517, "examples-using-mne-extract-label-time-course"]], "mne.filter.construct_iir_filter": [[518, "mne-filter-construct-iir-filter"]], "Examples using mne.filter.construct_iir_filter": [[518, "examples-using-mne-filter-construct-iir-filter"]], "mne.filter.create_filter": [[519, "mne-filter-create-filter"]], "Examples using mne.filter.create_filter": [[519, "examples-using-mne-filter-create-filter"]], "mne.filter.estimate_ringing_samples": [[520, "mne-filter-estimate-ringing-samples"]], "mne.filter.filter_data": [[521, "mne-filter-filter-data"]], "mne.filter.notch_filter": [[522, "mne-filter-notch-filter"]], "mne.filter.resample": [[523, "mne-filter-resample"]], "Examples using mne.filter.resample": [[523, "examples-using-mne-filter-resample"]], "mne.find_events": [[524, "mne-find-events"]], "Examples using mne.find_events": [[524, "examples-using-mne-find-events"]], "mne.find_stim_steps": [[525, "mne-find-stim-steps"]], "mne.fit_dipole": [[526, "mne-fit-dipole"]], "Examples using mne.fit_dipole": [[526, "examples-using-mne-fit-dipole"]], "mne.forward.compute_depth_prior": [[527, "mne-forward-compute-depth-prior"]], "mne.forward.compute_orient_prior": [[528, "mne-forward-compute-orient-prior"]], "mne.forward.restrict_forward_to_label": [[529, "mne-forward-restrict-forward-to-label"]], "mne.forward.restrict_forward_to_stc": [[530, "mne-forward-restrict-forward-to-stc"]], "mne.get_config": [[531, "mne-get-config"]], "Examples using mne.get_config": [[531, "examples-using-mne-get-config"]], "mne.get_config_path": [[532, "mne-get-config-path"]], "Examples using mne.get_config_path": [[532, "examples-using-mne-get-config-path"]], "mne.get_head_surf": [[533, "mne-get-head-surf"]], "mne.get_meg_helmet_surf": [[534, "mne-get-meg-helmet-surf"]], "mne.get_montage_volume_labels": [[535, "mne-get-montage-volume-labels"]], "Examples using mne.get_montage_volume_labels": [[535, "examples-using-mne-get-montage-volume-labels"]], "mne.get_volume_labels_from_aseg": [[536, "mne-get-volume-labels-from-aseg"]], "Examples using mne.get_volume_labels_from_aseg": [[536, "examples-using-mne-get-volume-labels-from-aseg"]], "mne.get_volume_labels_from_src": [[537, "mne-get-volume-labels-from-src"]], "mne.grade_to_tris": [[538, "mne-grade-to-tris"]], "mne.grade_to_vertices": [[539, "mne-grade-to-vertices"]], "mne.grand_average": [[540, "mne-grand-average"]], "Examples using mne.grand_average": [[540, "examples-using-mne-grand-average"]], "mne.grow_labels": [[541, "mne-grow-labels"]], "mne.gui.coregistration": [[542, "mne-gui-coregistration"]], "Examples using mne.gui.coregistration": [[542, "examples-using-mne-gui-coregistration"]], "mne.head_to_mni": [[543, "mne-head-to-mni"]], "mne.head_to_mri": [[544, "mne-head-to-mri"]], "mne.inverse_sparse.gamma_map": [[545, "mne-inverse-sparse-gamma-map"]], "Examples using mne.inverse_sparse.gamma_map": [[545, "examples-using-mne-inverse-sparse-gamma-map"]], "mne.inverse_sparse.make_stc_from_dipoles": [[546, "mne-inverse-sparse-make-stc-from-dipoles"]], "Examples using mne.inverse_sparse.make_stc_from_dipoles": [[546, "examples-using-mne-inverse-sparse-make-stc-from-dipoles"]], "mne.inverse_sparse.mixed_norm": [[547, "mne-inverse-sparse-mixed-norm"]], "Examples using mne.inverse_sparse.mixed_norm": [[547, "examples-using-mne-inverse-sparse-mixed-norm"]], "mne.inverse_sparse.tf_mixed_norm": [[548, "mne-inverse-sparse-tf-mixed-norm"]], "Examples using mne.inverse_sparse.tf_mixed_norm": [[548, "examples-using-mne-inverse-sparse-tf-mixed-norm"]], "mne.io.BaseRaw": [[549, "mne-io-baseraw"]], "mne.io.Raw": [[550, "mne-io-raw"]], "Examples using mne.io.Raw": [[550, "examples-using-mne-io-raw"]], "mne.io.RawArray": [[551, "mne-io-rawarray"]], "Examples using mne.io.RawArray": [[551, "examples-using-mne-io-rawarray"]], "mne.io.anonymize_info": [[552, "mne-io-anonymize-info"]], "mne.io.get_channel_type_constants": [[553, "mne-io-get-channel-type-constants"]], "mne.io.kit.read_mrk": [[554, "mne-io-kit-read-mrk"]], "mne.io.read_fiducials": [[555, "mne-io-read-fiducials"]], "mne.io.read_info": [[556, "mne-io-read-info"]], "Examples using mne.io.read_info": [[556, "examples-using-mne-io-read-info"]], "mne.io.read_raw": [[557, "mne-io-read-raw"]], "Examples using mne.io.read_raw": [[557, "examples-using-mne-io-read-raw"]], "mne.io.read_raw_artemis123": [[558, "mne-io-read-raw-artemis123"]], "Examples using mne.io.read_raw_artemis123": [[558, "examples-using-mne-io-read-raw-artemis123"]], "mne.io.read_raw_bdf": [[559, "mne-io-read-raw-bdf"]], "Examples using mne.io.read_raw_bdf": [[559, "examples-using-mne-io-read-raw-bdf"]], "mne.io.read_raw_boxy": [[560, "mne-io-read-raw-boxy"]], "mne.io.read_raw_brainvision": [[561, "mne-io-read-raw-brainvision"]], "Examples using mne.io.read_raw_brainvision": [[561, "examples-using-mne-io-read-raw-brainvision"]], "mne.io.read_raw_bti": [[562, "mne-io-read-raw-bti"]], "Examples using mne.io.read_raw_bti": [[562, "examples-using-mne-io-read-raw-bti"]], "mne.io.read_raw_cnt": [[563, "mne-io-read-raw-cnt"]], "Examples using mne.io.read_raw_cnt": [[563, "examples-using-mne-io-read-raw-cnt"]], "mne.io.read_raw_ctf": [[564, "mne-io-read-raw-ctf"]], "Examples using mne.io.read_raw_ctf": [[564, "examples-using-mne-io-read-raw-ctf"]], "mne.io.read_raw_curry": [[565, "mne-io-read-raw-curry"]], "mne.io.read_raw_edf": [[566, "mne-io-read-raw-edf"]], "Examples using mne.io.read_raw_edf": [[566, "examples-using-mne-io-read-raw-edf"]], "mne.io.read_raw_eeglab": [[567, "mne-io-read-raw-eeglab"]], "Examples using mne.io.read_raw_eeglab": [[567, "examples-using-mne-io-read-raw-eeglab"]], "mne.io.read_raw_egi": [[568, "mne-io-read-raw-egi"]], "Examples using mne.io.read_raw_egi": [[568, "examples-using-mne-io-read-raw-egi"]], "mne.io.read_raw_eximia": [[569, "mne-io-read-raw-eximia"]], "Examples using mne.io.read_raw_eximia": [[569, "examples-using-mne-io-read-raw-eximia"]], "mne.io.read_raw_eyelink": [[570, "mne-io-read-raw-eyelink"]], "Examples using mne.io.read_raw_eyelink": [[570, "examples-using-mne-io-read-raw-eyelink"]], "mne.io.read_raw_fieldtrip": [[571, "mne-io-read-raw-fieldtrip"]], "mne.io.read_raw_fif": [[572, "mne-io-read-raw-fif"]], "Examples using mne.io.read_raw_fif": [[572, "examples-using-mne-io-read-raw-fif"]], "mne.io.read_raw_fil": [[573, "mne-io-read-raw-fil"]], "Examples using mne.io.read_raw_fil": [[573, "examples-using-mne-io-read-raw-fil"]], "mne.io.read_raw_gdf": [[574, "mne-io-read-raw-gdf"]], "Examples using mne.io.read_raw_gdf": [[574, "examples-using-mne-io-read-raw-gdf"]], "mne.io.read_raw_hitachi": [[575, "mne-io-read-raw-hitachi"]], "mne.io.read_raw_kit": [[576, "mne-io-read-raw-kit"]], "Examples using mne.io.read_raw_kit": [[576, "examples-using-mne-io-read-raw-kit"]], "mne.io.read_raw_nedf": [[577, "mne-io-read-raw-nedf"]], "mne.io.read_raw_nicolet": [[578, "mne-io-read-raw-nicolet"]], "Examples using mne.io.read_raw_nicolet": [[578, "examples-using-mne-io-read-raw-nicolet"]], "mne.io.read_raw_nihon": [[579, "mne-io-read-raw-nihon"]], "Examples using mne.io.read_raw_nihon": [[579, "examples-using-mne-io-read-raw-nihon"]], "mne.io.read_raw_nirx": [[580, "mne-io-read-raw-nirx"]], "Examples using mne.io.read_raw_nirx": [[580, "examples-using-mne-io-read-raw-nirx"]], "mne.io.read_raw_nsx": [[581, "mne-io-read-raw-nsx"]], "mne.io.read_raw_persyst": [[582, "mne-io-read-raw-persyst"]], "Examples using mne.io.read_raw_persyst": [[582, "examples-using-mne-io-read-raw-persyst"]], "mne.io.read_raw_snirf": [[583, "mne-io-read-raw-snirf"]], "Examples using mne.io.read_raw_snirf": [[583, "examples-using-mne-io-read-raw-snirf"]], "mne.io.show_fiff": [[584, "mne-io-show-fiff"]], "mne.io.write_fiducials": [[585, "mne-io-write-fiducials"]], "mne.io.write_info": [[586, "mne-io-write-info"]], "mne.label.select_sources": [[587, "mne-label-select-sources"]], "Examples using mne.label.select_sources": [[587, "examples-using-mne-label-select-sources"]], "mne.label_sign_flip": [[588, "mne-label-sign-flip"]], "Examples using mne.label_sign_flip": [[588, "examples-using-mne-label-sign-flip"]], "mne.labels_to_stc": [[589, "mne-labels-to-stc"]], "Examples using mne.labels_to_stc": [[589, "examples-using-mne-labels-to-stc"]], "mne.make_ad_hoc_cov": [[590, "mne-make-ad-hoc-cov"]], "Examples using mne.make_ad_hoc_cov": [[590, "examples-using-mne-make-ad-hoc-cov"]], "mne.make_bem_model": [[591, "mne-make-bem-model"]], "Examples using mne.make_bem_model": [[591, "examples-using-mne-make-bem-model"]], "mne.make_bem_solution": [[592, "mne-make-bem-solution"]], "Examples using mne.make_bem_solution": [[592, "examples-using-mne-make-bem-solution"]], "mne.make_field_map": [[593, "mne-make-field-map"]], "Examples using mne.make_field_map": [[593, "examples-using-mne-make-field-map"]], "mne.make_fixed_length_epochs": [[594, "mne-make-fixed-length-epochs"]], "Examples using mne.make_fixed_length_epochs": [[594, "examples-using-mne-make-fixed-length-epochs"]], "mne.make_fixed_length_events": [[595, "mne-make-fixed-length-events"]], "Examples using mne.make_fixed_length_events": [[595, "examples-using-mne-make-fixed-length-events"]], "mne.make_forward_dipole": [[596, "mne-make-forward-dipole"]], "Examples using mne.make_forward_dipole": [[596, "examples-using-mne-make-forward-dipole"]], "mne.make_forward_solution": [[597, "mne-make-forward-solution"]], "Examples using mne.make_forward_solution": [[597, "examples-using-mne-make-forward-solution"]], "mne.make_sphere_model": [[598, "mne-make-sphere-model"]], "Examples using mne.make_sphere_model": [[598, "examples-using-mne-make-sphere-model"]], "mne.match_channel_orders": [[599, "mne-match-channel-orders"]], "mne.merge_events": [[600, "mne-merge-events"]], "Examples using mne.merge_events": [[600, "examples-using-mne-merge-events"]], "mne.minimum_norm.InverseOperator": [[601, "mne-minimum-norm-inverseoperator"]], "Examples using mne.minimum_norm.InverseOperator": [[601, "examples-using-mne-minimum-norm-inverseoperator"]], "mne.minimum_norm.apply_inverse": [[602, "mne-minimum-norm-apply-inverse"]], "Examples using mne.minimum_norm.apply_inverse": [[602, "examples-using-mne-minimum-norm-apply-inverse"]], "mne.minimum_norm.apply_inverse_cov": [[603, "mne-minimum-norm-apply-inverse-cov"]], "Examples using mne.minimum_norm.apply_inverse_cov": [[603, "examples-using-mne-minimum-norm-apply-inverse-cov"]], "mne.minimum_norm.apply_inverse_epochs": [[604, "mne-minimum-norm-apply-inverse-epochs"]], "Examples using mne.minimum_norm.apply_inverse_epochs": [[604, "examples-using-mne-minimum-norm-apply-inverse-epochs"]], "mne.minimum_norm.apply_inverse_raw": [[605, "mne-minimum-norm-apply-inverse-raw"]], "Examples using mne.minimum_norm.apply_inverse_raw": [[605, "examples-using-mne-minimum-norm-apply-inverse-raw"]], "mne.minimum_norm.apply_inverse_tfr_epochs": [[606, "mne-minimum-norm-apply-inverse-tfr-epochs"]], "mne.minimum_norm.compute_rank_inverse": [[607, "mne-minimum-norm-compute-rank-inverse"]], "mne.minimum_norm.compute_source_psd": [[608, "mne-minimum-norm-compute-source-psd"]], "Examples using mne.minimum_norm.compute_source_psd": [[608, "examples-using-mne-minimum-norm-compute-source-psd"]], "mne.minimum_norm.compute_source_psd_epochs": [[609, "mne-minimum-norm-compute-source-psd-epochs"]], "Examples using mne.minimum_norm.compute_source_psd_epochs": [[609, "examples-using-mne-minimum-norm-compute-source-psd-epochs"]], "mne.minimum_norm.estimate_snr": [[610, "mne-minimum-norm-estimate-snr"]], "mne.minimum_norm.get_cross_talk": [[611, "mne-minimum-norm-get-cross-talk"]], "Examples using mne.minimum_norm.get_cross_talk": [[611, "examples-using-mne-minimum-norm-get-cross-talk"]], "mne.minimum_norm.get_point_spread": [[612, "mne-minimum-norm-get-point-spread"]], "Examples using mne.minimum_norm.get_point_spread": [[612, "examples-using-mne-minimum-norm-get-point-spread"]], "mne.minimum_norm.make_inverse_operator": [[613, "mne-minimum-norm-make-inverse-operator"]], "Examples using mne.minimum_norm.make_inverse_operator": [[613, "examples-using-mne-minimum-norm-make-inverse-operator"]], "mne.minimum_norm.make_inverse_resolution_matrix": [[614, "mne-minimum-norm-make-inverse-resolution-matrix"]], "Examples using mne.minimum_norm.make_inverse_resolution_matrix": [[614, "examples-using-mne-minimum-norm-make-inverse-resolution-matrix"]], "mne.minimum_norm.prepare_inverse_operator": [[615, "mne-minimum-norm-prepare-inverse-operator"]], "mne.minimum_norm.read_inverse_operator": [[616, "mne-minimum-norm-read-inverse-operator"]], "Examples using mne.minimum_norm.read_inverse_operator": [[616, "examples-using-mne-minimum-norm-read-inverse-operator"]], "mne.minimum_norm.resolution_metrics": [[617, "mne-minimum-norm-resolution-metrics"]], "Examples using mne.minimum_norm.resolution_metrics": [[617, "examples-using-mne-minimum-norm-resolution-metrics"]], "mne.minimum_norm.source_band_induced_power": [[618, "mne-minimum-norm-source-band-induced-power"]], "Examples using mne.minimum_norm.source_band_induced_power": [[618, "examples-using-mne-minimum-norm-source-band-induced-power"]], "mne.minimum_norm.source_induced_power": [[619, "mne-minimum-norm-source-induced-power"]], "Examples using mne.minimum_norm.source_induced_power": [[619, "examples-using-mne-minimum-norm-source-induced-power"]], "mne.minimum_norm.write_inverse_operator": [[620, "mne-minimum-norm-write-inverse-operator"]], "mne.morph_labels": [[621, "mne-morph-labels"]], "mne.morph_source_spaces": [[622, "mne-morph-source-spaces"]], "Examples using mne.morph_source_spaces": [[622, "examples-using-mne-morph-source-spaces"]], "mne.open_docs": [[623, "mne-open-docs"]], "mne.open_report": [[624, "mne-open-report"]], "Examples using mne.open_report": [[624, "examples-using-mne-open-report"]], "mne.parse_config": [[625, "mne-parse-config"]], "mne.pick_channels": [[626, "mne-pick-channels"]], "Examples using mne.pick_channels": [[626, "examples-using-mne-pick-channels"]], "mne.pick_channels_cov": [[627, "mne-pick-channels-cov"]], "mne.pick_channels_forward": [[628, "mne-pick-channels-forward"]], "mne.pick_channels_regexp": [[629, "mne-pick-channels-regexp"]], "Examples using mne.pick_channels_regexp": [[629, "examples-using-mne-pick-channels-regexp"]], "mne.pick_events": [[630, "mne-pick-events"]], "Examples using mne.pick_events": [[630, "examples-using-mne-pick-events"]], "mne.pick_info": [[631, "mne-pick-info"]], "Examples using mne.pick_info": [[631, "examples-using-mne-pick-info"]], "mne.pick_types": [[632, "mne-pick-types"]], "Examples using mne.pick_types": [[632, "examples-using-mne-pick-types"]], "mne.pick_types_forward": [[633, "mne-pick-types-forward"]], "Examples using mne.pick_types_forward": [[633, "examples-using-mne-pick-types-forward"]], "mne.preprocessing.EOGRegression": [[634, "mne-preprocessing-eogregression"]], "Examples using mne.preprocessing.EOGRegression": [[634, "examples-using-mne-preprocessing-eogregression"]], "mne.preprocessing.ICA": [[635, "mne-preprocessing-ica"]], "Examples using mne.preprocessing.ICA": [[635, "examples-using-mne-preprocessing-ica"]], "mne.preprocessing.Xdawn": [[636, "mne-preprocessing-xdawn"]], "Examples using mne.preprocessing.Xdawn": [[636, "examples-using-mne-preprocessing-xdawn"]], "mne.preprocessing.annotate_amplitude": [[637, "mne-preprocessing-annotate-amplitude"]], "mne.preprocessing.annotate_break": [[638, "mne-preprocessing-annotate-break"]], "Examples using mne.preprocessing.annotate_break": [[638, "examples-using-mne-preprocessing-annotate-break"]], "mne.preprocessing.annotate_movement": [[639, "mne-preprocessing-annotate-movement"]], "Examples using mne.preprocessing.annotate_movement": [[639, "examples-using-mne-preprocessing-annotate-movement"]], "mne.preprocessing.annotate_muscle_zscore": [[640, "mne-preprocessing-annotate-muscle-zscore"]], "Examples using mne.preprocessing.annotate_muscle_zscore": [[640, "examples-using-mne-preprocessing-annotate-muscle-zscore"]], "mne.preprocessing.annotate_nan": [[641, "mne-preprocessing-annotate-nan"]], "mne.preprocessing.compute_average_dev_head_t": [[642, "mne-preprocessing-compute-average-dev-head-t"]], "Examples using mne.preprocessing.compute_average_dev_head_t": [[642, "examples-using-mne-preprocessing-compute-average-dev-head-t"]], "mne.preprocessing.compute_bridged_electrodes": [[643, "mne-preprocessing-compute-bridged-electrodes"]], "Examples using mne.preprocessing.compute_bridged_electrodes": [[643, "examples-using-mne-preprocessing-compute-bridged-electrodes"]], "mne.preprocessing.compute_current_source_density": [[644, "mne-preprocessing-compute-current-source-density"]], "Examples using mne.preprocessing.compute_current_source_density": [[644, "examples-using-mne-preprocessing-compute-current-source-density"]], "mne.preprocessing.compute_fine_calibration": [[645, "mne-preprocessing-compute-fine-calibration"]], "mne.preprocessing.compute_maxwell_basis": [[646, "mne-preprocessing-compute-maxwell-basis"]], "mne.preprocessing.compute_proj_ecg": [[647, "mne-preprocessing-compute-proj-ecg"]], "Examples using mne.preprocessing.compute_proj_ecg": [[647, "examples-using-mne-preprocessing-compute-proj-ecg"]], "mne.preprocessing.compute_proj_eog": [[648, "mne-preprocessing-compute-proj-eog"]], "Examples using mne.preprocessing.compute_proj_eog": [[648, "examples-using-mne-preprocessing-compute-proj-eog"]], "mne.preprocessing.compute_proj_hfc": [[649, "mne-preprocessing-compute-proj-hfc"]], "Examples using mne.preprocessing.compute_proj_hfc": [[649, "examples-using-mne-preprocessing-compute-proj-hfc"]], "mne.preprocessing.corrmap": [[650, "mne-preprocessing-corrmap"]], "Examples using mne.preprocessing.corrmap": [[650, "examples-using-mne-preprocessing-corrmap"]], "mne.preprocessing.cortical_signal_suppression": [[651, "mne-preprocessing-cortical-signal-suppression"]], "Examples using mne.preprocessing.cortical_signal_suppression": [[651, "examples-using-mne-preprocessing-cortical-signal-suppression"]], "mne.preprocessing.create_ecg_epochs": [[652, "mne-preprocessing-create-ecg-epochs"]], "Examples using mne.preprocessing.create_ecg_epochs": [[652, "examples-using-mne-preprocessing-create-ecg-epochs"]], "mne.preprocessing.create_eog_epochs": [[653, "mne-preprocessing-create-eog-epochs"]], "Examples using mne.preprocessing.create_eog_epochs": [[653, "examples-using-mne-preprocessing-create-eog-epochs"]], "mne.preprocessing.equalize_bads": [[654, "mne-preprocessing-equalize-bads"]], "mne.preprocessing.eyetracking.Calibration": [[655, "mne-preprocessing-eyetracking-calibration"]], "Examples using mne.preprocessing.eyetracking.Calibration": [[655, "examples-using-mne-preprocessing-eyetracking-calibration"]], "mne.preprocessing.eyetracking.interpolate_blinks": [[656, "mne-preprocessing-eyetracking-interpolate-blinks"]], "Examples using mne.preprocessing.eyetracking.interpolate_blinks": [[656, "examples-using-mne-preprocessing-eyetracking-interpolate-blinks"]], "mne.preprocessing.eyetracking.read_eyelink_calibration": [[657, "mne-preprocessing-eyetracking-read-eyelink-calibration"]], "Examples using mne.preprocessing.eyetracking.read_eyelink_calibration": [[657, "examples-using-mne-preprocessing-eyetracking-read-eyelink-calibration"]], "mne.preprocessing.eyetracking.set_channel_types_eyetrack": [[658, "mne-preprocessing-eyetracking-set-channel-types-eyetrack"]], "Examples using mne.preprocessing.eyetracking.set_channel_types_eyetrack": [[658, "examples-using-mne-preprocessing-eyetracking-set-channel-types-eyetrack"]], "mne.preprocessing.find_bad_channels_maxwell": [[659, "mne-preprocessing-find-bad-channels-maxwell"]], "Examples using mne.preprocessing.find_bad_channels_maxwell": [[659, "examples-using-mne-preprocessing-find-bad-channels-maxwell"]], "mne.preprocessing.find_ecg_events": [[660, "mne-preprocessing-find-ecg-events"]], "Examples using mne.preprocessing.find_ecg_events": [[660, "examples-using-mne-preprocessing-find-ecg-events"]], "mne.preprocessing.find_eog_events": [[661, "mne-preprocessing-find-eog-events"]], "Examples using mne.preprocessing.find_eog_events": [[661, "examples-using-mne-preprocessing-find-eog-events"]], "mne.preprocessing.fix_stim_artifact": [[662, "mne-preprocessing-fix-stim-artifact"]], "Examples using mne.preprocessing.fix_stim_artifact": [[662, "examples-using-mne-preprocessing-fix-stim-artifact"]], "mne.preprocessing.ica_find_ecg_events": [[663, "mne-preprocessing-ica-find-ecg-events"]], "mne.preprocessing.ica_find_eog_events": [[664, "mne-preprocessing-ica-find-eog-events"]], "mne.preprocessing.ieeg.make_montage_volume": [[665, "mne-preprocessing-ieeg-make-montage-volume"]], "mne.preprocessing.ieeg.project_sensors_onto_brain": [[666, "mne-preprocessing-ieeg-project-sensors-onto-brain"]], "mne.preprocessing.ieeg.warp_montage": [[667, "mne-preprocessing-ieeg-warp-montage"]], "mne.preprocessing.infomax": [[668, "mne-preprocessing-infomax"]], "mne.preprocessing.interpolate_bridged_electrodes": [[669, "mne-preprocessing-interpolate-bridged-electrodes"]], "Examples using mne.preprocessing.interpolate_bridged_electrodes": [[669, "examples-using-mne-preprocessing-interpolate-bridged-electrodes"]], "mne.preprocessing.maxwell_filter": [[670, "mne-preprocessing-maxwell-filter"]], "Examples using mne.preprocessing.maxwell_filter": [[670, "examples-using-mne-preprocessing-maxwell-filter"]], "mne.preprocessing.maxwell_filter_prepare_emptyroom": [[671, "mne-preprocessing-maxwell-filter-prepare-emptyroom"]], "mne.preprocessing.nirs.beer_lambert_law": [[672, "mne-preprocessing-nirs-beer-lambert-law"]], "Examples using mne.preprocessing.nirs.beer_lambert_law": [[672, "examples-using-mne-preprocessing-nirs-beer-lambert-law"]], "mne.preprocessing.nirs.optical_density": [[673, "mne-preprocessing-nirs-optical-density"]], "Examples using mne.preprocessing.nirs.optical_density": [[673, "examples-using-mne-preprocessing-nirs-optical-density"]], "mne.preprocessing.nirs.scalp_coupling_index": [[674, "mne-preprocessing-nirs-scalp-coupling-index"]], "Examples using mne.preprocessing.nirs.scalp_coupling_index": [[674, "examples-using-mne-preprocessing-nirs-scalp-coupling-index"]], "mne.preprocessing.nirs.short_channels": [[675, "mne-preprocessing-nirs-short-channels"]], "mne.preprocessing.nirs.source_detector_distances": [[676, "mne-preprocessing-nirs-source-detector-distances"]], "Examples using mne.preprocessing.nirs.source_detector_distances": [[676, "examples-using-mne-preprocessing-nirs-source-detector-distances"]], "mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[677, "mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "Examples using mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[677, "examples-using-mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "mne.preprocessing.oversampled_temporal_projection": [[678, "mne-preprocessing-oversampled-temporal-projection"]], "Examples using mne.preprocessing.oversampled_temporal_projection": [[678, "examples-using-mne-preprocessing-oversampled-temporal-projection"]], "mne.preprocessing.peak_finder": [[679, "mne-preprocessing-peak-finder"]], "mne.preprocessing.read_eog_regression": [[680, "mne-preprocessing-read-eog-regression"]], "mne.preprocessing.read_fine_calibration": [[681, "mne-preprocessing-read-fine-calibration"]], "mne.preprocessing.read_ica": [[682, "mne-preprocessing-read-ica"]], "Examples using mne.preprocessing.read_ica": [[682, "examples-using-mne-preprocessing-read-ica"]], "mne.preprocessing.read_ica_eeglab": [[683, "mne-preprocessing-read-ica-eeglab"]], "mne.preprocessing.realign_raw": [[684, "mne-preprocessing-realign-raw"]], "Examples using mne.preprocessing.realign_raw": [[684, "examples-using-mne-preprocessing-realign-raw"]], "mne.preprocessing.regress_artifact": [[685, "mne-preprocessing-regress-artifact"]], "mne.preprocessing.write_fine_calibration": [[686, "mne-preprocessing-write-fine-calibration"]], "mne.random_parcellation": [[687, "mne-random-parcellation"]], "mne.read_annotations": [[688, "mne-read-annotations"]], "Examples using mne.read_annotations": [[688, "examples-using-mne-read-annotations"]], "mne.read_bem_solution": [[689, "mne-read-bem-solution"]], "Examples using mne.read_bem_solution": [[689, "examples-using-mne-read-bem-solution"]], "mne.read_bem_surfaces": [[690, "mne-read-bem-surfaces"]], "Examples using mne.read_bem_surfaces": [[690, "examples-using-mne-read-bem-surfaces"]], "mne.read_cov": [[691, "mne-read-cov"]], "Examples using mne.read_cov": [[691, "examples-using-mne-read-cov"]], "mne.read_dipole": [[692, "mne-read-dipole"]], "Examples using mne.read_dipole": [[692, "examples-using-mne-read-dipole"]], "mne.read_epochs": [[693, "mne-read-epochs"]], "Examples using mne.read_epochs": [[693, "examples-using-mne-read-epochs"]], "mne.read_epochs_eeglab": [[694, "mne-read-epochs-eeglab"]], "Examples using mne.read_epochs_eeglab": [[694, "examples-using-mne-read-epochs-eeglab"]], "mne.read_epochs_fieldtrip": [[695, "mne-read-epochs-fieldtrip"]], "mne.read_epochs_kit": [[696, "mne-read-epochs-kit"]], "mne.read_events": [[697, "mne-read-events"]], "Examples using mne.read_events": [[697, "examples-using-mne-read-events"]], "mne.read_evoked_besa": [[698, "mne-read-evoked-besa"]], "mne.read_evoked_fieldtrip": [[699, "mne-read-evoked-fieldtrip"]], "mne.read_evokeds": [[700, "mne-read-evokeds"]], "Examples using mne.read_evokeds": [[700, "examples-using-mne-read-evokeds"]], "mne.read_evokeds_mff": [[701, "mne-read-evokeds-mff"]], "mne.read_forward_solution": [[702, "mne-read-forward-solution"]], "Examples using mne.read_forward_solution": [[702, "examples-using-mne-read-forward-solution"]], "mne.read_freesurfer_lut": [[703, "mne-read-freesurfer-lut"]], "mne.read_label": [[704, "mne-read-label"]], "Examples using mne.read_label": [[704, "examples-using-mne-read-label"]], "mne.read_labels_from_annot": [[705, "mne-read-labels-from-annot"]], "Examples using mne.read_labels_from_annot": [[705, "examples-using-mne-read-labels-from-annot"]], "mne.read_lta": [[706, "mne-read-lta"]], "mne.read_morph_map": [[707, "mne-read-morph-map"]], "mne.read_proj": [[708, "mne-read-proj"]], "Examples using mne.read_proj": [[708, "examples-using-mne-read-proj"]], "mne.read_reject_parameters": [[709, "mne-read-reject-parameters"]], "mne.read_source_estimate": [[710, "mne-read-source-estimate"]], "Examples using mne.read_source_estimate": [[710, "examples-using-mne-read-source-estimate"]], "mne.read_source_morph": [[711, "mne-read-source-morph"]], "mne.read_source_spaces": [[712, "mne-read-source-spaces"]], "Examples using mne.read_source_spaces": [[712, "examples-using-mne-read-source-spaces"]], "mne.read_surface": [[713, "mne-read-surface"]], "Examples using mne.read_surface": [[713, "examples-using-mne-read-surface"]], "mne.read_talxfm": [[714, "mne-read-talxfm"]], "Examples using mne.read_talxfm": [[714, "examples-using-mne-read-talxfm"]], "mne.read_trans": [[715, "mne-read-trans"]], "Examples using mne.read_trans": [[715, "examples-using-mne-read-trans"]], "mne.read_tri": [[716, "mne-read-tri"]], "mne.read_vectorview_selection": [[717, "mne-read-vectorview-selection"]], "Examples using mne.read_vectorview_selection": [[717, "examples-using-mne-read-vectorview-selection"]], "mne.rename_channels": [[718, "mne-rename-channels"]], "mne.scale_bem": [[719, "mne-scale-bem"]], "mne.scale_labels": [[720, "mne-scale-labels"]], "mne.scale_mri": [[721, "mne-scale-mri"]], "Examples using mne.scale_mri": [[721, "examples-using-mne-scale-mri"]], "mne.scale_source_space": [[722, "mne-scale-source-space"]], "mne.sensitivity_map": [[723, "mne-sensitivity-map"]], "Examples using mne.sensitivity_map": [[723, "examples-using-mne-sensitivity-map"]], "mne.set_bipolar_reference": [[724, "mne-set-bipolar-reference"]], "Examples using mne.set_bipolar_reference": [[724, "examples-using-mne-set-bipolar-reference"]], "mne.set_cache_dir": [[725, "mne-set-cache-dir"]], "mne.set_config": [[726, "mne-set-config"]], "Examples using mne.set_config": [[726, "examples-using-mne-set-config"]], "mne.set_eeg_reference": [[727, "mne-set-eeg-reference"]], "Examples using mne.set_eeg_reference": [[727, "examples-using-mne-set-eeg-reference"]], "mne.set_log_file": [[728, "mne-set-log-file"]], "mne.set_log_level": [[729, "mne-set-log-level"]], "mne.set_memmap_min_size": [[730, "mne-set-memmap-min-size"]], "mne.setup_source_space": [[731, "mne-setup-source-space"]], "Examples using mne.setup_source_space": [[731, "examples-using-mne-setup-source-space"]], "mne.setup_volume_source_space": [[732, "mne-setup-volume-source-space"]], "Examples using mne.setup_volume_source_space": [[732, "examples-using-mne-setup-volume-source-space"]], "mne.simulation.SourceSimulator": [[733, "mne-simulation-sourcesimulator"]], "Examples using mne.simulation.SourceSimulator": [[733, "examples-using-mne-simulation-sourcesimulator"]], "mne.simulation.add_chpi": [[734, "mne-simulation-add-chpi"]], "mne.simulation.add_ecg": [[735, "mne-simulation-add-ecg"]], "Examples using mne.simulation.add_ecg": [[735, "examples-using-mne-simulation-add-ecg"]], "mne.simulation.add_eog": [[736, "mne-simulation-add-eog"]], "Examples using mne.simulation.add_eog": [[736, "examples-using-mne-simulation-add-eog"]], "mne.simulation.add_noise": [[737, "mne-simulation-add-noise"]], "Examples using mne.simulation.add_noise": [[737, "examples-using-mne-simulation-add-noise"]], "mne.simulation.metrics.cosine_score": [[738, "mne-simulation-metrics-cosine-score"]], "Examples using mne.simulation.metrics.cosine_score": [[738, "examples-using-mne-simulation-metrics-cosine-score"]], "mne.simulation.metrics.f1_score": [[739, "mne-simulation-metrics-f1-score"]], "Examples using mne.simulation.metrics.f1_score": [[739, "examples-using-mne-simulation-metrics-f1-score"]], "mne.simulation.metrics.peak_position_error": [[740, "mne-simulation-metrics-peak-position-error"]], "Examples using mne.simulation.metrics.peak_position_error": [[740, "examples-using-mne-simulation-metrics-peak-position-error"]], "mne.simulation.metrics.precision_score": [[741, "mne-simulation-metrics-precision-score"]], "Examples using mne.simulation.metrics.precision_score": [[741, "examples-using-mne-simulation-metrics-precision-score"]], "mne.simulation.metrics.recall_score": [[742, "mne-simulation-metrics-recall-score"]], "Examples using mne.simulation.metrics.recall_score": [[742, "examples-using-mne-simulation-metrics-recall-score"]], "mne.simulation.metrics.region_localization_error": [[743, "mne-simulation-metrics-region-localization-error"]], "Examples using mne.simulation.metrics.region_localization_error": [[743, "examples-using-mne-simulation-metrics-region-localization-error"]], "mne.simulation.metrics.roc_auc_score": [[744, "mne-simulation-metrics-roc-auc-score"]], "mne.simulation.metrics.spatial_deviation_error": [[745, "mne-simulation-metrics-spatial-deviation-error"]], "Examples using mne.simulation.metrics.spatial_deviation_error": [[745, "examples-using-mne-simulation-metrics-spatial-deviation-error"]], "mne.simulation.select_source_in_label": [[746, "mne-simulation-select-source-in-label"]], "mne.simulation.simulate_evoked": [[747, "mne-simulation-simulate-evoked"]], "Examples using mne.simulation.simulate_evoked": [[747, "examples-using-mne-simulation-simulate-evoked"]], "mne.simulation.simulate_raw": [[748, "mne-simulation-simulate-raw"]], "Data alignment and stim channel encoding": [[748, "id5"]], "Examples using mne.simulation.simulate_raw": [[748, "examples-using-mne-simulation-simulate-raw"]], "mne.simulation.simulate_sparse_stc": [[749, "mne-simulation-simulate-sparse-stc"]], "Examples using mne.simulation.simulate_sparse_stc": [[749, "examples-using-mne-simulation-simulate-sparse-stc"]], "mne.simulation.simulate_stc": [[750, "mne-simulation-simulate-stc"]], "Examples using mne.simulation.simulate_stc": [[750, "examples-using-mne-simulation-simulate-stc"]], "mne.source_space.compute_distance_to_sensors": [[751, "mne-source-space-compute-distance-to-sensors"]], "Examples using mne.source_space.compute_distance_to_sensors": [[751, "examples-using-mne-source-space-compute-distance-to-sensors"]], "mne.source_space.get_decimated_surfaces": [[752, "mne-source-space-get-decimated-surfaces"]], "mne.spatial_dist_adjacency": [[753, "mne-spatial-dist-adjacency"]], "mne.spatial_inter_hemi_adjacency": [[754, "mne-spatial-inter-hemi-adjacency"]], "mne.spatial_src_adjacency": [[755, "mne-spatial-src-adjacency"]], "Examples using mne.spatial_src_adjacency": [[755, "examples-using-mne-spatial-src-adjacency"]], "mne.spatial_tris_adjacency": [[756, "mne-spatial-tris-adjacency"]], "mne.spatio_temporal_dist_adjacency": [[757, "mne-spatio-temporal-dist-adjacency"]], "mne.spatio_temporal_src_adjacency": [[758, "mne-spatio-temporal-src-adjacency"]], "mne.spatio_temporal_tris_adjacency": [[759, "mne-spatio-temporal-tris-adjacency"]], "mne.split_label": [[760, "mne-split-label"]], "mne.stats.bonferroni_correction": [[761, "mne-stats-bonferroni-correction"]], "Examples using mne.stats.bonferroni_correction": [[761, "examples-using-mne-stats-bonferroni-correction"]], "mne.stats.bootstrap_confidence_interval": [[762, "mne-stats-bootstrap-confidence-interval"]], "Examples using mne.stats.bootstrap_confidence_interval": [[762, "examples-using-mne-stats-bootstrap-confidence-interval"]], "mne.stats.combine_adjacency": [[763, "mne-stats-combine-adjacency"]], "Examples using mne.stats.combine_adjacency": [[763, "examples-using-mne-stats-combine-adjacency"]], "mne.stats.f_mway_rm": [[764, "mne-stats-f-mway-rm"]], "Examples using mne.stats.f_mway_rm": [[764, "examples-using-mne-stats-f-mway-rm"]], "mne.stats.f_oneway": [[765, "mne-stats-f-oneway"]], "mne.stats.f_threshold_mway_rm": [[766, "mne-stats-f-threshold-mway-rm"]], "Examples using mne.stats.f_threshold_mway_rm": [[766, "examples-using-mne-stats-f-threshold-mway-rm"]], "mne.stats.fdr_correction": [[767, "mne-stats-fdr-correction"]], "Examples using mne.stats.fdr_correction": [[767, "examples-using-mne-stats-fdr-correction"]], "mne.stats.linear_regression": [[768, "mne-stats-linear-regression"]], "Examples using mne.stats.linear_regression": [[768, "examples-using-mne-stats-linear-regression"]], "mne.stats.linear_regression_raw": [[769, "mne-stats-linear-regression-raw"]], "Examples using mne.stats.linear_regression_raw": [[769, "examples-using-mne-stats-linear-regression-raw"]], "mne.stats.permutation_cluster_1samp_test": [[770, "mne-stats-permutation-cluster-1samp-test"]], "Examples using mne.stats.permutation_cluster_1samp_test": [[770, "examples-using-mne-stats-permutation-cluster-1samp-test"]], "mne.stats.permutation_cluster_test": [[771, "mne-stats-permutation-cluster-test"]], "Examples using mne.stats.permutation_cluster_test": [[771, "examples-using-mne-stats-permutation-cluster-test"]], "mne.stats.permutation_t_test": [[772, "mne-stats-permutation-t-test"]], "Examples using mne.stats.permutation_t_test": [[772, "examples-using-mne-stats-permutation-t-test"]], "mne.stats.spatio_temporal_cluster_1samp_test": [[773, "mne-stats-spatio-temporal-cluster-1samp-test"]], "Examples using mne.stats.spatio_temporal_cluster_1samp_test": [[773, "examples-using-mne-stats-spatio-temporal-cluster-1samp-test"]], "mne.stats.spatio_temporal_cluster_test": [[774, "mne-stats-spatio-temporal-cluster-test"]], "Examples using mne.stats.spatio_temporal_cluster_test": [[774, "examples-using-mne-stats-spatio-temporal-cluster-test"]], "mne.stats.summarize_clusters_stc": [[775, "mne-stats-summarize-clusters-stc"]], "Examples using mne.stats.summarize_clusters_stc": [[775, "examples-using-mne-stats-summarize-clusters-stc"]], "mne.stats.ttest_1samp_no_p": [[776, "mne-stats-ttest-1samp-no-p"]], "Examples using mne.stats.ttest_1samp_no_p": [[776, "examples-using-mne-stats-ttest-1samp-no-p"]], "mne.stats.ttest_ind_no_p": [[777, "mne-stats-ttest-ind-no-p"]], "mne.stc_near_sensors": [[778, "mne-stc-near-sensors"]], "Examples using mne.stc_near_sensors": [[778, "examples-using-mne-stc-near-sensors"]], "mne.stc_to_label": [[779, "mne-stc-to-label"]], "Examples using mne.stc_to_label": [[779, "examples-using-mne-stc-to-label"]], "mne.surface.complete_surface_info": [[780, "mne-surface-complete-surface-info"]], "mne.surface.read_curvature": [[781, "mne-surface-read-curvature"]], "Examples using mne.surface.read_curvature": [[781, "examples-using-mne-surface-read-curvature"]], "mne.sys_info": [[782, "mne-sys-info"]], "Examples using mne.sys_info": [[782, "examples-using-mne-sys-info"]], "mne.time_frequency.AverageTFR": [[783, "mne-time-frequency-averagetfr"]], "Examples using mne.time_frequency.AverageTFR": [[783, "examples-using-mne-time-frequency-averagetfr"]], "mne.time_frequency.CrossSpectralDensity": [[784, "mne-time-frequency-crossspectraldensity"]], "Examples using mne.time_frequency.CrossSpectralDensity": [[784, "examples-using-mne-time-frequency-crossspectraldensity"]], "mne.time_frequency.EpochsSpectrum": [[785, "mne-time-frequency-epochsspectrum"]], "Examples using mne.time_frequency.EpochsSpectrum": [[785, "examples-using-mne-time-frequency-epochsspectrum"]], "mne.time_frequency.EpochsSpectrumArray": [[786, "mne-time-frequency-epochsspectrumarray"]], "Examples using mne.time_frequency.EpochsSpectrumArray": [[786, "examples-using-mne-time-frequency-epochsspectrumarray"]], "mne.time_frequency.EpochsTFR": [[787, "mne-time-frequency-epochstfr"]], "Examples using mne.time_frequency.EpochsTFR": [[787, "examples-using-mne-time-frequency-epochstfr"]], "mne.time_frequency.Spectrum": [[788, "mne-time-frequency-spectrum"]], "Examples using mne.time_frequency.Spectrum": [[788, "examples-using-mne-time-frequency-spectrum"]], "mne.time_frequency.SpectrumArray": [[789, "mne-time-frequency-spectrumarray"]], "Examples using mne.time_frequency.SpectrumArray": [[789, "examples-using-mne-time-frequency-spectrumarray"]], "mne.time_frequency.csd_array_fourier": [[790, "mne-time-frequency-csd-array-fourier"]], "mne.time_frequency.csd_array_morlet": [[791, "mne-time-frequency-csd-array-morlet"]], "mne.time_frequency.csd_array_multitaper": [[792, "mne-time-frequency-csd-array-multitaper"]], "mne.time_frequency.csd_fourier": [[793, "mne-time-frequency-csd-fourier"]], "Examples using mne.time_frequency.csd_fourier": [[793, "examples-using-mne-time-frequency-csd-fourier"]], "mne.time_frequency.csd_morlet": [[794, "mne-time-frequency-csd-morlet"]], "Examples using mne.time_frequency.csd_morlet": [[794, "examples-using-mne-time-frequency-csd-morlet"]], "mne.time_frequency.csd_multitaper": [[795, "mne-time-frequency-csd-multitaper"]], "Examples using mne.time_frequency.csd_multitaper": [[795, "examples-using-mne-time-frequency-csd-multitaper"]], "mne.time_frequency.csd_tfr": [[796, "mne-time-frequency-csd-tfr"]], "Examples using mne.time_frequency.csd_tfr": [[796, "examples-using-mne-time-frequency-csd-tfr"]], "mne.time_frequency.dpss_windows": [[797, "mne-time-frequency-dpss-windows"]], "mne.time_frequency.fit_iir_model_raw": [[798, "mne-time-frequency-fit-iir-model-raw"]], "Examples using mne.time_frequency.fit_iir_model_raw": [[798, "examples-using-mne-time-frequency-fit-iir-model-raw"]], "mne.time_frequency.fwhm": [[799, "mne-time-frequency-fwhm"]], "mne.time_frequency.istft": [[800, "mne-time-frequency-istft"]], "mne.time_frequency.morlet": [[801, "mne-time-frequency-morlet"]], "Examples using mne.time_frequency.morlet": [[801, "examples-using-mne-time-frequency-morlet"]], "mne.time_frequency.pick_channels_csd": [[802, "mne-time-frequency-pick-channels-csd"]], "mne.time_frequency.psd_array_multitaper": [[803, "mne-time-frequency-psd-array-multitaper"]], "mne.time_frequency.psd_array_welch": [[804, "mne-time-frequency-psd-array-welch"]], "Examples using mne.time_frequency.psd_array_welch": [[804, "examples-using-mne-time-frequency-psd-array-welch"]], "mne.time_frequency.read_csd": [[805, "mne-time-frequency-read-csd"]], "mne.time_frequency.read_spectrum": [[806, "mne-time-frequency-read-spectrum"]], "mne.time_frequency.read_tfrs": [[807, "mne-time-frequency-read-tfrs"]], "mne.time_frequency.stft": [[808, "mne-time-frequency-stft"]], "mne.time_frequency.stftfreq": [[809, "mne-time-frequency-stftfreq"]], "mne.time_frequency.tfr.cwt": [[810, "mne-time-frequency-tfr-cwt"]], "mne.time_frequency.tfr.morlet": [[811, "mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_array_morlet": [[812, "mne-time-frequency-tfr-array-morlet"]], "Examples using mne.time_frequency.tfr_array_morlet": [[812, "examples-using-mne-time-frequency-tfr-array-morlet"]], "mne.time_frequency.tfr_array_multitaper": [[813, "mne-time-frequency-tfr-array-multitaper"]], "mne.time_frequency.tfr_array_stockwell": [[814, "mne-time-frequency-tfr-array-stockwell"]], "mne.time_frequency.tfr_morlet": [[815, "mne-time-frequency-tfr-morlet"]], "Examples using mne.time_frequency.tfr_morlet": [[815, "examples-using-mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_multitaper": [[816, "mne-time-frequency-tfr-multitaper"]], "Examples using mne.time_frequency.tfr_multitaper": [[816, "examples-using-mne-time-frequency-tfr-multitaper"]], "mne.time_frequency.tfr_stockwell": [[817, "mne-time-frequency-tfr-stockwell"]], "Examples using mne.time_frequency.tfr_stockwell": [[817, "examples-using-mne-time-frequency-tfr-stockwell"]], "mne.time_frequency.write_tfrs": [[818, "mne-time-frequency-write-tfrs"]], "mne.transform_surface_to": [[819, "mne-transform-surface-to"]], "mne.transforms.Transform": [[820, "mne-transforms-transform"]], "mne.transforms.apply_volume_registration": [[821, "mne-transforms-apply-volume-registration"]], "mne.transforms.apply_volume_registration_points": [[822, "mne-transforms-apply-volume-registration-points"]], "mne.transforms.compute_volume_registration": [[823, "mne-transforms-compute-volume-registration"]], "mne.transforms.quat_to_rot": [[824, "mne-transforms-quat-to-rot"]], "mne.transforms.read_ras_mni_t": [[825, "mne-transforms-read-ras-mni-t"]], "Examples using mne.transforms.read_ras_mni_t": [[825, "examples-using-mne-transforms-read-ras-mni-t"]], "mne.transforms.rot_to_quat": [[826, "mne-transforms-rot-to-quat"]], "mne.use_coil_def": [[827, "mne-use-coil-def"]], "Examples using mne.use_coil_def": [[827, "examples-using-mne-use-coil-def"]], "mne.use_log_level": [[828, "mne-use-log-level"]], "Examples using mne.use_log_level": [[828, "examples-using-mne-use-log-level"]], "mne.utils.deprecated": [[829, "mne-utils-deprecated"]], "mne.utils.warn": [[830, "mne-utils-warn"]], "mne.verbose": [[831, "mne-verbose"]], "mne.vertex_to_mni": [[832, "mne-vertex-to-mni"]], "Examples using mne.vertex_to_mni": [[832, "examples-using-mne-vertex-to-mni"]], "mne.viz.Brain": [[833, "mne-viz-brain"]], "Examples using mne.viz.Brain": [[833, "examples-using-mne-viz-brain"]], "mne.viz.ClickableImage": [[834, "mne-viz-clickableimage"]], "Examples using mne.viz.ClickableImage": [[834, "examples-using-mne-viz-clickableimage"]], "mne.viz.EvokedField": [[835, "mne-viz-evokedfield"]], "Examples using mne.viz.EvokedField": [[835, "examples-using-mne-viz-evokedfield"]], "mne.viz.Figure3D": [[836, "mne-viz-figure3d"]], "mne.viz.add_background_image": [[837, "mne-viz-add-background-image"]], "mne.viz.centers_to_edges": [[838, "mne-viz-centers-to-edges"]], "Examples using mne.viz.centers_to_edges": [[838, "examples-using-mne-viz-centers-to-edges"]], "mne.viz.circular_layout": [[839, "mne-viz-circular-layout"]], "Examples using mne.viz.circular_layout": [[839, "examples-using-mne-viz-circular-layout"]], "mne.viz.close_3d_figure": [[840, "mne-viz-close-3d-figure"]], "mne.viz.close_all_3d_figures": [[841, "mne-viz-close-all-3d-figures"]], "mne.viz.compare_fiff": [[842, "mne-viz-compare-fiff"]], "mne.viz.create_3d_figure": [[843, "mne-viz-create-3d-figure"]], "Examples using mne.viz.create_3d_figure": [[843, "examples-using-mne-viz-create-3d-figure"]], "mne.viz.eyetracking.plot_gaze": [[844, "mne-viz-eyetracking-plot-gaze"]], "Examples using mne.viz.eyetracking.plot_gaze": [[844, "examples-using-mne-viz-eyetracking-plot-gaze"]], "mne.viz.get_3d_backend": [[845, "mne-viz-get-3d-backend"]], "mne.viz.get_brain_class": [[846, "mne-viz-get-brain-class"]], "Examples using mne.viz.get_brain_class": [[846, "examples-using-mne-viz-get-brain-class"]], "mne.viz.get_browser_backend": [[847, "mne-viz-get-browser-backend"]], "mne.viz.iter_topography": [[848, "mne-viz-iter-topography"]], "Examples using mne.viz.iter_topography": [[848, "examples-using-mne-viz-iter-topography"]], "mne.viz.link_brains": [[849, "mne-viz-link-brains"]], "mne.viz.mne_analyze_colormap": [[850, "mne-viz-mne-analyze-colormap"]], "mne.viz.plot_alignment": [[851, "mne-viz-plot-alignment"]], "Examples using mne.viz.plot_alignment": [[851, "examples-using-mne-viz-plot-alignment"]], "mne.viz.plot_arrowmap": [[852, "mne-viz-plot-arrowmap"]], "Examples using mne.viz.plot_arrowmap": [[852, "examples-using-mne-viz-plot-arrowmap"]], "mne.viz.plot_bem": [[853, "mne-viz-plot-bem"]], "Examples using mne.viz.plot_bem": [[853, "examples-using-mne-viz-plot-bem"]], "mne.viz.plot_brain_colorbar": [[854, "mne-viz-plot-brain-colorbar"]], "Examples using mne.viz.plot_brain_colorbar": [[854, "examples-using-mne-viz-plot-brain-colorbar"]], "mne.viz.plot_bridged_electrodes": [[855, "mne-viz-plot-bridged-electrodes"]], "Examples using mne.viz.plot_bridged_electrodes": [[855, "examples-using-mne-viz-plot-bridged-electrodes"]], "mne.viz.plot_ch_adjacency": [[856, "mne-viz-plot-ch-adjacency"]], "Examples using mne.viz.plot_ch_adjacency": [[856, "examples-using-mne-viz-plot-ch-adjacency"]], "mne.viz.plot_channel_labels_circle": [[857, "mne-viz-plot-channel-labels-circle"]], "Examples using mne.viz.plot_channel_labels_circle": [[857, "examples-using-mne-viz-plot-channel-labels-circle"]], "mne.viz.plot_chpi_snr": [[858, "mne-viz-plot-chpi-snr"]], "Examples using mne.viz.plot_chpi_snr": [[858, "examples-using-mne-viz-plot-chpi-snr"]], "mne.viz.plot_compare_evokeds": [[859, "mne-viz-plot-compare-evokeds"]], "Examples using mne.viz.plot_compare_evokeds": [[859, "examples-using-mne-viz-plot-compare-evokeds"]], "mne.viz.plot_cov": [[860, "mne-viz-plot-cov"]], "Examples using mne.viz.plot_cov": [[860, "examples-using-mne-viz-plot-cov"]], "mne.viz.plot_csd": [[861, "mne-viz-plot-csd"]], "mne.viz.plot_dipole_amplitudes": [[862, "mne-viz-plot-dipole-amplitudes"]], "Examples using mne.viz.plot_dipole_amplitudes": [[862, "examples-using-mne-viz-plot-dipole-amplitudes"]], "mne.viz.plot_dipole_locations": [[863, "mne-viz-plot-dipole-locations"]], "Examples using mne.viz.plot_dipole_locations": [[863, "examples-using-mne-viz-plot-dipole-locations"]], "mne.viz.plot_drop_log": [[864, "mne-viz-plot-drop-log"]], "mne.viz.plot_epochs": [[865, "mne-viz-plot-epochs"]], "mne.viz.plot_epochs_image": [[866, "mne-viz-plot-epochs-image"]], "Examples using mne.viz.plot_epochs_image": [[866, "examples-using-mne-viz-plot-epochs-image"]], "mne.viz.plot_epochs_psd_topomap": [[867, "mne-viz-plot-epochs-psd-topomap"]], "mne.viz.plot_events": [[868, "mne-viz-plot-events"]], "Examples using mne.viz.plot_events": [[868, "examples-using-mne-viz-plot-events"]], "mne.viz.plot_evoked": [[869, "mne-viz-plot-evoked"]], "mne.viz.plot_evoked_field": [[870, "mne-viz-plot-evoked-field"]], "Examples using mne.viz.plot_evoked_field": [[870, "examples-using-mne-viz-plot-evoked-field"]], "mne.viz.plot_evoked_image": [[871, "mne-viz-plot-evoked-image"]], "Examples using mne.viz.plot_evoked_image": [[871, "examples-using-mne-viz-plot-evoked-image"]], "mne.viz.plot_evoked_joint": [[872, "mne-viz-plot-evoked-joint"]], "mne.viz.plot_evoked_topo": [[873, "mne-viz-plot-evoked-topo"]], "Examples using mne.viz.plot_evoked_topo": [[873, "examples-using-mne-viz-plot-evoked-topo"]], "mne.viz.plot_evoked_topomap": [[874, "mne-viz-plot-evoked-topomap"]], "mne.viz.plot_evoked_white": [[875, "mne-viz-plot-evoked-white"]], "Examples using mne.viz.plot_evoked_white": [[875, "examples-using-mne-viz-plot-evoked-white"]], "mne.viz.plot_filter": [[876, "mne-viz-plot-filter"]], "Examples using mne.viz.plot_filter": [[876, "examples-using-mne-viz-plot-filter"]], "mne.viz.plot_head_positions": [[877, "mne-viz-plot-head-positions"]], "Examples using mne.viz.plot_head_positions": [[877, "examples-using-mne-viz-plot-head-positions"]], "mne.viz.plot_ica_components": [[878, "mne-viz-plot-ica-components"]], "mne.viz.plot_ica_overlay": [[879, "mne-viz-plot-ica-overlay"]], "mne.viz.plot_ica_properties": [[880, "mne-viz-plot-ica-properties"]], "mne.viz.plot_ica_scores": [[881, "mne-viz-plot-ica-scores"]], "mne.viz.plot_ica_sources": [[882, "mne-viz-plot-ica-sources"]], "mne.viz.plot_ideal_filter": [[883, "mne-viz-plot-ideal-filter"]], "Examples using mne.viz.plot_ideal_filter": [[883, "examples-using-mne-viz-plot-ideal-filter"]], "mne.viz.plot_layout": [[884, "mne-viz-plot-layout"]], "mne.viz.plot_montage": [[885, "mne-viz-plot-montage"]], "mne.viz.plot_projs_joint": [[886, "mne-viz-plot-projs-joint"]], "Examples using mne.viz.plot_projs_joint": [[886, "examples-using-mne-viz-plot-projs-joint"]], "mne.viz.plot_projs_topomap": [[887, "mne-viz-plot-projs-topomap"]], "Examples using mne.viz.plot_projs_topomap": [[887, "examples-using-mne-viz-plot-projs-topomap"]], "mne.viz.plot_raw": [[888, "mne-viz-plot-raw"]], "mne.viz.plot_raw_psd": [[889, "mne-viz-plot-raw-psd"]], "mne.viz.plot_regression_weights": [[890, "mne-viz-plot-regression-weights"]], "mne.viz.plot_sensors": [[891, "mne-viz-plot-sensors"]], "mne.viz.plot_snr_estimate": [[892, "mne-viz-plot-snr-estimate"]], "Examples using mne.viz.plot_snr_estimate": [[892, "examples-using-mne-viz-plot-snr-estimate"]], "mne.viz.plot_source_estimates": [[893, "mne-viz-plot-source-estimates"]], "Examples using mne.viz.plot_source_estimates": [[893, "examples-using-mne-viz-plot-source-estimates"]], "mne.viz.plot_sparse_source_estimates": [[894, "mne-viz-plot-sparse-source-estimates"]], "Examples using mne.viz.plot_sparse_source_estimates": [[894, "examples-using-mne-viz-plot-sparse-source-estimates"]], "mne.viz.plot_tfr_topomap": [[895, "mne-viz-plot-tfr-topomap"]], "mne.viz.plot_topo_image_epochs": [[896, "mne-viz-plot-topo-image-epochs"]], "mne.viz.plot_topomap": [[897, "mne-viz-plot-topomap"]], "Examples using mne.viz.plot_topomap": [[897, "examples-using-mne-viz-plot-topomap"]], "mne.viz.plot_vector_source_estimates": [[898, "mne-viz-plot-vector-source-estimates"]], "Examples using mne.viz.plot_vector_source_estimates": [[898, "examples-using-mne-viz-plot-vector-source-estimates"]], "mne.viz.plot_volume_source_estimates": [[899, "mne-viz-plot-volume-source-estimates"]], "mne.viz.set_3d_backend": [[900, "mne-viz-set-3d-backend"]], "mne.viz.set_3d_options": [[901, "mne-viz-set-3d-options"]], "mne.viz.set_3d_title": [[902, "mne-viz-set-3d-title"]], "Examples using mne.viz.set_3d_title": [[902, "examples-using-mne-viz-set-3d-title"]], "mne.viz.set_3d_view": [[903, "mne-viz-set-3d-view"]], "Examples using mne.viz.set_3d_view": [[903, "examples-using-mne-viz-set-3d-view"]], "mne.viz.set_browser_backend": [[904, "mne-viz-set-browser-backend"]], "mne.viz.snapshot_brain_montage": [[905, "mne-viz-snapshot-brain-montage"]], "Examples using mne.viz.snapshot_brain_montage": [[905, "examples-using-mne-viz-snapshot-brain-montage"]], "mne.viz.ui_events.ColormapRange": [[906, "mne-viz-ui-events-colormaprange"]], "mne.viz.ui_events.Contours": [[907, "mne-viz-ui-events-contours"]], "mne.viz.ui_events.FigureClosing": [[908, "mne-viz-ui-events-figureclosing"]], "mne.viz.ui_events.PlaybackSpeed": [[909, "mne-viz-ui-events-playbackspeed"]], "mne.viz.ui_events.TimeChange": [[910, "mne-viz-ui-events-timechange"]], "Examples using mne.viz.ui_events.TimeChange": [[910, "examples-using-mne-viz-ui-events-timechange"]], "mne.viz.ui_events.UIEvent": [[911, "mne-viz-ui-events-uievent"]], "Examples using mne.viz.ui_events.UIEvent": [[911, "examples-using-mne-viz-ui-events-uievent"]], "mne.viz.ui_events.VertexSelect": [[912, "mne-viz-ui-events-vertexselect"]], "mne.viz.ui_events.disable_ui_events": [[913, "mne-viz-ui-events-disable-ui-events"]], "mne.viz.ui_events.link": [[914, "mne-viz-ui-events-link"]], "Examples using mne.viz.ui_events.link": [[914, "examples-using-mne-viz-ui-events-link"]], "mne.viz.ui_events.publish": [[915, "mne-viz-ui-events-publish"]], "Examples using mne.viz.ui_events.publish": [[915, "examples-using-mne-viz-ui-events-publish"]], "mne.viz.ui_events.subscribe": [[916, "mne-viz-ui-events-subscribe"]], "Examples using mne.viz.ui_events.subscribe": [[916, "examples-using-mne-viz-ui-events-subscribe"]], "mne.viz.ui_events.unlink": [[917, "mne-viz-ui-events-unlink"]], "mne.viz.ui_events.unsubscribe": [[918, "mne-viz-ui-events-unsubscribe"]], "mne.viz.use_3d_backend": [[919, "mne-viz-use-3d-backend"]], "mne.viz.use_browser_backend": [[920, "mne-viz-use-browser-backend"]], "Examples using mne.viz.use_browser_backend": [[920, "examples-using-mne-viz-use-browser-backend"]], "mne.what": [[921, "mne-what"]], "mne.write_bem_solution": [[922, "mne-write-bem-solution"]], "mne.write_bem_surfaces": [[923, "mne-write-bem-surfaces"]], "mne.write_cov": [[924, "mne-write-cov"]], "mne.write_events": [[925, "mne-write-events"]], "mne.write_evokeds": [[926, "mne-write-evokeds"]], "mne.write_forward_solution": [[927, "mne-write-forward-solution"]], "mne.write_head_bem": [[928, "mne-write-head-bem"]], "Examples using mne.write_head_bem": [[928, "examples-using-mne-write-head-bem"]], "mne.write_label": [[929, "mne-write-label"]], "mne.write_labels_to_annot": [[930, "mne-write-labels-to-annot"]], "mne.write_proj": [[931, "mne-write-proj"]], "mne.write_source_spaces": [[932, "mne-write-source-spaces"]], "mne.write_surface": [[933, "mne-write-surface"]], "Examples using mne.write_surface": [[933, "examples-using-mne-write-surface"]], "mne.write_trans": [[934, "mne-write-trans"]], "Frequently Asked Questions (FAQ)": [[935, "frequently-asked-questions-faq"]], "General MNE-Python issues": [[935, "general-mne-python-issues"]], "Help! I can\u2019t get Python and MNE-Python working!": [[935, "help-i-can-t-get-python-and-mne-python-working"]], "I still can\u2019t get it to work!": [[935, "i-still-can-t-get-it-to-work"]], "I can\u2019t get PyVista/3D plotting to work under Windows": [[935, "i-can-t-get-pyvista-3d-plotting-to-work-under-windows"]], "Python runs on macOS extremely slow even on simple commands!": [[935, "python-runs-on-macos-extremely-slow-even-on-simple-commands"]], "How do I cite MNE?": [[935, "how-do-i-cite-mne"]], "I\u2019m not sure how to do X analysis step with my Y data\u2026": [[935, "i-m-not-sure-how-to-do-x-analysis-step-with-my-y-data"]], "I think I found a bug, what do I do?": [[935, "i-think-i-found-a-bug-what-do-i-do"]], "Why is it dangerous to \u201cpickle\u201d my MNE-Python objects and data for later use?": [[935, "why-is-it-dangerous-to-pickle-my-mne-python-objects-and-data-for-later-use"]], "I downloaded a dataset once, but MNE-Python is asking to download it again. Why?": [[935, "i-downloaded-a-dataset-once-but-mne-python-is-asking-to-download-it-again-why"]], "A function uses multiple CPU cores even though I didn\u2019t tell it to. Why?": [[935, "a-function-uses-multiple-cpu-cores-even-though-i-didn-t-tell-it-to-why"]], "I have a mystery FIF file, how do I read it?": [[935, "i-have-a-mystery-fif-file-how-do-i-read-it"]], "Resampling and decimating data": [[935, "resampling-and-decimating-data"]], "What are all these options for resampling, decimating, and binning data?": [[935, "what-are-all-these-options-for-resampling-decimating-and-binning-data"]], "Resampling raw data is taking forever! What do I do?": [[935, "resampling-raw-data-is-taking-forever-what-do-i-do"]], "Forward and Inverse Solution": [[935, "forward-and-inverse-solution"]], "My watershed BEM meshes look incorrect": [[935, "my-watershed-bem-meshes-look-incorrect"]], "Getting help": [[936, "getting-help"], [948, "getting-help"]], "Getting started with Python": [[937, "getting-started-with-python"]], "Migrating from other analysis software": [[938, "migrating-from-other-analysis-software"]], "EEGLAB": [[938, "eeglab"]], "Potential pitfalls": [[938, "potential-pitfalls"]], "MNE-Python Homepage": [[939, "mne-python-homepage"]], "Advanced setup": [[940, "advanced-setup"]], "Working with Jupyter Notebooks and JupyterLab": [[940, "working-with-jupyter-notebooks-and-jupyterlab"]], "<i class=\"fa-brands fa-windows\"></i> Windows": [[940, null]], "Installing to a headless Linux server": [[940, "installing-to-a-headless-linux-server"]], "Using the development version": [[940, "using-the-development-version"]], "GPU acceleration with CUDA": [[940, "gpu-acceleration-with-cuda"]], "Off-screen rendering with MESA": [[940, "off-screen-rendering-with-mesa"]], "Troubleshooting 3D plots": [[940, "troubleshooting-3d-plots"]], "3D plotting trouble after upgrade on macOS": [[940, "d-plotting-trouble-after-upgrade-on-macos"]], "Testing your installation": [[941, "testing-your-installation"]], "Installing FreeSurfer": [[942, "installing-freesurfer"]], "Installing MNE-Python": [[943, "installing-mne-python"]], "MNE-Python installers": [[944, "mne-python-installers"]], "VS Code Setup": [[944, "vs-code-setup"]], "Install via pip or conda": [[945, "install-via-pip-or-conda"]], "Installing MNE-Python with all dependencies": [[945, "installing-mne-python-with-all-dependencies"]], "Installing MNE-Python with core dependencies": [[945, "installing-mne-python-with-core-dependencies"]], "Installing MNE-Python with HDF5 support": [[945, "installing-mne-python-with-hdf5-support"]], "Installing MNE-Python for other scenarios": [[945, "installing-mne-python-for-other-scenarios"]], "Python IDEs": [[945, "python-ides"]], "Installing Python": [[946, "installing-python"]], "Other Python distributions": [[946, "other-python-distributions"]], "Installing MNE-C": [[947, "installing-mne-c"]], "System requirements": [[947, "system-requirements"]], "<i class=\"fa-brands fa-apple\"></i> macOS": [[947, null]], "Downloading and Installing MNE-C": [[947, "downloading-and-installing-mne-c"]], "Configuring MNE-C": [[947, "configuring-mne-c"]], "Testing MNE-C installation": [[947, "testing-mne-c-installation"]], "Troubleshooting MNE-C installation": [[947, "troubleshooting-mne-c-installation"]], "Overview of the MNE tools suite": [[948, "overview-of-the-mne-tools-suite"]], "Related software": [[948, "related-software"]], "What should I install?": [[948, "what-should-i-install"]], "Updating MNE-Python": [[949, "updating-mne-python"]], "Upgrading MNE-Python only": [[949, "upgrading-mne-python-only"]], "Upgrading all packages": [[949, "upgrading-all-packages"]], "Upgrading to the development version": [[949, "upgrading-to-the-development-version"]], "Martinos Center setup": [[950, "martinos-center-setup"]], "MNE with CPP": [[951, "mne-with-cpp"]], "Archived documentation for old versions": [[952, "archived-documentation-for-old-versions"]], "Current steering council and institutional partners": [[953, "current-steering-council-and-institutional-partners"]], "Benevolent Dictator for Life": [[953, "benevolent-dictator-for-life"]], "Community Participation Guidelines Response Leads": [[953, "community-participation-guidelines-response-leads"]], "Institutional Partners": [[953, "institutional-partners"]], "Unused API Entries": [[954, "unused-api-entries"]]}, "indexentries": {"mne.datasets": [[3, "module-mne.datasets"]], "module": [[3, "module-mne.datasets"], [4, "module-mne.decoding"], [5, "module-mne.epochs"], [5, "module-mne.event"], [6, "module-mne.export"], [8, "module-mne.bem"], [9, "module-mne.beamformer"], [9, "module-mne.dipole"], [9, "module-mne.inverse_sparse"], [9, "module-mne.minimum_norm"], [10, "module-mne.cuda"], [10, "module-mne.utils"], [13, "module-mne.channels"], [13, "module-mne.chpi"], [13, "module-mne.filter"], [13, "module-mne.preprocessing"], [13, "module-mne.preprocessing.eyetracking"], [13, "module-mne.preprocessing.ieeg"], [13, "module-mne.preprocessing.nirs"], [13, "module-mne.transforms"], [14, "module-mne"], [15, "module-mne.io"], [15, "module-mne.io.kit"], [18, "module-mne.baseline"], [19, "module-mne.simulation"], [19, "module-mne.simulation.metrics"], [21, "module-mne.stats"], [22, "module-mne.time_frequency"], [22, "module-mne.time_frequency.tfr"], [23, "module-mne.viz"], [23, "module-mne.viz.eyetracking"], [23, "module-mne.viz.ui_events"]], "mne.decoding": [[4, "module-mne.decoding"]], "mne.epochs": [[5, "module-mne.epochs"]], "mne.event": [[5, "module-mne.event"]], "mne.export": [[6, "module-mne.export"]], "mne.bem": [[8, "module-mne.bem"]], "mne.beamformer": [[9, "module-mne.beamformer"]], "mne.dipole": [[9, "module-mne.dipole"]], "mne.inverse_sparse": [[9, "module-mne.inverse_sparse"]], "mne.minimum_norm": [[9, "module-mne.minimum_norm"]], "mne.cuda": [[10, "module-mne.cuda"]], "mne.utils": [[10, "module-mne.utils"]], "mne.channels": [[13, "module-mne.channels"]], "mne.chpi": [[13, "module-mne.chpi"]], "mne.filter": [[13, "module-mne.filter"]], "mne.preprocessing": [[13, "module-mne.preprocessing"]], "mne.preprocessing.eyetracking": [[13, "module-mne.preprocessing.eyetracking"]], "mne.preprocessing.ieeg": [[13, "module-mne.preprocessing.ieeg"]], "mne.preprocessing.nirs": [[13, "module-mne.preprocessing.nirs"]], "mne.transforms": [[13, "module-mne.transforms"]], "mne": [[14, "module-mne"], [319, "term-MNE"]], "mne.io": [[15, "module-mne.io"]], "mne.io.kit": [[15, "module-mne.io.kit"]], "mne.baseline": [[18, "module-mne.baseline"]], "mne.simulation": [[19, "module-mne.simulation"]], "mne.simulation.metrics": [[19, "module-mne.simulation.metrics"]], "mne.stats": [[21, "module-mne.stats"]], "mne.time_frequency": [[22, "module-mne.time_frequency"]], "mne.time_frequency.tfr": [[22, "module-mne.time_frequency.tfr"]], "mne.viz": [[23, "module-mne.viz"]], "mne.viz.eyetracking": [[23, "module-mne.viz.eyetracking"]], "mne.viz.ui_events": [[23, "module-mne.viz.ui_events"]], "bem": [[319, "term-BEM"]], "dc": [[319, "term-DC"]], "dics": [[319, "term-DICS"]], "ecd": [[319, "term-ECD"]], "freesurfer lut": [[319, "term-FreeSurfer-LUT"]], "gfp": [[319, "term-GFP"]], "hed": [[319, "term-HED"]], "hpi": [[319, "term-HPI"]], "lcmv": [[319, "term-LCMV"]], "lcmv beamformer": [[319, "term-LCMV-beamformer"]], "lut": [[319, "term-LUT"]], "opm": [[319, "term-OPM"]], "ras": [[319, "term-RAS"]], "roi": [[319, "term-ROI"]], "squid": [[319, "term-SQUID"]], "ssp": [[319, "term-SSP"]], "stc": [[319, "term-STC"]], "anatomical landmark": [[319, "term-anatomical-landmark"]], "annotations": [[319, "term-annotations"]], "beamformer": [[319, "term-beamformer"]], "boundary element method": [[319, "term-boundary-element-method"]], "boundary element model": [[319, "term-boundary-element-model"]], "chpi": [[319, "term-cHPI"]], "channels": [[319, "term-channels"]], "dspm": [[319, "term-dSPM"]], "data channels": [[319, "term-data-channels"]], "digitization": [[319, "term-digitization"]], "dipole": [[319, "term-dipole"]], "direct current": [[319, "term-direct-current"]], "dynamic imaging of coherent sources": [[319, "term-dynamic-imaging-of-coherent-sources"]], "dynamic statistical parametric mapping": [[319, "term-dynamic-statistical-parametric-mapping"]], "eloreta": [[319, "term-eLORETA"]], "epochs": [[319, "term-epochs"]], "equivalent current dipole": [[319, "term-equivalent-current-dipole"]], "events": [[319, "term-events"]], "evoked": [[319, "term-evoked"]], "fiducial": [[319, "term-fiducial"]], "fiducial point": [[319, "term-fiducial-point"]], "first_samp": [[319, "term-first_samp"]], "forward": [[319, "term-forward"]], "forward solution": [[319, "term-forward-solution"]], "global field power": [[319, "term-global-field-power"]], "head position indicator": [[319, "term-head-position-indicator"]], "hierarchical event descriptors": [[319, "term-hierarchical-event-descriptors"]], "info": [[319, "term-info"]], "inverse": [[319, "term-inverse"]], "inverse operator": [[319, "term-inverse-operator"]], "label": [[319, "term-label"]], "last_samp": [[319, "term-last_samp"]], "layout": [[319, "term-layout"]], "maximum intensity projection": [[319, "term-maximum-intensity-projection"]], "measurement info": [[319, "term-measurement-info"]], "minimum-norm estimate": [[319, "term-minimum-norm-estimate"]], "minimum-norm estimation": [[319, "term-minimum-norm-estimation"]], "montage": [[319, "term-montage"]], "morphing": [[319, "term-morphing"]], "noise covariance": [[319, "term-noise-covariance"]], "optically pumped magnetometer": [[319, "term-optically-pumped-magnetometer"]], "path-like": [[319, "term-path-like"]], "pick": [[319, "term-pick"]], "projector": [[319, "term-projector"]], "raw": [[319, "term-raw"]], "region of interest": [[319, "term-region-of-interest"]], "sloreta": [[319, "term-sLORETA"]], "selection": [[319, "term-selection"]], "source estimate": [[319, "term-source-estimate"]], "source space": [[319, "term-source-space"]], "source time course": [[319, "term-source-time-course"]], "stim channel": [[319, "term-stim-channel"]], "superconducting quantum interference device": [[319, "term-superconducting-quantum-interference-device"]], "template montage": [[319, "term-template-montage"]], "tfr": [[319, "term-tfr"]], "trans": [[319, "term-trans"]], "trigger channel": [[319, "term-trigger-channel"]], "whitening": [[319, "term-whitening"]], "acqparserfif (class in mne)": [[324, "mne.AcqParserFIF"]], "__getitem__() (mne.acqparserfif method)": [[324, "mne.AcqParserFIF.__getitem__"]], "__len__() (mne.acqparserfif method)": [[324, "mne.AcqParserFIF.__len__"]], "categories (mne.acqparserfif property)": [[324, "mne.AcqParserFIF.categories"]], "events (mne.acqparserfif property)": [[324, "mne.AcqParserFIF.events"]], "get_condition() (mne.acqparserfif method)": [[324, "mne.AcqParserFIF.get_condition"]], "annotations (class in mne)": [[325, "mne.Annotations"]], "__add__() (mne.annotations method)": [[325, "mne.Annotations.__add__"]], "__getitem__() (mne.annotations method)": [[325, "mne.Annotations.__getitem__"]], "__iter__() (mne.annotations method)": [[325, "mne.Annotations.__iter__"]], "__len__() (mne.annotations method)": [[325, "mne.Annotations.__len__"]], "append() (mne.annotations method)": [[325, "mne.Annotations.append"]], "copy() (mne.annotations method)": [[325, "mne.Annotations.copy"]], "count() (mne.annotations method)": [[325, "mne.Annotations.count"]], "crop() (mne.annotations method)": [[325, "mne.Annotations.crop"]], "delete() (mne.annotations method)": [[325, "mne.Annotations.delete"]], "orig_time (mne.annotations property)": [[325, "mne.Annotations.orig_time"]], "rename() (mne.annotations method)": [[325, "mne.Annotations.rename"]], "save() (mne.annotations method)": [[325, "mne.Annotations.save"]], "set_durations() (mne.annotations method)": [[325, "mne.Annotations.set_durations"]], "to_data_frame() (mne.annotations method)": [[325, "mne.Annotations.to_data_frame"]], "baseepochs (class in mne)": [[326, "mne.BaseEpochs"]], "bihemilabel (class in mne)": [[327, "mne.BiHemiLabel"]], "__add__() (mne.bihemilabel method)": [[327, "mne.BiHemiLabel.__add__"]], "__len__() (mne.bihemilabel method)": [[327, "mne.BiHemiLabel.__len__"]], "__sub__() (mne.bihemilabel method)": [[327, "mne.BiHemiLabel.__sub__"]], "covariance (class in mne)": [[328, "mne.Covariance"]], "__add__() (mne.covariance method)": [[328, "mne.Covariance.__add__"]], "__contains__() (mne.covariance method)": [[328, "mne.Covariance.__contains__"]], "__getitem__() (mne.covariance method)": [[328, "mne.Covariance.__getitem__"]], "__iter__() (mne.covariance method)": [[328, "mne.Covariance.__iter__"]], "__len__() (mne.covariance method)": [[328, "mne.Covariance.__len__"]], "as_diag() (mne.covariance method)": [[328, "mne.Covariance.as_diag"]], "ch_names (mne.covariance property)": [[328, "mne.Covariance.ch_names"]], "clear() (mne.covariance method)": [[328, "mne.Covariance.clear"]], "copy() (mne.covariance method)": [[328, "mne.Covariance.copy"]], "data (mne.covariance property)": [[328, "mne.Covariance.data"]], "fromkeys() (mne.covariance method)": [[328, "mne.Covariance.fromkeys"]], "get() (mne.covariance method)": [[328, "mne.Covariance.get"]], "items() (mne.covariance method)": [[328, "mne.Covariance.items"]], "keys() (mne.covariance method)": [[328, "mne.Covariance.keys"]], "nfree (mne.covariance property)": [[328, "mne.Covariance.nfree"]], "pick_channels() (mne.covariance method)": [[328, "mne.Covariance.pick_channels"]], "plot() (mne.covariance method)": [[328, "mne.Covariance.plot"]], "plot_topomap() (mne.covariance method)": [[328, "mne.Covariance.plot_topomap"]], "pop() (mne.covariance method)": [[328, "mne.Covariance.pop"]], "popitem() (mne.covariance method)": [[328, "mne.Covariance.popitem"]], "save() (mne.covariance method)": [[328, "mne.Covariance.save"]], "setdefault() (mne.covariance method)": [[328, "mne.Covariance.setdefault"]], "update() (mne.covariance method)": [[328, "mne.Covariance.update"]], "values() (mne.covariance method)": [[328, "mne.Covariance.values"]], "dipole (class in mne)": [[329, "mne.Dipole"]], "__getitem__() (mne.dipole method)": [[329, "mne.Dipole.__getitem__"]], "__len__() (mne.dipole method)": [[329, "mne.Dipole.__len__"]], "copy() (mne.dipole method)": [[329, "mne.Dipole.copy"]], "crop() (mne.dipole method)": [[329, "mne.Dipole.crop"]], "plot_amplitudes() (mne.dipole method)": [[329, "mne.Dipole.plot_amplitudes"]], "plot_locations() (mne.dipole method)": [[329, "mne.Dipole.plot_locations"]], "save() (mne.dipole method)": [[329, "mne.Dipole.save"]], "time_as_index() (mne.dipole method)": [[329, "mne.Dipole.time_as_index"]], "times (mne.dipole property)": [[329, "mne.Dipole.times"]], "to_mni() (mne.dipole method)": [[329, "mne.Dipole.to_mni"]], "to_mri() (mne.dipole method)": [[329, "mne.Dipole.to_mri"]], "to_volume_labels() (mne.dipole method)": [[329, "mne.Dipole.to_volume_labels"]], "dipolefixed (class in mne)": [[330, "mne.DipoleFixed"]], "ch_names (mne.dipolefixed property)": [[330, "mne.DipoleFixed.ch_names"]], "copy() (mne.dipolefixed method)": [[330, "mne.DipoleFixed.copy"]], "crop() (mne.dipolefixed method)": [[330, "mne.DipoleFixed.crop"]], "decimate() (mne.dipolefixed method)": [[330, "mne.DipoleFixed.decimate"]], "plot() (mne.dipolefixed method)": [[330, "mne.DipoleFixed.plot"]], "save() (mne.dipolefixed method)": [[330, "mne.DipoleFixed.save"]], "shift_time() (mne.dipolefixed method)": [[330, "mne.DipoleFixed.shift_time"]], "time_as_index() (mne.dipolefixed method)": [[330, "mne.DipoleFixed.time_as_index"]], "times (mne.dipolefixed property)": [[330, "mne.DipoleFixed.times"]], "tmax (mne.dipolefixed property)": [[330, "mne.DipoleFixed.tmax"]], "tmin (mne.dipolefixed property)": [[330, "mne.DipoleFixed.tmin"]], "epochs (class in mne)": [[331, "mne.Epochs"]], "__contains__() (mne.epochs method)": [[331, "mne.Epochs.__contains__"]], "__getitem__() (mne.epochs method)": [[331, "mne.Epochs.__getitem__"]], "__iter__() (mne.epochs method)": [[331, "mne.Epochs.__iter__"]], "__len__() (mne.epochs method)": [[331, "mne.Epochs.__len__"]], "add_annotations_to_metadata() (mne.epochs method)": [[331, "mne.Epochs.add_annotations_to_metadata"]], "add_channels() (mne.epochs method)": [[331, "mne.Epochs.add_channels"]], "add_proj() (mne.epochs method)": [[331, "mne.Epochs.add_proj"]], "add_reference_channels() (mne.epochs method)": [[331, "mne.Epochs.add_reference_channels"]], "anonymize() (mne.epochs method)": [[331, "mne.Epochs.anonymize"]], "apply_baseline() (mne.epochs method)": [[331, "mne.Epochs.apply_baseline"]], "apply_function() (mne.epochs method)": [[331, "mne.Epochs.apply_function"]], "apply_hilbert() (mne.epochs method)": [[331, "mne.Epochs.apply_hilbert"]], "apply_proj() (mne.epochs method)": [[331, "mne.Epochs.apply_proj"]], "as_type() (mne.epochs method)": [[331, "mne.Epochs.as_type"]], "average() (mne.epochs method)": [[331, "mne.Epochs.average"]], "ch_names (mne.epochs property)": [[331, "mne.Epochs.ch_names"]], "compensation_grade (mne.epochs property)": [[331, "mne.Epochs.compensation_grade"]], "compute_psd() (mne.epochs method)": [[331, "mne.Epochs.compute_psd"]], "copy() (mne.epochs method)": [[331, "mne.Epochs.copy"]], "crop() (mne.epochs method)": [[331, "mne.Epochs.crop"]], "decimate() (mne.epochs method)": [[331, "mne.Epochs.decimate"]], "del_proj() (mne.epochs method)": [[331, "mne.Epochs.del_proj"]], "drop() (mne.epochs method)": [[331, "mne.Epochs.drop"]], "drop_bad() (mne.epochs method)": [[331, "mne.Epochs.drop_bad"]], "drop_channels() (mne.epochs method)": [[331, "mne.Epochs.drop_channels"]], "drop_log_stats() (mne.epochs method)": [[331, "mne.Epochs.drop_log_stats"]], "equalize_event_counts() (mne.epochs method)": [[331, "mne.Epochs.equalize_event_counts"]], "export() (mne.epochs method)": [[331, "mne.Epochs.export"]], "filename (mne.epochs property)": [[331, "mne.Epochs.filename"]], "filter() (mne.epochs method)": [[331, "mne.Epochs.filter"]], "get_annotations_per_epoch() (mne.epochs method)": [[331, "mne.Epochs.get_annotations_per_epoch"]], "get_channel_types() (mne.epochs method)": [[331, "mne.Epochs.get_channel_types"]], "get_data() (mne.epochs method)": [[331, "mne.Epochs.get_data"]], "get_montage() (mne.epochs method)": [[331, "mne.Epochs.get_montage"]], "interpolate_bads() (mne.epochs method)": [[331, "mne.Epochs.interpolate_bads"]], "iter_evoked() (mne.epochs method)": [[331, "mne.Epochs.iter_evoked"]], "load_data() (mne.epochs method)": [[331, "mne.Epochs.load_data"]], "metadata (mne.epochs property)": [[331, "mne.Epochs.metadata"]], "next() (mne.epochs method)": [[331, "mne.Epochs.next"]], "pick() (mne.epochs method)": [[331, "mne.Epochs.pick"]], "pick_channels() (mne.epochs method)": [[331, "mne.Epochs.pick_channels"]], "pick_types() (mne.epochs method)": [[331, "mne.Epochs.pick_types"]], "plot() (mne.epochs method)": [[331, "mne.Epochs.plot"]], "plot_drop_log() (mne.epochs method)": [[331, "mne.Epochs.plot_drop_log"]], "plot_image() (mne.epochs method)": [[331, "mne.Epochs.plot_image"]], "plot_projs_topomap() (mne.epochs method)": [[331, "mne.Epochs.plot_projs_topomap"]], "plot_psd() (mne.epochs method)": [[331, "mne.Epochs.plot_psd"]], "plot_psd_topo() (mne.epochs method)": [[331, "mne.Epochs.plot_psd_topo"]], "plot_psd_topomap() (mne.epochs method)": [[331, "mne.Epochs.plot_psd_topomap"]], "plot_sensors() (mne.epochs method)": [[331, "mne.Epochs.plot_sensors"]], "plot_topo_image() (mne.epochs method)": [[331, "mne.Epochs.plot_topo_image"]], "proj (mne.epochs property)": [[331, "mne.Epochs.proj"]], "rename_channels() (mne.epochs method)": [[331, "mne.Epochs.rename_channels"]], "reorder_channels() (mne.epochs method)": [[331, "mne.Epochs.reorder_channels"]], "resample() (mne.epochs method)": [[331, "mne.Epochs.resample"]], "reset_drop_log_selection() (mne.epochs method)": [[331, "mne.Epochs.reset_drop_log_selection"]], "save() (mne.epochs method)": [[331, "mne.Epochs.save"]], "savgol_filter() (mne.epochs method)": [[331, "mne.Epochs.savgol_filter"]], "set_annotations() (mne.epochs method)": [[331, "mne.Epochs.set_annotations"]], "set_channel_types() (mne.epochs method)": [[331, "mne.Epochs.set_channel_types"]], "set_eeg_reference() (mne.epochs method)": [[331, "mne.Epochs.set_eeg_reference"]], "set_meas_date() (mne.epochs method)": [[331, "mne.Epochs.set_meas_date"]], "set_montage() (mne.epochs method)": [[331, "mne.Epochs.set_montage"]], "shift_time() (mne.epochs method)": [[331, "mne.Epochs.shift_time"]], "standard_error() (mne.epochs method)": [[331, "mne.Epochs.standard_error"]], "subtract_evoked() (mne.epochs method)": [[331, "mne.Epochs.subtract_evoked"]], "time_as_index() (mne.epochs method)": [[331, "mne.Epochs.time_as_index"]], "times (mne.epochs property)": [[331, "mne.Epochs.times"]], "tmax (mne.epochs property)": [[331, "mne.Epochs.tmax"]], "tmin (mne.epochs property)": [[331, "mne.Epochs.tmin"]], "to_data_frame() (mne.epochs method)": [[331, "mne.Epochs.to_data_frame"]], "epochsarray (class in mne)": [[332, "mne.EpochsArray"]], "__contains__() (mne.epochsarray method)": [[332, "mne.EpochsArray.__contains__"]], "__getitem__() (mne.epochsarray method)": [[332, "mne.EpochsArray.__getitem__"]], "__iter__() (mne.epochsarray method)": [[332, "mne.EpochsArray.__iter__"]], "__len__() (mne.epochsarray method)": [[332, "mne.EpochsArray.__len__"]], "add_annotations_to_metadata() (mne.epochsarray method)": [[332, "mne.EpochsArray.add_annotations_to_metadata"]], "add_channels() (mne.epochsarray method)": [[332, "mne.EpochsArray.add_channels"]], "add_proj() (mne.epochsarray method)": [[332, "mne.EpochsArray.add_proj"]], "add_reference_channels() (mne.epochsarray method)": [[332, "mne.EpochsArray.add_reference_channels"]], "anonymize() (mne.epochsarray method)": [[332, "mne.EpochsArray.anonymize"]], "apply_baseline() (mne.epochsarray method)": [[332, "mne.EpochsArray.apply_baseline"]], "apply_function() (mne.epochsarray method)": [[332, "mne.EpochsArray.apply_function"]], "apply_hilbert() (mne.epochsarray method)": [[332, "mne.EpochsArray.apply_hilbert"]], "apply_proj() (mne.epochsarray method)": [[332, "mne.EpochsArray.apply_proj"]], "as_type() (mne.epochsarray method)": [[332, "mne.EpochsArray.as_type"]], "average() (mne.epochsarray method)": [[332, "mne.EpochsArray.average"]], "ch_names (mne.epochsarray property)": [[332, "mne.EpochsArray.ch_names"]], "compensation_grade (mne.epochsarray property)": [[332, "mne.EpochsArray.compensation_grade"]], "compute_psd() (mne.epochsarray method)": [[332, "mne.EpochsArray.compute_psd"]], "copy() (mne.epochsarray method)": [[332, "mne.EpochsArray.copy"]], "crop() (mne.epochsarray method)": [[332, "mne.EpochsArray.crop"]], "decimate() (mne.epochsarray method)": [[332, "mne.EpochsArray.decimate"]], "del_proj() (mne.epochsarray method)": [[332, "mne.EpochsArray.del_proj"]], "drop() (mne.epochsarray method)": [[332, "mne.EpochsArray.drop"]], "drop_bad() (mne.epochsarray method)": [[332, "mne.EpochsArray.drop_bad"]], "drop_channels() (mne.epochsarray method)": [[332, "mne.EpochsArray.drop_channels"]], "drop_log_stats() (mne.epochsarray method)": [[332, "mne.EpochsArray.drop_log_stats"]], "equalize_event_counts() (mne.epochsarray method)": [[332, "mne.EpochsArray.equalize_event_counts"]], "export() (mne.epochsarray method)": [[332, "mne.EpochsArray.export"]], "filename (mne.epochsarray property)": [[332, "mne.EpochsArray.filename"]], "filter() (mne.epochsarray method)": [[332, "mne.EpochsArray.filter"]], "get_annotations_per_epoch() (mne.epochsarray method)": [[332, "mne.EpochsArray.get_annotations_per_epoch"]], "get_channel_types() (mne.epochsarray method)": [[332, "mne.EpochsArray.get_channel_types"]], "get_data() (mne.epochsarray method)": [[332, "mne.EpochsArray.get_data"]], "get_montage() (mne.epochsarray method)": [[332, "mne.EpochsArray.get_montage"]], "interpolate_bads() (mne.epochsarray method)": [[332, "mne.EpochsArray.interpolate_bads"]], "iter_evoked() (mne.epochsarray method)": [[332, "mne.EpochsArray.iter_evoked"]], "load_data() (mne.epochsarray method)": [[332, "mne.EpochsArray.load_data"]], "metadata (mne.epochsarray property)": [[332, "mne.EpochsArray.metadata"]], "next() (mne.epochsarray method)": [[332, "mne.EpochsArray.next"]], "pick() (mne.epochsarray method)": [[332, "mne.EpochsArray.pick"]], "pick_channels() (mne.epochsarray method)": [[332, "mne.EpochsArray.pick_channels"]], "pick_types() (mne.epochsarray method)": [[332, "mne.EpochsArray.pick_types"]], "plot() (mne.epochsarray method)": [[332, "mne.EpochsArray.plot"]], "plot_drop_log() (mne.epochsarray method)": [[332, "mne.EpochsArray.plot_drop_log"]], "plot_image() (mne.epochsarray method)": [[332, "mne.EpochsArray.plot_image"]], "plot_projs_topomap() (mne.epochsarray method)": [[332, "mne.EpochsArray.plot_projs_topomap"]], "plot_psd() (mne.epochsarray method)": [[332, "mne.EpochsArray.plot_psd"]], "plot_psd_topo() (mne.epochsarray method)": [[332, "mne.EpochsArray.plot_psd_topo"]], "plot_psd_topomap() (mne.epochsarray method)": [[332, "mne.EpochsArray.plot_psd_topomap"]], "plot_sensors() (mne.epochsarray method)": [[332, "mne.EpochsArray.plot_sensors"]], "plot_topo_image() (mne.epochsarray method)": [[332, "mne.EpochsArray.plot_topo_image"]], "proj (mne.epochsarray property)": [[332, "mne.EpochsArray.proj"]], "rename_channels() (mne.epochsarray method)": [[332, "mne.EpochsArray.rename_channels"]], "reorder_channels() (mne.epochsarray method)": [[332, "mne.EpochsArray.reorder_channels"]], "resample() (mne.epochsarray method)": [[332, "mne.EpochsArray.resample"]], "reset_drop_log_selection() (mne.epochsarray method)": [[332, "mne.EpochsArray.reset_drop_log_selection"]], "save() (mne.epochsarray method)": [[332, "mne.EpochsArray.save"]], "savgol_filter() (mne.epochsarray method)": [[332, "mne.EpochsArray.savgol_filter"]], "set_annotations() (mne.epochsarray method)": [[332, "mne.EpochsArray.set_annotations"]], "set_channel_types() (mne.epochsarray method)": [[332, "mne.EpochsArray.set_channel_types"]], "set_eeg_reference() (mne.epochsarray method)": [[332, "mne.EpochsArray.set_eeg_reference"]], "set_meas_date() (mne.epochsarray method)": [[332, "mne.EpochsArray.set_meas_date"]], "set_montage() (mne.epochsarray method)": [[332, "mne.EpochsArray.set_montage"]], "shift_time() (mne.epochsarray method)": [[332, "mne.EpochsArray.shift_time"]], "standard_error() (mne.epochsarray method)": [[332, "mne.EpochsArray.standard_error"]], "subtract_evoked() (mne.epochsarray method)": [[332, "mne.EpochsArray.subtract_evoked"]], "time_as_index() (mne.epochsarray method)": [[332, "mne.EpochsArray.time_as_index"]], "times (mne.epochsarray property)": [[332, "mne.EpochsArray.times"]], "tmax (mne.epochsarray property)": [[332, "mne.EpochsArray.tmax"]], "tmin (mne.epochsarray property)": [[332, "mne.EpochsArray.tmin"]], "to_data_frame() (mne.epochsarray method)": [[332, "mne.EpochsArray.to_data_frame"]], "evoked (class in mne)": [[333, "mne.Evoked"]], "__contains__() (mne.evoked method)": [[333, "mne.Evoked.__contains__"]], "__neg__() (mne.evoked method)": [[333, "mne.Evoked.__neg__"]], "add_channels() (mne.evoked method)": [[333, "mne.Evoked.add_channels"]], "add_proj() (mne.evoked method)": [[333, "mne.Evoked.add_proj"]], "add_reference_channels() (mne.evoked method)": [[333, "mne.Evoked.add_reference_channels"]], "animate_topomap() (mne.evoked method)": [[333, "mne.Evoked.animate_topomap"]], "anonymize() (mne.evoked method)": [[333, "mne.Evoked.anonymize"]], "apply_baseline() (mne.evoked method)": [[333, "mne.Evoked.apply_baseline"]], "apply_function() (mne.evoked method)": [[333, "mne.Evoked.apply_function"]], "apply_hilbert() (mne.evoked method)": [[333, "mne.Evoked.apply_hilbert"]], "apply_proj() (mne.evoked method)": [[333, "mne.Evoked.apply_proj"]], "as_type() (mne.evoked method)": [[333, "mne.Evoked.as_type"]], "ch_names (mne.evoked property)": [[333, "mne.Evoked.ch_names"]], "compensation_grade (mne.evoked property)": [[333, "mne.Evoked.compensation_grade"]], "compute_psd() (mne.evoked method)": [[333, "mne.Evoked.compute_psd"]], "copy() (mne.evoked method)": [[333, "mne.Evoked.copy"]], "crop() (mne.evoked method)": [[333, "mne.Evoked.crop"]], "data (mne.evoked property)": [[333, "mne.Evoked.data"]], "decimate() (mne.evoked method)": [[333, "mne.Evoked.decimate"]], "del_proj() (mne.evoked method)": [[333, "mne.Evoked.del_proj"]], "detrend() (mne.evoked method)": [[333, "mne.Evoked.detrend"]], "drop_channels() (mne.evoked method)": [[333, "mne.Evoked.drop_channels"]], "export() (mne.evoked method)": [[333, "mne.Evoked.export"]], "filter() (mne.evoked method)": [[333, "mne.Evoked.filter"]], "get_channel_types() (mne.evoked method)": [[333, "mne.Evoked.get_channel_types"]], "get_data() (mne.evoked method)": [[333, "mne.Evoked.get_data"]], "get_montage() (mne.evoked method)": [[333, "mne.Evoked.get_montage"]], "get_peak() (mne.evoked method)": [[333, "mne.Evoked.get_peak"]], "interpolate_bads() (mne.evoked method)": [[333, "mne.Evoked.interpolate_bads"]], "kind (mne.evoked property)": [[333, "mne.Evoked.kind"]], "pick() (mne.evoked method)": [[333, "mne.Evoked.pick"]], "pick_channels() (mne.evoked method)": [[333, "mne.Evoked.pick_channels"]], "pick_types() (mne.evoked method)": [[333, "mne.Evoked.pick_types"]], "plot() (mne.evoked method)": [[333, "mne.Evoked.plot"]], "plot_field() (mne.evoked method)": [[333, "mne.Evoked.plot_field"]], "plot_image() (mne.evoked method)": [[333, "mne.Evoked.plot_image"]], "plot_joint() (mne.evoked method)": [[333, "mne.Evoked.plot_joint"]], "plot_projs_topomap() (mne.evoked method)": [[333, "mne.Evoked.plot_projs_topomap"]], "plot_psd() (mne.evoked method)": [[333, "mne.Evoked.plot_psd"]], "plot_psd_topo() (mne.evoked method)": [[333, "mne.Evoked.plot_psd_topo"]], "plot_psd_topomap() (mne.evoked method)": [[333, "mne.Evoked.plot_psd_topomap"]], "plot_sensors() (mne.evoked method)": [[333, "mne.Evoked.plot_sensors"]], "plot_topo() (mne.evoked method)": [[333, "mne.Evoked.plot_topo"]], "plot_topomap() (mne.evoked method)": [[333, "mne.Evoked.plot_topomap"]], "plot_white() (mne.evoked method)": [[333, "mne.Evoked.plot_white"]], "proj (mne.evoked property)": [[333, "mne.Evoked.proj"]], "rename_channels() (mne.evoked method)": [[333, "mne.Evoked.rename_channels"]], "reorder_channels() (mne.evoked method)": [[333, "mne.Evoked.reorder_channels"]], "resample() (mne.evoked method)": [[333, "mne.Evoked.resample"]], "save() (mne.evoked method)": [[333, "mne.Evoked.save"]], "savgol_filter() (mne.evoked method)": [[333, "mne.Evoked.savgol_filter"]], "set_channel_types() (mne.evoked method)": [[333, "mne.Evoked.set_channel_types"]], "set_eeg_reference() (mne.evoked method)": [[333, "mne.Evoked.set_eeg_reference"]], "set_meas_date() (mne.evoked method)": [[333, "mne.Evoked.set_meas_date"]], "set_montage() (mne.evoked method)": [[333, "mne.Evoked.set_montage"]], "shift_time() (mne.evoked method)": [[333, "mne.Evoked.shift_time"]], "time_as_index() (mne.evoked method)": [[333, "mne.Evoked.time_as_index"]], "times (mne.evoked property)": [[333, "mne.Evoked.times"]], "tmax (mne.evoked property)": [[333, "mne.Evoked.tmax"]], "tmin (mne.evoked property)": [[333, "mne.Evoked.tmin"]], "to_data_frame() (mne.evoked method)": [[333, "mne.Evoked.to_data_frame"]], "evokedarray (class in mne)": [[334, "mne.EvokedArray"]], "__contains__() (mne.evokedarray method)": [[334, "mne.EvokedArray.__contains__"]], "__neg__() (mne.evokedarray method)": [[334, "mne.EvokedArray.__neg__"]], "add_channels() (mne.evokedarray method)": [[334, "mne.EvokedArray.add_channels"]], "add_proj() (mne.evokedarray method)": [[334, "mne.EvokedArray.add_proj"]], "add_reference_channels() (mne.evokedarray method)": [[334, "mne.EvokedArray.add_reference_channels"]], "animate_topomap() (mne.evokedarray method)": [[334, "mne.EvokedArray.animate_topomap"]], "anonymize() (mne.evokedarray method)": [[334, "mne.EvokedArray.anonymize"]], "apply_baseline() (mne.evokedarray method)": [[334, "mne.EvokedArray.apply_baseline"]], "apply_function() (mne.evokedarray method)": [[334, "mne.EvokedArray.apply_function"]], "apply_hilbert() (mne.evokedarray method)": [[334, "mne.EvokedArray.apply_hilbert"]], "apply_proj() (mne.evokedarray method)": [[334, "mne.EvokedArray.apply_proj"]], "as_type() (mne.evokedarray method)": [[334, "mne.EvokedArray.as_type"]], "ch_names (mne.evokedarray property)": [[334, "mne.EvokedArray.ch_names"]], "compensation_grade (mne.evokedarray property)": [[334, "mne.EvokedArray.compensation_grade"]], "compute_psd() (mne.evokedarray method)": [[334, "mne.EvokedArray.compute_psd"]], "copy() (mne.evokedarray method)": [[334, "mne.EvokedArray.copy"]], "crop() (mne.evokedarray method)": [[334, "mne.EvokedArray.crop"]], "data (mne.evokedarray property)": [[334, "mne.EvokedArray.data"]], "decimate() (mne.evokedarray method)": [[334, "mne.EvokedArray.decimate"]], "del_proj() (mne.evokedarray method)": [[334, "mne.EvokedArray.del_proj"]], "detrend() (mne.evokedarray method)": [[334, "mne.EvokedArray.detrend"]], "drop_channels() (mne.evokedarray method)": [[334, "mne.EvokedArray.drop_channels"]], "export() (mne.evokedarray method)": [[334, "mne.EvokedArray.export"]], "filter() (mne.evokedarray method)": [[334, "mne.EvokedArray.filter"]], "get_channel_types() (mne.evokedarray method)": [[334, "mne.EvokedArray.get_channel_types"]], "get_data() (mne.evokedarray method)": [[334, "mne.EvokedArray.get_data"]], "get_montage() (mne.evokedarray method)": [[334, "mne.EvokedArray.get_montage"]], "get_peak() (mne.evokedarray method)": [[334, "mne.EvokedArray.get_peak"]], "interpolate_bads() (mne.evokedarray method)": [[334, "mne.EvokedArray.interpolate_bads"]], "kind (mne.evokedarray property)": [[334, "mne.EvokedArray.kind"]], "pick() (mne.evokedarray method)": [[334, "mne.EvokedArray.pick"]], "pick_channels() (mne.evokedarray method)": [[334, "mne.EvokedArray.pick_channels"]], "pick_types() (mne.evokedarray method)": [[334, "mne.EvokedArray.pick_types"]], "plot() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot"]], "plot_field() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_field"]], "plot_image() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_image"]], "plot_joint() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_joint"]], "plot_projs_topomap() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_projs_topomap"]], "plot_psd() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_psd"]], "plot_psd_topo() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_psd_topo"]], "plot_psd_topomap() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_psd_topomap"]], "plot_sensors() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_sensors"]], "plot_topo() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_topo"]], "plot_topomap() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_topomap"]], "plot_white() (mne.evokedarray method)": [[334, "mne.EvokedArray.plot_white"]], "proj (mne.evokedarray property)": [[334, "mne.EvokedArray.proj"]], "rename_channels() (mne.evokedarray method)": [[334, "mne.EvokedArray.rename_channels"]], "reorder_channels() (mne.evokedarray method)": [[334, "mne.EvokedArray.reorder_channels"]], "resample() (mne.evokedarray method)": [[334, "mne.EvokedArray.resample"]], "save() (mne.evokedarray method)": [[334, "mne.EvokedArray.save"]], "savgol_filter() (mne.evokedarray method)": [[334, "mne.EvokedArray.savgol_filter"]], "set_channel_types() (mne.evokedarray method)": [[334, "mne.EvokedArray.set_channel_types"]], "set_eeg_reference() (mne.evokedarray method)": [[334, "mne.EvokedArray.set_eeg_reference"]], "set_meas_date() (mne.evokedarray method)": [[334, "mne.EvokedArray.set_meas_date"]], "set_montage() (mne.evokedarray method)": [[334, "mne.EvokedArray.set_montage"]], "shift_time() (mne.evokedarray method)": [[334, "mne.EvokedArray.shift_time"]], "time_as_index() (mne.evokedarray method)": [[334, "mne.EvokedArray.time_as_index"]], "times (mne.evokedarray property)": [[334, "mne.EvokedArray.times"]], "tmax (mne.evokedarray property)": [[334, "mne.EvokedArray.tmax"]], "tmin (mne.evokedarray property)": [[334, "mne.EvokedArray.tmin"]], "to_data_frame() (mne.evokedarray method)": [[334, "mne.EvokedArray.to_data_frame"]], "forward (class in mne)": [[335, "mne.Forward"]], "copy() (mne.forward method)": [[335, "mne.Forward.copy"]], "pick_channels() (mne.forward method)": [[335, "mne.Forward.pick_channels"]], "save() (mne.forward method)": [[335, "mne.Forward.save"]], "info (class in mne)": [[336, "mne.Info"]], "__contains__() (mne.info method)": [[336, "mne.Info.__contains__"]], "__getitem__() (mne.info method)": [[336, "mne.Info.__getitem__"]], "__iter__() (mne.info method)": [[336, "mne.Info.__iter__"]], "__len__() (mne.info method)": [[336, "mne.Info.__len__"]], "anonymize() (mne.info method)": [[336, "mne.Info.anonymize"]], "clear() (mne.info method)": [[336, "mne.Info.clear"]], "compensation_grade (mne.info property)": [[336, "mne.Info.compensation_grade"]], "copy() (mne.info method)": [[336, "mne.Info.copy"]], "fromkeys() (mne.info method)": [[336, "mne.Info.fromkeys"]], "get() (mne.info method)": [[336, "mne.Info.get"]], "get_channel_types() (mne.info method)": [[336, "mne.Info.get_channel_types"]], "get_montage() (mne.info method)": [[336, "mne.Info.get_montage"]], "items() (mne.info method)": [[336, "mne.Info.items"]], "keys() (mne.info method)": [[336, "mne.Info.keys"]], "normalize_proj() (mne.info method)": [[336, "mne.Info.normalize_proj"]], "plot_sensors() (mne.info method)": [[336, "mne.Info.plot_sensors"]], "pop() (mne.info method)": [[336, "mne.Info.pop"]], "popitem() (mne.info method)": [[336, "mne.Info.popitem"]], "rename_channels() (mne.info method)": [[336, "mne.Info.rename_channels"]], "save() (mne.info method)": [[336, "mne.Info.save"]], "set_channel_types() (mne.info method)": [[336, "mne.Info.set_channel_types"]], "set_meas_date() (mne.info method)": [[336, "mne.Info.set_meas_date"]], "set_montage() (mne.info method)": [[336, "mne.Info.set_montage"]], "setdefault() (mne.info method)": [[336, "mne.Info.setdefault"]], "update() (mne.info method)": [[336, "mne.Info.update"]], "values() (mne.info method)": [[336, "mne.Info.values"]], "label (class in mne)": [[337, "mne.Label"]], "__add__() (mne.label method)": [[337, "mne.Label.__add__"]], "__len__() (mne.label method)": [[337, "mne.Label.__len__"]], "__sub__() (mne.label method)": [[337, "mne.Label.__sub__"]], "center_of_mass() (mne.label method)": [[337, "mne.Label.center_of_mass"]], "compute_area() (mne.label method)": [[337, "mne.Label.compute_area"]], "copy() (mne.label method)": [[337, "mne.Label.copy"]], "distances_to_outside() (mne.label method)": [[337, "mne.Label.distances_to_outside"]], "fill() (mne.label method)": [[337, "mne.Label.fill"]], "get_tris() (mne.label method)": [[337, "mne.Label.get_tris"]], "get_vertices_used() (mne.label method)": [[337, "mne.Label.get_vertices_used"]], "morph() (mne.label method)": [[337, "mne.Label.morph"]], "restrict() (mne.label method)": [[337, "mne.Label.restrict"]], "save() (mne.label method)": [[337, "mne.Label.save"]], "smooth() (mne.label method)": [[337, "mne.Label.smooth"]], "split() (mne.label method)": [[337, "mne.Label.split"]], "mixedsourceestimate (class in mne)": [[338, "mne.MixedSourceEstimate"]], "__add__() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.__add__"]], "__div__() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.__div__"]], "__mul__() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.__mul__"]], "__neg__() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.__neg__"]], "__sub__() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.apply_baseline"]], "bin() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.bin"]], "copy() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.copy"]], "crop() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.crop"]], "data (mne.mixedsourceestimate property)": [[338, "mne.MixedSourceEstimate.data"]], "extract_label_time_course() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.get_peak"]], "mean() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.mean"]], "plot() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.plot"]], "resample() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.resample"]], "save() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.save"]], "sfreq (mne.mixedsourceestimate property)": [[338, "mne.MixedSourceEstimate.sfreq"]], "shape (mne.mixedsourceestimate property)": [[338, "mne.MixedSourceEstimate.shape"]], "sqrt() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.sqrt"]], "sum() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.sum"]], "surface() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.surface"]], "time_as_index() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.time_as_index"]], "times (mne.mixedsourceestimate property)": [[338, "mne.MixedSourceEstimate.times"]], "tmin (mne.mixedsourceestimate property)": [[338, "mne.MixedSourceEstimate.tmin"]], "to_data_frame() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.to_data_frame"]], "transform() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.transform"]], "transform_data() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.transform_data"]], "tstep (mne.mixedsourceestimate property)": [[338, "mne.MixedSourceEstimate.tstep"]], "volume() (mne.mixedsourceestimate method)": [[338, "mne.MixedSourceEstimate.volume"]], "mixedvectorsourceestimate (class in mne)": [[339, "mne.MixedVectorSourceEstimate"]], "__add__() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.__add__"]], "__div__() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.__div__"]], "__mul__() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.__mul__"]], "__neg__() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.__neg__"]], "__sub__() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.apply_baseline"]], "bin() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.bin"]], "copy() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.copy"]], "crop() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.crop"]], "data (mne.mixedvectorsourceestimate property)": [[339, "mne.MixedVectorSourceEstimate.data"]], "extract_label_time_course() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.get_peak"]], "magnitude() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.magnitude"]], "mean() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.mean"]], "plot() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.plot"]], "project() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.project"]], "resample() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.resample"]], "save() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.save"]], "sfreq (mne.mixedvectorsourceestimate property)": [[339, "mne.MixedVectorSourceEstimate.sfreq"]], "shape (mne.mixedvectorsourceestimate property)": [[339, "mne.MixedVectorSourceEstimate.shape"]], "sqrt() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.sqrt"]], "sum() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.sum"]], "surface() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.surface"]], "time_as_index() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.time_as_index"]], "times (mne.mixedvectorsourceestimate property)": [[339, "mne.MixedVectorSourceEstimate.times"]], "tmin (mne.mixedvectorsourceestimate property)": [[339, "mne.MixedVectorSourceEstimate.tmin"]], "to_data_frame() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.to_data_frame"]], "transform() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.transform"]], "transform_data() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.transform_data"]], "tstep (mne.mixedvectorsourceestimate property)": [[339, "mne.MixedVectorSourceEstimate.tstep"]], "volume() (mne.mixedvectorsourceestimate method)": [[339, "mne.MixedVectorSourceEstimate.volume"]], "projection (class in mne)": [[340, "mne.Projection"]], "plot_topomap() (mne.projection method)": [[340, "mne.Projection.plot_topomap"]], "report (class in mne)": [[341, "mne.Report"]], "__len__() (mne.report method)": [[341, "mne.Report.__len__"]], "add_bem() (mne.report method)": [[341, "mne.Report.add_bem"]], "add_code() (mne.report method)": [[341, "mne.Report.add_code"]], "add_covariance() (mne.report method)": [[341, "mne.Report.add_covariance"]], "add_custom_css() (mne.report method)": [[341, "mne.Report.add_custom_css"]], "add_custom_js() (mne.report method)": [[341, "mne.Report.add_custom_js"]], "add_epochs() (mne.report method)": [[341, "mne.Report.add_epochs"]], "add_events() (mne.report method)": [[341, "mne.Report.add_events"]], "add_evokeds() (mne.report method)": [[341, "mne.Report.add_evokeds"]], "add_figure() (mne.report method)": [[341, "mne.Report.add_figure"]], "add_forward() (mne.report method)": [[341, "mne.Report.add_forward"]], "add_html() (mne.report method)": [[341, "mne.Report.add_html"]], "add_ica() (mne.report method)": [[341, "mne.Report.add_ica"]], "add_image() (mne.report method)": [[341, "mne.Report.add_image"]], "add_inverse_operator() (mne.report method)": [[341, "mne.Report.add_inverse_operator"]], "add_projs() (mne.report method)": [[341, "mne.Report.add_projs"]], "add_raw() (mne.report method)": [[341, "mne.Report.add_raw"]], "add_stc() (mne.report method)": [[341, "mne.Report.add_stc"]], "add_sys_info() (mne.report method)": [[341, "mne.Report.add_sys_info"]], "add_trans() (mne.report method)": [[341, "mne.Report.add_trans"]], "html (mne.report property)": [[341, "mne.Report.html"]], "parse_folder() (mne.report method)": [[341, "mne.Report.parse_folder"]], "remove() (mne.report method)": [[341, "mne.Report.remove"]], "save() (mne.report method)": [[341, "mne.Report.save"]], "tags (mne.report property)": [[341, "mne.Report.tags"]], "sourceestimate (class in mne)": [[342, "mne.SourceEstimate"]], "__add__() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.__add__"]], "__div__() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.__div__"]], "__mul__() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.__mul__"]], "__neg__() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.__neg__"]], "__sub__() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.__sub__"]], "apply_baseline() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.apply_baseline"]], "bin() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.bin"]], "center_of_mass() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.center_of_mass"]], "copy() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.copy"]], "crop() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.crop"]], "data (mne.sourceestimate property)": [[342, "mne.SourceEstimate.data"]], "estimate_snr() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.estimate_snr"]], "expand() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.expand"]], "extract_label_time_course() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.extract_label_time_course"]], "get_peak() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.get_peak"]], "in_label() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.in_label"]], "lh_data (mne.sourceestimate property)": [[342, "mne.SourceEstimate.lh_data"]], "lh_vertno (mne.sourceestimate property)": [[342, "mne.SourceEstimate.lh_vertno"]], "mean() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.mean"]], "plot() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.plot"]], "resample() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.resample"]], "rh_data (mne.sourceestimate property)": [[342, "mne.SourceEstimate.rh_data"]], "rh_vertno (mne.sourceestimate property)": [[342, "mne.SourceEstimate.rh_vertno"]], "save() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.save"]], "sfreq (mne.sourceestimate property)": [[342, "mne.SourceEstimate.sfreq"]], "shape (mne.sourceestimate property)": [[342, "mne.SourceEstimate.shape"]], "sqrt() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.sqrt"]], "sum() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.sum"]], "time_as_index() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.time_as_index"]], "times (mne.sourceestimate property)": [[342, "mne.SourceEstimate.times"]], "tmin (mne.sourceestimate property)": [[342, "mne.SourceEstimate.tmin"]], "to_data_frame() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.to_data_frame"]], "to_original_src() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.to_original_src"]], "transform() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.transform"]], "transform_data() (mne.sourceestimate method)": [[342, "mne.SourceEstimate.transform_data"]], "tstep (mne.sourceestimate property)": [[342, "mne.SourceEstimate.tstep"]], "sourcemorph (class in mne)": [[343, "mne.SourceMorph"]], "apply() (mne.sourcemorph method)": [[343, "mne.SourceMorph.apply"]], "compute_vol_morph_mat() (mne.sourcemorph method)": [[343, "mne.SourceMorph.compute_vol_morph_mat"]], "save() (mne.sourcemorph method)": [[343, "mne.SourceMorph.save"]], "sourcespaces (class in mne)": [[344, "mne.SourceSpaces"]], "__add__() (mne.sourcespaces method)": [[344, "mne.SourceSpaces.__add__"]], "__getitem__() (mne.sourcespaces method)": [[344, "mne.SourceSpaces.__getitem__"]], "copy() (mne.sourcespaces method)": [[344, "mne.SourceSpaces.copy"]], "export_volume() (mne.sourcespaces method)": [[344, "mne.SourceSpaces.export_volume"]], "plot() (mne.sourcespaces method)": [[344, "mne.SourceSpaces.plot"]], "save() (mne.sourcespaces method)": [[344, "mne.SourceSpaces.save"]], "vectorsourceestimate (class in mne)": [[345, "mne.VectorSourceEstimate"]], "__add__() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.__add__"]], "__div__() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.__div__"]], "__mul__() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.__mul__"]], "__neg__() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.__neg__"]], "__sub__() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.__sub__"]], "apply_baseline() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.apply_baseline"]], "bin() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.bin"]], "copy() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.copy"]], "crop() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.crop"]], "data (mne.vectorsourceestimate property)": [[345, "mne.VectorSourceEstimate.data"]], "expand() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.expand"]], "extract_label_time_course() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.get_peak"]], "in_label() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.in_label"]], "lh_data (mne.vectorsourceestimate property)": [[345, "mne.VectorSourceEstimate.lh_data"]], "lh_vertno (mne.vectorsourceestimate property)": [[345, "mne.VectorSourceEstimate.lh_vertno"]], "magnitude() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.magnitude"]], "mean() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.mean"]], "plot() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.plot"]], "project() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.project"]], "resample() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.resample"]], "rh_data (mne.vectorsourceestimate property)": [[345, "mne.VectorSourceEstimate.rh_data"]], "rh_vertno (mne.vectorsourceestimate property)": [[345, "mne.VectorSourceEstimate.rh_vertno"]], "save() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.save"]], "sfreq (mne.vectorsourceestimate property)": [[345, "mne.VectorSourceEstimate.sfreq"]], "shape (mne.vectorsourceestimate property)": [[345, "mne.VectorSourceEstimate.shape"]], "sqrt() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.sqrt"]], "sum() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.sum"]], "time_as_index() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.time_as_index"]], "times (mne.vectorsourceestimate property)": [[345, "mne.VectorSourceEstimate.times"]], "tmin (mne.vectorsourceestimate property)": [[345, "mne.VectorSourceEstimate.tmin"]], "to_data_frame() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.to_data_frame"]], "to_original_src() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.to_original_src"]], "transform() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.transform"]], "transform_data() (mne.vectorsourceestimate method)": [[345, "mne.VectorSourceEstimate.transform_data"]], "tstep (mne.vectorsourceestimate property)": [[345, "mne.VectorSourceEstimate.tstep"]], "volsourceestimate (class in mne)": [[346, "mne.VolSourceEstimate"]], "__add__() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.__add__"]], "__div__() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.__div__"]], "__mul__() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.__mul__"]], "__neg__() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.__neg__"]], "__sub__() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.__sub__"]], "apply_baseline() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.apply_baseline"]], "as_volume() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.as_volume"]], "bin() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.bin"]], "copy() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.copy"]], "crop() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.crop"]], "data (mne.volsourceestimate property)": [[346, "mne.VolSourceEstimate.data"]], "extract_label_time_course() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.get_peak"]], "in_label() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.in_label"]], "mean() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.mean"]], "plot() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.plot"]], "plot_3d() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.plot_3d"]], "resample() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.resample"]], "save() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.save"]], "save_as_volume() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.save_as_volume"]], "sfreq (mne.volsourceestimate property)": [[346, "mne.VolSourceEstimate.sfreq"]], "shape (mne.volsourceestimate property)": [[346, "mne.VolSourceEstimate.shape"]], "sqrt() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.sqrt"]], "sum() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.sum"]], "time_as_index() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.time_as_index"]], "times (mne.volsourceestimate property)": [[346, "mne.VolSourceEstimate.times"]], "tmin (mne.volsourceestimate property)": [[346, "mne.VolSourceEstimate.tmin"]], "to_data_frame() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.to_data_frame"]], "transform() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.transform"]], "transform_data() (mne.volsourceestimate method)": [[346, "mne.VolSourceEstimate.transform_data"]], "tstep (mne.volsourceestimate property)": [[346, "mne.VolSourceEstimate.tstep"]], "volvectorsourceestimate (class in mne)": [[347, "mne.VolVectorSourceEstimate"]], "__add__() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.__add__"]], "__div__() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.__div__"]], "__mul__() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.__mul__"]], "__neg__() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.__neg__"]], "__sub__() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.apply_baseline"]], "as_volume() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.as_volume"]], "bin() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.bin"]], "copy() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.copy"]], "crop() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.crop"]], "data (mne.volvectorsourceestimate property)": [[347, "mne.VolVectorSourceEstimate.data"]], "extract_label_time_course() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.get_peak"]], "in_label() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.in_label"]], "magnitude() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.magnitude"]], "mean() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.mean"]], "plot() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.plot"]], "plot_3d() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.plot_3d"]], "project() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.project"]], "resample() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.resample"]], "save() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.save"]], "save_as_volume() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.save_as_volume"]], "sfreq (mne.volvectorsourceestimate property)": [[347, "mne.VolVectorSourceEstimate.sfreq"]], "shape (mne.volvectorsourceestimate property)": [[347, "mne.VolVectorSourceEstimate.shape"]], "sqrt() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.sqrt"]], "sum() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.sum"]], "time_as_index() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.time_as_index"]], "times (mne.volvectorsourceestimate property)": [[347, "mne.VolVectorSourceEstimate.times"]], "tmin (mne.volvectorsourceestimate property)": [[347, "mne.VolVectorSourceEstimate.tmin"]], "to_data_frame() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.to_data_frame"]], "transform() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.transform"]], "transform_data() (mne.volvectorsourceestimate method)": [[347, "mne.VolVectorSourceEstimate.transform_data"]], "tstep (mne.volvectorsourceestimate property)": [[347, "mne.VolVectorSourceEstimate.tstep"]], "add_reference_channels() (in module mne)": [[348, "mne.add_reference_channels"]], "add_source_space_distances() (in module mne)": [[349, "mne.add_source_space_distances"]], "annotations_from_events() (in module mne)": [[350, "mne.annotations_from_events"]], "apply_forward() (in module mne)": [[351, "mne.apply_forward"]], "apply_forward_raw() (in module mne)": [[352, "mne.apply_forward_raw"]], "average_forward_solutions() (in module mne)": [[353, "mne.average_forward_solutions"]], "rescale() (in module mne.baseline)": [[354, "mne.baseline.rescale"]], "beamformer (class in mne.beamformer)": [[355, "mne.beamformer.Beamformer"]], "__contains__() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.__contains__"]], "__getitem__() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.__getitem__"]], "__iter__() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.__iter__"]], "__len__() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.__len__"]], "clear() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.clear"]], "copy() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.copy"]], "fromkeys() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.fromkeys"]], "get() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.get"]], "items() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.items"]], "keys() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.keys"]], "pop() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.pop"]], "popitem() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.popitem"]], "save() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.save"]], "setdefault() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.setdefault"]], "update() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.update"]], "values() (mne.beamformer.beamformer method)": [[355, "mne.beamformer.Beamformer.values"]], "apply_dics() (in module mne.beamformer)": [[356, "mne.beamformer.apply_dics"]], "apply_dics_csd() (in module mne.beamformer)": [[357, "mne.beamformer.apply_dics_csd"]], "apply_dics_epochs() (in module mne.beamformer)": [[358, "mne.beamformer.apply_dics_epochs"]], "apply_dics_tfr_epochs() (in module mne.beamformer)": [[359, "mne.beamformer.apply_dics_tfr_epochs"]], "apply_lcmv() (in module mne.beamformer)": [[360, "mne.beamformer.apply_lcmv"]], "apply_lcmv_cov() (in module mne.beamformer)": [[361, "mne.beamformer.apply_lcmv_cov"]], "apply_lcmv_epochs() (in module mne.beamformer)": [[362, "mne.beamformer.apply_lcmv_epochs"]], "apply_lcmv_raw() (in module mne.beamformer)": [[363, "mne.beamformer.apply_lcmv_raw"]], "make_dics() (in module mne.beamformer)": [[364, "mne.beamformer.make_dics"]], "make_lcmv() (in module mne.beamformer)": [[365, "mne.beamformer.make_lcmv"]], "make_lcmv_resolution_matrix() (in module mne.beamformer)": [[366, "mne.beamformer.make_lcmv_resolution_matrix"]], "rap_music() (in module mne.beamformer)": [[367, "mne.beamformer.rap_music"]], "read_beamformer() (in module mne.beamformer)": [[368, "mne.beamformer.read_beamformer"]], "trap_music() (in module mne.beamformer)": [[369, "mne.beamformer.trap_music"]], "conductormodel (class in mne.bem)": [[370, "mne.bem.ConductorModel"]], "__contains__() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.__contains__"]], "__getitem__() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.__getitem__"]], "__iter__() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.__iter__"]], "__len__() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.__len__"]], "clear() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.clear"]], "copy() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.copy"]], "fromkeys() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.fromkeys"]], "get() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.get"]], "items() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.items"]], "keys() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.keys"]], "pop() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.pop"]], "popitem() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.popitem"]], "radius (mne.bem.conductormodel property)": [[370, "mne.bem.ConductorModel.radius"]], "setdefault() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.setdefault"]], "update() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.update"]], "values() (mne.bem.conductormodel method)": [[370, "mne.bem.ConductorModel.values"]], "convert_flash_mris() (in module mne.bem)": [[371, "mne.bem.convert_flash_mris"]], "distance_to_bem() (in module mne.bem)": [[372, "mne.bem.distance_to_bem"]], "fit_sphere_to_headshape() (in module mne.bem)": [[373, "mne.bem.fit_sphere_to_headshape"]], "get_fitting_dig() (in module mne.bem)": [[374, "mne.bem.get_fitting_dig"]], "make_flash_bem() (in module mne.bem)": [[375, "mne.bem.make_flash_bem"]], "make_scalp_surfaces() (in module mne.bem)": [[376, "mne.bem.make_scalp_surfaces"]], "make_watershed_bem() (in module mne.bem)": [[377, "mne.bem.make_watershed_bem"]], "channel_indices_by_type() (in module mne)": [[378, "mne.channel_indices_by_type"]], "channel_type() (in module mne)": [[379, "mne.channel_type"]], "digmontage (class in mne.channels)": [[380, "mne.channels.DigMontage"]], "__add__() (mne.channels.digmontage method)": [[380, "mne.channels.DigMontage.__add__"]], "add_estimated_fiducials() (mne.channels.digmontage method)": [[380, "mne.channels.DigMontage.add_estimated_fiducials"]], "add_mni_fiducials() (mne.channels.digmontage method)": [[380, "mne.channels.DigMontage.add_mni_fiducials"]], "apply_trans() (mne.channels.digmontage method)": [[380, "mne.channels.DigMontage.apply_trans"]], "copy() (mne.channels.digmontage method)": [[380, "mne.channels.DigMontage.copy"]], "get_positions() (mne.channels.digmontage method)": [[380, "mne.channels.DigMontage.get_positions"]], "plot() (mne.channels.digmontage method)": [[380, "mne.channels.DigMontage.plot"]], "remove_fiducials() (mne.channels.digmontage method)": [[380, "mne.channels.DigMontage.remove_fiducials"]], "rename_channels() (mne.channels.digmontage method)": [[380, "mne.channels.DigMontage.rename_channels"]], "save() (mne.channels.digmontage method)": [[380, "mne.channels.DigMontage.save"]], "layout (class in mne.channels)": [[381, "mne.channels.Layout"]], "plot() (mne.channels.layout method)": [[381, "mne.channels.Layout.plot"]], "save() (mne.channels.layout method)": [[381, "mne.channels.Layout.save"]], "combine_channels() (in module mne.channels)": [[382, "mne.channels.combine_channels"]], "compute_dev_head_t() (in module mne.channels)": [[383, "mne.channels.compute_dev_head_t"]], "compute_native_head_t() (in module mne.channels)": [[384, "mne.channels.compute_native_head_t"]], "equalize_channels() (in module mne.channels)": [[385, "mne.channels.equalize_channels"]], "find_ch_adjacency() (in module mne.channels)": [[386, "mne.channels.find_ch_adjacency"]], "find_layout() (in module mne.channels)": [[387, "mne.channels.find_layout"]], "fix_mag_coil_types() (in module mne.channels)": [[388, "mne.channels.fix_mag_coil_types"]], "generate_2d_layout() (in module mne.channels)": [[389, "mne.channels.generate_2d_layout"]], "get_builtin_ch_adjacencies() (in module mne.channels)": [[390, "mne.channels.get_builtin_ch_adjacencies"]], "get_builtin_montages() (in module mne.channels)": [[391, "mne.channels.get_builtin_montages"]], "make_1020_channel_selections() (in module mne.channels)": [[392, "mne.channels.make_1020_channel_selections"]], "make_dig_montage() (in module mne.channels)": [[393, "mne.channels.make_dig_montage"]], "make_eeg_layout() (in module mne.channels)": [[394, "mne.channels.make_eeg_layout"]], "make_grid_layout() (in module mne.channels)": [[395, "mne.channels.make_grid_layout"]], "make_standard_montage() (in module mne.channels)": [[396, "mne.channels.make_standard_montage"]], "read_ch_adjacency() (in module mne.channels)": [[397, "mne.channels.read_ch_adjacency"]], "read_custom_montage() (in module mne.channels)": [[398, "mne.channels.read_custom_montage"]], "read_dig_captrak() (in module mne.channels)": [[399, "mne.channels.read_dig_captrak"]], "read_dig_dat() (in module mne.channels)": [[400, "mne.channels.read_dig_dat"]], "read_dig_egi() (in module mne.channels)": [[401, "mne.channels.read_dig_egi"]], "read_dig_fif() (in module mne.channels)": [[402, "mne.channels.read_dig_fif"]], "read_dig_hpts() (in module mne.channels)": [[403, "mne.channels.read_dig_hpts"]], "read_dig_localite() (in module mne.channels)": [[404, "mne.channels.read_dig_localite"]], "read_dig_polhemus_isotrak() (in module mne.channels)": [[405, "mne.channels.read_dig_polhemus_isotrak"]], "read_layout() (in module mne.channels)": [[406, "mne.channels.read_layout"]], "read_polhemus_fastscan() (in module mne.channels)": [[407, "mne.channels.read_polhemus_fastscan"]], "rename_channels() (in module mne.channels)": [[408, "mne.channels.rename_channels"]], "unify_bad_channels() (in module mne.channels)": [[409, "mne.channels.unify_bad_channels"]], "compute_chpi_amplitudes() (in module mne.chpi)": [[410, "mne.chpi.compute_chpi_amplitudes"]], "compute_chpi_locs() (in module mne.chpi)": [[411, "mne.chpi.compute_chpi_locs"]], "compute_chpi_snr() (in module mne.chpi)": [[412, "mne.chpi.compute_chpi_snr"]], "compute_head_pos() (in module mne.chpi)": [[413, "mne.chpi.compute_head_pos"]], "extract_chpi_locs_ctf() (in module mne.chpi)": [[414, "mne.chpi.extract_chpi_locs_ctf"]], "extract_chpi_locs_kit() (in module mne.chpi)": [[415, "mne.chpi.extract_chpi_locs_kit"]], "filter_chpi() (in module mne.chpi)": [[416, "mne.chpi.filter_chpi"]], "get_active_chpi() (in module mne.chpi)": [[417, "mne.chpi.get_active_chpi"]], "get_chpi_info() (in module mne.chpi)": [[418, "mne.chpi.get_chpi_info"]], "head_pos_to_trans_rot_t() (in module mne.chpi)": [[419, "mne.chpi.head_pos_to_trans_rot_t"]], "read_head_pos() (in module mne.chpi)": [[420, "mne.chpi.read_head_pos"]], "write_head_pos() (in module mne.chpi)": [[421, "mne.chpi.write_head_pos"]], "combine_evoked() (in module mne)": [[422, "mne.combine_evoked"]], "compute_covariance() (in module mne)": [[423, "mne.compute_covariance"]], "compute_proj_epochs() (in module mne)": [[424, "mne.compute_proj_epochs"]], "compute_proj_evoked() (in module mne)": [[425, "mne.compute_proj_evoked"]], "compute_proj_raw() (in module mne)": [[426, "mne.compute_proj_raw"]], "compute_rank() (in module mne)": [[427, "mne.compute_rank"]], "compute_raw_covariance() (in module mne)": [[428, "mne.compute_raw_covariance"]], "compute_source_morph() (in module mne)": [[429, "mne.compute_source_morph"]], "concatenate_epochs() (in module mne)": [[430, "mne.concatenate_epochs"]], "concatenate_events() (in module mne)": [[431, "mne.concatenate_events"]], "concatenate_raws() (in module mne)": [[432, "mne.concatenate_raws"]], "convert_forward_solution() (in module mne)": [[433, "mne.convert_forward_solution"]], "coregistration (class in mne.coreg)": [[434, "mne.coreg.Coregistration"]], "compute_dig_mri_distances() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.compute_dig_mri_distances"]], "fit_fiducials() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.fit_fiducials"]], "fit_icp() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.fit_icp"]], "omit_head_shape_points() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.omit_head_shape_points"]], "reset() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.reset"]], "scale (mne.coreg.coregistration property)": [[434, "mne.coreg.Coregistration.scale"]], "set_fid_match() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.set_fid_match"]], "set_grow_hair() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.set_grow_hair"]], "set_rotation() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.set_rotation"]], "set_scale() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.set_scale"]], "set_scale_mode() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.set_scale_mode"]], "set_translation() (mne.coreg.coregistration method)": [[434, "mne.coreg.Coregistration.set_translation"]], "trans (mne.coreg.coregistration property)": [[434, "mne.coreg.Coregistration.trans"]], "estimate_head_mri_t() (in module mne.coreg)": [[435, "mne.coreg.estimate_head_mri_t"]], "get_mni_fiducials() (in module mne.coreg)": [[436, "mne.coreg.get_mni_fiducials"]], "count_annotations() (in module mne)": [[437, "mne.count_annotations"]], "count_events() (in module mne)": [[438, "mne.count_events"]], "compute_whitener() (in module mne.cov)": [[439, "mne.cov.compute_whitener"]], "prepare_noise_cov() (in module mne.cov)": [[440, "mne.cov.prepare_noise_cov"]], "regularize() (in module mne.cov)": [[441, "mne.cov.regularize"]], "create_default_subject() (in module mne)": [[442, "mne.create_default_subject"]], "create_info() (in module mne)": [[443, "mne.create_info"]], "get_cuda_memory() (in module mne.cuda)": [[444, "mne.cuda.get_cuda_memory"]], "init_cuda() (in module mne.cuda)": [[445, "mne.cuda.init_cuda"]], "set_cuda_device() (in module mne.cuda)": [[446, "mne.cuda.set_cuda_device"]], "data_path() (in module mne.datasets.brainstorm.bst_auditory)": [[447, "mne.datasets.brainstorm.bst_auditory.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_raw)": [[448, "mne.datasets.brainstorm.bst_raw.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_resting)": [[449, "mne.datasets.brainstorm.bst_resting.data_path"]], "load_data() (in module mne.datasets.eegbci)": [[450, "mne.datasets.eegbci.load_data"]], "standardize() (in module mne.datasets.eegbci)": [[451, "mne.datasets.eegbci.standardize"]], "data_path() (in module mne.datasets.epilepsy_ecog)": [[452, "mne.datasets.epilepsy_ecog.data_path"]], "data_path() (in module mne.datasets.erp_core)": [[453, "mne.datasets.erp_core.data_path"]], "data_path() (in module mne.datasets.eyelink)": [[454, "mne.datasets.eyelink.data_path"]], "fetch_aparc_sub_parcellation() (in module mne.datasets)": [[455, "mne.datasets.fetch_aparc_sub_parcellation"]], "fetch_dataset() (in module mne.datasets)": [[456, "mne.datasets.fetch_dataset"]], "fetch_fsaverage() (in module mne.datasets)": [[457, "mne.datasets.fetch_fsaverage"]], "fetch_hcp_mmp_parcellation() (in module mne.datasets)": [[458, "mne.datasets.fetch_hcp_mmp_parcellation"]], "fetch_infant_template() (in module mne.datasets)": [[459, "mne.datasets.fetch_infant_template"]], "fetch_phantom() (in module mne.datasets)": [[460, "mne.datasets.fetch_phantom"]], "data_path() (in module mne.datasets.fnirs_motor)": [[461, "mne.datasets.fnirs_motor.data_path"]], "has_dataset() (in module mne.datasets)": [[462, "mne.datasets.has_dataset"]], "data_path() (in module mne.datasets.hf_sef)": [[463, "mne.datasets.hf_sef.data_path"]], "data_path() (in module mne.datasets.kiloword)": [[464, "mne.datasets.kiloword.data_path"]], "load_data() (in module mne.datasets.limo)": [[465, "mne.datasets.limo.load_data"]], "data_path() (in module mne.datasets.misc)": [[466, "mne.datasets.misc.data_path"]], "data_path() (in module mne.datasets.mtrf)": [[467, "mne.datasets.mtrf.data_path"]], "data_path() (in module mne.datasets.multimodal)": [[468, "mne.datasets.multimodal.data_path"]], "data_path() (in module mne.datasets.opm)": [[469, "mne.datasets.opm.data_path"]], "data_path() (in module mne.datasets.phantom_4dbti)": [[470, "mne.datasets.phantom_4dbti.data_path"]], "data_path() (in module mne.datasets.phantom_kernel)": [[471, "mne.datasets.phantom_kernel.data_path"]], "data_path() (in module mne.datasets.phantom_kit)": [[472, "mne.datasets.phantom_kit.data_path"]], "data_path() (in module mne.datasets.refmeg_noise)": [[473, "mne.datasets.refmeg_noise.data_path"]], "data_path() (in module mne.datasets.sample)": [[474, "mne.datasets.sample.data_path"]], "fetch_data() (in module mne.datasets.sleep_physionet.age)": [[475, "mne.datasets.sleep_physionet.age.fetch_data"]], "fetch_data() (in module mne.datasets.sleep_physionet.temazepam)": [[476, "mne.datasets.sleep_physionet.temazepam.fetch_data"]], "data_path() (in module mne.datasets.somato)": [[477, "mne.datasets.somato.data_path"]], "data_path() (in module mne.datasets.spm_face)": [[478, "mne.datasets.spm_face.data_path"]], "data_path() (in module mne.datasets.ssvep)": [[479, "mne.datasets.ssvep.data_path"]], "data_path() (in module mne.datasets.ucl_opm_auditory)": [[480, "mne.datasets.ucl_opm_auditory.data_path"]], "data_path() (in module mne.datasets.visual_92_categories)": [[481, "mne.datasets.visual_92_categories.data_path"]], "decimate_surface() (in module mne)": [[482, "mne.decimate_surface"]], "csp (class in mne.decoding)": [[483, "mne.decoding.CSP"]], "fit() (mne.decoding.csp method)": [[483, "mne.decoding.CSP.fit"]], "fit_transform() (mne.decoding.csp method)": [[483, "mne.decoding.CSP.fit_transform"]], "get_params() (mne.decoding.csp method)": [[483, "mne.decoding.CSP.get_params"]], "plot_filters() (mne.decoding.csp method)": [[483, "mne.decoding.CSP.plot_filters"]], "plot_patterns() (mne.decoding.csp method)": [[483, "mne.decoding.CSP.plot_patterns"]], "set_params() (mne.decoding.csp method)": [[483, "mne.decoding.CSP.set_params"]], "transform() (mne.decoding.csp method)": [[483, "mne.decoding.CSP.transform"]], "ems (class in mne.decoding)": [[484, "mne.decoding.EMS"]], "fit() (mne.decoding.ems method)": [[484, "mne.decoding.EMS.fit"]], "fit_transform() (mne.decoding.ems method)": [[484, "mne.decoding.EMS.fit_transform"]], "get_params() (mne.decoding.ems method)": [[484, "mne.decoding.EMS.get_params"]], "set_params() (mne.decoding.ems method)": [[484, "mne.decoding.EMS.set_params"]], "transform() (mne.decoding.ems method)": [[484, "mne.decoding.EMS.transform"]], "filterestimator (class in mne.decoding)": [[485, "mne.decoding.FilterEstimator"]], "fit() (mne.decoding.filterestimator method)": [[485, "mne.decoding.FilterEstimator.fit"]], "fit_transform() (mne.decoding.filterestimator method)": [[485, "mne.decoding.FilterEstimator.fit_transform"]], "transform() (mne.decoding.filterestimator method)": [[485, "mne.decoding.FilterEstimator.transform"]], "generalizingestimator (class in mne.decoding)": [[486, "mne.decoding.GeneralizingEstimator"]], "decision_function() (mne.decoding.generalizingestimator method)": [[486, "mne.decoding.GeneralizingEstimator.decision_function"]], "fit() (mne.decoding.generalizingestimator method)": [[486, "mne.decoding.GeneralizingEstimator.fit"]], "fit_transform() (mne.decoding.generalizingestimator method)": [[486, "mne.decoding.GeneralizingEstimator.fit_transform"]], "get_params() (mne.decoding.generalizingestimator method)": [[486, "mne.decoding.GeneralizingEstimator.get_params"]], "predict() (mne.decoding.generalizingestimator method)": [[486, "mne.decoding.GeneralizingEstimator.predict"]], "predict_proba() (mne.decoding.generalizingestimator method)": [[486, "mne.decoding.GeneralizingEstimator.predict_proba"]], "score() (mne.decoding.generalizingestimator method)": [[486, "mne.decoding.GeneralizingEstimator.score"]], "set_params() (mne.decoding.generalizingestimator method)": [[486, "mne.decoding.GeneralizingEstimator.set_params"]], "transform() (mne.decoding.generalizingestimator method)": [[486, "mne.decoding.GeneralizingEstimator.transform"]], "linearmodel (class in mne.decoding)": [[487, "mne.decoding.LinearModel"]], "fit() (mne.decoding.linearmodel method)": [[487, "mne.decoding.LinearModel.fit"]], "get_params() (mne.decoding.linearmodel method)": [[487, "mne.decoding.LinearModel.get_params"]], "set_params() (mne.decoding.linearmodel method)": [[487, "mne.decoding.LinearModel.set_params"]], "psdestimator (class in mne.decoding)": [[488, "mne.decoding.PSDEstimator"]], "fit() (mne.decoding.psdestimator method)": [[488, "mne.decoding.PSDEstimator.fit"]], "fit_transform() (mne.decoding.psdestimator method)": [[488, "mne.decoding.PSDEstimator.fit_transform"]], "transform() (mne.decoding.psdestimator method)": [[488, "mne.decoding.PSDEstimator.transform"]], "receptivefield (class in mne.decoding)": [[489, "mne.decoding.ReceptiveField"]], "fit() (mne.decoding.receptivefield method)": [[489, "mne.decoding.ReceptiveField.fit"]], "get_params() (mne.decoding.receptivefield method)": [[489, "mne.decoding.ReceptiveField.get_params"]], "predict() (mne.decoding.receptivefield method)": [[489, "mne.decoding.ReceptiveField.predict"]], "score() (mne.decoding.receptivefield method)": [[489, "mne.decoding.ReceptiveField.score"]], "set_params() (mne.decoding.receptivefield method)": [[489, "mne.decoding.ReceptiveField.set_params"]], "spoc (class in mne.decoding)": [[490, "mne.decoding.SPoC"]], "fit() (mne.decoding.spoc method)": [[490, "mne.decoding.SPoC.fit"]], "fit_transform() (mne.decoding.spoc method)": [[490, "mne.decoding.SPoC.fit_transform"]], "get_params() (mne.decoding.spoc method)": [[490, "mne.decoding.SPoC.get_params"]], "plot_filters() (mne.decoding.spoc method)": [[490, "mne.decoding.SPoC.plot_filters"]], "plot_patterns() (mne.decoding.spoc method)": [[490, "mne.decoding.SPoC.plot_patterns"]], "set_params() (mne.decoding.spoc method)": [[490, "mne.decoding.SPoC.set_params"]], "transform() (mne.decoding.spoc method)": [[490, "mne.decoding.SPoC.transform"]], "ssd (class in mne.decoding)": [[491, "mne.decoding.SSD"]], "apply() (mne.decoding.ssd method)": [[491, "mne.decoding.SSD.apply"]], "fit() (mne.decoding.ssd method)": [[491, "mne.decoding.SSD.fit"]], "fit_transform() (mne.decoding.ssd method)": [[491, "mne.decoding.SSD.fit_transform"]], "get_params() (mne.decoding.ssd method)": [[491, "mne.decoding.SSD.get_params"]], "get_spectral_ratio() (mne.decoding.ssd method)": [[491, "mne.decoding.SSD.get_spectral_ratio"]], "inverse_transform() (mne.decoding.ssd method)": [[491, "mne.decoding.SSD.inverse_transform"]], "set_params() (mne.decoding.ssd method)": [[491, "mne.decoding.SSD.set_params"]], "transform() (mne.decoding.ssd method)": [[491, "mne.decoding.SSD.transform"]], "scaler (class in mne.decoding)": [[492, "mne.decoding.Scaler"]], "fit() (mne.decoding.scaler method)": [[492, "mne.decoding.Scaler.fit"]], "fit_transform() (mne.decoding.scaler method)": [[492, "mne.decoding.Scaler.fit_transform"]], "get_params() (mne.decoding.scaler method)": [[492, "mne.decoding.Scaler.get_params"]], "inverse_transform() (mne.decoding.scaler method)": [[492, "mne.decoding.Scaler.inverse_transform"]], "set_params() (mne.decoding.scaler method)": [[492, "mne.decoding.Scaler.set_params"]], "transform() (mne.decoding.scaler method)": [[492, "mne.decoding.Scaler.transform"]], "slidingestimator (class in mne.decoding)": [[493, "mne.decoding.SlidingEstimator"]], "decision_function() (mne.decoding.slidingestimator method)": [[493, "mne.decoding.SlidingEstimator.decision_function"]], "fit() (mne.decoding.slidingestimator method)": [[493, "mne.decoding.SlidingEstimator.fit"]], "fit_transform() (mne.decoding.slidingestimator method)": [[493, "mne.decoding.SlidingEstimator.fit_transform"]], "get_params() (mne.decoding.slidingestimator method)": [[493, "mne.decoding.SlidingEstimator.get_params"]], "predict() (mne.decoding.slidingestimator method)": [[493, "mne.decoding.SlidingEstimator.predict"]], "predict_proba() (mne.decoding.slidingestimator method)": [[493, "mne.decoding.SlidingEstimator.predict_proba"]], "score() (mne.decoding.slidingestimator method)": [[493, "mne.decoding.SlidingEstimator.score"]], "set_params() (mne.decoding.slidingestimator method)": [[493, "mne.decoding.SlidingEstimator.set_params"]], "transform() (mne.decoding.slidingestimator method)": [[493, "mne.decoding.SlidingEstimator.transform"]], "temporalfilter (class in mne.decoding)": [[494, "mne.decoding.TemporalFilter"]], "fit() (mne.decoding.temporalfilter method)": [[494, "mne.decoding.TemporalFilter.fit"]], "fit_transform() (mne.decoding.temporalfilter method)": [[494, "mne.decoding.TemporalFilter.fit_transform"]], "transform() (mne.decoding.temporalfilter method)": [[494, "mne.decoding.TemporalFilter.transform"]], "timedelayingridge (class in mne.decoding)": [[495, "mne.decoding.TimeDelayingRidge"]], "fit() (mne.decoding.timedelayingridge method)": [[495, "mne.decoding.TimeDelayingRidge.fit"]], "get_params() (mne.decoding.timedelayingridge method)": [[495, "mne.decoding.TimeDelayingRidge.get_params"]], "predict() (mne.decoding.timedelayingridge method)": [[495, "mne.decoding.TimeDelayingRidge.predict"]], "set_params() (mne.decoding.timedelayingridge method)": [[495, "mne.decoding.TimeDelayingRidge.set_params"]], "timefrequency (class in mne.decoding)": [[496, "mne.decoding.TimeFrequency"]], "fit() (mne.decoding.timefrequency method)": [[496, "mne.decoding.TimeFrequency.fit"]], "fit_transform() (mne.decoding.timefrequency method)": [[496, "mne.decoding.TimeFrequency.fit_transform"]], "get_params() (mne.decoding.timefrequency method)": [[496, "mne.decoding.TimeFrequency.get_params"]], "set_params() (mne.decoding.timefrequency method)": [[496, "mne.decoding.TimeFrequency.set_params"]], "transform() (mne.decoding.timefrequency method)": [[496, "mne.decoding.TimeFrequency.transform"]], "unsupervisedspatialfilter (class in mne.decoding)": [[497, "mne.decoding.UnsupervisedSpatialFilter"]], "fit() (mne.decoding.unsupervisedspatialfilter method)": [[497, "mne.decoding.UnsupervisedSpatialFilter.fit"]], "fit_transform() (mne.decoding.unsupervisedspatialfilter method)": [[497, "mne.decoding.UnsupervisedSpatialFilter.fit_transform"]], "get_params() (mne.decoding.unsupervisedspatialfilter method)": [[497, "mne.decoding.UnsupervisedSpatialFilter.get_params"]], "inverse_transform() (mne.decoding.unsupervisedspatialfilter method)": [[497, "mne.decoding.UnsupervisedSpatialFilter.inverse_transform"]], "set_params() (mne.decoding.unsupervisedspatialfilter method)": [[497, "mne.decoding.UnsupervisedSpatialFilter.set_params"]], "transform() (mne.decoding.unsupervisedspatialfilter method)": [[497, "mne.decoding.UnsupervisedSpatialFilter.transform"]], "vectorizer (class in mne.decoding)": [[498, "mne.decoding.Vectorizer"]], "fit() (mne.decoding.vectorizer method)": [[498, "mne.decoding.Vectorizer.fit"]], "fit_transform() (mne.decoding.vectorizer method)": [[498, "mne.decoding.Vectorizer.fit_transform"]], "inverse_transform() (mne.decoding.vectorizer method)": [[498, "mne.decoding.Vectorizer.inverse_transform"]], "transform() (mne.decoding.vectorizer method)": [[498, "mne.decoding.Vectorizer.transform"]], "compute_ems() (in module mne.decoding)": [[499, "mne.decoding.compute_ems"]], "cross_val_multiscore() (in module mne.decoding)": [[500, "mne.decoding.cross_val_multiscore"]], "get_coef() (in module mne.decoding)": [[501, "mne.decoding.get_coef"]], "dig_mri_distances() (in module mne)": [[502, "mne.dig_mri_distances"]], "get_phantom_dipoles() (in module mne.dipole)": [[503, "mne.dipole.get_phantom_dipoles"]], "average_movements() (in module mne.epochs)": [[504, "mne.epochs.average_movements"]], "combine_event_ids() (in module mne.epochs)": [[505, "mne.epochs.combine_event_ids"]], "equalize_epoch_counts() (in module mne.epochs)": [[506, "mne.epochs.equalize_epoch_counts"]], "make_metadata() (in module mne.epochs)": [[507, "mne.epochs.make_metadata"]], "equalize_channels() (in module mne)": [[508, "mne.equalize_channels"]], "define_target_events() (in module mne.event)": [[509, "mne.event.define_target_events"]], "match_event_names() (in module mne.event)": [[510, "mne.event.match_event_names"]], "shift_time_events() (in module mne.event)": [[511, "mne.event.shift_time_events"]], "events_from_annotations() (in module mne)": [[512, "mne.events_from_annotations"]], "export_epochs() (in module mne.export)": [[513, "mne.export.export_epochs"]], "export_evokeds() (in module mne.export)": [[514, "mne.export.export_evokeds"]], "export_evokeds_mff() (in module mne.export)": [[515, "mne.export.export_evokeds_mff"]], "export_raw() (in module mne.export)": [[516, "mne.export.export_raw"]], "extract_label_time_course() (in module mne)": [[517, "mne.extract_label_time_course"]], "construct_iir_filter() (in module mne.filter)": [[518, "mne.filter.construct_iir_filter"]], "create_filter() (in module mne.filter)": [[519, "mne.filter.create_filter"]], "estimate_ringing_samples() (in module mne.filter)": [[520, "mne.filter.estimate_ringing_samples"]], "filter_data() (in module mne.filter)": [[521, "mne.filter.filter_data"]], "notch_filter() (in module mne.filter)": [[522, "mne.filter.notch_filter"]], "resample() (in module mne.filter)": [[523, "mne.filter.resample"]], "find_events() (in module mne)": [[524, "mne.find_events"]], "find_stim_steps() (in module mne)": [[525, "mne.find_stim_steps"]], "fit_dipole() (in module mne)": [[526, "mne.fit_dipole"]], "compute_depth_prior() (in module mne.forward)": [[527, "mne.forward.compute_depth_prior"]], "compute_orient_prior() (in module mne.forward)": [[528, "mne.forward.compute_orient_prior"]], "restrict_forward_to_label() (in module mne.forward)": [[529, "mne.forward.restrict_forward_to_label"]], "restrict_forward_to_stc() (in module mne.forward)": [[530, "mne.forward.restrict_forward_to_stc"]], "get_config() (in module mne)": [[531, "mne.get_config"]], "get_config_path() (in module mne)": [[532, "mne.get_config_path"]], "get_head_surf() (in module mne)": [[533, "mne.get_head_surf"]], "get_meg_helmet_surf() (in module mne)": [[534, "mne.get_meg_helmet_surf"]], "get_montage_volume_labels() (in module mne)": [[535, "mne.get_montage_volume_labels"]], "get_volume_labels_from_aseg() (in module mne)": [[536, "mne.get_volume_labels_from_aseg"]], "get_volume_labels_from_src() (in module mne)": [[537, "mne.get_volume_labels_from_src"]], "grade_to_tris() (in module mne)": [[538, "mne.grade_to_tris"]], "grade_to_vertices() (in module mne)": [[539, "mne.grade_to_vertices"]], "grand_average() (in module mne)": [[540, "mne.grand_average"]], "grow_labels() (in module mne)": [[541, "mne.grow_labels"]], "coregistration() (in module mne.gui)": [[542, "mne.gui.coregistration"]], "head_to_mni() (in module mne)": [[543, "mne.head_to_mni"]], "head_to_mri() (in module mne)": [[544, "mne.head_to_mri"]], "gamma_map() (in module mne.inverse_sparse)": [[545, "mne.inverse_sparse.gamma_map"]], "make_stc_from_dipoles() (in module mne.inverse_sparse)": [[546, "mne.inverse_sparse.make_stc_from_dipoles"]], "mixed_norm() (in module mne.inverse_sparse)": [[547, "mne.inverse_sparse.mixed_norm"]], "tf_mixed_norm() (in module mne.inverse_sparse)": [[548, "mne.inverse_sparse.tf_mixed_norm"]], "baseraw (class in mne.io)": [[549, "mne.io.BaseRaw"]], "raw (class in mne.io)": [[550, "mne.io.Raw"]], "__contains__() (mne.io.raw method)": [[550, "mne.io.Raw.__contains__"]], "__getitem__() (mne.io.raw method)": [[550, "mne.io.Raw.__getitem__"]], "__len__() (mne.io.raw method)": [[550, "mne.io.Raw.__len__"]], "acqparser (mne.io.raw property)": [[550, "mne.io.Raw.acqparser"]], "add_channels() (mne.io.raw method)": [[550, "mne.io.Raw.add_channels"]], "add_events() (mne.io.raw method)": [[550, "mne.io.Raw.add_events"]], "add_proj() (mne.io.raw method)": [[550, "mne.io.Raw.add_proj"]], "add_reference_channels() (mne.io.raw method)": [[550, "mne.io.Raw.add_reference_channels"]], "annotations (mne.io.raw property)": [[550, "mne.io.Raw.annotations"]], "anonymize() (mne.io.raw method)": [[550, "mne.io.Raw.anonymize"]], "append() (mne.io.raw method)": [[550, "mne.io.Raw.append"]], "apply_function() (mne.io.raw method)": [[550, "mne.io.Raw.apply_function"]], "apply_gradient_compensation() (mne.io.raw method)": [[550, "mne.io.Raw.apply_gradient_compensation"]], "apply_hilbert() (mne.io.raw method)": [[550, "mne.io.Raw.apply_hilbert"]], "apply_proj() (mne.io.raw method)": [[550, "mne.io.Raw.apply_proj"]], "ch_names (mne.io.raw property)": [[550, "mne.io.Raw.ch_names"]], "close() (mne.io.raw method)": [[550, "mne.io.Raw.close"]], "compensation_grade (mne.io.raw property)": [[550, "mne.io.Raw.compensation_grade"]], "compute_psd() (mne.io.raw method)": [[550, "mne.io.Raw.compute_psd"]], "copy() (mne.io.raw method)": [[550, "mne.io.Raw.copy"]], "crop() (mne.io.raw method)": [[550, "mne.io.Raw.crop"]], "crop_by_annotations() (mne.io.raw method)": [[550, "mne.io.Raw.crop_by_annotations"]], "del_proj() (mne.io.raw method)": [[550, "mne.io.Raw.del_proj"]], "describe() (mne.io.raw method)": [[550, "mne.io.Raw.describe"]], "drop_channels() (mne.io.raw method)": [[550, "mne.io.Raw.drop_channels"]], "export() (mne.io.raw method)": [[550, "mne.io.Raw.export"]], "filenames (mne.io.raw property)": [[550, "mne.io.Raw.filenames"]], "filter() (mne.io.raw method)": [[550, "mne.io.Raw.filter"]], "first_samp (mne.io.raw property)": [[550, "mne.io.Raw.first_samp"]], "first_time (mne.io.raw property)": [[550, "mne.io.Raw.first_time"]], "fix_mag_coil_types() (mne.io.raw method)": [[550, "mne.io.Raw.fix_mag_coil_types"]], "get_channel_types() (mne.io.raw method)": [[550, "mne.io.Raw.get_channel_types"]], "get_data() (mne.io.raw method)": [[550, "mne.io.Raw.get_data"]], "get_montage() (mne.io.raw method)": [[550, "mne.io.Raw.get_montage"]], "interpolate_bads() (mne.io.raw method)": [[550, "mne.io.Raw.interpolate_bads"]], "last_samp (mne.io.raw property)": [[550, "mne.io.Raw.last_samp"]], "load_bad_channels() (mne.io.raw method)": [[550, "mne.io.Raw.load_bad_channels"]], "load_data() (mne.io.raw method)": [[550, "mne.io.Raw.load_data"]], "n_times (mne.io.raw property)": [[550, "mne.io.Raw.n_times"]], "notch_filter() (mne.io.raw method)": [[550, "mne.io.Raw.notch_filter"]], "pick() (mne.io.raw method)": [[550, "mne.io.Raw.pick"]], "pick_channels() (mne.io.raw method)": [[550, "mne.io.Raw.pick_channels"]], "pick_types() (mne.io.raw method)": [[550, "mne.io.Raw.pick_types"]], "plot() (mne.io.raw method)": [[550, "mne.io.Raw.plot"]], "plot_projs_topomap() (mne.io.raw method)": [[550, "mne.io.Raw.plot_projs_topomap"]], "plot_psd() (mne.io.raw method)": [[550, "mne.io.Raw.plot_psd"]], "plot_psd_topo() (mne.io.raw method)": [[550, "mne.io.Raw.plot_psd_topo"]], "plot_psd_topomap() (mne.io.raw method)": [[550, "mne.io.Raw.plot_psd_topomap"]], "plot_sensors() (mne.io.raw method)": [[550, "mne.io.Raw.plot_sensors"]], "proj (mne.io.raw property)": [[550, "mne.io.Raw.proj"]], "rename_channels() (mne.io.raw method)": [[550, "mne.io.Raw.rename_channels"]], "reorder_channels() (mne.io.raw method)": [[550, "mne.io.Raw.reorder_channels"]], "resample() (mne.io.raw method)": [[550, "mne.io.Raw.resample"]], "save() (mne.io.raw method)": [[550, "mne.io.Raw.save"]], "savgol_filter() (mne.io.raw method)": [[550, "mne.io.Raw.savgol_filter"]], "set_annotations() (mne.io.raw method)": [[550, "mne.io.Raw.set_annotations"]], "set_channel_types() (mne.io.raw method)": [[550, "mne.io.Raw.set_channel_types"]], "set_eeg_reference() (mne.io.raw method)": [[550, "mne.io.Raw.set_eeg_reference"]], "set_meas_date() (mne.io.raw method)": [[550, "mne.io.Raw.set_meas_date"]], "set_montage() (mne.io.raw method)": [[550, "mne.io.Raw.set_montage"]], "time_as_index() (mne.io.raw method)": [[550, "mne.io.Raw.time_as_index"]], "times (mne.io.raw property)": [[550, "mne.io.Raw.times"]], "to_data_frame() (mne.io.raw method)": [[550, "mne.io.Raw.to_data_frame"]], "rawarray (class in mne.io)": [[551, "mne.io.RawArray"]], "__contains__() (mne.io.rawarray method)": [[551, "mne.io.RawArray.__contains__"]], "__getitem__() (mne.io.rawarray method)": [[551, "mne.io.RawArray.__getitem__"]], "__len__() (mne.io.rawarray method)": [[551, "mne.io.RawArray.__len__"]], "add_channels() (mne.io.rawarray method)": [[551, "mne.io.RawArray.add_channels"]], "add_events() (mne.io.rawarray method)": [[551, "mne.io.RawArray.add_events"]], "add_proj() (mne.io.rawarray method)": [[551, "mne.io.RawArray.add_proj"]], "add_reference_channels() (mne.io.rawarray method)": [[551, "mne.io.RawArray.add_reference_channels"]], "annotations (mne.io.rawarray property)": [[551, "mne.io.RawArray.annotations"]], "anonymize() (mne.io.rawarray method)": [[551, "mne.io.RawArray.anonymize"]], "append() (mne.io.rawarray method)": [[551, "mne.io.RawArray.append"]], "apply_function() (mne.io.rawarray method)": [[551, "mne.io.RawArray.apply_function"]], "apply_gradient_compensation() (mne.io.rawarray method)": [[551, "mne.io.RawArray.apply_gradient_compensation"]], "apply_hilbert() (mne.io.rawarray method)": [[551, "mne.io.RawArray.apply_hilbert"]], "apply_proj() (mne.io.rawarray method)": [[551, "mne.io.RawArray.apply_proj"]], "ch_names (mne.io.rawarray property)": [[551, "mne.io.RawArray.ch_names"]], "close() (mne.io.rawarray method)": [[551, "mne.io.RawArray.close"]], "compensation_grade (mne.io.rawarray property)": [[551, "mne.io.RawArray.compensation_grade"]], "compute_psd() (mne.io.rawarray method)": [[551, "mne.io.RawArray.compute_psd"]], "copy() (mne.io.rawarray method)": [[551, "mne.io.RawArray.copy"]], "crop() (mne.io.rawarray method)": [[551, "mne.io.RawArray.crop"]], "crop_by_annotations() (mne.io.rawarray method)": [[551, "mne.io.RawArray.crop_by_annotations"]], "del_proj() (mne.io.rawarray method)": [[551, "mne.io.RawArray.del_proj"]], "describe() (mne.io.rawarray method)": [[551, "mne.io.RawArray.describe"]], "drop_channels() (mne.io.rawarray method)": [[551, "mne.io.RawArray.drop_channels"]], "export() (mne.io.rawarray method)": [[551, "mne.io.RawArray.export"]], "filenames (mne.io.rawarray property)": [[551, "mne.io.RawArray.filenames"]], "filter() (mne.io.rawarray method)": [[551, "mne.io.RawArray.filter"]], "first_samp (mne.io.rawarray property)": [[551, "mne.io.RawArray.first_samp"]], "first_time (mne.io.rawarray property)": [[551, "mne.io.RawArray.first_time"]], "get_channel_types() (mne.io.rawarray method)": [[551, "mne.io.RawArray.get_channel_types"]], "get_data() (mne.io.rawarray method)": [[551, "mne.io.RawArray.get_data"]], "get_montage() (mne.io.rawarray method)": [[551, "mne.io.RawArray.get_montage"]], "interpolate_bads() (mne.io.rawarray method)": [[551, "mne.io.RawArray.interpolate_bads"]], "last_samp (mne.io.rawarray property)": [[551, "mne.io.RawArray.last_samp"]], "load_bad_channels() (mne.io.rawarray method)": [[551, "mne.io.RawArray.load_bad_channels"]], "load_data() (mne.io.rawarray method)": [[551, "mne.io.RawArray.load_data"]], "n_times (mne.io.rawarray property)": [[551, "mne.io.RawArray.n_times"]], "notch_filter() (mne.io.rawarray method)": [[551, "mne.io.RawArray.notch_filter"]], "pick() (mne.io.rawarray method)": [[551, "mne.io.RawArray.pick"]], "pick_channels() (mne.io.rawarray method)": [[551, "mne.io.RawArray.pick_channels"]], "pick_types() (mne.io.rawarray method)": [[551, "mne.io.RawArray.pick_types"]], "plot() (mne.io.rawarray method)": [[551, "mne.io.RawArray.plot"]], "plot_projs_topomap() (mne.io.rawarray method)": [[551, "mne.io.RawArray.plot_projs_topomap"]], "plot_psd() (mne.io.rawarray method)": [[551, "mne.io.RawArray.plot_psd"]], "plot_psd_topo() (mne.io.rawarray method)": [[551, "mne.io.RawArray.plot_psd_topo"]], "plot_psd_topomap() (mne.io.rawarray method)": [[551, "mne.io.RawArray.plot_psd_topomap"]], "plot_sensors() (mne.io.rawarray method)": [[551, "mne.io.RawArray.plot_sensors"]], "proj (mne.io.rawarray property)": [[551, "mne.io.RawArray.proj"]], "rename_channels() (mne.io.rawarray method)": [[551, "mne.io.RawArray.rename_channels"]], "reorder_channels() (mne.io.rawarray method)": [[551, "mne.io.RawArray.reorder_channels"]], "resample() (mne.io.rawarray method)": [[551, "mne.io.RawArray.resample"]], "save() (mne.io.rawarray method)": [[551, "mne.io.RawArray.save"]], "savgol_filter() (mne.io.rawarray method)": [[551, "mne.io.RawArray.savgol_filter"]], "set_annotations() (mne.io.rawarray method)": [[551, "mne.io.RawArray.set_annotations"]], "set_channel_types() (mne.io.rawarray method)": [[551, "mne.io.RawArray.set_channel_types"]], "set_eeg_reference() (mne.io.rawarray method)": [[551, "mne.io.RawArray.set_eeg_reference"]], "set_meas_date() (mne.io.rawarray method)": [[551, "mne.io.RawArray.set_meas_date"]], "set_montage() (mne.io.rawarray method)": [[551, "mne.io.RawArray.set_montage"]], "time_as_index() (mne.io.rawarray method)": [[551, "mne.io.RawArray.time_as_index"]], "times (mne.io.rawarray property)": [[551, "mne.io.RawArray.times"]], "to_data_frame() (mne.io.rawarray method)": [[551, "mne.io.RawArray.to_data_frame"]], "anonymize_info() (in module mne.io)": [[552, "mne.io.anonymize_info"]], "get_channel_type_constants() (in module mne.io)": [[553, "mne.io.get_channel_type_constants"]], "read_mrk() (in module mne.io.kit)": [[554, "mne.io.kit.read_mrk"]], "read_fiducials() (in module mne.io)": [[555, "mne.io.read_fiducials"]], "read_info() (in module mne.io)": [[556, "mne.io.read_info"]], "read_raw() (in module mne.io)": [[557, "mne.io.read_raw"]], "read_raw_artemis123() (in module mne.io)": [[558, "mne.io.read_raw_artemis123"]], "read_raw_bdf() (in module mne.io)": [[559, "mne.io.read_raw_bdf"]], "read_raw_boxy() (in module mne.io)": [[560, "mne.io.read_raw_boxy"]], "read_raw_brainvision() (in module mne.io)": [[561, "mne.io.read_raw_brainvision"]], "read_raw_bti() (in module mne.io)": [[562, "mne.io.read_raw_bti"]], "read_raw_cnt() (in module mne.io)": [[563, "mne.io.read_raw_cnt"]], "read_raw_ctf() (in module mne.io)": [[564, "mne.io.read_raw_ctf"]], "read_raw_curry() (in module mne.io)": [[565, "mne.io.read_raw_curry"]], "read_raw_edf() (in module mne.io)": [[566, "mne.io.read_raw_edf"]], "read_raw_eeglab() (in module mne.io)": [[567, "mne.io.read_raw_eeglab"]], "read_raw_egi() (in module mne.io)": [[568, "mne.io.read_raw_egi"]], "read_raw_eximia() (in module mne.io)": [[569, "mne.io.read_raw_eximia"]], "read_raw_eyelink() (in module mne.io)": [[570, "mne.io.read_raw_eyelink"]], "read_raw_fieldtrip() (in module mne.io)": [[571, "mne.io.read_raw_fieldtrip"]], "read_raw_fif() (in module mne.io)": [[572, "mne.io.read_raw_fif"]], "read_raw_fil() (in module mne.io)": [[573, "mne.io.read_raw_fil"]], "read_raw_gdf() (in module mne.io)": [[574, "mne.io.read_raw_gdf"]], "read_raw_hitachi() (in module mne.io)": [[575, "mne.io.read_raw_hitachi"]], "read_raw_kit() (in module mne.io)": [[576, "mne.io.read_raw_kit"]], "read_raw_nedf() (in module mne.io)": [[577, "mne.io.read_raw_nedf"]], "read_raw_nicolet() (in module mne.io)": [[578, "mne.io.read_raw_nicolet"]], "read_raw_nihon() (in module mne.io)": [[579, "mne.io.read_raw_nihon"]], "read_raw_nirx() (in module mne.io)": [[580, "mne.io.read_raw_nirx"]], "read_raw_nsx() (in module mne.io)": [[581, "mne.io.read_raw_nsx"]], "read_raw_persyst() (in module mne.io)": [[582, "mne.io.read_raw_persyst"]], "read_raw_snirf() (in module mne.io)": [[583, "mne.io.read_raw_snirf"]], "show_fiff() (in module mne.io)": [[584, "mne.io.show_fiff"]], "write_fiducials() (in module mne.io)": [[585, "mne.io.write_fiducials"]], "write_info() (in module mne.io)": [[586, "mne.io.write_info"]], "select_sources() (in module mne.label)": [[587, "mne.label.select_sources"]], "label_sign_flip() (in module mne)": [[588, "mne.label_sign_flip"]], "labels_to_stc() (in module mne)": [[589, "mne.labels_to_stc"]], "make_ad_hoc_cov() (in module mne)": [[590, "mne.make_ad_hoc_cov"]], "make_bem_model() (in module mne)": [[591, "mne.make_bem_model"]], "make_bem_solution() (in module mne)": [[592, "mne.make_bem_solution"]], "make_field_map() (in module mne)": [[593, "mne.make_field_map"]], "make_fixed_length_epochs() (in module mne)": [[594, "mne.make_fixed_length_epochs"]], "make_fixed_length_events() (in module mne)": [[595, "mne.make_fixed_length_events"]], "make_forward_dipole() (in module mne)": [[596, "mne.make_forward_dipole"]], "make_forward_solution() (in module mne)": [[597, "mne.make_forward_solution"]], "make_sphere_model() (in module mne)": [[598, "mne.make_sphere_model"]], "match_channel_orders() (in module mne)": [[599, "mne.match_channel_orders"]], "merge_events() (in module mne)": [[600, "mne.merge_events"]], "inverseoperator (class in mne.minimum_norm)": [[601, "mne.minimum_norm.InverseOperator"]], "__contains__() (mne.minimum_norm.inverseoperator method)": [[601, "mne.minimum_norm.InverseOperator.__contains__"]], "__getitem__() (mne.minimum_norm.inverseoperator method)": [[601, "mne.minimum_norm.InverseOperator.__getitem__"]], "__iter__() (mne.minimum_norm.inverseoperator method)": [[601, "mne.minimum_norm.InverseOperator.__iter__"]], "__len__() (mne.minimum_norm.inverseoperator method)": [[601, "mne.minimum_norm.InverseOperator.__len__"]], "ch_names (mne.minimum_norm.inverseoperator property)": [[601, "mne.minimum_norm.InverseOperator.ch_names"]], "clear() (mne.minimum_norm.inverseoperator method)": [[601, "mne.minimum_norm.InverseOperator.clear"]], "copy() (mne.minimum_norm.inverseoperator method)": [[601, "mne.minimum_norm.InverseOperator.copy"]], "fromkeys() (mne.minimum_norm.inverseoperator method)": [[601, "mne.minimum_norm.InverseOperator.fromkeys"]], "get() (mne.minimum_norm.inverseoperator method)": [[601, "mne.minimum_norm.InverseOperator.get"]], "info (mne.minimum_norm.inverseoperator property)": [[601, "mne.minimum_norm.InverseOperator.info"]], "items() (mne.minimum_norm.inverseoperator method)": [[601, "mne.minimum_norm.InverseOperator.items"]], "keys() (mne.minimum_norm.inverseoperator method)": [[601, "mne.minimum_norm.InverseOperator.keys"]], "pop() (mne.minimum_norm.inverseoperator method)": [[601, "mne.minimum_norm.InverseOperator.pop"]], "popitem() (mne.minimum_norm.inverseoperator method)": [[601, "mne.minimum_norm.InverseOperator.popitem"]], "setdefault() (mne.minimum_norm.inverseoperator method)": [[601, "mne.minimum_norm.InverseOperator.setdefault"]], "update() (mne.minimum_norm.inverseoperator method)": [[601, "mne.minimum_norm.InverseOperator.update"]], "values() (mne.minimum_norm.inverseoperator method)": [[601, "mne.minimum_norm.InverseOperator.values"]], "apply_inverse() (in module mne.minimum_norm)": [[602, "mne.minimum_norm.apply_inverse"]], "apply_inverse_cov() (in module mne.minimum_norm)": [[603, "mne.minimum_norm.apply_inverse_cov"]], "apply_inverse_epochs() (in module mne.minimum_norm)": [[604, "mne.minimum_norm.apply_inverse_epochs"]], "apply_inverse_raw() (in module mne.minimum_norm)": [[605, "mne.minimum_norm.apply_inverse_raw"]], "apply_inverse_tfr_epochs() (in module mne.minimum_norm)": [[606, "mne.minimum_norm.apply_inverse_tfr_epochs"]], "compute_rank_inverse() (in module mne.minimum_norm)": [[607, "mne.minimum_norm.compute_rank_inverse"]], "compute_source_psd() (in module mne.minimum_norm)": [[608, "mne.minimum_norm.compute_source_psd"]], "compute_source_psd_epochs() (in module mne.minimum_norm)": [[609, "mne.minimum_norm.compute_source_psd_epochs"]], "estimate_snr() (in module mne.minimum_norm)": [[610, "mne.minimum_norm.estimate_snr"]], "get_cross_talk() (in module mne.minimum_norm)": [[611, "mne.minimum_norm.get_cross_talk"]], "get_point_spread() (in module mne.minimum_norm)": [[612, "mne.minimum_norm.get_point_spread"]], "make_inverse_operator() (in module mne.minimum_norm)": [[613, "mne.minimum_norm.make_inverse_operator"]], "make_inverse_resolution_matrix() (in module mne.minimum_norm)": [[614, "mne.minimum_norm.make_inverse_resolution_matrix"]], "prepare_inverse_operator() (in module mne.minimum_norm)": [[615, "mne.minimum_norm.prepare_inverse_operator"]], "read_inverse_operator() (in module mne.minimum_norm)": [[616, "mne.minimum_norm.read_inverse_operator"]], "resolution_metrics() (in module mne.minimum_norm)": [[617, "mne.minimum_norm.resolution_metrics"]], "source_band_induced_power() (in module mne.minimum_norm)": [[618, "mne.minimum_norm.source_band_induced_power"]], "source_induced_power() (in module mne.minimum_norm)": [[619, "mne.minimum_norm.source_induced_power"]], "write_inverse_operator() (in module mne.minimum_norm)": [[620, "mne.minimum_norm.write_inverse_operator"]], "morph_labels() (in module mne)": [[621, "mne.morph_labels"]], "morph_source_spaces() (in module mne)": [[622, "mne.morph_source_spaces"]], "open_docs() (in module mne)": [[623, "mne.open_docs"]], "open_report() (in module mne)": [[624, "mne.open_report"]], "parse_config() (in module mne)": [[625, "mne.parse_config"]], "pick_channels() (in module mne)": [[626, "mne.pick_channels"]], "pick_channels_cov() (in module mne)": [[627, "mne.pick_channels_cov"]], "pick_channels_forward() (in module mne)": [[628, "mne.pick_channels_forward"]], "pick_channels_regexp() (in module mne)": [[629, "mne.pick_channels_regexp"]], "pick_events() (in module mne)": [[630, "mne.pick_events"]], "pick_info() (in module mne)": [[631, "mne.pick_info"]], "pick_types() (in module mne)": [[632, "mne.pick_types"]], "pick_types_forward() (in module mne)": [[633, "mne.pick_types_forward"]], "eogregression (class in mne.preprocessing)": [[634, "mne.preprocessing.EOGRegression"]], "apply() (mne.preprocessing.eogregression method)": [[634, "mne.preprocessing.EOGRegression.apply"]], "fit() (mne.preprocessing.eogregression method)": [[634, "mne.preprocessing.EOGRegression.fit"]], "plot() (mne.preprocessing.eogregression method)": [[634, "mne.preprocessing.EOGRegression.plot"]], "save() (mne.preprocessing.eogregression method)": [[634, "mne.preprocessing.EOGRegression.save"]], "ica (class in mne.preprocessing)": [[635, "mne.preprocessing.ICA"]], "__contains__() (mne.preprocessing.ica method)": [[635, "mne.preprocessing.ICA.__contains__"]], "apply() (mne.preprocessing.ica method)": [[635, "mne.preprocessing.ICA.apply"]], "compensation_grade (mne.preprocessing.ica property)": [[635, "mne.preprocessing.ICA.compensation_grade"]], "copy() (mne.preprocessing.ica method)": [[635, "mne.preprocessing.ICA.copy"]], "find_bads_ecg() (mne.preprocessing.ica method)": [[635, "mne.preprocessing.ICA.find_bads_ecg"]], "find_bads_eog() (mne.preprocessing.ica method)": [[635, "mne.preprocessing.ICA.find_bads_eog"]], "find_bads_muscle() (mne.preprocessing.ica method)": [[635, "mne.preprocessing.ICA.find_bads_muscle"]], "find_bads_ref() (mne.preprocessing.ica method)": [[635, "mne.preprocessing.ICA.find_bads_ref"]], "fit() (mne.preprocessing.ica method)": [[635, "mne.preprocessing.ICA.fit"]], "get_channel_types() (mne.preprocessing.ica method)": [[635, "mne.preprocessing.ICA.get_channel_types"]], "get_components() (mne.preprocessing.ica method)": [[635, "mne.preprocessing.ICA.get_components"]], "get_explained_variance_ratio() (mne.preprocessing.ica method)": [[635, "mne.preprocessing.ICA.get_explained_variance_ratio"]], "get_sources() (mne.preprocessing.ica method)": [[635, "mne.preprocessing.ICA.get_sources"]], "plot_components() (mne.preprocessing.ica method)": [[635, "mne.preprocessing.ICA.plot_components"]], "plot_overlay() (mne.preprocessing.ica method)": [[635, "mne.preprocessing.ICA.plot_overlay"]], "plot_properties() (mne.preprocessing.ica method)": [[635, "mne.preprocessing.ICA.plot_properties"]], "plot_scores() (mne.preprocessing.ica method)": [[635, "mne.preprocessing.ICA.plot_scores"]], "plot_sources() (mne.preprocessing.ica method)": [[635, "mne.preprocessing.ICA.plot_sources"]], "save() (mne.preprocessing.ica method)": [[635, "mne.preprocessing.ICA.save"]], "score_sources() (mne.preprocessing.ica method)": [[635, "mne.preprocessing.ICA.score_sources"]], "xdawn (class in mne.preprocessing)": [[636, "mne.preprocessing.Xdawn"]], "apply() (mne.preprocessing.xdawn method)": [[636, "mne.preprocessing.Xdawn.apply"]], "fit() (mne.preprocessing.xdawn method)": [[636, "mne.preprocessing.Xdawn.fit"]], "fit_transform() (mne.preprocessing.xdawn method)": [[636, "mne.preprocessing.Xdawn.fit_transform"]], "get_params() (mne.preprocessing.xdawn method)": [[636, "mne.preprocessing.Xdawn.get_params"]], "inverse_transform() (mne.preprocessing.xdawn method)": [[636, "mne.preprocessing.Xdawn.inverse_transform"]], "set_params() (mne.preprocessing.xdawn method)": [[636, "mne.preprocessing.Xdawn.set_params"]], "transform() (mne.preprocessing.xdawn method)": [[636, "mne.preprocessing.Xdawn.transform"]], "annotate_amplitude() (in module mne.preprocessing)": [[637, "mne.preprocessing.annotate_amplitude"]], "annotate_break() (in module mne.preprocessing)": [[638, "mne.preprocessing.annotate_break"]], "annotate_movement() (in module mne.preprocessing)": [[639, "mne.preprocessing.annotate_movement"]], "annotate_muscle_zscore() (in module mne.preprocessing)": [[640, "mne.preprocessing.annotate_muscle_zscore"]], "annotate_nan() (in module mne.preprocessing)": [[641, "mne.preprocessing.annotate_nan"]], "compute_average_dev_head_t() (in module mne.preprocessing)": [[642, "mne.preprocessing.compute_average_dev_head_t"]], "compute_bridged_electrodes() (in module mne.preprocessing)": [[643, "mne.preprocessing.compute_bridged_electrodes"]], "compute_current_source_density() (in module mne.preprocessing)": [[644, "mne.preprocessing.compute_current_source_density"]], "compute_fine_calibration() (in module mne.preprocessing)": [[645, "mne.preprocessing.compute_fine_calibration"]], "compute_maxwell_basis() (in module mne.preprocessing)": [[646, "mne.preprocessing.compute_maxwell_basis"]], "compute_proj_ecg() (in module mne.preprocessing)": [[647, "mne.preprocessing.compute_proj_ecg"]], "compute_proj_eog() (in module mne.preprocessing)": [[648, "mne.preprocessing.compute_proj_eog"]], "compute_proj_hfc() (in module mne.preprocessing)": [[649, "mne.preprocessing.compute_proj_hfc"]], "corrmap() (in module mne.preprocessing)": [[650, "mne.preprocessing.corrmap"]], "cortical_signal_suppression() (in module mne.preprocessing)": [[651, "mne.preprocessing.cortical_signal_suppression"]], "create_ecg_epochs() (in module mne.preprocessing)": [[652, "mne.preprocessing.create_ecg_epochs"]], "create_eog_epochs() (in module mne.preprocessing)": [[653, "mne.preprocessing.create_eog_epochs"]], "equalize_bads() (in module mne.preprocessing)": [[654, "mne.preprocessing.equalize_bads"]], "calibration (class in mne.preprocessing.eyetracking)": [[655, "mne.preprocessing.eyetracking.Calibration"]], "__contains__() (mne.preprocessing.eyetracking.calibration method)": [[655, "mne.preprocessing.eyetracking.Calibration.__contains__"]], "__getitem__() (mne.preprocessing.eyetracking.calibration method)": [[655, "mne.preprocessing.eyetracking.Calibration.__getitem__"]], "__iter__() (mne.preprocessing.eyetracking.calibration method)": [[655, "mne.preprocessing.eyetracking.Calibration.__iter__"]], "__len__() (mne.preprocessing.eyetracking.calibration method)": [[655, "mne.preprocessing.eyetracking.Calibration.__len__"]], "clear() (mne.preprocessing.eyetracking.calibration method)": [[655, "mne.preprocessing.eyetracking.Calibration.clear"]], "copy() (mne.preprocessing.eyetracking.calibration method)": [[655, "mne.preprocessing.eyetracking.Calibration.copy"]], "fromkeys() (mne.preprocessing.eyetracking.calibration method)": [[655, "mne.preprocessing.eyetracking.Calibration.fromkeys"]], "get() (mne.preprocessing.eyetracking.calibration method)": [[655, "mne.preprocessing.eyetracking.Calibration.get"]], "items() (mne.preprocessing.eyetracking.calibration method)": [[655, "mne.preprocessing.eyetracking.Calibration.items"]], "keys() (mne.preprocessing.eyetracking.calibration method)": [[655, "mne.preprocessing.eyetracking.Calibration.keys"]], "plot() (mne.preprocessing.eyetracking.calibration method)": [[655, "mne.preprocessing.eyetracking.Calibration.plot"]], "pop() (mne.preprocessing.eyetracking.calibration method)": [[655, "mne.preprocessing.eyetracking.Calibration.pop"]], "popitem() (mne.preprocessing.eyetracking.calibration method)": [[655, "mne.preprocessing.eyetracking.Calibration.popitem"]], "setdefault() (mne.preprocessing.eyetracking.calibration method)": [[655, "mne.preprocessing.eyetracking.Calibration.setdefault"]], "update() (mne.preprocessing.eyetracking.calibration method)": [[655, "mne.preprocessing.eyetracking.Calibration.update"]], "values() (mne.preprocessing.eyetracking.calibration method)": [[655, "mne.preprocessing.eyetracking.Calibration.values"]], "interpolate_blinks() (in module mne.preprocessing.eyetracking)": [[656, "mne.preprocessing.eyetracking.interpolate_blinks"]], "read_eyelink_calibration() (in module mne.preprocessing.eyetracking)": [[657, "mne.preprocessing.eyetracking.read_eyelink_calibration"]], "set_channel_types_eyetrack() (in module mne.preprocessing.eyetracking)": [[658, "mne.preprocessing.eyetracking.set_channel_types_eyetrack"]], "find_bad_channels_maxwell() (in module mne.preprocessing)": [[659, "mne.preprocessing.find_bad_channels_maxwell"]], "find_ecg_events() (in module mne.preprocessing)": [[660, "mne.preprocessing.find_ecg_events"]], "find_eog_events() (in module mne.preprocessing)": [[661, "mne.preprocessing.find_eog_events"]], "fix_stim_artifact() (in module mne.preprocessing)": [[662, "mne.preprocessing.fix_stim_artifact"]], "ica_find_ecg_events() (in module mne.preprocessing)": [[663, "mne.preprocessing.ica_find_ecg_events"]], "ica_find_eog_events() (in module mne.preprocessing)": [[664, "mne.preprocessing.ica_find_eog_events"]], "make_montage_volume() (in module mne.preprocessing.ieeg)": [[665, "mne.preprocessing.ieeg.make_montage_volume"]], "project_sensors_onto_brain() (in module mne.preprocessing.ieeg)": [[666, "mne.preprocessing.ieeg.project_sensors_onto_brain"]], "warp_montage() (in module mne.preprocessing.ieeg)": [[667, "mne.preprocessing.ieeg.warp_montage"]], "infomax() (in module mne.preprocessing)": [[668, "mne.preprocessing.infomax"]], "interpolate_bridged_electrodes() (in module mne.preprocessing)": [[669, "mne.preprocessing.interpolate_bridged_electrodes"]], "maxwell_filter() (in module mne.preprocessing)": [[670, "mne.preprocessing.maxwell_filter"]], "maxwell_filter_prepare_emptyroom() (in module mne.preprocessing)": [[671, "mne.preprocessing.maxwell_filter_prepare_emptyroom"]], "beer_lambert_law() (in module mne.preprocessing.nirs)": [[672, "mne.preprocessing.nirs.beer_lambert_law"]], "optical_density() (in module mne.preprocessing.nirs)": [[673, "mne.preprocessing.nirs.optical_density"]], "scalp_coupling_index() (in module mne.preprocessing.nirs)": [[674, "mne.preprocessing.nirs.scalp_coupling_index"]], "short_channels() (in module mne.preprocessing.nirs)": [[675, "mne.preprocessing.nirs.short_channels"]], "source_detector_distances() (in module mne.preprocessing.nirs)": [[676, "mne.preprocessing.nirs.source_detector_distances"]], "temporal_derivative_distribution_repair() (in module mne.preprocessing.nirs)": [[677, "mne.preprocessing.nirs.temporal_derivative_distribution_repair"]], "oversampled_temporal_projection() (in module mne.preprocessing)": [[678, "mne.preprocessing.oversampled_temporal_projection"]], "peak_finder() (in module mne.preprocessing)": [[679, "mne.preprocessing.peak_finder"]], "read_eog_regression() (in module mne.preprocessing)": [[680, "mne.preprocessing.read_eog_regression"]], "read_fine_calibration() (in module mne.preprocessing)": [[681, "mne.preprocessing.read_fine_calibration"]], "read_ica() (in module mne.preprocessing)": [[682, "mne.preprocessing.read_ica"]], "read_ica_eeglab() (in module mne.preprocessing)": [[683, "mne.preprocessing.read_ica_eeglab"]], "realign_raw() (in module mne.preprocessing)": [[684, "mne.preprocessing.realign_raw"]], "regress_artifact() (in module mne.preprocessing)": [[685, "mne.preprocessing.regress_artifact"]], "write_fine_calibration() (in module mne.preprocessing)": [[686, "mne.preprocessing.write_fine_calibration"]], "random_parcellation() (in module mne)": [[687, "mne.random_parcellation"]], "read_annotations() (in module mne)": [[688, "mne.read_annotations"]], "read_bem_solution() (in module mne)": [[689, "mne.read_bem_solution"]], "read_bem_surfaces() (in module mne)": [[690, "mne.read_bem_surfaces"]], "read_cov() (in module mne)": [[691, "mne.read_cov"]], "read_dipole() (in module mne)": [[692, "mne.read_dipole"]], "read_epochs() (in module mne)": [[693, "mne.read_epochs"]], "read_epochs_eeglab() (in module mne)": [[694, "mne.read_epochs_eeglab"]], "read_epochs_fieldtrip() (in module mne)": [[695, "mne.read_epochs_fieldtrip"]], "read_epochs_kit() (in module mne)": [[696, "mne.read_epochs_kit"]], "read_events() (in module mne)": [[697, "mne.read_events"]], "read_evoked_besa() (in module mne)": [[698, "mne.read_evoked_besa"]], "read_evoked_fieldtrip() (in module mne)": [[699, "mne.read_evoked_fieldtrip"]], "read_evokeds() (in module mne)": [[700, "mne.read_evokeds"]], "read_evokeds_mff() (in module mne)": [[701, "mne.read_evokeds_mff"]], "read_forward_solution() (in module mne)": [[702, "mne.read_forward_solution"]], "read_freesurfer_lut() (in module mne)": [[703, "mne.read_freesurfer_lut"]], "read_label() (in module mne)": [[704, "mne.read_label"]], "read_labels_from_annot() (in module mne)": [[705, "mne.read_labels_from_annot"]], "read_lta() (in module mne)": [[706, "mne.read_lta"]], "read_morph_map() (in module mne)": [[707, "mne.read_morph_map"]], "read_proj() (in module mne)": [[708, "mne.read_proj"]], "read_reject_parameters() (in module mne)": [[709, "mne.read_reject_parameters"]], "read_source_estimate() (in module mne)": [[710, "mne.read_source_estimate"]], "read_source_morph() (in module mne)": [[711, "mne.read_source_morph"]], "read_source_spaces() (in module mne)": [[712, "mne.read_source_spaces"]], "read_surface() (in module mne)": [[713, "mne.read_surface"]], "read_talxfm() (in module mne)": [[714, "mne.read_talxfm"]], "read_trans() (in module mne)": [[715, "mne.read_trans"]], "read_tri() (in module mne)": [[716, "mne.read_tri"]], "read_vectorview_selection() (in module mne)": [[717, "mne.read_vectorview_selection"]], "rename_channels() (in module mne)": [[718, "mne.rename_channels"]], "scale_bem() (in module mne)": [[719, "mne.scale_bem"]], "scale_labels() (in module mne)": [[720, "mne.scale_labels"]], "scale_mri() (in module mne)": [[721, "mne.scale_mri"]], "scale_source_space() (in module mne)": [[722, "mne.scale_source_space"]], "sensitivity_map() (in module mne)": [[723, "mne.sensitivity_map"]], "set_bipolar_reference() (in module mne)": [[724, "mne.set_bipolar_reference"]], "set_cache_dir() (in module mne)": [[725, "mne.set_cache_dir"]], "set_config() (in module mne)": [[726, "mne.set_config"]], "set_eeg_reference() (in module mne)": [[727, "mne.set_eeg_reference"]], "set_log_file() (in module mne)": [[728, "mne.set_log_file"]], "set_log_level() (in module mne)": [[729, "mne.set_log_level"]], "set_memmap_min_size() (in module mne)": [[730, "mne.set_memmap_min_size"]], "setup_source_space() (in module mne)": [[731, "mne.setup_source_space"]], "setup_volume_source_space() (in module mne)": [[732, "mne.setup_volume_source_space"]], "sourcesimulator (class in mne.simulation)": [[733, "mne.simulation.SourceSimulator"]], "__iter__() (mne.simulation.sourcesimulator method)": [[733, "mne.simulation.SourceSimulator.__iter__"]], "add_data() (mne.simulation.sourcesimulator method)": [[733, "mne.simulation.SourceSimulator.add_data"]], "duration (mne.simulation.sourcesimulator property)": [[733, "mne.simulation.SourceSimulator.duration"]], "get_stc() (mne.simulation.sourcesimulator method)": [[733, "mne.simulation.SourceSimulator.get_stc"]], "get_stim_channel() (mne.simulation.sourcesimulator method)": [[733, "mne.simulation.SourceSimulator.get_stim_channel"]], "n_times (mne.simulation.sourcesimulator property)": [[733, "mne.simulation.SourceSimulator.n_times"]], "add_chpi() (in module mne.simulation)": [[734, "mne.simulation.add_chpi"]], "add_ecg() (in module mne.simulation)": [[735, "mne.simulation.add_ecg"]], "add_eog() (in module mne.simulation)": [[736, "mne.simulation.add_eog"]], "add_noise() (in module mne.simulation)": [[737, "mne.simulation.add_noise"]], "cosine_score() (in module mne.simulation.metrics)": [[738, "mne.simulation.metrics.cosine_score"]], "f1_score() (in module mne.simulation.metrics)": [[739, "mne.simulation.metrics.f1_score"]], "peak_position_error() (in module mne.simulation.metrics)": [[740, "mne.simulation.metrics.peak_position_error"]], "precision_score() (in module mne.simulation.metrics)": [[741, "mne.simulation.metrics.precision_score"]], "recall_score() (in module mne.simulation.metrics)": [[742, "mne.simulation.metrics.recall_score"]], "region_localization_error() (in module mne.simulation.metrics)": [[743, "mne.simulation.metrics.region_localization_error"]], "roc_auc_score() (in module mne.simulation.metrics)": [[744, "mne.simulation.metrics.roc_auc_score"]], "spatial_deviation_error() (in module mne.simulation.metrics)": [[745, "mne.simulation.metrics.spatial_deviation_error"]], "select_source_in_label() (in module mne.simulation)": [[746, "mne.simulation.select_source_in_label"]], "simulate_evoked() (in module mne.simulation)": [[747, "mne.simulation.simulate_evoked"]], "simulate_raw() (in module mne.simulation)": [[748, "mne.simulation.simulate_raw"]], "simulate_sparse_stc() (in module mne.simulation)": [[749, "mne.simulation.simulate_sparse_stc"]], "simulate_stc() (in module mne.simulation)": [[750, "mne.simulation.simulate_stc"]], "compute_distance_to_sensors() (in module mne.source_space)": [[751, "mne.source_space.compute_distance_to_sensors"]], "get_decimated_surfaces() (in module mne.source_space)": [[752, "mne.source_space.get_decimated_surfaces"]], "spatial_dist_adjacency() (in module mne)": [[753, "mne.spatial_dist_adjacency"]], "spatial_inter_hemi_adjacency() (in module mne)": [[754, "mne.spatial_inter_hemi_adjacency"]], "spatial_src_adjacency() (in module mne)": [[755, "mne.spatial_src_adjacency"]], "spatial_tris_adjacency() (in module mne)": [[756, "mne.spatial_tris_adjacency"]], "spatio_temporal_dist_adjacency() (in module mne)": [[757, "mne.spatio_temporal_dist_adjacency"]], "spatio_temporal_src_adjacency() (in module mne)": [[758, "mne.spatio_temporal_src_adjacency"]], "spatio_temporal_tris_adjacency() (in module mne)": [[759, "mne.spatio_temporal_tris_adjacency"]], "split_label() (in module mne)": [[760, "mne.split_label"]], "bonferroni_correction() (in module mne.stats)": [[761, "mne.stats.bonferroni_correction"]], "bootstrap_confidence_interval() (in module mne.stats)": [[762, "mne.stats.bootstrap_confidence_interval"]], "combine_adjacency() (in module mne.stats)": [[763, "mne.stats.combine_adjacency"]], "f_mway_rm() (in module mne.stats)": [[764, "mne.stats.f_mway_rm"]], "f_oneway() (in module mne.stats)": [[765, "mne.stats.f_oneway"]], "f_threshold_mway_rm() (in module mne.stats)": [[766, "mne.stats.f_threshold_mway_rm"]], "fdr_correction() (in module mne.stats)": [[767, "mne.stats.fdr_correction"]], "linear_regression() (in module mne.stats)": [[768, "mne.stats.linear_regression"]], "linear_regression_raw() (in module mne.stats)": [[769, "mne.stats.linear_regression_raw"]], "permutation_cluster_1samp_test() (in module mne.stats)": [[770, "mne.stats.permutation_cluster_1samp_test"]], "permutation_cluster_test() (in module mne.stats)": [[771, "mne.stats.permutation_cluster_test"]], "permutation_t_test() (in module mne.stats)": [[772, "mne.stats.permutation_t_test"]], "spatio_temporal_cluster_1samp_test() (in module mne.stats)": [[773, "mne.stats.spatio_temporal_cluster_1samp_test"]], "spatio_temporal_cluster_test() (in module mne.stats)": [[774, "mne.stats.spatio_temporal_cluster_test"]], "summarize_clusters_stc() (in module mne.stats)": [[775, "mne.stats.summarize_clusters_stc"]], "ttest_1samp_no_p() (in module mne.stats)": [[776, "mne.stats.ttest_1samp_no_p"]], "ttest_ind_no_p() (in module mne.stats)": [[777, "mne.stats.ttest_ind_no_p"]], "stc_near_sensors() (in module mne)": [[778, "mne.stc_near_sensors"]], "stc_to_label() (in module mne)": [[779, "mne.stc_to_label"]], "complete_surface_info() (in module mne.surface)": [[780, "mne.surface.complete_surface_info"]], "read_curvature() (in module mne.surface)": [[781, "mne.surface.read_curvature"]], "sys_info() (in module mne)": [[782, "mne.sys_info"]], "averagetfr (class in mne.time_frequency)": [[783, "mne.time_frequency.AverageTFR"]], "__add__() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.__add__"]], "__contains__() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.__contains__"]], "__mul__() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.__mul__"]], "__sub__() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.__sub__"]], "add_channels() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.apply_baseline"]], "ch_names (mne.time_frequency.averagetfr property)": [[783, "mne.time_frequency.AverageTFR.ch_names"]], "compensation_grade (mne.time_frequency.averagetfr property)": [[783, "mne.time_frequency.AverageTFR.compensation_grade"]], "copy() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.copy"]], "crop() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.crop"]], "decimate() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.decimate"]], "drop_channels() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.get_channel_types"]], "pick() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.pick"]], "pick_channels() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.pick_channels"]], "pick_types() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.pick_types"]], "plot() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.plot"]], "plot_joint() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.plot_joint"]], "plot_topo() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.plot_topo"]], "plot_topomap() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.plot_topomap"]], "reorder_channels() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.reorder_channels"]], "save() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.save"]], "shift_time() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.shift_time"]], "time_as_index() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.time_as_index"]], "times (mne.time_frequency.averagetfr property)": [[783, "mne.time_frequency.AverageTFR.times"]], "tmax (mne.time_frequency.averagetfr property)": [[783, "mne.time_frequency.AverageTFR.tmax"]], "tmin (mne.time_frequency.averagetfr property)": [[783, "mne.time_frequency.AverageTFR.tmin"]], "to_data_frame() (mne.time_frequency.averagetfr method)": [[783, "mne.time_frequency.AverageTFR.to_data_frame"]], "crossspectraldensity (class in mne.time_frequency)": [[784, "mne.time_frequency.CrossSpectralDensity"]], "__getitem__() (mne.time_frequency.crossspectraldensity method)": [[784, "mne.time_frequency.CrossSpectralDensity.__getitem__"]], "__len__() (mne.time_frequency.crossspectraldensity method)": [[784, "mne.time_frequency.CrossSpectralDensity.__len__"]], "copy() (mne.time_frequency.crossspectraldensity method)": [[784, "mne.time_frequency.CrossSpectralDensity.copy"]], "get_data() (mne.time_frequency.crossspectraldensity method)": [[784, "mne.time_frequency.CrossSpectralDensity.get_data"]], "mean() (mne.time_frequency.crossspectraldensity method)": [[784, "mne.time_frequency.CrossSpectralDensity.mean"]], "n_channels (mne.time_frequency.crossspectraldensity property)": [[784, "mne.time_frequency.CrossSpectralDensity.n_channels"]], "pick_channels() (mne.time_frequency.crossspectraldensity method)": [[784, "mne.time_frequency.CrossSpectralDensity.pick_channels"]], "pick_frequency() (mne.time_frequency.crossspectraldensity method)": [[784, "mne.time_frequency.CrossSpectralDensity.pick_frequency"]], "plot() (mne.time_frequency.crossspectraldensity method)": [[784, "mne.time_frequency.CrossSpectralDensity.plot"]], "save() (mne.time_frequency.crossspectraldensity method)": [[784, "mne.time_frequency.CrossSpectralDensity.save"]], "sum() (mne.time_frequency.crossspectraldensity method)": [[784, "mne.time_frequency.CrossSpectralDensity.sum"]], "epochsspectrum (class in mne.time_frequency)": [[785, "mne.time_frequency.EpochsSpectrum"]], "__contains__() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.__contains__"]], "__getitem__() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.__getitem__"]], "__iter__() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.__iter__"]], "__len__() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.__len__"]], "add_channels() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.add_reference_channels"]], "average() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.average"]], "compensation_grade (mne.time_frequency.epochsspectrum property)": [[785, "mne.time_frequency.EpochsSpectrum.compensation_grade"]], "copy() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.copy"]], "drop_channels() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.get_channel_types"]], "get_data() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.get_data"]], "metadata (mne.time_frequency.epochsspectrum property)": [[785, "mne.time_frequency.EpochsSpectrum.metadata"]], "next() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.next"]], "pick() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.pick"]], "pick_channels() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.pick_channels"]], "pick_types() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.pick_types"]], "plot() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.plot"]], "plot_topo() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.reorder_channels"]], "save() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.save"]], "to_data_frame() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.to_data_frame"]], "units() (mne.time_frequency.epochsspectrum method)": [[785, "mne.time_frequency.EpochsSpectrum.units"]], "epochsspectrumarray (class in mne.time_frequency)": [[786, "mne.time_frequency.EpochsSpectrumArray"]], "__contains__() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.__contains__"]], "__getitem__() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.__getitem__"]], "__iter__() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.__iter__"]], "__len__() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.__len__"]], "add_channels() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.add_channels"]], "add_reference_channels() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.add_reference_channels"]], "average() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.average"]], "compensation_grade (mne.time_frequency.epochsspectrumarray property)": [[786, "mne.time_frequency.EpochsSpectrumArray.compensation_grade"]], "copy() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.copy"]], "drop_channels() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.drop_channels"]], "get_channel_types() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.get_channel_types"]], "get_data() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.get_data"]], "metadata (mne.time_frequency.epochsspectrumarray property)": [[786, "mne.time_frequency.EpochsSpectrumArray.metadata"]], "next() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.next"]], "pick() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.pick"]], "pick_channels() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.pick_channels"]], "pick_types() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.pick_types"]], "plot() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.plot"]], "plot_topo() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.plot_topo"]], "plot_topomap() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.plot_topomap"]], "reorder_channels() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.reorder_channels"]], "save() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.save"]], "to_data_frame() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.to_data_frame"]], "units() (mne.time_frequency.epochsspectrumarray method)": [[786, "mne.time_frequency.EpochsSpectrumArray.units"]], "epochstfr (class in mne.time_frequency)": [[787, "mne.time_frequency.EpochsTFR"]], "__contains__() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.__contains__"]], "__getitem__() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.__getitem__"]], "__iter__() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.__iter__"]], "__len__() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.__len__"]], "add_channels() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.apply_baseline"]], "average() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.average"]], "ch_names (mne.time_frequency.epochstfr property)": [[787, "mne.time_frequency.EpochsTFR.ch_names"]], "compensation_grade (mne.time_frequency.epochstfr property)": [[787, "mne.time_frequency.EpochsTFR.compensation_grade"]], "copy() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.copy"]], "crop() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.crop"]], "decimate() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.decimate"]], "drop_channels() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.get_channel_types"]], "metadata (mne.time_frequency.epochstfr property)": [[787, "mne.time_frequency.EpochsTFR.metadata"]], "next() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.next"]], "pick() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.pick"]], "pick_channels() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.pick_channels"]], "pick_types() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.pick_types"]], "reorder_channels() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.reorder_channels"]], "save() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.save"]], "shift_time() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.shift_time"]], "time_as_index() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.time_as_index"]], "times (mne.time_frequency.epochstfr property)": [[787, "mne.time_frequency.EpochsTFR.times"]], "tmax (mne.time_frequency.epochstfr property)": [[787, "mne.time_frequency.EpochsTFR.tmax"]], "tmin (mne.time_frequency.epochstfr property)": [[787, "mne.time_frequency.EpochsTFR.tmin"]], "to_data_frame() (mne.time_frequency.epochstfr method)": [[787, "mne.time_frequency.EpochsTFR.to_data_frame"]], "spectrum (class in mne.time_frequency)": [[788, "mne.time_frequency.Spectrum"]], "__contains__() (mne.time_frequency.spectrum method)": [[788, "mne.time_frequency.Spectrum.__contains__"]], "__getitem__() (mne.time_frequency.spectrum method)": [[788, "mne.time_frequency.Spectrum.__getitem__"]], "add_channels() (mne.time_frequency.spectrum method)": [[788, "mne.time_frequency.Spectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.spectrum method)": [[788, "mne.time_frequency.Spectrum.add_reference_channels"]], "compensation_grade (mne.time_frequency.spectrum property)": [[788, "mne.time_frequency.Spectrum.compensation_grade"]], "copy() (mne.time_frequency.spectrum method)": [[788, "mne.time_frequency.Spectrum.copy"]], "drop_channels() (mne.time_frequency.spectrum method)": [[788, "mne.time_frequency.Spectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.spectrum method)": [[788, "mne.time_frequency.Spectrum.get_channel_types"]], "get_data() (mne.time_frequency.spectrum method)": [[788, "mne.time_frequency.Spectrum.get_data"]], "pick() (mne.time_frequency.spectrum method)": [[788, "mne.time_frequency.Spectrum.pick"]], "pick_channels() (mne.time_frequency.spectrum method)": [[788, "mne.time_frequency.Spectrum.pick_channels"]], "pick_types() (mne.time_frequency.spectrum method)": [[788, "mne.time_frequency.Spectrum.pick_types"]], "plot() (mne.time_frequency.spectrum method)": [[788, "mne.time_frequency.Spectrum.plot"]], "plot_topo() (mne.time_frequency.spectrum method)": [[788, "mne.time_frequency.Spectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.spectrum method)": [[788, "mne.time_frequency.Spectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.spectrum method)": [[788, "mne.time_frequency.Spectrum.reorder_channels"]], "save() (mne.time_frequency.spectrum method)": [[788, "mne.time_frequency.Spectrum.save"]], "to_data_frame() (mne.time_frequency.spectrum method)": [[788, "mne.time_frequency.Spectrum.to_data_frame"]], "units() (mne.time_frequency.spectrum method)": [[788, "mne.time_frequency.Spectrum.units"]], "spectrumarray (class in mne.time_frequency)": [[789, "mne.time_frequency.SpectrumArray"]], "__contains__() (mne.time_frequency.spectrumarray method)": [[789, "mne.time_frequency.SpectrumArray.__contains__"]], "__getitem__() (mne.time_frequency.spectrumarray method)": [[789, "mne.time_frequency.SpectrumArray.__getitem__"]], "add_channels() (mne.time_frequency.spectrumarray method)": [[789, "mne.time_frequency.SpectrumArray.add_channels"]], "add_reference_channels() (mne.time_frequency.spectrumarray method)": [[789, "mne.time_frequency.SpectrumArray.add_reference_channels"]], "compensation_grade (mne.time_frequency.spectrumarray property)": [[789, "mne.time_frequency.SpectrumArray.compensation_grade"]], "copy() (mne.time_frequency.spectrumarray method)": [[789, "mne.time_frequency.SpectrumArray.copy"]], "drop_channels() (mne.time_frequency.spectrumarray method)": [[789, "mne.time_frequency.SpectrumArray.drop_channels"]], "get_channel_types() (mne.time_frequency.spectrumarray method)": [[789, "mne.time_frequency.SpectrumArray.get_channel_types"]], "get_data() (mne.time_frequency.spectrumarray method)": [[789, "mne.time_frequency.SpectrumArray.get_data"]], "pick() (mne.time_frequency.spectrumarray method)": [[789, "mne.time_frequency.SpectrumArray.pick"]], "pick_channels() (mne.time_frequency.spectrumarray method)": [[789, "mne.time_frequency.SpectrumArray.pick_channels"]], "pick_types() (mne.time_frequency.spectrumarray method)": [[789, "mne.time_frequency.SpectrumArray.pick_types"]], "plot() (mne.time_frequency.spectrumarray method)": [[789, "mne.time_frequency.SpectrumArray.plot"]], "plot_topo() (mne.time_frequency.spectrumarray method)": [[789, "mne.time_frequency.SpectrumArray.plot_topo"]], "plot_topomap() (mne.time_frequency.spectrumarray method)": [[789, "mne.time_frequency.SpectrumArray.plot_topomap"]], "reorder_channels() (mne.time_frequency.spectrumarray method)": [[789, "mne.time_frequency.SpectrumArray.reorder_channels"]], "save() (mne.time_frequency.spectrumarray method)": [[789, "mne.time_frequency.SpectrumArray.save"]], "to_data_frame() (mne.time_frequency.spectrumarray method)": [[789, "mne.time_frequency.SpectrumArray.to_data_frame"]], "units() (mne.time_frequency.spectrumarray method)": [[789, "mne.time_frequency.SpectrumArray.units"]], "csd_array_fourier() (in module mne.time_frequency)": [[790, "mne.time_frequency.csd_array_fourier"]], "csd_array_morlet() (in module mne.time_frequency)": [[791, "mne.time_frequency.csd_array_morlet"]], "csd_array_multitaper() (in module mne.time_frequency)": [[792, "mne.time_frequency.csd_array_multitaper"]], "csd_fourier() (in module mne.time_frequency)": [[793, "mne.time_frequency.csd_fourier"]], "csd_morlet() (in module mne.time_frequency)": [[794, "mne.time_frequency.csd_morlet"]], "csd_multitaper() (in module mne.time_frequency)": [[795, "mne.time_frequency.csd_multitaper"]], "csd_tfr() (in module mne.time_frequency)": [[796, "mne.time_frequency.csd_tfr"]], "dpss_windows() (in module mne.time_frequency)": [[797, "mne.time_frequency.dpss_windows"]], "fit_iir_model_raw() (in module mne.time_frequency)": [[798, "mne.time_frequency.fit_iir_model_raw"]], "fwhm() (in module mne.time_frequency)": [[799, "mne.time_frequency.fwhm"]], "istft() (in module mne.time_frequency)": [[800, "mne.time_frequency.istft"]], "morlet() (in module mne.time_frequency)": [[801, "mne.time_frequency.morlet"]], "pick_channels_csd() (in module mne.time_frequency)": [[802, "mne.time_frequency.pick_channels_csd"]], "psd_array_multitaper() (in module mne.time_frequency)": [[803, "mne.time_frequency.psd_array_multitaper"]], "psd_array_welch() (in module mne.time_frequency)": [[804, "mne.time_frequency.psd_array_welch"]], "read_csd() (in module mne.time_frequency)": [[805, "mne.time_frequency.read_csd"]], "read_spectrum() (in module mne.time_frequency)": [[806, "mne.time_frequency.read_spectrum"]], "read_tfrs() (in module mne.time_frequency)": [[807, "mne.time_frequency.read_tfrs"]], "stft() (in module mne.time_frequency)": [[808, "mne.time_frequency.stft"]], "stftfreq() (in module mne.time_frequency)": [[809, "mne.time_frequency.stftfreq"]], "cwt() (in module mne.time_frequency.tfr)": [[810, "mne.time_frequency.tfr.cwt"]], "morlet() (in module mne.time_frequency.tfr)": [[811, "mne.time_frequency.tfr.morlet"]], "tfr_array_morlet() (in module mne.time_frequency)": [[812, "mne.time_frequency.tfr_array_morlet"]], "tfr_array_multitaper() (in module mne.time_frequency)": [[813, "mne.time_frequency.tfr_array_multitaper"]], "tfr_array_stockwell() (in module mne.time_frequency)": [[814, "mne.time_frequency.tfr_array_stockwell"]], "tfr_morlet() (in module mne.time_frequency)": [[815, "mne.time_frequency.tfr_morlet"]], "tfr_multitaper() (in module mne.time_frequency)": [[816, "mne.time_frequency.tfr_multitaper"]], "tfr_stockwell() (in module mne.time_frequency)": [[817, "mne.time_frequency.tfr_stockwell"]], "write_tfrs() (in module mne.time_frequency)": [[818, "mne.time_frequency.write_tfrs"]], "transform_surface_to() (in module mne)": [[819, "mne.transform_surface_to"]], "transform (class in mne.transforms)": [[820, "mne.transforms.Transform"]], "__contains__() (mne.transforms.transform method)": [[820, "mne.transforms.Transform.__contains__"]], "__getitem__() (mne.transforms.transform method)": [[820, "mne.transforms.Transform.__getitem__"]], "__iter__() (mne.transforms.transform method)": [[820, "mne.transforms.Transform.__iter__"]], "__len__() (mne.transforms.transform method)": [[820, "mne.transforms.Transform.__len__"]], "clear() (mne.transforms.transform method)": [[820, "mne.transforms.Transform.clear"]], "copy() (mne.transforms.transform method)": [[820, "mne.transforms.Transform.copy"]], "from_str (mne.transforms.transform property)": [[820, "mne.transforms.Transform.from_str"]], "fromkeys() (mne.transforms.transform method)": [[820, "mne.transforms.Transform.fromkeys"]], "get() (mne.transforms.transform method)": [[820, "mne.transforms.Transform.get"]], "items() (mne.transforms.transform method)": [[820, "mne.transforms.Transform.items"]], "keys() (mne.transforms.transform method)": [[820, "mne.transforms.Transform.keys"]], "pop() (mne.transforms.transform method)": [[820, "mne.transforms.Transform.pop"]], "popitem() (mne.transforms.transform method)": [[820, "mne.transforms.Transform.popitem"]], "save() (mne.transforms.transform method)": [[820, "mne.transforms.Transform.save"]], "setdefault() (mne.transforms.transform method)": [[820, "mne.transforms.Transform.setdefault"]], "to_str (mne.transforms.transform property)": [[820, "mne.transforms.Transform.to_str"]], "update() (mne.transforms.transform method)": [[820, "mne.transforms.Transform.update"]], "values() (mne.transforms.transform method)": [[820, "mne.transforms.Transform.values"]], "apply_volume_registration() (in module mne.transforms)": [[821, "mne.transforms.apply_volume_registration"]], "apply_volume_registration_points() (in module mne.transforms)": [[822, "mne.transforms.apply_volume_registration_points"]], "compute_volume_registration() (in module mne.transforms)": [[823, "mne.transforms.compute_volume_registration"]], "quat_to_rot() (in module mne.transforms)": [[824, "mne.transforms.quat_to_rot"]], "read_ras_mni_t() (in module mne.transforms)": [[825, "mne.transforms.read_ras_mni_t"]], "rot_to_quat() (in module mne.transforms)": [[826, "mne.transforms.rot_to_quat"]], "use_coil_def() (in module mne)": [[827, "mne.use_coil_def"]], "use_log_level (class in mne)": [[828, "mne.use_log_level"]], "deprecated (class in mne.utils)": [[829, "mne.utils.deprecated"]], "warn() (in module mne.utils)": [[830, "mne.utils.warn"]], "verbose() (in module mne)": [[831, "mne.verbose"]], "vertex_to_mni() (in module mne)": [[832, "mne.vertex_to_mni"]], "brain (class in mne.viz)": [[833, "mne.viz.Brain"]], "add_annotation() (mne.viz.brain method)": [[833, "mne.viz.Brain.add_annotation"]], "add_data() (mne.viz.brain method)": [[833, "mne.viz.Brain.add_data"]], "add_dipole() (mne.viz.brain method)": [[833, "mne.viz.Brain.add_dipole"]], "add_foci() (mne.viz.brain method)": [[833, "mne.viz.Brain.add_foci"]], "add_forward() (mne.viz.brain method)": [[833, "mne.viz.Brain.add_forward"]], "add_head() (mne.viz.brain method)": [[833, "mne.viz.Brain.add_head"]], "add_label() (mne.viz.brain method)": [[833, "mne.viz.Brain.add_label"]], "add_sensors() (mne.viz.brain method)": [[833, "mne.viz.Brain.add_sensors"]], "add_skull() (mne.viz.brain method)": [[833, "mne.viz.Brain.add_skull"]], "add_text() (mne.viz.brain method)": [[833, "mne.viz.Brain.add_text"]], "add_volume_labels() (mne.viz.brain method)": [[833, "mne.viz.Brain.add_volume_labels"]], "apply_auto_scaling() (mne.viz.brain method)": [[833, "mne.viz.Brain.apply_auto_scaling"]], "clear_glyphs() (mne.viz.brain method)": [[833, "mne.viz.Brain.clear_glyphs"]], "close() (mne.viz.brain method)": [[833, "mne.viz.Brain.close"]], "data (mne.viz.brain property)": [[833, "mne.viz.Brain.data"]], "get_picked_points() (mne.viz.brain method)": [[833, "mne.viz.Brain.get_picked_points"]], "get_view() (mne.viz.brain method)": [[833, "mne.viz.Brain.get_view"]], "help() (mne.viz.brain method)": [[833, "mne.viz.Brain.help"]], "interaction (mne.viz.brain property)": [[833, "mne.viz.Brain.interaction"]], "plot_time_course() (mne.viz.brain method)": [[833, "mne.viz.Brain.plot_time_course"]], "plot_time_line() (mne.viz.brain method)": [[833, "mne.viz.Brain.plot_time_line"]], "remove_annotations() (mne.viz.brain method)": [[833, "mne.viz.Brain.remove_annotations"]], "remove_data() (mne.viz.brain method)": [[833, "mne.viz.Brain.remove_data"]], "remove_dipole() (mne.viz.brain method)": [[833, "mne.viz.Brain.remove_dipole"]], "remove_forward() (mne.viz.brain method)": [[833, "mne.viz.Brain.remove_forward"]], "remove_head() (mne.viz.brain method)": [[833, "mne.viz.Brain.remove_head"]], "remove_labels() (mne.viz.brain method)": [[833, "mne.viz.Brain.remove_labels"]], "remove_sensors() (mne.viz.brain method)": [[833, "mne.viz.Brain.remove_sensors"]], "remove_skull() (mne.viz.brain method)": [[833, "mne.viz.Brain.remove_skull"]], "remove_text() (mne.viz.brain method)": [[833, "mne.viz.Brain.remove_text"]], "remove_volume_labels() (mne.viz.brain method)": [[833, "mne.viz.Brain.remove_volume_labels"]], "reset() (mne.viz.brain method)": [[833, "mne.viz.Brain.reset"]], "reset_view() (mne.viz.brain method)": [[833, "mne.viz.Brain.reset_view"]], "restore_user_scaling() (mne.viz.brain method)": [[833, "mne.viz.Brain.restore_user_scaling"]], "save_image() (mne.viz.brain method)": [[833, "mne.viz.Brain.save_image"]], "save_movie() (mne.viz.brain method)": [[833, "mne.viz.Brain.save_movie"]], "screenshot() (mne.viz.brain method)": [[833, "mne.viz.Brain.screenshot"]], "set_data_smoothing() (mne.viz.brain method)": [[833, "mne.viz.Brain.set_data_smoothing"]], "set_playback_speed() (mne.viz.brain method)": [[833, "mne.viz.Brain.set_playback_speed"]], "set_time() (mne.viz.brain method)": [[833, "mne.viz.Brain.set_time"]], "set_time_interpolation() (mne.viz.brain method)": [[833, "mne.viz.Brain.set_time_interpolation"]], "set_time_point() (mne.viz.brain method)": [[833, "mne.viz.Brain.set_time_point"]], "setup_time_viewer() (mne.viz.brain method)": [[833, "mne.viz.Brain.setup_time_viewer"]], "show() (mne.viz.brain method)": [[833, "mne.viz.Brain.show"]], "show_view() (mne.viz.brain method)": [[833, "mne.viz.Brain.show_view"]], "time_interpolation (mne.viz.brain property)": [[833, "mne.viz.Brain.time_interpolation"]], "toggle_interface() (mne.viz.brain method)": [[833, "mne.viz.Brain.toggle_interface"]], "toggle_playback() (mne.viz.brain method)": [[833, "mne.viz.Brain.toggle_playback"]], "update_lut() (mne.viz.brain method)": [[833, "mne.viz.Brain.update_lut"]], "clickableimage (class in mne.viz)": [[834, "mne.viz.ClickableImage"]], "onclick() (mne.viz.clickableimage method)": [[834, "mne.viz.ClickableImage.onclick"]], "plot_clicks() (mne.viz.clickableimage method)": [[834, "mne.viz.ClickableImage.plot_clicks"]], "to_layout() (mne.viz.clickableimage method)": [[834, "mne.viz.ClickableImage.to_layout"]], "evokedfield (class in mne.viz)": [[835, "mne.viz.EvokedField"]], "set_contours() (mne.viz.evokedfield method)": [[835, "mne.viz.EvokedField.set_contours"]], "set_time() (mne.viz.evokedfield method)": [[835, "mne.viz.EvokedField.set_time"]], "set_vmax() (mne.viz.evokedfield method)": [[835, "mne.viz.EvokedField.set_vmax"]], "figure3d (class in mne.viz)": [[836, "mne.viz.Figure3D"]], "plotter (mne.viz.figure3d property)": [[836, "mne.viz.Figure3D.plotter"]], "add_background_image() (in module mne.viz)": [[837, "mne.viz.add_background_image"]], "centers_to_edges() (in module mne.viz)": [[838, "mne.viz.centers_to_edges"]], "circular_layout() (in module mne.viz)": [[839, "mne.viz.circular_layout"]], "close_3d_figure() (in module mne.viz)": [[840, "mne.viz.close_3d_figure"]], "close_all_3d_figures() (in module mne.viz)": [[841, "mne.viz.close_all_3d_figures"]], "compare_fiff() (in module mne.viz)": [[842, "mne.viz.compare_fiff"]], "create_3d_figure() (in module mne.viz)": [[843, "mne.viz.create_3d_figure"]], "plot_gaze() (in module mne.viz.eyetracking)": [[844, "mne.viz.eyetracking.plot_gaze"]], "get_3d_backend() (in module mne.viz)": [[845, "mne.viz.get_3d_backend"]], "get_brain_class() (in module mne.viz)": [[846, "mne.viz.get_brain_class"]], "get_browser_backend() (in module mne.viz)": [[847, "mne.viz.get_browser_backend"]], "iter_topography() (in module mne.viz)": [[848, "mne.viz.iter_topography"]], "link_brains() (in module mne.viz)": [[849, "mne.viz.link_brains"]], "mne_analyze_colormap() (in module mne.viz)": [[850, "mne.viz.mne_analyze_colormap"]], "plot_alignment() (in module mne.viz)": [[851, "mne.viz.plot_alignment"]], "plot_arrowmap() (in module mne.viz)": [[852, "mne.viz.plot_arrowmap"]], "plot_bem() (in module mne.viz)": [[853, "mne.viz.plot_bem"]], "plot_brain_colorbar() (in module mne.viz)": [[854, "mne.viz.plot_brain_colorbar"]], "plot_bridged_electrodes() (in module mne.viz)": [[855, "mne.viz.plot_bridged_electrodes"]], "plot_ch_adjacency() (in module mne.viz)": [[856, "mne.viz.plot_ch_adjacency"]], "plot_channel_labels_circle() (in module mne.viz)": [[857, "mne.viz.plot_channel_labels_circle"]], "plot_chpi_snr() (in module mne.viz)": [[858, "mne.viz.plot_chpi_snr"]], "plot_compare_evokeds() (in module mne.viz)": [[859, "mne.viz.plot_compare_evokeds"]], "plot_cov() (in module mne.viz)": [[860, "mne.viz.plot_cov"]], "plot_csd() (in module mne.viz)": [[861, "mne.viz.plot_csd"]], "plot_dipole_amplitudes() (in module mne.viz)": [[862, "mne.viz.plot_dipole_amplitudes"]], "plot_dipole_locations() (in module mne.viz)": [[863, "mne.viz.plot_dipole_locations"]], "plot_drop_log() (in module mne.viz)": [[864, "mne.viz.plot_drop_log"]], "plot_epochs() (in module mne.viz)": [[865, "mne.viz.plot_epochs"]], "plot_epochs_image() (in module mne.viz)": [[866, "mne.viz.plot_epochs_image"]], "plot_epochs_psd_topomap() (in module mne.viz)": [[867, "mne.viz.plot_epochs_psd_topomap"]], "plot_events() (in module mne.viz)": [[868, "mne.viz.plot_events"]], "plot_evoked() (in module mne.viz)": [[869, "mne.viz.plot_evoked"]], "plot_evoked_field() (in module mne.viz)": [[870, "mne.viz.plot_evoked_field"]], "plot_evoked_image() (in module mne.viz)": [[871, "mne.viz.plot_evoked_image"]], "plot_evoked_joint() (in module mne.viz)": [[872, "mne.viz.plot_evoked_joint"]], "plot_evoked_topo() (in module mne.viz)": [[873, "mne.viz.plot_evoked_topo"]], "plot_evoked_topomap() (in module mne.viz)": [[874, "mne.viz.plot_evoked_topomap"]], "plot_evoked_white() (in module mne.viz)": [[875, "mne.viz.plot_evoked_white"]], "plot_filter() (in module mne.viz)": [[876, "mne.viz.plot_filter"]], "plot_head_positions() (in module mne.viz)": [[877, "mne.viz.plot_head_positions"]], "plot_ica_components() (in module mne.viz)": [[878, "mne.viz.plot_ica_components"]], "plot_ica_overlay() (in module mne.viz)": [[879, "mne.viz.plot_ica_overlay"]], "plot_ica_properties() (in module mne.viz)": [[880, "mne.viz.plot_ica_properties"]], "plot_ica_scores() (in module mne.viz)": [[881, "mne.viz.plot_ica_scores"]], "plot_ica_sources() (in module mne.viz)": [[882, "mne.viz.plot_ica_sources"]], "plot_ideal_filter() (in module mne.viz)": [[883, "mne.viz.plot_ideal_filter"]], "plot_layout() (in module mne.viz)": [[884, "mne.viz.plot_layout"]], "plot_montage() (in module mne.viz)": [[885, "mne.viz.plot_montage"]], "plot_projs_joint() (in module mne.viz)": [[886, "mne.viz.plot_projs_joint"]], "plot_projs_topomap() (in module mne.viz)": [[887, "mne.viz.plot_projs_topomap"]], "plot_raw() (in module mne.viz)": [[888, "mne.viz.plot_raw"]], "plot_raw_psd() (in module mne.viz)": [[889, "mne.viz.plot_raw_psd"]], "plot_regression_weights() (in module mne.viz)": [[890, "mne.viz.plot_regression_weights"]], "plot_sensors() (in module mne.viz)": [[891, "mne.viz.plot_sensors"]], "plot_snr_estimate() (in module mne.viz)": [[892, "mne.viz.plot_snr_estimate"]], "plot_source_estimates() (in module mne.viz)": [[893, "mne.viz.plot_source_estimates"]], "plot_sparse_source_estimates() (in module mne.viz)": [[894, "mne.viz.plot_sparse_source_estimates"]], "plot_tfr_topomap() (in module mne.viz)": [[895, "mne.viz.plot_tfr_topomap"]], "plot_topo_image_epochs() (in module mne.viz)": [[896, "mne.viz.plot_topo_image_epochs"]], "plot_topomap() (in module mne.viz)": [[897, "mne.viz.plot_topomap"]], "plot_vector_source_estimates() (in module mne.viz)": [[898, "mne.viz.plot_vector_source_estimates"]], "plot_volume_source_estimates() (in module mne.viz)": [[899, "mne.viz.plot_volume_source_estimates"]], "set_3d_backend() (in module mne.viz)": [[900, "mne.viz.set_3d_backend"]], "set_3d_options() (in module mne.viz)": [[901, "mne.viz.set_3d_options"]], "set_3d_title() (in module mne.viz)": [[902, "mne.viz.set_3d_title"]], "set_3d_view() (in module mne.viz)": [[903, "mne.viz.set_3d_view"]], "set_browser_backend() (in module mne.viz)": [[904, "mne.viz.set_browser_backend"]], "snapshot_brain_montage() (in module mne.viz)": [[905, "mne.viz.snapshot_brain_montage"]], "colormaprange (class in mne.viz.ui_events)": [[906, "mne.viz.ui_events.ColormapRange"]], "name (mne.viz.ui_events.colormaprange property)": [[906, "mne.viz.ui_events.ColormapRange.name"]], "contours (class in mne.viz.ui_events)": [[907, "mne.viz.ui_events.Contours"]], "name (mne.viz.ui_events.contours property)": [[907, "mne.viz.ui_events.Contours.name"]], "figureclosing (class in mne.viz.ui_events)": [[908, "mne.viz.ui_events.FigureClosing"]], "name (mne.viz.ui_events.figureclosing property)": [[908, "mne.viz.ui_events.FigureClosing.name"]], "playbackspeed (class in mne.viz.ui_events)": [[909, "mne.viz.ui_events.PlaybackSpeed"]], "name (mne.viz.ui_events.playbackspeed property)": [[909, "mne.viz.ui_events.PlaybackSpeed.name"]], "timechange (class in mne.viz.ui_events)": [[910, "mne.viz.ui_events.TimeChange"]], "name (mne.viz.ui_events.timechange property)": [[910, "mne.viz.ui_events.TimeChange.name"]], "uievent (class in mne.viz.ui_events)": [[911, "mne.viz.ui_events.UIEvent"]], "name (mne.viz.ui_events.uievent property)": [[911, "mne.viz.ui_events.UIEvent.name"]], "vertexselect (class in mne.viz.ui_events)": [[912, "mne.viz.ui_events.VertexSelect"]], "name (mne.viz.ui_events.vertexselect property)": [[912, "mne.viz.ui_events.VertexSelect.name"]], "disable_ui_events() (in module mne.viz.ui_events)": [[913, "mne.viz.ui_events.disable_ui_events"]], "link() (in module mne.viz.ui_events)": [[914, "mne.viz.ui_events.link"]], "publish() (in module mne.viz.ui_events)": [[915, "mne.viz.ui_events.publish"]], "subscribe() (in module mne.viz.ui_events)": [[916, "mne.viz.ui_events.subscribe"]], "unlink() (in module mne.viz.ui_events)": [[917, "mne.viz.ui_events.unlink"]], "unsubscribe() (in module mne.viz.ui_events)": [[918, "mne.viz.ui_events.unsubscribe"]], "use_3d_backend() (in module mne.viz)": [[919, "mne.viz.use_3d_backend"]], "use_browser_backend() (in module mne.viz)": [[920, "mne.viz.use_browser_backend"]], "what() (in module mne)": [[921, "mne.what"]], "write_bem_solution() (in module mne)": [[922, "mne.write_bem_solution"]], "write_bem_surfaces() (in module mne)": [[923, "mne.write_bem_surfaces"]], "write_cov() (in module mne)": [[924, "mne.write_cov"]], "write_events() (in module mne)": [[925, "mne.write_events"]], "write_evokeds() (in module mne)": [[926, "mne.write_evokeds"]], "write_forward_solution() (in module mne)": [[927, "mne.write_forward_solution"]], "write_head_bem() (in module mne)": [[928, "mne.write_head_bem"]], "write_label() (in module mne)": [[929, "mne.write_label"]], "write_labels_to_annot() (in module mne)": [[930, "mne.write_labels_to_annot"]], "write_proj() (in module mne)": [[931, "mne.write_proj"]], "write_source_spaces() (in module mne)": [[932, "mne.write_source_spaces"]], "write_surface() (in module mne)": [[933, "mne.write_surface"]], "write_trans() (in module mne)": [[934, "mne.write_trans"]]}})