Search.setIndex({"docnames": ["auto_examples/connectivity/index", "auto_examples/datasets/brainstorm_data", "auto_examples/datasets/hf_sef_data", "auto_examples/datasets/index", "auto_examples/datasets/limo_data", "auto_examples/datasets/opm_data", "auto_examples/datasets/sg_execution_times", "auto_examples/datasets/spm_faces_dataset_sgskip", "auto_examples/decoding/decoding_csp_eeg", "auto_examples/decoding/decoding_csp_timefreq", "auto_examples/decoding/decoding_rsa_sgskip", "auto_examples/decoding/decoding_spatio_temporal_source", "auto_examples/decoding/decoding_spoc_CMC", "auto_examples/decoding/decoding_time_generalization_conditions", "auto_examples/decoding/decoding_unsupervised_spatial_filter", "auto_examples/decoding/decoding_xdawn_eeg", "auto_examples/decoding/ems_filtering", "auto_examples/decoding/index", "auto_examples/decoding/linear_model_patterns", "auto_examples/decoding/receptive_field_mtrf", "auto_examples/decoding/sg_execution_times", "auto_examples/decoding/ssd_spatial_filters", "auto_examples/forward/forward_sensitivity_maps", "auto_examples/forward/index", "auto_examples/forward/left_cerebellum_volume_source", "auto_examples/forward/sg_execution_times", "auto_examples/forward/source_space_morphing", "auto_examples/index", "auto_examples/inverse/compute_mne_inverse_epochs_in_label", "auto_examples/inverse/compute_mne_inverse_raw_in_label", "auto_examples/inverse/compute_mne_inverse_volume", "auto_examples/inverse/custom_inverse_solver", "auto_examples/inverse/dics_epochs", "auto_examples/inverse/dics_source_power", "auto_examples/inverse/evoked_ers_source_power", "auto_examples/inverse/gamma_map_inverse", "auto_examples/inverse/index", "auto_examples/inverse/label_activation_from_stc", "auto_examples/inverse/label_from_stc", "auto_examples/inverse/label_source_activations", "auto_examples/inverse/mixed_norm_inverse", "auto_examples/inverse/mixed_source_space_inverse", "auto_examples/inverse/mne_cov_power", "auto_examples/inverse/morph_surface_stc", "auto_examples/inverse/morph_volume_stc", "auto_examples/inverse/multi_dipole_model", "auto_examples/inverse/multidict_reweighted_tfmxne", "auto_examples/inverse/psf_ctf_label_leakage", "auto_examples/inverse/psf_ctf_vertices", "auto_examples/inverse/psf_ctf_vertices_lcmv", "auto_examples/inverse/psf_volume", "auto_examples/inverse/rap_music", "auto_examples/inverse/read_inverse", "auto_examples/inverse/read_stc", "auto_examples/inverse/resolution_metrics", "auto_examples/inverse/resolution_metrics_eegmeg", "auto_examples/inverse/sg_execution_times", "auto_examples/inverse/snr_estimate", "auto_examples/inverse/source_space_snr", "auto_examples/inverse/time_frequency_mixed_norm_inverse", "auto_examples/inverse/vector_mne_solution", "auto_examples/io/elekta_epochs", "auto_examples/io/index", "auto_examples/io/read_neo_format", "auto_examples/io/read_noise_covariance_matrix", "auto_examples/io/read_xdf", "auto_examples/io/sg_execution_times", "auto_examples/preprocessing/contralateral_referencing", "auto_examples/preprocessing/css", "auto_examples/preprocessing/define_target_events", "auto_examples/preprocessing/eeg_bridging", "auto_examples/preprocessing/eeg_csd", "auto_examples/preprocessing/eog_artifact_histogram", "auto_examples/preprocessing/eog_regression", "auto_examples/preprocessing/find_ref_artifacts", "auto_examples/preprocessing/fnirs_artifact_removal", "auto_examples/preprocessing/ica_comparison", "auto_examples/preprocessing/index", "auto_examples/preprocessing/interpolate_bad_channels", "auto_examples/preprocessing/locate_ieeg_micro", "auto_examples/preprocessing/movement_compensation", "auto_examples/preprocessing/movement_detection", "auto_examples/preprocessing/muscle_detection", "auto_examples/preprocessing/muscle_ica", "auto_examples/preprocessing/otp", "auto_examples/preprocessing/sg_execution_times", "auto_examples/preprocessing/shift_evoked", "auto_examples/preprocessing/virtual_evoked", "auto_examples/preprocessing/xdawn_denoising", "auto_examples/simulation/index", "auto_examples/simulation/plot_stc_metrics", "auto_examples/simulation/sg_execution_times", "auto_examples/simulation/simulate_evoked_data", "auto_examples/simulation/simulate_raw_data", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy", "auto_examples/simulation/source_simulator", "auto_examples/stats/cluster_stats_evoked", "auto_examples/stats/fdr_stats_evoked", "auto_examples/stats/index", "auto_examples/stats/linear_regression_raw", "auto_examples/stats/sensor_permutation_test", "auto_examples/stats/sensor_regression", "auto_examples/stats/sg_execution_times", "auto_examples/time_frequency/compute_csd", "auto_examples/time_frequency/compute_source_psd_epochs", "auto_examples/time_frequency/index", "auto_examples/time_frequency/sg_execution_times", "auto_examples/time_frequency/source_label_time_frequency", "auto_examples/time_frequency/source_power_spectrum", "auto_examples/time_frequency/source_power_spectrum_opm", "auto_examples/time_frequency/source_space_time_frequency", "auto_examples/time_frequency/temporal_whitening", "auto_examples/time_frequency/time_frequency_erds", "auto_examples/time_frequency/time_frequency_global_field_power", "auto_examples/time_frequency/time_frequency_simulated", "auto_examples/visualization/3d_to_2d", "auto_examples/visualization/brain", "auto_examples/visualization/channel_epochs_image", "auto_examples/visualization/eeg_on_scalp", "auto_examples/visualization/evoked_arrowmap", "auto_examples/visualization/evoked_topomap", "auto_examples/visualization/evoked_whitening", "auto_examples/visualization/index", "auto_examples/visualization/meg_sensors", "auto_examples/visualization/mne_helmet", "auto_examples/visualization/montage_sgskip", "auto_examples/visualization/parcellation", "auto_examples/visualization/publication_figure", "auto_examples/visualization/roi_erpimage_by_rt", "auto_examples/visualization/sensor_noise_level", "auto_examples/visualization/sg_execution_times", "auto_examples/visualization/ssp_projs_sensitivity_map", "auto_examples/visualization/topo_compare_conditions", "auto_examples/visualization/topo_customized", "auto_examples/visualization/xhemi", "auto_tutorials/clinical/10_ieeg_localize", "auto_tutorials/clinical/20_seeg", "auto_tutorials/clinical/30_ecog", "auto_tutorials/clinical/60_sleep", "auto_tutorials/clinical/index", "auto_tutorials/clinical/sg_execution_times", "auto_tutorials/epochs/10_epochs_overview", "auto_tutorials/epochs/15_baseline_regression", "auto_tutorials/epochs/20_visualize_epochs", "auto_tutorials/epochs/30_epochs_metadata", "auto_tutorials/epochs/40_autogenerate_metadata", "auto_tutorials/epochs/50_epochs_to_data_frame", "auto_tutorials/epochs/60_make_fixed_length_epochs", "auto_tutorials/epochs/index", "auto_tutorials/epochs/sg_execution_times", "auto_tutorials/evoked/10_evoked_overview", "auto_tutorials/evoked/20_visualize_evoked", "auto_tutorials/evoked/30_eeg_erp", "auto_tutorials/evoked/40_whitened", "auto_tutorials/evoked/index", "auto_tutorials/evoked/sg_execution_times", "auto_tutorials/forward/10_background_freesurfer", "auto_tutorials/forward/20_source_alignment", "auto_tutorials/forward/25_automated_coreg", "auto_tutorials/forward/30_forward", "auto_tutorials/forward/35_eeg_no_mri", "auto_tutorials/forward/50_background_freesurfer_mne", "auto_tutorials/forward/80_fix_bem_in_blender", "auto_tutorials/forward/90_compute_covariance", "auto_tutorials/forward/index", "auto_tutorials/forward/sg_execution_times", "auto_tutorials/index", "auto_tutorials/intro/10_overview", "auto_tutorials/intro/15_inplace", "auto_tutorials/intro/20_events_from_raw", "auto_tutorials/intro/30_info", "auto_tutorials/intro/40_sensor_locations", "auto_tutorials/intro/50_configure_mne", "auto_tutorials/intro/70_report", "auto_tutorials/intro/index", "auto_tutorials/intro/sg_execution_times", "auto_tutorials/inverse/10_stc_class", "auto_tutorials/inverse/20_dipole_fit", "auto_tutorials/inverse/30_mne_dspm_loreta", "auto_tutorials/inverse/35_dipole_orientations", "auto_tutorials/inverse/40_mne_fixed_free", "auto_tutorials/inverse/50_beamformer_lcmv", "auto_tutorials/inverse/60_visualize_stc", "auto_tutorials/inverse/70_eeg_mri_coords", "auto_tutorials/inverse/80_brainstorm_phantom_elekta", "auto_tutorials/inverse/85_brainstorm_phantom_ctf", "auto_tutorials/inverse/90_phantom_4DBTi", "auto_tutorials/inverse/index", "auto_tutorials/inverse/sg_execution_times", "auto_tutorials/io/10_reading_meg_data", "auto_tutorials/io/20_reading_eeg_data", "auto_tutorials/io/30_reading_fnirs_data", "auto_tutorials/io/60_ctf_bst_auditory", "auto_tutorials/io/70_reading_eyetracking_data", "auto_tutorials/io/index", "auto_tutorials/io/sg_execution_times", "auto_tutorials/machine-learning/30_strf", "auto_tutorials/machine-learning/50_decoding", "auto_tutorials/machine-learning/index", "auto_tutorials/machine-learning/sg_execution_times", "auto_tutorials/preprocessing/10_preprocessing_overview", "auto_tutorials/preprocessing/15_handling_bad_channels", "auto_tutorials/preprocessing/20_rejecting_bad_data", "auto_tutorials/preprocessing/25_background_filtering", "auto_tutorials/preprocessing/30_filtering_resampling", "auto_tutorials/preprocessing/35_artifact_correction_regression", "auto_tutorials/preprocessing/40_artifact_correction_ica", "auto_tutorials/preprocessing/45_projectors_background", "auto_tutorials/preprocessing/50_artifact_correction_ssp", "auto_tutorials/preprocessing/55_setting_eeg_reference", "auto_tutorials/preprocessing/59_head_positions", "auto_tutorials/preprocessing/60_maxwell_filtering_sss", "auto_tutorials/preprocessing/70_fnirs_processing", "auto_tutorials/preprocessing/80_opm_processing", "auto_tutorials/preprocessing/90_eyetracking_data", "auto_tutorials/preprocessing/index", "auto_tutorials/preprocessing/sg_execution_times", "auto_tutorials/raw/10_raw_overview", "auto_tutorials/raw/20_event_arrays", "auto_tutorials/raw/30_annotate_raw", "auto_tutorials/raw/40_visualize_raw", "auto_tutorials/raw/index", "auto_tutorials/raw/sg_execution_times", "auto_tutorials/simulation/10_array_objs", "auto_tutorials/simulation/70_point_spread", "auto_tutorials/simulation/80_dics", "auto_tutorials/simulation/index", "auto_tutorials/simulation/sg_execution_times", "auto_tutorials/stats-sensor-space/10_background_stats", "auto_tutorials/stats-sensor-space/20_erp_stats", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal", "auto_tutorials/stats-sensor-space/index", "auto_tutorials/stats-sensor-space/sg_execution_times", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal", "auto_tutorials/stats-source-space/index", "auto_tutorials/stats-source-space/sg_execution_times", "auto_tutorials/time-freq/10_spectrum_class", "auto_tutorials/time-freq/20_sensors_time_frequency", "auto_tutorials/time-freq/50_ssvep", "auto_tutorials/time-freq/index", "auto_tutorials/time-freq/sg_execution_times", "bibliography", "cited", "connectivity", "covariance", "creating_from_arrays", "datasets", "decoding", "events", "export", "file_io", "forward", "funding", "generated/commands", "generated/mne.AcqParserFIF", "generated/mne.Annotations", "generated/mne.BaseEpochs", "generated/mne.BiHemiLabel", "generated/mne.Covariance", "generated/mne.Dipole", "generated/mne.DipoleFixed", "generated/mne.Epochs", "generated/mne.EpochsArray", "generated/mne.Evoked", "generated/mne.EvokedArray", "generated/mne.Forward", "generated/mne.Info", "generated/mne.Label", "generated/mne.MixedSourceEstimate", "generated/mne.MixedVectorSourceEstimate", "generated/mne.Projection", "generated/mne.Report", "generated/mne.SourceEstimate", "generated/mne.SourceMorph", "generated/mne.SourceSpaces", "generated/mne.VectorSourceEstimate", "generated/mne.VolSourceEstimate", "generated/mne.VolVectorSourceEstimate", "generated/mne.add_reference_channels", "generated/mne.add_source_space_distances", "generated/mne.annotations_from_events", "generated/mne.apply_forward", "generated/mne.apply_forward_raw", "generated/mne.average_forward_solutions", "generated/mne.baseline.rescale", "generated/mne.beamformer.Beamformer", "generated/mne.beamformer.apply_dics", "generated/mne.beamformer.apply_dics_csd", "generated/mne.beamformer.apply_dics_epochs", "generated/mne.beamformer.apply_dics_tfr_epochs", "generated/mne.beamformer.apply_lcmv", "generated/mne.beamformer.apply_lcmv_cov", "generated/mne.beamformer.apply_lcmv_epochs", "generated/mne.beamformer.apply_lcmv_raw", "generated/mne.beamformer.make_dics", "generated/mne.beamformer.make_lcmv", "generated/mne.beamformer.make_lcmv_resolution_matrix", "generated/mne.beamformer.rap_music", "generated/mne.beamformer.read_beamformer", "generated/mne.bem.ConductorModel", "generated/mne.bem.convert_flash_mris", "generated/mne.bem.distance_to_bem", "generated/mne.bem.fit_sphere_to_headshape", "generated/mne.bem.get_fitting_dig", "generated/mne.bem.make_flash_bem", "generated/mne.bem.make_scalp_surfaces", "generated/mne.bem.make_watershed_bem", "generated/mne.channel_indices_by_type", "generated/mne.channel_type", "generated/mne.channels.DigMontage", "generated/mne.channels.Layout", "generated/mne.channels.combine_channels", "generated/mne.channels.compute_dev_head_t", "generated/mne.channels.compute_native_head_t", "generated/mne.channels.equalize_channels", "generated/mne.channels.find_ch_adjacency", "generated/mne.channels.find_layout", "generated/mne.channels.fix_mag_coil_types", "generated/mne.channels.generate_2d_layout", "generated/mne.channels.get_builtin_ch_adjacencies", "generated/mne.channels.get_builtin_montages", "generated/mne.channels.make_1020_channel_selections", "generated/mne.channels.make_dig_montage", "generated/mne.channels.make_eeg_layout", "generated/mne.channels.make_grid_layout", "generated/mne.channels.make_standard_montage", "generated/mne.channels.read_ch_adjacency", "generated/mne.channels.read_custom_montage", "generated/mne.channels.read_dig_captrak", "generated/mne.channels.read_dig_dat", "generated/mne.channels.read_dig_egi", "generated/mne.channels.read_dig_fif", "generated/mne.channels.read_dig_hpts", "generated/mne.channels.read_dig_localite", "generated/mne.channels.read_dig_polhemus_isotrak", "generated/mne.channels.read_layout", "generated/mne.channels.read_polhemus_fastscan", "generated/mne.channels.rename_channels", "generated/mne.chpi.compute_chpi_amplitudes", "generated/mne.chpi.compute_chpi_locs", "generated/mne.chpi.compute_chpi_snr", "generated/mne.chpi.compute_head_pos", "generated/mne.chpi.extract_chpi_locs_ctf", "generated/mne.chpi.extract_chpi_locs_kit", "generated/mne.chpi.filter_chpi", "generated/mne.chpi.get_active_chpi", "generated/mne.chpi.get_chpi_info", "generated/mne.chpi.head_pos_to_trans_rot_t", "generated/mne.chpi.read_head_pos", "generated/mne.chpi.write_head_pos", "generated/mne.combine_evoked", "generated/mne.compute_covariance", "generated/mne.compute_proj_epochs", "generated/mne.compute_proj_evoked", "generated/mne.compute_proj_raw", "generated/mne.compute_rank", "generated/mne.compute_raw_covariance", "generated/mne.compute_source_morph", "generated/mne.concatenate_epochs", "generated/mne.concatenate_events", "generated/mne.concatenate_raws", "generated/mne.convert_forward_solution", "generated/mne.coreg.Coregistration", "generated/mne.coreg.estimate_head_mri_t", "generated/mne.coreg.get_mni_fiducials", "generated/mne.count_events", "generated/mne.cov.compute_whitener", "generated/mne.cov.prepare_noise_cov", "generated/mne.cov.regularize", "generated/mne.create_default_subject", "generated/mne.create_info", "generated/mne.cuda.get_cuda_memory", "generated/mne.cuda.init_cuda", "generated/mne.cuda.set_cuda_device", "generated/mne.datasets.brainstorm.bst_auditory.data_path", "generated/mne.datasets.brainstorm.bst_raw.data_path", "generated/mne.datasets.brainstorm.bst_resting.data_path", "generated/mne.datasets.eegbci.load_data", "generated/mne.datasets.eegbci.standardize", "generated/mne.datasets.epilepsy_ecog.data_path", "generated/mne.datasets.erp_core.data_path", "generated/mne.datasets.eyelink.data_path", "generated/mne.datasets.fetch_aparc_sub_parcellation", "generated/mne.datasets.fetch_dataset", "generated/mne.datasets.fetch_fsaverage", "generated/mne.datasets.fetch_hcp_mmp_parcellation", "generated/mne.datasets.fetch_infant_template", "generated/mne.datasets.fetch_phantom", "generated/mne.datasets.fnirs_motor.data_path", "generated/mne.datasets.has_dataset", "generated/mne.datasets.hf_sef.data_path", "generated/mne.datasets.kiloword.data_path", "generated/mne.datasets.limo.load_data", "generated/mne.datasets.misc.data_path", "generated/mne.datasets.mtrf.data_path", "generated/mne.datasets.multimodal.data_path", "generated/mne.datasets.opm.data_path", "generated/mne.datasets.phantom_4dbti.data_path", "generated/mne.datasets.refmeg_noise.data_path", "generated/mne.datasets.sample.data_path", "generated/mne.datasets.sleep_physionet.age.fetch_data", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data", "generated/mne.datasets.somato.data_path", "generated/mne.datasets.spm_face.data_path", "generated/mne.datasets.ssvep.data_path", "generated/mne.datasets.ucl_opm_auditory.data_path", "generated/mne.datasets.visual_92_categories.data_path", "generated/mne.decimate_surface", "generated/mne.decoding.CSP", "generated/mne.decoding.EMS", "generated/mne.decoding.FilterEstimator", "generated/mne.decoding.GeneralizingEstimator", "generated/mne.decoding.LinearModel", "generated/mne.decoding.PSDEstimator", "generated/mne.decoding.ReceptiveField", "generated/mne.decoding.SPoC", "generated/mne.decoding.SSD", "generated/mne.decoding.Scaler", "generated/mne.decoding.SlidingEstimator", "generated/mne.decoding.TemporalFilter", "generated/mne.decoding.TimeDelayingRidge", "generated/mne.decoding.TimeFrequency", "generated/mne.decoding.UnsupervisedSpatialFilter", "generated/mne.decoding.Vectorizer", "generated/mne.decoding.compute_ems", "generated/mne.decoding.cross_val_multiscore", "generated/mne.decoding.get_coef", "generated/mne.dig_mri_distances", "generated/mne.dipole.get_phantom_dipoles", "generated/mne.epochs.average_movements", "generated/mne.epochs.combine_event_ids", "generated/mne.epochs.equalize_epoch_counts", "generated/mne.epochs.make_metadata", "generated/mne.equalize_channels", "generated/mne.event.define_target_events", "generated/mne.event.match_event_names", "generated/mne.event.shift_time_events", "generated/mne.events_from_annotations", "generated/mne.export.export_epochs", "generated/mne.export.export_evokeds", "generated/mne.export.export_evokeds_mff", "generated/mne.export.export_raw", "generated/mne.extract_label_time_course", "generated/mne.filter.construct_iir_filter", "generated/mne.filter.create_filter", "generated/mne.filter.estimate_ringing_samples", "generated/mne.filter.filter_data", "generated/mne.filter.notch_filter", "generated/mne.filter.resample", "generated/mne.find_events", "generated/mne.find_stim_steps", "generated/mne.fit_dipole", "generated/mne.forward.compute_depth_prior", "generated/mne.forward.compute_orient_prior", "generated/mne.forward.restrict_forward_to_label", "generated/mne.forward.restrict_forward_to_stc", "generated/mne.get_config", "generated/mne.get_config_path", "generated/mne.get_head_surf", "generated/mne.get_meg_helmet_surf", "generated/mne.get_montage_volume_labels", "generated/mne.get_volume_labels_from_aseg", "generated/mne.get_volume_labels_from_src", "generated/mne.grade_to_tris", "generated/mne.grade_to_vertices", "generated/mne.grand_average", "generated/mne.grow_labels", "generated/mne.gui.coregistration", "generated/mne.gui.locate_ieeg", "generated/mne.head_to_mni", "generated/mne.head_to_mri", "generated/mne.inverse_sparse.gamma_map", "generated/mne.inverse_sparse.make_stc_from_dipoles", "generated/mne.inverse_sparse.mixed_norm", "generated/mne.inverse_sparse.tf_mixed_norm", "generated/mne.io.BaseRaw", "generated/mne.io.Raw", "generated/mne.io.RawArray", "generated/mne.io.anonymize_info", "generated/mne.io.kit.read_mrk", "generated/mne.io.read_fiducials", "generated/mne.io.read_info", "generated/mne.io.read_raw", "generated/mne.io.read_raw_artemis123", "generated/mne.io.read_raw_bdf", "generated/mne.io.read_raw_boxy", "generated/mne.io.read_raw_brainvision", "generated/mne.io.read_raw_bti", "generated/mne.io.read_raw_cnt", "generated/mne.io.read_raw_ctf", "generated/mne.io.read_raw_curry", "generated/mne.io.read_raw_edf", "generated/mne.io.read_raw_eeglab", "generated/mne.io.read_raw_egi", "generated/mne.io.read_raw_eximia", "generated/mne.io.read_raw_eyelink", "generated/mne.io.read_raw_fieldtrip", "generated/mne.io.read_raw_fif", "generated/mne.io.read_raw_fil", "generated/mne.io.read_raw_gdf", "generated/mne.io.read_raw_hitachi", "generated/mne.io.read_raw_kit", "generated/mne.io.read_raw_nedf", "generated/mne.io.read_raw_nicolet", "generated/mne.io.read_raw_nihon", "generated/mne.io.read_raw_nirx", "generated/mne.io.read_raw_persyst", "generated/mne.io.read_raw_snirf", "generated/mne.io.show_fiff", "generated/mne.io.write_fiducials", "generated/mne.label.select_sources", "generated/mne.label_sign_flip", "generated/mne.labels_to_stc", "generated/mne.make_ad_hoc_cov", "generated/mne.make_bem_model", "generated/mne.make_bem_solution", "generated/mne.make_field_map", "generated/mne.make_fixed_length_epochs", "generated/mne.make_fixed_length_events", "generated/mne.make_forward_dipole", "generated/mne.make_forward_solution", "generated/mne.make_sphere_model", "generated/mne.merge_events", "generated/mne.minimum_norm.InverseOperator", "generated/mne.minimum_norm.apply_inverse", "generated/mne.minimum_norm.apply_inverse_cov", "generated/mne.minimum_norm.apply_inverse_epochs", "generated/mne.minimum_norm.apply_inverse_raw", "generated/mne.minimum_norm.apply_inverse_tfr_epochs", "generated/mne.minimum_norm.compute_rank_inverse", "generated/mne.minimum_norm.compute_source_psd", "generated/mne.minimum_norm.compute_source_psd_epochs", "generated/mne.minimum_norm.estimate_snr", "generated/mne.minimum_norm.get_cross_talk", "generated/mne.minimum_norm.get_point_spread", "generated/mne.minimum_norm.make_inverse_operator", "generated/mne.minimum_norm.make_inverse_resolution_matrix", "generated/mne.minimum_norm.prepare_inverse_operator", "generated/mne.minimum_norm.read_inverse_operator", "generated/mne.minimum_norm.resolution_metrics", "generated/mne.minimum_norm.source_band_induced_power", "generated/mne.minimum_norm.source_induced_power", "generated/mne.minimum_norm.write_inverse_operator", "generated/mne.morph_labels", "generated/mne.morph_source_spaces", "generated/mne.open_docs", "generated/mne.open_report", "generated/mne.parse_config", "generated/mne.pick_channels", "generated/mne.pick_channels_cov", "generated/mne.pick_channels_forward", "generated/mne.pick_channels_regexp", "generated/mne.pick_events", "generated/mne.pick_info", "generated/mne.pick_types", "generated/mne.pick_types_forward", "generated/mne.preprocessing.EOGRegression", "generated/mne.preprocessing.ICA", "generated/mne.preprocessing.Xdawn", "generated/mne.preprocessing.annotate_amplitude", "generated/mne.preprocessing.annotate_break", "generated/mne.preprocessing.annotate_movement", "generated/mne.preprocessing.annotate_muscle_zscore", "generated/mne.preprocessing.annotate_nan", "generated/mne.preprocessing.compute_average_dev_head_t", "generated/mne.preprocessing.compute_bridged_electrodes", "generated/mne.preprocessing.compute_current_source_density", "generated/mne.preprocessing.compute_fine_calibration", "generated/mne.preprocessing.compute_maxwell_basis", "generated/mne.preprocessing.compute_proj_ecg", "generated/mne.preprocessing.compute_proj_eog", "generated/mne.preprocessing.compute_proj_hfc", "generated/mne.preprocessing.corrmap", "generated/mne.preprocessing.cortical_signal_suppression", "generated/mne.preprocessing.create_ecg_epochs", "generated/mne.preprocessing.create_eog_epochs", "generated/mne.preprocessing.equalize_bads", "generated/mne.preprocessing.eyetracking.set_channel_types_eyetrack", "generated/mne.preprocessing.find_bad_channels_maxwell", "generated/mne.preprocessing.find_ecg_events", "generated/mne.preprocessing.find_eog_events", "generated/mne.preprocessing.fix_stim_artifact", "generated/mne.preprocessing.ica_find_ecg_events", "generated/mne.preprocessing.ica_find_eog_events", "generated/mne.preprocessing.ieeg.make_montage_volume", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain", "generated/mne.preprocessing.ieeg.warp_montage", "generated/mne.preprocessing.infomax", "generated/mne.preprocessing.interpolate_bridged_electrodes", "generated/mne.preprocessing.maxwell_filter", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom", "generated/mne.preprocessing.nirs.beer_lambert_law", "generated/mne.preprocessing.nirs.optical_density", "generated/mne.preprocessing.nirs.scalp_coupling_index", "generated/mne.preprocessing.nirs.short_channels", "generated/mne.preprocessing.nirs.source_detector_distances", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair", "generated/mne.preprocessing.oversampled_temporal_projection", "generated/mne.preprocessing.peak_finder", "generated/mne.preprocessing.read_eog_regression", "generated/mne.preprocessing.read_fine_calibration", "generated/mne.preprocessing.read_ica", "generated/mne.preprocessing.read_ica_eeglab", "generated/mne.preprocessing.realign_raw", "generated/mne.preprocessing.regress_artifact", "generated/mne.preprocessing.write_fine_calibration", "generated/mne.random_parcellation", "generated/mne.read_annotations", "generated/mne.read_bem_solution", "generated/mne.read_bem_surfaces", "generated/mne.read_cov", "generated/mne.read_dipole", "generated/mne.read_epochs", "generated/mne.read_epochs_eeglab", "generated/mne.read_epochs_fieldtrip", "generated/mne.read_epochs_kit", "generated/mne.read_events", "generated/mne.read_evoked_besa", "generated/mne.read_evoked_fieldtrip", "generated/mne.read_evokeds", "generated/mne.read_evokeds_mff", "generated/mne.read_forward_solution", "generated/mne.read_freesurfer_lut", "generated/mne.read_label", "generated/mne.read_labels_from_annot", "generated/mne.read_lta", "generated/mne.read_morph_map", "generated/mne.read_proj", "generated/mne.read_reject_parameters", "generated/mne.read_source_estimate", "generated/mne.read_source_morph", "generated/mne.read_source_spaces", "generated/mne.read_surface", "generated/mne.read_talxfm", "generated/mne.read_trans", "generated/mne.read_tri", "generated/mne.read_vectorview_selection", "generated/mne.rename_channels", "generated/mne.scale_bem", "generated/mne.scale_labels", "generated/mne.scale_mri", "generated/mne.scale_source_space", "generated/mne.sensitivity_map", "generated/mne.set_bipolar_reference", "generated/mne.set_cache_dir", "generated/mne.set_config", "generated/mne.set_eeg_reference", "generated/mne.set_log_file", "generated/mne.set_log_level", "generated/mne.setup_source_space", "generated/mne.setup_volume_source_space", "generated/mne.simulation.SourceSimulator", "generated/mne.simulation.add_chpi", "generated/mne.simulation.add_ecg", "generated/mne.simulation.add_eog", "generated/mne.simulation.add_noise", "generated/mne.simulation.metrics.cosine_score", "generated/mne.simulation.metrics.f1_score", "generated/mne.simulation.metrics.peak_position_error", "generated/mne.simulation.metrics.precision_score", "generated/mne.simulation.metrics.recall_score", "generated/mne.simulation.metrics.region_localization_error", "generated/mne.simulation.metrics.roc_auc_score", "generated/mne.simulation.metrics.spatial_deviation_error", "generated/mne.simulation.select_source_in_label", "generated/mne.simulation.simulate_evoked", "generated/mne.simulation.simulate_raw", "generated/mne.simulation.simulate_sparse_stc", "generated/mne.simulation.simulate_stc", "generated/mne.source_space.compute_distance_to_sensors", "generated/mne.source_space.get_decimated_surfaces", "generated/mne.spatial_dist_adjacency", "generated/mne.spatial_inter_hemi_adjacency", "generated/mne.spatial_src_adjacency", "generated/mne.spatial_tris_adjacency", "generated/mne.spatio_temporal_dist_adjacency", "generated/mne.spatio_temporal_src_adjacency", "generated/mne.spatio_temporal_tris_adjacency", "generated/mne.split_label", "generated/mne.stats.bonferroni_correction", "generated/mne.stats.bootstrap_confidence_interval", "generated/mne.stats.combine_adjacency", "generated/mne.stats.f_mway_rm", "generated/mne.stats.f_oneway", "generated/mne.stats.f_threshold_mway_rm", "generated/mne.stats.fdr_correction", "generated/mne.stats.linear_regression", "generated/mne.stats.linear_regression_raw", "generated/mne.stats.permutation_cluster_1samp_test", "generated/mne.stats.permutation_cluster_test", "generated/mne.stats.permutation_t_test", "generated/mne.stats.spatio_temporal_cluster_1samp_test", "generated/mne.stats.spatio_temporal_cluster_test", "generated/mne.stats.summarize_clusters_stc", "generated/mne.stats.ttest_1samp_no_p", "generated/mne.stats.ttest_ind_no_p", "generated/mne.stc_near_sensors", "generated/mne.stc_to_label", "generated/mne.surface.complete_surface_info", "generated/mne.surface.read_curvature", "generated/mne.sys_info", "generated/mne.time_frequency.AverageTFR", "generated/mne.time_frequency.CrossSpectralDensity", "generated/mne.time_frequency.EpochsSpectrum", "generated/mne.time_frequency.EpochsTFR", "generated/mne.time_frequency.Spectrum", "generated/mne.time_frequency.csd_array_fourier", "generated/mne.time_frequency.csd_array_morlet", "generated/mne.time_frequency.csd_array_multitaper", "generated/mne.time_frequency.csd_fourier", "generated/mne.time_frequency.csd_morlet", "generated/mne.time_frequency.csd_multitaper", "generated/mne.time_frequency.csd_tfr", "generated/mne.time_frequency.dpss_windows", "generated/mne.time_frequency.fit_iir_model_raw", "generated/mne.time_frequency.fwhm", "generated/mne.time_frequency.istft", "generated/mne.time_frequency.morlet", "generated/mne.time_frequency.pick_channels_csd", "generated/mne.time_frequency.psd_array_multitaper", "generated/mne.time_frequency.psd_array_welch", "generated/mne.time_frequency.read_csd", "generated/mne.time_frequency.read_spectrum", "generated/mne.time_frequency.read_tfrs", "generated/mne.time_frequency.stft", "generated/mne.time_frequency.stftfreq", "generated/mne.time_frequency.tfr.cwt", "generated/mne.time_frequency.tfr.morlet", "generated/mne.time_frequency.tfr_array_morlet", "generated/mne.time_frequency.tfr_array_multitaper", "generated/mne.time_frequency.tfr_array_stockwell", "generated/mne.time_frequency.tfr_morlet", "generated/mne.time_frequency.tfr_multitaper", "generated/mne.time_frequency.tfr_stockwell", "generated/mne.time_frequency.write_tfrs", "generated/mne.transform_surface_to", "generated/mne.transforms.Transform", "generated/mne.transforms.apply_volume_registration", "generated/mne.transforms.apply_volume_registration_points", "generated/mne.transforms.compute_volume_registration", "generated/mne.transforms.quat_to_rot", "generated/mne.transforms.read_ras_mni_t", "generated/mne.transforms.rot_to_quat", "generated/mne.use_coil_def", "generated/mne.use_log_level", "generated/mne.utils.deprecated", "generated/mne.utils.warn", "generated/mne.verbose", "generated/mne.vertex_to_mni", "generated/mne.viz.Brain", "generated/mne.viz.ClickableImage", "generated/mne.viz.Figure3D", "generated/mne.viz.add_background_image", "generated/mne.viz.centers_to_edges", "generated/mne.viz.circular_layout", "generated/mne.viz.close_3d_figure", "generated/mne.viz.close_all_3d_figures", "generated/mne.viz.compare_fiff", "generated/mne.viz.create_3d_figure", "generated/mne.viz.get_3d_backend", "generated/mne.viz.get_brain_class", "generated/mne.viz.get_browser_backend", "generated/mne.viz.iter_topography", "generated/mne.viz.link_brains", "generated/mne.viz.mne_analyze_colormap", "generated/mne.viz.plot_alignment", "generated/mne.viz.plot_arrowmap", "generated/mne.viz.plot_bem", "generated/mne.viz.plot_brain_colorbar", "generated/mne.viz.plot_bridged_electrodes", "generated/mne.viz.plot_ch_adjacency", "generated/mne.viz.plot_channel_labels_circle", "generated/mne.viz.plot_chpi_snr", "generated/mne.viz.plot_compare_evokeds", "generated/mne.viz.plot_cov", "generated/mne.viz.plot_csd", "generated/mne.viz.plot_dipole_amplitudes", "generated/mne.viz.plot_dipole_locations", "generated/mne.viz.plot_drop_log", "generated/mne.viz.plot_epochs", "generated/mne.viz.plot_epochs_image", "generated/mne.viz.plot_epochs_psd_topomap", "generated/mne.viz.plot_events", "generated/mne.viz.plot_evoked", "generated/mne.viz.plot_evoked_field", "generated/mne.viz.plot_evoked_image", "generated/mne.viz.plot_evoked_joint", "generated/mne.viz.plot_evoked_topo", "generated/mne.viz.plot_evoked_topomap", "generated/mne.viz.plot_evoked_white", "generated/mne.viz.plot_filter", "generated/mne.viz.plot_head_positions", "generated/mne.viz.plot_ica_components", "generated/mne.viz.plot_ica_overlay", "generated/mne.viz.plot_ica_properties", "generated/mne.viz.plot_ica_scores", "generated/mne.viz.plot_ica_sources", "generated/mne.viz.plot_ideal_filter", "generated/mne.viz.plot_layout", "generated/mne.viz.plot_montage", "generated/mne.viz.plot_projs_joint", "generated/mne.viz.plot_projs_topomap", "generated/mne.viz.plot_raw", "generated/mne.viz.plot_raw_psd", "generated/mne.viz.plot_regression_weights", "generated/mne.viz.plot_sensors", "generated/mne.viz.plot_snr_estimate", "generated/mne.viz.plot_source_estimates", "generated/mne.viz.plot_sparse_source_estimates", "generated/mne.viz.plot_tfr_topomap", "generated/mne.viz.plot_topo_image_epochs", "generated/mne.viz.plot_topomap", "generated/mne.viz.plot_vector_source_estimates", "generated/mne.viz.plot_volume_source_estimates", "generated/mne.viz.set_3d_backend", "generated/mne.viz.set_3d_options", "generated/mne.viz.set_3d_title", "generated/mne.viz.set_3d_view", "generated/mne.viz.set_browser_backend", "generated/mne.viz.snapshot_brain_montage", "generated/mne.viz.use_3d_backend", "generated/mne.viz.use_browser_backend", "generated/mne.what", "generated/mne.write_bem_solution", "generated/mne.write_bem_surfaces", "generated/mne.write_cov", "generated/mne.write_events", "generated/mne.write_evokeds", "generated/mne.write_forward_solution", "generated/mne.write_head_bem", "generated/mne.write_label", "generated/mne.write_labels_to_annot", "generated/mne.write_proj", "generated/mne.write_source_spaces", "generated/mne.write_surface", "generated/mne.write_trans", "glossary", "index", "install/advanced", "install/check_installation", "install/contributing", "install/freesurfer", "install/index", "install/installers", "install/manual_install", "install/manual_install_python", "install/mne_c", "install/mne_tools_suite", "install/updating", "inverse", "logging", "martinos", "mne_cpp", "most_used_classes", "mri", "overview/cite", "overview/cookbook", "overview/datasets_index", "overview/design_philosophy", "overview/development", "overview/faq", "overview/get_help", "overview/governance", "overview/implementation", "overview/index", "overview/learn_python", "overview/matlab", "overview/migrating", "overview/people", "overview/roadmap", "preprocessing", "python_reference", "reading_raw_data", "realtime", "report", "sensor_space", "simulation", "source_space", "statistics", "time_frequency", "visualization", "whats_new"], "filenames": ["auto_examples/connectivity/index.rst", "auto_examples/datasets/brainstorm_data.rst", "auto_examples/datasets/hf_sef_data.rst", "auto_examples/datasets/index.rst", "auto_examples/datasets/limo_data.rst", "auto_examples/datasets/opm_data.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/datasets/spm_faces_dataset_sgskip.rst", "auto_examples/decoding/decoding_csp_eeg.rst", "auto_examples/decoding/decoding_csp_timefreq.rst", "auto_examples/decoding/decoding_rsa_sgskip.rst", "auto_examples/decoding/decoding_spatio_temporal_source.rst", "auto_examples/decoding/decoding_spoc_CMC.rst", "auto_examples/decoding/decoding_time_generalization_conditions.rst", "auto_examples/decoding/decoding_unsupervised_spatial_filter.rst", "auto_examples/decoding/decoding_xdawn_eeg.rst", "auto_examples/decoding/ems_filtering.rst", "auto_examples/decoding/index.rst", "auto_examples/decoding/linear_model_patterns.rst", "auto_examples/decoding/receptive_field_mtrf.rst", "auto_examples/decoding/sg_execution_times.rst", "auto_examples/decoding/ssd_spatial_filters.rst", "auto_examples/forward/forward_sensitivity_maps.rst", "auto_examples/forward/index.rst", "auto_examples/forward/left_cerebellum_volume_source.rst", "auto_examples/forward/sg_execution_times.rst", "auto_examples/forward/source_space_morphing.rst", "auto_examples/index.rst", "auto_examples/inverse/compute_mne_inverse_epochs_in_label.rst", "auto_examples/inverse/compute_mne_inverse_raw_in_label.rst", "auto_examples/inverse/compute_mne_inverse_volume.rst", "auto_examples/inverse/custom_inverse_solver.rst", "auto_examples/inverse/dics_epochs.rst", "auto_examples/inverse/dics_source_power.rst", "auto_examples/inverse/evoked_ers_source_power.rst", "auto_examples/inverse/gamma_map_inverse.rst", "auto_examples/inverse/index.rst", "auto_examples/inverse/label_activation_from_stc.rst", "auto_examples/inverse/label_from_stc.rst", "auto_examples/inverse/label_source_activations.rst", "auto_examples/inverse/mixed_norm_inverse.rst", "auto_examples/inverse/mixed_source_space_inverse.rst", "auto_examples/inverse/mne_cov_power.rst", "auto_examples/inverse/morph_surface_stc.rst", "auto_examples/inverse/morph_volume_stc.rst", "auto_examples/inverse/multi_dipole_model.rst", "auto_examples/inverse/multidict_reweighted_tfmxne.rst", "auto_examples/inverse/psf_ctf_label_leakage.rst", "auto_examples/inverse/psf_ctf_vertices.rst", "auto_examples/inverse/psf_ctf_vertices_lcmv.rst", "auto_examples/inverse/psf_volume.rst", "auto_examples/inverse/rap_music.rst", "auto_examples/inverse/read_inverse.rst", "auto_examples/inverse/read_stc.rst", "auto_examples/inverse/resolution_metrics.rst", "auto_examples/inverse/resolution_metrics_eegmeg.rst", "auto_examples/inverse/sg_execution_times.rst", "auto_examples/inverse/snr_estimate.rst", "auto_examples/inverse/source_space_snr.rst", "auto_examples/inverse/time_frequency_mixed_norm_inverse.rst", "auto_examples/inverse/vector_mne_solution.rst", "auto_examples/io/elekta_epochs.rst", "auto_examples/io/index.rst", "auto_examples/io/read_neo_format.rst", "auto_examples/io/read_noise_covariance_matrix.rst", "auto_examples/io/read_xdf.rst", "auto_examples/io/sg_execution_times.rst", "auto_examples/preprocessing/contralateral_referencing.rst", "auto_examples/preprocessing/css.rst", "auto_examples/preprocessing/define_target_events.rst", "auto_examples/preprocessing/eeg_bridging.rst", "auto_examples/preprocessing/eeg_csd.rst", "auto_examples/preprocessing/eog_artifact_histogram.rst", "auto_examples/preprocessing/eog_regression.rst", "auto_examples/preprocessing/find_ref_artifacts.rst", "auto_examples/preprocessing/fnirs_artifact_removal.rst", "auto_examples/preprocessing/ica_comparison.rst", "auto_examples/preprocessing/index.rst", "auto_examples/preprocessing/interpolate_bad_channels.rst", "auto_examples/preprocessing/locate_ieeg_micro.rst", "auto_examples/preprocessing/movement_compensation.rst", "auto_examples/preprocessing/movement_detection.rst", "auto_examples/preprocessing/muscle_detection.rst", "auto_examples/preprocessing/muscle_ica.rst", "auto_examples/preprocessing/otp.rst", "auto_examples/preprocessing/sg_execution_times.rst", "auto_examples/preprocessing/shift_evoked.rst", "auto_examples/preprocessing/virtual_evoked.rst", "auto_examples/preprocessing/xdawn_denoising.rst", "auto_examples/simulation/index.rst", "auto_examples/simulation/plot_stc_metrics.rst", "auto_examples/simulation/sg_execution_times.rst", "auto_examples/simulation/simulate_evoked_data.rst", "auto_examples/simulation/simulate_raw_data.rst", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy.rst", "auto_examples/simulation/source_simulator.rst", "auto_examples/stats/cluster_stats_evoked.rst", "auto_examples/stats/fdr_stats_evoked.rst", "auto_examples/stats/index.rst", "auto_examples/stats/linear_regression_raw.rst", "auto_examples/stats/sensor_permutation_test.rst", "auto_examples/stats/sensor_regression.rst", "auto_examples/stats/sg_execution_times.rst", "auto_examples/time_frequency/compute_csd.rst", "auto_examples/time_frequency/compute_source_psd_epochs.rst", "auto_examples/time_frequency/index.rst", "auto_examples/time_frequency/sg_execution_times.rst", "auto_examples/time_frequency/source_label_time_frequency.rst", "auto_examples/time_frequency/source_power_spectrum.rst", "auto_examples/time_frequency/source_power_spectrum_opm.rst", "auto_examples/time_frequency/source_space_time_frequency.rst", "auto_examples/time_frequency/temporal_whitening.rst", "auto_examples/time_frequency/time_frequency_erds.rst", "auto_examples/time_frequency/time_frequency_global_field_power.rst", "auto_examples/time_frequency/time_frequency_simulated.rst", "auto_examples/visualization/3d_to_2d.rst", "auto_examples/visualization/brain.rst", "auto_examples/visualization/channel_epochs_image.rst", "auto_examples/visualization/eeg_on_scalp.rst", "auto_examples/visualization/evoked_arrowmap.rst", "auto_examples/visualization/evoked_topomap.rst", "auto_examples/visualization/evoked_whitening.rst", "auto_examples/visualization/index.rst", "auto_examples/visualization/meg_sensors.rst", "auto_examples/visualization/mne_helmet.rst", "auto_examples/visualization/montage_sgskip.rst", "auto_examples/visualization/parcellation.rst", "auto_examples/visualization/publication_figure.rst", "auto_examples/visualization/roi_erpimage_by_rt.rst", "auto_examples/visualization/sensor_noise_level.rst", "auto_examples/visualization/sg_execution_times.rst", "auto_examples/visualization/ssp_projs_sensitivity_map.rst", "auto_examples/visualization/topo_compare_conditions.rst", "auto_examples/visualization/topo_customized.rst", "auto_examples/visualization/xhemi.rst", "auto_tutorials/clinical/10_ieeg_localize.rst", "auto_tutorials/clinical/20_seeg.rst", "auto_tutorials/clinical/30_ecog.rst", "auto_tutorials/clinical/60_sleep.rst", "auto_tutorials/clinical/index.rst", "auto_tutorials/clinical/sg_execution_times.rst", "auto_tutorials/epochs/10_epochs_overview.rst", "auto_tutorials/epochs/15_baseline_regression.rst", "auto_tutorials/epochs/20_visualize_epochs.rst", "auto_tutorials/epochs/30_epochs_metadata.rst", "auto_tutorials/epochs/40_autogenerate_metadata.rst", "auto_tutorials/epochs/50_epochs_to_data_frame.rst", "auto_tutorials/epochs/60_make_fixed_length_epochs.rst", "auto_tutorials/epochs/index.rst", "auto_tutorials/epochs/sg_execution_times.rst", "auto_tutorials/evoked/10_evoked_overview.rst", "auto_tutorials/evoked/20_visualize_evoked.rst", "auto_tutorials/evoked/30_eeg_erp.rst", "auto_tutorials/evoked/40_whitened.rst", "auto_tutorials/evoked/index.rst", "auto_tutorials/evoked/sg_execution_times.rst", "auto_tutorials/forward/10_background_freesurfer.rst", "auto_tutorials/forward/20_source_alignment.rst", "auto_tutorials/forward/25_automated_coreg.rst", "auto_tutorials/forward/30_forward.rst", "auto_tutorials/forward/35_eeg_no_mri.rst", "auto_tutorials/forward/50_background_freesurfer_mne.rst", "auto_tutorials/forward/80_fix_bem_in_blender.rst", "auto_tutorials/forward/90_compute_covariance.rst", "auto_tutorials/forward/index.rst", "auto_tutorials/forward/sg_execution_times.rst", "auto_tutorials/index.rst", "auto_tutorials/intro/10_overview.rst", "auto_tutorials/intro/15_inplace.rst", "auto_tutorials/intro/20_events_from_raw.rst", "auto_tutorials/intro/30_info.rst", "auto_tutorials/intro/40_sensor_locations.rst", "auto_tutorials/intro/50_configure_mne.rst", "auto_tutorials/intro/70_report.rst", "auto_tutorials/intro/index.rst", "auto_tutorials/intro/sg_execution_times.rst", "auto_tutorials/inverse/10_stc_class.rst", "auto_tutorials/inverse/20_dipole_fit.rst", "auto_tutorials/inverse/30_mne_dspm_loreta.rst", "auto_tutorials/inverse/35_dipole_orientations.rst", "auto_tutorials/inverse/40_mne_fixed_free.rst", "auto_tutorials/inverse/50_beamformer_lcmv.rst", "auto_tutorials/inverse/60_visualize_stc.rst", "auto_tutorials/inverse/70_eeg_mri_coords.rst", "auto_tutorials/inverse/80_brainstorm_phantom_elekta.rst", "auto_tutorials/inverse/85_brainstorm_phantom_ctf.rst", "auto_tutorials/inverse/90_phantom_4DBTi.rst", "auto_tutorials/inverse/index.rst", "auto_tutorials/inverse/sg_execution_times.rst", "auto_tutorials/io/10_reading_meg_data.rst", "auto_tutorials/io/20_reading_eeg_data.rst", "auto_tutorials/io/30_reading_fnirs_data.rst", "auto_tutorials/io/60_ctf_bst_auditory.rst", "auto_tutorials/io/70_reading_eyetracking_data.rst", "auto_tutorials/io/index.rst", "auto_tutorials/io/sg_execution_times.rst", "auto_tutorials/machine-learning/30_strf.rst", "auto_tutorials/machine-learning/50_decoding.rst", "auto_tutorials/machine-learning/index.rst", "auto_tutorials/machine-learning/sg_execution_times.rst", "auto_tutorials/preprocessing/10_preprocessing_overview.rst", "auto_tutorials/preprocessing/15_handling_bad_channels.rst", "auto_tutorials/preprocessing/20_rejecting_bad_data.rst", "auto_tutorials/preprocessing/25_background_filtering.rst", "auto_tutorials/preprocessing/30_filtering_resampling.rst", "auto_tutorials/preprocessing/35_artifact_correction_regression.rst", "auto_tutorials/preprocessing/40_artifact_correction_ica.rst", "auto_tutorials/preprocessing/45_projectors_background.rst", "auto_tutorials/preprocessing/50_artifact_correction_ssp.rst", "auto_tutorials/preprocessing/55_setting_eeg_reference.rst", "auto_tutorials/preprocessing/59_head_positions.rst", "auto_tutorials/preprocessing/60_maxwell_filtering_sss.rst", "auto_tutorials/preprocessing/70_fnirs_processing.rst", "auto_tutorials/preprocessing/80_opm_processing.rst", "auto_tutorials/preprocessing/90_eyetracking_data.rst", "auto_tutorials/preprocessing/index.rst", "auto_tutorials/preprocessing/sg_execution_times.rst", "auto_tutorials/raw/10_raw_overview.rst", "auto_tutorials/raw/20_event_arrays.rst", "auto_tutorials/raw/30_annotate_raw.rst", "auto_tutorials/raw/40_visualize_raw.rst", "auto_tutorials/raw/index.rst", "auto_tutorials/raw/sg_execution_times.rst", "auto_tutorials/simulation/10_array_objs.rst", "auto_tutorials/simulation/70_point_spread.rst", "auto_tutorials/simulation/80_dics.rst", "auto_tutorials/simulation/index.rst", "auto_tutorials/simulation/sg_execution_times.rst", "auto_tutorials/stats-sensor-space/10_background_stats.rst", "auto_tutorials/stats-sensor-space/20_erp_stats.rst", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq.rst", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq.rst", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq.rst", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-sensor-space/index.rst", "auto_tutorials/stats-sensor-space/sg_execution_times.rst", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal.rst", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal.rst", "auto_tutorials/stats-source-space/index.rst", "auto_tutorials/stats-source-space/sg_execution_times.rst", "auto_tutorials/time-freq/10_spectrum_class.rst", "auto_tutorials/time-freq/20_sensors_time_frequency.rst", "auto_tutorials/time-freq/50_ssvep.rst", "auto_tutorials/time-freq/index.rst", "auto_tutorials/time-freq/sg_execution_times.rst", "bibliography.rst", "cited.rst", "connectivity.rst", "covariance.rst", "creating_from_arrays.rst", "datasets.rst", "decoding.rst", "events.rst", "export.rst", "file_io.rst", "forward.rst", "funding.rst", "generated/commands.rst", "generated/mne.AcqParserFIF.rst", "generated/mne.Annotations.rst", "generated/mne.BaseEpochs.rst", "generated/mne.BiHemiLabel.rst", "generated/mne.Covariance.rst", "generated/mne.Dipole.rst", "generated/mne.DipoleFixed.rst", "generated/mne.Epochs.rst", "generated/mne.EpochsArray.rst", "generated/mne.Evoked.rst", "generated/mne.EvokedArray.rst", "generated/mne.Forward.rst", "generated/mne.Info.rst", "generated/mne.Label.rst", "generated/mne.MixedSourceEstimate.rst", "generated/mne.MixedVectorSourceEstimate.rst", "generated/mne.Projection.rst", "generated/mne.Report.rst", "generated/mne.SourceEstimate.rst", "generated/mne.SourceMorph.rst", "generated/mne.SourceSpaces.rst", "generated/mne.VectorSourceEstimate.rst", "generated/mne.VolSourceEstimate.rst", "generated/mne.VolVectorSourceEstimate.rst", "generated/mne.add_reference_channels.rst", "generated/mne.add_source_space_distances.rst", "generated/mne.annotations_from_events.rst", "generated/mne.apply_forward.rst", "generated/mne.apply_forward_raw.rst", "generated/mne.average_forward_solutions.rst", "generated/mne.baseline.rescale.rst", "generated/mne.beamformer.Beamformer.rst", "generated/mne.beamformer.apply_dics.rst", "generated/mne.beamformer.apply_dics_csd.rst", "generated/mne.beamformer.apply_dics_epochs.rst", "generated/mne.beamformer.apply_dics_tfr_epochs.rst", "generated/mne.beamformer.apply_lcmv.rst", "generated/mne.beamformer.apply_lcmv_cov.rst", "generated/mne.beamformer.apply_lcmv_epochs.rst", "generated/mne.beamformer.apply_lcmv_raw.rst", "generated/mne.beamformer.make_dics.rst", "generated/mne.beamformer.make_lcmv.rst", "generated/mne.beamformer.make_lcmv_resolution_matrix.rst", "generated/mne.beamformer.rap_music.rst", "generated/mne.beamformer.read_beamformer.rst", "generated/mne.bem.ConductorModel.rst", "generated/mne.bem.convert_flash_mris.rst", "generated/mne.bem.distance_to_bem.rst", "generated/mne.bem.fit_sphere_to_headshape.rst", "generated/mne.bem.get_fitting_dig.rst", "generated/mne.bem.make_flash_bem.rst", "generated/mne.bem.make_scalp_surfaces.rst", "generated/mne.bem.make_watershed_bem.rst", "generated/mne.channel_indices_by_type.rst", "generated/mne.channel_type.rst", "generated/mne.channels.DigMontage.rst", "generated/mne.channels.Layout.rst", "generated/mne.channels.combine_channels.rst", "generated/mne.channels.compute_dev_head_t.rst", "generated/mne.channels.compute_native_head_t.rst", "generated/mne.channels.equalize_channels.rst", "generated/mne.channels.find_ch_adjacency.rst", "generated/mne.channels.find_layout.rst", "generated/mne.channels.fix_mag_coil_types.rst", "generated/mne.channels.generate_2d_layout.rst", "generated/mne.channels.get_builtin_ch_adjacencies.rst", "generated/mne.channels.get_builtin_montages.rst", "generated/mne.channels.make_1020_channel_selections.rst", "generated/mne.channels.make_dig_montage.rst", "generated/mne.channels.make_eeg_layout.rst", "generated/mne.channels.make_grid_layout.rst", "generated/mne.channels.make_standard_montage.rst", "generated/mne.channels.read_ch_adjacency.rst", "generated/mne.channels.read_custom_montage.rst", "generated/mne.channels.read_dig_captrak.rst", "generated/mne.channels.read_dig_dat.rst", "generated/mne.channels.read_dig_egi.rst", "generated/mne.channels.read_dig_fif.rst", "generated/mne.channels.read_dig_hpts.rst", "generated/mne.channels.read_dig_localite.rst", "generated/mne.channels.read_dig_polhemus_isotrak.rst", "generated/mne.channels.read_layout.rst", "generated/mne.channels.read_polhemus_fastscan.rst", "generated/mne.channels.rename_channels.rst", "generated/mne.chpi.compute_chpi_amplitudes.rst", "generated/mne.chpi.compute_chpi_locs.rst", "generated/mne.chpi.compute_chpi_snr.rst", "generated/mne.chpi.compute_head_pos.rst", "generated/mne.chpi.extract_chpi_locs_ctf.rst", "generated/mne.chpi.extract_chpi_locs_kit.rst", "generated/mne.chpi.filter_chpi.rst", "generated/mne.chpi.get_active_chpi.rst", "generated/mne.chpi.get_chpi_info.rst", "generated/mne.chpi.head_pos_to_trans_rot_t.rst", "generated/mne.chpi.read_head_pos.rst", "generated/mne.chpi.write_head_pos.rst", "generated/mne.combine_evoked.rst", "generated/mne.compute_covariance.rst", "generated/mne.compute_proj_epochs.rst", "generated/mne.compute_proj_evoked.rst", "generated/mne.compute_proj_raw.rst", "generated/mne.compute_rank.rst", "generated/mne.compute_raw_covariance.rst", "generated/mne.compute_source_morph.rst", "generated/mne.concatenate_epochs.rst", "generated/mne.concatenate_events.rst", "generated/mne.concatenate_raws.rst", "generated/mne.convert_forward_solution.rst", "generated/mne.coreg.Coregistration.rst", "generated/mne.coreg.estimate_head_mri_t.rst", "generated/mne.coreg.get_mni_fiducials.rst", "generated/mne.count_events.rst", "generated/mne.cov.compute_whitener.rst", "generated/mne.cov.prepare_noise_cov.rst", "generated/mne.cov.regularize.rst", "generated/mne.create_default_subject.rst", "generated/mne.create_info.rst", "generated/mne.cuda.get_cuda_memory.rst", "generated/mne.cuda.init_cuda.rst", "generated/mne.cuda.set_cuda_device.rst", "generated/mne.datasets.brainstorm.bst_auditory.data_path.rst", "generated/mne.datasets.brainstorm.bst_raw.data_path.rst", "generated/mne.datasets.brainstorm.bst_resting.data_path.rst", "generated/mne.datasets.eegbci.load_data.rst", "generated/mne.datasets.eegbci.standardize.rst", "generated/mne.datasets.epilepsy_ecog.data_path.rst", "generated/mne.datasets.erp_core.data_path.rst", "generated/mne.datasets.eyelink.data_path.rst", "generated/mne.datasets.fetch_aparc_sub_parcellation.rst", "generated/mne.datasets.fetch_dataset.rst", "generated/mne.datasets.fetch_fsaverage.rst", "generated/mne.datasets.fetch_hcp_mmp_parcellation.rst", "generated/mne.datasets.fetch_infant_template.rst", "generated/mne.datasets.fetch_phantom.rst", "generated/mne.datasets.fnirs_motor.data_path.rst", "generated/mne.datasets.has_dataset.rst", "generated/mne.datasets.hf_sef.data_path.rst", "generated/mne.datasets.kiloword.data_path.rst", "generated/mne.datasets.limo.load_data.rst", "generated/mne.datasets.misc.data_path.rst", "generated/mne.datasets.mtrf.data_path.rst", "generated/mne.datasets.multimodal.data_path.rst", "generated/mne.datasets.opm.data_path.rst", "generated/mne.datasets.phantom_4dbti.data_path.rst", "generated/mne.datasets.refmeg_noise.data_path.rst", "generated/mne.datasets.sample.data_path.rst", "generated/mne.datasets.sleep_physionet.age.fetch_data.rst", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data.rst", "generated/mne.datasets.somato.data_path.rst", "generated/mne.datasets.spm_face.data_path.rst", "generated/mne.datasets.ssvep.data_path.rst", "generated/mne.datasets.ucl_opm_auditory.data_path.rst", "generated/mne.datasets.visual_92_categories.data_path.rst", "generated/mne.decimate_surface.rst", "generated/mne.decoding.CSP.rst", "generated/mne.decoding.EMS.rst", "generated/mne.decoding.FilterEstimator.rst", "generated/mne.decoding.GeneralizingEstimator.rst", "generated/mne.decoding.LinearModel.rst", "generated/mne.decoding.PSDEstimator.rst", "generated/mne.decoding.ReceptiveField.rst", "generated/mne.decoding.SPoC.rst", "generated/mne.decoding.SSD.rst", "generated/mne.decoding.Scaler.rst", "generated/mne.decoding.SlidingEstimator.rst", "generated/mne.decoding.TemporalFilter.rst", "generated/mne.decoding.TimeDelayingRidge.rst", "generated/mne.decoding.TimeFrequency.rst", "generated/mne.decoding.UnsupervisedSpatialFilter.rst", "generated/mne.decoding.Vectorizer.rst", "generated/mne.decoding.compute_ems.rst", "generated/mne.decoding.cross_val_multiscore.rst", "generated/mne.decoding.get_coef.rst", "generated/mne.dig_mri_distances.rst", "generated/mne.dipole.get_phantom_dipoles.rst", "generated/mne.epochs.average_movements.rst", "generated/mne.epochs.combine_event_ids.rst", "generated/mne.epochs.equalize_epoch_counts.rst", "generated/mne.epochs.make_metadata.rst", "generated/mne.equalize_channels.rst", "generated/mne.event.define_target_events.rst", "generated/mne.event.match_event_names.rst", "generated/mne.event.shift_time_events.rst", "generated/mne.events_from_annotations.rst", "generated/mne.export.export_epochs.rst", "generated/mne.export.export_evokeds.rst", "generated/mne.export.export_evokeds_mff.rst", "generated/mne.export.export_raw.rst", "generated/mne.extract_label_time_course.rst", "generated/mne.filter.construct_iir_filter.rst", "generated/mne.filter.create_filter.rst", "generated/mne.filter.estimate_ringing_samples.rst", "generated/mne.filter.filter_data.rst", "generated/mne.filter.notch_filter.rst", "generated/mne.filter.resample.rst", "generated/mne.find_events.rst", "generated/mne.find_stim_steps.rst", "generated/mne.fit_dipole.rst", "generated/mne.forward.compute_depth_prior.rst", "generated/mne.forward.compute_orient_prior.rst", "generated/mne.forward.restrict_forward_to_label.rst", "generated/mne.forward.restrict_forward_to_stc.rst", "generated/mne.get_config.rst", "generated/mne.get_config_path.rst", "generated/mne.get_head_surf.rst", "generated/mne.get_meg_helmet_surf.rst", "generated/mne.get_montage_volume_labels.rst", "generated/mne.get_volume_labels_from_aseg.rst", "generated/mne.get_volume_labels_from_src.rst", "generated/mne.grade_to_tris.rst", "generated/mne.grade_to_vertices.rst", "generated/mne.grand_average.rst", "generated/mne.grow_labels.rst", "generated/mne.gui.coregistration.rst", "generated/mne.gui.locate_ieeg.rst", "generated/mne.head_to_mni.rst", "generated/mne.head_to_mri.rst", "generated/mne.inverse_sparse.gamma_map.rst", "generated/mne.inverse_sparse.make_stc_from_dipoles.rst", "generated/mne.inverse_sparse.mixed_norm.rst", "generated/mne.inverse_sparse.tf_mixed_norm.rst", "generated/mne.io.BaseRaw.rst", "generated/mne.io.Raw.rst", "generated/mne.io.RawArray.rst", "generated/mne.io.anonymize_info.rst", "generated/mne.io.kit.read_mrk.rst", "generated/mne.io.read_fiducials.rst", "generated/mne.io.read_info.rst", "generated/mne.io.read_raw.rst", "generated/mne.io.read_raw_artemis123.rst", "generated/mne.io.read_raw_bdf.rst", "generated/mne.io.read_raw_boxy.rst", "generated/mne.io.read_raw_brainvision.rst", "generated/mne.io.read_raw_bti.rst", "generated/mne.io.read_raw_cnt.rst", "generated/mne.io.read_raw_ctf.rst", "generated/mne.io.read_raw_curry.rst", "generated/mne.io.read_raw_edf.rst", "generated/mne.io.read_raw_eeglab.rst", "generated/mne.io.read_raw_egi.rst", "generated/mne.io.read_raw_eximia.rst", "generated/mne.io.read_raw_eyelink.rst", "generated/mne.io.read_raw_fieldtrip.rst", "generated/mne.io.read_raw_fif.rst", "generated/mne.io.read_raw_fil.rst", "generated/mne.io.read_raw_gdf.rst", "generated/mne.io.read_raw_hitachi.rst", "generated/mne.io.read_raw_kit.rst", "generated/mne.io.read_raw_nedf.rst", "generated/mne.io.read_raw_nicolet.rst", "generated/mne.io.read_raw_nihon.rst", "generated/mne.io.read_raw_nirx.rst", "generated/mne.io.read_raw_persyst.rst", "generated/mne.io.read_raw_snirf.rst", "generated/mne.io.show_fiff.rst", "generated/mne.io.write_fiducials.rst", "generated/mne.label.select_sources.rst", "generated/mne.label_sign_flip.rst", "generated/mne.labels_to_stc.rst", "generated/mne.make_ad_hoc_cov.rst", "generated/mne.make_bem_model.rst", "generated/mne.make_bem_solution.rst", "generated/mne.make_field_map.rst", "generated/mne.make_fixed_length_epochs.rst", "generated/mne.make_fixed_length_events.rst", "generated/mne.make_forward_dipole.rst", "generated/mne.make_forward_solution.rst", "generated/mne.make_sphere_model.rst", "generated/mne.merge_events.rst", "generated/mne.minimum_norm.InverseOperator.rst", "generated/mne.minimum_norm.apply_inverse.rst", "generated/mne.minimum_norm.apply_inverse_cov.rst", "generated/mne.minimum_norm.apply_inverse_epochs.rst", "generated/mne.minimum_norm.apply_inverse_raw.rst", "generated/mne.minimum_norm.apply_inverse_tfr_epochs.rst", "generated/mne.minimum_norm.compute_rank_inverse.rst", "generated/mne.minimum_norm.compute_source_psd.rst", "generated/mne.minimum_norm.compute_source_psd_epochs.rst", "generated/mne.minimum_norm.estimate_snr.rst", "generated/mne.minimum_norm.get_cross_talk.rst", "generated/mne.minimum_norm.get_point_spread.rst", "generated/mne.minimum_norm.make_inverse_operator.rst", "generated/mne.minimum_norm.make_inverse_resolution_matrix.rst", "generated/mne.minimum_norm.prepare_inverse_operator.rst", "generated/mne.minimum_norm.read_inverse_operator.rst", "generated/mne.minimum_norm.resolution_metrics.rst", "generated/mne.minimum_norm.source_band_induced_power.rst", "generated/mne.minimum_norm.source_induced_power.rst", "generated/mne.minimum_norm.write_inverse_operator.rst", "generated/mne.morph_labels.rst", "generated/mne.morph_source_spaces.rst", "generated/mne.open_docs.rst", "generated/mne.open_report.rst", "generated/mne.parse_config.rst", "generated/mne.pick_channels.rst", "generated/mne.pick_channels_cov.rst", "generated/mne.pick_channels_forward.rst", "generated/mne.pick_channels_regexp.rst", "generated/mne.pick_events.rst", "generated/mne.pick_info.rst", "generated/mne.pick_types.rst", "generated/mne.pick_types_forward.rst", "generated/mne.preprocessing.EOGRegression.rst", "generated/mne.preprocessing.ICA.rst", "generated/mne.preprocessing.Xdawn.rst", "generated/mne.preprocessing.annotate_amplitude.rst", "generated/mne.preprocessing.annotate_break.rst", "generated/mne.preprocessing.annotate_movement.rst", "generated/mne.preprocessing.annotate_muscle_zscore.rst", "generated/mne.preprocessing.annotate_nan.rst", "generated/mne.preprocessing.compute_average_dev_head_t.rst", "generated/mne.preprocessing.compute_bridged_electrodes.rst", "generated/mne.preprocessing.compute_current_source_density.rst", "generated/mne.preprocessing.compute_fine_calibration.rst", "generated/mne.preprocessing.compute_maxwell_basis.rst", "generated/mne.preprocessing.compute_proj_ecg.rst", "generated/mne.preprocessing.compute_proj_eog.rst", "generated/mne.preprocessing.compute_proj_hfc.rst", "generated/mne.preprocessing.corrmap.rst", "generated/mne.preprocessing.cortical_signal_suppression.rst", "generated/mne.preprocessing.create_ecg_epochs.rst", "generated/mne.preprocessing.create_eog_epochs.rst", "generated/mne.preprocessing.equalize_bads.rst", "generated/mne.preprocessing.eyetracking.set_channel_types_eyetrack.rst", "generated/mne.preprocessing.find_bad_channels_maxwell.rst", "generated/mne.preprocessing.find_ecg_events.rst", "generated/mne.preprocessing.find_eog_events.rst", "generated/mne.preprocessing.fix_stim_artifact.rst", "generated/mne.preprocessing.ica_find_ecg_events.rst", "generated/mne.preprocessing.ica_find_eog_events.rst", "generated/mne.preprocessing.ieeg.make_montage_volume.rst", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain.rst", "generated/mne.preprocessing.ieeg.warp_montage.rst", "generated/mne.preprocessing.infomax.rst", "generated/mne.preprocessing.interpolate_bridged_electrodes.rst", "generated/mne.preprocessing.maxwell_filter.rst", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom.rst", "generated/mne.preprocessing.nirs.beer_lambert_law.rst", "generated/mne.preprocessing.nirs.optical_density.rst", "generated/mne.preprocessing.nirs.scalp_coupling_index.rst", "generated/mne.preprocessing.nirs.short_channels.rst", "generated/mne.preprocessing.nirs.source_detector_distances.rst", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair.rst", "generated/mne.preprocessing.oversampled_temporal_projection.rst", "generated/mne.preprocessing.peak_finder.rst", "generated/mne.preprocessing.read_eog_regression.rst", "generated/mne.preprocessing.read_fine_calibration.rst", "generated/mne.preprocessing.read_ica.rst", "generated/mne.preprocessing.read_ica_eeglab.rst", "generated/mne.preprocessing.realign_raw.rst", "generated/mne.preprocessing.regress_artifact.rst", "generated/mne.preprocessing.write_fine_calibration.rst", "generated/mne.random_parcellation.rst", "generated/mne.read_annotations.rst", "generated/mne.read_bem_solution.rst", "generated/mne.read_bem_surfaces.rst", "generated/mne.read_cov.rst", "generated/mne.read_dipole.rst", "generated/mne.read_epochs.rst", "generated/mne.read_epochs_eeglab.rst", "generated/mne.read_epochs_fieldtrip.rst", "generated/mne.read_epochs_kit.rst", "generated/mne.read_events.rst", "generated/mne.read_evoked_besa.rst", "generated/mne.read_evoked_fieldtrip.rst", "generated/mne.read_evokeds.rst", "generated/mne.read_evokeds_mff.rst", "generated/mne.read_forward_solution.rst", "generated/mne.read_freesurfer_lut.rst", "generated/mne.read_label.rst", "generated/mne.read_labels_from_annot.rst", "generated/mne.read_lta.rst", "generated/mne.read_morph_map.rst", "generated/mne.read_proj.rst", "generated/mne.read_reject_parameters.rst", "generated/mne.read_source_estimate.rst", "generated/mne.read_source_morph.rst", "generated/mne.read_source_spaces.rst", "generated/mne.read_surface.rst", "generated/mne.read_talxfm.rst", "generated/mne.read_trans.rst", "generated/mne.read_tri.rst", "generated/mne.read_vectorview_selection.rst", "generated/mne.rename_channels.rst", "generated/mne.scale_bem.rst", "generated/mne.scale_labels.rst", "generated/mne.scale_mri.rst", "generated/mne.scale_source_space.rst", "generated/mne.sensitivity_map.rst", "generated/mne.set_bipolar_reference.rst", "generated/mne.set_cache_dir.rst", "generated/mne.set_config.rst", "generated/mne.set_eeg_reference.rst", "generated/mne.set_log_file.rst", "generated/mne.set_log_level.rst", "generated/mne.setup_source_space.rst", "generated/mne.setup_volume_source_space.rst", "generated/mne.simulation.SourceSimulator.rst", "generated/mne.simulation.add_chpi.rst", "generated/mne.simulation.add_ecg.rst", "generated/mne.simulation.add_eog.rst", "generated/mne.simulation.add_noise.rst", "generated/mne.simulation.metrics.cosine_score.rst", "generated/mne.simulation.metrics.f1_score.rst", "generated/mne.simulation.metrics.peak_position_error.rst", "generated/mne.simulation.metrics.precision_score.rst", "generated/mne.simulation.metrics.recall_score.rst", "generated/mne.simulation.metrics.region_localization_error.rst", "generated/mne.simulation.metrics.roc_auc_score.rst", "generated/mne.simulation.metrics.spatial_deviation_error.rst", "generated/mne.simulation.select_source_in_label.rst", "generated/mne.simulation.simulate_evoked.rst", "generated/mne.simulation.simulate_raw.rst", "generated/mne.simulation.simulate_sparse_stc.rst", "generated/mne.simulation.simulate_stc.rst", "generated/mne.source_space.compute_distance_to_sensors.rst", "generated/mne.source_space.get_decimated_surfaces.rst", "generated/mne.spatial_dist_adjacency.rst", "generated/mne.spatial_inter_hemi_adjacency.rst", "generated/mne.spatial_src_adjacency.rst", "generated/mne.spatial_tris_adjacency.rst", "generated/mne.spatio_temporal_dist_adjacency.rst", "generated/mne.spatio_temporal_src_adjacency.rst", "generated/mne.spatio_temporal_tris_adjacency.rst", "generated/mne.split_label.rst", "generated/mne.stats.bonferroni_correction.rst", "generated/mne.stats.bootstrap_confidence_interval.rst", "generated/mne.stats.combine_adjacency.rst", "generated/mne.stats.f_mway_rm.rst", "generated/mne.stats.f_oneway.rst", "generated/mne.stats.f_threshold_mway_rm.rst", "generated/mne.stats.fdr_correction.rst", "generated/mne.stats.linear_regression.rst", "generated/mne.stats.linear_regression_raw.rst", "generated/mne.stats.permutation_cluster_1samp_test.rst", "generated/mne.stats.permutation_cluster_test.rst", "generated/mne.stats.permutation_t_test.rst", "generated/mne.stats.spatio_temporal_cluster_1samp_test.rst", "generated/mne.stats.spatio_temporal_cluster_test.rst", "generated/mne.stats.summarize_clusters_stc.rst", "generated/mne.stats.ttest_1samp_no_p.rst", "generated/mne.stats.ttest_ind_no_p.rst", "generated/mne.stc_near_sensors.rst", "generated/mne.stc_to_label.rst", "generated/mne.surface.complete_surface_info.rst", "generated/mne.surface.read_curvature.rst", "generated/mne.sys_info.rst", "generated/mne.time_frequency.AverageTFR.rst", "generated/mne.time_frequency.CrossSpectralDensity.rst", "generated/mne.time_frequency.EpochsSpectrum.rst", "generated/mne.time_frequency.EpochsTFR.rst", "generated/mne.time_frequency.Spectrum.rst", "generated/mne.time_frequency.csd_array_fourier.rst", "generated/mne.time_frequency.csd_array_morlet.rst", "generated/mne.time_frequency.csd_array_multitaper.rst", "generated/mne.time_frequency.csd_fourier.rst", "generated/mne.time_frequency.csd_morlet.rst", "generated/mne.time_frequency.csd_multitaper.rst", "generated/mne.time_frequency.csd_tfr.rst", "generated/mne.time_frequency.dpss_windows.rst", "generated/mne.time_frequency.fit_iir_model_raw.rst", "generated/mne.time_frequency.fwhm.rst", "generated/mne.time_frequency.istft.rst", "generated/mne.time_frequency.morlet.rst", "generated/mne.time_frequency.pick_channels_csd.rst", "generated/mne.time_frequency.psd_array_multitaper.rst", "generated/mne.time_frequency.psd_array_welch.rst", "generated/mne.time_frequency.read_csd.rst", "generated/mne.time_frequency.read_spectrum.rst", "generated/mne.time_frequency.read_tfrs.rst", "generated/mne.time_frequency.stft.rst", "generated/mne.time_frequency.stftfreq.rst", "generated/mne.time_frequency.tfr.cwt.rst", "generated/mne.time_frequency.tfr.morlet.rst", "generated/mne.time_frequency.tfr_array_morlet.rst", "generated/mne.time_frequency.tfr_array_multitaper.rst", "generated/mne.time_frequency.tfr_array_stockwell.rst", "generated/mne.time_frequency.tfr_morlet.rst", "generated/mne.time_frequency.tfr_multitaper.rst", "generated/mne.time_frequency.tfr_stockwell.rst", "generated/mne.time_frequency.write_tfrs.rst", "generated/mne.transform_surface_to.rst", "generated/mne.transforms.Transform.rst", "generated/mne.transforms.apply_volume_registration.rst", "generated/mne.transforms.apply_volume_registration_points.rst", "generated/mne.transforms.compute_volume_registration.rst", "generated/mne.transforms.quat_to_rot.rst", "generated/mne.transforms.read_ras_mni_t.rst", "generated/mne.transforms.rot_to_quat.rst", "generated/mne.use_coil_def.rst", "generated/mne.use_log_level.rst", "generated/mne.utils.deprecated.rst", "generated/mne.utils.warn.rst", "generated/mne.verbose.rst", "generated/mne.vertex_to_mni.rst", "generated/mne.viz.Brain.rst", "generated/mne.viz.ClickableImage.rst", "generated/mne.viz.Figure3D.rst", "generated/mne.viz.add_background_image.rst", "generated/mne.viz.centers_to_edges.rst", "generated/mne.viz.circular_layout.rst", "generated/mne.viz.close_3d_figure.rst", "generated/mne.viz.close_all_3d_figures.rst", "generated/mne.viz.compare_fiff.rst", "generated/mne.viz.create_3d_figure.rst", "generated/mne.viz.get_3d_backend.rst", "generated/mne.viz.get_brain_class.rst", "generated/mne.viz.get_browser_backend.rst", "generated/mne.viz.iter_topography.rst", "generated/mne.viz.link_brains.rst", "generated/mne.viz.mne_analyze_colormap.rst", "generated/mne.viz.plot_alignment.rst", "generated/mne.viz.plot_arrowmap.rst", "generated/mne.viz.plot_bem.rst", "generated/mne.viz.plot_brain_colorbar.rst", "generated/mne.viz.plot_bridged_electrodes.rst", "generated/mne.viz.plot_ch_adjacency.rst", "generated/mne.viz.plot_channel_labels_circle.rst", "generated/mne.viz.plot_chpi_snr.rst", "generated/mne.viz.plot_compare_evokeds.rst", "generated/mne.viz.plot_cov.rst", "generated/mne.viz.plot_csd.rst", "generated/mne.viz.plot_dipole_amplitudes.rst", "generated/mne.viz.plot_dipole_locations.rst", "generated/mne.viz.plot_drop_log.rst", "generated/mne.viz.plot_epochs.rst", "generated/mne.viz.plot_epochs_image.rst", "generated/mne.viz.plot_epochs_psd_topomap.rst", "generated/mne.viz.plot_events.rst", "generated/mne.viz.plot_evoked.rst", "generated/mne.viz.plot_evoked_field.rst", "generated/mne.viz.plot_evoked_image.rst", "generated/mne.viz.plot_evoked_joint.rst", "generated/mne.viz.plot_evoked_topo.rst", "generated/mne.viz.plot_evoked_topomap.rst", "generated/mne.viz.plot_evoked_white.rst", "generated/mne.viz.plot_filter.rst", "generated/mne.viz.plot_head_positions.rst", "generated/mne.viz.plot_ica_components.rst", "generated/mne.viz.plot_ica_overlay.rst", "generated/mne.viz.plot_ica_properties.rst", "generated/mne.viz.plot_ica_scores.rst", "generated/mne.viz.plot_ica_sources.rst", "generated/mne.viz.plot_ideal_filter.rst", "generated/mne.viz.plot_layout.rst", "generated/mne.viz.plot_montage.rst", "generated/mne.viz.plot_projs_joint.rst", "generated/mne.viz.plot_projs_topomap.rst", "generated/mne.viz.plot_raw.rst", "generated/mne.viz.plot_raw_psd.rst", "generated/mne.viz.plot_regression_weights.rst", "generated/mne.viz.plot_sensors.rst", "generated/mne.viz.plot_snr_estimate.rst", "generated/mne.viz.plot_source_estimates.rst", "generated/mne.viz.plot_sparse_source_estimates.rst", "generated/mne.viz.plot_tfr_topomap.rst", "generated/mne.viz.plot_topo_image_epochs.rst", "generated/mne.viz.plot_topomap.rst", "generated/mne.viz.plot_vector_source_estimates.rst", "generated/mne.viz.plot_volume_source_estimates.rst", "generated/mne.viz.set_3d_backend.rst", "generated/mne.viz.set_3d_options.rst", "generated/mne.viz.set_3d_title.rst", "generated/mne.viz.set_3d_view.rst", "generated/mne.viz.set_browser_backend.rst", "generated/mne.viz.snapshot_brain_montage.rst", "generated/mne.viz.use_3d_backend.rst", "generated/mne.viz.use_browser_backend.rst", "generated/mne.what.rst", "generated/mne.write_bem_solution.rst", "generated/mne.write_bem_surfaces.rst", "generated/mne.write_cov.rst", "generated/mne.write_events.rst", "generated/mne.write_evokeds.rst", "generated/mne.write_forward_solution.rst", "generated/mne.write_head_bem.rst", "generated/mne.write_label.rst", "generated/mne.write_labels_to_annot.rst", "generated/mne.write_proj.rst", "generated/mne.write_source_spaces.rst", "generated/mne.write_surface.rst", "generated/mne.write_trans.rst", "glossary.rst", "index.rst", "install/advanced.rst", "install/check_installation.rst", "install/contributing.rst", "install/freesurfer.rst", "install/index.rst", "install/installers.rst", "install/manual_install.rst", "install/manual_install_python.rst", "install/mne_c.rst", "install/mne_tools_suite.rst", "install/updating.rst", "inverse.rst", "logging.rst", "martinos.rst", "mne_cpp.rst", "most_used_classes.rst", "mri.rst", "overview/cite.rst", "overview/cookbook.rst", "overview/datasets_index.rst", "overview/design_philosophy.rst", "overview/development.rst", "overview/faq.rst", "overview/get_help.rst", "overview/governance.rst", "overview/implementation.rst", "overview/index.rst", "overview/learn_python.rst", "overview/matlab.rst", "overview/migrating.rst", "overview/people.rst", "overview/roadmap.rst", "preprocessing.rst", "python_reference.rst", "reading_raw_data.rst", "realtime.rst", "report.rst", "sensor_space.rst", "simulation.rst", "source_space.rst", "statistics.rst", "time_frequency.rst", "visualization.rst", "whats_new.rst"], "titles": ["Connectivity Analysis Examples", "Brainstorm raw (median nerve) dataset", "HF-SEF dataset", "Examples on open datasets", "Single trial linear regression analysis with the LIMO dataset", "Optically pumped magnetometer (OPM) data", "Computation times", "From raw data to dSPM on SPM Faces dataset", "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)", "Decoding in time-frequency space using Common Spatial Patterns (CSP)", "Representational Similarity Analysis", "Decoding source space data", "Continuous Target Decoding with SPoC", "Decoding sensor space data with generalization across time and conditions", "Analysis of evoked response using ICA and PCA reduction techniques", "XDAWN Decoding From EEG data", "Compute effect-matched-spatial filtering (EMS)", "Machine Learning (Decoding, Encoding, and MVPA)", "Linear classifier on sensor data with plot patterns and filters", "Receptive Field Estimation and Prediction", "Computation times", "Compute Spectro-Spatial Decomposition (SSD) spatial filters", "Display sensitivity maps for EEG and MEG sensors", "Forward modeling", "Generate a left cerebellum volume source space", "Computation times", "Use source space morphing", "Examples Gallery", "Compute MNE-dSPM inverse solution on single epochs", "Compute sLORETA inverse solution on raw data", "Compute MNE-dSPM inverse solution on evoked data in volume source space", "Source localization with a custom inverse solver", "Compute source level time-frequency timecourses using a DICS beamformer", "Compute source power using DICS beamformer", "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM", "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method", "Inverse problem and source analysis", "Extracting time course from source_estimate object", "Generate a functional label from source estimates", "Extracting the time series of activations in a label", "Compute sparse inverse solution with mixed norm: MxNE and irMxNE", "Compute MNE inverse solution on evoked data with a mixed source space", "Compute source power estimate by projecting the covariance with MNE", "Morph surface source estimate", "Morph volumetric source estimate", "Computing source timecourses with an XFit-like multi-dipole model", "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary", "Visualize source leakage among labels using a circular graph", "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)", "Compute cross-talk functions for LCMV beamformers", "Plot point-spread functions (PSFs) for a volume", "Compute Rap-Music on evoked data", "Reading an inverse operator", "Reading an STC file", "Compute spatial resolution metrics in source space", "Compute spatial resolution metrics to compare MEG with EEG+MEG", "Computation times", "Estimate data SNR using an inverse", "Computing source space SNR", "Compute MxNE with time-frequency sparse prior", "Plotting the full vector-valued MNE solution", "Getting averaging info from .fif files", "Input/Output", "How to use data in neural ensemble (NEO) format", "Reading/Writing a noise covariance matrix", "Reading XDF EEG data", "Computation times", "Using contralateral referencing for EEG", "Cortical Signal Suppression (CSS) for removal of cortical signals", "Define target events based on time lag, plot evoked response", "Identify EEG Electrodes Bridged by too much Gel", "Transform EEG data using current source density (CSD)", "Show EOG artifact timing", "Reduce EOG artifacts through regression", "Find MEG reference channel artifacts", "Visualise NIRS artifact correction methods", "Compare the different ICA algorithms in MNE", "Preprocessing", "Interpolate bad channels for MEG/EEG channels", "Locating micro-scale intracranial electrode contacts", "Maxwell filter data with movement compensation", "Annotate movement artifacts and reestimate dev_head_t", "Annotate muscle artifacts", "Removing muscle ICA components", "Plot sensor denoising using oversampled temporal projection", "Computation times", "Shifting time-scale in evoked data", "Remap MEG channel types", "XDAWN Denoising", "Data Simulation", "Compare simulated and estimated source activity", "Computation times", "Generate simulated evoked data", "Generate simulated raw data", "Simulate raw data using subject anatomy", "Generate simulated source data", "Permutation F-test on sensor data with 1D cluster level", "FDR correction on T-test on sensor data", "Statistics Examples", "Regression on continuous data (rER[P/F])", "Permutation T-test on sensor data", "Analysing continuous features with binning and regression in sensor space", "Computation times", "Compute a cross-spectral density (CSD) matrix", "Compute Power Spectral Density of inverse solution from single epochs", "Time-Frequency Examples", "Computation times", "Compute power and phase lock in label of the source space", "Compute source power spectral density (PSD) in a label", "Compute source power spectral density (PSD) of VectorView and OPM data", "Compute induced power in the source space with dSPM", "Temporal whitening with AR model", "Compute and visualize ERDS maps", "Explore event-related dynamics for specific frequency bands", "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)", "How to convert 3D electrode positions to a 2D image", "Plotting with <code class=\"docutils literal notranslate\"><span class=\"pre\">mne.viz.Brain</span></code>", "Visualize channel over epochs as an image", "Plotting EEG sensors on the scalp", "Plotting topographic arrowmaps of evoked data", "Plotting topographic maps of evoked data", "Whitening evoked data with a noise covariance", "Visualization", "Plotting sensor layouts of MEG systems", "Plot the MNE brain and helmet", "Plotting sensor layouts of EEG systems", "Plot a cortical parcellation", "Make figures more publication ready", "Plot single trial activity, grouped by ROI and sorted by RT", "Show noise levels from empty room data", "Computation times", "Sensitivity map of SSP projections", "Compare evoked responses for different conditions", "Plot custom topographies for MEG sensors", "Cross-hemisphere comparison", "Locating intracranial electrode contacts", "Working with sEEG data", "Working with ECoG data", "Sleep stage classification from polysomnography (PSG) data", "Clinical applications", "Computation times", "The Epochs data structure: discontinuous data", "Regression-based baseline correction", "Visualizing epoched data", "Working with Epoch metadata", "Auto-generating Epochs metadata", "Exporting Epochs to Pandas DataFrames", "Divide continuous data into equally-spaced epochs", "Segmenting continuous data into epochs", "Computation times", "The Evoked data structure: evoked/averaged data", "Visualizing Evoked data", "EEG analysis - Event-Related Potentials (ERPs)", "Plotting whitened data", "Estimating evoked responses", "Computation times", "FreeSurfer MRI reconstruction", "Source alignment and coordinate frames", "Using an automated approach to coregistration", "Head model and forward computation", "EEG forward operator with a template MRI", "How MNE uses FreeSurfer\u2019s outputs", "Fixing BEM and head surfaces", "Computing a covariance matrix", "Forward models and source spaces", "Computation times", "Tutorials", "Overview of MEG/EEG analysis with MNE-Python", "Modifying data in-place", "Parsing events from raw data", "The Info data structure", "Working with sensor locations", "Configuring MNE-Python", "Getting started with mne.Report", "Introductory tutorials", "Computation times", "The SourceEstimate data structure", "Source localization with equivalent current dipole (ECD) fit", "Source localization with MNE, dSPM, sLORETA, and eLORETA", "The role of dipole orientations in distributed source localization", "Computing various MNE solutions", "Source reconstruction using an LCMV beamformer", "Visualize source time courses (stcs)", "EEG source localization given electrode locations on an MRI", "Brainstorm Elekta phantom dataset tutorial", "Brainstorm CTF phantom dataset tutorial", "4D Neuroimaging/BTi phantom dataset tutorial", "Source localization and inverses", "Computation times", "Importing data from MEG devices", "Importing data from EEG devices", "Importing data from fNIRS devices", "Working with CTF data: the Brainstorm auditory dataset", "Importing Data from Eyetracking devices", "Reading data for different recording systems", "Computation times", "Spectro-temporal receptive field (STRF) estimation on continuous data", "Decoding (MVPA)", "Machine learning models of neural activity", "Computation times", "Overview of artifact detection", "Handling bad channels", "Rejecting bad data spans and breaks", "Background information on filtering", "Filtering and resampling data", "Repairing artifacts with regression", "Repairing artifacts with ICA", "Background on projectors and projections", "Repairing artifacts with SSP", "Setting the EEG reference", "Extracting and visualizing subject head movement", "Signal-space separation (SSS) and Maxwell filtering", "Preprocessing functional near-infrared spectroscopy (fNIRS) data", "Preprocessing optically pumped magnetometer (OPM) MEG data", "Working with eye tracker data in MNE-Python", "Preprocessing", "Computation times", "The Raw data structure: continuous data", "Working with events", "Annotating continuous data", "Built-in plotting methods for Raw objects", "Working with continuous data", "Computation times", "Creating MNE-Python data structures from scratch", "Corrupt known signal with point spread", "DICS for power mapping", "Simulation", "Computation times", "Statistical inference", "Visualising statistical significance thresholds on EEG data", "Non-parametric 1 sample cluster statistic on single trial power", "Non-parametric between conditions cluster statistic on single trial power", "Mass-univariate twoway repeated measures ANOVA on single trial power", "Spatiotemporal permutation F-test on full sensor data", "Statistical analysis of sensor data", "Computation times", "Permutation t-test on source data with spatio-temporal clustering", "2 samples permutation test on source data with spatio-temporal clustering", "Repeated measures ANOVA on source data with spatio-temporal clustering", "Statistical analysis of source estimates", "Computation times", "The Spectrum and EpochsSpectrum classes: frequency-domain data", "Frequency and time-frequency sensor analysis", "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset", "Time-frequency analysis", "Computation times", "General bibliography", "Papers citing MNE-Python", "Connectivity Estimation", "Covariance computation", "Creating data objects from arrays", "Datasets", "Decoding", "Events", "Exporting", "File I/O", "Forward Modeling", "Funding and other support", "Command line tools using Python", "mne.AcqParserFIF", "mne.Annotations", "mne.BaseEpochs", "mne.BiHemiLabel", "mne.Covariance", "mne.Dipole", "mne.DipoleFixed", "mne.Epochs", "mne.EpochsArray", "mne.Evoked", "mne.EvokedArray", "mne.Forward", "mne.Info", "mne.Label", "mne.MixedSourceEstimate", "mne.MixedVectorSourceEstimate", "mne.Projection", "mne.Report", "mne.SourceEstimate", "mne.SourceMorph", "mne.SourceSpaces", "mne.VectorSourceEstimate", "mne.VolSourceEstimate", "mne.VolVectorSourceEstimate", "mne.add_reference_channels", "mne.add_source_space_distances", "mne.annotations_from_events", "mne.apply_forward", "mne.apply_forward_raw", "mne.average_forward_solutions", "mne.baseline.rescale", "mne.beamformer.Beamformer", "mne.beamformer.apply_dics", "mne.beamformer.apply_dics_csd", "mne.beamformer.apply_dics_epochs", "mne.beamformer.apply_dics_tfr_epochs", "mne.beamformer.apply_lcmv", "mne.beamformer.apply_lcmv_cov", "mne.beamformer.apply_lcmv_epochs", "mne.beamformer.apply_lcmv_raw", "mne.beamformer.make_dics", "mne.beamformer.make_lcmv", "mne.beamformer.make_lcmv_resolution_matrix", "mne.beamformer.rap_music", "mne.beamformer.read_beamformer", "mne.bem.ConductorModel", "mne.bem.convert_flash_mris", "mne.bem.distance_to_bem", "mne.bem.fit_sphere_to_headshape", "mne.bem.get_fitting_dig", "mne.bem.make_flash_bem", "mne.bem.make_scalp_surfaces", "mne.bem.make_watershed_bem", "mne.channel_indices_by_type", "mne.channel_type", "mne.channels.DigMontage", "mne.channels.Layout", "mne.channels.combine_channels", "mne.channels.compute_dev_head_t", "mne.channels.compute_native_head_t", "mne.channels.equalize_channels", "mne.channels.find_ch_adjacency", "mne.channels.find_layout", "mne.channels.fix_mag_coil_types", "mne.channels.generate_2d_layout", "mne.channels.get_builtin_ch_adjacencies", "mne.channels.get_builtin_montages", "mne.channels.make_1020_channel_selections", "mne.channels.make_dig_montage", "mne.channels.make_eeg_layout", "mne.channels.make_grid_layout", "mne.channels.make_standard_montage", "mne.channels.read_ch_adjacency", "mne.channels.read_custom_montage", "mne.channels.read_dig_captrak", "mne.channels.read_dig_dat", "mne.channels.read_dig_egi", "mne.channels.read_dig_fif", "mne.channels.read_dig_hpts", "mne.channels.read_dig_localite", "mne.channels.read_dig_polhemus_isotrak", "mne.channels.read_layout", "mne.channels.read_polhemus_fastscan", "mne.channels.rename_channels", "mne.chpi.compute_chpi_amplitudes", "mne.chpi.compute_chpi_locs", "mne.chpi.compute_chpi_snr", "mne.chpi.compute_head_pos", "mne.chpi.extract_chpi_locs_ctf", "mne.chpi.extract_chpi_locs_kit", "mne.chpi.filter_chpi", "mne.chpi.get_active_chpi", "mne.chpi.get_chpi_info", "mne.chpi.head_pos_to_trans_rot_t", "mne.chpi.read_head_pos", "mne.chpi.write_head_pos", "mne.combine_evoked", "mne.compute_covariance", "mne.compute_proj_epochs", "mne.compute_proj_evoked", "mne.compute_proj_raw", "mne.compute_rank", "mne.compute_raw_covariance", "mne.compute_source_morph", "mne.concatenate_epochs", "mne.concatenate_events", "mne.concatenate_raws", "mne.convert_forward_solution", "mne.coreg.Coregistration", "mne.coreg.estimate_head_mri_t", "mne.coreg.get_mni_fiducials", "mne.count_events", "mne.cov.compute_whitener", "mne.cov.prepare_noise_cov", "mne.cov.regularize", "mne.create_default_subject", "mne.create_info", "mne.cuda.get_cuda_memory", "mne.cuda.init_cuda", "mne.cuda.set_cuda_device", "mne.datasets.brainstorm.bst_auditory.data_path", "mne.datasets.brainstorm.bst_raw.data_path", "mne.datasets.brainstorm.bst_resting.data_path", "mne.datasets.eegbci.load_data", "mne.datasets.eegbci.standardize", "mne.datasets.epilepsy_ecog.data_path", "mne.datasets.erp_core.data_path", "mne.datasets.eyelink.data_path", "mne.datasets.fetch_aparc_sub_parcellation", "mne.datasets.fetch_dataset", "mne.datasets.fetch_fsaverage", "mne.datasets.fetch_hcp_mmp_parcellation", "mne.datasets.fetch_infant_template", "mne.datasets.fetch_phantom", "mne.datasets.fnirs_motor.data_path", "mne.datasets.has_dataset", "mne.datasets.hf_sef.data_path", "mne.datasets.kiloword.data_path", "mne.datasets.limo.load_data", "mne.datasets.misc.data_path", "mne.datasets.mtrf.data_path", "mne.datasets.multimodal.data_path", "mne.datasets.opm.data_path", "mne.datasets.phantom_4dbti.data_path", "mne.datasets.refmeg_noise.data_path", "mne.datasets.sample.data_path", "mne.datasets.sleep_physionet.age.fetch_data", "mne.datasets.sleep_physionet.temazepam.fetch_data", "mne.datasets.somato.data_path", "mne.datasets.spm_face.data_path", "mne.datasets.ssvep.data_path", "mne.datasets.ucl_opm_auditory.data_path", "mne.datasets.visual_92_categories.data_path", "mne.decimate_surface", "mne.decoding.CSP", "mne.decoding.EMS", "mne.decoding.FilterEstimator", "mne.decoding.GeneralizingEstimator", "mne.decoding.LinearModel", "mne.decoding.PSDEstimator", "mne.decoding.ReceptiveField", "mne.decoding.SPoC", "mne.decoding.SSD", "mne.decoding.Scaler", "mne.decoding.SlidingEstimator", "mne.decoding.TemporalFilter", "mne.decoding.TimeDelayingRidge", "mne.decoding.TimeFrequency", "mne.decoding.UnsupervisedSpatialFilter", "mne.decoding.Vectorizer", "mne.decoding.compute_ems", "mne.decoding.cross_val_multiscore", "mne.decoding.get_coef", "mne.dig_mri_distances", "mne.dipole.get_phantom_dipoles", "mne.epochs.average_movements", "mne.epochs.combine_event_ids", "mne.epochs.equalize_epoch_counts", "mne.epochs.make_metadata", "mne.equalize_channels", "mne.event.define_target_events", "mne.event.match_event_names", "mne.event.shift_time_events", "mne.events_from_annotations", "mne.export.export_epochs", "mne.export.export_evokeds", "mne.export.export_evokeds_mff", "mne.export.export_raw", "mne.extract_label_time_course", "mne.filter.construct_iir_filter", "mne.filter.create_filter", "mne.filter.estimate_ringing_samples", "mne.filter.filter_data", "mne.filter.notch_filter", "mne.filter.resample", "mne.find_events", "mne.find_stim_steps", "mne.fit_dipole", "mne.forward.compute_depth_prior", "mne.forward.compute_orient_prior", "mne.forward.restrict_forward_to_label", "mne.forward.restrict_forward_to_stc", "mne.get_config", "mne.get_config_path", "mne.get_head_surf", "mne.get_meg_helmet_surf", "mne.get_montage_volume_labels", "mne.get_volume_labels_from_aseg", "mne.get_volume_labels_from_src", "mne.grade_to_tris", "mne.grade_to_vertices", "mne.grand_average", "mne.grow_labels", "mne.gui.coregistration", "mne.gui.locate_ieeg", "mne.head_to_mni", "mne.head_to_mri", "mne.inverse_sparse.gamma_map", "mne.inverse_sparse.make_stc_from_dipoles", "mne.inverse_sparse.mixed_norm", "mne.inverse_sparse.tf_mixed_norm", "mne.io.BaseRaw", "mne.io.Raw", "mne.io.RawArray", "mne.io.anonymize_info", "mne.io.kit.read_mrk", "mne.io.read_fiducials", "mne.io.read_info", "mne.io.read_raw", "mne.io.read_raw_artemis123", "mne.io.read_raw_bdf", "mne.io.read_raw_boxy", "mne.io.read_raw_brainvision", "mne.io.read_raw_bti", "mne.io.read_raw_cnt", "mne.io.read_raw_ctf", "mne.io.read_raw_curry", "mne.io.read_raw_edf", "mne.io.read_raw_eeglab", "mne.io.read_raw_egi", "mne.io.read_raw_eximia", "mne.io.read_raw_eyelink", "mne.io.read_raw_fieldtrip", "mne.io.read_raw_fif", "mne.io.read_raw_fil", "mne.io.read_raw_gdf", "mne.io.read_raw_hitachi", "mne.io.read_raw_kit", "mne.io.read_raw_nedf", "mne.io.read_raw_nicolet", "mne.io.read_raw_nihon", "mne.io.read_raw_nirx", "mne.io.read_raw_persyst", "mne.io.read_raw_snirf", "mne.io.show_fiff", "mne.io.write_fiducials", "mne.label.select_sources", "mne.label_sign_flip", "mne.labels_to_stc", "mne.make_ad_hoc_cov", "mne.make_bem_model", "mne.make_bem_solution", "mne.make_field_map", "mne.make_fixed_length_epochs", "mne.make_fixed_length_events", "mne.make_forward_dipole", "mne.make_forward_solution", "mne.make_sphere_model", "mne.merge_events", "mne.minimum_norm.InverseOperator", "mne.minimum_norm.apply_inverse", "mne.minimum_norm.apply_inverse_cov", "mne.minimum_norm.apply_inverse_epochs", "mne.minimum_norm.apply_inverse_raw", "mne.minimum_norm.apply_inverse_tfr_epochs", "mne.minimum_norm.compute_rank_inverse", "mne.minimum_norm.compute_source_psd", "mne.minimum_norm.compute_source_psd_epochs", "mne.minimum_norm.estimate_snr", "mne.minimum_norm.get_cross_talk", "mne.minimum_norm.get_point_spread", "mne.minimum_norm.make_inverse_operator", "mne.minimum_norm.make_inverse_resolution_matrix", "mne.minimum_norm.prepare_inverse_operator", "mne.minimum_norm.read_inverse_operator", "mne.minimum_norm.resolution_metrics", "mne.minimum_norm.source_band_induced_power", "mne.minimum_norm.source_induced_power", "mne.minimum_norm.write_inverse_operator", "mne.morph_labels", "mne.morph_source_spaces", "mne.open_docs", "mne.open_report", "mne.parse_config", "mne.pick_channels", "mne.pick_channels_cov", "mne.pick_channels_forward", "mne.pick_channels_regexp", "mne.pick_events", "mne.pick_info", "mne.pick_types", "mne.pick_types_forward", "mne.preprocessing.EOGRegression", "mne.preprocessing.ICA", "mne.preprocessing.Xdawn", "mne.preprocessing.annotate_amplitude", "mne.preprocessing.annotate_break", "mne.preprocessing.annotate_movement", "mne.preprocessing.annotate_muscle_zscore", "mne.preprocessing.annotate_nan", "mne.preprocessing.compute_average_dev_head_t", "mne.preprocessing.compute_bridged_electrodes", "mne.preprocessing.compute_current_source_density", "mne.preprocessing.compute_fine_calibration", "mne.preprocessing.compute_maxwell_basis", "mne.preprocessing.compute_proj_ecg", "mne.preprocessing.compute_proj_eog", "mne.preprocessing.compute_proj_hfc", "mne.preprocessing.corrmap", "mne.preprocessing.cortical_signal_suppression", "mne.preprocessing.create_ecg_epochs", "mne.preprocessing.create_eog_epochs", "mne.preprocessing.equalize_bads", "mne.preprocessing.eyetracking.set_channel_types_eyetrack", "mne.preprocessing.find_bad_channels_maxwell", "mne.preprocessing.find_ecg_events", "mne.preprocessing.find_eog_events", "mne.preprocessing.fix_stim_artifact", "mne.preprocessing.ica_find_ecg_events", "mne.preprocessing.ica_find_eog_events", "mne.preprocessing.ieeg.make_montage_volume", "mne.preprocessing.ieeg.project_sensors_onto_brain", "mne.preprocessing.ieeg.warp_montage", "mne.preprocessing.infomax", "mne.preprocessing.interpolate_bridged_electrodes", "mne.preprocessing.maxwell_filter", "mne.preprocessing.maxwell_filter_prepare_emptyroom", "mne.preprocessing.nirs.beer_lambert_law", "mne.preprocessing.nirs.optical_density", "mne.preprocessing.nirs.scalp_coupling_index", "mne.preprocessing.nirs.short_channels", "mne.preprocessing.nirs.source_detector_distances", "mne.preprocessing.nirs.temporal_derivative_distribution_repair", "mne.preprocessing.oversampled_temporal_projection", "mne.preprocessing.peak_finder", "mne.preprocessing.read_eog_regression", "mne.preprocessing.read_fine_calibration", "mne.preprocessing.read_ica", "mne.preprocessing.read_ica_eeglab", "mne.preprocessing.realign_raw", "mne.preprocessing.regress_artifact", "mne.preprocessing.write_fine_calibration", "mne.random_parcellation", "mne.read_annotations", "mne.read_bem_solution", "mne.read_bem_surfaces", "mne.read_cov", "mne.read_dipole", "mne.read_epochs", "mne.read_epochs_eeglab", "mne.read_epochs_fieldtrip", "mne.read_epochs_kit", "mne.read_events", "mne.read_evoked_besa", "mne.read_evoked_fieldtrip", "mne.read_evokeds", "mne.read_evokeds_mff", "mne.read_forward_solution", "mne.read_freesurfer_lut", "mne.read_label", "mne.read_labels_from_annot", "mne.read_lta", "mne.read_morph_map", "mne.read_proj", "mne.read_reject_parameters", "mne.read_source_estimate", "mne.read_source_morph", "mne.read_source_spaces", "mne.read_surface", "mne.read_talxfm", "mne.read_trans", "mne.read_tri", "mne.read_vectorview_selection", "mne.rename_channels", "mne.scale_bem", "mne.scale_labels", "mne.scale_mri", "mne.scale_source_space", "mne.sensitivity_map", "mne.set_bipolar_reference", "mne.set_cache_dir", "mne.set_config", "mne.set_eeg_reference", "mne.set_log_file", "mne.set_log_level", "mne.setup_source_space", "mne.setup_volume_source_space", "mne.simulation.SourceSimulator", "mne.simulation.add_chpi", "mne.simulation.add_ecg", "mne.simulation.add_eog", "mne.simulation.add_noise", "mne.simulation.metrics.cosine_score", "mne.simulation.metrics.f1_score", "mne.simulation.metrics.peak_position_error", "mne.simulation.metrics.precision_score", "mne.simulation.metrics.recall_score", "mne.simulation.metrics.region_localization_error", "mne.simulation.metrics.roc_auc_score", "mne.simulation.metrics.spatial_deviation_error", "mne.simulation.select_source_in_label", "mne.simulation.simulate_evoked", "mne.simulation.simulate_raw", "mne.simulation.simulate_sparse_stc", "mne.simulation.simulate_stc", "mne.source_space.compute_distance_to_sensors", "mne.source_space.get_decimated_surfaces", "mne.spatial_dist_adjacency", "mne.spatial_inter_hemi_adjacency", "mne.spatial_src_adjacency", "mne.spatial_tris_adjacency", "mne.spatio_temporal_dist_adjacency", "mne.spatio_temporal_src_adjacency", "mne.spatio_temporal_tris_adjacency", "mne.split_label", "mne.stats.bonferroni_correction", "mne.stats.bootstrap_confidence_interval", "mne.stats.combine_adjacency", "mne.stats.f_mway_rm", "mne.stats.f_oneway", "mne.stats.f_threshold_mway_rm", "mne.stats.fdr_correction", "mne.stats.linear_regression", "mne.stats.linear_regression_raw", "mne.stats.permutation_cluster_1samp_test", "mne.stats.permutation_cluster_test", "mne.stats.permutation_t_test", "mne.stats.spatio_temporal_cluster_1samp_test", "mne.stats.spatio_temporal_cluster_test", "mne.stats.summarize_clusters_stc", "mne.stats.ttest_1samp_no_p", "mne.stats.ttest_ind_no_p", "mne.stc_near_sensors", "mne.stc_to_label", "mne.surface.complete_surface_info", "mne.surface.read_curvature", "mne.sys_info", "mne.time_frequency.AverageTFR", "mne.time_frequency.CrossSpectralDensity", "mne.time_frequency.EpochsSpectrum", "mne.time_frequency.EpochsTFR", "mne.time_frequency.Spectrum", "mne.time_frequency.csd_array_fourier", "mne.time_frequency.csd_array_morlet", "mne.time_frequency.csd_array_multitaper", "mne.time_frequency.csd_fourier", "mne.time_frequency.csd_morlet", "mne.time_frequency.csd_multitaper", "mne.time_frequency.csd_tfr", "mne.time_frequency.dpss_windows", "mne.time_frequency.fit_iir_model_raw", "mne.time_frequency.fwhm", "mne.time_frequency.istft", "mne.time_frequency.morlet", "mne.time_frequency.pick_channels_csd", "mne.time_frequency.psd_array_multitaper", "mne.time_frequency.psd_array_welch", "mne.time_frequency.read_csd", "mne.time_frequency.read_spectrum", "mne.time_frequency.read_tfrs", "mne.time_frequency.stft", "mne.time_frequency.stftfreq", "mne.time_frequency.tfr.cwt", "mne.time_frequency.tfr.morlet", "mne.time_frequency.tfr_array_morlet", "mne.time_frequency.tfr_array_multitaper", "mne.time_frequency.tfr_array_stockwell", "mne.time_frequency.tfr_morlet", "mne.time_frequency.tfr_multitaper", "mne.time_frequency.tfr_stockwell", "mne.time_frequency.write_tfrs", "mne.transform_surface_to", "mne.transforms.Transform", "mne.transforms.apply_volume_registration", "mne.transforms.apply_volume_registration_points", "mne.transforms.compute_volume_registration", "mne.transforms.quat_to_rot", "mne.transforms.read_ras_mni_t", "mne.transforms.rot_to_quat", "mne.use_coil_def", "mne.use_log_level", "mne.utils.deprecated", "mne.utils.warn", "mne.verbose", "mne.vertex_to_mni", "mne.viz.Brain", "mne.viz.ClickableImage", "mne.viz.Figure3D", "mne.viz.add_background_image", "mne.viz.centers_to_edges", "mne.viz.circular_layout", "mne.viz.close_3d_figure", "mne.viz.close_all_3d_figures", "mne.viz.compare_fiff", "mne.viz.create_3d_figure", "mne.viz.get_3d_backend", "mne.viz.get_brain_class", "mne.viz.get_browser_backend", "mne.viz.iter_topography", "mne.viz.link_brains", "mne.viz.mne_analyze_colormap", "mne.viz.plot_alignment", "mne.viz.plot_arrowmap", "mne.viz.plot_bem", "mne.viz.plot_brain_colorbar", "mne.viz.plot_bridged_electrodes", "mne.viz.plot_ch_adjacency", "mne.viz.plot_channel_labels_circle", "mne.viz.plot_chpi_snr", "mne.viz.plot_compare_evokeds", "mne.viz.plot_cov", "mne.viz.plot_csd", "mne.viz.plot_dipole_amplitudes", "mne.viz.plot_dipole_locations", "mne.viz.plot_drop_log", "mne.viz.plot_epochs", "mne.viz.plot_epochs_image", "mne.viz.plot_epochs_psd_topomap", "mne.viz.plot_events", "mne.viz.plot_evoked", "mne.viz.plot_evoked_field", "mne.viz.plot_evoked_image", "mne.viz.plot_evoked_joint", "mne.viz.plot_evoked_topo", "mne.viz.plot_evoked_topomap", "mne.viz.plot_evoked_white", "mne.viz.plot_filter", "mne.viz.plot_head_positions", "mne.viz.plot_ica_components", "mne.viz.plot_ica_overlay", "mne.viz.plot_ica_properties", "mne.viz.plot_ica_scores", "mne.viz.plot_ica_sources", "mne.viz.plot_ideal_filter", "mne.viz.plot_layout", "mne.viz.plot_montage", "mne.viz.plot_projs_joint", "mne.viz.plot_projs_topomap", "mne.viz.plot_raw", "mne.viz.plot_raw_psd", "mne.viz.plot_regression_weights", "mne.viz.plot_sensors", "mne.viz.plot_snr_estimate", "mne.viz.plot_source_estimates", "mne.viz.plot_sparse_source_estimates", "mne.viz.plot_tfr_topomap", "mne.viz.plot_topo_image_epochs", "mne.viz.plot_topomap", "mne.viz.plot_vector_source_estimates", "mne.viz.plot_volume_source_estimates", "mne.viz.set_3d_backend", "mne.viz.set_3d_options", "mne.viz.set_3d_title", "mne.viz.set_3d_view", "mne.viz.set_browser_backend", "mne.viz.snapshot_brain_montage", "mne.viz.use_3d_backend", "mne.viz.use_browser_backend", "mne.what", "mne.write_bem_solution", "mne.write_bem_surfaces", "mne.write_cov", "mne.write_events", "mne.write_evokeds", "mne.write_forward_solution", "mne.write_head_bem", "mne.write_label", "mne.write_labels_to_annot", "mne.write_proj", "mne.write_source_spaces", "mne.write_surface", "mne.write_trans", "Glossary", "MNE", "Advanced setup", "Testing your installation", "Contributing guide", "Installing FreeSurfer", "Installing MNE-Python", "MNE-Python installers", "Install via <code class=\"code docutils literal notranslate\"><span class=\"pre\">pip</span></code> or <code class=\"code docutils literal notranslate\"><span class=\"pre\">conda</span></code>", "Installing Python", "Installing MNE-C", "Overview of the MNE tools suite", "Updating MNE-Python", "Inverse Solutions", "Logging and Configuration", "Martinos Center setup", "MNE with CPP", "Most-used classes", "MRI Processing", "How to cite MNE-Python", "The typical M/EEG workflow", "Datasets Overview", "Design philosophy", "MNE-Python Development", "Frequently Asked Questions (FAQ)", "Getting help", "Project Governance", "Algorithms and other implementation details", "Documentation overview", "Getting started with Python", "MNE-MATLAB documentation", "Migrating from other analysis software", "Current steering council and institutional partners", "Roadmap", "Preprocessing", "Python API Reference", "Reading raw data", "Realtime", "MNE-Report", "Sensor Space Data", "Simulation", "Source Space Data", "Statistics", "Time-Frequency", "Visualization", "What\u2019s new"], "terms": {"3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885], "8": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885], "demonstr": [0, 5, 19, 27, 33, 41, 43, 44, 45, 63, 67, 70, 71, 73, 80, 84, 99, 103, 114, 117, 146, 147, 152, 153, 162, 169, 171, 172, 173, 191, 193, 196, 200, 202, 203, 205, 206, 209, 211, 217, 224, 225, 228, 236, 241, 579, 853, 862, 865, 868, 869, 886], "sensor": [0, 4, 5, 11, 15, 16, 17, 20, 23, 25, 27, 28, 32, 34, 41, 42, 45, 49, 68, 70, 71, 77, 78, 80, 85, 88, 90, 92, 94, 95, 98, 102, 103, 109, 119, 120, 122, 124, 127, 130, 132, 135, 136, 145, 147, 151, 152, 157, 158, 159, 160, 163, 167, 169, 170, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 189, 192, 200, 201, 203, 205, 206, 207, 209, 210, 211, 217, 225, 228, 229, 230, 235, 241, 244, 245, 246, 259, 261, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 286, 287, 299, 300, 301, 307, 308, 312, 313, 314, 315, 320, 321, 322, 323, 325, 326, 328, 329, 330, 331, 340, 342, 344, 346, 351, 356, 357, 358, 359, 360, 366, 371, 372, 373, 375, 413, 414, 415, 416, 417, 420, 421, 422, 423, 428, 429, 431, 432, 433, 454, 456, 457, 464, 473, 480, 481, 482, 483, 486, 488, 491, 492, 494, 506, 518, 524, 525, 526, 530, 532, 535, 536, 540, 553, 558, 559, 561, 562, 563, 567, 573, 576, 577, 582, 589, 590, 594, 599, 600, 602, 605, 617, 620, 621, 626, 639, 641, 642, 647, 658, 659, 670, 671, 674, 684, 686, 690, 691, 693, 694, 695, 696, 697, 701, 706, 707, 708, 709, 710, 736, 743, 754, 767, 770, 771, 774, 775, 777, 778, 779, 780, 784, 786, 788, 789, 790, 792, 793, 794, 796, 797, 803, 804, 806, 807, 809, 810, 814, 815, 816, 821, 822, 824, 841, 846, 852, 861, 862, 863, 865, 871, 874, 875, 876, 886], "sourc": [0, 1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 29, 35, 37, 40, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 96, 97, 99, 100, 101, 103, 105, 106, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 158, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 176, 180, 184, 185, 186, 188, 189, 190, 191, 192, 193, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 228, 229, 230, 231, 232, 233, 240, 241, 242, 243, 246, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 849, 851, 852, 854, 857, 862, 865, 866, 867, 871, 876, 886], "space": [0, 5, 10, 17, 20, 22, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 60, 68, 74, 83, 88, 90, 92, 93, 94, 95, 98, 102, 105, 106, 108, 109, 113, 115, 119, 120, 124, 127, 131, 134, 135, 136, 137, 141, 148, 149, 152, 156, 157, 161, 163, 167, 169, 171, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 192, 196, 200, 206, 209, 215, 216, 217, 220, 223, 225, 228, 229, 233, 235, 237, 240, 241, 242, 246, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 299, 300, 314, 318, 327, 332, 349, 350, 353, 357, 358, 359, 361, 362, 365, 366, 369, 371, 375, 413, 416, 417, 420, 421, 423, 427, 430, 431, 434, 442, 447, 454, 458, 467, 469, 471, 475, 476, 477, 478, 479, 481, 482, 484, 486, 489, 496, 506, 516, 517, 522, 524, 525, 528, 529, 530, 531, 532, 533, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 549, 558, 559, 561, 562, 572, 573, 574, 575, 583, 589, 594, 615, 617, 621, 624, 626, 628, 629, 636, 638, 641, 643, 645, 646, 647, 654, 655, 656, 663, 666, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 690, 691, 693, 694, 696, 697, 698, 701, 702, 706, 708, 710, 718, 740, 754, 770, 772, 778, 784, 785, 786, 787, 790, 791, 793, 796, 797, 801, 806, 807, 809, 812, 813, 814, 817, 818, 822, 838, 841, 851, 862, 865, 874, 876, 886], "function": [0, 4, 8, 16, 19, 27, 31, 36, 44, 45, 54, 55, 56, 57, 59, 76, 94, 95, 101, 103, 112, 113, 114, 115, 116, 133, 135, 136, 137, 141, 142, 145, 147, 150, 151, 152, 153, 156, 157, 158, 159, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 179, 181, 183, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 219, 223, 224, 225, 230, 232, 233, 241, 242, 243, 246, 248, 251, 252, 258, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 290, 291, 293, 299, 300, 301, 305, 307, 309, 314, 319, 320, 322, 323, 326, 331, 332, 334, 342, 343, 344, 349, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 373, 375, 377, 389, 392, 413, 416, 417, 418, 419, 420, 422, 423, 430, 432, 434, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 452, 453, 454, 456, 470, 471, 474, 475, 479, 480, 481, 482, 487, 489, 490, 492, 493, 496, 498, 501, 502, 504, 506, 510, 512, 513, 515, 517, 525, 528, 529, 532, 535, 536, 537, 538, 539, 540, 541, 543, 544, 551, 557, 559, 561, 562, 564, 565, 566, 571, 572, 573, 574, 575, 577, 579, 580, 582, 583, 586, 592, 594, 595, 596, 597, 598, 600, 601, 608, 611, 612, 615, 618, 619, 620, 621, 622, 623, 624, 626, 629, 634, 642, 645, 648, 651, 655, 656, 658, 659, 660, 669, 670, 672, 673, 690, 692, 693, 694, 695, 696, 697, 701, 702, 705, 706, 707, 708, 709, 710, 713, 716, 718, 724, 725, 734, 736, 737, 744, 748, 749, 750, 751, 752, 754, 764, 767, 769, 770, 771, 778, 780, 784, 786, 787, 792, 793, 794, 797, 800, 805, 806, 808, 809, 810, 812, 814, 816, 817, 818, 819, 823, 841, 843, 852, 853, 854, 860, 861, 862, 863, 868, 869, 872, 874, 875, 876, 878, 880, 883, 884, 886], "ha": [0, 1, 5, 9, 10, 27, 32, 42, 45, 49, 54, 70, 71, 74, 78, 83, 84, 93, 94, 103, 109, 114, 126, 127, 135, 137, 141, 143, 145, 146, 147, 150, 151, 152, 156, 157, 158, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 181, 182, 183, 184, 186, 189, 190, 191, 193, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 217, 218, 220, 223, 225, 228, 229, 233, 241, 243, 248, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 286, 287, 290, 291, 292, 293, 299, 300, 304, 305, 310, 356, 360, 361, 362, 371, 372, 373, 379, 380, 381, 384, 385, 386, 388, 392, 393, 394, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 413, 419, 420, 434, 448, 449, 451, 452, 454, 456, 457, 460, 476, 478, 479, 481, 482, 483, 489, 490, 502, 510, 526, 528, 529, 530, 532, 540, 561, 562, 563, 565, 577, 590, 594, 601, 624, 625, 643, 646, 687, 688, 693, 694, 696, 697, 706, 707, 708, 709, 710, 713, 722, 724, 732, 733, 734, 736, 737, 741, 764, 778, 786, 788, 790, 791, 792, 793, 794, 797, 799, 801, 806, 807, 808, 809, 810, 812, 814, 816, 841, 843, 845, 849, 851, 852, 853, 861, 862, 863, 864, 865, 866, 867, 868, 871, 874, 878, 886], "move": [0, 27, 60, 75, 80, 81, 116, 135, 141, 146, 157, 162, 178, 193, 203, 206, 207, 210, 213, 236, 243, 248, 258, 263, 266, 267, 268, 269, 275, 281, 282, 367, 413, 420, 448, 481, 482, 561, 562, 566, 591, 706, 708, 710, 742, 743, 744, 785, 786, 790, 793, 797, 806, 809, 814, 818, 865, 867, 868, 878, 886], "mne_connect": [0, 27, 47, 147, 248, 776], "packag": [0, 27, 147, 161, 167, 190, 197, 201, 202, 203, 206, 225, 228, 248, 258, 260, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 284, 356, 357, 359, 361, 374, 375, 416, 423, 426, 429, 430, 456, 469, 471, 473, 481, 482, 520, 521, 524, 525, 535, 536, 545, 546, 567, 574, 575, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 786, 789, 808, 841, 842, 843, 845, 846, 848, 849, 850, 851, 852, 856, 860, 862, 863, 874, 886], "can": [0, 4, 5, 7, 12, 13, 15, 16, 19, 21, 22, 24, 26, 27, 31, 32, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 70, 71, 74, 75, 78, 79, 80, 82, 83, 84, 88, 94, 95, 99, 101, 103, 109, 112, 113, 114, 115, 116, 119, 120, 121, 126, 127, 129, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 228, 229, 230, 231, 233, 236, 237, 238, 241, 242, 243, 246, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 289, 292, 299, 300, 305, 306, 307, 308, 311, 312, 314, 316, 318, 319, 322, 323, 324, 325, 329, 330, 331, 332, 334, 337, 341, 342, 343, 344, 350, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 368, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 386, 388, 391, 392, 393, 394, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 432, 434, 437, 438, 439, 440, 442, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 460, 463, 464, 465, 466, 469, 471, 472, 473, 475, 476, 478, 479, 481, 482, 489, 493, 496, 497, 501, 502, 504, 506, 510, 512, 513, 515, 517, 520, 521, 522, 524, 525, 527, 529, 535, 536, 538, 539, 540, 542, 546, 548, 549, 550, 551, 559, 560, 561, 562, 564, 565, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 593, 594, 595, 598, 600, 601, 602, 608, 609, 612, 614, 617, 618, 619, 620, 623, 624, 625, 627, 629, 631, 637, 641, 642, 643, 645, 646, 648, 651, 653, 654, 655, 662, 669, 670, 671, 672, 674, 676, 678, 680, 681, 685, 686, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 705, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 722, 729, 732, 734, 736, 737, 740, 742, 743, 744, 749, 751, 752, 754, 755, 759, 762, 767, 770, 771, 772, 773, 774, 775, 776, 777, 778, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 804, 805, 806, 807, 808, 809, 810, 812, 814, 816, 817, 818, 820, 828, 829, 832, 834, 839, 841, 843, 844, 845, 849, 850, 851, 852, 853, 857, 860, 861, 862, 863, 867, 868, 869, 871, 874, 875, 876, 886], "found": [0, 1, 2, 4, 5, 8, 9, 11, 12, 16, 18, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 68, 69, 70, 71, 72, 73, 74, 78, 80, 81, 82, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 124, 127, 128, 129, 132, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 159, 160, 162, 163, 167, 169, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 197, 200, 201, 202, 203, 204, 205, 206, 208, 211, 212, 213, 214, 218, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 242, 258, 259, 261, 263, 266, 267, 268, 269, 271, 275, 290, 304, 320, 321, 331, 350, 351, 367, 379, 380, 381, 382, 384, 385, 386, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 432, 440, 454, 455, 461, 462, 463, 472, 481, 482, 488, 508, 528, 562, 565, 574, 579, 580, 584, 585, 587, 588, 603, 614, 637, 643, 645, 650, 651, 655, 693, 741, 754, 764, 766, 770, 784, 801, 807, 834, 841, 844, 845, 850, 862, 866, 868, 874, 876, 886], "go": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 279, 359, 463, 481, 482, 562, 655, 845, 856, 865, 866, 867, 868], "end": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 284, 289, 290, 314, 319, 326, 342, 343, 345, 356, 359, 361, 413, 419, 420, 425, 431, 436, 437, 438, 453, 454, 481, 482, 494, 502, 503, 508, 523, 535, 543, 545, 546, 547, 561, 562, 565, 579, 580, 586, 604, 606, 608, 615, 617, 624, 625, 626, 632, 636, 640, 642, 662, 663, 664, 665, 666, 668, 671, 683, 706, 707, 709, 711, 712, 713, 714, 715, 716, 717, 719, 728, 739, 741, 754, 784, 793, 798, 801, 807, 814, 827, 828, 829, 830, 832, 833, 837, 838, 839, 840, 841, 843, 845, 865, 867, 868, 871, 886], "download": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 843, 845, 846, 847, 848, 852, 853, 862, 886], "full": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 241, 242, 243, 266, 267, 268, 269, 271, 273, 274, 277, 279, 280, 282, 299, 300, 302, 320, 321, 356, 360, 361, 362, 371, 372, 373, 413, 418, 420, 421, 426, 443, 446, 456, 457, 476, 478, 479, 481, 482, 528, 529, 540, 543, 559, 562, 621, 624, 686, 692, 693, 695, 697, 709, 720, 722, 724, 731, 732, 734, 736, 737, 744, 754, 770, 772, 775, 778, 784, 786, 794, 801, 807, 812, 817, 819, 820, 823, 843, 845, 851, 857, 861, 862, 867, 886], "exampl": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 150, 151, 152, 153, 156, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 200, 201, 202, 203, 204, 205, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 246, 261, 282, 311, 337, 364, 370, 371, 372, 382, 388, 396, 406, 412, 435, 440, 457, 480, 505, 550, 572, 581, 603, 620, 643, 652, 732, 734, 752, 784, 786, 793, 797, 799, 807, 809, 814, 818, 841, 843, 845, 848, 852, 861, 863, 865, 866, 868, 869, 886], "code": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 242, 243, 246, 257, 261, 266, 267, 268, 269, 276, 285, 351, 440, 442, 452, 454, 457, 480, 481, 482, 489, 498, 506, 530, 594, 603, 619, 692, 708, 710, 735, 738, 754, 786, 788, 808, 841, 849, 861, 864, 865, 867, 868, 869, 872, 874, 881, 884, 886], "here": [1, 4, 5, 7, 9, 10, 11, 12, 15, 18, 19, 21, 28, 31, 33, 34, 38, 41, 42, 43, 45, 65, 67, 70, 71, 74, 75, 79, 82, 83, 84, 90, 94, 95, 100, 101, 104, 109, 111, 112, 114, 116, 117, 120, 121, 127, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 157, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 178, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 228, 229, 230, 232, 233, 236, 237, 238, 242, 243, 272, 276, 277, 279, 281, 282, 336, 362, 388, 394, 419, 430, 437, 453, 480, 515, 525, 527, 537, 562, 579, 592, 595, 609, 611, 624, 655, 658, 659, 660, 669, 670, 672, 693, 694, 695, 696, 697, 701, 787, 818, 843, 845, 852, 853, 862, 865, 868, 869, 870, 872, 886], "we": [1, 4, 5, 7, 9, 10, 11, 13, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 54, 58, 59, 65, 67, 68, 69, 70, 71, 73, 74, 75, 79, 83, 84, 87, 88, 90, 94, 95, 101, 103, 109, 111, 112, 113, 114, 115, 116, 117, 120, 121, 126, 127, 129, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 246, 263, 266, 267, 268, 269, 273, 276, 277, 279, 281, 284, 309, 332, 421, 423, 443, 444, 445, 446, 453, 463, 481, 482, 483, 512, 537, 562, 579, 593, 601, 666, 709, 754, 755, 770, 779, 794, 812, 843, 849, 850, 853, 856, 860, 861, 862, 863, 865, 867, 868, 872, 874, 886], "comput": [1, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 17, 19, 22, 23, 24, 26, 27, 31, 36, 38, 43, 44, 48, 50, 52, 57, 60, 68, 71, 72, 76, 78, 79, 81, 87, 88, 92, 93, 95, 96, 97, 98, 100, 105, 113, 114, 115, 119, 120, 121, 123, 124, 131, 134, 135, 136, 142, 143, 146, 147, 150, 151, 152, 153, 156, 157, 158, 161, 164, 166, 167, 168, 169, 173, 176, 177, 179, 182, 183, 184, 185, 186, 187, 190, 192, 196, 197, 201, 202, 204, 208, 209, 211, 213, 217, 220, 223, 224, 225, 228, 229, 232, 241, 242, 243, 246, 259, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 284, 286, 287, 290, 291, 292, 293, 294, 296, 299, 300, 301, 302, 304, 306, 317, 318, 320, 322, 327, 331, 343, 344, 345, 346, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 371, 372, 373, 382, 413, 414, 417, 418, 419, 420, 421, 425, 429, 432, 442, 447, 452, 454, 456, 457, 458, 463, 469, 471, 476, 477, 478, 479, 481, 482, 486, 488, 493, 494, 496, 516, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 559, 560, 562, 563, 566, 569, 570, 572, 573, 574, 575, 576, 579, 583, 590, 592, 611, 613, 614, 615, 616, 621, 624, 625, 626, 628, 629, 636, 638, 641, 643, 645, 647, 649, 651, 654, 655, 656, 661, 662, 663, 664, 665, 666, 667, 668, 671, 674, 676, 677, 678, 679, 680, 681, 682, 687, 688, 689, 692, 693, 694, 696, 697, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 724, 725, 730, 731, 732, 733, 734, 735, 736, 737, 738, 742, 743, 748, 754, 770, 771, 772, 778, 779, 781, 782, 784, 785, 786, 793, 794, 801, 806, 807, 813, 822, 834, 841, 845, 846, 848, 851, 852, 857, 862, 865, 871, 876, 881, 883, 886], "evok": [1, 2, 4, 5, 7, 8, 15, 16, 17, 18, 20, 27, 28, 31, 35, 36, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 68, 71, 73, 77, 78, 80, 84, 85, 87, 88, 89, 91, 93, 95, 96, 97, 99, 100, 101, 107, 113, 116, 117, 122, 124, 130, 136, 137, 142, 144, 145, 155, 163, 168, 170, 171, 177, 179, 180, 181, 182, 183, 184, 185, 186, 189, 192, 197, 200, 201, 202, 203, 204, 206, 207, 208, 211, 214, 224, 225, 229, 230, 231, 232, 233, 236, 238, 241, 243, 246, 258, 261, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 276, 277, 279, 280, 281, 282, 283, 286, 287, 291, 292, 295, 296, 299, 300, 302, 316, 319, 355, 356, 358, 360, 375, 395, 418, 427, 434, 438, 439, 444, 445, 447, 454, 456, 470, 472, 476, 478, 479, 481, 482, 486, 494, 521, 522, 525, 528, 529, 530, 531, 532, 533, 537, 540, 543, 553, 558, 559, 560, 561, 562, 563, 570, 571, 574, 575, 578, 581, 582, 586, 593, 594, 609, 615, 617, 621, 622, 623, 624, 625, 626, 628, 629, 632, 648, 651, 654, 655, 660, 670, 672, 692, 701, 706, 708, 709, 710, 715, 719, 724, 734, 736, 737, 738, 754, 771, 778, 781, 782, 784, 785, 788, 789, 790, 791, 792, 793, 794, 798, 801, 805, 807, 808, 811, 813, 816, 821, 832, 841, 845, 862, 863, 865, 868, 871, 872, 876, 886], "from": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 144, 146, 147, 148, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 192, 194, 195, 196, 197, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 213, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 246, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 309, 311, 314, 315, 317, 320, 323, 326, 327, 328, 330, 332, 333, 334, 335, 336, 339, 340, 341, 344, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 371, 372, 373, 374, 375, 382, 388, 396, 397, 405, 406, 413, 417, 419, 420, 421, 422, 428, 431, 435, 436, 437, 439, 442, 443, 444, 445, 446, 447, 452, 454, 455, 456, 457, 458, 461, 463, 465, 466, 470, 471, 472, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 535, 536, 537, 538, 539, 540, 542, 543, 544, 548, 549, 553, 554, 555, 559, 560, 561, 562, 563, 564, 565, 566, 569, 571, 572, 573, 576, 577, 578, 579, 580, 582, 583, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 603, 604, 605, 606, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 623, 624, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 646, 648, 651, 655, 656, 657, 658, 659, 660, 666, 669, 670, 671, 672, 673, 675, 676, 678, 679, 680, 681, 682, 683, 685, 686, 688, 692, 693, 694, 695, 696, 697, 698, 701, 702, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 732, 734, 735, 737, 738, 741, 742, 743, 744, 746, 749, 750, 753, 754, 762, 767, 770, 771, 778, 782, 783, 784, 786, 787, 788, 790, 791, 792, 793, 794, 795, 797, 798, 799, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 814, 816, 822, 824, 832, 833, 836, 839, 841, 843, 845, 848, 849, 850, 851, 852, 853, 857, 861, 862, 863, 865, 867, 868, 870, 871, 874, 876, 884, 886], "tutori": [1, 27, 32, 62, 70, 73, 84, 109, 124, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 181, 182, 183, 187, 188, 191, 192, 194, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 230, 233, 234, 236, 238, 239, 241, 243, 244, 246, 263, 264, 266, 267, 268, 269, 271, 299, 304, 356, 361, 413, 433, 448, 451, 454, 456, 481, 482, 492, 494, 526, 550, 594, 733, 734, 736, 737, 770, 782, 794, 822, 841, 845, 862, 865, 868, 869, 870, 886], "For": [1, 4, 15, 19, 34, 43, 44, 47, 50, 55, 63, 67, 69, 70, 80, 95, 101, 103, 109, 113, 115, 120, 121, 123, 127, 134, 135, 136, 137, 141, 144, 145, 146, 147, 150, 151, 152, 156, 157, 159, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 213, 217, 218, 220, 223, 228, 230, 232, 233, 236, 238, 241, 242, 243, 258, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 285, 299, 300, 316, 327, 337, 356, 360, 361, 362, 369, 371, 372, 373, 382, 388, 405, 406, 412, 413, 415, 416, 419, 420, 421, 423, 425, 426, 430, 434, 435, 436, 437, 439, 442, 443, 444, 446, 448, 449, 451, 452, 454, 455, 456, 457, 470, 471, 472, 475, 476, 478, 479, 480, 481, 482, 487, 489, 496, 502, 505, 506, 527, 535, 540, 544, 549, 561, 562, 563, 564, 573, 578, 581, 583, 594, 598, 605, 612, 621, 637, 641, 643, 648, 651, 653, 655, 686, 691, 692, 693, 694, 696, 697, 701, 706, 707, 708, 709, 710, 724, 726, 733, 734, 736, 737, 744, 754, 769, 770, 772, 778, 779, 784, 785, 786, 788, 790, 793, 794, 795, 797, 798, 799, 801, 807, 809, 810, 814, 816, 818, 841, 843, 845, 847, 851, 856, 857, 861, 862, 863, 864, 865, 868, 872, 886], "comparison": [1, 27, 31, 38, 83, 96, 97, 101, 112, 122, 130, 135, 152, 156, 158, 168, 177, 184, 185, 192, 203, 208, 212, 233, 236, 237, 238, 242, 243, 246, 277, 278, 362, 562, 565, 595, 634, 690, 694, 695, 853, 861, 868, 883, 886], "see": [1, 4, 7, 8, 10, 19, 21, 22, 26, 27, 32, 34, 35, 39, 43, 44, 62, 63, 70, 71, 73, 75, 80, 82, 83, 84, 101, 113, 115, 119, 120, 121, 127, 129, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 147, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 230, 231, 233, 236, 241, 243, 251, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 421, 423, 424, 426, 429, 430, 432, 434, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 463, 464, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 555, 556, 558, 561, 562, 563, 564, 565, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 585, 587, 588, 589, 590, 591, 592, 594, 595, 597, 598, 601, 602, 603, 606, 607, 608, 609, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 626, 628, 629, 630, 631, 632, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 651, 652, 654, 655, 657, 658, 659, 660, 669, 670, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 722, 724, 725, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 749, 753, 754, 759, 762, 769, 770, 771, 778, 779, 782, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 796, 797, 798, 799, 801, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 844, 845, 849, 850, 851, 852, 861, 862, 863, 865, 867, 868, 869, 872, 873, 874, 876, 883, 886], "1": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 193, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 245, 246, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 292, 299, 300, 301, 306, 309, 310, 311, 314, 316, 318, 320, 323, 324, 325, 326, 337, 340, 343, 344, 345, 349, 350, 355, 356, 357, 359, 361, 362, 367, 370, 373, 382, 389, 390, 391, 395, 396, 397, 405, 406, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 437, 440, 442, 443, 444, 445, 446, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 469, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 489, 491, 496, 497, 498, 505, 506, 507, 514, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 556, 559, 561, 562, 563, 564, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 598, 601, 602, 603, 604, 609, 616, 618, 620, 628, 641, 643, 645, 647, 651, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 673, 675, 680, 681, 682, 685, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 721, 722, 724, 725, 729, 731, 732, 733, 734, 735, 736, 737, 738, 742, 743, 744, 749, 754, 758, 763, 767, 770, 771, 775, 778, 782, 783, 784, 785, 786, 788, 789, 790, 793, 794, 795, 797, 798, 799, 801, 802, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 820, 830, 832, 837, 841, 843, 844, 845, 848, 850, 851, 853, 860, 861, 862, 865, 867, 868, 871, 874], "http": [1, 8, 15, 43, 70, 88, 113, 152, 156, 161, 185, 197, 233, 246, 266, 267, 268, 269, 273, 277, 281, 302, 356, 369, 382, 388, 390, 405, 406, 421, 476, 481, 482, 489, 529, 563, 652, 688, 690, 735, 738, 750, 812, 843, 845, 853, 865, 868, 886], "neuroimag": [1, 10, 12, 18, 19, 21, 35, 42, 46, 59, 75, 94, 101, 113, 121, 126, 145, 156, 163, 166, 181, 185, 187, 188, 197, 213, 228, 229, 246, 263, 264, 266, 267, 268, 269, 271, 272, 277, 304, 356, 391, 417, 419, 420, 421, 431, 434, 454, 456, 476, 479, 492, 526, 530, 540, 544, 562, 576, 601, 663, 666, 668, 690, 693, 694, 695, 696, 697, 699, 700, 720, 722, 732, 736, 770, 782, 794, 841, 852, 860, 863, 865, 868, 869, 874], "usc": [1, 185], "edu": [1, 9, 24, 35, 37, 43, 47, 58, 68, 70, 101, 104, 113, 114, 115, 120, 134, 152, 156, 185, 246, 273, 277, 281, 369, 603, 812, 868], "mediannervectf": 1, "author": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 142, 158, 160, 162, 180, 181, 183, 184, 185, 186, 192, 196, 203, 210, 214, 225, 228, 230, 231, 232, 233, 236, 237, 238, 242, 243, 246, 601, 845, 860, 867], "mainak": [1, 46, 78, 86, 87, 192, 246, 479, 860, 873, 886], "ja": [1, 46, 78, 86, 87, 192, 246, 479, 860, 873, 886], "telecom": [1, 78, 87, 192], "paristech": [1, 78, 87, 192, 257, 873], "fr": [1, 7, 9, 10, 11, 13, 18, 19, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 78, 87, 92, 96, 97, 100, 107, 108, 110, 111, 117, 121, 125, 131, 132, 138, 160, 186, 192, 197, 230, 231, 232, 236, 237, 238, 242, 246, 886], "licens": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 142, 158, 160, 162, 180, 181, 183, 184, 185, 186, 192, 196, 210, 214, 225, 228, 230, 231, 232, 233, 236, 237, 238, 242, 243, 379, 380, 381, 388, 390, 862, 886], "bsd": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 142, 158, 160, 162, 180, 181, 183, 184, 185, 186, 192, 196, 210, 214, 225, 228, 230, 231, 232, 233, 236, 237, 238, 242, 243, 594, 867], "claus": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 142, 158, 160, 162, 180, 181, 183, 184, 185, 186, 192, 196, 210, 214, 225, 228, 230, 231, 232, 233, 236, 237, 238, 242, 243], "import": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 246, 260, 266, 267, 268, 269, 271, 314, 330, 375, 382, 405, 406, 453, 481, 482, 489, 491, 493, 496, 497, 498, 499, 500, 501, 502, 504, 508, 509, 511, 512, 562, 582, 603, 618, 619, 623, 637, 651, 671, 686, 688, 706, 708, 709, 710, 722, 732, 749, 752, 754, 802, 839, 843, 844, 849, 852, 853, 856, 861, 862, 863, 865, 867, 868, 872, 874, 886], "numpi": [1, 4, 5, 8, 9, 10, 11, 14, 15, 16, 19, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 47, 50, 58, 59, 60, 63, 68, 70, 71, 72, 74, 79, 82, 84, 90, 92, 93, 94, 95, 97, 100, 107, 111, 112, 113, 114, 115, 117, 119, 120, 125, 127, 133, 135, 136, 137, 138, 141, 142, 144, 147, 150, 151, 152, 157, 158, 159, 160, 161, 167, 169, 171, 172, 173, 177, 178, 179, 182, 183, 184, 185, 186, 191, 192, 193, 196, 197, 200, 201, 203, 204, 205, 206, 207, 208, 211, 212, 213, 217, 218, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 260, 263, 266, 267, 268, 269, 273, 274, 275, 276, 277, 280, 281, 282, 413, 419, 420, 421, 451, 452, 453, 478, 479, 480, 481, 482, 515, 562, 577, 592, 603, 611, 658, 659, 660, 669, 670, 672, 686, 691, 693, 694, 695, 696, 697, 706, 707, 708, 709, 710, 711, 713, 714, 716, 722, 732, 733, 734, 735, 736, 737, 738, 754, 786, 788, 793, 806, 841, 844, 863, 867, 870, 886], "np": [1, 4, 5, 8, 9, 10, 11, 14, 15, 16, 19, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 43, 45, 47, 50, 58, 59, 60, 68, 70, 71, 72, 74, 79, 82, 84, 90, 92, 93, 94, 95, 97, 100, 107, 111, 112, 113, 114, 115, 117, 119, 120, 125, 127, 133, 135, 136, 137, 138, 142, 144, 147, 151, 152, 157, 158, 159, 160, 161, 167, 169, 171, 173, 177, 178, 179, 182, 183, 184, 185, 186, 191, 192, 196, 197, 200, 201, 203, 204, 205, 207, 208, 211, 212, 213, 217, 218, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 260, 266, 267, 268, 269, 272, 273, 274, 277, 279, 280, 281, 282, 284, 316, 356, 370, 447, 448, 452, 469, 481, 482, 498, 513, 562, 577, 583, 592, 603, 672, 686, 698, 706, 708, 709, 710, 722, 724, 732, 733, 734, 736, 737, 754, 762, 768, 773, 778, 785, 808, 812, 814, 817, 818, 845, 868, 871, 884, 886], "mne": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 160, 163, 164, 165, 166, 168, 169, 170, 171, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 200, 202, 204, 205, 208, 209, 210, 212, 213, 215, 216, 218, 219, 220, 221, 224, 225, 226, 227, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 246, 251, 252, 253, 254, 256, 257, 841, 843, 844, 846, 850, 854, 855, 856, 861, 862, 863, 866, 867, 869, 872, 873, 874, 875, 876, 877, 880, 881, 883, 884, 885, 886], "bst_raw": [1, 119, 862, 876], "io": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 127, 128, 129, 132, 133, 135, 136, 138, 141, 142, 143, 145, 146, 147, 150, 152, 153, 157, 158, 159, 160, 161, 163, 167, 168, 169, 170, 171, 172, 173, 178, 181, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 230, 231, 232, 233, 236, 238, 241, 242, 243, 246, 253, 258, 259, 260, 264, 265, 266, 267, 268, 269, 271, 273, 274, 276, 277, 280, 281, 282, 285, 298, 367, 388, 418, 446, 448, 451, 525, 562, 570, 574, 575, 576, 583, 594, 706, 708, 709, 710, 724, 754, 799, 843, 845, 849, 861, 862, 863, 865, 868, 872, 876, 877, 886], "read_raw_ctf": [1, 7, 12, 21, 81, 82, 119, 123, 185, 189, 192, 487, 868, 876, 886], "print": [1, 2, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 22, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 76, 78, 80, 83, 84, 86, 87, 88, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 123, 127, 128, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 145, 147, 150, 151, 152, 157, 158, 159, 160, 161, 167, 168, 169, 170, 171, 172, 176, 177, 180, 182, 183, 184, 185, 186, 192, 197, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 217, 218, 219, 223, 224, 225, 228, 229, 231, 232, 233, 236, 237, 238, 241, 242, 243, 246, 258, 266, 267, 268, 269, 275, 356, 396, 448, 454, 481, 482, 513, 652, 653, 705, 708, 709, 749, 762, 778, 789, 791, 794, 849, 851, 862, 865, 886], "__doc__": [1, 2, 4, 7, 8, 10, 11, 13, 14, 15, 16, 18, 22, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 69, 70, 71, 72, 73, 74, 76, 78, 80, 84, 86, 87, 88, 92, 93, 94, 95, 96, 97, 100, 103, 104, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 123, 128, 131, 132, 133, 137, 176, 180, 184, 185, 192, 231, 232, 237, 238], "tmin": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 46, 49, 51, 59, 60, 69, 71, 72, 73, 83, 84, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 112, 113, 114, 117, 121, 128, 132, 133, 137, 138, 141, 142, 143, 145, 146, 150, 152, 163, 167, 173, 178, 181, 182, 184, 185, 186, 192, 196, 197, 201, 202, 206, 210, 212, 213, 214, 217, 223, 224, 225, 229, 230, 231, 232, 233, 236, 238, 241, 242, 243, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 343, 345, 356, 357, 358, 361, 419, 425, 437, 439, 480, 481, 482, 517, 535, 552, 574, 575, 579, 580, 586, 673, 692, 698, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 754, 786, 808, 814, 861, 868, 872, 886], "tmax": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 46, 49, 51, 59, 60, 69, 71, 72, 73, 83, 84, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 112, 113, 114, 117, 121, 128, 129, 132, 133, 137, 138, 141, 142, 143, 145, 146, 147, 150, 152, 153, 163, 167, 168, 169, 173, 178, 181, 182, 183, 184, 185, 186, 192, 196, 197, 200, 201, 202, 206, 207, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 229, 230, 231, 232, 233, 236, 238, 241, 242, 243, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 343, 345, 356, 357, 358, 361, 419, 425, 437, 439, 480, 481, 482, 535, 552, 574, 575, 579, 580, 586, 692, 695, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 754, 786, 795, 808, 814, 861, 865, 868, 872, 886], "event_idtake": [1, 4, 5, 7, 10, 16, 19, 26, 31, 38, 41, 43, 44, 45, 47, 50, 70, 71, 74, 76, 80, 83, 94, 96, 97, 101, 109, 110, 113, 115, 119, 123, 127, 131, 133, 135, 136, 138, 141, 142, 143, 145, 146, 150, 151, 153, 156, 159, 160, 161, 163, 167, 168, 169, 170, 172, 173, 177, 180, 182, 183, 184, 186, 190, 193, 196, 197, 202, 203, 206, 207, 208, 209, 211, 217, 223, 225, 228, 236, 237, 238, 242, 243, 258, 260, 263, 266, 267, 268, 269, 273, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 289, 299, 300, 311, 314, 332, 342, 344, 356, 360, 361, 362, 369, 371, 372, 373, 413, 420, 437, 442, 446, 454, 456, 457, 470, 472, 476, 478, 479, 481, 482, 508, 529, 530, 531, 532, 533, 535, 536, 540, 545, 546, 562, 565, 567, 570, 642, 648, 654, 656, 667, 672, 692, 701, 706, 708, 709, 710, 751, 754, 755, 771, 778, 784, 786, 788, 793, 794, 797, 806, 814, 824, 841, 845, 848, 849, 853, 867, 868, 869, 871, 886], "right": [1, 5, 8, 10, 11, 13, 15, 39, 40, 41, 43, 45, 47, 51, 52, 57, 61, 67, 70, 71, 73, 79, 80, 83, 94, 109, 112, 113, 114, 116, 120, 127, 128, 132, 134, 135, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 159, 161, 162, 167, 169, 173, 176, 177, 179, 180, 181, 182, 192, 193, 196, 202, 203, 205, 206, 207, 208, 211, 217, 218, 219, 220, 224, 225, 230, 232, 233, 236, 237, 238, 241, 242, 262, 263, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 280, 281, 282, 314, 316, 326, 327, 337, 338, 362, 382, 413, 420, 435, 437, 440, 447, 471, 479, 481, 482, 500, 505, 515, 527, 561, 562, 582, 641, 669, 706, 708, 709, 710, 722, 732, 754, 767, 777, 778, 784, 785, 786, 790, 792, 793, 797, 805, 806, 807, 809, 814, 818, 841, 843, 845, 848, 862, 865, 867, 868, 871, 886], "hand": [1, 5, 8, 9, 112, 157, 161, 201, 206, 207, 208, 243, 271, 382, 562, 868, 886], "somato": [1, 32, 33, 34, 46, 61, 113, 242, 862, 876, 886], "reject": [1, 5, 7, 11, 13, 16, 27, 28, 32, 42, 45, 46, 61, 69, 76, 77, 83, 96, 97, 99, 100, 101, 103, 104, 107, 110, 113, 114, 117, 121, 132, 141, 142, 143, 145, 146, 147, 152, 153, 166, 167, 173, 178, 181, 190, 192, 197, 201, 206, 207, 208, 211, 212, 215, 216, 219, 228, 230, 231, 232, 233, 236, 238, 242, 246, 258, 259, 260, 261, 266, 267, 268, 271, 276, 359, 361, 481, 482, 522, 559, 562, 564, 565, 574, 575, 576, 579, 580, 584, 585, 594, 617, 621, 633, 684, 690, 692, 784, 797, 798, 799, 800, 868, 886], "dict": [1, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 18, 21, 22, 26, 28, 32, 35, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 54, 55, 58, 59, 61, 65, 67, 69, 70, 74, 76, 78, 80, 86, 88, 93, 94, 96, 97, 99, 100, 101, 103, 104, 107, 109, 110, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 128, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 146, 151, 152, 153, 158, 159, 160, 161, 167, 169, 170, 171, 172, 173, 176, 177, 178, 180, 181, 182, 185, 192, 193, 196, 197, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 214, 217, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 242, 243, 259, 260, 261, 263, 264, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 288, 290, 299, 300, 304, 306, 312, 314, 316, 326, 327, 342, 343, 344, 345, 346, 347, 348, 356, 359, 360, 361, 367, 368, 369, 370, 371, 372, 373, 388, 394, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 435, 437, 440, 442, 445, 447, 448, 449, 451, 452, 456, 457, 458, 459, 461, 463, 464, 465, 466, 473, 476, 478, 479, 480, 481, 482, 485, 489, 496, 501, 505, 514, 517, 518, 519, 520, 521, 524, 525, 528, 529, 530, 531, 532, 533, 535, 536, 540, 542, 545, 546, 547, 552, 554, 555, 558, 560, 561, 562, 563, 564, 572, 574, 575, 577, 579, 580, 582, 583, 590, 605, 610, 614, 618, 619, 620, 621, 623, 627, 633, 637, 639, 642, 648, 655, 657, 658, 659, 669, 671, 674, 675, 691, 692, 693, 694, 696, 697, 701, 703, 706, 708, 709, 710, 722, 732, 740, 741, 743, 744, 754, 755, 770, 771, 773, 774, 776, 777, 778, 782, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 797, 799, 805, 806, 807, 809, 812, 813, 814, 815, 816, 817, 818, 824, 829, 839, 840, 845, 861, 868, 872, 886], "mag": [1, 5, 7, 8, 9, 12, 13, 21, 22, 26, 28, 31, 32, 33, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 69, 74, 76, 80, 81, 82, 87, 93, 94, 104, 107, 109, 116, 119, 120, 121, 123, 124, 132, 141, 143, 146, 147, 151, 153, 157, 158, 159, 163, 167, 170, 171, 173, 177, 178, 179, 180, 181, 182, 184, 185, 186, 192, 197, 200, 202, 204, 206, 207, 208, 210, 211, 217, 223, 224, 233, 236, 238, 241, 258, 261, 263, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 299, 300, 313, 320, 321, 340, 356, 360, 361, 371, 372, 373, 375, 413, 420, 422, 456, 457, 476, 478, 479, 481, 482, 518, 540, 559, 560, 561, 562, 567, 572, 574, 575, 577, 579, 580, 583, 647, 692, 706, 708, 709, 710, 777, 778, 784, 785, 786, 788, 790, 792, 793, 794, 797, 807, 809, 810, 814, 815, 816, 841, 861, 868, 886], "4e": [1, 9, 28, 31, 42, 45, 69, 78, 82, 104, 107, 121, 132, 153, 163, 178, 181, 186, 192, 197, 206, 224, 225, 233, 261, 266, 267, 276, 361, 481, 482, 562, 579, 580, 692, 784, 807, 861], "12": [1, 7, 9, 11, 12, 13, 18, 19, 21, 24, 25, 28, 32, 33, 34, 35, 42, 43, 44, 45, 46, 47, 49, 51, 56, 59, 64, 69, 70, 72, 76, 80, 81, 83, 85, 91, 93, 101, 103, 104, 107, 108, 109, 112, 113, 114, 121, 127, 130, 132, 135, 138, 142, 146, 147, 149, 152, 153, 162, 163, 167, 169, 170, 172, 173, 176, 178, 180, 181, 184, 188, 192, 196, 197, 200, 202, 203, 204, 205, 206, 208, 210, 211, 216, 217, 219, 223, 225, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 242, 246, 260, 261, 264, 265, 266, 267, 268, 269, 271, 273, 274, 276, 277, 278, 279, 280, 281, 282, 299, 307, 311, 315, 337, 349, 353, 354, 356, 361, 362, 382, 396, 419, 435, 454, 456, 479, 481, 482, 493, 524, 527, 529, 562, 573, 574, 575, 579, 580, 592, 594, 659, 692, 706, 708, 709, 710, 734, 737, 772, 784, 786, 791, 803, 807, 810, 861, 862, 865, 868, 871], "eog": [1, 4, 8, 9, 11, 12, 14, 15, 16, 27, 28, 32, 33, 42, 45, 46, 61, 69, 71, 74, 76, 77, 81, 82, 83, 85, 88, 90, 93, 94, 96, 97, 100, 104, 107, 108, 109, 110, 113, 117, 127, 128, 138, 141, 142, 146, 147, 150, 152, 153, 167, 168, 169, 170, 173, 178, 181, 190, 192, 193, 197, 201, 202, 204, 207, 209, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 230, 231, 232, 233, 236, 238, 242, 261, 266, 267, 268, 269, 271, 276, 313, 361, 375, 446, 454, 481, 482, 489, 491, 492, 493, 496, 497, 498, 504, 508, 553, 559, 561, 562, 575, 579, 580, 585, 588, 604, 609, 618, 658, 659, 692, 706, 708, 709, 710, 784, 785, 800, 805, 807, 841, 861, 862, 863, 868, 871, 872, 886], "250e": [1, 32, 145, 167, 192, 205, 208, 261, 266, 267, 361, 562, 579, 580, 692], "6": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 68, 70, 71, 73, 75, 76, 78, 80, 81, 82, 83, 84, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 131, 133, 135, 137, 141, 142, 143, 144, 145, 146, 147, 149, 152, 153, 155, 157, 158, 159, 160, 161, 163, 167, 169, 170, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 219, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 242, 243, 246, 258, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 302, 316, 337, 361, 382, 389, 413, 415, 418, 420, 448, 449, 451, 452, 481, 482, 529, 561, 562, 571, 577, 578, 579, 580, 592, 596, 647, 659, 693, 694, 696, 697, 706, 708, 709, 710, 722, 732, 733, 734, 736, 737, 769, 770, 771, 784, 785, 786, 790, 793, 797, 799, 806, 807, 809, 813, 814, 816, 843, 844, 851, 861, 862, 868, 871], "data_path": [1, 2, 5, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 161, 162, 163, 167, 168, 169, 170, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 193, 196, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 224, 225, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 266, 267, 268, 269, 276, 388, 481, 482, 845, 862, 868, 876, 886], "raw_path": [1, 173, 185], "meg": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 68, 69, 71, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 124, 127, 129, 130, 131, 132, 134, 136, 137, 141, 142, 143, 146, 147, 150, 151, 152, 153, 157, 158, 159, 160, 161, 163, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 192, 193, 194, 195, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 223, 225, 230, 231, 232, 233, 236, 237, 238, 241, 242, 246, 258, 261, 263, 266, 267, 268, 269, 270, 271, 275, 277, 279, 286, 287, 299, 300, 302, 312, 317, 320, 321, 322, 327, 329, 331, 343, 355, 356, 357, 358, 359, 360, 361, 366, 371, 372, 373, 375, 395, 404, 413, 415, 420, 421, 429, 434, 454, 456, 457, 464, 470, 476, 478, 479, 481, 482, 484, 488, 492, 494, 502, 503, 506, 512, 514, 521, 523, 525, 528, 529, 530, 540, 541, 543, 544, 556, 559, 560, 561, 562, 564, 567, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 586, 590, 594, 595, 600, 602, 609, 615, 620, 624, 626, 641, 647, 658, 659, 663, 666, 668, 671, 674, 692, 693, 694, 696, 697, 701, 706, 708, 709, 710, 714, 715, 716, 717, 719, 736, 737, 740, 741, 754, 767, 770, 771, 777, 778, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 796, 797, 798, 805, 806, 808, 809, 814, 816, 821, 841, 842, 845, 852, 857, 860, 861, 865, 871, 872, 876, 886], "subj001_somatosensory_20111109_01_aux": [1, 119], "f": [1, 5, 8, 9, 10, 18, 19, 21, 22, 27, 28, 29, 32, 33, 39, 40, 41, 46, 47, 60, 63, 70, 71, 79, 83, 86, 90, 92, 94, 98, 102, 104, 107, 109, 111, 112, 113, 114, 115, 119, 126, 127, 135, 136, 142, 145, 150, 151, 152, 158, 159, 160, 161, 166, 168, 171, 173, 177, 183, 192, 196, 197, 200, 201, 203, 206, 208, 210, 211, 212, 219, 223, 224, 225, 228, 230, 231, 232, 234, 235, 236, 237, 238, 241, 242, 243, 246, 258, 260, 263, 266, 267, 268, 269, 271, 275, 290, 299, 304, 320, 340, 355, 390, 452, 454, 481, 482, 528, 559, 571, 621, 662, 686, 687, 688, 689, 692, 694, 697, 709, 722, 732, 736, 741, 775, 778, 785, 841, 851, 853, 861, 862, 868, 886], "d": [1, 4, 7, 11, 12, 15, 19, 21, 22, 26, 34, 39, 41, 46, 50, 52, 57, 59, 65, 72, 80, 81, 82, 84, 93, 94, 100, 101, 109, 111, 113, 118, 119, 120, 123, 126, 127, 129, 135, 136, 137, 142, 158, 159, 160, 161, 172, 180, 181, 183, 184, 185, 186, 192, 196, 203, 209, 210, 219, 225, 228, 232, 236, 237, 238, 241, 243, 246, 258, 260, 263, 266, 267, 268, 269, 271, 275, 290, 299, 300, 304, 323, 356, 390, 421, 476, 481, 482, 494, 498, 528, 529, 625, 651, 699, 700, 708, 710, 725, 741, 755, 794, 807, 853, 862, 863, 868, 874, 886], "crop": [1, 5, 8, 9, 10, 12, 21, 30, 31, 32, 33, 34, 35, 38, 40, 42, 44, 45, 46, 51, 59, 74, 76, 81, 82, 83, 84, 109, 112, 116, 127, 138, 141, 142, 143, 147, 150, 152, 168, 169, 173, 177, 180, 181, 182, 184, 185, 186, 200, 201, 204, 206, 207, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 225, 229, 230, 236, 238, 241, 242, 260, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 572, 595, 608, 706, 709, 863, 886], "half": [1, 70, 203, 204, 238, 265, 266, 267, 268, 269, 271, 273, 274, 276, 277, 280, 281, 282, 343, 415, 449, 451, 452, 481, 482, 581, 693, 694, 696, 697, 701, 718, 720, 722, 732, 734, 736, 737, 754, 778, 784, 786, 807, 812, 817, 845, 868, 886], "length": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 82, 83, 84, 88, 99, 111, 112, 113, 114, 115, 121, 133, 137, 142, 144, 145, 150, 152, 173, 176, 192, 197, 200, 202, 204, 205, 206, 207, 208, 211, 212, 213, 217, 220, 223, 229, 233, 241, 258, 261, 263, 264, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 280, 281, 282, 289, 315, 361, 396, 413, 415, 418, 419, 420, 421, 424, 425, 428, 449, 451, 452, 471, 479, 480, 481, 482, 532, 544, 546, 561, 562, 564, 570, 579, 580, 594, 601, 624, 625, 646, 656, 672, 686, 687, 691, 692, 706, 708, 709, 710, 711, 712, 713, 714, 716, 718, 721, 724, 725, 729, 733, 734, 735, 736, 737, 738, 744, 754, 769, 770, 771, 778, 785, 786, 788, 790, 793, 795, 797, 806, 809, 812, 813, 814, 815, 816, 817, 841, 861, 862, 868, 886], "save": [1, 5, 7, 9, 11, 29, 30, 32, 34, 41, 43, 44, 60, 61, 70, 74, 79, 108, 109, 110, 113, 115, 135, 136, 137, 143, 144, 151, 152, 157, 158, 159, 161, 162, 163, 169, 171, 178, 181, 182, 184, 189, 191, 192, 201, 202, 204, 206, 208, 209, 211, 218, 219, 220, 225, 232, 236, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 284, 290, 314, 315, 340, 382, 388, 417, 443, 444, 445, 446, 472, 480, 481, 482, 498, 501, 506, 535, 536, 551, 561, 562, 607, 619, 620, 623, 624, 628, 631, 634, 645, 696, 697, 706, 707, 708, 709, 710, 726, 727, 739, 741, 754, 828, 832, 833, 835, 843, 845, 849, 863, 865, 868, 871, 872, 886], "memori": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 258, 261, 266, 267, 268, 269, 284, 293, 294, 297, 332, 361, 363, 365, 376, 415, 422, 425, 426, 430, 451, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522, 531, 532, 533, 535, 536, 542, 564, 594, 649, 655, 693, 694, 696, 697, 712, 715, 731, 733, 734, 735, 736, 737, 738, 754, 788, 843, 844, 851, 863, 872, 874, 886], "120": [1, 5, 7, 24, 33, 35, 38, 42, 43, 45, 56, 59, 79, 81, 82, 108, 133, 135, 136, 143, 152, 161, 170, 177, 182, 192, 200, 202, 204, 206, 210, 213, 233, 242, 246, 258, 266, 267, 436, 481, 482, 572, 577, 784, 807], "load_data": [1, 4, 8, 9, 12, 21, 34, 42, 70, 71, 74, 75, 76, 81, 82, 83, 84, 99, 109, 112, 113, 115, 137, 147, 152, 160, 167, 169, 173, 183, 192, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 213, 217, 218, 219, 220, 242, 266, 267, 268, 269, 481, 482, 862, 868, 876, 886], "plot": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 45, 46, 49, 51, 53, 54, 55, 56, 58, 59, 61, 63, 64, 65, 68, 71, 72, 73, 74, 75, 76, 77, 78, 80, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 121, 122, 129, 130, 131, 132, 134, 135, 136, 138, 141, 144, 145, 146, 147, 150, 152, 154, 155, 157, 159, 160, 161, 166, 167, 168, 169, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 219, 221, 222, 223, 225, 228, 229, 233, 236, 237, 238, 241, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 314, 315, 323, 325, 326, 330, 340, 356, 366, 375, 413, 417, 420, 428, 431, 433, 439, 442, 454, 456, 473, 481, 482, 488, 492, 494, 497, 502, 506, 521, 525, 526, 528, 529, 538, 539, 540, 541, 543, 558, 559, 561, 562, 577, 602, 615, 616, 621, 624, 626, 629, 634, 639, 646, 655, 692, 706, 707, 708, 709, 710, 722, 732, 754, 755, 756, 757, 759, 763, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 821, 822, 824, 841, 844, 845, 849, 861, 862, 863, 866, 868, 869, 872, 874, 875, 886], "set": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 80, 82, 83, 84, 86, 87, 88, 90, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 126, 127, 128, 132, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 147, 150, 151, 153, 156, 157, 159, 160, 161, 162, 163, 166, 167, 169, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 219, 223, 224, 225, 228, 231, 242, 243, 259, 260, 261, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 289, 290, 299, 300, 302, 304, 305, 319, 327, 332, 343, 356, 357, 359, 361, 362, 363, 367, 371, 377, 378, 379, 380, 381, 382, 384, 385, 386, 388, 390, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 436, 437, 438, 441, 442, 443, 446, 447, 448, 452, 454, 456, 469, 470, 471, 472, 478, 481, 482, 483, 489, 496, 497, 501, 504, 506, 515, 517, 519, 521, 523, 524, 525, 526, 527, 528, 531, 532, 533, 535, 536, 540, 545, 546, 548, 549, 550, 553, 555, 561, 562, 563, 564, 565, 567, 574, 575, 576, 577, 579, 580, 582, 583, 595, 607, 612, 618, 619, 623, 624, 625, 628, 631, 634, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 671, 683, 684, 688, 690, 692, 693, 694, 695, 696, 697, 701, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 722, 724, 725, 732, 733, 734, 735, 736, 737, 741, 744, 745, 747, 752, 753, 754, 757, 771, 773, 778, 781, 782, 784, 786, 789, 790, 791, 792, 793, 797, 799, 800, 801, 806, 807, 808, 809, 810, 812, 814, 816, 817, 818, 819, 820, 823, 826, 841, 843, 844, 849, 850, 852, 863, 865, 867, 868, 871, 872, 875, 886], "channel": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 65, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 142, 143, 145, 147, 151, 153, 157, 158, 159, 160, 163, 166, 167, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 191, 192, 193, 196, 197, 200, 204, 205, 207, 208, 210, 211, 213, 215, 216, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 241, 242, 246, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 280, 281, 282, 283, 286, 287, 299, 300, 310, 312, 313, 343, 345, 347, 348, 351, 355, 356, 357, 358, 359, 360, 361, 371, 372, 373, 375, 383, 413, 415, 420, 421, 422, 424, 426, 429, 434, 438, 443, 445, 446, 451, 452, 454, 455, 456, 457, 465, 470, 473, 476, 478, 479, 480, 481, 482, 489, 491, 492, 493, 494, 496, 497, 498, 501, 504, 505, 506, 508, 518, 521, 525, 530, 540, 553, 554, 555, 556, 558, 559, 560, 561, 562, 564, 567, 568, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 593, 594, 595, 598, 599, 600, 602, 605, 608, 609, 618, 619, 620, 621, 623, 624, 625, 626, 641, 642, 647, 648, 651, 656, 658, 659, 660, 674, 686, 692, 693, 694, 696, 697, 701, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 723, 729, 733, 736, 737, 738, 754, 767, 770, 771, 774, 775, 776, 778, 779, 780, 783, 784, 785, 786, 788, 790, 791, 792, 793, 794, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 814, 815, 816, 824, 826, 841, 843, 845, 849, 852, 853, 863, 865, 867, 872, 875, 876, 886], "set_channel_typ": [1, 128, 141, 150, 152, 192, 217, 266, 267, 268, 269, 446, 481, 482, 582, 886], "eeg058": 1, "set_eeg_refer": [1, 29, 67, 71, 93, 94, 152, 160, 163, 168, 183, 190, 205, 207, 209, 224, 243, 266, 267, 268, 269, 481, 482, 561, 648, 670, 872, 876, 886], "averag": [1, 2, 4, 5, 7, 10, 11, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 64, 66, 68, 69, 71, 72, 73, 76, 78, 80, 81, 82, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 104, 107, 108, 110, 112, 113, 116, 117, 119, 120, 121, 124, 127, 129, 132, 133, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 151, 153, 154, 155, 159, 160, 163, 166, 167, 170, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 192, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 238, 241, 242, 243, 246, 258, 259, 263, 265, 266, 267, 268, 269, 271, 273, 274, 275, 277, 280, 281, 282, 288, 355, 356, 358, 374, 391, 413, 420, 427, 432, 434, 447, 454, 470, 481, 482, 506, 516, 517, 530, 531, 532, 533, 535, 536, 542, 545, 546, 561, 562, 566, 567, 569, 574, 575, 577, 579, 583, 584, 587, 590, 620, 624, 625, 648, 651, 662, 670, 706, 707, 708, 709, 710, 724, 725, 733, 734, 735, 736, 737, 738, 754, 778, 786, 788, 789, 793, 797, 798, 805, 806, 808, 809, 814, 816, 841, 861, 862, 865, 871, 872, 874, 886], "project": [1, 5, 8, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 83, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 238, 242, 243, 246, 261, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 280, 281, 282, 286, 287, 299, 300, 302, 343, 345, 349, 356, 357, 358, 359, 361, 371, 373, 390, 421, 433, 454, 456, 457, 480, 481, 482, 502, 522, 524, 526, 528, 530, 540, 561, 562, 573, 574, 575, 576, 578, 583, 590, 594, 602, 609, 617, 626, 632, 647, 648, 651, 670, 683, 701, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 754, 770, 771, 776, 779, 786, 788, 790, 792, 793, 797, 805, 806, 807, 808, 810, 812, 817, 823, 824, 826, 837, 841, 845, 850, 852, 857, 861, 862, 864, 874, 875, 876, 886], "true": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 83, 84, 86, 87, 88, 92, 93, 94, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 129, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 220, 224, 225, 228, 230, 231, 232, 233, 236, 238, 241, 242, 243, 246, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 289, 290, 299, 300, 302, 304, 305, 308, 309, 310, 311, 314, 315, 316, 319, 322, 323, 324, 325, 326, 327, 340, 342, 343, 344, 345, 346, 349, 356, 360, 361, 362, 363, 365, 366, 371, 372, 373, 377, 379, 380, 381, 382, 384, 385, 386, 388, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 431, 432, 434, 435, 438, 442, 443, 444, 445, 446, 447, 448, 451, 452, 454, 456, 457, 458, 461, 466, 470, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 522, 523, 525, 527, 528, 529, 530, 531, 532, 533, 535, 536, 538, 539, 540, 542, 544, 545, 546, 547, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 571, 573, 574, 575, 577, 579, 580, 581, 583, 584, 585, 590, 592, 594, 609, 617, 620, 621, 624, 629, 637, 639, 642, 645, 648, 650, 651, 653, 654, 655, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 676, 680, 683, 684, 687, 688, 690, 693, 694, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 715, 716, 718, 722, 723, 724, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 749, 752, 754, 759, 762, 763, 767, 768, 770, 771, 772, 773, 775, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 822, 824, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 839, 840, 843, 845, 861, 862, 865, 868, 886], "show": [1, 4, 7, 8, 10, 12, 13, 14, 15, 16, 19, 22, 26, 27, 28, 29, 31, 32, 35, 37, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 58, 59, 60, 63, 68, 69, 71, 73, 74, 77, 78, 79, 85, 97, 99, 101, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 126, 127, 130, 131, 132, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 156, 157, 158, 160, 161, 167, 169, 170, 171, 173, 177, 179, 180, 181, 182, 183, 191, 192, 200, 202, 203, 204, 205, 206, 207, 208, 210, 212, 214, 217, 219, 220, 223, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 263, 264, 265, 266, 267, 268, 269, 271, 274, 275, 279, 280, 281, 282, 309, 311, 314, 315, 413, 420, 454, 472, 473, 481, 482, 513, 553, 559, 561, 562, 577, 583, 585, 705, 706, 707, 708, 710, 722, 732, 754, 762, 763, 770, 771, 772, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 823, 841, 843, 845, 850, 853, 861, 868, 874, 886], "power": [1, 12, 21, 27, 32, 36, 38, 56, 60, 68, 71, 82, 83, 105, 106, 112, 113, 114, 115, 121, 128, 133, 138, 146, 147, 150, 151, 163, 166, 167, 173, 181, 184, 192, 196, 202, 203, 207, 210, 213, 220, 223, 226, 227, 229, 233, 234, 235, 241, 246, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 280, 281, 282, 290, 291, 292, 293, 296, 299, 300, 320, 355, 356, 360, 361, 413, 415, 418, 420, 421, 424, 426, 447, 449, 451, 452, 453, 454, 481, 482, 487, 518, 520, 525, 528, 529, 530, 535, 536, 540, 543, 545, 546, 553, 558, 559, 562, 613, 621, 626, 628, 641, 654, 660, 671, 686, 687, 688, 689, 690, 693, 694, 695, 696, 697, 706, 707, 708, 709, 710, 715, 724, 725, 733, 734, 735, 736, 737, 738, 748, 754, 770, 777, 778, 779, 785, 786, 788, 791, 793, 794, 799, 805, 808, 814, 822, 841, 845, 862, 865, 867, 871, 886], "line": [1, 70, 81, 82, 101, 109, 120, 121, 123, 127, 137, 138, 141, 142, 145, 152, 156, 157, 159, 161, 163, 170, 172, 173, 178, 184, 191, 192, 193, 203, 205, 208, 209, 210, 211, 212, 217, 220, 230, 231, 242, 243, 246, 263, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 337, 343, 349, 413, 420, 472, 481, 482, 513, 519, 561, 562, 577, 601, 609, 621, 628, 637, 640, 706, 708, 710, 754, 762, 767, 770, 771, 778, 779, 784, 785, 786, 788, 790, 792, 793, 794, 796, 797, 800, 801, 802, 805, 806, 807, 808, 809, 811, 812, 813, 814, 816, 817, 834, 839, 843, 844, 848, 850, 852, 857, 861, 862, 863, 865, 868, 876, 886], "interfer": [1, 123, 137, 200, 201, 204, 209, 210, 211, 213, 219, 246, 258, 576, 594, 841, 862, 865], "remov": [1, 7, 16, 18, 21, 27, 28, 31, 32, 35, 42, 51, 58, 59, 67, 69, 70, 71, 72, 74, 75, 76, 77, 81, 82, 85, 90, 93, 99, 103, 109, 112, 113, 119, 127, 132, 135, 137, 141, 142, 143, 144, 147, 150, 151, 152, 158, 159, 161, 162, 163, 167, 168, 169, 171, 173, 177, 178, 181, 182, 183, 184, 185, 192, 197, 200, 201, 202, 203, 204, 205, 208, 209, 211, 213, 217, 219, 220, 225, 230, 231, 232, 233, 241, 243, 246, 258, 260, 263, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 290, 304, 314, 330, 340, 349, 356, 365, 366, 419, 421, 425, 436, 452, 456, 465, 473, 478, 479, 481, 482, 483, 496, 502, 528, 559, 560, 561, 562, 563, 576, 578, 583, 601, 602, 609, 615, 624, 626, 629, 648, 651, 670, 672, 706, 708, 709, 710, 741, 754, 775, 791, 807, 823, 824, 841, 845, 853, 862, 867, 868, 871, 872, 874, 886], "compute_psd": [1, 71, 74, 109, 129, 133, 138, 141, 143, 144, 167, 168, 184, 192, 200, 202, 204, 208, 210, 212, 213, 220, 241, 242, 243, 266, 267, 268, 269, 418, 481, 482, 562, 708, 710, 724, 786, 797, 799, 808, 886], "60": [1, 5, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 28, 29, 30, 31, 33, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 68, 69, 70, 72, 73, 74, 76, 78, 81, 82, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 114, 116, 117, 119, 120, 121, 123, 124, 127, 131, 132, 133, 135, 137, 138, 141, 142, 144, 145, 150, 151, 152, 153, 160, 167, 168, 169, 170, 171, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 219, 220, 224, 225, 228, 229, 231, 232, 233, 236, 238, 241, 258, 452, 481, 482, 592, 795, 862, 886], "fals": [1, 4, 5, 8, 9, 11, 12, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 30, 31, 32, 40, 41, 42, 44, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 81, 82, 83, 84, 86, 88, 90, 94, 96, 97, 99, 100, 101, 104, 107, 108, 109, 110, 112, 114, 115, 118, 119, 120, 123, 124, 126, 127, 129, 134, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 156, 157, 159, 161, 163, 167, 168, 169, 170, 171, 172, 173, 177, 179, 181, 182, 183, 184, 186, 189, 192, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 217, 218, 219, 220, 223, 224, 225, 229, 230, 231, 232, 233, 238, 241, 242, 243, 246, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 290, 293, 294, 297, 299, 300, 302, 304, 305, 309, 310, 311, 314, 315, 316, 319, 322, 324, 325, 326, 328, 342, 344, 346, 349, 356, 361, 362, 363, 365, 366, 371, 374, 377, 379, 380, 381, 382, 384, 385, 386, 388, 390, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 418, 419, 420, 421, 427, 431, 432, 434, 438, 443, 444, 445, 446, 447, 448, 454, 457, 461, 466, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 522, 525, 527, 528, 529, 530, 531, 532, 533, 535, 536, 538, 539, 540, 542, 545, 546, 547, 553, 554, 555, 557, 558, 559, 560, 561, 562, 567, 574, 575, 577, 579, 580, 583, 584, 585, 589, 590, 592, 594, 595, 598, 614, 617, 620, 621, 624, 631, 636, 637, 639, 640, 642, 644, 645, 648, 651, 652, 653, 655, 661, 662, 663, 664, 665, 666, 667, 668, 673, 679, 682, 683, 684, 687, 690, 693, 694, 696, 697, 702, 703, 705, 706, 707, 708, 709, 710, 713, 716, 718, 722, 723, 724, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 749, 752, 754, 763, 767, 768, 770, 771, 772, 775, 778, 779, 782, 784, 785, 786, 788, 790, 792, 793, 795, 797, 799, 801, 803, 806, 807, 808, 809, 810, 812, 813, 814, 816, 817, 820, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 839, 840, 843, 868, 871, 886], "notch_filt": [1, 5, 82, 137, 168, 192, 204, 211, 213, 266, 267, 268, 269, 451, 481, 482, 876, 886], "arang": [1, 4, 8, 9, 15, 19, 43, 45, 68, 82, 90, 92, 94, 95, 107, 112, 114, 120, 127, 167, 192, 196, 197, 203, 212, 213, 223, 225, 228, 230, 231, 232, 233, 237, 238, 243, 272, 279, 452, 469, 481, 482, 498, 603, 698, 722, 732, 733, 734, 736, 737], "181": [1, 35, 126, 170, 192, 202, 216, 233, 246, 671, 692], "fir_design": [1, 7, 8, 9, 11, 13, 14, 15, 16, 18, 76, 88, 99, 121, 133, 192, 203, 206, 243, 266, 267, 268, 269, 415, 424, 449, 451, 452, 481, 482, 886], "firwin": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 192, 197, 203, 204, 205, 206, 211, 212, 213, 233, 243, 266, 267, 268, 269, 415, 424, 449, 451, 452, 481, 482, 886], "event": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 32, 33, 34, 42, 45, 46, 49, 61, 70, 71, 72, 73, 74, 77, 80, 81, 82, 83, 84, 85, 88, 90, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 117, 121, 128, 132, 136, 137, 141, 142, 143, 144, 146, 147, 150, 153, 154, 155, 163, 166, 170, 174, 175, 178, 181, 183, 184, 185, 186, 189, 190, 192, 193, 197, 200, 201, 202, 203, 204, 205, 206, 208, 210, 212, 213, 217, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 236, 238, 241, 242, 243, 246, 258, 259, 260, 261, 266, 267, 268, 269, 271, 276, 285, 289, 316, 355, 356, 363, 364, 365, 370, 396, 414, 429, 434, 436, 437, 442, 454, 455, 470, 481, 482, 489, 496, 497, 498, 500, 504, 506, 523, 527, 552, 553, 557, 559, 562, 563, 564, 565, 570, 574, 575, 579, 580, 584, 585, 586, 587, 588, 608, 618, 619, 620, 621, 656, 685, 692, 706, 708, 709, 754, 755, 778, 784, 785, 787, 801, 807, 815, 823, 826, 831, 841, 861, 862, 865, 868, 871, 872, 876, 886], "find_ev": [1, 5, 7, 10, 32, 33, 34, 42, 45, 46, 49, 71, 72, 73, 80, 84, 90, 93, 95, 99, 107, 108, 110, 113, 141, 142, 143, 150, 153, 163, 167, 169, 173, 178, 181, 183, 184, 186, 192, 197, 201, 204, 205, 206, 208, 213, 214, 218, 224, 225, 230, 241, 242, 271, 439, 455, 489, 496, 504, 523, 557, 608, 621, 841, 861, 868, 872, 876, 886], "stim_channel": [1, 5, 7, 42, 46, 80, 107, 108, 110, 113, 138, 141, 143, 150, 153, 167, 169, 178, 192, 201, 206, 208, 218, 230, 241, 242, 259, 348, 454, 455, 481, 482, 489, 496, 504, 586, 886], "uppt001": [1, 7, 192], "pick": [1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 67, 68, 69, 70, 72, 73, 74, 76, 78, 81, 82, 83, 86, 88, 90, 92, 94, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 115, 117, 119, 120, 121, 127, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 158, 159, 161, 163, 167, 170, 171, 173, 178, 179, 180, 181, 182, 183, 185, 192, 197, 200, 201, 202, 204, 205, 206, 208, 209, 211, 212, 213, 217, 220, 223, 224, 225, 230, 231, 232, 233, 236, 238, 241, 242, 261, 263, 266, 267, 268, 269, 270, 271, 273, 274, 276, 277, 280, 281, 282, 289, 299, 300, 312, 315, 316, 319, 329, 331, 361, 371, 415, 421, 429, 434, 438, 451, 452, 481, 482, 553, 554, 555, 556, 559, 560, 561, 562, 564, 576, 578, 579, 580, 586, 590, 600, 602, 609, 674, 692, 701, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 723, 736, 737, 754, 768, 772, 776, 778, 784, 785, 788, 790, 791, 797, 798, 799, 801, 803, 805, 808, 810, 812, 817, 841, 845, 861, 868, 871, 872, 886], "pick_typ": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 28, 31, 34, 35, 40, 45, 46, 49, 51, 58, 59, 68, 69, 71, 72, 74, 83, 88, 90, 92, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 113, 119, 127, 133, 137, 141, 142, 150, 151, 167, 169, 170, 171, 173, 177, 182, 183, 193, 197, 200, 201, 202, 204, 205, 206, 207, 208, 212, 213, 214, 217, 225, 230, 231, 232, 233, 236, 238, 242, 243, 266, 267, 268, 269, 481, 482, 553, 706, 708, 709, 710, 845, 868, 872, 876, 886], "info": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 79, 80, 81, 82, 83, 84, 86, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 133, 135, 136, 137, 138, 141, 143, 145, 147, 150, 151, 152, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 219, 220, 224, 225, 229, 230, 231, 232, 233, 236, 238, 241, 242, 243, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 275, 276, 277, 279, 284, 286, 287, 299, 300, 301, 307, 308, 312, 313, 315, 319, 320, 321, 322, 326, 328, 329, 331, 342, 344, 346, 351, 356, 360, 361, 367, 371, 372, 373, 375, 413, 415, 420, 421, 422, 424, 429, 432, 434, 438, 443, 444, 445, 446, 449, 451, 452, 456, 457, 464, 465, 473, 476, 478, 479, 480, 481, 482, 483, 486, 488, 501, 518, 521, 524, 525, 526, 528, 530, 540, 553, 556, 558, 559, 560, 561, 562, 564, 566, 573, 576, 578, 579, 580, 583, 586, 590, 594, 598, 599, 600, 602, 609, 612, 619, 623, 641, 642, 647, 648, 651, 653, 657, 658, 659, 660, 670, 671, 674, 692, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 737, 743, 749, 752, 754, 767, 770, 771, 774, 775, 778, 779, 780, 784, 785, 788, 789, 790, 791, 794, 796, 801, 803, 806, 807, 808, 810, 816, 824, 832, 841, 843, 845, 848, 850, 861, 862, 863, 865, 868, 874, 876, 886], "eeg": [1, 4, 5, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 62, 63, 64, 66, 68, 69, 72, 73, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 116, 117, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 230, 231, 232, 233, 234, 235, 236, 238, 241, 242, 246, 258, 261, 263, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 299, 300, 302, 304, 307, 308, 312, 313, 314, 316, 318, 320, 321, 325, 326, 328, 329, 330, 331, 332, 333, 336, 337, 339, 355, 356, 357, 358, 359, 360, 361, 365, 366, 367, 371, 372, 373, 375, 391, 404, 405, 406, 413, 415, 417, 420, 421, 422, 428, 429, 432, 434, 437, 442, 445, 446, 454, 456, 457, 470, 472, 476, 478, 479, 481, 482, 487, 489, 491, 492, 493, 496, 497, 498, 499, 502, 504, 506, 508, 509, 511, 518, 521, 523, 525, 526, 528, 529, 530, 540, 541, 543, 544, 553, 559, 560, 561, 562, 563, 564, 567, 570, 571, 574, 575, 577, 578, 579, 580, 585, 586, 590, 593, 600, 602, 609, 613, 615, 617, 618, 620, 621, 624, 625, 626, 636, 639, 647, 648, 651, 655, 659, 666, 671, 674, 692, 693, 694, 696, 697, 701, 706, 708, 709, 710, 714, 715, 716, 717, 719, 736, 737, 746, 754, 770, 771, 774, 778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 797, 798, 804, 805, 806, 807, 808, 809, 810, 814, 815, 816, 821, 822, 826, 841, 842, 852, 857, 860, 862, 865, 871, 872, 875, 876, 886], "stim": [1, 8, 9, 11, 14, 15, 16, 28, 42, 45, 46, 65, 69, 71, 72, 88, 90, 99, 100, 104, 107, 108, 110, 141, 142, 143, 150, 152, 167, 170, 173, 183, 189, 192, 197, 204, 205, 206, 214, 217, 218, 225, 230, 231, 232, 242, 243, 258, 259, 266, 267, 268, 269, 271, 276, 313, 351, 375, 446, 454, 455, 481, 482, 489, 496, 504, 506, 559, 562, 586, 621, 656, 706, 708, 709, 710, 784, 807, 841, 868, 871, 872, 886], "exclud": [1, 5, 7, 8, 9, 11, 13, 14, 15, 16, 24, 26, 28, 31, 34, 35, 40, 41, 43, 45, 49, 50, 51, 58, 59, 64, 68, 69, 70, 71, 74, 78, 83, 86, 88, 92, 96, 97, 100, 104, 107, 108, 109, 110, 111, 112, 133, 143, 145, 151, 157, 158, 159, 167, 170, 173, 177, 178, 182, 183, 184, 185, 186, 192, 197, 200, 201, 202, 204, 206, 207, 209, 220, 225, 230, 231, 232, 236, 238, 243, 258, 263, 264, 265, 266, 267, 268, 269, 273, 274, 276, 277, 279, 280, 281, 282, 307, 308, 321, 328, 361, 367, 371, 373, 421, 432, 481, 482, 489, 496, 498, 500, 504, 526, 553, 554, 555, 557, 559, 560, 561, 562, 563, 574, 575, 576, 577, 583, 594, 609, 621, 626, 647, 651, 655, 693, 694, 696, 697, 706, 708, 709, 710, 714, 715, 716, 717, 723, 779, 788, 790, 791, 792, 798, 800, 801, 808, 861, 871, 872, 886], "bad": [1, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 49, 51, 58, 59, 64, 68, 69, 70, 71, 72, 73, 74, 76, 77, 80, 81, 82, 83, 85, 88, 90, 92, 93, 96, 97, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 127, 128, 136, 137, 138, 141, 142, 143, 145, 146, 147, 150, 151, 152, 153, 163, 166, 167, 168, 169, 170, 171, 173, 177, 178, 181, 182, 183, 184, 185, 186, 192, 197, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 230, 231, 232, 233, 242, 243, 258, 260, 261, 263, 266, 267, 268, 269, 271, 300, 312, 315, 316, 321, 328, 331, 361, 365, 371, 372, 373, 415, 429, 434, 442, 451, 452, 454, 470, 481, 482, 500, 522, 540, 554, 555, 556, 559, 560, 561, 562, 564, 565, 566, 569, 574, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 594, 595, 600, 602, 609, 621, 624, 647, 648, 651, 674, 692, 706, 708, 709, 710, 714, 715, 716, 717, 719, 737, 778, 779, 784, 785, 788, 790, 791, 792, 799, 803, 807, 808, 826, 841, 852, 863, 865, 871, 886], "epoch": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 27, 32, 33, 34, 36, 45, 46, 49, 56, 59, 61, 69, 70, 71, 72, 73, 78, 80, 83, 84, 88, 90, 92, 93, 95, 96, 97, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 121, 122, 128, 130, 132, 136, 137, 142, 149, 151, 163, 168, 169, 170, 171, 178, 180, 181, 182, 183, 184, 185, 186, 189, 192, 196, 197, 200, 201, 204, 207, 208, 211, 213, 214, 218, 219, 224, 225, 229, 230, 231, 232, 241, 242, 243, 253, 258, 259, 260, 261, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 277, 280, 281, 282, 283, 293, 294, 297, 315, 316, 319, 355, 356, 357, 359, 360, 361, 363, 397, 413, 415, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 438, 439, 442, 443, 454, 472, 478, 481, 482, 487, 500, 516, 521, 522, 527, 528, 529, 530, 531, 532, 533, 535, 536, 543, 545, 546, 557, 559, 561, 562, 563, 564, 570, 571, 574, 575, 579, 580, 581, 582, 586, 593, 594, 609, 617, 618, 619, 620, 621, 628, 632, 648, 651, 660, 670, 691, 692, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 724, 733, 734, 735, 736, 737, 738, 754, 778, 783, 784, 785, 786, 797, 798, 799, 801, 805, 807, 808, 815, 841, 845, 862, 863, 865, 871, 872, 874, 876, 886], "baselin": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 69, 71, 72, 73, 74, 75, 78, 80, 83, 84, 86, 87, 88, 90, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 124, 127, 128, 132, 136, 137, 138, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 161, 163, 166, 167, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 197, 200, 201, 202, 204, 205, 206, 208, 212, 213, 214, 223, 225, 229, 230, 231, 232, 233, 236, 238, 242, 243, 246, 258, 261, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 355, 356, 361, 382, 454, 481, 482, 522, 527, 545, 546, 562, 579, 580, 601, 617, 624, 625, 691, 706, 709, 778, 794, 798, 811, 814, 832, 841, 861, 865, 868, 871, 876, 880, 886], "nonepreload": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 34, 42, 49, 67, 70, 71, 72, 73, 81, 82, 83, 84, 88, 99, 103, 107, 110, 112, 113, 114, 117, 121, 129, 133, 141, 142, 143, 145, 146, 147, 150, 152, 153, 160, 167, 168, 171, 173, 181, 183, 184, 185, 186, 189, 192, 197, 200, 202, 205, 206, 207, 208, 212, 214, 217, 224, 225, 230, 231, 232, 233, 236, 238, 241, 242, 243, 258, 266, 267, 268, 269, 276, 349, 365, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 522, 574, 575, 579, 580, 617, 619, 623, 648, 651, 706, 708, 709, 710, 784, 807, 861, 862, 886], "physiolog": [1, 8, 42, 138, 193, 204, 206, 209, 246, 266, 267, 268, 269, 382, 405, 406, 481, 482, 651, 862, 886], "artifact": [1, 7, 27, 32, 42, 70, 77, 83, 84, 85, 109, 110, 143, 145, 147, 150, 166, 167, 173, 184, 192, 193, 202, 203, 207, 209, 211, 212, 214, 215, 216, 219, 220, 246, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 276, 277, 280, 281, 282, 346, 347, 357, 358, 359, 360, 361, 365, 415, 419, 426, 454, 479, 481, 482, 494, 496, 510, 553, 556, 559, 561, 562, 566, 567, 569, 574, 575, 577, 579, 580, 584, 585, 586, 588, 594, 597, 601, 606, 609, 658, 659, 706, 709, 710, 731, 733, 734, 736, 737, 770, 796, 798, 805, 806, 807, 822, 826, 862, 865, 868, 874, 875, 886], "eyeblink": [1, 214, 575, 580], "heartbeat": [1, 83, 143, 147, 202, 206, 207, 208, 209, 211, 219, 574, 579, 584, 587], "us": [1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 36, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 61, 62, 66, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 95, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 133, 134, 135, 136, 137, 139, 141, 142, 143, 145, 146, 151, 152, 153, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 200, 201, 202, 203, 204, 205, 207, 208, 210, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 226, 228, 229, 230, 231, 233, 236, 237, 238, 241, 242, 243, 246, 259, 261, 282, 284, 286, 287, 288, 291, 293, 297, 298, 305, 306, 307, 308, 309, 310, 311, 319, 321, 322, 331, 341, 342, 348, 364, 371, 372, 374, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 415, 418, 424, 426, 438, 440, 441, 443, 444, 445, 446, 451, 452, 457, 458, 463, 464, 468, 469, 471, 473, 474, 475, 480, 483, 485, 490, 495, 505, 507, 513, 514, 533, 537, 542, 547, 548, 555, 564, 568, 572, 573, 587, 588, 592, 595, 603, 607, 608, 609, 619, 620, 622, 625, 630, 631, 640, 642, 643, 646, 649, 652, 653, 657, 669, 676, 677, 679, 680, 681, 682, 683, 688, 703, 711, 712, 713, 718, 720, 721, 724, 728, 729, 731, 732, 734, 735, 739, 740, 741, 751, 752, 756, 762, 764, 766, 769, 780, 783, 784, 786, 788, 789, 791, 793, 797, 798, 799, 800, 801, 804, 807, 808, 809, 810, 814, 815, 818, 820, 823, 825, 828, 829, 830, 831, 832, 833, 835, 836, 837, 838, 840, 841, 844, 846, 847, 848, 849, 850, 851, 852, 853, 856, 857, 859, 860, 862, 863, 867, 869, 872, 874, 875, 876, 886], "ssp": [1, 11, 15, 18, 27, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 68, 69, 71, 73, 84, 88, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 121, 122, 130, 132, 141, 142, 143, 146, 147, 150, 152, 153, 163, 166, 167, 173, 177, 178, 179, 180, 181, 182, 183, 184, 192, 200, 201, 202, 204, 205, 206, 209, 211, 215, 216, 217, 220, 224, 233, 236, 238, 261, 263, 266, 267, 268, 269, 270, 271, 275, 276, 277, 357, 358, 359, 454, 481, 482, 522, 556, 559, 561, 574, 575, 579, 580, 584, 609, 617, 626, 632, 647, 708, 710, 786, 788, 790, 792, 793, 805, 806, 808, 826, 841, 865, 871, 874, 875, 886], "add_proj": [1, 2, 4, 5, 42, 92, 101, 109, 111, 141, 143, 147, 150, 163, 173, 185, 186, 192, 197, 200, 205, 207, 208, 212, 213, 217, 229, 266, 267, 268, 269, 276, 481, 482, 576, 670], "compute_proj_evok": [1, 207, 357, 359, 876], "copi": [1, 2, 4, 5, 8, 9, 10, 12, 18, 19, 22, 27, 38, 45, 46, 47, 48, 49, 54, 58, 61, 67, 70, 73, 74, 78, 84, 107, 109, 114, 119, 127, 135, 137, 141, 142, 145, 150, 151, 152, 156, 162, 163, 167, 169, 170, 173, 177, 179, 186, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 217, 219, 225, 229, 232, 258, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 281, 282, 283, 289, 290, 304, 309, 311, 314, 319, 366, 372, 374, 379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 422, 435, 438, 451, 452, 481, 482, 528, 542, 554, 555, 558, 561, 562, 571, 574, 575, 581, 586, 590, 595, 609, 618, 645, 648, 651, 703, 706, 707, 708, 709, 710, 712, 714, 715, 716, 717, 718, 723, 740, 741, 845, 853, 863, 865, 868, 871, 872, 886], "apply_proj": [1, 71, 94, 143, 147, 150, 160, 168, 183, 207, 208, 209, 213, 266, 267, 268, 269, 443, 444, 445, 446, 481, 482, 576, 651, 807, 886], "fix": [1, 5, 22, 31, 40, 41, 45, 47, 48, 49, 54, 55, 58, 60, 80, 90, 100, 135, 141, 143, 159, 164, 165, 166, 169, 171, 177, 181, 197, 212, 213, 224, 246, 259, 264, 265, 268, 269, 270, 277, 299, 300, 310, 322, 356, 363, 366, 426, 454, 456, 458, 472, 476, 478, 479, 481, 519, 523, 525, 529, 530, 531, 532, 533, 540, 541, 544, 545, 546, 562, 566, 570, 592, 614, 626, 637, 647, 712, 715, 722, 732, 733, 734, 736, 737, 770, 789, 833, 834, 839, 843, 845, 850, 864, 865, 868, 871, 886], "preprocess": [1, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 68, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 83, 84, 88, 99, 112, 135, 138, 145, 147, 173, 185, 189, 192, 193, 196, 197, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 216, 220, 260, 266, 267, 268, 269, 271, 276, 355, 413, 417, 420, 422, 434, 442, 454, 481, 482, 501, 503, 510, 556, 559, 619, 710, 754, 774, 778, 784, 787, 792, 796, 797, 798, 799, 800, 801, 807, 841, 852, 862, 863, 865, 868, 872, 874, 876, 886], "fix_stim_artifact": [1, 876, 886], "correct": [1, 8, 9, 11, 12, 16, 18, 21, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 69, 71, 72, 73, 74, 77, 78, 80, 83, 85, 86, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 127, 128, 131, 132, 136, 137, 138, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 157, 160, 161, 162, 163, 166, 167, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 214, 223, 224, 225, 229, 230, 231, 232, 233, 236, 237, 238, 242, 243, 246, 258, 260, 261, 263, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 280, 281, 282, 289, 311, 322, 355, 356, 361, 367, 413, 419, 420, 425, 432, 434, 452, 454, 463, 481, 482, 487, 489, 493, 496, 510, 511, 527, 530, 545, 546, 559, 561, 562, 563, 572, 573, 576, 579, 580, 583, 594, 597, 601, 608, 614, 621, 624, 625, 643, 645, 661, 662, 663, 664, 665, 666, 667, 668, 684, 687, 690, 691, 692, 693, 694, 695, 706, 708, 709, 710, 718, 725, 778, 785, 786, 792, 793, 797, 798, 806, 808, 809, 811, 814, 832, 834, 841, 843, 845, 850, 861, 864, 865, 868, 880, 883, 886], "delai": [1, 4, 19, 192, 196, 207, 208, 212, 246, 259, 261, 266, 267, 268, 269, 419, 425, 430, 448, 449, 451, 452, 481, 482, 522, 617, 795, 862, 886], "due": [1, 5, 40, 43, 47, 81, 135, 169, 190, 191, 200, 202, 203, 207, 211, 212, 213, 217, 220, 224, 243, 262, 266, 267, 268, 269, 270, 272, 405, 412, 419, 430, 434, 447, 478, 479, 481, 482, 572, 573, 583, 590, 594, 608, 628, 634, 709, 754, 835, 841, 861, 865, 868, 886], "hardwar": [1, 167, 191, 202, 209, 259, 266, 267, 271, 377, 405, 481, 482, 562, 784, 801, 807, 841, 851, 868, 871, 886], "i": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 21, 22, 26, 27, 28, 31, 32, 34, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 54, 59, 60, 63, 65, 67, 69, 70, 71, 72, 73, 74, 75, 78, 79, 81, 82, 83, 87, 88, 90, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 123, 126, 127, 128, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 170, 172, 173, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 232, 233, 236, 237, 238, 241, 242, 243, 246, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 298, 299, 300, 302, 304, 306, 308, 309, 310, 314, 316, 319, 320, 322, 324, 325, 326, 327, 329, 331, 332, 333, 339, 341, 343, 344, 345, 349, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 469, 470, 471, 472, 473, 476, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 519, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 548, 549, 551, 552, 553, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 598, 599, 601, 602, 603, 608, 609, 611, 612, 614, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 631, 634, 637, 640, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 676, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 722, 724, 725, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 744, 748, 749, 750, 752, 753, 754, 755, 757, 759, 762, 763, 764, 766, 767, 770, 771, 772, 775, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 831, 832, 834, 836, 839, 841, 844, 845, 846, 848, 850, 853, 856, 857, 859, 861, 862, 863, 864, 866, 867, 869, 870, 871, 872, 873, 874, 876, 886], "4": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 76, 78, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 127, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 165, 167, 169, 170, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 193, 195, 196, 197, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 240, 241, 242, 243, 246, 258, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 280, 281, 282, 299, 300, 307, 308, 314, 315, 316, 326, 337, 340, 356, 382, 391, 413, 419, 420, 421, 426, 432, 436, 437, 448, 454, 456, 471, 478, 479, 481, 482, 519, 529, 536, 561, 562, 567, 569, 571, 574, 576, 577, 585, 591, 593, 603, 609, 628, 647, 651, 655, 659, 666, 686, 687, 690, 694, 706, 708, 709, 710, 722, 725, 729, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 744, 754, 757, 769, 770, 771, 773, 778, 784, 785, 786, 788, 790, 793, 794, 797, 804, 806, 807, 808, 809, 810, 812, 814, 816, 817, 818, 841, 843, 844, 850, 851, 861, 862, 865, 868, 871], "m": [1, 2, 4, 5, 8, 16, 18, 19, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 41, 44, 45, 46, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 69, 71, 72, 73, 78, 86, 87, 96, 97, 98, 99, 100, 101, 103, 105, 109, 110, 113, 114, 116, 119, 120, 123, 126, 127, 135, 136, 138, 141, 142, 144, 145, 146, 150, 151, 152, 157, 158, 159, 160, 162, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 201, 202, 203, 206, 208, 210, 211, 213, 218, 219, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 246, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 277, 280, 281, 282, 302, 306, 307, 327, 332, 337, 339, 341, 343, 345, 346, 347, 349, 356, 361, 367, 375, 382, 390, 405, 406, 413, 415, 417, 419, 420, 421, 424, 434, 437, 449, 451, 452, 456, 474, 475, 478, 479, 481, 482, 484, 497, 518, 526, 529, 537, 540, 544, 561, 562, 564, 570, 571, 573, 576, 577, 579, 580, 582, 583, 592, 594, 599, 602, 618, 655, 659, 663, 666, 668, 671, 676, 677, 678, 680, 681, 687, 692, 693, 694, 696, 697, 701, 706, 708, 709, 710, 722, 732, 735, 738, 754, 757, 771, 778, 786, 788, 789, 790, 793, 794, 797, 806, 807, 809, 812, 814, 816, 817, 818, 822, 824, 841, 845, 852, 860, 862, 868, 871, 872, 886], "shift_tim": [1, 86, 141, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709, 886], "004": [1, 10, 32, 33, 44, 121, 128, 141, 142, 143, 146, 149, 150, 167, 170, 177, 205, 225, 246, 278, 362, 526, 754], "result": [1, 8, 9, 26, 29, 30, 45, 46, 55, 58, 60, 70, 80, 83, 90, 99, 101, 103, 107, 114, 126, 127, 134, 135, 137, 138, 145, 147, 150, 152, 156, 157, 158, 160, 161, 163, 167, 168, 171, 173, 177, 179, 189, 196, 197, 200, 203, 205, 206, 207, 208, 210, 217, 218, 220, 223, 225, 228, 229, 232, 233, 236, 237, 238, 246, 258, 260, 261, 266, 267, 268, 269, 271, 273, 274, 277, 278, 280, 281, 282, 291, 293, 300, 316, 319, 320, 355, 356, 361, 363, 365, 390, 392, 412, 414, 415, 429, 438, 447, 453, 471, 476, 478, 479, 481, 482, 498, 515, 522, 526, 529, 531, 532, 533, 535, 540, 541, 548, 562, 567, 573, 579, 580, 583, 592, 594, 611, 617, 625, 648, 658, 659, 660, 669, 670, 672, 691, 692, 693, 694, 695, 696, 697, 698, 706, 708, 709, 710, 754, 762, 778, 784, 785, 807, 845, 850, 861, 862, 865, 868, 871, 886], "time_unit": [1, 11, 14, 35, 40, 42, 43, 51, 59, 61, 69, 71, 86, 92, 93, 99, 100, 101, 121, 151, 152, 153, 163, 176, 178, 179, 184, 185, 186, 192, 197, 224, 229, 230, 231, 265, 268, 269, 273, 274, 277, 280, 281, 282, 778, 788, 790, 793, 794, 812, 817, 886], "": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 55, 58, 59, 61, 63, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 115, 116, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 246, 257, 258, 260, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 290, 292, 299, 300, 304, 305, 306, 323, 326, 330, 355, 356, 359, 360, 362, 368, 369, 387, 388, 390, 405, 406, 413, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 434, 437, 443, 444, 445, 446, 447, 449, 451, 452, 453, 472, 475, 478, 479, 481, 482, 486, 489, 496, 498, 504, 505, 513, 517, 521, 524, 526, 528, 529, 540, 544, 545, 546, 561, 562, 563, 564, 573, 580, 581, 585, 586, 593, 594, 598, 601, 624, 625, 634, 636, 637, 638, 639, 643, 644, 646, 648, 651, 652, 655, 656, 663, 666, 668, 683, 692, 693, 694, 695, 696, 697, 701, 702, 704, 706, 707, 708, 709, 710, 718, 722, 724, 725, 730, 732, 734, 735, 737, 738, 741, 746, 753, 754, 762, 763, 771, 772, 778, 780, 782, 784, 785, 788, 790, 791, 793, 794, 795, 797, 801, 807, 809, 810, 812, 814, 815, 816, 817, 818, 822, 835, 836, 841, 843, 845, 849, 851, 857, 860, 861, 862, 863, 865, 867, 868, 870, 871, 872, 873, 874], "topomap": [1, 19, 42, 73, 83, 87, 119, 143, 152, 171, 205, 208, 233, 242, 263, 266, 267, 268, 269, 275, 276, 314, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 771, 784, 786, 788, 791, 793, 797, 804, 805, 806, 807, 808, 809, 810, 814, 816, 841, 886], "plot_topomap": [1, 15, 16, 18, 19, 21, 42, 70, 71, 80, 87, 100, 109, 142, 143, 145, 151, 152, 167, 171, 177, 178, 192, 200, 208, 212, 220, 233, 241, 242, 243, 263, 266, 267, 268, 269, 275, 481, 482, 562, 706, 708, 710, 774, 786, 791, 799, 876, 886], "time": [1, 2, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 63, 64, 65, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 90, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 142, 144, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 191, 192, 193, 196, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 218, 219, 220, 223, 224, 225, 228, 229, 232, 236, 237, 238, 241, 246, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 298, 299, 343, 344, 345, 346, 347, 348, 349, 350, 352, 355, 356, 359, 361, 362, 363, 365, 375, 405, 413, 414, 415, 416, 419, 420, 422, 423, 424, 425, 426, 427, 429, 436, 437, 439, 441, 442, 447, 449, 451, 452, 454, 455, 456, 466, 471, 476, 477, 478, 479, 480, 481, 482, 494, 496, 500, 502, 510, 515, 517, 523, 524, 528, 529, 530, 532, 533, 535, 536, 537, 540, 541, 543, 545, 546, 553, 557, 559, 561, 562, 564, 565, 566, 567, 570, 571, 572, 574, 575, 577, 579, 580, 581, 583, 585, 586, 592, 602, 608, 611, 615, 616, 620, 621, 624, 625, 626, 628, 634, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 680, 681, 682, 686, 691, 692, 693, 694, 695, 696, 697, 698, 699, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 722, 725, 731, 732, 733, 734, 735, 736, 737, 738, 753, 754, 758, 768, 771, 777, 778, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 801, 805, 806, 807, 808, 809, 812, 813, 814, 815, 816, 817, 818, 831, 841, 843, 844, 849, 851, 852, 857, 861, 862, 863, 865, 867, 868, 871, 872, 876, 886], "arraidirectori": [1, 12, 21, 33, 34, 81, 82, 94, 95, 116, 119, 123, 156, 157, 162, 167, 172, 173, 185, 192, 258, 264, 271, 272, 273, 276, 277, 280, 281, 282, 305, 309, 310, 311, 314, 362, 367, 368, 369, 374, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 432, 463, 465, 469, 471, 472, 473, 474, 475, 488, 494, 508, 511, 515, 519, 521, 548, 590, 611, 625, 629, 631, 638, 644, 645, 646, 649, 654, 655, 669, 672, 683, 701, 702, 746, 754, 770, 772, 782, 812, 818, 836, 845, 848, 851, 861, 865, 886], "home": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 135, 136, 138, 141, 142, 144, 145, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 167, 168, 169, 170, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 193, 197, 200, 204, 205, 206, 207, 208, 210, 211, 212, 214, 217, 220, 224, 225, 229, 230, 231, 232, 233, 236, 238, 242, 266, 267, 374, 382, 481, 482, 784, 807, 844, 850, 886], "circleci": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 135, 136, 138, 141, 142, 144, 145, 147, 150, 151, 152, 153, 157, 158, 159, 160, 163, 167, 168, 169, 170, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 193, 197, 200, 204, 205, 206, 207, 208, 210, 211, 212, 214, 217, 220, 224, 225, 229, 230, 231, 232, 233, 236, 238, 242, 845], "mne_data": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 135, 136, 138, 142, 144, 145, 147, 150, 151, 152, 153, 157, 158, 159, 160, 163, 167, 168, 169, 170, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 193, 197, 200, 204, 205, 206, 207, 208, 210, 211, 212, 214, 217, 220, 224, 225, 229, 230, 231, 232, 233, 236, 238, 242, 379, 380, 381, 382, 384, 385, 386, 388, 389, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 845, 865, 886], "data": [1, 2, 3, 6, 9, 10, 12, 14, 16, 17, 20, 22, 24, 26, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 72, 74, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 91, 98, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 117, 118, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 139, 140, 144, 145, 146, 149, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 171, 172, 174, 175, 177, 180, 182, 183, 184, 185, 186, 187, 188, 195, 197, 198, 199, 200, 201, 203, 206, 207, 208, 209, 210, 211, 215, 216, 222, 226, 227, 228, 230, 231, 235, 239, 240, 242, 244, 245, 246, 253, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 312, 313, 314, 315, 316, 318, 320, 322, 326, 328, 329, 330, 331, 337, 339, 340, 341, 343, 345, 347, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 371, 372, 373, 375, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 436, 437, 439, 440, 441, 442, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 465, 470, 472, 476, 478, 479, 480, 481, 482, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 518, 519, 520, 521, 522, 523, 524, 525, 528, 529, 530, 531, 532, 535, 536, 537, 540, 543, 544, 545, 546, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 588, 590, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 609, 612, 613, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 632, 634, 636, 638, 639, 648, 651, 654, 655, 656, 657, 658, 659, 660, 662, 664, 665, 666, 670, 672, 674, 678, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 724, 725, 733, 734, 735, 736, 737, 738, 742, 748, 749, 754, 758, 762, 767, 769, 770, 771, 772, 773, 775, 776, 778, 779, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 805, 806, 807, 808, 809, 811, 812, 813, 814, 815, 816, 817, 818, 819, 821, 822, 824, 826, 832, 839, 840, 841, 842, 845, 846, 852, 857, 860, 863, 866, 867, 872, 873, 874, 876, 881, 886], "res4": [1, 12, 21, 81, 82, 119, 123, 185, 192], "read": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 141, 142, 143, 144, 145, 147, 150, 152, 153, 157, 158, 159, 160, 161, 162, 163, 167, 168, 170, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 220, 223, 224, 225, 229, 230, 231, 232, 237, 242, 258, 259, 260, 261, 263, 266, 267, 268, 269, 271, 277, 279, 299, 300, 303, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 353, 356, 360, 361, 371, 372, 373, 375, 413, 420, 421, 445, 454, 455, 456, 457, 461, 463, 466, 472, 476, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 493, 494, 495, 496, 497, 498, 501, 502, 504, 506, 507, 508, 512, 513, 528, 540, 542, 543, 551, 564, 586, 604, 605, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 639, 640, 641, 643, 644, 646, 653, 659, 707, 726, 728, 746, 762, 770, 794, 822, 832, 833, 841, 845, 848, 853, 861, 863, 868, 869, 872, 874, 876, 886], "hc": [1, 12, 21, 81, 82, 119, 123, 185, 192], "separ": [1, 10, 12, 16, 21, 32, 33, 45, 47, 70, 74, 81, 82, 83, 94, 119, 123, 136, 141, 142, 143, 146, 147, 150, 151, 152, 156, 157, 161, 162, 163, 166, 169, 176, 185, 190, 192, 193, 197, 200, 203, 205, 206, 207, 208, 210, 215, 216, 217, 218, 219, 236, 238, 241, 246, 248, 258, 260, 261, 266, 267, 268, 269, 271, 275, 276, 299, 300, 326, 347, 349, 350, 353, 357, 358, 359, 364, 373, 388, 395, 413, 420, 434, 446, 476, 481, 482, 497, 500, 505, 521, 523, 562, 572, 573, 574, 575, 579, 583, 592, 594, 608, 618, 625, 655, 661, 662, 663, 664, 665, 666, 667, 668, 693, 694, 696, 697, 708, 709, 710, 711, 712, 713, 736, 737, 744, 754, 759, 777, 778, 784, 785, 786, 793, 794, 796, 801, 806, 807, 808, 841, 843, 845, 849, 861, 862, 863, 865, 868, 871, 874, 886], "posit": [1, 4, 12, 19, 21, 24, 27, 38, 39, 41, 45, 70, 75, 78, 79, 80, 82, 83, 90, 93, 94, 95, 101, 112, 119, 122, 123, 127, 130, 135, 136, 137, 151, 152, 157, 159, 160, 161, 171, 176, 177, 179, 184, 185, 186, 189, 191, 192, 200, 201, 205, 207, 211, 213, 214, 225, 228, 232, 236, 243, 246, 258, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 292, 306, 308, 314, 315, 316, 327, 330, 332, 334, 337, 340, 344, 346, 347, 352, 353, 354, 356, 368, 383, 392, 413, 416, 419, 420, 423, 425, 432, 433, 434, 441, 455, 456, 465, 472, 481, 482, 494, 497, 502, 505, 506, 512, 524, 559, 561, 562, 566, 567, 569, 577, 583, 585, 592, 594, 616, 618, 655, 657, 658, 659, 663, 664, 665, 666, 667, 668, 669, 671, 674, 675, 690, 706, 708, 709, 710, 721, 729, 730, 754, 755, 759, 767, 770, 771, 773, 778, 784, 785, 786, 789, 791, 792, 793, 796, 797, 803, 806, 807, 809, 810, 812, 814, 815, 816, 818, 822, 824, 841, 845, 861, 862, 868, 871, 875, 886], "file": [1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 49, 56, 59, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 84, 85, 88, 91, 92, 93, 94, 96, 97, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 123, 127, 128, 129, 130, 132, 133, 135, 136, 138, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 172, 175, 178, 181, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 195, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 220, 222, 224, 225, 227, 230, 231, 232, 233, 235, 236, 238, 240, 242, 245, 253, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 290, 303, 305, 306, 309, 310, 311, 314, 315, 320, 322, 323, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 346, 359, 364, 365, 367, 368, 369, 374, 382, 387, 388, 389, 390, 396, 405, 406, 432, 434, 442, 443, 444, 445, 446, 454, 455, 461, 462, 463, 465, 466, 470, 472, 473, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 521, 522, 524, 525, 535, 542, 543, 547, 551, 552, 561, 562, 572, 573, 574, 575, 583, 590, 594, 604, 605, 606, 607, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 649, 650, 652, 655, 657, 658, 659, 671, 674, 683, 701, 704, 705, 706, 707, 708, 709, 710, 726, 727, 728, 739, 741, 743, 748, 754, 762, 770, 772, 807, 818, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 844, 845, 850, 851, 852, 857, 862, 872, 876, 886], "present": [1, 4, 10, 12, 13, 16, 21, 31, 40, 43, 44, 69, 82, 116, 119, 123, 126, 134, 141, 143, 145, 150, 151, 159, 167, 169, 170, 171, 181, 189, 190, 192, 193, 200, 201, 205, 207, 208, 209, 211, 214, 218, 220, 228, 232, 236, 237, 238, 246, 258, 259, 261, 263, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 285, 286, 287, 290, 299, 300, 304, 309, 314, 320, 322, 326, 331, 336, 345, 349, 356, 360, 361, 362, 370, 371, 372, 373, 394, 413, 420, 432, 434, 437, 442, 454, 455, 456, 457, 461, 476, 478, 479, 481, 482, 489, 492, 496, 504, 521, 528, 540, 559, 561, 562, 564, 565, 572, 573, 577, 579, 584, 594, 602, 621, 622, 670, 675, 691, 706, 708, 709, 710, 724, 741, 754, 770, 771, 777, 778, 784, 786, 788, 790, 793, 794, 797, 804, 806, 807, 808, 809, 810, 813, 814, 816, 841, 851, 861, 862, 868, 871, 886], "quaternion": [1, 12, 21, 81, 82, 119, 123, 185, 192, 352, 353, 354, 566, 569, 745, 747, 796, 886], "match": [1, 8, 9, 11, 12, 17, 18, 20, 21, 27, 28, 31, 32, 33, 34, 40, 41, 45, 46, 47, 49, 51, 58, 59, 61, 69, 71, 72, 73, 74, 80, 81, 82, 83, 88, 90, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 117, 119, 121, 123, 128, 132, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 152, 153, 158, 162, 163, 167, 170, 173, 178, 181, 183, 184, 185, 186, 192, 196, 200, 201, 202, 204, 205, 208, 212, 214, 217, 218, 219, 223, 224, 225, 229, 230, 231, 232, 233, 236, 238, 242, 259, 261, 263, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 280, 281, 282, 319, 331, 356, 360, 367, 371, 372, 413, 414, 419, 420, 421, 423, 429, 434, 437, 438, 440, 442, 444, 445, 447, 463, 480, 481, 482, 489, 496, 504, 548, 551, 554, 559, 561, 562, 571, 572, 577, 583, 595, 608, 618, 620, 621, 641, 644, 656, 671, 692, 697, 701, 706, 707, 708, 709, 710, 722, 723, 732, 744, 778, 784, 785, 786, 790, 793, 794, 797, 800, 806, 807, 808, 809, 832, 845, 849, 868, 886], "desir": [1, 5, 11, 12, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 68, 70, 81, 82, 90, 92, 93, 94, 95, 101, 104, 107, 108, 110, 112, 119, 123, 124, 127, 131, 143, 147, 152, 158, 162, 167, 169, 171, 173, 178, 179, 180, 181, 182, 185, 189, 190, 192, 196, 197, 201, 202, 203, 204, 207, 218, 224, 225, 236, 238, 259, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 362, 412, 437, 448, 481, 482, 523, 540, 561, 586, 603, 651, 706, 708, 709, 710, 740, 754, 817, 851, 861, 863, 865, 871, 886], "v": [1, 4, 8, 9, 12, 13, 21, 24, 27, 28, 32, 43, 54, 55, 63, 65, 70, 75, 81, 82, 105, 106, 119, 123, 127, 132, 138, 142, 172, 173, 179, 185, 192, 196, 200, 203, 207, 229, 232, 233, 238, 241, 246, 258, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 277, 280, 281, 282, 285, 289, 290, 300, 304, 322, 346, 361, 375, 382, 419, 420, 421, 434, 481, 482, 528, 537, 562, 570, 573, 579, 580, 583, 594, 601, 692, 706, 708, 709, 710, 718, 724, 733, 736, 737, 738, 741, 758, 841, 845, 849, 861, 868, 871, 886], "transform": [1, 5, 7, 8, 11, 12, 14, 16, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 68, 74, 77, 79, 81, 82, 83, 85, 88, 90, 92, 93, 94, 95, 103, 104, 107, 108, 109, 110, 112, 113, 115, 119, 123, 124, 125, 127, 131, 135, 136, 146, 151, 156, 158, 159, 160, 167, 168, 170, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 192, 206, 209, 217, 224, 225, 241, 243, 246, 258, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 306, 314, 317, 318, 328, 356, 362, 363, 365, 367, 368, 369, 375, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 431, 432, 434, 454, 456, 464, 472, 473, 474, 475, 481, 482, 488, 512, 521, 524, 525, 535, 536, 545, 546, 562, 563, 566, 569, 571, 573, 583, 590, 594, 595, 626, 630, 638, 639, 646, 651, 671, 674, 691, 701, 703, 708, 710, 712, 715, 721, 722, 725, 729, 730, 731, 732, 733, 734, 735, 738, 740, 754, 770, 771, 818, 824, 832, 833, 840, 841, 852, 861, 862, 865, 875, 876, 886], "84": [1, 11, 19, 34, 35, 41, 47, 58, 79, 81, 108, 109, 112, 114, 119, 129, 135, 137, 152, 170, 196, 197, 201, 210, 228, 229, 230, 232, 233, 236, 237, 238, 246, 490, 598], "69": [1, 13, 15, 19, 35, 40, 47, 49, 79, 81, 82, 103, 108, 112, 114, 119, 138, 141, 144, 170, 172, 177, 181, 185, 186, 192, 197, 205, 210, 228, 229, 230, 231, 232, 233, 236, 237, 238, 246, 266, 267, 299, 405], "49": [1, 5, 13, 19, 28, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 78, 81, 86, 87, 103, 108, 113, 114, 116, 119, 120, 123, 127, 135, 140, 150, 170, 173, 177, 179, 180, 182, 185, 186, 192, 196, 197, 199, 210, 211, 212, 219, 225, 228, 229, 230, 231, 232, 233, 237, 238, 246, 752, 844, 886], "00": [1, 2, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 33, 34, 41, 42, 44, 45, 46, 50, 56, 59, 66, 70, 71, 72, 73, 76, 81, 82, 83, 84, 85, 88, 90, 91, 93, 96, 99, 101, 102, 103, 104, 106, 108, 109, 112, 113, 114, 115, 119, 121, 123, 127, 130, 133, 137, 140, 142, 144, 145, 147, 149, 152, 155, 157, 158, 159, 160, 161, 165, 168, 169, 170, 173, 175, 177, 181, 182, 183, 184, 185, 186, 188, 192, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 225, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 245, 246, 529, 561, 570], "mm": [1, 4, 5, 12, 21, 24, 26, 41, 44, 45, 50, 70, 71, 73, 76, 78, 80, 81, 82, 83, 90, 93, 94, 95, 109, 119, 123, 127, 135, 137, 142, 147, 152, 157, 158, 159, 160, 161, 162, 168, 169, 177, 179, 181, 182, 183, 184, 185, 186, 192, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 224, 225, 258, 264, 271, 273, 274, 277, 280, 281, 282, 307, 337, 339, 341, 362, 367, 432, 456, 465, 471, 474, 475, 493, 497, 515, 525, 582, 618, 654, 655, 744, 746, 753, 754, 812, 817, 822, 861, 868, 886], "orig": [1, 12, 21, 81, 82, 119, 123, 161, 185, 192, 201, 542, 554, 555, 560], "44": [1, 13, 19, 28, 35, 41, 45, 46, 47, 81, 103, 104, 108, 112, 113, 114, 116, 119, 159, 169, 170, 177, 181, 182, 184, 185, 188, 197, 203, 210, 211, 228, 229, 230, 232, 233, 236, 237, 238, 246, 299, 300, 434, 476, 693, 694, 696, 697, 886], "30": [1, 5, 7, 8, 9, 11, 12, 13, 14, 19, 24, 25, 26, 28, 33, 34, 35, 41, 42, 45, 46, 47, 50, 58, 70, 73, 74, 76, 79, 81, 82, 83, 90, 92, 94, 96, 97, 101, 103, 107, 108, 109, 113, 114, 115, 119, 123, 127, 135, 137, 145, 147, 152, 155, 157, 159, 160, 161, 165, 167, 170, 172, 173, 176, 184, 185, 196, 197, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 217, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 243, 246, 258, 266, 267, 268, 269, 277, 279, 305, 309, 337, 356, 481, 482, 513, 561, 565, 570, 583, 659, 670, 671, 708, 710, 722, 732, 733, 735, 736, 738, 758, 762, 786, 843, 861, 862, 868, 871, 886], "51": [1, 5, 8, 13, 19, 28, 34, 35, 41, 45, 47, 56, 70, 71, 80, 81, 82, 103, 108, 109, 112, 114, 119, 127, 138, 153, 157, 159, 170, 173, 185, 186, 192, 196, 197, 202, 206, 209, 210, 211, 217, 228, 229, 230, 232, 233, 237, 238, 240, 246, 276, 382, 594, 862, 886], "45": [1, 5, 8, 9, 11, 13, 15, 16, 19, 28, 35, 45, 50, 81, 84, 103, 108, 109, 112, 113, 114, 119, 121, 123, 142, 144, 145, 146, 150, 157, 158, 159, 165, 169, 170, 177, 178, 181, 182, 188, 192, 196, 197, 203, 205, 206, 208, 209, 210, 211, 213, 214, 219, 228, 229, 230, 232, 233, 236, 237, 238, 243, 260, 266, 267, 268, 269, 299, 300, 337, 356, 360, 361, 371, 372, 373, 413, 420, 448, 456, 457, 476, 478, 479, 481, 482, 540, 562, 687, 708, 710, 758, 786, 794, 868, 886], "252": [1, 35, 112, 119, 123, 170, 197, 210, 228, 232], "43": [1, 19, 26, 28, 34, 35, 41, 45, 46, 47, 48, 50, 54, 55, 81, 82, 91, 94, 103, 107, 108, 112, 114, 119, 123, 146, 151, 155, 158, 159, 170, 177, 179, 182, 183, 188, 196, 197, 210, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 246, 266, 267, 337, 708, 709], "diff": [1, 9, 12, 21, 70, 81, 82, 119, 123, 134, 177, 184, 185, 192, 217, 236, 762, 853], "000": [1, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 34, 42, 59, 63, 65, 67, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 83, 84, 88, 90, 93, 94, 95, 99, 109, 112, 113, 114, 115, 119, 121, 123, 128, 129, 130, 133, 135, 137, 141, 142, 143, 144, 145, 147, 150, 152, 153, 160, 167, 168, 169, 173, 180, 182, 183, 184, 185, 186, 191, 192, 195, 197, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 220, 223, 225, 229, 231, 232, 233, 242, 506, 620], "46": [1, 9, 12, 13, 19, 20, 21, 28, 33, 34, 35, 40, 45, 47, 51, 55, 72, 81, 103, 108, 112, 114, 119, 123, 147, 149, 150, 158, 170, 196, 197, 202, 203, 205, 210, 219, 228, 229, 230, 232, 233, 236, 237, 238, 246, 868, 886], "28": [1, 11, 13, 18, 19, 26, 28, 34, 35, 41, 45, 47, 50, 79, 81, 103, 108, 109, 112, 114, 119, 141, 159, 170, 172, 177, 182, 183, 184, 185, 186, 196, 197, 202, 204, 210, 212, 216, 228, 229, 230, 232, 233, 235, 236, 237, 238, 242, 246, 337, 886], "53": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 32, 33, 34, 35, 40, 42, 45, 46, 47, 73, 76, 81, 82, 83, 84, 88, 94, 99, 103, 108, 112, 113, 114, 115, 119, 121, 123, 133, 137, 142, 145, 146, 147, 152, 156, 163, 170, 185, 192, 196, 197, 203, 204, 205, 206, 210, 211, 212, 213, 219, 228, 229, 230, 232, 233, 235, 237, 238, 246, 687, 865], "58": [1, 11, 13, 19, 35, 40, 45, 47, 48, 49, 54, 55, 57, 58, 59, 78, 81, 90, 93, 94, 103, 108, 109, 112, 114, 116, 119, 121, 127, 137, 138, 150, 152, 153, 163, 170, 173, 179, 183, 192, 196, 197, 200, 206, 208, 210, 216, 217, 228, 229, 232, 233, 236, 246, 356, 868, 886], "243": [1, 56, 60, 81, 112, 119, 170, 192, 233], "47": [1, 10, 16, 19, 28, 33, 35, 45, 51, 79, 81, 84, 103, 106, 108, 109, 112, 114, 119, 138, 160, 169, 170, 182, 184, 196, 197, 210, 214, 219, 228, 229, 230, 232, 233, 238, 246, 302, 337, 406, 861, 862, 868], "86": [1, 5, 12, 13, 15, 19, 26, 34, 35, 40, 41, 47, 50, 81, 103, 108, 112, 114, 119, 138, 141, 152, 157, 158, 159, 169, 170, 173, 177, 182, 183, 185, 196, 197, 204, 206, 208, 209, 210, 213, 218, 228, 229, 230, 232, 233, 238, 246, 420, 720, 722, 732, 736, 860], "41": [1, 13, 19, 28, 34, 35, 41, 44, 45, 47, 81, 82, 103, 108, 114, 119, 169, 170, 184, 185, 192, 196, 197, 206, 208, 209, 210, 217, 222, 228, 229, 230, 232, 233, 236, 237, 238, 243, 246, 278, 362, 405, 413, 886], "63": [1, 13, 19, 28, 35, 45, 47, 70, 79, 81, 82, 101, 102, 103, 108, 112, 114, 117, 119, 138, 144, 170, 185, 186, 192, 197, 210, 228, 229, 230, 232, 233, 236, 238, 886], "55": [1, 11, 13, 19, 21, 28, 30, 31, 32, 35, 38, 39, 40, 41, 44, 45, 46, 48, 50, 54, 55, 57, 58, 60, 78, 79, 81, 86, 87, 101, 103, 108, 109, 112, 114, 116, 119, 120, 124, 127, 144, 150, 152, 161, 170, 172, 173, 177, 178, 179, 181, 182, 196, 197, 205, 206, 208, 210, 212, 219, 228, 229, 230, 232, 233, 238, 246, 413, 421, 529, 561, 562, 609, 843, 886], "82": [1, 13, 19, 35, 46, 81, 96, 103, 112, 114, 119, 146, 170, 172, 181, 182, 185, 192, 196, 197, 210, 228, 229, 230, 232, 233, 237, 238, 242, 405, 448], "230": [1, 81, 88, 112, 119, 170, 228, 233], "26": [1, 5, 11, 13, 16, 19, 28, 32, 34, 35, 41, 44, 45, 46, 47, 56, 64, 79, 81, 82, 93, 101, 103, 108, 109, 112, 114, 119, 126, 137, 138, 146, 159, 170, 172, 184, 185, 186, 192, 196, 197, 210, 214, 228, 229, 230, 232, 233, 236, 237, 238, 241, 242, 245, 246, 278, 279, 362, 396, 529, 862], "coordin": [1, 5, 11, 12, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 68, 71, 79, 81, 82, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 115, 119, 123, 124, 127, 131, 135, 136, 137, 151, 159, 160, 164, 165, 166, 167, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 192, 193, 197, 209, 211, 213, 214, 224, 225, 236, 238, 246, 263, 264, 266, 267, 268, 269, 270, 271, 272, 275, 279, 281, 282, 304, 306, 307, 308, 314, 317, 318, 323, 327, 330, 332, 333, 335, 337, 341, 366, 367, 369, 392, 413, 420, 432, 434, 456, 464, 472, 474, 475, 478, 481, 482, 485, 488, 492, 493, 506, 512, 514, 521, 526, 561, 562, 573, 577, 583, 594, 626, 636, 637, 639, 640, 655, 659, 683, 686, 706, 708, 710, 740, 741, 753, 754, 755, 770, 771, 772, 778, 782, 786, 788, 790, 792, 793, 794, 796, 797, 804, 806, 808, 809, 810, 814, 816, 822, 824, 833, 834, 839, 841, 862, 886], "establish": [1, 12, 21, 81, 82, 119, 123, 185, 189, 192, 203, 233, 246, 693, 694, 696, 697], "digit": [1, 71, 73, 76, 81, 82, 83, 90, 93, 118, 119, 123, 127, 135, 142, 147, 152, 157, 158, 160, 161, 168, 169, 170, 183, 186, 189, 190, 192, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 246, 258, 259, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 277, 280, 281, 282, 307, 308, 314, 327, 328, 330, 332, 335, 336, 339, 341, 343, 344, 346, 367, 413, 420, 432, 434, 454, 472, 481, 482, 485, 488, 494, 506, 514, 521, 526, 561, 562, 571, 572, 573, 577, 583, 594, 620, 621, 655, 706, 708, 709, 710, 754, 770, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 824, 841, 861, 862, 871, 886], "point": [1, 5, 8, 9, 11, 12, 16, 18, 21, 22, 26, 27, 32, 33, 34, 36, 38, 41, 42, 44, 45, 46, 49, 54, 55, 56, 58, 60, 71, 72, 73, 76, 79, 81, 82, 83, 90, 93, 94, 96, 97, 100, 101, 103, 107, 109, 110, 112, 113, 114, 115, 117, 119, 120, 121, 123, 127, 128, 134, 135, 136, 137, 138, 141, 142, 143, 145, 146, 147, 150, 151, 152, 153, 157, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 192, 193, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 242, 243, 246, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 299, 300, 307, 308, 314, 317, 318, 323, 327, 332, 336, 337, 338, 339, 341, 344, 350, 352, 356, 361, 362, 366, 367, 369, 412, 413, 414, 415, 419, 420, 422, 429, 432, 434, 447, 449, 451, 454, 472, 475, 476, 480, 481, 482, 484, 485, 488, 494, 501, 506, 514, 524, 525, 526, 528, 529, 538, 539, 540, 541, 543, 544, 561, 562, 564, 572, 573, 576, 577, 583, 594, 615, 619, 620, 623, 624, 626, 629, 634, 637, 640, 651, 654, 655, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 673, 680, 682, 691, 692, 693, 694, 696, 697, 698, 706, 707, 708, 709, 710, 724, 725, 754, 755, 758, 759, 770, 771, 772, 773, 778, 782, 786, 788, 789, 790, 791, 793, 794, 797, 798, 801, 804, 806, 808, 809, 810, 812, 813, 814, 816, 817, 818, 822, 834, 839, 841, 845, 861, 863, 865, 867, 871, 874, 886], "subj00111092011": [1, 119], "po": [1, 19, 41, 47, 50, 79, 80, 81, 82, 84, 93, 115, 119, 137, 152, 157, 177, 184, 185, 186, 192, 209, 211, 264, 268, 269, 272, 273, 274, 277, 280, 281, 282, 306, 315, 340, 353, 354, 433, 456, 474, 475, 494, 566, 569, 628, 655, 796, 816, 871, 886], "polhemu": [1, 12, 21, 81, 82, 119, 123, 157, 171, 185, 192, 271, 314, 339, 341, 494, 506, 868, 871, 886], "hpi": [1, 12, 21, 81, 82, 119, 123, 157, 167, 170, 171, 185, 189, 192, 200, 211, 217, 258, 266, 267, 268, 269, 271, 307, 308, 314, 317, 327, 337, 339, 343, 344, 345, 348, 349, 350, 367, 432, 433, 481, 482, 488, 506, 559, 566, 706, 708, 709, 710, 777, 841, 868, 871, 875, 886], "coil": [1, 5, 12, 21, 26, 41, 45, 50, 81, 82, 109, 119, 123, 124, 151, 157, 159, 160, 177, 182, 183, 184, 185, 186, 189, 192, 200, 209, 210, 211, 258, 266, 267, 268, 269, 271, 322, 337, 343, 344, 346, 347, 348, 350, 351, 433, 456, 481, 482, 488, 506, 559, 572, 573, 576, 594, 605, 620, 648, 706, 708, 709, 710, 748, 777, 841, 875, 886], "ad": [1, 4, 5, 11, 12, 21, 22, 27, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 68, 70, 71, 81, 82, 90, 92, 93, 94, 95, 101, 104, 107, 108, 110, 119, 120, 123, 124, 127, 131, 135, 141, 142, 143, 147, 152, 157, 159, 160, 161, 162, 163, 167, 171, 176, 178, 179, 180, 182, 183, 185, 192, 197, 202, 206, 208, 209, 211, 219, 220, 223, 224, 225, 228, 229, 236, 238, 258, 260, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 314, 340, 343, 345, 349, 362, 363, 373, 413, 420, 434, 457, 480, 481, 482, 505, 518, 523, 524, 525, 527, 561, 562, 564, 577, 579, 616, 651, 655, 656, 660, 670, 698, 701, 706, 708, 709, 710, 750, 754, 757, 759, 771, 772, 778, 782, 783, 786, 788, 790, 793, 794, 797, 801, 804, 806, 808, 809, 810, 812, 814, 816, 817, 845, 862, 868, 871, 874, 886], "devic": [1, 5, 12, 21, 26, 41, 45, 50, 71, 80, 81, 82, 109, 119, 123, 151, 157, 159, 166, 167, 170, 171, 177, 182, 184, 185, 186, 192, 194, 195, 207, 209, 213, 214, 217, 258, 260, 268, 269, 271, 307, 314, 317, 330, 363, 365, 375, 378, 434, 445, 472, 481, 482, 488, 489, 491, 493, 496, 497, 498, 499, 500, 502, 504, 508, 509, 510, 511, 512, 566, 569, 582, 594, 595, 608, 618, 651, 754, 770, 789, 832, 841, 857, 861, 862, 871, 886], "locat": [1, 4, 5, 12, 21, 26, 27, 31, 35, 40, 41, 45, 47, 48, 49, 50, 55, 59, 60, 67, 68, 77, 80, 81, 82, 85, 90, 93, 94, 95, 100, 109, 115, 118, 119, 123, 124, 136, 137, 138, 139, 140, 142, 150, 151, 156, 157, 159, 160, 161, 162, 164, 166, 167, 172, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 192, 193, 201, 207, 209, 210, 211, 213, 217, 223, 224, 225, 228, 229, 230, 232, 233, 238, 243, 246, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 281, 282, 299, 300, 308, 309, 310, 314, 315, 318, 320, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 340, 344, 346, 347, 348, 356, 368, 369, 379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 420, 433, 434, 443, 446, 454, 464, 469, 473, 481, 482, 487, 491, 493, 501, 506, 512, 515, 525, 528, 529, 538, 539, 540, 544, 548, 561, 562, 566, 577, 585, 588, 589, 590, 591, 594, 605, 619, 620, 623, 628, 629, 645, 646, 648, 655, 658, 659, 669, 672, 693, 694, 696, 697, 698, 706, 708, 710, 742, 743, 744, 746, 754, 770, 771, 775, 778, 782, 786, 788, 792, 793, 796, 797, 806, 807, 808, 809, 810, 814, 816, 819, 822, 824, 841, 846, 851, 861, 862, 865, 871, 874, 875, 886], "measur": [1, 4, 5, 12, 21, 26, 41, 45, 50, 71, 73, 76, 80, 81, 82, 83, 90, 93, 103, 109, 119, 123, 127, 142, 145, 146, 147, 157, 159, 160, 163, 166, 167, 168, 169, 170, 171, 173, 177, 183, 185, 189, 190, 191, 192, 193, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 228, 233, 234, 235, 239, 240, 242, 243, 246, 259, 261, 263, 265, 266, 267, 268, 269, 270, 271, 275, 277, 279, 286, 287, 299, 300, 301, 307, 308, 312, 313, 320, 321, 322, 326, 328, 329, 342, 344, 346, 348, 351, 356, 360, 361, 362, 367, 371, 372, 373, 375, 413, 415, 417, 420, 421, 422, 432, 444, 445, 446, 456, 457, 464, 473, 476, 478, 479, 480, 481, 482, 483, 486, 494, 496, 510, 518, 521, 524, 525, 526, 528, 529, 530, 537, 538, 539, 540, 543, 558, 559, 562, 573, 576, 590, 594, 595, 598, 599, 600, 621, 636, 641, 642, 651, 662, 663, 670, 671, 674, 678, 687, 688, 689, 690, 694, 697, 698, 706, 707, 708, 709, 710, 736, 743, 754, 767, 770, 771, 774, 779, 780, 794, 796, 805, 806, 810, 832, 841, 853, 861, 862, 868, 871, 874, 886], "compos": [1, 12, 21, 26, 41, 45, 50, 81, 82, 109, 119, 123, 138, 159, 177, 185, 189, 192, 197, 861, 871], "find": [1, 5, 7, 11, 12, 19, 21, 27, 28, 29, 30, 38, 39, 44, 47, 48, 49, 50, 52, 57, 58, 60, 68, 69, 77, 79, 81, 82, 83, 85, 104, 107, 108, 110, 119, 123, 124, 127, 128, 135, 137, 141, 142, 146, 151, 152, 156, 157, 158, 162, 167, 171, 173, 176, 177, 181, 182, 185, 192, 197, 200, 202, 203, 206, 211, 219, 225, 228, 229, 230, 238, 243, 246, 264, 268, 269, 271, 272, 273, 274, 277, 280, 281, 282, 320, 357, 358, 359, 367, 447, 452, 454, 455, 481, 482, 501, 529, 559, 562, 565, 568, 574, 575, 577, 578, 579, 580, 583, 584, 585, 587, 588, 589, 603, 619, 623, 644, 665, 669, 672, 683, 754, 791, 793, 841, 843, 845, 848, 849, 850, 851, 862, 865, 868, 869, 871, 886], "sampl": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 68, 69, 71, 72, 73, 76, 78, 79, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 218, 219, 220, 223, 224, 225, 228, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 246, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 271, 273, 274, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 298, 320, 356, 362, 364, 375, 388, 415, 416, 417, 418, 419, 423, 424, 425, 426, 427, 428, 430, 434, 437, 439, 441, 442, 448, 449, 450, 451, 452, 454, 455, 479, 480, 481, 482, 489, 496, 504, 523, 525, 532, 538, 539, 557, 559, 562, 564, 567, 576, 579, 580, 602, 608, 612, 619, 620, 621, 634, 636, 641, 656, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 678, 686, 688, 692, 693, 694, 695, 696, 697, 698, 699, 700, 706, 707, 709, 711, 712, 713, 714, 715, 716, 717, 721, 722, 724, 725, 729, 730, 732, 733, 734, 735, 736, 752, 754, 784, 786, 787, 795, 807, 812, 817, 818, 820, 831, 841, 845, 861, 865, 866, 868, 869, 871, 876, 886], "meg4": [1, 12, 21, 81, 82, 119, 123, 185, 192], "system": [1, 5, 8, 10, 12, 19, 21, 27, 62, 70, 74, 80, 81, 82, 109, 116, 119, 122, 124, 129, 130, 137, 138, 151, 152, 156, 157, 159, 160, 161, 167, 169, 170, 171, 173, 179, 184, 185, 186, 190, 192, 193, 196, 200, 201, 206, 207, 208, 209, 211, 213, 217, 218, 219, 228, 241, 246, 264, 265, 266, 267, 268, 269, 271, 273, 274, 276, 277, 279, 280, 281, 282, 286, 287, 302, 314, 317, 322, 325, 330, 332, 333, 335, 336, 337, 339, 341, 366, 367, 369, 375, 382, 419, 433, 448, 450, 462, 474, 475, 476, 481, 482, 488, 489, 490, 492, 493, 494, 506, 515, 526, 559, 562, 564, 592, 594, 611, 641, 658, 659, 660, 669, 670, 672, 692, 693, 694, 695, 696, 697, 705, 706, 708, 709, 710, 718, 724, 740, 770, 771, 784, 787, 792, 795, 801, 807, 815, 821, 822, 834, 841, 843, 844, 845, 846, 848, 849, 850, 857, 861, 862, 864, 871, 874, 886], "clock": [1, 12, 21, 81, 82, 119, 123, 185, 192, 481, 482, 494, 562, 608, 801, 807, 862, 886], "avail": [1, 2, 5, 7, 8, 12, 19, 21, 22, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 68, 71, 73, 76, 78, 81, 82, 83, 86, 87, 90, 92, 93, 94, 95, 101, 109, 116, 119, 120, 123, 127, 131, 135, 137, 141, 142, 143, 144, 145, 147, 150, 151, 152, 156, 157, 160, 163, 166, 167, 168, 169, 170, 173, 174, 177, 178, 179, 180, 181, 182, 185, 189, 190, 192, 193, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 229, 241, 258, 263, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 280, 281, 282, 305, 307, 308, 314, 334, 340, 374, 376, 382, 405, 406, 412, 413, 419, 420, 425, 432, 439, 461, 478, 481, 482, 521, 538, 539, 553, 554, 555, 561, 562, 577, 624, 631, 671, 702, 706, 707, 708, 710, 723, 736, 754, 771, 778, 784, 786, 788, 790, 793, 794, 797, 801, 804, 806, 807, 808, 809, 810, 812, 814, 816, 817, 825, 826, 841, 843, 845, 846, 851, 852, 853, 856, 859, 862, 865, 868, 869, 870, 871, 874, 886], "check": [1, 5, 12, 21, 26, 41, 43, 45, 50, 61, 70, 81, 82, 109, 119, 120, 121, 123, 125, 136, 138, 141, 143, 144, 145, 158, 159, 160, 162, 167, 169, 171, 172, 173, 176, 177, 182, 183, 185, 192, 201, 203, 206, 207, 217, 218, 220, 228, 229, 242, 261, 263, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 320, 322, 388, 394, 432, 446, 449, 480, 481, 482, 489, 492, 537, 551, 562, 570, 572, 693, 694, 696, 697, 706, 708, 709, 710, 740, 754, 770, 788, 790, 791, 792, 793, 824, 843, 844, 845, 853, 861, 862, 865, 874, 886], "which": [1, 4, 5, 12, 16, 18, 19, 21, 26, 31, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 58, 60, 70, 74, 79, 80, 81, 82, 83, 88, 94, 101, 103, 109, 112, 114, 115, 116, 119, 120, 123, 127, 128, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 147, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 179, 181, 183, 185, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 242, 243, 246, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 292, 299, 300, 307, 308, 314, 316, 323, 330, 332, 333, 334, 335, 336, 342, 343, 345, 349, 351, 355, 356, 361, 362, 365, 369, 374, 375, 382, 388, 405, 413, 415, 420, 421, 424, 430, 432, 434, 437, 439, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 464, 471, 472, 473, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 515, 516, 517, 521, 522, 524, 529, 530, 538, 539, 542, 543, 547, 551, 561, 562, 563, 564, 570, 572, 573, 576, 577, 579, 580, 581, 583, 590, 592, 594, 599, 608, 611, 617, 619, 623, 624, 625, 626, 628, 629, 631, 636, 637, 640, 641, 642, 643, 645, 646, 648, 649, 651, 655, 656, 660, 663, 666, 668, 669, 672, 674, 675, 683, 685, 686, 692, 698, 701, 702, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 725, 728, 733, 734, 736, 737, 739, 741, 744, 754, 755, 757, 759, 760, 769, 770, 772, 775, 777, 778, 780, 782, 784, 785, 786, 788, 789, 792, 793, 797, 799, 801, 806, 807, 808, 812, 814, 817, 821, 822, 824, 832, 833, 834, 836, 838, 839, 840, 841, 843, 845, 846, 848, 850, 853, 857, 859, 860, 861, 862, 863, 865, 867, 868, 871, 872, 874, 884, 886], "ar": [1, 4, 5, 11, 12, 14, 15, 16, 18, 19, 21, 24, 26, 27, 31, 32, 33, 34, 38, 41, 43, 45, 46, 47, 50, 59, 67, 70, 74, 75, 76, 79, 81, 82, 83, 84, 87, 88, 94, 99, 101, 103, 104, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 127, 128, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 246, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 286, 287, 290, 291, 293, 299, 300, 302, 304, 305, 307, 308, 309, 310, 312, 314, 315, 316, 318, 319, 322, 324, 325, 326, 327, 330, 331, 332, 334, 336, 337, 340, 343, 344, 345, 349, 355, 356, 360, 361, 362, 363, 365, 367, 371, 372, 373, 375, 388, 389, 396, 405, 413, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 463, 465, 466, 470, 471, 472, 473, 476, 478, 479, 480, 481, 482, 483, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 500, 502, 504, 506, 507, 508, 509, 510, 511, 512, 515, 518, 521, 522, 524, 526, 527, 528, 537, 538, 539, 540, 541, 544, 546, 551, 553, 554, 555, 557, 558, 559, 561, 562, 563, 564, 565, 567, 569, 570, 572, 577, 578, 579, 580, 583, 584, 586, 589, 593, 594, 595, 598, 599, 600, 602, 603, 605, 609, 611, 612, 614, 617, 618, 619, 620, 621, 624, 626, 629, 632, 634, 641, 643, 644, 645, 646, 647, 648, 651, 653, 655, 656, 658, 659, 662, 663, 666, 668, 669, 671, 672, 674, 677, 678, 680, 681, 682, 687, 688, 691, 692, 693, 694, 695, 696, 697, 698, 702, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 730, 732, 733, 734, 735, 736, 737, 739, 741, 744, 749, 754, 755, 759, 769, 770, 771, 772, 775, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 797, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 824, 831, 833, 834, 835, 836, 841, 843, 845, 846, 848, 849, 850, 851, 852, 853, 857, 860, 861, 862, 863, 864, 866, 867, 868, 869, 870, 872, 873, 874, 876, 886], "valid": [1, 8, 9, 10, 11, 12, 15, 16, 21, 74, 81, 82, 111, 119, 121, 123, 138, 163, 172, 178, 185, 191, 192, 197, 203, 212, 228, 243, 261, 263, 266, 267, 268, 269, 271, 273, 274, 275, 277, 280, 281, 282, 327, 340, 356, 361, 405, 413, 419, 420, 429, 430, 434, 445, 447, 454, 461, 465, 481, 482, 538, 539, 561, 562, 564, 577, 579, 580, 637, 651, 688, 693, 694, 696, 697, 706, 708, 709, 710, 731, 741, 754, 757, 770, 771, 778, 785, 786, 787, 788, 790, 792, 793, 797, 806, 809, 812, 814, 815, 816, 817, 839, 845, 851, 852, 861, 865, 868, 886], "240": [1, 35, 42, 46, 75, 81, 109, 119, 170, 172, 182, 196, 200, 204, 210, 228, 233, 242], "x": [1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 69, 71, 72, 73, 76, 78, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 133, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 161, 163, 167, 168, 169, 170, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 192, 193, 196, 197, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 220, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 243, 246, 258, 263, 266, 267, 268, 269, 271, 273, 274, 275, 277, 279, 280, 281, 282, 290, 304, 314, 315, 337, 346, 347, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 451, 452, 453, 481, 482, 492, 493, 528, 529, 537, 561, 562, 563, 571, 577, 582, 603, 626, 658, 679, 682, 687, 691, 692, 693, 694, 695, 696, 697, 699, 706, 708, 710, 711, 712, 713, 718, 720, 721, 722, 724, 725, 729, 731, 732, 736, 741, 744, 745, 747, 754, 755, 758, 771, 773, 775, 778, 786, 788, 790, 792, 793, 794, 795, 796, 797, 802, 804, 806, 808, 809, 810, 812, 814, 816, 817, 818, 820, 822, 833, 841, 845, 851, 862, 868, 871, 886], "1800": [1, 119, 193], "432000": [1, 119], "302": [1, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 75, 83, 93, 94, 104, 107, 108, 110, 119, 121, 153, 163, 167, 170, 173, 177, 178, 179, 180, 181, 182, 210, 224, 233, 236, 238, 871], "ch": [1, 2, 8, 12, 21, 68, 81, 82, 112, 115, 119, 120, 123, 137, 138, 142, 150, 152, 167, 170, 171, 185, 192, 206, 217, 223, 225, 246, 258, 271, 321, 322, 382, 405, 406, 481, 482, 824, 841, 862, 886], "current": [1, 12, 21, 22, 27, 29, 30, 31, 34, 41, 42, 44, 59, 77, 78, 81, 82, 85, 94, 119, 123, 141, 150, 162, 163, 166, 167, 172, 178, 179, 180, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 201, 203, 211, 213, 214, 219, 225, 236, 238, 246, 258, 259, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 280, 281, 282, 286, 287, 299, 300, 320, 322, 328, 355, 362, 367, 374, 375, 378, 419, 434, 437, 446, 451, 453, 454, 456, 476, 480, 481, 482, 487, 492, 496, 524, 525, 529, 532, 562, 571, 573, 574, 575, 583, 594, 624, 631, 651, 670, 687, 689, 706, 708, 709, 710, 731, 754, 761, 763, 764, 765, 766, 767, 771, 775, 778, 784, 807, 816, 817, 824, 841, 845, 848, 851, 853, 861, 862, 865, 867, 871, 874], "compens": [1, 2, 12, 21, 27, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 78, 81, 82, 85, 86, 87, 101, 116, 119, 120, 123, 127, 141, 144, 150, 173, 177, 179, 180, 182, 185, 186, 192, 193, 203, 210, 228, 229, 246, 258, 261, 266, 267, 268, 269, 271, 353, 367, 434, 436, 448, 449, 451, 452, 454, 480, 481, 482, 494, 502, 525, 559, 562, 573, 583, 590, 594, 624, 671, 706, 708, 709, 710, 795, 796, 886], "grade": [1, 12, 21, 24, 41, 70, 81, 82, 101, 109, 119, 123, 159, 162, 185, 189, 192, 236, 238, 261, 266, 267, 268, 269, 271, 272, 468, 469, 480, 481, 482, 562, 706, 708, 709, 710, 886], "144000": [1, 81], "sec": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 29, 32, 33, 34, 42, 45, 46, 49, 59, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 121, 123, 127, 129, 132, 133, 135, 136, 137, 142, 145, 147, 150, 152, 153, 157, 160, 163, 167, 168, 169, 170, 173, 178, 180, 181, 182, 183, 184, 185, 186, 191, 197, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 223, 224, 225, 230, 231, 232, 233, 236, 238, 242, 271, 871, 886], "type": [1, 2, 5, 15, 16, 22, 27, 29, 30, 31, 34, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 63, 67, 71, 75, 77, 78, 79, 81, 82, 83, 85, 86, 90, 93, 94, 95, 103, 109, 113, 114, 115, 116, 118, 119, 120, 123, 124, 127, 128, 131, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 150, 151, 157, 158, 159, 160, 163, 167, 168, 169, 171, 172, 173, 177, 179, 180, 181, 182, 183, 184, 186, 189, 191, 193, 197, 200, 201, 202, 205, 206, 207, 208, 209, 210, 212, 214, 218, 220, 223, 224, 225, 228, 232, 233, 241, 242, 259, 261, 263, 264, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 299, 300, 310, 312, 313, 315, 316, 319, 320, 321, 322, 323, 329, 331, 337, 345, 356, 357, 358, 359, 360, 361, 370, 371, 372, 373, 375, 382, 388, 405, 406, 413, 415, 420, 422, 429, 434, 437, 438, 445, 446, 448, 451, 452, 453, 454, 456, 457, 458, 463, 470, 476, 478, 479, 480, 481, 482, 489, 496, 501, 508, 512, 513, 521, 540, 552, 559, 560, 561, 562, 563, 564, 567, 571, 573, 576, 577, 578, 579, 580, 582, 583, 585, 586, 590, 594, 600, 602, 609, 619, 621, 623, 624, 647, 648, 651, 657, 658, 659, 671, 674, 677, 686, 692, 693, 694, 696, 697, 701, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 737, 740, 754, 769, 773, 777, 778, 779, 780, 782, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 805, 806, 807, 808, 809, 810, 812, 814, 815, 816, 817, 818, 820, 827, 841, 843, 844, 850, 851, 852, 856, 861, 863, 865, 869, 871, 872, 886], "select": [1, 5, 7, 11, 15, 21, 24, 28, 29, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 50, 51, 54, 55, 58, 59, 67, 71, 74, 76, 82, 83, 88, 90, 93, 94, 95, 99, 103, 109, 112, 113, 119, 120, 121, 128, 135, 138, 142, 143, 145, 151, 152, 159, 160, 162, 163, 167, 168, 170, 171, 173, 176, 178, 179, 180, 181, 182, 183, 190, 192, 197, 201, 202, 203, 205, 208, 209, 211, 214, 218, 219, 220, 224, 225, 229, 233, 237, 238, 241, 242, 243, 246, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 276, 277, 280, 281, 282, 321, 326, 356, 367, 415, 421, 444, 451, 472, 478, 481, 482, 487, 515, 554, 555, 557, 558, 559, 560, 562, 563, 567, 576, 577, 579, 580, 587, 588, 603, 629, 641, 648, 651, 669, 672, 692, 706, 707, 708, 709, 710, 717, 723, 771, 778, 784, 788, 790, 792, 793, 794, 797, 799, 801, 807, 810, 812, 816, 819, 823, 841, 845, 848, 861, 865, 868, 872, 886], "re": [1, 4, 29, 45, 67, 71, 93, 94, 101, 103, 113, 114, 120, 127, 135, 141, 142, 145, 152, 157, 159, 160, 161, 162, 163, 167, 168, 170, 171, 172, 173, 183, 190, 201, 202, 203, 205, 206, 207, 208, 209, 217, 219, 224, 230, 232, 238, 243, 246, 258, 260, 263, 266, 267, 268, 269, 271, 275, 283, 315, 319, 413, 420, 438, 481, 482, 506, 554, 555, 558, 560, 561, 562, 571, 620, 648, 651, 655, 706, 708, 709, 710, 717, 723, 740, 771, 786, 793, 797, 806, 809, 811, 814, 816, 845, 849, 850, 853, 863, 865, 866, 868, 874, 886], "referenc": [1, 27, 29, 71, 77, 85, 93, 94, 141, 151, 152, 160, 163, 168, 183, 190, 201, 205, 209, 224, 228, 260, 266, 267, 268, 269, 271, 283, 326, 481, 482, 487, 648, 651, 706, 708, 709, 710, 788, 841, 845, 868, 872, 875, 886], "item": [1, 8, 11, 12, 13, 14, 15, 16, 18, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 80, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 129, 131, 132, 133, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 152, 153, 157, 158, 159, 160, 161, 163, 167, 168, 169, 170, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 220, 223, 224, 225, 229, 230, 231, 232, 233, 236, 238, 242, 259, 263, 264, 266, 267, 271, 275, 279, 285, 290, 304, 481, 482, 528, 708, 709, 710, 741, 754, 851, 871, 886], "deactiv": [1, 29, 42, 51, 68, 71, 92, 93, 94, 111, 143, 147, 160, 163, 183, 192, 207, 208, 209, 213, 224, 775, 843], "wa": [1, 5, 7, 13, 18, 21, 33, 60, 65, 71, 79, 94, 115, 135, 141, 145, 150, 152, 159, 160, 161, 167, 168, 169, 171, 172, 182, 183, 184, 190, 192, 193, 196, 197, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 219, 220, 223, 231, 232, 233, 243, 259, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 286, 287, 299, 300, 334, 349, 392, 412, 413, 420, 435, 437, 478, 481, 482, 498, 501, 510, 515, 525, 535, 536, 538, 539, 544, 545, 546, 561, 562, 563, 574, 575, 577, 580, 583, 584, 585, 594, 601, 619, 623, 644, 655, 658, 659, 691, 701, 706, 707, 708, 709, 710, 722, 726, 732, 754, 770, 771, 786, 788, 793, 797, 806, 809, 814, 816, 819, 823, 841, 844, 845, 850, 851, 852, 862, 867, 868, 871, 874, 886], "been": [1, 9, 10, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 71, 74, 78, 80, 84, 86, 87, 94, 116, 119, 120, 127, 135, 141, 143, 146, 150, 151, 152, 160, 161, 163, 167, 168, 170, 172, 173, 176, 177, 179, 180, 182, 183, 184, 189, 192, 193, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 217, 218, 219, 220, 241, 248, 257, 258, 261, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 277, 278, 279, 280, 281, 282, 291, 292, 293, 299, 300, 305, 356, 360, 361, 371, 372, 373, 379, 380, 381, 384, 385, 386, 388, 393, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 413, 420, 434, 456, 457, 476, 478, 479, 481, 482, 483, 489, 490, 502, 510, 530, 540, 561, 562, 563, 574, 594, 601, 624, 706, 707, 708, 709, 710, 722, 732, 734, 736, 737, 764, 778, 784, 788, 790, 792, 794, 808, 845, 853, 857, 862, 865, 867, 868, 871, 874, 886], "appli": [1, 5, 7, 8, 9, 10, 11, 12, 15, 16, 18, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 82, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 127, 128, 132, 134, 135, 136, 137, 141, 142, 143, 144, 146, 147, 150, 151, 152, 153, 157, 159, 160, 161, 162, 163, 167, 168, 170, 171, 173, 177, 178, 179, 180, 182, 183, 184, 185, 186, 190, 192, 197, 200, 201, 202, 204, 206, 208, 209, 211, 212, 213, 214, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 242, 246, 259, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 314, 340, 355, 360, 369, 371, 373, 413, 415, 416, 420, 421, 422, 424, 426, 434, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 457, 471, 478, 479, 481, 482, 519, 522, 529, 530, 531, 532, 533, 538, 539, 541, 544, 545, 546, 561, 562, 563, 564, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 585, 586, 591, 594, 601, 609, 617, 621, 624, 625, 626, 646, 651, 662, 663, 664, 665, 666, 668, 673, 687, 688, 693, 694, 695, 706, 707, 708, 709, 710, 718, 722, 732, 735, 736, 738, 742, 743, 744, 754, 778, 779, 784, 785, 786, 788, 790, 792, 793, 797, 798, 799, 801, 807, 808, 812, 814, 815, 817, 824, 833, 836, 841, 845, 861, 863, 865, 868, 869, 871, 874, 886], "yet": [1, 71, 79, 94, 135, 160, 183, 190, 193, 207, 209, 243, 266, 379, 380, 381, 384, 385, 386, 388, 393, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 421, 426, 551, 577, 754, 845], "method": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 29, 30, 31, 34, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 59, 70, 71, 72, 73, 74, 76, 77, 78, 82, 83, 84, 85, 88, 93, 94, 95, 97, 99, 101, 103, 104, 107, 108, 109, 110, 113, 114, 115, 116, 121, 127, 133, 137, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 160, 161, 163, 166, 167, 168, 169, 170, 171, 173, 176, 178, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 214, 215, 219, 221, 222, 223, 224, 225, 229, 233, 236, 238, 241, 242, 243, 246, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 286, 287, 290, 299, 300, 301, 302, 304, 307, 308, 312, 313, 314, 315, 316, 320, 321, 322, 323, 326, 328, 329, 342, 344, 346, 349, 351, 356, 360, 361, 362, 367, 371, 372, 373, 375, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 434, 436, 448, 449, 451, 452, 453, 457, 464, 473, 476, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 518, 525, 526, 528, 529, 530, 531, 532, 533, 535, 536, 540, 541, 542, 544, 545, 546, 558, 559, 561, 562, 563, 570, 573, 574, 575, 576, 578, 590, 592, 594, 597, 598, 599, 600, 601, 609, 611, 615, 618, 624, 626, 641, 642, 651, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 684, 687, 688, 690, 693, 694, 695, 696, 697, 699, 706, 707, 708, 709, 710, 713, 716, 718, 724, 725, 733, 734, 736, 737, 741, 743, 749, 750, 752, 754, 755, 767, 770, 774, 779, 780, 781, 782, 785, 793, 796, 798, 806, 810, 813, 841, 843, 845, 860, 861, 863, 865, 868, 869, 871, 872, 883, 886], "5": [1, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 160, 161, 163, 165, 167, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 191, 192, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 246, 258, 260, 261, 266, 267, 268, 269, 272, 273, 274, 277, 280, 281, 282, 284, 299, 300, 302, 305, 309, 316, 328, 337, 340, 356, 362, 370, 382, 388, 412, 413, 419, 430, 433, 434, 436, 454, 455, 456, 469, 473, 478, 481, 482, 506, 518, 519, 529, 535, 540, 544, 545, 546, 561, 562, 564, 565, 570, 571, 572, 573, 574, 577, 578, 579, 580, 581, 583, 584, 587, 589, 592, 594, 598, 602, 603, 620, 628, 647, 655, 659, 692, 708, 710, 718, 722, 724, 732, 733, 734, 736, 737, 744, 754, 769, 773, 785, 786, 790, 791, 797, 799, 802, 807, 812, 817, 843, 844, 845, 851, 861, 862, 865, 867, 868, 871, 874], "becaus": [1, 4, 5, 11, 16, 18, 21, 26, 34, 41, 43, 44, 45, 50, 60, 70, 74, 81, 82, 83, 101, 114, 115, 119, 135, 141, 143, 144, 145, 147, 150, 151, 152, 159, 161, 162, 163, 167, 168, 169, 171, 172, 177, 181, 182, 183, 184, 185, 190, 191, 192, 193, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 219, 223, 228, 229, 230, 233, 236, 243, 266, 267, 268, 269, 349, 360, 434, 456, 572, 583, 593, 693, 694, 696, 697, 709, 763, 784, 815, 841, 845, 849, 853, 861, 863, 865, 867, 868, 872, 886], "all": [1, 4, 5, 10, 13, 14, 18, 19, 21, 27, 28, 31, 33, 35, 40, 45, 59, 61, 63, 67, 70, 73, 79, 81, 82, 83, 90, 95, 97, 99, 103, 107, 111, 112, 113, 114, 116, 117, 119, 120, 121, 125, 127, 136, 141, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 169, 170, 171, 172, 173, 177, 180, 182, 183, 184, 185, 186, 189, 190, 191, 192, 197, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 233, 237, 241, 242, 243, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 293, 294, 297, 299, 300, 302, 304, 309, 310, 311, 312, 314, 315, 316, 319, 324, 325, 329, 330, 331, 340, 350, 351, 355, 356, 360, 361, 362, 363, 367, 368, 370, 371, 372, 373, 375, 389, 413, 415, 416, 420, 422, 429, 430, 434, 437, 438, 440, 442, 443, 444, 445, 446, 447, 451, 452, 453, 454, 455, 456, 457, 461, 463, 469, 470, 471, 472, 476, 478, 479, 481, 482, 483, 487, 489, 493, 496, 504, 506, 509, 513, 517, 528, 529, 531, 533, 536, 538, 539, 540, 541, 545, 546, 548, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 572, 576, 577, 578, 579, 580, 581, 582, 583, 586, 589, 590, 594, 600, 602, 609, 614, 617, 618, 620, 621, 624, 625, 626, 629, 639, 644, 645, 651, 654, 656, 665, 671, 674, 683, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 701, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 722, 723, 724, 728, 732, 733, 734, 736, 737, 741, 744, 752, 754, 761, 762, 770, 771, 772, 778, 782, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 797, 798, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 814, 815, 816, 817, 818, 841, 848, 852, 856, 860, 861, 862, 863, 867, 868, 871, 872, 874, 886], "were": [1, 4, 5, 10, 18, 21, 38, 81, 82, 119, 127, 135, 138, 141, 142, 143, 144, 145, 150, 151, 152, 162, 168, 169, 172, 173, 182, 183, 184, 185, 189, 191, 192, 193, 201, 202, 203, 206, 207, 208, 209, 211, 212, 217, 218, 219, 220, 223, 228, 230, 232, 233, 266, 267, 268, 269, 271, 274, 276, 277, 280, 282, 283, 299, 300, 322, 350, 351, 362, 365, 405, 406, 437, 439, 481, 482, 505, 562, 572, 573, 583, 594, 701, 706, 707, 708, 709, 710, 798, 800, 807, 841, 845, 852, 862, 865, 867, 871, 886], "effect": [1, 7, 17, 19, 20, 21, 26, 27, 39, 57, 59, 70, 71, 74, 83, 84, 99, 103, 109, 112, 113, 120, 121, 129, 133, 142, 146, 150, 152, 161, 163, 167, 168, 169, 173, 184, 192, 200, 202, 203, 204, 208, 209, 210, 211, 212, 213, 220, 223, 224, 225, 229, 230, 232, 233, 238, 241, 242, 246, 266, 267, 268, 269, 271, 272, 273, 276, 277, 281, 299, 300, 322, 356, 360, 361, 371, 372, 373, 405, 406, 413, 414, 420, 429, 434, 436, 437, 452, 456, 457, 476, 478, 479, 481, 482, 497, 498, 529, 532, 540, 559, 562, 565, 570, 621, 687, 689, 692, 693, 694, 696, 697, 708, 710, 713, 724, 784, 788, 794, 797, 799, 801, 807, 808, 810, 812, 841, 851, 852, 865, 886], "window": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 59, 71, 72, 73, 74, 76, 82, 83, 84, 88, 93, 99, 100, 103, 104, 108, 109, 113, 114, 115, 121, 123, 129, 133, 137, 138, 142, 143, 144, 145, 147, 152, 167, 172, 173, 181, 184, 192, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 219, 220, 223, 229, 233, 241, 242, 243, 258, 261, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 292, 343, 345, 349, 413, 414, 418, 420, 424, 426, 429, 437, 439, 448, 449, 451, 452, 453, 462, 472, 473, 479, 481, 482, 535, 536, 562, 564, 572, 583, 586, 592, 594, 602, 658, 659, 692, 706, 707, 708, 710, 713, 716, 718, 721, 724, 725, 729, 730, 733, 734, 735, 736, 737, 738, 754, 784, 785, 786, 793, 801, 807, 808, 812, 817, 845, 848, 849, 850, 851, 886], "size": [1, 5, 8, 9, 10, 21, 22, 32, 35, 41, 43, 44, 45, 46, 53, 58, 64, 70, 71, 74, 83, 100, 108, 109, 114, 120, 126, 127, 129, 133, 134, 135, 136, 137, 143, 145, 147, 151, 152, 156, 157, 159, 161, 167, 173, 176, 178, 179, 180, 181, 182, 184, 185, 186, 190, 191, 200, 201, 203, 204, 207, 208, 209, 210, 212, 213, 214, 217, 220, 223, 224, 225, 230, 233, 236, 241, 242, 243, 246, 263, 264, 266, 267, 268, 269, 273, 274, 275, 276, 277, 280, 281, 282, 314, 322, 330, 332, 362, 413, 415, 420, 424, 425, 448, 449, 451, 452, 453, 478, 480, 481, 482, 522, 535, 559, 561, 562, 577, 583, 589, 592, 672, 688, 692, 693, 694, 696, 697, 706, 708, 709, 710, 730, 744, 754, 763, 767, 782, 784, 786, 792, 793, 797, 799, 800, 801, 804, 806, 807, 809, 810, 812, 813, 814, 815, 816, 817, 821, 862, 868, 871, 886], "707": [1, 197, 210], "need": [1, 4, 5, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 54, 55, 58, 59, 60, 69, 70, 74, 75, 79, 86, 90, 94, 95, 103, 104, 107, 108, 109, 110, 112, 114, 117, 119, 127, 135, 136, 137, 141, 142, 143, 144, 145, 146, 150, 151, 152, 157, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 173, 176, 178, 179, 180, 181, 182, 183, 189, 191, 192, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 243, 246, 266, 267, 268, 269, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 299, 320, 331, 374, 377, 388, 414, 415, 423, 429, 437, 446, 451, 471, 480, 481, 482, 489, 496, 505, 521, 526, 549, 562, 601, 655, 693, 694, 696, 697, 706, 708, 709, 710, 754, 760, 771, 777, 792, 797, 807, 843, 845, 846, 848, 849, 850, 851, 852, 853, 861, 862, 867, 868, 869, 871, 874, 886], "more": [1, 4, 18, 19, 27, 28, 34, 42, 43, 44, 49, 54, 58, 70, 71, 73, 75, 81, 82, 83, 84, 86, 94, 104, 107, 110, 113, 114, 121, 122, 130, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 156, 157, 159, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 178, 179, 181, 182, 185, 186, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 217, 218, 219, 220, 225, 228, 229, 230, 231, 233, 236, 238, 242, 243, 251, 260, 261, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 291, 299, 300, 307, 308, 331, 356, 360, 362, 367, 369, 373, 405, 406, 412, 413, 415, 417, 418, 420, 421, 425, 430, 432, 443, 444, 446, 447, 448, 449, 451, 452, 454, 455, 463, 472, 481, 482, 489, 498, 500, 506, 517, 521, 524, 529, 535, 536, 537, 561, 562, 564, 570, 572, 583, 590, 594, 603, 614, 616, 620, 621, 624, 634, 643, 645, 646, 648, 651, 658, 683, 687, 688, 693, 694, 695, 696, 697, 706, 708, 709, 710, 713, 716, 724, 733, 734, 735, 736, 737, 738, 751, 754, 770, 771, 772, 773, 778, 782, 786, 789, 790, 792, 793, 797, 806, 809, 812, 814, 816, 817, 825, 826, 834, 841, 842, 843, 845, 849, 850, 851, 852, 861, 862, 863, 865, 867, 868, 869, 870, 874, 883, 886], "than": [1, 5, 13, 18, 24, 26, 33, 34, 41, 42, 44, 45, 46, 50, 54, 58, 59, 60, 69, 70, 78, 79, 83, 86, 87, 94, 114, 119, 124, 127, 135, 136, 137, 141, 142, 143, 144, 145, 147, 150, 151, 152, 157, 159, 162, 167, 168, 169, 170, 171, 172, 173, 177, 181, 182, 184, 185, 186, 189, 192, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 217, 218, 219, 228, 231, 241, 243, 261, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 291, 307, 308, 355, 360, 367, 413, 415, 418, 420, 424, 430, 432, 442, 447, 449, 451, 452, 454, 457, 469, 478, 479, 481, 482, 498, 500, 506, 517, 527, 535, 536, 546, 551, 553, 555, 561, 562, 564, 570, 572, 577, 579, 589, 592, 593, 595, 599, 602, 620, 625, 646, 655, 687, 693, 694, 695, 696, 697, 698, 701, 706, 708, 709, 710, 713, 716, 721, 724, 729, 735, 738, 754, 771, 772, 784, 786, 787, 790, 793, 797, 806, 807, 809, 812, 814, 816, 817, 843, 845, 850, 851, 852, 867, 868, 886], "one": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 31, 32, 33, 34, 40, 41, 42, 43, 45, 46, 48, 49, 50, 58, 59, 65, 68, 70, 73, 74, 76, 79, 82, 83, 84, 86, 87, 88, 90, 94, 96, 97, 99, 103, 109, 111, 113, 114, 115, 117, 121, 127, 131, 133, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 167, 168, 169, 170, 173, 177, 178, 179, 180, 181, 182, 183, 185, 189, 190, 192, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 217, 218, 219, 220, 223, 225, 228, 230, 231, 232, 233, 237, 242, 243, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 288, 291, 299, 300, 313, 314, 316, 320, 321, 323, 355, 357, 358, 360, 362, 363, 367, 382, 391, 394, 396, 405, 406, 412, 413, 419, 420, 423, 426, 428, 432, 435, 436, 437, 444, 445, 447, 448, 454, 463, 470, 471, 472, 479, 480, 481, 482, 485, 489, 498, 500, 514, 515, 517, 519, 524, 538, 539, 545, 546, 548, 551, 562, 563, 564, 565, 579, 584, 587, 588, 589, 591, 602, 605, 614, 616, 624, 625, 631, 643, 645, 651, 655, 658, 672, 677, 687, 688, 693, 694, 695, 696, 697, 699, 702, 706, 707, 708, 709, 710, 712, 715, 722, 732, 733, 734, 736, 737, 739, 742, 743, 744, 754, 767, 770, 772, 773, 778, 785, 786, 788, 789, 790, 791, 793, 794, 795, 797, 799, 812, 813, 815, 816, 817, 818, 832, 834, 841, 843, 844, 845, 848, 849, 853, 861, 862, 863, 865, 867, 868, 871, 886], "make": [1, 4, 9, 10, 13, 18, 19, 21, 27, 28, 31, 32, 34, 38, 42, 45, 48, 50, 54, 55, 59, 61, 67, 70, 75, 86, 90, 93, 94, 103, 109, 111, 112, 113, 114, 122, 124, 130, 133, 135, 136, 137, 141, 142, 143, 144, 145, 151, 152, 157, 159, 161, 162, 163, 167, 168, 170, 171, 172, 173, 177, 178, 179, 180, 181, 183, 184, 185, 186, 189, 190, 192, 193, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 214, 217, 219, 223, 228, 230, 231, 232, 236, 237, 238, 243, 258, 265, 266, 267, 268, 269, 271, 273, 274, 277, 279, 280, 281, 282, 299, 300, 327, 339, 356, 360, 361, 362, 367, 371, 372, 373, 374, 413, 416, 417, 420, 422, 423, 432, 436, 437, 448, 449, 451, 452, 456, 457, 463, 470, 472, 476, 478, 479, 481, 482, 523, 540, 546, 555, 561, 562, 572, 589, 590, 593, 602, 612, 614, 624, 634, 643, 645, 658, 670, 701, 703, 707, 722, 732, 733, 734, 736, 741, 749, 750, 754, 772, 773, 776, 777, 780, 791, 794, 800, 807, 812, 817, 818, 834, 841, 843, 844, 852, 853, 861, 862, 863, 865, 866, 868, 871, 874, 886], "topographi": [1, 13, 21, 27, 70, 71, 74, 86, 114, 120, 122, 130, 132, 143, 145, 152, 167, 171, 173, 177, 192, 206, 208, 209, 220, 231, 233, 241, 246, 266, 267, 268, 269, 271, 275, 276, 315, 413, 420, 481, 482, 559, 562, 578, 671, 706, 708, 710, 767, 786, 791, 792, 793, 797, 799, 803, 808, 810, 814, 815, 841, 886], "disabl": [1, 86, 114, 143, 150, 151, 152, 173, 200, 201, 204, 220, 231, 258, 263, 266, 267, 268, 269, 275, 276, 310, 367, 413, 419, 420, 425, 481, 482, 561, 562, 583, 594, 649, 653, 706, 708, 710, 749, 754, 771, 786, 788, 792, 793, 797, 806, 807, 809, 814, 816, 820, 843, 886], "interact": [1, 27, 33, 45, 47, 86, 114, 115, 120, 127, 135, 141, 150, 151, 152, 166, 167, 169, 173, 181, 182, 192, 201, 202, 206, 207, 208, 212, 217, 225, 228, 231, 232, 238, 242, 243, 246, 258, 263, 266, 267, 268, 269, 273, 274, 275, 276, 277, 280, 281, 282, 292, 299, 413, 420, 472, 481, 482, 529, 561, 562, 602, 687, 689, 706, 708, 710, 754, 756, 770, 771, 775, 785, 786, 788, 789, 790, 792, 793, 797, 799, 801, 806, 807, 808, 809, 810, 812, 814, 815, 816, 817, 843, 845, 867, 868, 869, 874, 886], "filter": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 27, 32, 33, 34, 42, 45, 59, 68, 72, 73, 76, 77, 82, 83, 84, 85, 88, 92, 99, 109, 112, 113, 115, 121, 133, 137, 141, 142, 145, 146, 147, 150, 163, 166, 167, 168, 170, 173, 177, 182, 184, 185, 186, 192, 196, 200, 202, 205, 208, 212, 215, 216, 217, 219, 220, 225, 233, 243, 246, 258, 261, 264, 265, 266, 267, 268, 269, 271, 273, 274, 276, 277, 280, 281, 282, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 349, 350, 353, 356, 360, 361, 371, 372, 373, 377, 413, 414, 415, 417, 420, 421, 424, 427, 428, 429, 431, 434, 442, 454, 456, 457, 476, 478, 479, 481, 482, 494, 523, 540, 559, 562, 563, 567, 573, 574, 575, 579, 580, 583, 584, 585, 594, 595, 598, 621, 660, 670, 706, 708, 709, 710, 718, 719, 722, 725, 794, 795, 796, 802, 807, 808, 826, 841, 843, 845, 861, 863, 865, 872, 875, 876, 886], "contigu": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 34, 42, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 197, 204, 205, 206, 208, 211, 212, 213, 232, 233, 272], "segment": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 23, 24, 27, 33, 34, 38, 42, 63, 70, 73, 76, 81, 82, 83, 84, 88, 99, 109, 113, 114, 115, 121, 133, 135, 136, 137, 138, 142, 145, 146, 147, 152, 163, 169, 173, 185, 192, 197, 202, 204, 205, 206, 207, 208, 210, 211, 212, 213, 219, 233, 242, 246, 258, 260, 264, 266, 267, 268, 269, 276, 279, 305, 356, 361, 442, 465, 466, 467, 480, 481, 482, 510, 522, 530, 532, 562, 564, 565, 566, 567, 568, 569, 572, 579, 580, 583, 584, 592, 594, 706, 725, 752, 754, 788, 790, 797, 799, 841, 861, 862, 868, 871, 886], "up": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 26, 27, 28, 33, 34, 42, 44, 45, 50, 69, 72, 73, 76, 79, 80, 82, 83, 84, 88, 90, 93, 94, 95, 99, 103, 104, 109, 111, 112, 113, 114, 115, 117, 121, 123, 132, 133, 135, 137, 141, 142, 145, 146, 147, 151, 152, 156, 157, 159, 160, 161, 163, 166, 167, 173, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 217, 219, 220, 224, 225, 229, 230, 233, 236, 238, 243, 263, 264, 266, 267, 268, 269, 273, 274, 275, 276, 277, 278, 280, 281, 282, 413, 418, 419, 420, 425, 453, 481, 482, 535, 536, 561, 562, 564, 583, 649, 654, 655, 692, 701, 706, 708, 710, 724, 752, 754, 773, 782, 784, 785, 786, 790, 793, 797, 800, 806, 807, 809, 812, 814, 817, 818, 824, 841, 843, 849, 865, 868, 869, 871, 874, 886], "band": [1, 5, 8, 9, 12, 13, 14, 15, 16, 18, 21, 27, 32, 33, 34, 42, 72, 76, 82, 88, 94, 105, 106, 107, 109, 110, 112, 114, 115, 121, 126, 133, 137, 138, 142, 143, 145, 146, 147, 168, 173, 197, 200, 202, 203, 204, 205, 206, 208, 212, 213, 220, 232, 233, 241, 242, 243, 246, 266, 267, 268, 269, 289, 415, 421, 424, 448, 449, 451, 452, 454, 481, 482, 545, 567, 598, 685, 708, 710, 722, 732, 733, 736, 778, 786, 802, 841, 862, 865, 886], "stop": [1, 5, 29, 68, 82, 93, 96, 127, 137, 168, 173, 202, 203, 204, 211, 213, 217, 218, 219, 258, 259, 266, 267, 268, 269, 286, 287, 298, 359, 415, 424, 448, 449, 451, 452, 480, 481, 482, 500, 523, 532, 535, 562, 583, 592, 608, 798, 801, 845, 867, 886], "fir": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 173, 192, 197, 200, 202, 204, 205, 206, 208, 211, 212, 213, 233, 258, 266, 267, 268, 269, 415, 424, 448, 449, 451, 452, 481, 482, 574, 575, 598, 719, 795, 807, 843, 865, 875, 886], "paramet": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 31, 34, 40, 41, 42, 43, 44, 48, 54, 55, 59, 61, 67, 69, 71, 72, 73, 75, 76, 82, 83, 84, 88, 96, 97, 99, 100, 101, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 120, 121, 123, 128, 132, 133, 137, 138, 141, 142, 143, 145, 146, 147, 150, 151, 152, 157, 159, 160, 162, 163, 167, 169, 170, 171, 172, 173, 176, 179, 181, 189, 192, 193, 196, 197, 200, 201, 203, 204, 205, 206, 207, 208, 211, 212, 213, 217, 218, 219, 220, 223, 224, 225, 228, 231, 241, 242, 243, 246, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 762, 763, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 845, 861, 863, 865, 868, 872, 886], "design": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 60, 72, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 161, 162, 173, 181, 189, 191, 192, 200, 202, 204, 205, 206, 208, 209, 211, 212, 213, 225, 228, 233, 246, 259, 266, 267, 268, 269, 344, 389, 392, 415, 424, 448, 449, 451, 452, 481, 482, 489, 491, 493, 496, 497, 498, 504, 508, 561, 563, 594, 601, 608, 618, 687, 691, 718, 729, 807, 825, 826, 850, 862, 865, 867, 874, 886], "pass": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 34, 42, 43, 59, 72, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 135, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 156, 157, 159, 167, 168, 169, 170, 171, 172, 173, 181, 184, 190, 192, 193, 197, 200, 201, 202, 204, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 228, 230, 232, 233, 236, 237, 238, 241, 242, 246, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 320, 324, 325, 331, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 426, 429, 430, 432, 434, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 464, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 555, 558, 561, 562, 563, 564, 565, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 597, 598, 601, 602, 603, 606, 607, 608, 609, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 626, 628, 629, 630, 631, 632, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 651, 653, 654, 655, 657, 658, 659, 660, 669, 670, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 686, 693, 694, 695, 696, 697, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 724, 725, 728, 729, 733, 734, 736, 737, 738, 739, 742, 743, 744, 749, 753, 754, 755, 762, 767, 770, 771, 774, 776, 778, 779, 780, 782, 784, 785, 786, 787, 788, 789, 791, 792, 793, 794, 797, 798, 799, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 845, 849, 850, 861, 863, 865, 868, 886], "zero": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 24, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 63, 70, 72, 73, 74, 76, 82, 83, 84, 88, 90, 93, 94, 95, 99, 109, 112, 113, 114, 115, 120, 121, 133, 137, 141, 142, 143, 145, 147, 150, 152, 153, 159, 161, 163, 167, 169, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 192, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 223, 224, 225, 228, 232, 233, 243, 259, 260, 261, 264, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 280, 281, 282, 283, 285, 299, 300, 356, 360, 362, 371, 415, 419, 424, 425, 426, 447, 448, 449, 451, 452, 453, 454, 476, 481, 482, 483, 494, 535, 546, 562, 563, 584, 608, 621, 657, 658, 659, 667, 671, 686, 693, 694, 696, 697, 701, 702, 706, 708, 709, 710, 722, 725, 732, 733, 734, 735, 736, 738, 754, 769, 773, 783, 784, 807, 812, 817, 818, 841, 845, 861, 868, 871, 886], "phase": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 34, 42, 72, 73, 76, 82, 83, 84, 88, 99, 105, 106, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 168, 173, 191, 192, 197, 200, 202, 203, 204, 205, 206, 208, 211, 212, 213, 225, 233, 243, 246, 266, 267, 268, 269, 271, 272, 273, 274, 277, 280, 281, 282, 292, 343, 373, 415, 424, 426, 447, 448, 449, 451, 452, 454, 481, 482, 528, 533, 543, 546, 559, 562, 628, 733, 734, 744, 795, 841, 852, 862, 886], "non": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 34, 40, 41, 42, 46, 50, 59, 70, 72, 73, 76, 82, 83, 84, 88, 93, 99, 109, 113, 114, 115, 121, 133, 137, 142, 143, 144, 145, 147, 151, 152, 159, 166, 167, 170, 172, 173, 176, 181, 182, 186, 190, 191, 192, 197, 200, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 217, 223, 233, 234, 235, 246, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 280, 281, 282, 288, 299, 300, 320, 355, 356, 360, 362, 413, 419, 420, 421, 425, 442, 448, 449, 451, 452, 454, 479, 481, 482, 497, 535, 542, 548, 559, 561, 562, 563, 576, 577, 594, 595, 612, 618, 621, 641, 667, 685, 686, 693, 694, 696, 697, 701, 702, 706, 708, 709, 710, 736, 744, 754, 771, 782, 785, 786, 793, 797, 806, 809, 813, 814, 816, 841, 843, 845, 854, 861, 865, 867, 868, 883, 886], "causal": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 173, 192, 197, 200, 202, 203, 204, 205, 206, 208, 211, 212, 213, 233, 266, 267, 268, 269, 419, 448, 449, 451, 452, 481, 482], "bandstop": [1, 5, 82, 137, 204, 213, 481, 482, 807], "domain": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 46, 72, 73, 76, 82, 83, 84, 88, 99, 103, 113, 114, 115, 121, 133, 135, 137, 142, 145, 147, 152, 166, 167, 173, 192, 197, 200, 202, 203, 204, 205, 208, 211, 212, 213, 220, 233, 243, 244, 245, 246, 258, 266, 267, 268, 269, 415, 424, 425, 449, 451, 452, 453, 454, 481, 482, 545, 546, 655, 708, 710, 742, 749, 867, 886], "ham": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 192, 197, 203, 204, 205, 206, 208, 211, 212, 213, 233, 266, 267, 268, 269, 415, 424, 449, 451, 452, 481, 482, 725, 808, 886], "0194": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 192, 197, 203, 204, 205, 206, 211, 212, 213, 233], "passband": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 173, 192, 197, 200, 202, 204, 205, 206, 208, 211, 212, 213, 233, 861], "rippl": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 192, 197, 204, 205, 206, 211, 212, 213, 233], "db": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 82, 83, 84, 88, 99, 108, 109, 113, 114, 115, 121, 129, 133, 137, 138, 142, 143, 145, 147, 152, 170, 173, 192, 197, 200, 202, 203, 204, 205, 206, 208, 211, 212, 213, 217, 220, 223, 225, 233, 241, 242, 243, 266, 267, 268, 269, 271, 313, 314, 373, 375, 446, 449, 481, 482, 496, 508, 535, 559, 560, 562, 651, 701, 706, 708, 709, 710, 754, 770, 786, 795, 799, 802, 808, 810, 841, 868, 886], "stopband": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 192, 197, 204, 205, 206, 211, 212, 213, 233], "attenu": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 163, 192, 197, 204, 205, 206, 211, 212, 213, 233, 266, 267, 268, 269, 415, 424, 449, 451, 452, 481, 482, 868, 886], "lower": [1, 2, 5, 8, 9, 10, 12, 13, 14, 15, 16, 18, 21, 22, 34, 37, 40, 42, 49, 54, 55, 61, 70, 72, 73, 76, 82, 83, 88, 99, 107, 112, 113, 114, 115, 120, 121, 127, 133, 135, 137, 142, 143, 145, 147, 152, 157, 161, 173, 181, 182, 185, 193, 197, 200, 202, 203, 204, 205, 206, 207, 208, 212, 213, 220, 230, 231, 232, 233, 236, 238, 243, 261, 263, 266, 267, 268, 269, 273, 274, 275, 277, 280, 281, 282, 413, 415, 418, 420, 439, 449, 451, 481, 482, 522, 535, 536, 561, 562, 567, 572, 577, 598, 617, 685, 692, 693, 695, 696, 706, 707, 708, 710, 724, 725, 771, 773, 778, 785, 786, 792, 793, 797, 806, 807, 808, 809, 812, 814, 816, 817, 818, 841, 843, 886], "transit": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 173, 192, 197, 200, 202, 204, 205, 206, 208, 211, 212, 213, 233, 259, 266, 267, 268, 269, 415, 424, 449, 451, 452, 481, 482, 564, 598, 820, 868, 886], "bandwidth": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 82, 83, 84, 88, 99, 104, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 173, 192, 197, 200, 202, 204, 205, 206, 208, 211, 212, 213, 233, 243, 266, 267, 268, 269, 418, 426, 452, 481, 482, 535, 536, 708, 710, 713, 716, 718, 724, 734, 737, 786, 886], "50": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 28, 34, 35, 41, 42, 45, 46, 47, 65, 72, 76, 81, 82, 83, 84, 88, 90, 95, 96, 99, 103, 108, 109, 112, 113, 114, 115, 120, 121, 133, 136, 137, 138, 144, 145, 147, 150, 152, 159, 161, 167, 169, 170, 171, 172, 173, 179, 181, 185, 186, 190, 192, 196, 197, 200, 202, 203, 204, 205, 206, 208, 210, 213, 216, 217, 218, 219, 225, 228, 229, 230, 232, 233, 236, 237, 238, 243, 246, 258, 337, 448, 481, 482, 544, 571, 663, 668, 686, 694, 754, 802, 861, 868, 886], "hz": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 34, 42, 68, 71, 72, 73, 76, 81, 82, 83, 84, 88, 90, 93, 94, 95, 99, 104, 107, 108, 109, 113, 114, 115, 121, 123, 127, 133, 137, 138, 142, 143, 145, 147, 152, 167, 168, 169, 170, 173, 181, 184, 185, 190, 191, 192, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 230, 231, 232, 233, 241, 242, 246, 258, 266, 267, 268, 269, 415, 418, 424, 448, 449, 451, 452, 454, 481, 482, 535, 536, 562, 567, 570, 574, 575, 583, 585, 588, 594, 598, 672, 692, 706, 708, 709, 710, 713, 716, 722, 724, 730, 732, 733, 734, 736, 737, 784, 786, 795, 802, 807, 808, 862, 871, 872], "upper": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 34, 39, 42, 61, 70, 72, 76, 82, 84, 88, 113, 114, 115, 120, 121, 127, 133, 135, 137, 142, 143, 145, 147, 160, 167, 173, 192, 197, 200, 202, 203, 204, 205, 206, 208, 211, 212, 213, 233, 242, 243, 246, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 277, 280, 281, 282, 284, 413, 415, 418, 420, 439, 449, 451, 457, 481, 482, 535, 536, 561, 562, 567, 598, 685, 692, 693, 694, 695, 696, 697, 706, 707, 708, 709, 710, 722, 724, 725, 732, 771, 773, 778, 786, 792, 793, 797, 806, 808, 809, 812, 814, 816, 817, 818, 886], "7921": 1, "601": [1, 5, 141, 150, 200, 205, 217, 219, 222, 233], "parallel": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 31, 32, 33, 34, 41, 42, 45, 50, 65, 72, 73, 76, 78, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 137, 142, 145, 147, 151, 152, 159, 160, 167, 173, 177, 182, 183, 184, 185, 186, 192, 197, 200, 201, 202, 204, 205, 206, 208, 209, 211, 212, 213, 223, 225, 230, 231, 232, 233, 242, 246, 258, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 284, 356, 357, 359, 361, 415, 416, 418, 419, 423, 424, 426, 429, 430, 451, 452, 453, 456, 458, 469, 471, 476, 478, 479, 481, 482, 521, 524, 525, 535, 536, 540, 545, 546, 567, 574, 575, 602, 646, 649, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 738, 786, 789, 808, 853, 865, 868, 874, 886], "n_job": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 82, 83, 84, 87, 88, 90, 95, 96, 99, 100, 103, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 137, 142, 145, 147, 151, 152, 159, 160, 167, 173, 177, 182, 183, 184, 185, 186, 192, 197, 200, 201, 202, 204, 205, 206, 208, 209, 211, 212, 213, 223, 225, 228, 230, 231, 232, 233, 236, 237, 238, 242, 258, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 284, 356, 357, 359, 361, 415, 416, 418, 419, 423, 424, 425, 426, 429, 430, 451, 452, 453, 456, 469, 471, 481, 482, 521, 524, 525, 535, 536, 545, 546, 567, 574, 575, 646, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 738, 786, 789, 808, 843, 865, 886], "backend": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 79, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 135, 137, 142, 145, 147, 151, 152, 157, 159, 160, 161, 167, 172, 173, 177, 182, 183, 184, 185, 186, 192, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 223, 225, 230, 231, 232, 233, 242, 266, 267, 273, 274, 277, 280, 281, 282, 472, 481, 482, 562, 754, 761, 763, 764, 765, 766, 784, 801, 807, 812, 817, 819, 823, 824, 825, 826, 843, 844, 849, 865, 874, 886], "sequentialbackend": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 137, 142, 145, 147, 151, 152, 159, 160, 167, 173, 177, 182, 183, 184, 185, 186, 192, 197, 200, 201, 202, 204, 205, 206, 208, 209, 211, 212, 213, 223, 225, 230, 231, 232, 233, 242], "concurr": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 137, 142, 145, 147, 151, 152, 159, 160, 167, 173, 177, 182, 183, 184, 185, 186, 192, 197, 200, 201, 202, 204, 205, 206, 208, 209, 211, 212, 213, 223, 225, 230, 231, 232, 233, 242], "worker": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 137, 142, 145, 147, 151, 152, 159, 160, 167, 173, 177, 182, 183, 184, 185, 186, 192, 197, 200, 201, 202, 204, 205, 206, 208, 209, 211, 212, 213, 223, 225, 230, 231, 232, 233, 242, 874], "done": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 68, 70, 72, 73, 76, 78, 79, 80, 82, 83, 84, 87, 88, 90, 92, 93, 94, 95, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 119, 121, 124, 131, 133, 134, 135, 136, 137, 141, 142, 144, 145, 147, 151, 152, 156, 157, 159, 160, 161, 162, 163, 167, 168, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 217, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 242, 243, 259, 264, 265, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 299, 300, 322, 361, 426, 476, 478, 479, 481, 482, 529, 531, 532, 533, 562, 574, 575, 578, 580, 692, 706, 707, 709, 731, 733, 734, 736, 737, 752, 754, 757, 770, 778, 808, 841, 845, 850, 851, 861, 865, 867, 868, 874, 886], "out": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 68, 70, 72, 73, 74, 76, 78, 80, 82, 83, 84, 87, 88, 90, 92, 94, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 120, 121, 123, 124, 127, 131, 133, 135, 137, 138, 141, 142, 144, 145, 147, 151, 152, 157, 159, 160, 161, 167, 168, 171, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 192, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 220, 223, 225, 228, 230, 231, 232, 233, 242, 243, 258, 263, 266, 267, 268, 269, 271, 275, 290, 304, 340, 357, 358, 359, 413, 415, 420, 424, 449, 451, 481, 482, 489, 505, 528, 536, 561, 562, 563, 577, 602, 608, 610, 698, 706, 708, 710, 733, 734, 741, 771, 778, 786, 790, 793, 797, 798, 806, 809, 814, 816, 843, 844, 845, 851, 862, 863, 865, 868, 871, 872, 886], "elaps": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 137, 142, 145, 147, 151, 152, 159, 160, 167, 173, 177, 182, 183, 184, 185, 186, 192, 197, 200, 201, 202, 204, 205, 206, 208, 209, 211, 212, 213, 223, 225, 230, 231, 232, 233, 242], "remain": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 68, 72, 73, 75, 76, 78, 82, 83, 84, 87, 88, 90, 92, 94, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 131, 133, 137, 138, 142, 145, 147, 151, 152, 157, 159, 160, 167, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 223, 225, 230, 231, 232, 233, 242, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 436, 456, 457, 476, 478, 479, 481, 482, 483, 540, 562, 647, 694, 706, 708, 709, 733, 734, 736, 737, 794, 853, 861, 871, 874, 886], "299": [1, 5, 34, 112, 141, 170, 185, 196, 241], "7": [1, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 28, 30, 32, 33, 34, 35, 40, 41, 42, 44, 45, 46, 47, 49, 50, 55, 56, 59, 60, 61, 64, 65, 68, 70, 71, 73, 74, 76, 80, 81, 83, 88, 91, 94, 97, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 120, 124, 127, 128, 130, 131, 135, 137, 138, 141, 143, 144, 145, 146, 147, 150, 151, 152, 157, 159, 160, 161, 165, 167, 170, 171, 172, 173, 175, 177, 180, 181, 182, 183, 184, 185, 186, 188, 192, 196, 197, 199, 200, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 217, 218, 219, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 240, 241, 242, 243, 246, 257, 264, 265, 266, 267, 268, 269, 273, 274, 277, 279, 280, 281, 282, 316, 337, 356, 382, 391, 405, 412, 424, 426, 454, 473, 478, 481, 482, 562, 567, 583, 592, 594, 598, 612, 646, 647, 672, 686, 687, 688, 706, 709, 710, 712, 715, 722, 732, 733, 734, 736, 737, 754, 785, 790, 799, 812, 813, 817, 843, 844, 851, 860, 862, 868, 871], "finish": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 82, 83, 84, 87, 88, 90, 95, 99, 100, 107, 109, 110, 112, 113, 114, 115, 119, 121, 124, 133, 135, 137, 142, 145, 147, 151, 152, 159, 160, 167, 173, 177, 182, 183, 184, 185, 186, 192, 197, 200, 201, 202, 204, 205, 206, 208, 209, 211, 212, 213, 219, 223, 225, 230, 231, 232, 233, 242, 863, 886], "66": [1, 12, 13, 16, 19, 21, 35, 40, 41, 45, 50, 79, 81, 103, 108, 112, 114, 145, 147, 159, 170, 177, 182, 185, 192, 197, 206, 210, 228, 229, 232, 233, 246, 268, 269, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 540, 562, 794, 886], "id": [1, 5, 12, 21, 32, 33, 34, 42, 45, 46, 49, 69, 71, 72, 73, 80, 81, 82, 90, 93, 94, 95, 99, 107, 108, 110, 112, 113, 141, 142, 143, 147, 150, 153, 163, 167, 169, 170, 172, 173, 178, 181, 183, 184, 186, 192, 197, 201, 204, 205, 206, 208, 213, 214, 223, 224, 225, 230, 242, 258, 261, 266, 267, 268, 271, 273, 274, 277, 279, 280, 281, 282, 285, 299, 300, 315, 356, 370, 378, 429, 435, 437, 439, 441, 442, 454, 466, 481, 482, 522, 523, 527, 557, 563, 574, 575, 586, 611, 618, 620, 621, 627, 655, 708, 709, 754, 787, 807, 812, 817, 831, 845, 865, 868, 886], "Not": [1, 8, 9, 11, 12, 16, 18, 21, 28, 32, 33, 34, 45, 46, 49, 61, 69, 71, 72, 73, 74, 76, 80, 81, 82, 83, 88, 90, 93, 94, 95, 96, 97, 100, 103, 104, 107, 108, 109, 110, 112, 113, 114, 117, 121, 127, 128, 132, 136, 137, 138, 141, 142, 143, 144, 146, 147, 150, 152, 153, 167, 168, 169, 170, 173, 178, 181, 183, 184, 185, 186, 192, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 230, 231, 232, 233, 236, 238, 242, 268, 269, 274, 280, 281, 282, 421, 424, 448, 457, 563, 706, 754, 790, 818, 844, 868, 874], "metadata": [1, 4, 8, 9, 11, 12, 16, 18, 21, 28, 32, 33, 34, 45, 46, 49, 61, 69, 71, 72, 73, 74, 80, 83, 88, 90, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 117, 121, 128, 132, 136, 137, 138, 141, 142, 143, 146, 147, 148, 149, 150, 152, 153, 162, 166, 167, 173, 178, 181, 183, 184, 185, 186, 189, 190, 191, 192, 200, 201, 202, 204, 205, 206, 208, 212, 214, 217, 223, 224, 225, 229, 230, 231, 232, 233, 236, 238, 241, 242, 260, 261, 266, 267, 268, 269, 270, 271, 355, 437, 442, 481, 482, 487, 617, 637, 706, 708, 709, 710, 778, 841, 862, 886], "33": [1, 8, 12, 13, 19, 21, 28, 33, 34, 35, 39, 40, 41, 45, 47, 54, 56, 76, 79, 81, 103, 104, 108, 109, 112, 114, 115, 138, 140, 142, 145, 152, 170, 171, 184, 197, 203, 204, 206, 210, 216, 228, 229, 230, 231, 232, 233, 237, 238, 266, 267, 268, 269, 337, 454, 481, 482, 526, 808, 868, 886], "interv": [1, 10, 11, 28, 32, 33, 34, 38, 45, 46, 49, 61, 69, 70, 71, 72, 80, 83, 90, 93, 94, 95, 96, 97, 100, 103, 104, 107, 110, 112, 113, 117, 127, 128, 132, 141, 143, 145, 146, 150, 151, 152, 153, 167, 173, 177, 178, 179, 181, 183, 184, 185, 186, 192, 201, 202, 204, 205, 208, 211, 212, 214, 224, 225, 230, 231, 232, 236, 238, 242, 258, 260, 261, 264, 265, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 289, 348, 361, 437, 535, 545, 546, 562, 579, 580, 586, 624, 625, 656, 658, 683, 685, 706, 708, 709, 710, 719, 778, 799, 814, 862, 872, 886], "mode": [1, 5, 11, 22, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46, 47, 49, 51, 57, 58, 59, 60, 61, 69, 71, 72, 73, 78, 80, 86, 87, 93, 94, 95, 96, 97, 100, 103, 104, 107, 110, 112, 113, 114, 117, 119, 120, 127, 128, 131, 132, 137, 141, 142, 143, 145, 146, 150, 152, 153, 159, 162, 167, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 192, 193, 197, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 214, 219, 220, 224, 230, 231, 232, 233, 236, 238, 242, 243, 246, 258, 263, 264, 266, 267, 268, 269, 273, 274, 275, 276, 277, 280, 281, 282, 289, 299, 300, 343, 356, 360, 361, 362, 366, 367, 371, 372, 373, 412, 413, 419, 420, 447, 451, 452, 453, 472, 476, 481, 482, 521, 538, 539, 561, 562, 586, 594, 647, 669, 672, 701, 706, 707, 708, 709, 710, 731, 754, 780, 782, 784, 785, 786, 790, 793, 796, 797, 801, 806, 807, 808, 809, 812, 813, 814, 817, 818, 823, 845, 853, 874, 886], "mean": [1, 4, 8, 9, 10, 11, 14, 16, 19, 21, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 78, 80, 84, 86, 87, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 110, 112, 113, 114, 117, 119, 120, 127, 128, 132, 138, 141, 142, 143, 144, 145, 146, 150, 151, 153, 157, 158, 159, 161, 167, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 197, 200, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 217, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 238, 241, 242, 243, 260, 261, 263, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 279, 280, 281, 282, 289, 292, 299, 300, 316, 320, 356, 361, 413, 419, 420, 422, 425, 434, 446, 447, 455, 472, 476, 478, 479, 481, 482, 483, 489, 496, 504, 515, 521, 529, 535, 538, 539, 540, 545, 546, 561, 562, 566, 569, 572, 573, 577, 579, 583, 585, 592, 594, 603, 611, 624, 625, 651, 658, 659, 660, 669, 670, 672, 685, 688, 693, 694, 695, 696, 697, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 722, 725, 732, 733, 734, 736, 737, 754, 778, 780, 784, 785, 786, 788, 793, 797, 806, 807, 808, 809, 812, 814, 816, 845, 850, 865, 867, 868, 871, 886], "activ": [1, 4, 5, 8, 11, 12, 16, 18, 19, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 68, 69, 70, 71, 72, 73, 74, 76, 78, 80, 82, 83, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 122, 124, 130, 132, 134, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 159, 160, 163, 167, 168, 169, 173, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 190, 192, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 217, 218, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 242, 246, 259, 261, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 299, 300, 326, 350, 439, 442, 447, 454, 456, 460, 476, 478, 479, 480, 481, 482, 486, 497, 502, 515, 518, 528, 529, 530, 531, 532, 533, 540, 543, 559, 567, 578, 598, 624, 626, 628, 629, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 671, 678, 681, 698, 701, 706, 708, 709, 710, 722, 732, 733, 736, 763, 773, 775, 782, 813, 818, 841, 843, 844, 845, 846, 848, 849, 852, 853, 861, 862, 865, 867, 868, 871, 874, 886], "projector": [1, 2, 4, 5, 8, 9, 16, 18, 21, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 68, 69, 71, 73, 76, 83, 90, 92, 93, 94, 99, 101, 103, 109, 119, 121, 127, 132, 141, 142, 147, 150, 151, 152, 153, 163, 166, 167, 168, 169, 170, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 197, 200, 201, 204, 205, 206, 212, 213, 215, 216, 217, 224, 225, 229, 230, 231, 232, 233, 236, 238, 258, 266, 267, 268, 269, 271, 275, 276, 299, 300, 356, 357, 358, 359, 360, 361, 371, 372, 373, 413, 420, 443, 444, 445, 446, 456, 457, 476, 478, 479, 481, 482, 502, 540, 562, 574, 575, 576, 594, 624, 632, 651, 707, 711, 712, 713, 714, 715, 716, 717, 784, 794, 801, 805, 806, 807, 826, 841, 861, 863, 865, 868, 886], "n_channel": [1, 16, 18, 19, 28, 31, 35, 42, 51, 58, 59, 63, 65, 67, 69, 70, 71, 74, 75, 76, 81, 83, 84, 90, 99, 103, 114, 119, 127, 132, 141, 142, 143, 144, 150, 151, 152, 160, 163, 167, 168, 169, 173, 177, 178, 181, 182, 183, 191, 197, 200, 201, 204, 205, 206, 207, 208, 209, 212, 217, 220, 223, 225, 230, 231, 232, 233, 236, 238, 243, 258, 261, 263, 265, 266, 267, 268, 269, 270, 271, 299, 300, 315, 316, 320, 331, 371, 413, 414, 415, 418, 419, 420, 421, 422, 424, 426, 427, 429, 451, 452, 481, 482, 561, 562, 563, 567, 570, 674, 691, 692, 706, 707, 708, 709, 710, 711, 712, 713, 733, 734, 735, 771, 774, 778, 784, 785, 786, 793, 807, 809, 814, 816, 824, 841, 886], "No": [1, 2, 4, 5, 8, 9, 12, 16, 18, 21, 34, 41, 46, 48, 50, 54, 55, 74, 80, 83, 88, 90, 101, 108, 109, 112, 113, 114, 116, 117, 121, 127, 128, 136, 137, 138, 141, 142, 143, 144, 147, 150, 152, 157, 167, 172, 173, 179, 185, 186, 191, 192, 197, 200, 203, 205, 206, 208, 211, 212, 213, 223, 225, 228, 229, 233, 242, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 389, 414, 429, 476, 478, 479, 481, 482, 529, 531, 532, 533, 670, 808, 844, 845, 862, 867, 871], "gradiomet": [1, 22, 32, 34, 35, 46, 59, 71, 73, 76, 80, 82, 87, 93, 100, 103, 108, 109, 110, 111, 113, 117, 119, 120, 143, 146, 147, 151, 163, 167, 168, 169, 170, 181, 184, 185, 189, 192, 200, 201, 202, 204, 206, 207, 208, 210, 211, 217, 218, 219, 220, 223, 225, 228, 230, 231, 232, 242, 258, 261, 263, 266, 267, 268, 269, 273, 274, 275, 277, 280, 281, 282, 299, 300, 356, 357, 358, 359, 360, 361, 371, 372, 373, 413, 420, 434, 456, 457, 476, 478, 479, 481, 482, 518, 540, 559, 560, 561, 562, 572, 573, 574, 575, 577, 578, 579, 580, 583, 594, 605, 692, 706, 708, 709, 710, 771, 777, 778, 784, 785, 786, 788, 790, 792, 793, 794, 797, 806, 807, 809, 814, 815, 816, 841, 861, 865, 868, 871, 886], "forc": [1, 4, 147, 162, 167, 179, 192, 202, 258, 266, 267, 268, 269, 310, 321, 366, 377, 379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 481, 482, 506, 529, 620, 706, 708, 709, 710, 754, 843, 845, 862, 886], "n_grad": [1, 192, 208, 258, 357, 358, 359, 574, 575], "n_eeg": [1, 147, 192, 208, 258, 357, 358, 359, 574, 575], "axial": [1, 33, 47, 82, 84, 92, 109, 111, 131, 136, 143, 147, 161, 173, 181, 184, 192, 200, 207, 208, 228, 264, 281, 282, 754, 772, 782, 868], "100": [1, 2, 5, 10, 11, 13, 16, 19, 22, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 74, 75, 78, 79, 81, 83, 86, 87, 90, 92, 95, 96, 101, 103, 104, 108, 109, 111, 112, 114, 115, 116, 119, 120, 123, 125, 127, 135, 136, 137, 138, 141, 142, 144, 145, 146, 147, 150, 152, 157, 159, 170, 171, 173, 177, 178, 179, 180, 181, 182, 184, 185, 191, 192, 196, 197, 202, 203, 204, 206, 208, 210, 213, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 246, 258, 266, 267, 268, 269, 276, 362, 434, 453, 478, 479, 481, 482, 505, 573, 583, 589, 594, 672, 692, 708, 710, 735, 738, 744, 754, 784, 802, 807, 862, 867, 871, 886], "pca": [1, 5, 11, 13, 15, 16, 17, 18, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 68, 69, 71, 72, 73, 74, 76, 78, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 133, 141, 142, 143, 147, 150, 151, 152, 153, 157, 158, 159, 161, 163, 167, 168, 169, 170, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 224, 225, 230, 231, 232, 233, 236, 238, 266, 268, 269, 271, 274, 280, 282, 299, 300, 356, 371, 375, 427, 476, 479, 481, 535, 536, 545, 546, 559, 562, 621, 798, 861, 872, 886], "01": [1, 6, 8, 11, 12, 13, 19, 21, 24, 32, 33, 34, 35, 46, 59, 67, 71, 73, 76, 78, 83, 84, 85, 90, 91, 92, 93, 103, 108, 109, 111, 112, 113, 120, 121, 123, 124, 127, 130, 131, 138, 140, 142, 143, 147, 151, 152, 155, 159, 160, 165, 167, 168, 169, 170, 171, 173, 175, 181, 182, 184, 186, 188, 192, 195, 196, 197, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 225, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 242, 243, 245, 246, 257, 258, 260, 266, 267, 343, 345, 349, 382, 405, 406, 421, 481, 482, 492, 577, 583, 586, 592, 599, 603, 701, 862], "02": [1, 2, 5, 11, 13, 19, 20, 33, 34, 35, 56, 63, 66, 67, 82, 84, 85, 92, 103, 108, 109, 111, 114, 120, 123, 126, 130, 131, 137, 143, 147, 149, 151, 158, 161, 165, 171, 173, 175, 181, 184, 196, 197, 203, 207, 208, 209, 210, 212, 214, 219, 228, 229, 230, 232, 233, 235, 237, 238, 243, 246, 257, 258, 266, 267, 323, 476, 479, 481, 482, 492, 722, 732, 733, 735, 736, 738], "creat": [1, 2, 4, 5, 8, 9, 11, 15, 16, 18, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 63, 65, 67, 68, 69, 70, 71, 73, 75, 80, 83, 86, 88, 92, 93, 95, 103, 104, 107, 108, 109, 110, 112, 113, 114, 117, 120, 121, 123, 125, 127, 128, 132, 134, 135, 136, 137, 142, 143, 146, 147, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 193, 197, 200, 201, 202, 203, 204, 206, 207, 214, 217, 220, 225, 226, 227, 229, 231, 233, 236, 238, 241, 242, 260, 261, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 285, 290, 299, 300, 304, 309, 310, 311, 314, 328, 356, 357, 358, 362, 367, 374, 375, 413, 420, 426, 430, 435, 437, 448, 449, 454, 481, 482, 493, 498, 500, 505, 518, 519, 520, 523, 525, 526, 528, 551, 561, 562, 564, 565, 567, 571, 574, 575, 579, 580, 584, 590, 618, 620, 644, 645, 646, 648, 651, 655, 656, 660, 683, 686, 692, 701, 706, 707, 708, 709, 710, 719, 725, 731, 733, 734, 736, 737, 741, 754, 757, 759, 762, 767, 770, 771, 777, 778, 780, 782, 785, 786, 789, 790, 791, 792, 793, 797, 799, 802, 804, 805, 806, 807, 808, 809, 810, 812, 814, 816, 817, 825, 826, 836, 841, 843, 849, 853, 862, 866, 871, 874, 876, 886], "an": [1, 4, 5, 7, 11, 12, 15, 18, 19, 21, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 61, 63, 67, 68, 69, 71, 73, 74, 78, 79, 82, 83, 84, 88, 90, 92, 93, 94, 95, 101, 104, 107, 108, 109, 110, 111, 112, 114, 115, 119, 120, 121, 122, 127, 128, 129, 130, 132, 135, 136, 137, 138, 141, 142, 145, 147, 150, 151, 152, 153, 154, 156, 157, 159, 161, 163, 164, 165, 166, 167, 168, 171, 172, 176, 177, 178, 179, 180, 182, 184, 187, 188, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 232, 233, 236, 237, 238, 241, 242, 244, 245, 246, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 290, 291, 293, 295, 299, 300, 302, 304, 305, 306, 314, 316, 318, 319, 320, 323, 327, 330, 332, 341, 349, 350, 351, 356, 360, 362, 363, 365, 367, 371, 372, 374, 375, 388, 391, 392, 396, 412, 413, 419, 420, 421, 425, 428, 430, 431, 432, 435, 437, 438, 440, 442, 447, 448, 449, 452, 453, 454, 455, 456, 460, 461, 463, 468, 472, 476, 478, 479, 480, 481, 482, 483, 486, 488, 490, 491, 496, 497, 498, 499, 500, 502, 506, 508, 509, 514, 515, 517, 518, 521, 524, 525, 526, 528, 529, 531, 535, 536, 538, 539, 540, 542, 543, 544, 547, 549, 551, 553, 555, 558, 559, 561, 562, 563, 564, 565, 566, 570, 572, 574, 575, 577, 579, 580, 583, 585, 589, 592, 593, 594, 595, 601, 604, 607, 612, 613, 614, 615, 616, 619, 621, 623, 624, 626, 634, 636, 640, 641, 643, 645, 646, 648, 651, 654, 655, 656, 659, 662, 666, 671, 672, 678, 681, 683, 686, 687, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 725, 726, 736, 737, 740, 741, 744, 746, 752, 754, 755, 763, 767, 769, 770, 771, 775, 776, 778, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 820, 822, 824, 832, 833, 834, 841, 843, 844, 845, 849, 850, 851, 852, 857, 862, 863, 864, 865, 867, 868, 869, 871, 872, 874, 886], "oper": [1, 5, 11, 15, 18, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 68, 69, 71, 73, 84, 88, 90, 92, 93, 95, 104, 107, 108, 109, 110, 121, 124, 132, 135, 141, 142, 143, 146, 147, 150, 152, 153, 156, 157, 163, 164, 165, 166, 167, 168, 170, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 192, 197, 201, 202, 203, 204, 206, 207, 208, 211, 217, 224, 225, 230, 231, 233, 236, 238, 246, 259, 260, 263, 266, 267, 268, 269, 270, 271, 272, 276, 277, 279, 280, 284, 286, 287, 299, 300, 302, 304, 314, 318, 319, 330, 336, 349, 355, 375, 376, 383, 391, 414, 419, 422, 429, 434, 435, 438, 451, 452, 453, 454, 458, 459, 460, 476, 477, 478, 479, 481, 482, 483, 489, 496, 500, 515, 524, 525, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 555, 560, 562, 565, 567, 586, 592, 608, 611, 613, 621, 626, 636, 647, 648, 658, 659, 660, 667, 669, 670, 671, 672, 685, 693, 694, 695, 696, 697, 700, 703, 706, 707, 733, 734, 735, 736, 737, 738, 740, 770, 811, 819, 822, 823, 833, 841, 843, 845, 851, 853, 862, 865, 871, 872, 884, 886], "subspac": [1, 11, 15, 18, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 68, 69, 71, 73, 88, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 121, 132, 141, 142, 143, 146, 147, 150, 152, 153, 163, 167, 173, 177, 178, 179, 180, 181, 182, 183, 184, 192, 201, 202, 204, 206, 207, 208, 211, 224, 233, 236, 238, 258, 578, 594, 841], "dimens": [1, 11, 15, 18, 19, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 68, 69, 71, 73, 88, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 121, 127, 132, 141, 142, 143, 146, 147, 150, 152, 153, 161, 163, 167, 173, 177, 178, 179, 180, 181, 182, 183, 184, 192, 196, 197, 201, 202, 204, 206, 207, 208, 210, 224, 225, 228, 230, 231, 232, 233, 236, 237, 238, 242, 243, 246, 263, 266, 267, 268, 269, 273, 274, 275, 276, 277, 279, 280, 281, 282, 289, 315, 362, 413, 416, 419, 420, 423, 424, 426, 428, 452, 453, 476, 478, 479, 481, 482, 535, 536, 538, 539, 545, 546, 561, 562, 577, 686, 687, 691, 693, 694, 696, 697, 706, 708, 709, 710, 724, 725, 735, 744, 754, 763, 771, 786, 793, 797, 806, 807, 809, 814, 816, 841, 861, 868, 871, 886], "fran\u00e7oi": [1, 71, 78, 109, 184, 185, 192, 201, 246, 562, 571, 868], "tadel": [1, 109, 184, 185, 192, 246], "sylvain": [1, 109, 184, 185, 192, 246], "baillet": [1, 109, 184, 185, 192, 246], "john": [1, 18, 19, 51, 68, 83, 109, 126, 179, 181, 184, 185, 192, 246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 390, 391, 417, 419, 431, 476, 481, 482, 529, 540, 562, 578, 598, 663, 668, 706, 709, 862, 868, 886], "c": [1, 4, 10, 11, 12, 19, 22, 44, 51, 70, 74, 96, 109, 112, 115, 121, 126, 135, 138, 162, 172, 177, 181, 184, 185, 189, 192, 196, 197, 207, 213, 230, 231, 232, 233, 243, 246, 258, 259, 272, 277, 278, 279, 302, 337, 340, 356, 362, 390, 405, 406, 419, 420, 454, 457, 476, 481, 482, 519, 525, 537, 562, 570, 576, 603, 621, 666, 671, 735, 738, 754, 843, 844, 845, 849, 850, 852, 857, 860, 861, 862, 868, 869, 871, 874, 875, 886], "mosher": [1, 51, 109, 181, 184, 185, 192, 246, 302, 868], "dimitrio": [1, 10, 109, 184, 185, 192, 246, 862], "pantazi": [1, 10, 109, 184, 185, 192, 246, 862], "richard": [1, 51, 109, 184, 185, 192, 210, 242, 246, 391, 562, 570, 688, 862, 868, 873, 886], "leahi": [1, 51, 109, 184, 185, 192, 246, 302, 868], "user": [1, 45, 75, 79, 94, 109, 135, 143, 157, 166, 168, 172, 173, 184, 185, 190, 191, 192, 202, 203, 217, 246, 259, 261, 266, 267, 268, 269, 270, 271, 273, 274, 277, 279, 280, 281, 282, 379, 380, 381, 382, 384, 385, 386, 388, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 434, 442, 473, 480, 481, 482, 498, 562, 583, 601, 652, 704, 705, 706, 709, 771, 784, 791, 801, 807, 816, 843, 845, 847, 849, 850, 852, 856, 861, 862, 864, 865, 867, 869, 870, 886], "friendli": [1, 109, 184, 185, 192, 246], "applic": [1, 15, 70, 73, 88, 109, 150, 163, 171, 179, 184, 185, 192, 193, 197, 203, 206, 207, 208, 211, 243, 246, 261, 266, 267, 268, 269, 415, 420, 424, 437, 449, 451, 452, 465, 481, 482, 506, 521, 522, 563, 591, 594, 617, 620, 708, 710, 754, 786, 807, 845, 848, 852, 857, 865, 868, 886], "analysi": [1, 3, 6, 8, 13, 15, 17, 20, 42, 43, 44, 70, 74, 83, 88, 96, 97, 101, 109, 127, 135, 141, 143, 145, 146, 154, 155, 156, 161, 162, 168, 169, 172, 173, 174, 175, 179, 184, 185, 189, 191, 192, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 217, 218, 220, 225, 228, 229, 230, 232, 233, 241, 245, 246, 266, 267, 268, 269, 271, 273, 274, 276, 277, 278, 280, 281, 282, 299, 300, 314, 316, 330, 355, 356, 362, 365, 375, 404, 406, 413, 421, 427, 437, 442, 454, 470, 476, 481, 482, 491, 502, 523, 528, 529, 543, 553, 559, 562, 563, 570, 577, 590, 592, 621, 655, 659, 666, 687, 688, 691, 693, 706, 708, 709, 710, 718, 720, 722, 724, 732, 733, 734, 735, 736, 737, 738, 754, 778, 787, 816, 826, 841, 844, 846, 848, 852, 857, 860, 861, 862, 867, 868, 869, 874, 876, 883, 884, 886], "intellig": [1, 109, 184, 185, 192, 196, 246, 419, 453], "neurosci": [1, 4, 10, 16, 19, 43, 70, 74, 109, 113, 152, 184, 185, 192, 196, 197, 203, 233, 246, 278, 362, 414, 419, 429, 562, 567, 570, 666, 693, 694, 696, 697, 722, 732, 733, 735, 736, 738, 860, 862, 867], "2011": [1, 15, 21, 32, 34, 59, 88, 109, 152, 170, 184, 185, 190, 192, 203, 225, 228, 246, 299, 421, 479, 529, 563, 699, 700, 868], "13": [1, 9, 10, 11, 12, 16, 19, 21, 26, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 61, 66, 67, 74, 76, 79, 80, 81, 83, 84, 85, 87, 93, 94, 96, 97, 100, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 117, 120, 121, 124, 132, 133, 134, 137, 143, 145, 146, 147, 150, 151, 153, 159, 163, 167, 170, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 197, 202, 203, 205, 208, 210, 212, 217, 223, 228, 229, 230, 231, 232, 233, 236, 238, 242, 243, 246, 261, 264, 265, 266, 267, 268, 269, 272, 273, 274, 277, 279, 280, 281, 282, 284, 337, 361, 382, 405, 424, 434, 448, 449, 451, 452, 454, 481, 482, 562, 579, 580, 594, 621, 637, 640, 669, 672, 706, 709, 736, 737, 788, 799, 810, 839, 841, 850, 860, 861, 868], "doi": [1, 4, 8, 10, 12, 13, 15, 16, 18, 19, 21, 33, 35, 40, 42, 43, 44, 46, 51, 54, 55, 58, 59, 65, 70, 71, 74, 75, 78, 83, 84, 88, 94, 101, 109, 112, 113, 117, 119, 121, 126, 129, 135, 138, 142, 145, 152, 156, 158, 163, 177, 179, 181, 184, 185, 192, 196, 197, 201, 203, 205, 206, 207, 208, 209, 211, 213, 225, 228, 229, 233, 241, 246, 266, 267, 268, 269, 272, 277, 278, 292, 299, 300, 302, 356, 362, 382, 390, 391, 395, 396, 405, 406, 413, 414, 417, 419, 420, 421, 429, 431, 437, 476, 478, 479, 481, 482, 529, 530, 540, 544, 561, 562, 563, 567, 570, 571, 573, 576, 577, 578, 594, 598, 601, 602, 609, 651, 659, 663, 666, 668, 671, 690, 692, 693, 694, 695, 696, 697, 699, 700, 708, 710, 718, 720, 722, 724, 725, 732, 733, 735, 736, 738, 771, 860, 861, 862, 865, 868], "10": [1, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 21, 22, 28, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 54, 55, 58, 59, 60, 63, 65, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 88, 90, 91, 92, 93, 94, 95, 101, 103, 104, 106, 108, 109, 110, 112, 113, 114, 115, 117, 119, 120, 121, 126, 127, 128, 129, 130, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 152, 156, 157, 158, 159, 160, 161, 163, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 191, 192, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 222, 223, 224, 225, 228, 229, 230, 232, 233, 235, 236, 237, 238, 241, 242, 243, 246, 260, 264, 265, 266, 267, 268, 269, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 284, 292, 299, 300, 302, 311, 314, 326, 332, 337, 342, 346, 349, 352, 353, 354, 356, 362, 367, 382, 390, 391, 395, 396, 405, 406, 413, 414, 415, 417, 419, 420, 421, 424, 429, 431, 434, 437, 448, 449, 451, 452, 457, 476, 478, 479, 481, 482, 506, 519, 520, 529, 530, 540, 544, 549, 561, 562, 563, 566, 567, 569, 570, 571, 572, 573, 574, 575, 577, 578, 580, 583, 584, 585, 588, 590, 594, 598, 601, 602, 609, 620, 642, 651, 659, 663, 666, 668, 670, 671, 672, 687, 689, 690, 692, 693, 694, 695, 696, 697, 699, 700, 706, 708, 709, 710, 718, 720, 722, 724, 725, 732, 733, 734, 735, 736, 737, 738, 744, 754, 759, 769, 771, 784, 786, 793, 795, 796, 801, 802, 807, 812, 817, 844, 845, 848, 851, 860, 861, 862, 865, 868, 871, 874], "1155": [1, 109, 184, 185, 192, 197, 246], "879716": [1, 109, 184, 185, 192, 246], "total": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 360, 376, 430, 481, 482, 564, 611, 701, 708, 710, 786, 812, 817, 868, 871, 886], "run": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 258, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 284, 305, 323, 349, 356, 357, 359, 361, 377, 382, 415, 416, 419, 423, 424, 426, 429, 430, 451, 452, 453, 456, 469, 471, 481, 482, 515, 521, 524, 525, 535, 536, 545, 546, 562, 567, 574, 575, 577, 583, 584, 587, 592, 595, 611, 646, 654, 657, 658, 659, 660, 669, 670, 671, 672, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 738, 754, 777, 784, 786, 789, 793, 796, 797, 801, 807, 808, 843, 844, 848, 849, 850, 851, 853, 862, 867, 868, 869, 872, 886], "script": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 276, 481, 482, 807, 845, 846, 848, 850, 851, 852, 862, 865, 866, 868, 871, 874, 876, 886], "minut": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 266, 267, 278, 284, 436, 481, 482, 562, 658, 659, 801, 807, 849], "866": [1, 6], "second": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 246, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 280, 281, 282, 286, 287, 289, 298, 299, 300, 324, 325, 343, 345, 361, 413, 419, 420, 425, 437, 439, 442, 447, 448, 450, 454, 455, 479, 480, 481, 482, 500, 502, 505, 517, 522, 523, 532, 535, 561, 562, 564, 565, 566, 567, 570, 572, 574, 575, 579, 583, 584, 585, 586, 587, 594, 602, 608, 612, 621, 624, 656, 672, 692, 693, 694, 696, 697, 698, 700, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 734, 737, 754, 762, 778, 785, 786, 787, 790, 793, 797, 798, 799, 801, 806, 807, 808, 809, 812, 814, 817, 831, 841, 845, 851, 861, 862, 865, 868, 871, 886], "estim": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 246, 247, 258, 261, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 286, 287, 291, 292, 293, 294, 296, 297, 299, 300, 314, 322, 330, 343, 345, 349, 356, 360, 361, 362, 367, 368, 369, 371, 372, 373, 375, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 434, 447, 448, 450, 452, 453, 454, 456, 457, 460, 476, 477, 478, 479, 481, 482, 486, 515, 517, 518, 524, 526, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 543, 544, 545, 546, 549, 562, 563, 567, 571, 572, 579, 584, 587, 592, 594, 606, 608, 609, 624, 626, 629, 634, 635, 636, 646, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 673, 687, 691, 692, 698, 699, 701, 702, 708, 710, 711, 712, 713, 714, 715, 716, 725, 733, 734, 736, 737, 754, 770, 771, 777, 778, 779, 786, 794, 801, 808, 811, 812, 813, 816, 817, 818, 841, 846, 852, 854, 862, 865, 871, 874, 876, 884, 886], "usag": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 258, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 422, 426, 481, 482, 594, 693, 694, 696, 697, 706, 708, 709, 710, 712, 715, 731, 733, 734, 735, 736, 737, 738, 841, 864, 865, 868, 871, 886], "492": [1, 50, 228], "mb": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 266, 267, 276, 481, 482, 784, 807, 851], "python": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 160, 163, 166, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 202, 204, 205, 208, 209, 210, 212, 213, 215, 216, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 246, 257, 260, 264, 265, 266, 267, 268, 269, 271, 273, 274, 276, 277, 279, 280, 281, 282, 299, 300, 316, 319, 325, 330, 331, 334, 340, 355, 367, 375, 378, 379, 380, 381, 382, 384, 385, 386, 388, 389, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 432, 438, 442, 446, 454, 461, 462, 463, 465, 472, 481, 482, 496, 500, 502, 506, 520, 523, 528, 529, 543, 556, 562, 579, 583, 614, 643, 645, 650, 652, 705, 706, 708, 709, 710, 725, 733, 734, 736, 737, 749, 750, 778, 784, 787, 801, 807, 815, 834, 836, 841, 844, 852, 856, 861, 862, 866, 867, 868, 869, 872, 873, 884, 886], "brainstorm_data": [1, 6], "py": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 245, 843, 845, 865, 886], "jupyt": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 819, 865, 867, 869, 886], "notebook": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 819, 825, 849, 865, 869, 874, 886], "ipynb": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243], "galleri": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 845], "gener": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 193, 196, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 218, 219, 220, 223, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 293, 294, 297, 310, 323, 328, 329, 330, 349, 355, 356, 382, 413, 415, 416, 419, 420, 423, 424, 430, 437, 442, 447, 449, 451, 452, 454, 471, 477, 478, 481, 482, 486, 487, 498, 502, 506, 515, 518, 525, 528, 529, 531, 533, 536, 540, 543, 559, 560, 561, 562, 563, 565, 574, 576, 579, 580, 584, 586, 587, 592, 594, 611, 615, 621, 624, 626, 628, 629, 631, 632, 654, 655, 656, 658, 659, 660, 669, 670, 671, 672, 673, 686, 690, 691, 693, 694, 695, 696, 697, 702, 706, 708, 709, 710, 718, 719, 739, 751, 754, 755, 757, 767, 770, 774, 778, 785, 793, 797, 798, 808, 809, 812, 813, 822, 836, 841, 851, 852, 853, 857, 860, 861, 862, 863, 864, 866, 867, 869, 870, 871, 873, 874, 886], "sphinx": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 750, 845, 886], "thi": [2, 4, 5, 7, 9, 10, 13, 14, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 50, 54, 55, 57, 58, 59, 60, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 87, 88, 90, 93, 94, 95, 96, 97, 99, 101, 103, 104, 109, 112, 113, 114, 115, 116, 117, 118, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 290, 291, 293, 294, 297, 299, 300, 304, 305, 307, 308, 309, 310, 311, 314, 315, 318, 319, 320, 321, 322, 323, 326, 327, 328, 332, 333, 334, 339, 343, 344, 347, 349, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 369, 371, 372, 373, 374, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 393, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 462, 463, 465, 466, 469, 471, 472, 474, 475, 476, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 492, 496, 497, 498, 501, 504, 505, 508, 510, 512, 513, 515, 517, 522, 523, 525, 528, 529, 530, 531, 532, 533, 535, 536, 538, 539, 540, 546, 548, 549, 553, 557, 559, 561, 562, 563, 564, 565, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 586, 589, 590, 591, 592, 593, 594, 595, 598, 601, 602, 608, 611, 612, 614, 617, 618, 619, 621, 623, 624, 628, 629, 634, 637, 643, 645, 648, 649, 651, 653, 654, 655, 658, 659, 660, 667, 669, 670, 671, 672, 673, 676, 677, 680, 683, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 705, 706, 707, 708, 709, 710, 713, 722, 724, 732, 734, 736, 737, 741, 744, 748, 749, 751, 752, 754, 756, 757, 759, 763, 764, 767, 769, 770, 771, 772, 775, 776, 780, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 819, 820, 823, 824, 834, 836, 841, 843, 844, 845, 848, 849, 850, 851, 852, 853, 861, 862, 863, 865, 867, 868, 869, 871, 872, 874, 876, 886], "look": [2, 4, 7, 8, 19, 21, 27, 32, 33, 42, 55, 58, 60, 67, 68, 70, 71, 83, 84, 93, 108, 111, 112, 113, 120, 121, 122, 127, 133, 135, 136, 142, 145, 146, 151, 152, 157, 159, 161, 162, 163, 167, 169, 173, 176, 178, 179, 180, 181, 183, 184, 189, 190, 192, 193, 200, 203, 204, 205, 207, 208, 209, 211, 212, 213, 217, 225, 228, 233, 242, 243, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 302, 305, 311, 379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 454, 461, 463, 481, 482, 511, 562, 564, 589, 612, 706, 754, 770, 773, 800, 810, 812, 817, 818, 843, 844, 845, 866, 867, 868, 869, 871, 886], "high": [2, 4, 7, 10, 12, 22, 38, 40, 59, 73, 74, 79, 82, 83, 84, 88, 94, 99, 119, 135, 142, 143, 144, 152, 157, 158, 161, 168, 189, 191, 192, 197, 200, 204, 206, 207, 208, 211, 212, 213, 230, 231, 232, 233, 237, 243, 246, 266, 267, 268, 269, 279, 284, 356, 357, 358, 359, 361, 395, 415, 424, 448, 449, 451, 472, 481, 482, 506, 529, 562, 567, 570, 574, 575, 579, 580, 584, 585, 587, 588, 594, 598, 659, 692, 754, 841, 852, 870, 886], "frequenc": [2, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 34, 36, 42, 56, 68, 71, 72, 73, 76, 81, 82, 83, 84, 88, 90, 93, 94, 99, 103, 104, 106, 107, 108, 109, 110, 112, 115, 121, 123, 126, 127, 133, 138, 141, 142, 143, 144, 145, 147, 150, 152, 157, 168, 169, 170, 173, 181, 184, 192, 196, 197, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 228, 232, 236, 238, 245, 246, 258, 263, 264, 266, 267, 268, 269, 270, 271, 273, 274, 276, 277, 280, 281, 282, 285, 289, 290, 291, 292, 293, 294, 299, 314, 330, 343, 344, 351, 356, 365, 375, 395, 413, 415, 418, 419, 421, 424, 425, 426, 434, 437, 439, 441, 442, 448, 449, 451, 452, 453, 454, 477, 479, 481, 482, 491, 496, 528, 529, 533, 535, 536, 540, 545, 546, 559, 562, 567, 570, 574, 575, 579, 580, 583, 584, 585, 587, 588, 594, 598, 612, 615, 624, 626, 673, 685, 692, 693, 694, 696, 697, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 749, 754, 758, 777, 780, 781, 782, 786, 787, 795, 799, 802, 808, 813, 814, 816, 841, 865, 871, 872, 876, 886], "respons": [2, 4, 8, 10, 16, 17, 19, 20, 27, 35, 46, 49, 51, 59, 65, 77, 85, 88, 94, 96, 97, 107, 113, 117, 120, 121, 122, 128, 130, 136, 143, 144, 146, 150, 151, 163, 169, 181, 184, 186, 192, 197, 200, 203, 208, 232, 233, 236, 238, 243, 246, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 356, 375, 395, 419, 425, 427, 437, 439, 442, 449, 452, 481, 482, 559, 563, 609, 621, 706, 708, 709, 710, 719, 785, 792, 794, 795, 802, 841, 861, 862, 867, 868, 871, 886], "jussi": [2, 61, 246, 395, 594, 886], "nurminen": [2, 61, 246, 395, 594, 886], "jnu": [2, 61], "iki": [2, 61], "fi": [2, 10, 61, 86, 192, 480], "o": [2, 19, 44, 61, 71, 75, 83, 115, 125, 141, 160, 162, 170, 172, 173, 186, 196, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 213, 217, 218, 219, 220, 246, 258, 263, 266, 267, 268, 269, 271, 356, 374, 382, 391, 413, 420, 461, 481, 482, 561, 562, 571, 576, 650, 706, 708, 710, 771, 786, 793, 809, 814, 816, 845, 857, 862, 865, 876, 886], "hf_sef": [2, 862, 876, 886], "fname_evok": [2, 11, 30, 38, 39, 41, 44, 57, 58, 60, 124, 127, 180, 182, 224], "path": [2, 19, 33, 43, 44, 45, 61, 75, 79, 101, 115, 119, 120, 123, 125, 135, 136, 137, 141, 145, 156, 157, 158, 159, 160, 167, 171, 172, 173, 176, 182, 183, 186, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 224, 229, 258, 260, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 290, 303, 305, 306, 309, 310, 311, 314, 315, 323, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 353, 354, 362, 367, 368, 369, 374, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 432, 434, 447, 456, 461, 462, 463, 465, 466, 469, 471, 472, 473, 474, 475, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 519, 521, 525, 543, 547, 548, 549, 551, 552, 561, 562, 572, 573, 583, 589, 590, 594, 604, 605, 606, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 652, 654, 655, 657, 658, 659, 669, 671, 672, 674, 675, 683, 701, 702, 704, 705, 706, 707, 708, 709, 710, 726, 727, 728, 739, 741, 743, 746, 748, 753, 754, 762, 770, 772, 782, 784, 794, 801, 807, 812, 817, 818, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 845, 848, 850, 851, 856, 886], "join": [2, 10, 19, 44, 61, 75, 135, 136, 141, 160, 171, 172, 185, 186, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 266, 267, 268, 269, 481, 482], "subject_b": 2, "hf_sef_15min": 2, "av": [2, 11, 30, 31, 35, 38, 39, 40, 41, 44, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 64, 68, 78, 86, 87, 90, 92, 95, 116, 119, 120, 124, 127, 150, 151, 173, 177, 179, 180, 182, 224, 258, 266, 267, 268, 269, 276, 481, 482, 552, 624, 633, 709, 832, 862], "fif": [2, 5, 7, 10, 11, 13, 14, 15, 16, 18, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 64, 66, 68, 69, 71, 72, 73, 74, 76, 78, 79, 80, 81, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 133, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 173, 177, 178, 179, 180, 181, 182, 183, 184, 190, 191, 192, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 224, 225, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 253, 260, 263, 264, 265, 266, 267, 268, 269, 271, 276, 279, 306, 314, 336, 367, 368, 369, 434, 443, 444, 445, 446, 463, 473, 481, 482, 502, 506, 521, 525, 543, 547, 562, 572, 583, 590, 594, 606, 612, 614, 615, 616, 617, 621, 624, 626, 632, 636, 639, 643, 646, 671, 674, 701, 741, 743, 754, 770, 827, 829, 830, 831, 832, 833, 834, 837, 838, 840, 845, 852, 857, 861, 862, 868, 871, 874, 886], "interest": [2, 4, 9, 16, 21, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 63, 78, 82, 86, 87, 90, 95, 96, 97, 100, 101, 104, 107, 112, 113, 114, 116, 119, 120, 127, 128, 136, 138, 141, 143, 144, 145, 150, 151, 156, 161, 163, 171, 173, 177, 179, 180, 181, 182, 191, 193, 196, 197, 200, 203, 204, 207, 212, 213, 214, 218, 224, 225, 228, 229, 230, 231, 232, 242, 243, 261, 266, 267, 268, 269, 271, 291, 293, 326, 418, 421, 437, 439, 457, 465, 481, 482, 515, 535, 536, 546, 561, 562, 609, 618, 620, 655, 706, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 736, 737, 754, 808, 814, 841, 845, 861, 865, 868, 886], "t": [2, 4, 5, 9, 15, 19, 21, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 63, 65, 70, 78, 79, 81, 83, 84, 86, 87, 93, 94, 95, 96, 98, 101, 102, 108, 114, 115, 116, 117, 119, 120, 127, 135, 141, 142, 144, 145, 146, 147, 150, 152, 157, 158, 159, 160, 161, 163, 166, 167, 169, 171, 172, 173, 177, 178, 179, 180, 181, 182, 184, 185, 189, 192, 196, 197, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 217, 219, 224, 225, 228, 229, 230, 231, 232, 233, 238, 239, 240, 241, 242, 243, 246, 258, 261, 262, 264, 265, 266, 267, 268, 269, 271, 273, 274, 276, 277, 279, 280, 281, 282, 289, 299, 300, 343, 346, 352, 361, 362, 374, 375, 379, 380, 381, 382, 384, 385, 386, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 419, 434, 436, 448, 454, 457, 476, 479, 481, 482, 492, 493, 528, 529, 537, 543, 549, 551, 553, 559, 562, 565, 573, 574, 579, 580, 583, 585, 592, 594, 595, 603, 611, 614, 618, 620, 621, 624, 625, 628, 631, 634, 636, 653, 655, 671, 672, 678, 684, 690, 691, 692, 693, 695, 696, 698, 699, 700, 706, 707, 708, 709, 710, 722, 726, 729, 732, 733, 734, 736, 737, 744, 754, 789, 799, 841, 844, 845, 846, 851, 853, 861, 862, 867, 868, 869, 871, 886], "250": [2, 4, 21, 46, 81, 112, 117, 123, 137, 138, 142, 144, 152, 157, 167, 170, 182, 196, 200, 202, 203, 204, 208, 225, 232, 233, 241, 246, 659, 713, 850, 886], "ctf": [2, 27, 30, 31, 35, 36, 38, 39, 40, 41, 44, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 78, 86, 87, 101, 116, 119, 120, 127, 141, 144, 150, 166, 171, 173, 177, 179, 180, 182, 187, 188, 194, 195, 228, 229, 260, 263, 264, 266, 267, 268, 269, 270, 271, 277, 304, 340, 347, 355, 357, 361, 363, 365, 366, 454, 456, 481, 482, 494, 519, 520, 525, 526, 528, 529, 538, 539, 540, 541, 544, 559, 560, 575, 594, 615, 624, 626, 632, 639, 654, 706, 708, 709, 710, 754, 770, 862, 868, 871, 886], "matric": [2, 10, 30, 31, 34, 35, 38, 39, 40, 41, 44, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 78, 86, 87, 101, 103, 116, 119, 120, 127, 141, 144, 147, 150, 157, 164, 166, 167, 173, 177, 179, 180, 182, 189, 197, 228, 229, 246, 292, 299, 356, 413, 421, 481, 482, 573, 583, 594, 606, 657, 658, 659, 671, 692, 707, 717, 745, 747, 780, 861, 868, 871, 883, 886], "nave": [2, 5, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 68, 78, 86, 87, 90, 92, 94, 104, 107, 108, 109, 110, 114, 116, 119, 120, 127, 150, 167, 173, 177, 178, 179, 180, 182, 183, 192, 197, 223, 224, 225, 236, 238, 259, 265, 268, 269, 271, 355, 470, 530, 531, 532, 533, 535, 536, 542, 545, 546, 670, 706, 871, 886], "2790": 2, "aspect": [2, 16, 22, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 78, 86, 87, 107, 116, 119, 120, 127, 143, 150, 173, 177, 179, 180, 182, 204, 207, 230, 231, 232, 233, 757, 871, 886], "specifi": [2, 4, 5, 9, 19, 31, 38, 41, 43, 47, 63, 88, 94, 95, 101, 103, 109, 114, 120, 127, 128, 136, 141, 142, 143, 150, 151, 152, 156, 159, 167, 168, 169, 170, 171, 172, 173, 179, 185, 186, 189, 193, 197, 200, 201, 203, 204, 205, 206, 208, 209, 211, 212, 213, 217, 218, 219, 220, 229, 230, 233, 236, 242, 258, 260, 261, 263, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 290, 292, 299, 300, 304, 311, 316, 326, 332, 356, 357, 358, 359, 360, 361, 362, 371, 372, 373, 374, 379, 380, 381, 382, 384, 385, 386, 387, 390, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 420, 424, 425, 429, 430, 434, 437, 439, 448, 449, 451, 452, 454, 456, 457, 465, 469, 472, 476, 478, 479, 480, 481, 482, 483, 491, 496, 497, 506, 510, 521, 524, 528, 530, 538, 539, 540, 551, 561, 562, 565, 567, 572, 573, 575, 576, 577, 581, 583, 594, 609, 612, 616, 618, 620, 625, 628, 634, 643, 646, 648, 651, 655, 656, 671, 683, 686, 692, 693, 694, 696, 697, 704, 706, 708, 709, 710, 741, 754, 757, 769, 770, 771, 773, 778, 785, 786, 788, 792, 793, 794, 797, 799, 800, 801, 803, 806, 809, 812, 813, 814, 816, 817, 818, 819, 823, 836, 841, 845, 863, 865, 868, 871, 886], "pleas": [2, 4, 5, 74, 76, 83, 101, 109, 123, 135, 136, 137, 138, 147, 167, 173, 185, 186, 190, 197, 200, 205, 206, 212, 213, 229, 238, 258, 266, 267, 291, 293, 334, 340, 373, 391, 440, 452, 454, 481, 482, 492, 562, 583, 595, 626, 784, 801, 807, 833, 841, 843, 845, 849, 851, 857, 860, 861, 862, 864, 866, 868, 869, 886], "consid": [2, 4, 5, 82, 93, 101, 104, 108, 109, 112, 138, 142, 145, 153, 157, 160, 162, 163, 167, 185, 186, 193, 197, 200, 201, 202, 203, 205, 206, 211, 212, 213, 228, 229, 230, 233, 236, 238, 243, 261, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 280, 281, 282, 289, 299, 300, 311, 321, 339, 356, 360, 361, 372, 373, 413, 420, 421, 434, 443, 444, 445, 446, 448, 454, 461, 478, 479, 481, 482, 489, 496, 498, 500, 504, 557, 562, 564, 565, 570, 572, 573, 577, 579, 581, 583, 586, 592, 594, 599, 618, 620, 624, 667, 676, 677, 678, 680, 681, 693, 694, 696, 697, 706, 709, 711, 712, 713, 714, 715, 716, 717, 754, 767, 776, 784, 787, 788, 800, 807, 841, 843, 864, 867, 886], "self": [2, 4, 5, 101, 109, 173, 185, 186, 197, 200, 205, 212, 213, 229, 238, 260, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 280, 281, 282, 290, 304, 367, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 480, 481, 482, 500, 528, 561, 562, 563, 706, 708, 709, 710, 741, 755, 845, 863, 865, 886], "highpass": [2, 12, 71, 73, 76, 81, 82, 83, 90, 93, 99, 127, 142, 147, 152, 167, 168, 169, 170, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 243, 258, 266, 267, 268, 269, 271, 448, 481, 482, 708, 710, 807, 808, 871, 886], "version": [2, 19, 34, 70, 84, 114, 146, 147, 151, 156, 162, 167, 172, 189, 190, 191, 196, 197, 202, 203, 220, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 286, 287, 290, 295, 299, 300, 302, 306, 307, 308, 309, 310, 311, 314, 315, 318, 319, 320, 322, 323, 324, 325, 326, 330, 332, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 371, 372, 373, 388, 389, 391, 392, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 424, 425, 429, 432, 434, 437, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 460, 461, 463, 466, 470, 472, 473, 475, 476, 478, 479, 480, 481, 482, 489, 490, 492, 493, 494, 496, 497, 498, 502, 505, 507, 510, 512, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 535, 536, 537, 538, 539, 540, 542, 544, 545, 546, 547, 548, 549, 550, 553, 554, 555, 561, 562, 563, 564, 565, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 583, 584, 593, 594, 595, 602, 604, 608, 609, 614, 616, 618, 620, 621, 624, 625, 629, 637, 639, 640, 642, 643, 645, 648, 651, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 687, 688, 689, 698, 699, 700, 701, 705, 706, 707, 708, 709, 710, 718, 720, 723, 724, 725, 728, 733, 734, 736, 737, 738, 739, 742, 743, 744, 751, 754, 755, 757, 763, 764, 770, 771, 772, 773, 775, 777, 778, 779, 781, 782, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 816, 817, 818, 819, 820, 823, 827, 830, 832, 836, 837, 839, 844, 845, 848, 849, 850, 851, 860, 862, 865, 867, 868, 871, 874], "evoked_hp": 2, "l_freq": [2, 21, 83, 114, 145, 147, 152, 192, 203, 204, 206, 208, 243, 258, 266, 267, 268, 269, 415, 424, 449, 451, 481, 482, 562, 570, 574, 575, 579, 580, 584, 585, 587, 588, 598, 872], "300": [2, 4, 5, 21, 34, 46, 51, 74, 81, 82, 92, 112, 116, 136, 141, 150, 152, 170, 184, 192, 197, 204, 206, 210, 213, 233, 241, 706, 871, 886], "h_freq": [2, 21, 83, 114, 145, 147, 152, 192, 203, 204, 206, 208, 211, 243, 258, 266, 267, 268, 269, 415, 424, 449, 451, 481, 482, 562, 570, 574, 575, 579, 580, 583, 584, 585, 587, 588, 598, 872], "3e": [2, 8, 9, 21, 32, 35, 45, 48, 49, 50, 51, 54, 55, 58, 94, 109, 153, 177, 179, 180, 181, 182, 197, 574, 575, 771], "edg": [2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 34, 42, 59, 70, 72, 73, 76, 82, 83, 84, 88, 99, 110, 113, 114, 115, 120, 121, 133, 137, 142, 143, 145, 147, 152, 162, 173, 192, 197, 200, 202, 203, 204, 205, 206, 208, 211, 212, 213, 219, 220, 224, 228, 233, 243, 263, 266, 267, 268, 269, 275, 276, 284, 320, 413, 415, 419, 420, 442, 449, 451, 453, 479, 481, 482, 561, 562, 564, 565, 577, 583, 594, 598, 706, 708, 710, 722, 732, 736, 758, 767, 771, 772, 786, 793, 797, 806, 807, 809, 814, 816, 865, 886], "75": [2, 4, 5, 8, 12, 13, 16, 19, 21, 24, 34, 35, 41, 44, 70, 72, 76, 80, 81, 83, 103, 112, 114, 115, 127, 135, 136, 144, 145, 147, 159, 170, 173, 181, 185, 192, 196, 197, 200, 202, 205, 206, 208, 209, 210, 219, 228, 229, 232, 233, 481, 482, 562, 810, 862, 868, 886], "cutoff": [2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 34, 42, 72, 73, 76, 82, 83, 84, 88, 99, 113, 114, 115, 121, 133, 137, 142, 145, 147, 152, 173, 192, 197, 200, 202, 204, 205, 206, 208, 211, 212, 213, 233, 266, 267, 268, 269, 415, 424, 449, 451, 481, 482, 562, 570, 583, 598], "262": [2, 12, 21, 112, 152, 170, 212, 233, 246], "133": [2, 35, 56, 58, 59, 61, 79, 135, 157, 170, 172, 209, 210, 228, 233], "044": [2, 141, 143, 150, 170, 225], "306": [2, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 61, 68, 76, 83, 84, 90, 92, 93, 94, 95, 109, 112, 131, 147, 159, 170, 173, 178, 179, 180, 181, 184, 197, 210, 211, 224, 225, 233, 562, 862], "condit": [2, 10, 11, 16, 17, 20, 27, 30, 31, 35, 38, 39, 40, 41, 44, 45, 51, 58, 59, 60, 61, 78, 86, 87, 88, 94, 96, 99, 110, 112, 119, 120, 122, 124, 130, 141, 142, 143, 144, 145, 146, 150, 151, 154, 166, 167, 169, 177, 178, 179, 180, 181, 182, 185, 186, 192, 197, 203, 212, 218, 223, 228, 229, 230, 233, 234, 235, 236, 237, 238, 241, 246, 259, 266, 267, 268, 269, 271, 355, 356, 416, 423, 429, 435, 481, 527, 552, 559, 563, 573, 583, 594, 609, 621, 623, 624, 625, 687, 692, 693, 694, 696, 706, 708, 709, 710, 728, 736, 778, 792, 841, 845, 861, 862, 868, 872, 886], "kind": [2, 5, 7, 11, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 68, 83, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 124, 127, 131, 136, 137, 143, 150, 152, 157, 161, 167, 170, 171, 173, 176, 178, 179, 180, 181, 182, 185, 191, 192, 197, 204, 207, 224, 225, 236, 237, 238, 265, 266, 267, 268, 269, 271, 273, 274, 275, 277, 278, 279, 280, 281, 282, 299, 300, 307, 308, 314, 315, 330, 340, 376, 392, 432, 433, 448, 475, 481, 482, 514, 550, 563, 624, 701, 706, 708, 709, 710, 722, 732, 754, 773, 775, 804, 810, 812, 817, 818, 845, 852, 865, 868, 871, 886], "timepoint": [2, 19, 59, 101, 120, 142, 150, 152, 180, 182, 185, 217, 261, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 289, 350, 524, 579, 624, 625], "901": [2, 13, 181, 188, 233], "number": [2, 4, 5, 9, 10, 11, 31, 34, 35, 39, 40, 42, 44, 46, 49, 52, 59, 72, 74, 76, 82, 83, 88, 90, 92, 93, 100, 103, 107, 109, 113, 114, 121, 127, 135, 136, 141, 143, 144, 145, 146, 147, 150, 151, 152, 161, 162, 163, 166, 167, 169, 171, 173, 176, 178, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 193, 197, 200, 201, 202, 203, 205, 206, 207, 211, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 243, 246, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 299, 300, 301, 302, 326, 329, 337, 344, 350, 356, 357, 358, 359, 360, 361, 362, 364, 367, 371, 372, 373, 382, 412, 413, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 429, 430, 434, 436, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 469, 470, 471, 476, 478, 479, 480, 481, 482, 483, 492, 506, 513, 515, 521, 524, 525, 529, 530, 531, 532, 533, 535, 536, 538, 539, 540, 542, 544, 545, 546, 561, 562, 563, 567, 571, 572, 573, 574, 575, 577, 578, 583, 584, 585, 587, 589, 590, 592, 593, 599, 600, 611, 621, 625, 646, 654, 655, 656, 657, 658, 659, 660, 664, 665, 666, 669, 670, 671, 672, 680, 681, 682, 683, 685, 686, 687, 689, 691, 693, 694, 695, 696, 697, 698, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 720, 722, 724, 725, 732, 733, 734, 735, 736, 737, 738, 744, 752, 753, 754, 762, 771, 777, 778, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 793, 794, 795, 797, 798, 800, 801, 806, 807, 808, 809, 812, 813, 814, 815, 816, 817, 820, 841, 845, 860, 862, 865, 869, 871, 886], "rang": [2, 4, 5, 9, 10, 11, 13, 14, 15, 16, 18, 19, 28, 29, 32, 33, 34, 42, 45, 46, 49, 59, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 82, 83, 84, 88, 92, 93, 94, 96, 97, 99, 100, 103, 104, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 123, 127, 129, 132, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 147, 150, 152, 153, 157, 159, 160, 161, 163, 167, 168, 169, 170, 172, 173, 177, 178, 180, 181, 182, 183, 184, 185, 186, 191, 192, 193, 197, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 238, 241, 242, 243, 258, 259, 263, 266, 267, 268, 269, 271, 275, 276, 299, 323, 375, 382, 397, 405, 406, 413, 416, 420, 422, 423, 446, 472, 478, 481, 482, 489, 561, 562, 567, 577, 583, 706, 707, 708, 709, 710, 722, 732, 771, 784, 785, 786, 790, 793, 797, 806, 807, 808, 809, 814, 816, 841, 861, 867, 868, 871, 886], "05": [2, 4, 5, 8, 9, 10, 19, 20, 34, 35, 42, 46, 49, 51, 56, 59, 60, 71, 78, 84, 85, 87, 92, 95, 96, 97, 100, 102, 103, 108, 112, 116, 119, 120, 124, 130, 142, 145, 151, 152, 171, 175, 178, 180, 181, 182, 184, 186, 192, 196, 200, 201, 204, 208, 210, 212, 216, 217, 222, 224, 225, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 246, 299, 300, 323, 326, 332, 452, 456, 481, 482, 500, 544, 571, 666, 684, 689, 690, 693, 694, 696, 697, 698, 706, 720, 722, 732, 736, 758, 813], "25": [2, 4, 5, 6, 11, 16, 18, 19, 28, 34, 35, 38, 41, 43, 45, 47, 49, 50, 53, 56, 64, 66, 68, 70, 72, 74, 81, 82, 83, 85, 103, 104, 106, 108, 109, 112, 113, 114, 116, 124, 130, 135, 136, 137, 138, 144, 146, 147, 152, 160, 170, 171, 172, 173, 175, 176, 179, 181, 182, 184, 192, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 214, 216, 219, 224, 225, 227, 228, 229, 230, 232, 233, 236, 237, 238, 241, 242, 246, 260, 266, 267, 268, 269, 273, 274, 277, 278, 279, 280, 281, 282, 362, 405, 413, 415, 424, 449, 451, 481, 482, 598, 666, 695, 754, 758, 778, 790, 807, 810, 812, 817, 844, 861, 868], "off": [2, 4, 10, 67, 73, 76, 93, 114, 116, 127, 135, 136, 138, 142, 144, 150, 152, 153, 157, 160, 161, 167, 168, 169, 170, 192, 196, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 213, 217, 218, 219, 220, 223, 224, 225, 246, 258, 261, 266, 267, 268, 269, 279, 299, 300, 415, 424, 449, 451, 481, 482, 561, 574, 575, 577, 585, 588, 594, 598, 609, 734, 737, 845, 861, 862, 868, 871, 886], "compar": [2, 4, 10, 19, 21, 22, 26, 27, 28, 36, 38, 39, 56, 73, 77, 83, 85, 89, 91, 103, 113, 114, 122, 130, 135, 142, 144, 145, 146, 147, 159, 161, 163, 167, 168, 173, 177, 181, 184, 185, 192, 197, 203, 205, 207, 208, 209, 230, 231, 232, 236, 237, 243, 261, 263, 266, 267, 268, 269, 270, 271, 272, 277, 279, 360, 361, 366, 389, 454, 481, 482, 486, 515, 518, 522, 528, 529, 540, 541, 544, 560, 562, 594, 615, 617, 621, 624, 626, 629, 656, 660, 661, 662, 663, 664, 665, 666, 668, 671, 677, 754, 762, 784, 792, 801, 807, 845, 853, 865, 874, 886], "unfilt": [2, 167, 173, 203, 206], "singl": [2, 3, 6, 16, 18, 27, 33, 34, 36, 45, 56, 67, 70, 74, 83, 84, 87, 94, 101, 103, 105, 106, 113, 117, 120, 122, 130, 141, 142, 143, 145, 146, 150, 151, 152, 159, 166, 167, 169, 170, 171, 173, 177, 179, 181, 184, 185, 189, 190, 191, 197, 200, 201, 203, 206, 207, 208, 209, 211, 212, 213, 217, 218, 223, 225, 228, 233, 234, 235, 238, 242, 243, 246, 258, 260, 261, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 293, 294, 297, 299, 300, 306, 314, 316, 320, 321, 326, 355, 356, 361, 388, 413, 414, 420, 426, 429, 435, 439, 442, 454, 472, 481, 482, 497, 501, 503, 516, 519, 522, 524, 526, 528, 529, 531, 533, 535, 536, 543, 559, 561, 562, 567, 570, 577, 609, 617, 621, 628, 634, 641, 651, 655, 672, 686, 687, 689, 690, 691, 693, 694, 701, 706, 707, 708, 709, 710, 722, 732, 733, 734, 736, 737, 744, 754, 770, 771, 772, 778, 782, 785, 786, 787, 788, 790, 793, 794, 797, 804, 805, 806, 808, 809, 810, 814, 816, 829, 845, 854, 861, 862, 865, 868, 871, 872, 874, 886], "meg0443": 2, "ch_name": [2, 4, 7, 15, 18, 19, 31, 63, 67, 70, 72, 74, 86, 100, 112, 114, 115, 120, 125, 136, 137, 141, 147, 150, 152, 160, 167, 169, 170, 173, 185, 191, 192, 201, 204, 206, 208, 211, 212, 213, 217, 223, 225, 230, 231, 232, 233, 242, 258, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 299, 300, 314, 316, 320, 323, 326, 331, 339, 371, 372, 375, 480, 481, 482, 553, 556, 562, 574, 575, 579, 580, 583, 584, 585, 605, 648, 660, 706, 707, 708, 709, 710, 711, 712, 713, 775, 784, 785, 807, 871, 886], "index": [2, 4, 19, 21, 31, 47, 61, 70, 72, 75, 90, 133, 137, 144, 150, 151, 152, 161, 167, 170, 171, 173, 176, 181, 184, 185, 189, 192, 196, 200, 202, 205, 206, 207, 208, 210, 211, 212, 218, 219, 224, 229, 230, 241, 242, 246, 259, 260, 264, 265, 266, 267, 268, 269, 273, 274, 276, 277, 279, 280, 281, 282, 286, 287, 298, 299, 300, 313, 323, 351, 365, 473, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522, 532, 552, 562, 579, 580, 584, 585, 587, 588, 589, 598, 624, 625, 666, 706, 707, 708, 709, 710, 754, 767, 772, 778, 782, 787, 797, 799, 801, 841, 862, 868, 886], "edi": 2, "regular": [2, 5, 28, 29, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 54, 55, 57, 58, 59, 60, 78, 83, 90, 94, 99, 104, 107, 108, 109, 110, 121, 167, 170, 179, 180, 181, 182, 183, 192, 197, 201, 208, 211, 223, 224, 225, 228, 236, 238, 268, 269, 272, 278, 299, 300, 356, 360, 361, 371, 372, 413, 420, 421, 425, 434, 442, 456, 457, 476, 478, 479, 489, 492, 496, 504, 529, 530, 531, 532, 533, 535, 536, 537, 540, 542, 545, 546, 556, 563, 571, 573, 583, 594, 629, 683, 686, 693, 694, 696, 697, 700, 793, 794, 811, 861, 867, 876, 886], "viz": [2, 4, 5, 7, 12, 19, 24, 27, 31, 35, 38, 39, 40, 41, 42, 46, 47, 51, 52, 57, 59, 70, 79, 80, 81, 86, 88, 92, 93, 101, 109, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 130, 132, 133, 135, 136, 137, 138, 142, 143, 144, 145, 151, 152, 156, 157, 158, 159, 160, 161, 167, 171, 178, 179, 181, 182, 183, 184, 185, 186, 191, 196, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 218, 228, 233, 243, 264, 266, 267, 268, 269, 271, 273, 274, 276, 277, 280, 281, 282, 311, 320, 331, 481, 482, 562, 616, 624, 634, 639, 706, 843, 845, 861, 863, 865, 868, 872, 876, 885, 886], "plot_compare_evok": [2, 4, 101, 127, 142, 143, 144, 145, 151, 152, 167, 212, 233, 266, 267, 785, 872, 876, 886], "159": [2, 6, 35, 114, 150, 170, 228, 232, 233], "9": [2, 4, 5, 6, 7, 8, 9, 11, 13, 16, 19, 20, 21, 22, 24, 26, 28, 29, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 61, 64, 66, 68, 69, 70, 71, 73, 78, 80, 81, 83, 85, 86, 87, 90, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 124, 127, 128, 130, 132, 135, 136, 138, 141, 142, 143, 145, 146, 151, 152, 155, 157, 159, 160, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 241, 242, 245, 246, 264, 266, 267, 268, 269, 273, 278, 279, 281, 282, 299, 300, 302, 314, 323, 337, 355, 356, 362, 363, 382, 406, 456, 466, 481, 482, 502, 518, 526, 537, 545, 561, 562, 570, 592, 609, 620, 648, 651, 688, 706, 708, 709, 710, 718, 728, 737, 738, 739, 754, 755, 757, 771, 781, 782, 787, 806, 811, 843, 844, 850, 851, 861, 862, 865, 868, 871], "hf_sef_data": [2, 6], "some": [3, 4, 5, 10, 16, 21, 27, 34, 40, 54, 55, 61, 65, 67, 70, 73, 75, 95, 98, 103, 105, 109, 113, 114, 120, 127, 135, 136, 137, 138, 141, 142, 143, 145, 146, 150, 151, 152, 153, 157, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 181, 184, 185, 190, 191, 192, 193, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 217, 218, 219, 220, 223, 224, 225, 228, 232, 233, 234, 241, 243, 258, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 310, 314, 318, 322, 356, 374, 388, 427, 436, 447, 466, 472, 481, 482, 489, 496, 557, 561, 562, 564, 572, 581, 594, 602, 608, 618, 620, 647, 651, 654, 688, 694, 706, 708, 709, 710, 770, 772, 789, 791, 807, 841, 843, 844, 845, 848, 849, 852, 857, 860, 861, 862, 863, 865, 866, 867, 868, 869, 872, 874, 886], "demo": [3, 27, 841, 886], "common": [3, 17, 20, 27, 32, 33, 34, 43, 44, 67, 75, 115, 136, 150, 152, 156, 159, 161, 163, 166, 173, 190, 193, 203, 205, 206, 207, 208, 211, 212, 217, 218, 225, 237, 243, 246, 266, 267, 268, 269, 271, 279, 314, 319, 330, 356, 365, 375, 413, 438, 442, 463, 469, 481, 482, 496, 559, 562, 578, 637, 641, 651, 706, 839, 841, 845, 862, 865, 868, 869, 872, 874, 886], "public": [3, 27, 112, 116, 120, 122, 130, 135, 145, 203, 261, 268, 271, 277, 452, 480, 481, 624, 634, 754, 773, 845, 861, 867, 874, 886], "brainstorm": [3, 6, 27, 81, 82, 84, 109, 119, 166, 187, 188, 194, 195, 246, 260, 263, 264, 266, 268, 269, 271, 277, 304, 355, 356, 357, 358, 361, 363, 365, 433, 454, 456, 481, 494, 519, 520, 525, 526, 528, 529, 540, 559, 575, 586, 594, 626, 632, 639, 654, 754, 770, 782, 794, 822, 868, 876, 884, 886], "raw": [3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 27, 28, 32, 33, 34, 36, 41, 42, 45, 46, 49, 56, 61, 63, 65, 67, 68, 69, 71, 72, 73, 74, 76, 78, 79, 80, 82, 83, 84, 88, 89, 91, 92, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 121, 123, 127, 128, 129, 132, 133, 135, 136, 137, 142, 143, 145, 146, 147, 150, 152, 157, 159, 160, 163, 166, 167, 168, 170, 171, 172, 174, 175, 181, 183, 184, 185, 186, 189, 190, 191, 192, 193, 197, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 221, 222, 224, 225, 230, 231, 232, 233, 236, 238, 241, 242, 243, 246, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 285, 286, 287, 298, 299, 300, 314, 316, 319, 343, 345, 347, 348, 349, 350, 355, 356, 358, 359, 360, 361, 364, 365, 373, 383, 395, 418, 421, 438, 442, 446, 448, 451, 454, 455, 472, 480, 482, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 518, 521, 522, 523, 525, 528, 529, 530, 531, 532, 533, 535, 536, 540, 543, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 592, 593, 594, 595, 596, 597, 598, 601, 602, 608, 609, 615, 619, 621, 623, 626, 628, 629, 648, 651, 656, 657, 658, 659, 660, 671, 672, 692, 706, 708, 709, 710, 719, 724, 752, 754, 784, 787, 788, 797, 798, 799, 801, 807, 808, 824, 841, 843, 845, 861, 862, 863, 871, 872, 876, 886], "median": [3, 5, 6, 27, 70, 128, 151, 158, 197, 206, 229, 241, 242, 263, 266, 267, 268, 269, 271, 275, 316, 358, 413, 420, 422, 454, 481, 482, 494, 559, 561, 562, 577, 586, 594, 685, 706, 708, 709, 710, 725, 771, 778, 785, 786, 793, 797, 806, 809, 814, 816, 886], "nerv": [3, 5, 6, 27, 266, 268, 269, 271, 358, 454, 494, 559, 586], "hf": [3, 6, 27, 96, 127, 192, 268, 395, 778], "sef": [3, 6, 27, 127, 268, 395, 778, 861], "trial": [3, 6, 13, 16, 18, 27, 28, 33, 69, 70, 72, 84, 101, 104, 107, 113, 114, 117, 122, 130, 141, 142, 143, 144, 145, 150, 152, 153, 166, 167, 169, 181, 184, 192, 196, 197, 202, 203, 206, 214, 223, 225, 228, 233, 234, 235, 236, 238, 246, 266, 267, 268, 269, 271, 293, 294, 297, 320, 326, 355, 413, 426, 429, 435, 436, 437, 439, 442, 454, 481, 497, 501, 531, 533, 559, 562, 570, 621, 641, 686, 687, 689, 690, 691, 693, 694, 706, 709, 733, 734, 736, 737, 778, 784, 787, 841, 862, 886], "linear": [3, 5, 6, 8, 9, 13, 17, 19, 20, 26, 27, 32, 41, 45, 50, 54, 55, 60, 99, 101, 107, 109, 110, 112, 120, 135, 136, 137, 142, 159, 160, 167, 177, 178, 182, 183, 196, 197, 203, 205, 206, 207, 246, 261, 263, 266, 267, 268, 269, 271, 273, 274, 275, 277, 279, 280, 281, 282, 343, 355, 413, 417, 419, 420, 425, 428, 431, 448, 449, 451, 452, 481, 482, 520, 532, 534, 541, 544, 561, 562, 577, 586, 592, 621, 630, 657, 658, 659, 671, 691, 692, 701, 706, 708, 710, 742, 744, 754, 771, 773, 778, 786, 787, 793, 795, 797, 802, 806, 808, 809, 812, 814, 816, 817, 818, 841, 852, 854, 861, 862, 865, 886], "regress": [3, 6, 10, 11, 12, 15, 18, 19, 27, 31, 42, 77, 85, 98, 102, 148, 149, 166, 197, 215, 216, 228, 246, 266, 267, 268, 269, 271, 355, 419, 425, 454, 481, 527, 530, 559, 561, 580, 604, 609, 617, 690, 691, 692, 778, 787, 790, 809, 862, 874, 886], "limo": [3, 6, 27, 246, 267, 268, 269, 355, 691, 778, 787, 876, 886], "optic": [3, 6, 27, 75, 166, 189, 191, 215, 216, 246, 264, 266, 268, 269, 271, 277, 304, 356, 366, 373, 442, 454, 456, 490, 503, 528, 529, 540, 556, 559, 561, 576, 596, 597, 601, 613, 626, 710, 748, 754, 770, 822, 841, 862, 886], "pump": [3, 6, 27, 166, 189, 215, 216, 246, 264, 266, 268, 269, 271, 277, 304, 356, 366, 454, 456, 503, 528, 529, 540, 556, 559, 561, 576, 613, 626, 710, 748, 754, 770, 822, 841, 862, 886], "magnetomet": [3, 6, 22, 27, 32, 73, 76, 80, 81, 82, 87, 93, 109, 119, 120, 143, 146, 147, 151, 152, 163, 166, 167, 168, 169, 170, 181, 184, 185, 189, 192, 200, 201, 202, 204, 206, 207, 208, 209, 211, 215, 216, 217, 218, 219, 220, 223, 228, 246, 258, 261, 263, 264, 266, 267, 268, 269, 271, 273, 274, 275, 277, 280, 281, 282, 299, 300, 304, 322, 356, 357, 358, 359, 360, 361, 366, 371, 372, 373, 413, 420, 434, 454, 456, 457, 476, 478, 479, 481, 482, 503, 518, 528, 529, 540, 556, 559, 560, 561, 562, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 594, 605, 613, 626, 692, 706, 708, 709, 710, 748, 754, 770, 771, 777, 784, 785, 786, 788, 790, 793, 794, 797, 806, 807, 809, 814, 815, 816, 822, 841, 861, 862, 865, 868, 886], "opm": [3, 6, 27, 105, 106, 166, 215, 216, 246, 263, 264, 266, 268, 269, 271, 277, 304, 356, 361, 366, 454, 456, 503, 520, 525, 528, 529, 535, 540, 556, 559, 561, 576, 613, 626, 654, 710, 748, 754, 770, 822, 841, 868, 876, 886], "dspm": [3, 6, 11, 27, 29, 31, 36, 37, 38, 39, 40, 41, 42, 44, 55, 56, 59, 60, 104, 105, 106, 107, 108, 109, 166, 167, 176, 179, 180, 182, 183, 187, 188, 192, 197, 224, 225, 236, 238, 263, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 292, 296, 299, 300, 355, 356, 360, 454, 478, 479, 481, 494, 516, 521, 525, 528, 529, 530, 531, 532, 533, 534, 535, 536, 540, 541, 542, 543, 545, 546, 559, 562, 580, 621, 624, 626, 628, 715, 754, 779, 787, 841, 861, 862, 871, 886], "spm": [3, 6, 27, 123, 197, 355, 356, 408, 454, 494, 521, 525, 529, 540, 559, 562, 580, 787, 874, 884, 886], "face": [3, 4, 6, 10, 27, 69, 123, 141, 143, 145, 150, 152, 162, 167, 173, 176, 197, 200, 246, 266, 267, 308, 355, 356, 454, 494, 521, 525, 529, 540, 559, 562, 580, 637, 640, 706, 767, 787, 815, 834, 839, 871, 874, 886], "explor": [4, 27, 105, 106, 109, 159, 182, 197, 201, 203, 205, 208, 220, 223, 224, 242, 243, 266, 269, 281, 282, 289, 454, 685, 818, 842, 862, 863, 865], "structur": [4, 8, 9, 10, 27, 41, 43, 59, 62, 63, 67, 70, 83, 94, 95, 112, 114, 123, 135, 136, 138, 143, 147, 148, 149, 152, 154, 155, 156, 160, 166, 167, 168, 171, 172, 174, 175, 182, 186, 187, 188, 190, 191, 193, 196, 206, 214, 218, 221, 222, 226, 227, 228, 229, 243, 246, 260, 266, 267, 268, 269, 270, 271, 273, 274, 276, 277, 279, 280, 281, 282, 312, 313, 314, 322, 355, 374, 375, 391, 395, 454, 479, 481, 482, 486, 501, 523, 542, 553, 556, 558, 559, 573, 590, 594, 617, 619, 623, 624, 634, 666, 676, 677, 678, 679, 680, 681, 682, 686, 706, 708, 709, 710, 725, 744, 754, 810, 841, 845, 846, 849, 852, 857, 859, 861, 862, 863, 874, 886], "contain": [4, 16, 18, 27, 31, 38, 41, 43, 53, 79, 80, 88, 94, 101, 108, 112, 116, 127, 128, 135, 138, 141, 144, 145, 147, 150, 152, 156, 159, 163, 166, 167, 169, 170, 171, 172, 173, 176, 182, 184, 189, 190, 191, 192, 193, 203, 205, 206, 207, 208, 211, 212, 213, 214, 217, 218, 223, 225, 228, 241, 242, 243, 253, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 286, 287, 291, 299, 300, 301, 305, 309, 310, 311, 314, 315, 316, 317, 320, 321, 322, 328, 337, 340, 351, 356, 357, 358, 359, 360, 361, 362, 367, 368, 369, 370, 371, 372, 373, 388, 392, 394, 395, 396, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 432, 434, 437, 440, 441, 442, 447, 454, 455, 456, 457, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 481, 482, 488, 490, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 519, 521, 523, 524, 540, 548, 551, 552, 557, 561, 562, 563, 565, 567, 577, 578, 583, 589, 590, 591, 593, 594, 598, 600, 606, 607, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 623, 624, 625, 629, 632, 635, 637, 638, 640, 646, 648, 650, 651, 654, 655, 661, 662, 663, 664, 665, 666, 667, 668, 669, 672, 674, 675, 683, 685, 691, 693, 694, 696, 697, 698, 701, 702, 706, 707, 708, 709, 710, 718, 721, 729, 733, 734, 736, 737, 746, 754, 770, 771, 772, 773, 778, 781, 782, 784, 785, 786, 787, 788, 790, 791, 793, 794, 795, 797, 803, 806, 809, 810, 811, 812, 813, 814, 816, 817, 818, 831, 834, 836, 837, 839, 841, 844, 845, 861, 862, 863, 865, 868, 871, 872, 886], "replic": [4, 16, 232, 236, 237, 238, 272, 683, 862, 865, 866, 886], "extend": [4, 76, 142, 145, 152, 167, 181, 201, 206, 208, 211, 213, 233, 246, 260, 263, 264, 266, 267, 268, 269, 275, 281, 356, 413, 420, 481, 482, 515, 523, 561, 562, 565, 573, 577, 583, 592, 594, 673, 706, 708, 710, 744, 771, 782, 786, 793, 797, 806, 809, 814, 816, 849, 852, 861, 874, 886], "main": [4, 49, 94, 101, 144, 157, 169, 172, 209, 213, 219, 232, 238, 266, 267, 328, 395, 472, 494, 687, 689, 784, 843, 845, 853, 862, 868, 869, 886], "tool": [4, 27, 54, 55, 70, 80, 89, 135, 141, 152, 156, 159, 162, 191, 193, 200, 201, 203, 206, 208, 212, 229, 238, 243, 246, 253, 273, 274, 277, 280, 281, 282, 481, 482, 519, 544, 843, 848, 849, 850, 851, 853, 857, 861, 865, 866, 867, 868, 869, 873, 874, 876, 884, 886], "integr": [4, 156, 161, 202, 206, 228, 238, 246, 544, 562, 594, 666, 845, 849, 857, 868, 871, 886], "meeg": [4, 243], "matlab": [4, 19, 196, 246, 305, 419, 501, 603, 619, 623, 851, 852, 862, 869, 870, 874, 884, 886], "toolbox": [4, 19, 70, 152, 156, 196, 246, 305, 419, 452, 570, 852, 862], "origin": [4, 5, 8, 9, 11, 12, 13, 16, 18, 21, 22, 24, 26, 32, 33, 34, 38, 41, 42, 45, 46, 49, 50, 70, 71, 72, 75, 78, 80, 81, 87, 93, 94, 96, 97, 100, 103, 107, 110, 112, 113, 114, 117, 118, 121, 128, 135, 136, 137, 138, 141, 142, 143, 145, 146, 147, 150, 152, 153, 157, 159, 160, 161, 162, 163, 167, 168, 170, 171, 173, 177, 178, 179, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 196, 197, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 214, 217, 219, 225, 230, 231, 232, 233, 236, 238, 241, 242, 258, 259, 260, 261, 263, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 279, 280, 281, 282, 284, 286, 287, 299, 300, 314, 362, 371, 413, 420, 427, 428, 429, 434, 437, 447, 475, 480, 481, 482, 489, 492, 496, 501, 515, 521, 530, 561, 562, 563, 572, 573, 577, 583, 594, 601, 609, 619, 623, 626, 631, 644, 646, 648, 655, 657, 658, 659, 666, 671, 691, 698, 706, 708, 709, 710, 750, 754, 770, 771, 778, 784, 786, 788, 790, 793, 794, 797, 804, 806, 807, 808, 809, 810, 813, 814, 816, 833, 841, 845, 853, 861, 862, 868, 871, 886], "interfac": [4, 8, 15, 45, 79, 88, 135, 156, 159, 167, 190, 197, 201, 203, 206, 207, 220, 246, 268, 269, 377, 382, 472, 473, 563, 754, 793, 848, 852, 857, 862, 871, 886], "eeglab": [4, 67, 70, 128, 169, 203, 206, 246, 263, 266, 267, 268, 269, 275, 314, 332, 413, 420, 443, 446, 481, 482, 497, 561, 562, 570, 577, 607, 612, 618, 706, 708, 710, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 868, 886], "In": [4, 5, 10, 15, 16, 19, 21, 32, 40, 42, 43, 44, 45, 46, 59, 70, 74, 78, 82, 83, 87, 88, 90, 94, 101, 103, 112, 114, 115, 116, 118, 126, 127, 132, 135, 136, 138, 141, 143, 145, 150, 151, 152, 153, 156, 157, 159, 161, 162, 163, 167, 168, 169, 171, 172, 173, 176, 177, 179, 182, 189, 191, 192, 193, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 219, 223, 225, 228, 229, 230, 238, 241, 242, 243, 246, 258, 260, 261, 263, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 280, 281, 282, 290, 299, 300, 304, 305, 310, 312, 322, 329, 331, 343, 356, 360, 361, 371, 372, 373, 374, 413, 415, 419, 420, 429, 430, 434, 437, 446, 448, 456, 457, 476, 478, 479, 481, 482, 489, 528, 529, 530, 531, 532, 533, 537, 540, 557, 561, 562, 563, 564, 577, 578, 579, 580, 586, 590, 592, 600, 602, 609, 611, 634, 651, 671, 674, 692, 701, 706, 708, 709, 710, 714, 715, 716, 717, 719, 722, 732, 733, 734, 735, 736, 737, 738, 741, 751, 754, 767, 778, 784, 785, 786, 787, 788, 790, 791, 793, 794, 797, 798, 805, 806, 807, 808, 809, 812, 814, 815, 818, 841, 843, 845, 846, 850, 851, 853, 856, 861, 862, 865, 867, 868, 871, 872, 886], "summari": [4, 10, 173, 202, 206, 220, 273, 274, 277, 280, 281, 282, 538, 539, 698, 845, 871], "fetch": [4, 138, 251, 382, 387, 388, 389, 390, 391, 392, 397, 405, 406, 845, 862, 886], "subject": [4, 5, 7, 8, 9, 10, 11, 19, 22, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 68, 71, 72, 79, 80, 81, 83, 89, 90, 91, 95, 104, 109, 112, 113, 115, 116, 118, 124, 125, 126, 127, 131, 134, 135, 136, 137, 138, 141, 144, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 169, 170, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 193, 197, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 224, 225, 228, 229, 230, 232, 233, 236, 237, 238, 239, 242, 243, 246, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 299, 300, 305, 309, 310, 311, 314, 343, 344, 345, 346, 351, 353, 354, 362, 367, 368, 369, 374, 382, 387, 389, 390, 391, 392, 397, 405, 406, 432, 447, 463, 465, 467, 469, 471, 472, 473, 474, 475, 481, 482, 483, 486, 515, 517, 519, 521, 525, 528, 529, 540, 548, 549, 562, 566, 577, 589, 590, 594, 611, 615, 621, 626, 628, 629, 631, 634, 638, 643, 644, 645, 646, 654, 655, 656, 658, 659, 660, 669, 671, 672, 683, 687, 689, 698, 701, 702, 744, 746, 753, 754, 770, 772, 777, 782, 783, 796, 810, 812, 817, 818, 835, 836, 841, 851, 859, 861, 863, 865, 868, 874, 886], "If": [4, 27, 28, 31, 43, 44, 69, 70, 82, 99, 101, 115, 117, 120, 127, 135, 136, 138, 141, 143, 145, 147, 150, 151, 152, 157, 160, 161, 162, 166, 169, 170, 171, 172, 173, 176, 182, 183, 189, 190, 191, 193, 197, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 214, 217, 218, 219, 220, 223, 228, 229, 230, 236, 241, 243, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 331, 332, 334, 337, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 597, 598, 601, 602, 603, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 749, 753, 754, 759, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 824, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 844, 845, 848, 849, 850, 851, 852, 853, 856, 861, 862, 865, 866, 867, 868, 869, 871, 872, 886], "disk": [4, 29, 80, 108, 110, 143, 144, 150, 151, 159, 167, 171, 173, 178, 181, 185, 201, 207, 210, 211, 217, 218, 219, 225, 258, 260, 261, 262, 266, 267, 268, 269, 271, 272, 284, 315, 388, 432, 454, 480, 481, 482, 564, 617, 624, 626, 628, 634, 655, 708, 710, 727, 754, 784, 788, 792, 794, 807, 833, 835, 851, 861, 865, 868, 871, 886], "fetcher": [4, 138, 862, 874, 886], "automat": [4, 70, 78, 80, 83, 94, 101, 141, 142, 143, 145, 146, 150, 151, 152, 156, 157, 167, 169, 170, 171, 173, 183, 190, 191, 192, 193, 200, 201, 202, 203, 204, 206, 207, 208, 211, 217, 219, 220, 223, 233, 246, 258, 260, 261, 263, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 284, 314, 320, 342, 362, 379, 380, 381, 382, 384, 385, 386, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 416, 423, 426, 434, 437, 445, 461, 462, 469, 471, 481, 482, 487, 494, 498, 502, 506, 525, 561, 562, 564, 572, 573, 574, 577, 583, 584, 587, 592, 594, 609, 620, 631, 642, 645, 650, 651, 655, 666, 693, 694, 696, 697, 706, 709, 750, 754, 772, 773, 777, 778, 784, 787, 790, 791, 792, 793, 800, 801, 807, 812, 817, 818, 844, 845, 851, 852, 861, 862, 868, 874, 886], "remot": [4, 193, 251, 389, 820, 843, 845, 851, 874], "repositori": [4, 171, 846, 852, 867], "dure": [4, 19, 33, 38, 43, 45, 70, 81, 83, 94, 100, 103, 116, 121, 127, 135, 137, 142, 145, 150, 156, 158, 161, 167, 168, 169, 172, 173, 181, 183, 192, 197, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 243, 246, 258, 264, 266, 267, 268, 269, 270, 271, 273, 276, 277, 279, 281, 282, 283, 299, 300, 306, 343, 345, 349, 356, 360, 361, 363, 368, 371, 372, 373, 413, 419, 420, 430, 436, 437, 448, 456, 457, 473, 476, 478, 479, 481, 482, 483, 494, 510, 521, 525, 540, 548, 562, 583, 590, 594, 609, 648, 651, 656, 671, 674, 680, 681, 682, 701, 706, 708, 709, 710, 712, 715, 735, 738, 742, 743, 752, 754, 770, 773, 784, 791, 794, 798, 801, 807, 812, 818, 841, 844, 850, 853, 861, 862, 863, 867, 868, 871, 886], "inform": [4, 5, 9, 11, 21, 22, 26, 28, 29, 31, 34, 35, 38, 39, 40, 42, 43, 44, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 68, 80, 84, 90, 92, 93, 94, 95, 101, 104, 107, 108, 110, 124, 131, 134, 135, 136, 141, 142, 143, 144, 145, 147, 150, 151, 152, 157, 159, 160, 161, 163, 166, 167, 169, 171, 173, 176, 178, 180, 181, 182, 183, 189, 190, 191, 192, 193, 196, 197, 204, 205, 206, 207, 208, 209, 211, 214, 215, 216, 217, 219, 223, 224, 225, 228, 230, 233, 236, 238, 242, 243, 246, 251, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 286, 287, 299, 300, 301, 307, 308, 312, 313, 320, 321, 322, 326, 328, 329, 331, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 360, 362, 371, 372, 373, 375, 413, 415, 420, 421, 422, 432, 433, 437, 443, 444, 445, 446, 448, 449, 451, 452, 454, 457, 464, 465, 471, 473, 476, 479, 480, 481, 482, 483, 486, 492, 501, 513, 518, 521, 524, 525, 526, 530, 540, 558, 559, 561, 562, 572, 573, 576, 582, 583, 590, 592, 594, 599, 600, 605, 607, 610, 619, 621, 622, 623, 641, 642, 648, 653, 654, 670, 671, 674, 693, 697, 703, 705, 706, 707, 708, 709, 710, 722, 733, 734, 735, 736, 737, 738, 743, 744, 749, 750, 754, 767, 770, 774, 778, 779, 780, 782, 785, 789, 795, 796, 802, 806, 810, 816, 832, 841, 843, 844, 845, 848, 849, 852, 857, 862, 863, 866, 867, 869, 886], "e": [4, 7, 8, 12, 28, 41, 42, 44, 46, 47, 54, 69, 70, 71, 80, 84, 101, 112, 114, 120, 135, 138, 141, 142, 144, 145, 147, 151, 152, 154, 156, 158, 161, 162, 163, 166, 167, 169, 170, 171, 179, 181, 186, 189, 190, 191, 193, 196, 197, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 214, 217, 218, 223, 224, 225, 228, 229, 230, 233, 236, 238, 242, 243, 246, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 289, 290, 299, 300, 301, 304, 305, 308, 310, 312, 314, 315, 320, 329, 331, 340, 342, 353, 356, 360, 361, 367, 371, 372, 373, 382, 388, 389, 391, 396, 405, 406, 413, 415, 416, 419, 420, 422, 423, 424, 427, 428, 429, 432, 433, 434, 437, 440, 442, 445, 446, 447, 449, 451, 452, 454, 455, 456, 457, 463, 469, 472, 475, 476, 478, 479, 480, 481, 482, 483, 493, 494, 496, 498, 500, 515, 517, 519, 522, 523, 524, 525, 528, 529, 535, 536, 537, 538, 539, 540, 541, 544, 545, 546, 548, 561, 562, 564, 565, 570, 571, 572, 573, 576, 577, 578, 579, 580, 582, 583, 585, 586, 589, 590, 594, 600, 601, 602, 609, 614, 621, 624, 625, 628, 629, 634, 641, 642, 643, 644, 645, 646, 652, 655, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 674, 677, 691, 692, 693, 694, 695, 696, 697, 698, 701, 702, 705, 706, 708, 709, 710, 714, 715, 716, 717, 718, 719, 722, 732, 736, 737, 741, 744, 754, 759, 767, 770, 771, 772, 777, 778, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 797, 798, 800, 801, 805, 806, 807, 808, 809, 812, 814, 816, 817, 820, 831, 834, 841, 843, 844, 845, 846, 849, 851, 857, 861, 862, 865, 867, 868, 871, 872, 874, 886], "rate": [4, 69, 97, 101, 103, 181, 190, 191, 196, 203, 204, 206, 232, 242, 246, 261, 264, 265, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 375, 418, 448, 452, 454, 481, 482, 489, 496, 504, 585, 592, 608, 659, 671, 684, 690, 692, 695, 706, 708, 709, 710, 724, 784, 786, 795, 807, 865, 886], "per": [4, 31, 47, 90, 94, 101, 107, 110, 120, 126, 131, 143, 145, 151, 152, 159, 167, 170, 181, 193, 202, 206, 208, 220, 228, 233, 238, 242, 258, 266, 267, 268, 269, 271, 273, 274, 275, 277, 278, 279, 280, 281, 282, 284, 316, 323, 362, 377, 390, 405, 413, 420, 423, 426, 434, 437, 446, 447, 481, 482, 538, 539, 544, 545, 546, 563, 566, 611, 651, 658, 687, 689, 702, 706, 708, 710, 712, 715, 722, 724, 725, 732, 733, 734, 736, 737, 744, 754, 784, 785, 786, 793, 815, 845, 851, 867, 868, 874, 886], "name": [4, 5, 7, 8, 10, 18, 22, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 54, 55, 58, 59, 68, 70, 79, 83, 90, 92, 93, 94, 95, 100, 101, 103, 109, 112, 126, 131, 132, 135, 136, 138, 142, 143, 144, 145, 146, 150, 151, 160, 161, 162, 167, 169, 170, 171, 172, 173, 178, 179, 180, 181, 191, 192, 197, 201, 202, 203, 206, 207, 209, 211, 212, 213, 220, 223, 224, 225, 228, 229, 241, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 305, 309, 310, 311, 312, 314, 315, 320, 323, 324, 325, 326, 327, 329, 330, 331, 336, 338, 339, 340, 342, 353, 361, 362, 365, 367, 368, 369, 371, 372, 375, 383, 388, 391, 394, 413, 415, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 429, 431, 432, 434, 437, 440, 443, 444, 445, 446, 454, 455, 463, 465, 466, 467, 469, 471, 472, 473, 474, 475, 480, 481, 482, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 514, 515, 517, 521, 522, 543, 547, 551, 552, 553, 559, 560, 561, 562, 563, 564, 575, 577, 578, 579, 580, 583, 584, 585, 586, 587, 590, 595, 600, 602, 605, 606, 609, 611, 612, 614, 616, 618, 619, 620, 621, 623, 625, 626, 627, 628, 629, 631, 632, 634, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 648, 651, 654, 655, 660, 674, 683, 687, 691, 692, 698, 701, 702, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 722, 726, 728, 732, 734, 737, 739, 741, 751, 753, 754, 759, 770, 771, 772, 773, 775, 778, 782, 783, 784, 785, 786, 788, 790, 791, 792, 793, 797, 798, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 816, 817, 818, 830, 831, 832, 833, 836, 837, 838, 839, 840, 841, 843, 844, 849, 850, 851, 853, 862, 863, 868, 872, 876, 886], "etc": [4, 27, 31, 36, 47, 77, 144, 156, 161, 167, 168, 169, 172, 173, 176, 189, 190, 191, 200, 201, 202, 206, 211, 217, 220, 223, 228, 236, 243, 259, 264, 266, 267, 268, 269, 271, 272, 273, 277, 281, 336, 442, 454, 455, 481, 482, 489, 501, 505, 524, 534, 559, 562, 576, 594, 619, 623, 648, 653, 680, 681, 682, 683, 693, 694, 696, 697, 706, 708, 709, 710, 754, 778, 782, 785, 812, 841, 845, 849, 850, 863, 865, 867, 868, 871, 872, 874, 886], "mat": [4, 19, 196, 246, 271, 501, 619, 623, 868, 886], "store": [4, 16, 29, 30, 70, 90, 93, 94, 95, 104, 109, 115, 116, 135, 136, 141, 142, 143, 144, 145, 150, 151, 152, 156, 157, 159, 161, 163, 169, 170, 171, 173, 176, 183, 190, 191, 192, 193, 201, 202, 207, 208, 211, 212, 214, 217, 219, 220, 224, 225, 243, 258, 259, 260, 264, 266, 267, 268, 269, 271, 276, 277, 278, 280, 284, 326, 347, 365, 382, 388, 395, 396, 405, 406, 415, 417, 428, 437, 442, 446, 451, 472, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522, 540, 549, 551, 562, 570, 577, 582, 593, 612, 618, 619, 623, 626, 649, 658, 659, 671, 686, 706, 707, 709, 711, 712, 713, 714, 715, 716, 717, 726, 755, 762, 774, 807, 832, 833, 841, 845, 861, 862, 863, 865, 868, 871, 886], "fit": [4, 7, 8, 10, 11, 12, 13, 15, 16, 18, 21, 24, 40, 41, 45, 50, 59, 70, 71, 73, 74, 76, 78, 80, 81, 83, 88, 101, 111, 116, 123, 138, 142, 152, 153, 157, 159, 166, 167, 171, 173, 178, 180, 184, 185, 186, 187, 188, 190, 193, 197, 201, 204, 205, 208, 209, 210, 211, 213, 232, 246, 252, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 275, 276, 281, 302, 307, 308, 314, 343, 344, 345, 346, 349, 353, 354, 355, 367, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 434, 442, 452, 456, 481, 482, 493, 521, 524, 529, 559, 561, 562, 563, 566, 569, 571, 572, 573, 577, 583, 584, 594, 624, 655, 670, 691, 706, 708, 709, 710, 719, 754, 771, 778, 782, 786, 788, 790, 793, 794, 797, 798, 799, 801, 804, 806, 808, 809, 810, 814, 816, 845, 857, 862, 865, 868, 872, 875, 886], "inferenti": [4, 228], "evalu": [4, 31, 44, 54, 55, 163, 189, 197, 211, 213, 228, 246, 278, 362, 430, 439, 478, 479, 513, 544, 571, 583, 666, 862, 865, 867, 868], "signific": [4, 72, 100, 101, 112, 152, 166, 173, 189, 200, 202, 203, 205, 206, 208, 228, 230, 231, 232, 233, 234, 235, 243, 246, 263, 266, 267, 268, 269, 271, 320, 326, 355, 413, 419, 420, 452, 481, 482, 537, 561, 562, 617, 693, 694, 696, 697, 698, 706, 708, 710, 771, 786, 790, 793, 809, 814, 816, 861, 868, 871, 874], "jose": [4, 886], "garcia": 4, "alani": [4, 886], "jcg": 4, "gmail": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 50, 51, 57, 58, 60, 65, 69, 72, 73, 74, 76, 78, 80, 81, 82, 84, 88, 90, 93, 94, 95, 99, 101, 103, 109, 112, 113, 114, 118, 120, 121, 123, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 142, 158, 160, 162, 180, 181, 183, 184, 185, 192, 196, 210, 225, 228, 232, 233, 236, 237, 238, 242, 243], "com": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 50, 51, 57, 58, 60, 65, 69, 72, 73, 74, 76, 78, 80, 81, 82, 84, 88, 90, 93, 94, 95, 101, 103, 109, 112, 113, 114, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 142, 158, 160, 161, 162, 180, 181, 183, 184, 185, 192, 196, 210, 224, 225, 228, 232, 233, 236, 237, 238, 242, 243, 246, 266, 267, 268, 269, 277, 390, 481, 482, 489, 843, 845, 853, 865], "matplotlib": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 68, 69, 70, 71, 72, 73, 82, 86, 90, 92, 93, 96, 97, 99, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 127, 131, 132, 133, 135, 137, 138, 145, 146, 147, 152, 161, 171, 172, 173, 177, 178, 181, 182, 184, 185, 196, 197, 201, 203, 204, 206, 207, 208, 209, 211, 212, 213, 217, 220, 225, 228, 229, 230, 231, 232, 233, 238, 242, 243, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 280, 281, 282, 314, 315, 413, 420, 481, 482, 561, 562, 577, 628, 706, 707, 708, 710, 722, 732, 754, 755, 757, 767, 769, 771, 772, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 799, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 823, 824, 826, 843, 844, 845, 863, 886], "pyplot": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 68, 69, 70, 71, 72, 73, 82, 86, 90, 92, 93, 96, 97, 99, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 127, 131, 132, 133, 135, 137, 138, 145, 146, 147, 152, 161, 171, 173, 177, 178, 181, 182, 184, 185, 196, 197, 203, 204, 207, 208, 211, 212, 213, 217, 225, 228, 229, 230, 231, 232, 233, 238, 242, 243, 265, 266, 267, 268, 269, 706, 722, 732, 757, 778, 788, 790, 815, 886], "plt": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 68, 69, 70, 71, 72, 73, 82, 86, 90, 92, 93, 96, 97, 99, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 127, 131, 132, 133, 135, 137, 138, 145, 146, 147, 152, 161, 171, 173, 177, 178, 181, 182, 184, 185, 196, 197, 203, 204, 207, 208, 211, 212, 213, 217, 225, 228, 229, 230, 231, 232, 233, 238, 242, 243, 268, 269, 323, 722, 732, 792], "stat": [4, 96, 97, 99, 100, 101, 112, 113, 142, 196, 228, 229, 230, 231, 232, 233, 236, 237, 238, 243, 266, 267, 320, 331, 562, 570, 783, 863, 876, 883, 886], "linear_regress": [4, 101, 142, 228, 876, 886], "plot_ev": [4, 7, 138, 167, 212, 218, 266, 267, 784, 876, 886], "combine_evok": [4, 7, 99, 142, 145, 150, 152, 167, 177, 192, 212, 229, 231, 872, 876, 886], "subj": [4, 161, 206], "experi": [4, 19, 45, 65, 70, 128, 152, 166, 167, 169, 170, 181, 192, 201, 202, 208, 211, 212, 213, 214, 217, 218, 246, 271, 500, 841, 845, 862, 864, 868, 886], "particip": [4, 71, 73, 75, 76, 81, 82, 83, 90, 93, 127, 142, 145, 147, 152, 167, 168, 169, 170, 173, 193, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 243, 841, 862, 867, 874], "perform": [4, 8, 10, 13, 19, 31, 45, 54, 75, 82, 84, 100, 101, 103, 112, 119, 138, 141, 144, 145, 147, 150, 152, 156, 157, 158, 167, 168, 169, 170, 179, 189, 190, 193, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 217, 228, 230, 232, 236, 238, 259, 261, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 284, 289, 292, 299, 300, 355, 356, 357, 359, 361, 362, 377, 413, 416, 419, 420, 423, 425, 426, 429, 430, 434, 448, 449, 454, 456, 469, 470, 471, 472, 476, 478, 479, 481, 482, 488, 489, 496, 521, 522, 524, 525, 529, 530, 531, 532, 533, 535, 536, 540, 545, 546, 561, 562, 564, 567, 574, 575, 576, 577, 579, 580, 583, 584, 592, 594, 609, 621, 654, 657, 658, 659, 671, 683, 688, 692, 693, 694, 695, 696, 697, 699, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 744, 770, 771, 778, 784, 785, 786, 789, 793, 797, 799, 801, 806, 807, 808, 809, 814, 816, 820, 841, 843, 851, 852, 853, 861, 862, 868, 871, 886], "two": [4, 5, 12, 16, 19, 22, 32, 37, 42, 45, 47, 54, 55, 65, 67, 69, 70, 72, 74, 75, 81, 84, 88, 90, 112, 115, 117, 132, 133, 135, 136, 138, 142, 143, 145, 147, 151, 152, 156, 157, 159, 161, 167, 169, 170, 171, 172, 173, 176, 179, 181, 191, 192, 193, 197, 200, 202, 203, 204, 205, 206, 207, 208, 209, 212, 217, 218, 219, 220, 225, 228, 230, 232, 236, 238, 241, 243, 246, 260, 266, 267, 268, 269, 272, 273, 274, 277, 278, 280, 281, 282, 299, 300, 314, 322, 356, 360, 361, 371, 372, 373, 405, 413, 415, 420, 424, 428, 436, 437, 447, 449, 451, 452, 453, 456, 457, 476, 478, 479, 481, 482, 505, 517, 535, 540, 557, 562, 565, 572, 577, 583, 592, 593, 608, 609, 648, 651, 659, 683, 687, 688, 689, 691, 693, 694, 695, 696, 697, 701, 706, 708, 709, 710, 724, 725, 735, 744, 754, 759, 762, 784, 785, 786, 794, 801, 807, 812, 841, 845, 851, 862, 865, 867, 868, 871, 886], "altern": [4, 114, 127, 162, 163, 170, 173, 192, 200, 202, 203, 206, 213, 214, 220, 228, 242, 243, 257, 259, 260, 263, 266, 267, 268, 269, 275, 356, 413, 420, 481, 482, 506, 524, 561, 562, 577, 616, 620, 695, 706, 708, 710, 754, 771, 786, 793, 797, 806, 809, 814, 816, 843, 845, 851, 862, 865, 871, 873, 886], "choic": [4, 114, 156, 161, 171, 172, 185, 203, 208, 218, 230, 279, 453, 463, 540, 699, 843, 849, 862, 868], "task": [4, 10, 32, 33, 34, 46, 70, 112, 113, 137, 138, 144, 145, 156, 157, 166, 170, 176, 197, 201, 206, 242, 246, 382, 416, 423, 722, 732, 733, 736, 862, 868, 869, 872, 874, 886], "discrimin": [4, 9, 18, 83, 197, 243, 246, 413, 417, 420, 562, 862], "between": [4, 8, 10, 16, 19, 22, 26, 27, 36, 38, 40, 45, 47, 59, 60, 69, 82, 83, 88, 96, 99, 100, 103, 108, 113, 114, 127, 128, 133, 134, 135, 137, 138, 141, 142, 145, 147, 150, 151, 152, 157, 158, 159, 161, 162, 163, 166, 167, 170, 171, 172, 173, 177, 179, 189, 190, 191, 192, 193, 196, 197, 201, 202, 203, 205, 206, 207, 209, 210, 211, 212, 213, 214, 217, 218, 219, 225, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 243, 246, 258, 259, 260, 261, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 289, 310, 314, 320, 322, 323, 343, 355, 356, 362, 363, 365, 366, 367, 413, 414, 419, 425, 429, 432, 434, 436, 437, 439, 447, 454, 457, 458, 476, 478, 479, 481, 482, 500, 505, 522, 523, 535, 537, 540, 544, 545, 546, 559, 562, 564, 565, 567, 570, 572, 573, 574, 577, 578, 579, 580, 581, 583, 584, 587, 592, 593, 594, 598, 600, 621, 624, 625, 648, 656, 657, 658, 659, 661, 663, 666, 667, 670, 671, 674, 676, 677, 678, 680, 681, 685, 686, 693, 694, 696, 697, 698, 701, 706, 707, 709, 711, 713, 714, 716, 721, 722, 725, 729, 730, 732, 733, 734, 736, 737, 744, 754, 759, 770, 772, 773, 775, 778, 780, 784, 787, 788, 790, 791, 793, 807, 808, 811, 812, 814, 817, 818, 820, 832, 841, 843, 845, 851, 853, 861, 862, 865, 867, 868, 871, 874, 886], "stimuli": [4, 19, 69, 116, 128, 142, 145, 147, 150, 152, 167, 181, 192, 196, 205, 246, 419, 565, 841, 862], "The": [4, 5, 7, 8, 9, 11, 14, 15, 16, 18, 19, 21, 27, 31, 34, 38, 41, 43, 44, 45, 46, 47, 48, 49, 52, 58, 59, 60, 63, 65, 67, 69, 74, 75, 78, 79, 80, 81, 82, 83, 84, 88, 94, 95, 101, 103, 104, 107, 109, 110, 112, 113, 114, 115, 116, 120, 126, 127, 128, 134, 135, 136, 137, 138, 142, 143, 144, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 172, 173, 174, 175, 178, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 196, 197, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 242, 243, 244, 245, 246, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 382, 383, 387, 388, 389, 390, 391, 392, 394, 397, 405, 406, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 501, 502, 503, 504, 505, 506, 508, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 645, 646, 647, 648, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 759, 760, 762, 763, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 835, 836, 837, 838, 840, 841, 843, 845, 848, 849, 851, 857, 863, 864, 865, 866, 869, 870, 872, 874, 886], "same": [4, 18, 19, 28, 44, 45, 54, 55, 58, 70, 74, 75, 79, 83, 90, 99, 103, 109, 113, 114, 127, 135, 136, 141, 142, 143, 145, 150, 151, 152, 157, 161, 162, 163, 169, 170, 171, 172, 176, 177, 179, 184, 189, 191, 192, 193, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 218, 219, 220, 223, 228, 229, 230, 232, 233, 236, 237, 238, 241, 258, 260, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 286, 287, 289, 299, 302, 311, 316, 319, 330, 355, 356, 360, 361, 362, 373, 375, 392, 413, 420, 421, 426, 434, 437, 438, 447, 448, 463, 466, 470, 471, 476, 480, 481, 482, 488, 489, 496, 497, 508, 511, 548, 562, 563, 564, 573, 576, 579, 580, 581, 583, 594, 595, 608, 612, 618, 619, 634, 652, 653, 656, 657, 658, 659, 666, 671, 672, 688, 692, 693, 694, 696, 697, 701, 706, 708, 709, 710, 724, 725, 731, 733, 734, 735, 736, 737, 738, 744, 754, 759, 770, 771, 778, 784, 785, 786, 788, 790, 793, 795, 806, 807, 810, 812, 813, 815, 839, 845, 850, 857, 862, 865, 868, 869, 872, 886], "whole": [4, 28, 54, 55, 70, 163, 201, 228, 246, 273, 274, 277, 280, 281, 282, 447, 517, 594, 611, 655, 672, 707, 754, 780, 814, 845, 853, 862, 886], "vari": [4, 19, 22, 46, 47, 59, 142, 156, 191, 196, 203, 206, 207, 210, 211, 213, 225, 228, 266, 267, 271, 273, 274, 277, 280, 281, 282, 343, 344, 345, 346, 347, 348, 436, 447, 658, 697, 777, 862, 868, 871, 874, 886], "level": [4, 8, 9, 27, 36, 44, 56, 98, 101, 102, 122, 130, 135, 142, 143, 145, 151, 152, 156, 161, 166, 167, 169, 171, 172, 181, 182, 189, 196, 200, 202, 203, 206, 207, 213, 225, 228, 230, 231, 232, 233, 234, 236, 237, 238, 243, 246, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 423, 424, 426, 429, 430, 432, 434, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 464, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 555, 558, 559, 561, 562, 564, 565, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 585, 587, 588, 589, 590, 591, 592, 594, 595, 597, 598, 601, 602, 603, 606, 607, 608, 609, 613, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 626, 628, 629, 630, 631, 632, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 651, 653, 654, 655, 657, 658, 659, 660, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 685, 687, 689, 693, 694, 695, 696, 697, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 724, 725, 728, 729, 733, 734, 736, 737, 738, 739, 742, 743, 744, 749, 752, 753, 754, 762, 770, 771, 779, 782, 786, 787, 788, 789, 790, 793, 794, 797, 798, 799, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 843, 845, 852, 862, 863, 868, 870, 883, 886], "nois": [4, 5, 7, 11, 18, 21, 27, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 66, 70, 74, 82, 84, 88, 90, 93, 94, 95, 104, 107, 108, 109, 110, 114, 120, 122, 124, 130, 145, 147, 150, 152, 153, 163, 167, 173, 177, 179, 180, 181, 182, 183, 184, 185, 186, 190, 192, 196, 197, 201, 203, 205, 209, 211, 214, 217, 220, 225, 228, 236, 238, 246, 258, 263, 266, 267, 268, 269, 271, 273, 274, 276, 277, 280, 281, 282, 299, 300, 302, 349, 355, 356, 357, 358, 359, 360, 361, 371, 372, 373, 413, 420, 421, 436, 456, 457, 476, 478, 479, 481, 482, 486, 518, 529, 535, 536, 540, 542, 545, 546, 562, 563, 576, 594, 602, 603, 615, 621, 658, 659, 660, 670, 708, 710, 734, 737, 779, 784, 788, 792, 794, 807, 808, 830, 841, 865, 871, 886], "less": [4, 5, 10, 18, 24, 26, 40, 41, 44, 45, 46, 49, 50, 70, 78, 87, 114, 119, 124, 135, 141, 142, 144, 151, 152, 157, 159, 160, 172, 173, 177, 182, 184, 185, 186, 189, 200, 201, 203, 204, 206, 208, 209, 211, 212, 213, 217, 224, 228, 230, 243, 365, 454, 478, 479, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522, 529, 562, 570, 590, 592, 599, 693, 694, 695, 696, 697, 701, 754, 845, 852, 862, 865, 867, 868, 886], "discern": [4, 862], "observ": [4, 75, 101, 138, 145, 152, 157, 206, 208, 212, 213, 228, 230, 232, 233, 236, 238, 243, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 452, 481, 482, 562, 687, 692, 693, 694, 695, 696, 697, 706, 708, 709, 710, 711, 712, 713, 807, 841, 861, 862], "fig": [4, 5, 10, 11, 12, 13, 15, 18, 19, 21, 22, 24, 39, 41, 42, 45, 47, 52, 58, 67, 68, 69, 70, 71, 72, 73, 80, 81, 82, 87, 93, 96, 99, 103, 104, 109, 112, 113, 114, 115, 116, 118, 120, 123, 124, 125, 127, 135, 136, 137, 138, 142, 145, 147, 151, 152, 157, 158, 159, 160, 161, 167, 171, 173, 177, 178, 179, 181, 182, 183, 184, 186, 192, 196, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 225, 228, 229, 231, 232, 233, 242, 243, 263, 264, 265, 266, 267, 268, 269, 275, 276, 279, 281, 282, 314, 315, 413, 420, 481, 482, 561, 562, 706, 707, 708, 710, 757, 767, 770, 771, 772, 774, 775, 776, 777, 778, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 814, 815, 818, 824, 886], "similar": [4, 16, 17, 18, 19, 20, 27, 33, 58, 60, 70, 88, 103, 109, 112, 114, 131, 137, 138, 141, 142, 143, 144, 145, 151, 161, 171, 197, 200, 201, 203, 205, 206, 207, 208, 209, 212, 217, 224, 228, 230, 233, 241, 246, 259, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 299, 356, 365, 414, 429, 447, 454, 481, 482, 513, 559, 562, 577, 583, 661, 706, 709, 710, 744, 754, 769, 788, 810, 843, 845, 850, 851, 852, 862, 863, 867, 868, 874, 886], "approach": [4, 10, 19, 21, 44, 45, 46, 59, 73, 75, 103, 127, 142, 144, 145, 150, 151, 152, 157, 161, 164, 165, 166, 167, 168, 173, 181, 196, 197, 200, 201, 203, 204, 205, 206, 209, 211, 213, 225, 228, 229, 232, 234, 243, 246, 271, 367, 391, 486, 520, 562, 579, 592, 601, 645, 770, 822, 841, 845, 853, 861, 862, 863, 867, 868, 886], "across": [4, 16, 17, 18, 19, 20, 26, 27, 28, 32, 33, 47, 54, 55, 58, 60, 80, 83, 84, 103, 109, 113, 114, 135, 136, 138, 141, 142, 143, 144, 146, 150, 151, 154, 156, 163, 166, 167, 169, 173, 181, 197, 200, 201, 203, 205, 206, 207, 208, 209, 211, 213, 220, 223, 224, 228, 236, 237, 238, 242, 246, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 280, 281, 282, 319, 361, 362, 413, 416, 420, 422, 423, 425, 426, 427, 438, 447, 481, 482, 500, 538, 539, 544, 559, 562, 564, 567, 577, 621, 631, 651, 671, 697, 701, 706, 707, 708, 709, 710, 717, 724, 733, 734, 736, 737, 769, 773, 778, 785, 786, 788, 789, 793, 806, 808, 812, 815, 818, 841, 845, 861, 862, 865, 868, 874, 886], "signal": [4, 8, 9, 10, 13, 15, 16, 19, 21, 27, 28, 42, 45, 51, 58, 59, 63, 70, 71, 73, 74, 75, 77, 82, 85, 88, 100, 103, 111, 113, 114, 121, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 152, 153, 163, 166, 167, 173, 176, 179, 181, 185, 190, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 209, 215, 216, 217, 218, 220, 225, 226, 227, 228, 233, 244, 246, 258, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 280, 281, 282, 302, 343, 345, 349, 350, 353, 356, 357, 358, 359, 361, 366, 373, 382, 405, 406, 413, 415, 417, 418, 419, 420, 421, 424, 425, 434, 437, 446, 447, 448, 449, 451, 452, 453, 454, 481, 482, 496, 502, 528, 529, 530, 543, 559, 560, 561, 562, 563, 564, 571, 573, 574, 575, 578, 579, 580, 583, 585, 593, 594, 615, 624, 626, 629, 648, 651, 670, 672, 673, 692, 693, 706, 708, 709, 710, 711, 712, 713, 721, 722, 724, 725, 729, 731, 732, 735, 738, 754, 778, 784, 786, 788, 793, 794, 796, 797, 798, 799, 801, 807, 808, 841, 861, 862, 865, 886], "continuum": [4, 862, 886], "span": [4, 82, 119, 137, 141, 142, 150, 151, 152, 166, 167, 169, 179, 192, 200, 204, 215, 216, 217, 219, 220, 241, 243, 260, 266, 267, 268, 269, 271, 481, 482, 500, 559, 564, 565, 585, 621, 698, 706, 708, 710, 724, 769, 771, 808, 814, 861, 862, 863, 868, 874, 886], "85": [4, 13, 19, 35, 37, 47, 78, 79, 90, 103, 109, 112, 114, 138, 141, 146, 147, 161, 170, 177, 183, 196, 197, 204, 210, 228, 229, 232, 233, 886], "increas": [4, 11, 32, 55, 70, 112, 152, 173, 193, 203, 206, 207, 212, 213, 225, 230, 233, 243, 264, 265, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 454, 481, 482, 492, 562, 583, 602, 693, 694, 696, 697, 706, 709, 722, 732, 733, 734, 735, 736, 737, 738, 754, 758, 784, 801, 807, 862, 868, 886], "step": [4, 8, 11, 15, 18, 24, 41, 46, 59, 63, 68, 94, 99, 103, 109, 112, 120, 127, 135, 141, 143, 152, 153, 159, 162, 167, 168, 169, 171, 173, 191, 192, 197, 200, 201, 202, 203, 206, 208, 209, 211, 213, 217, 228, 229, 243, 246, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 291, 293, 343, 344, 345, 349, 413, 419, 428, 431, 454, 455, 471, 472, 479, 481, 482, 498, 557, 562, 572, 577, 583, 592, 656, 673, 693, 694, 696, 697, 698, 721, 729, 744, 754, 770, 778, 807, 818, 845, 846, 851, 853, 859, 861, 862, 867, 868, 872, 874, 886], "other": [4, 43, 61, 70, 83, 84, 112, 127, 142, 144, 146, 151, 152, 156, 157, 161, 167, 169, 170, 171, 173, 176, 178, 181, 182, 189, 190, 192, 193, 197, 200, 201, 204, 205, 206, 207, 208, 209, 210, 213, 217, 219, 220, 224, 225, 228, 232, 241, 243, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 285, 314, 326, 327, 355, 362, 367, 419, 421, 430, 432, 434, 436, 437, 442, 446, 458, 462, 463, 476, 478, 479, 481, 482, 493, 529, 540, 551, 561, 562, 583, 589, 594, 608, 612, 614, 625, 628, 634, 637, 643, 645, 655, 666, 671, 677, 692, 706, 707, 708, 709, 710, 754, 767, 775, 782, 784, 786, 797, 801, 807, 812, 834, 839, 841, 850, 851, 852, 853, 857, 861, 862, 863, 865, 867, 871, 874, 886], "word": [4, 101, 144, 152, 156, 169, 176, 197, 203, 207, 208, 211, 228, 229, 243, 246, 396, 419, 735, 738, 754, 767, 841, 845, 862, 868, 874], "g": [4, 8, 28, 31, 37, 41, 42, 44, 68, 69, 70, 80, 81, 84, 96, 101, 112, 114, 115, 120, 126, 127, 135, 138, 141, 142, 144, 151, 152, 156, 161, 162, 163, 167, 169, 170, 171, 181, 189, 190, 191, 196, 197, 200, 202, 203, 204, 205, 206, 207, 209, 214, 217, 218, 223, 224, 228, 229, 233, 236, 238, 242, 243, 246, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 299, 300, 301, 305, 312, 314, 315, 320, 329, 331, 340, 342, 353, 356, 360, 361, 367, 371, 372, 373, 382, 388, 391, 396, 405, 406, 413, 415, 416, 419, 420, 422, 423, 424, 427, 428, 429, 432, 433, 434, 437, 442, 445, 446, 447, 449, 451, 452, 454, 455, 456, 457, 463, 469, 472, 475, 476, 478, 479, 480, 481, 482, 483, 494, 517, 519, 523, 524, 525, 529, 535, 536, 537, 540, 544, 545, 546, 548, 561, 562, 564, 565, 572, 573, 576, 577, 578, 579, 580, 582, 583, 586, 589, 590, 594, 600, 601, 602, 609, 614, 621, 628, 629, 634, 641, 642, 643, 644, 645, 646, 652, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 674, 677, 691, 692, 693, 694, 695, 696, 697, 701, 702, 706, 708, 709, 710, 714, 715, 716, 717, 719, 735, 737, 738, 754, 759, 767, 770, 771, 772, 777, 778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 797, 798, 800, 801, 805, 806, 807, 808, 809, 812, 814, 816, 817, 820, 831, 834, 841, 843, 845, 846, 849, 851, 857, 861, 862, 865, 867, 868, 871, 872, 874, 886], "easi": [4, 133, 163, 167, 183, 189, 192, 201, 206, 209, 217, 219, 243, 276, 363, 419, 841, 843, 845, 851, 862, 863, 865, 868, 886], "identifi": [4, 12, 13, 27, 32, 33, 34, 77, 79, 85, 135, 138, 147, 152, 170, 192, 193, 197, 200, 206, 208, 225, 228, 246, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 314, 330, 337, 375, 416, 423, 465, 481, 482, 483, 487, 562, 566, 570, 577, 593, 603, 754, 763, 774, 812, 816, 817, 845, 861, 862, 865, 868, 871, 886], "while": [4, 10, 26, 45, 74, 76, 83, 87, 107, 127, 135, 138, 142, 143, 144, 145, 151, 152, 159, 161, 167, 173, 179, 180, 189, 193, 200, 201, 206, 208, 209, 211, 214, 219, 225, 228, 232, 236, 243, 246, 264, 265, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 299, 300, 356, 360, 361, 371, 372, 373, 413, 419, 420, 421, 430, 447, 456, 457, 476, 478, 479, 481, 482, 510, 532, 540, 562, 563, 574, 575, 579, 580, 584, 706, 709, 733, 734, 736, 737, 778, 784, 788, 792, 794, 801, 807, 810, 820, 841, 843, 845, 848, 862, 867, 868, 874, 886], "low": [4, 5, 11, 19, 45, 47, 59, 70, 74, 79, 81, 82, 83, 84, 94, 110, 114, 135, 142, 144, 152, 167, 168, 181, 184, 189, 192, 197, 201, 204, 206, 211, 212, 213, 228, 230, 232, 237, 246, 258, 261, 264, 265, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 307, 356, 361, 415, 421, 424, 426, 448, 449, 451, 481, 482, 489, 492, 506, 529, 562, 567, 570, 574, 575, 579, 580, 583, 584, 585, 587, 588, 598, 659, 663, 668, 699, 700, 706, 709, 734, 737, 754, 784, 807, 841, 861, 862, 865, 867, 868, 886], "hard": [4, 114, 135, 143, 206, 225, 365, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522, 845, 862, 863, 865, 886], "extens": [4, 12, 43, 44, 137, 141, 152, 159, 161, 171, 190, 191, 193, 197, 218, 219, 258, 266, 267, 268, 269, 299, 300, 332, 333, 339, 420, 443, 444, 446, 481, 482, 488, 495, 498, 508, 594, 612, 621, 625, 707, 726, 754, 831, 848, 849, 861, 862, 868, 874, 886], "veri": [4, 10, 44, 45, 50, 60, 63, 69, 70, 79, 80, 83, 114, 133, 135, 142, 145, 152, 158, 161, 169, 173, 182, 201, 203, 204, 205, 206, 207, 208, 211, 225, 228, 237, 243, 299, 322, 437, 481, 692, 841, 845, 848, 863, 868], "ll": [4, 7, 10, 19, 26, 34, 54, 59, 67, 70, 79, 114, 115, 116, 117, 120, 127, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 159, 161, 163, 167, 168, 169, 171, 172, 173, 180, 181, 182, 191, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 223, 225, 229, 232, 238, 241, 242, 845, 853, 865], "begin": [4, 19, 73, 93, 135, 152, 157, 167, 169, 170, 172, 173, 176, 189, 192, 196, 200, 202, 203, 204, 205, 206, 207, 208, 213, 219, 223, 243, 260, 261, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 285, 289, 361, 442, 455, 481, 482, 508, 522, 535, 545, 546, 562, 565, 579, 580, 583, 584, 587, 594, 624, 625, 673, 706, 709, 710, 719, 787, 798, 799, 801, 808, 814, 839, 845, 850, 868, 871, 886], "littl": [4, 161, 172, 189, 203, 204, 206, 207, 225, 243, 848, 868], "you": [4, 24, 27, 28, 32, 41, 43, 47, 50, 59, 60, 78, 79, 82, 83, 88, 103, 109, 113, 114, 115, 116, 117, 119, 120, 121, 127, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 159, 160, 161, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 178, 179, 181, 182, 183, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 217, 218, 219, 220, 223, 225, 228, 230, 231, 233, 236, 238, 241, 242, 243, 246, 258, 259, 260, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 285, 291, 293, 299, 300, 315, 320, 330, 331, 332, 355, 356, 360, 361, 364, 365, 371, 372, 373, 378, 391, 413, 419, 420, 430, 437, 440, 446, 448, 454, 456, 457, 465, 472, 476, 478, 479, 481, 482, 483, 493, 497, 505, 527, 529, 540, 561, 562, 579, 583, 585, 595, 612, 618, 655, 670, 686, 701, 706, 708, 709, 710, 752, 755, 757, 770, 771, 775, 777, 784, 785, 789, 794, 797, 799, 800, 801, 807, 812, 824, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 856, 860, 861, 862, 863, 864, 865, 866, 868, 869, 871, 872, 886], "first": [4, 5, 7, 10, 11, 16, 19, 21, 28, 29, 32, 38, 39, 41, 42, 43, 44, 45, 47, 63, 70, 71, 80, 83, 84, 87, 88, 90, 94, 95, 103, 104, 108, 109, 112, 113, 114, 115, 120, 127, 131, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 150, 151, 152, 157, 158, 160, 161, 162, 163, 167, 168, 169, 170, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 189, 191, 192, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 224, 225, 228, 229, 230, 232, 233, 236, 237, 238, 241, 242, 243, 246, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 285, 286, 287, 290, 298, 299, 300, 304, 319, 324, 325, 356, 364, 365, 371, 377, 388, 413, 419, 420, 428, 436, 437, 438, 441, 442, 444, 445, 447, 451, 452, 453, 454, 455, 461, 463, 471, 480, 481, 482, 502, 505, 506, 517, 523, 524, 528, 532, 538, 539, 557, 561, 562, 563, 565, 567, 570, 572, 577, 603, 608, 620, 621, 624, 628, 639, 651, 656, 658, 659, 662, 664, 665, 680, 681, 682, 687, 691, 692, 693, 694, 696, 697, 698, 700, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 741, 744, 754, 759, 762, 770, 778, 782, 784, 785, 786, 787, 790, 791, 793, 797, 798, 799, 801, 806, 807, 808, 809, 812, 814, 816, 817, 831, 832, 841, 843, 844, 853, 861, 862, 865, 868, 871, 872, 886], "limo_epoch": 4, "note": [4, 13, 16, 18, 21, 26, 47, 70, 74, 79, 83, 104, 109, 112, 114, 129, 135, 136, 137, 141, 142, 143, 144, 146, 150, 152, 157, 159, 161, 163, 167, 168, 169, 170, 171, 172, 173, 181, 182, 183, 190, 191, 193, 196, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 213, 214, 217, 218, 219, 223, 224, 232, 233, 236, 237, 238, 243, 246, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 290, 295, 299, 300, 302, 305, 306, 307, 308, 309, 311, 312, 314, 315, 316, 319, 320, 321, 322, 323, 324, 330, 331, 332, 334, 336, 337, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 360, 361, 362, 363, 366, 367, 369, 371, 374, 375, 382, 388, 389, 390, 391, 392, 394, 405, 406, 412, 413, 415, 416, 417, 419, 420, 421, 422, 423, 425, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 463, 464, 466, 469, 470, 471, 472, 474, 475, 480, 481, 482, 483, 489, 493, 494, 496, 497, 498, 502, 504, 505, 506, 508, 510, 511, 515, 517, 518, 519, 520, 522, 524, 525, 526, 527, 529, 530, 531, 532, 533, 535, 536, 537, 540, 542, 544, 545, 546, 548, 549, 561, 562, 563, 564, 565, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 586, 590, 594, 595, 600, 601, 602, 603, 604, 608, 609, 612, 614, 616, 617, 618, 620, 621, 624, 625, 626, 628, 629, 631, 634, 640, 642, 643, 645, 646, 648, 651, 653, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 683, 686, 687, 688, 689, 692, 693, 694, 695, 696, 697, 699, 701, 706, 707, 708, 709, 710, 714, 715, 716, 717, 718, 719, 720, 722, 724, 725, 728, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 748, 749, 752, 754, 755, 757, 769, 770, 771, 772, 773, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 790, 791, 793, 794, 795, 797, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 823, 824, 827, 831, 832, 833, 834, 835, 836, 841, 843, 845, 846, 852, 861, 865, 867, 868, 870, 886], "process": [4, 7, 27, 28, 32, 34, 45, 51, 59, 68, 69, 80, 84, 88, 101, 122, 135, 136, 143, 144, 145, 150, 152, 153, 156, 157, 161, 162, 163, 167, 173, 178, 183, 185, 189, 201, 202, 203, 204, 206, 207, 208, 209, 211, 213, 217, 219, 223, 228, 229, 230, 238, 243, 246, 258, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 276, 277, 280, 281, 282, 289, 291, 293, 299, 300, 302, 356, 360, 361, 364, 371, 372, 373, 388, 396, 413, 415, 420, 421, 426, 430, 436, 437, 452, 456, 457, 476, 478, 479, 481, 482, 483, 492, 502, 535, 540, 562, 563, 572, 583, 594, 595, 602, 609, 611, 624, 655, 659, 679, 682, 693, 694, 696, 697, 706, 708, 709, 710, 733, 784, 788, 794, 807, 808, 843, 852, 853, 857, 860, 861, 862, 865, 867, 868, 871, 872, 874, 875, 876, 886], "epochsarrai": [4, 189, 223, 261, 266, 269, 363, 482, 619, 876, 886], "readi": [4, 5, 11, 13, 14, 15, 16, 18, 19, 27, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 83, 84, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 109, 110, 111, 113, 114, 115, 117, 118, 121, 122, 123, 124, 129, 130, 132, 133, 135, 136, 142, 145, 147, 151, 152, 153, 157, 159, 160, 162, 163, 167, 168, 169, 170, 172, 173, 178, 181, 183, 184, 191, 197, 200, 204, 205, 206, 207, 208, 209, 210, 211, 217, 220, 223, 224, 225, 230, 231, 232, 233, 236, 238, 242, 268, 271, 277, 481, 595, 624, 634, 754, 773, 845, 862], "1055": 4, "good": [4, 5, 21, 31, 49, 70, 71, 73, 76, 81, 82, 83, 90, 93, 117, 123, 127, 138, 141, 142, 144, 147, 152, 158, 167, 168, 169, 170, 172, 178, 185, 192, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 230, 236, 238, 243, 246, 261, 264, 266, 267, 268, 269, 271, 299, 300, 302, 329, 346, 356, 360, 361, 371, 372, 373, 413, 415, 420, 421, 426, 429, 456, 457, 470, 472, 476, 478, 479, 481, 482, 522, 540, 553, 556, 559, 561, 562, 564, 567, 569, 572, 577, 578, 581, 583, 602, 609, 617, 628, 634, 674, 692, 701, 706, 708, 709, 710, 714, 715, 716, 717, 719, 734, 736, 737, 782, 784, 785, 788, 794, 808, 815, 844, 845, 852, 856, 862, 865, 866, 867, 868, 869, 886], "299944": 4, "499907": 4, "213": [4, 35, 170, 220, 225, 233], "A": [4, 8, 9, 11, 16, 19, 21, 26, 31, 35, 42, 43, 44, 70, 75, 78, 83, 101, 103, 113, 120, 121, 126, 127, 128, 132, 133, 136, 138, 143, 144, 152, 156, 158, 161, 162, 163, 167, 169, 170, 172, 173, 176, 181, 189, 190, 197, 200, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 217, 219, 220, 225, 228, 229, 230, 232, 236, 237, 238, 241, 246, 257, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 290, 292, 299, 306, 312, 314, 317, 318, 319, 322, 323, 326, 342, 356, 359, 362, 367, 368, 370, 372, 382, 390, 391, 394, 396, 405, 406, 415, 417, 421, 430, 435, 437, 438, 449, 450, 451, 452, 456, 464, 465, 466, 470, 473, 476, 481, 482, 483, 488, 489, 490, 491, 492, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 523, 529, 530, 536, 544, 552, 554, 555, 557, 560, 561, 562, 563, 570, 576, 577, 581, 582, 583, 592, 595, 601, 603, 609, 611, 614, 621, 642, 648, 651, 655, 658, 659, 660, 666, 669, 670, 672, 683, 686, 687, 689, 690, 692, 693, 694, 695, 696, 697, 698, 701, 706, 707, 708, 709, 710, 711, 712, 713, 720, 722, 725, 732, 733, 734, 735, 736, 737, 738, 741, 744, 754, 757, 767, 769, 770, 772, 774, 777, 778, 780, 784, 790, 791, 792, 794, 795, 807, 808, 810, 812, 815, 816, 817, 841, 843, 860, 861, 862, 863, 867, 868, 871, 873, 874, 884, 886], "524": [4, 100, 102, 210], "b": [4, 8, 10, 12, 22, 28, 37, 38, 44, 97, 110, 111, 127, 128, 135, 138, 203, 206, 207, 212, 218, 220, 225, 228, 229, 232, 236, 237, 238, 243, 246, 258, 261, 266, 267, 268, 269, 273, 274, 276, 277, 278, 280, 281, 282, 289, 356, 362, 382, 405, 406, 434, 448, 450, 481, 482, 545, 546, 579, 580, 624, 625, 659, 687, 689, 692, 700, 706, 709, 719, 733, 734, 736, 737, 754, 778, 784, 807, 814, 845, 862, 865, 868, 886], "531": [4, 233], "visualis": [4, 27, 29, 30, 48, 49, 50, 54, 55, 77, 85, 101, 166, 177, 212, 234, 235, 260, 266, 268, 269, 271, 320, 326, 355, 482, 510, 597, 601, 617, 697], "distribut": [4, 19, 22, 26, 46, 48, 54, 55, 59, 60, 72, 116, 146, 151, 156, 163, 166, 167, 178, 187, 188, 192, 206, 208, 228, 230, 233, 236, 237, 242, 243, 246, 263, 264, 266, 267, 268, 269, 270, 271, 275, 277, 366, 478, 481, 482, 528, 529, 540, 570, 601, 615, 624, 626, 639, 654, 658, 688, 691, 693, 694, 696, 697, 708, 710, 754, 763, 770, 782, 815, 822, 841, 850, 851, 852, 861, 862, 865, 867, 868, 886], "should": [4, 5, 16, 19, 40, 41, 63, 70, 82, 88, 90, 120, 121, 133, 135, 136, 137, 141, 142, 143, 145, 152, 157, 158, 159, 161, 162, 166, 168, 173, 181, 183, 185, 191, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 217, 218, 219, 220, 223, 232, 233, 241, 243, 246, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 330, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 423, 424, 425, 426, 429, 430, 432, 434, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 463, 464, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 555, 558, 561, 562, 564, 565, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 587, 588, 589, 590, 591, 592, 594, 595, 597, 598, 601, 602, 603, 604, 606, 607, 608, 609, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 626, 628, 629, 630, 631, 632, 634, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 651, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 668, 670, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 683, 688, 693, 694, 695, 696, 697, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 724, 725, 728, 729, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 749, 750, 753, 754, 756, 758, 762, 770, 771, 772, 773, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 789, 790, 793, 794, 797, 798, 799, 800, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 843, 844, 845, 848, 849, 850, 851, 856, 861, 862, 867, 868, 871, 874, 886], "appear": [4, 94, 101, 135, 141, 145, 159, 169, 173, 181, 184, 192, 200, 203, 204, 209, 219, 258, 266, 267, 268, 269, 276, 434, 481, 482, 492, 517, 772, 810, 841, 845, 862, 868, 871, 886], "clearli": [4, 21, 127, 135, 145, 153, 167, 192, 204, 206, 208, 210], "group": [4, 27, 67, 70, 109, 112, 122, 130, 135, 138, 141, 143, 144, 146, 152, 156, 161, 162, 168, 173, 179, 203, 220, 225, 228, 229, 232, 233, 237, 238, 246, 258, 266, 267, 268, 269, 271, 276, 299, 300, 316, 326, 430, 439, 440, 442, 473, 481, 482, 497, 562, 577, 655, 671, 688, 694, 697, 759, 784, 785, 790, 807, 810, 841, 845, 852, 868, 876, 886], "order": [4, 16, 18, 19, 27, 31, 34, 38, 47, 69, 70, 74, 82, 84, 88, 92, 94, 107, 111, 112, 114, 117, 121, 123, 128, 137, 144, 145, 146, 150, 157, 161, 162, 163, 166, 167, 170, 173, 178, 189, 191, 196, 200, 201, 202, 205, 206, 207, 208, 210, 211, 213, 217, 220, 225, 233, 238, 246, 258, 259, 261, 263, 266, 267, 268, 269, 270, 271, 272, 275, 276, 290, 304, 319, 326, 343, 345, 349, 356, 363, 365, 369, 413, 415, 419, 420, 424, 434, 438, 442, 448, 449, 450, 451, 452, 457, 466, 481, 482, 488, 489, 496, 528, 535, 536, 538, 539, 553, 554, 555, 561, 562, 570, 572, 573, 574, 575, 576, 583, 594, 608, 640, 651, 683, 688, 702, 706, 707, 708, 709, 710, 718, 719, 723, 739, 741, 744, 751, 759, 771, 784, 785, 786, 790, 793, 795, 797, 801, 802, 806, 807, 809, 810, 814, 815, 816, 843, 845, 861, 865, 868, 871, 886], "suptitl": [4, 18, 22, 37, 42, 45, 70, 73, 80, 87, 90, 103, 109, 112, 116, 120, 133, 135, 142, 145, 147, 152, 161, 177, 192, 196, 201, 203, 204, 206, 207, 208, 209, 211, 212, 228, 886], "As": [4, 38, 43, 70, 88, 94, 112, 135, 137, 141, 144, 146, 150, 151, 152, 158, 161, 167, 168, 169, 170, 171, 173, 176, 181, 189, 192, 196, 197, 200, 201, 202, 203, 205, 206, 208, 209, 211, 214, 217, 218, 219, 220, 223, 230, 232, 238, 241, 243, 248, 421, 442, 498, 510, 577, 692, 701, 754, 778, 861, 867, 868, 871, 874, 886], "seen": [4, 12, 27, 74, 141, 144, 145, 147, 151, 152, 157, 170, 171, 197, 200, 204, 207, 208, 212, 213, 217, 220, 299, 420, 658, 659, 734, 737, 845, 868, 869, 871], "abov": [4, 21, 42, 43, 45, 49, 60, 70, 74, 75, 82, 88, 114, 116, 135, 141, 143, 145, 151, 152, 157, 161, 162, 167, 168, 169, 171, 172, 173, 176, 189, 191, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 217, 218, 220, 223, 225, 232, 233, 243, 246, 260, 263, 266, 267, 268, 269, 271, 279, 355, 413, 415, 420, 424, 437, 443, 444, 446, 449, 451, 481, 482, 483, 489, 510, 561, 562, 564, 583, 593, 603, 693, 694, 696, 697, 706, 708, 710, 734, 737, 744, 754, 778, 785, 786, 793, 797, 799, 809, 810, 814, 816, 841, 844, 845, 850, 861, 865, 868, 869, 872], "These": [4, 27, 45, 54, 55, 60, 70, 94, 135, 138, 139, 145, 146, 148, 152, 154, 156, 159, 161, 163, 164, 166, 167, 168, 171, 173, 174, 179, 181, 187, 189, 190, 191, 193, 194, 196, 197, 198, 202, 203, 206, 210, 212, 215, 220, 221, 225, 226, 228, 229, 234, 239, 243, 244, 257, 266, 267, 268, 269, 271, 283, 307, 308, 327, 356, 360, 361, 362, 432, 481, 482, 526, 562, 572, 583, 594, 625, 663, 668, 692, 706, 708, 709, 710, 841, 845, 852, 861, 862, 865, 867, 868, 869, 871, 874, 886], "easili": [4, 43, 44, 101, 141, 145, 150, 161, 169, 171, 189, 191, 200, 203, 206, 208, 209, 217, 218, 219, 220, 236, 243, 440, 481, 482, 583, 692, 845, 852, 861, 868, 886], "access": [4, 52, 101, 132, 135, 159, 167, 169, 170, 176, 193, 207, 217, 219, 220, 241, 246, 259, 261, 266, 267, 270, 279, 481, 482, 618, 620, 708, 709, 710, 735, 738, 845, 851, 863, 867, 871, 886], "call": [4, 18, 31, 43, 44, 87, 88, 94, 117, 128, 135, 141, 143, 145, 146, 147, 150, 151, 152, 156, 157, 159, 161, 162, 167, 169, 171, 172, 173, 176, 179, 183, 191, 197, 200, 201, 203, 204, 206, 207, 211, 213, 217, 218, 219, 220, 228, 230, 232, 233, 238, 242, 243, 258, 264, 265, 266, 267, 268, 269, 272, 273, 274, 276, 277, 278, 280, 281, 282, 284, 310, 314, 356, 357, 359, 361, 362, 367, 416, 419, 423, 426, 429, 430, 434, 446, 448, 456, 469, 471, 481, 482, 489, 496, 510, 521, 524, 525, 529, 530, 531, 532, 533, 535, 536, 545, 546, 562, 567, 572, 573, 574, 575, 579, 581, 583, 594, 609, 645, 654, 657, 658, 659, 671, 676, 680, 693, 694, 695, 696, 697, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 722, 724, 725, 732, 733, 734, 735, 736, 737, 751, 752, 754, 771, 778, 784, 785, 786, 789, 792, 793, 808, 816, 841, 843, 844, 845, 849, 853, 863, 865, 867, 868, 871, 872, 876, 886], "shown": [4, 32, 52, 70, 80, 83, 94, 101, 118, 120, 127, 135, 137, 143, 150, 151, 152, 157, 159, 163, 167, 173, 181, 183, 203, 207, 212, 217, 218, 220, 233, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 277, 280, 281, 282, 314, 413, 420, 472, 481, 482, 513, 540, 561, 562, 577, 706, 708, 709, 710, 754, 770, 771, 772, 778, 779, 781, 782, 784, 786, 788, 790, 791, 792, 793, 795, 797, 804, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 824, 868, 869, 871, 886], "below": [4, 10, 19, 43, 47, 75, 112, 114, 127, 135, 141, 152, 156, 161, 162, 167, 169, 171, 173, 191, 193, 196, 203, 204, 206, 207, 208, 209, 211, 212, 213, 219, 228, 233, 236, 238, 241, 243, 246, 261, 263, 264, 265, 266, 267, 268, 269, 273, 274, 277, 278, 279, 280, 281, 282, 308, 314, 362, 415, 424, 432, 440, 449, 451, 472, 481, 482, 498, 529, 562, 564, 570, 572, 658, 692, 693, 694, 696, 697, 706, 709, 754, 773, 785, 790, 794, 797, 799, 812, 817, 818, 841, 845, 851, 861, 865, 867, 868, 872, 876, 886], "also": [4, 10, 19, 21, 27, 28, 29, 30, 32, 38, 39, 41, 42, 43, 45, 47, 60, 62, 69, 70, 71, 78, 79, 80, 81, 83, 84, 94, 95, 101, 104, 107, 109, 112, 114, 116, 117, 120, 126, 127, 135, 136, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 156, 157, 158, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 181, 182, 183, 184, 185, 189, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 228, 229, 230, 232, 233, 236, 238, 241, 242, 243, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 299, 300, 306, 307, 308, 312, 314, 316, 324, 325, 329, 331, 332, 342, 349, 356, 361, 362, 368, 371, 374, 382, 390, 413, 415, 420, 425, 429, 432, 434, 437, 448, 449, 451, 452, 453, 454, 456, 463, 466, 473, 476, 478, 479, 481, 482, 489, 493, 502, 506, 521, 524, 525, 535, 536, 537, 540, 559, 561, 562, 564, 565, 571, 572, 574, 577, 578, 579, 580, 584, 585, 586, 587, 589, 590, 600, 602, 608, 609, 616, 624, 641, 642, 645, 651, 654, 655, 662, 671, 674, 692, 693, 698, 701, 706, 708, 709, 710, 714, 715, 716, 717, 719, 734, 737, 743, 744, 752, 754, 770, 771, 777, 778, 779, 782, 784, 785, 786, 788, 790, 791, 793, 794, 796, 797, 798, 804, 805, 806, 807, 808, 809, 810, 812, 814, 816, 818, 820, 841, 843, 845, 848, 849, 850, 851, 852, 853, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 874, 876, 886], "conveni": [4, 11, 45, 70, 75, 135, 138, 143, 152, 159, 162, 167, 170, 172, 173, 182, 197, 200, 203, 207, 208, 218, 223, 228, 229, 230, 233, 236, 237, 238, 242, 246, 266, 267, 268, 269, 270, 276, 480, 481, 482, 487, 513, 535, 562, 570, 579, 580, 648, 651, 653, 696, 697, 706, 708, 709, 710, 767, 843, 845, 849, 861, 862, 868, 886], "head": [4, 5, 10, 22, 26, 41, 43, 45, 50, 70, 71, 78, 79, 80, 101, 109, 112, 115, 118, 120, 125, 127, 135, 136, 137, 144, 146, 151, 152, 158, 160, 164, 165, 166, 167, 170, 171, 173, 176, 177, 178, 179, 181, 182, 184, 185, 186, 189, 191, 192, 200, 201, 206, 208, 209, 211, 213, 215, 216, 217, 229, 243, 246, 263, 264, 266, 267, 268, 269, 270, 271, 275, 276, 279, 304, 306, 307, 308, 310, 314, 317, 318, 327, 330, 332, 337, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 356, 363, 365, 366, 367, 368, 375, 389, 392, 413, 420, 432, 434, 456, 463, 464, 472, 473, 474, 475, 481, 482, 486, 488, 492, 493, 494, 501, 506, 508, 512, 514, 519, 520, 521, 524, 525, 526, 561, 562, 566, 569, 571, 572, 573, 577, 583, 590, 594, 595, 614, 619, 620, 623, 637, 654, 655, 657, 658, 659, 663, 668, 671, 674, 701, 706, 708, 710, 740, 741, 743, 754, 770, 771, 772, 777, 778, 782, 786, 788, 789, 790, 791, 793, 794, 796, 797, 804, 806, 808, 809, 810, 814, 816, 822, 832, 834, 839, 841, 845, 862, 871, 874, 875, 876, 886], "491210": 4, "235572": 4, "043707": 4, "642398": 4, "659978": 4, "now": [4, 19, 24, 26, 32, 41, 45, 50, 70, 72, 74, 84, 87, 88, 109, 111, 112, 113, 120, 127, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 152, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 173, 177, 179, 180, 181, 183, 184, 196, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 217, 219, 225, 230, 232, 233, 236, 237, 238, 242, 243, 264, 266, 267, 268, 269, 322, 466, 481, 482, 651, 755, 775, 782, 845, 868, 871, 886], "let": [4, 10, 18, 21, 26, 32, 47, 55, 70, 71, 73, 87, 109, 113, 121, 127, 135, 136, 137, 141, 142, 143, 145, 147, 151, 152, 153, 157, 159, 160, 161, 163, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 197, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 213, 217, 225, 228, 232, 233, 236, 237, 238, 242, 243, 515, 722, 732, 755, 845, 848, 886], "closer": [4, 24, 41, 109, 142, 159, 211, 228, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 655, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816], "want": [4, 41, 50, 79, 83, 94, 112, 115, 120, 127, 135, 136, 137, 141, 142, 143, 144, 145, 146, 150, 151, 152, 159, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 179, 181, 190, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 217, 218, 219, 223, 224, 228, 230, 232, 233, 236, 237, 243, 258, 259, 266, 267, 268, 269, 273, 277, 281, 320, 378, 437, 442, 481, 482, 562, 579, 777, 807, 812, 824, 844, 845, 848, 852, 853, 865, 866, 867, 868, 871, 872], "includ": [4, 7, 28, 37, 41, 69, 70, 82, 86, 96, 97, 99, 103, 104, 107, 110, 113, 114, 123, 132, 135, 136, 138, 141, 143, 144, 145, 147, 150, 152, 153, 156, 160, 161, 163, 167, 168, 169, 170, 171, 173, 177, 181, 183, 186, 189, 190, 191, 193, 197, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 217, 219, 220, 223, 228, 230, 231, 232, 238, 246, 252, 257, 259, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 298, 300, 312, 315, 316, 320, 329, 331, 356, 361, 362, 369, 371, 415, 420, 429, 434, 437, 441, 442, 451, 452, 454, 466, 467, 480, 481, 482, 489, 492, 494, 496, 497, 498, 504, 508, 523, 525, 530, 532, 540, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 569, 570, 572, 573, 576, 578, 579, 580, 582, 583, 586, 590, 593, 594, 600, 602, 605, 609, 618, 620, 621, 624, 625, 626, 674, 691, 692, 701, 705, 706, 708, 709, 710, 714, 715, 716, 717, 719, 723, 735, 737, 738, 744, 750, 754, 778, 784, 785, 786, 787, 788, 790, 791, 798, 799, 803, 807, 808, 814, 831, 841, 843, 845, 847, 848, 849, 850, 851, 852, 853, 857, 861, 862, 863, 864, 865, 867, 868, 869, 870, 871, 872, 874, 886], "column": [4, 10, 31, 94, 95, 101, 112, 141, 142, 144, 146, 152, 167, 173, 176, 189, 192, 197, 208, 211, 212, 217, 228, 229, 260, 261, 263, 266, 267, 268, 269, 271, 273, 274, 275, 277, 280, 281, 282, 301, 329, 371, 413, 420, 437, 441, 442, 454, 455, 471, 481, 482, 523, 541, 544, 557, 561, 562, 563, 612, 619, 620, 621, 628, 691, 692, 706, 708, 709, 710, 754, 786, 787, 793, 794, 797, 805, 806, 809, 814, 831, 841, 868, 871, 886], "tabl": [4, 41, 123, 135, 144, 145, 172, 173, 186, 190, 203, 217, 218, 241, 266, 267, 268, 269, 271, 273, 274, 276, 277, 279, 280, 281, 282, 465, 466, 481, 482, 540, 655, 754, 773, 778, 785, 812, 817, 818, 819, 823, 836, 841, 868, 871, 872, 886], "epochs_summari": 4, "describ": [4, 13, 16, 74, 99, 113, 117, 150, 152, 157, 159, 163, 166, 167, 169, 170, 171, 172, 173, 189, 193, 196, 200, 202, 207, 208, 209, 211, 212, 218, 219, 225, 226, 229, 234, 243, 246, 268, 269, 299, 355, 356, 362, 413, 421, 434, 437, 445, 481, 482, 561, 562, 563, 594, 630, 656, 676, 677, 678, 679, 680, 681, 682, 720, 722, 725, 732, 736, 794, 800, 841, 843, 861, 865, 867, 868, 871, 874, 886], "round": [4, 37, 109, 141, 146, 150, 161, 169, 173, 196, 203, 204, 206, 207, 213, 217, 225, 243, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 442, 481, 482, 706, 709, 886], "count": [4, 22, 70, 72, 141, 172, 212, 219, 228, 232, 236, 238, 261, 266, 267, 268, 269, 299, 300, 356, 360, 361, 370, 371, 372, 373, 413, 420, 436, 456, 457, 476, 478, 479, 522, 540, 572, 617, 693, 694, 696, 697, 794, 886], "uniqu": [4, 10, 18, 101, 144, 151, 152, 167, 169, 218, 228, 233, 264, 265, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 323, 442, 471, 481, 482, 524, 562, 618, 679, 682, 706, 708, 709, 710, 734, 737, 778, 788, 868, 871, 886], "nan": [4, 69, 70, 135, 145, 211, 230, 231, 232, 233, 243, 481, 482, 510, 568, 583, 886], "top": [4, 73, 112, 115, 120, 127, 137, 141, 152, 159, 161, 162, 173, 177, 182, 193, 201, 204, 206, 207, 208, 209, 212, 217, 219, 220, 228, 258, 266, 267, 268, 269, 274, 280, 282, 754, 755, 772, 784, 788, 817, 841, 845, 868, 871, 886], "freq": [4, 9, 21, 32, 33, 34, 68, 104, 107, 109, 112, 114, 133, 138, 167, 196, 200, 203, 204, 213, 223, 230, 231, 232, 233, 241, 242, 243, 245, 258, 343, 345, 426, 452, 481, 482, 546, 686, 706, 707, 708, 709, 710, 720, 722, 724, 725, 730, 732, 733, 734, 735, 736, 737, 777, 795, 802, 874, 886], "std": [4, 16, 152, 192, 225, 238, 241, 242, 243, 266, 267, 268, 269, 316, 413, 420, 481, 482, 518, 706, 778, 785, 788, 791, 808], "min": [4, 9, 21, 22, 96, 97, 112, 114, 116, 137, 138, 142, 147, 158, 173, 196, 200, 206, 208, 217, 228, 229, 230, 231, 232, 233, 236, 237, 238, 263, 266, 267, 268, 269, 273, 274, 275, 277, 280, 281, 282, 323, 413, 415, 420, 424, 446, 449, 451, 481, 482, 561, 562, 574, 584, 585, 587, 589, 598, 602, 603, 706, 708, 710, 771, 785, 786, 793, 797, 806, 807, 808, 809, 812, 814, 815, 816, 817], "619": [4, 160, 165, 233], "852": [4, 233], "084": 4, "875": [4, 136, 140, 144, 183, 868], "max": [4, 5, 8, 9, 19, 21, 22, 31, 32, 33, 34, 35, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 81, 84, 90, 93, 94, 96, 100, 109, 112, 115, 116, 121, 135, 137, 142, 145, 151, 153, 158, 161, 163, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 197, 204, 211, 217, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 257, 263, 266, 267, 268, 269, 273, 274, 275, 277, 280, 281, 282, 299, 300, 323, 360, 413, 415, 420, 424, 446, 447, 449, 451, 481, 482, 513, 538, 539, 544, 561, 562, 585, 589, 598, 603, 693, 694, 695, 696, 697, 699, 706, 708, 710, 722, 732, 754, 762, 771, 785, 786, 789, 793, 797, 806, 808, 809, 812, 814, 815, 816, 817, 873, 886], "642": [4, 59, 197, 246, 479], "provid": [4, 5, 18, 19, 27, 43, 44, 65, 80, 90, 93, 94, 95, 103, 138, 141, 143, 147, 150, 151, 152, 156, 157, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 176, 185, 186, 189, 190, 191, 193, 197, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 214, 217, 218, 219, 220, 223, 225, 229, 230, 233, 246, 247, 258, 260, 261, 263, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 287, 290, 299, 300, 304, 305, 312, 315, 323, 331, 355, 357, 358, 359, 360, 361, 362, 367, 371, 374, 388, 389, 392, 413, 415, 420, 429, 434, 437, 440, 451, 452, 454, 456, 466, 472, 473, 480, 481, 482, 501, 502, 512, 513, 515, 524, 528, 549, 561, 562, 564, 565, 572, 578, 579, 580, 583, 586, 594, 600, 602, 609, 619, 623, 634, 645, 655, 656, 671, 674, 691, 692, 694, 696, 697, 700, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 733, 734, 735, 736, 737, 738, 741, 742, 744, 751, 754, 770, 771, 773, 778, 780, 784, 785, 786, 788, 789, 790, 791, 793, 796, 797, 801, 803, 806, 807, 808, 809, 812, 814, 816, 817, 818, 841, 843, 845, 846, 848, 849, 851, 852, 857, 860, 861, 862, 863, 865, 867, 868, 869, 871, 874, 876, 886], "command": [4, 123, 135, 152, 156, 159, 161, 172, 186, 190, 266, 267, 271, 362, 472, 481, 482, 519, 562, 647, 784, 801, 807, 843, 844, 848, 849, 850, 851, 852, 853, 857, 861, 863, 876, 886], "ran": [4, 233, 271], "befor": [4, 5, 21, 24, 26, 41, 44, 45, 50, 61, 68, 70, 82, 86, 88, 90, 94, 119, 127, 135, 137, 138, 141, 142, 143, 144, 145, 146, 150, 152, 157, 158, 159, 161, 162, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 181, 182, 184, 185, 186, 189, 192, 197, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 217, 218, 219, 220, 225, 241, 243, 258, 259, 261, 263, 266, 267, 268, 269, 271, 273, 274, 276, 277, 278, 280, 281, 282, 299, 316, 343, 361, 364, 372, 373, 413, 419, 420, 422, 425, 437, 443, 444, 445, 446, 447, 448, 454, 455, 457, 481, 482, 522, 535, 536, 538, 539, 545, 546, 561, 562, 565, 574, 575, 579, 580, 583, 584, 609, 617, 624, 629, 662, 663, 664, 665, 666, 668, 670, 692, 693, 694, 696, 697, 701, 707, 708, 710, 771, 780, 785, 786, 788, 790, 792, 793, 798, 799, 800, 805, 808, 824, 836, 843, 853, 861, 862, 865, 867, 868, 871, 886], "There": [4, 74, 83, 120, 127, 142, 145, 152, 157, 159, 160, 167, 171, 172, 173, 178, 181, 191, 193, 200, 202, 203, 204, 206, 207, 211, 213, 214, 217, 219, 228, 241, 266, 405, 437, 562, 601, 655, 845, 849, 852, 862, 865, 866, 868, 870, 871], "subdivid": [4, 161, 162, 258, 273, 277, 281, 387, 654, 812, 886], "particular": [4, 27, 126, 135, 141, 142, 156, 167, 169, 173, 176, 196, 197, 203, 206, 207, 217, 230, 238, 258, 260, 266, 267, 276, 305, 430, 457, 481, 482, 489, 629, 686, 693, 694, 696, 697, 784, 807, 843, 865, 867, 868, 869, 874], "addit": [4, 34, 42, 45, 60, 61, 70, 75, 82, 112, 114, 135, 136, 141, 143, 146, 151, 153, 157, 161, 162, 163, 167, 171, 189, 190, 191, 192, 196, 197, 202, 203, 206, 207, 208, 209, 211, 213, 217, 219, 220, 223, 233, 243, 258, 263, 266, 267, 268, 269, 273, 274, 277, 278, 279, 280, 281, 282, 337, 355, 356, 361, 388, 413, 414, 415, 418, 420, 421, 424, 434, 437, 444, 446, 451, 481, 482, 487, 529, 530, 531, 532, 533, 535, 536, 542, 545, 546, 559, 560, 561, 562, 563, 574, 575, 595, 624, 650, 660, 692, 693, 694, 696, 697, 705, 706, 708, 709, 710, 725, 733, 734, 736, 737, 754, 767, 771, 784, 786, 788, 793, 799, 805, 807, 809, 812, 814, 816, 817, 845, 848, 849, 851, 852, 861, 862, 864, 865, 868, 871, 872, 874, 886], "valu": [4, 5, 7, 8, 9, 10, 16, 19, 21, 22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 69, 71, 90, 93, 94, 96, 101, 103, 104, 109, 112, 114, 120, 121, 127, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 157, 161, 163, 167, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 202, 203, 204, 206, 207, 208, 211, 212, 213, 217, 219, 223, 224, 225, 228, 229, 230, 232, 233, 236, 237, 238, 241, 242, 246, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 285, 289, 290, 299, 300, 302, 304, 308, 311, 312, 316, 323, 327, 329, 331, 332, 350, 351, 356, 357, 359, 360, 361, 362, 367, 370, 371, 372, 373, 377, 388, 405, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 432, 434, 435, 437, 441, 442, 446, 447, 451, 452, 453, 454, 455, 456, 457, 458, 461, 466, 469, 471, 472, 473, 476, 478, 479, 481, 482, 483, 489, 491, 496, 500, 504, 506, 510, 515, 517, 518, 519, 521, 522, 524, 525, 526, 528, 529, 533, 535, 536, 537, 538, 539, 540, 543, 545, 546, 550, 561, 562, 563, 564, 565, 567, 568, 571, 574, 575, 577, 578, 579, 580, 583, 585, 586, 589, 590, 592, 600, 602, 603, 605, 609, 611, 617, 621, 624, 628, 637, 644, 648, 650, 651, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 679, 682, 684, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 704, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 724, 725, 733, 734, 735, 736, 737, 741, 742, 744, 754, 757, 763, 770, 771, 773, 776, 778, 779, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 797, 798, 805, 806, 807, 808, 809, 812, 814, 815, 816, 817, 818, 819, 824, 839, 841, 845, 861, 862, 865, 868, 871, 886], "z": [4, 5, 11, 16, 18, 24, 41, 45, 50, 128, 152, 157, 159, 160, 161, 170, 171, 176, 177, 181, 182, 184, 185, 186, 190, 203, 207, 209, 246, 263, 266, 267, 268, 269, 270, 274, 275, 280, 282, 307, 308, 314, 326, 337, 346, 347, 413, 420, 432, 481, 482, 493, 529, 561, 562, 567, 571, 577, 583, 626, 658, 659, 706, 708, 710, 744, 745, 747, 754, 771, 778, 784, 786, 788, 790, 793, 794, 796, 797, 801, 804, 806, 807, 808, 809, 810, 814, 816, 822, 823, 833, 841, 851, 868, 886], "score": [4, 7, 8, 9, 10, 11, 13, 15, 16, 18, 19, 74, 83, 138, 173, 196, 197, 206, 211, 276, 413, 416, 417, 419, 420, 423, 430, 562, 567, 577, 583, 662, 693, 694, 696, 697, 800, 823, 862, 865, 886], "thei": [4, 5, 26, 41, 45, 47, 50, 70, 71, 74, 79, 82, 83, 94, 107, 114, 119, 135, 141, 142, 143, 145, 150, 152, 153, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 177, 181, 182, 183, 189, 191, 192, 193, 197, 200, 201, 202, 203, 204, 206, 207, 208, 211, 212, 213, 217, 218, 219, 220, 233, 236, 246, 259, 261, 266, 267, 268, 269, 271, 276, 299, 309, 311, 327, 336, 356, 363, 365, 434, 436, 442, 446, 448, 455, 481, 482, 489, 496, 502, 504, 506, 522, 538, 539, 551, 562, 573, 581, 583, 594, 609, 617, 618, 620, 651, 709, 749, 754, 771, 787, 788, 791, 836, 841, 843, 845, 848, 852, 861, 863, 867, 868, 886], "have": [4, 10, 19, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 71, 74, 78, 80, 83, 84, 86, 87, 90, 94, 95, 101, 103, 104, 112, 115, 116, 117, 119, 120, 127, 131, 134, 135, 136, 138, 141, 143, 144, 145, 146, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 179, 180, 182, 183, 184, 189, 190, 191, 192, 193, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 229, 232, 233, 236, 238, 241, 243, 257, 258, 259, 261, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 285, 293, 294, 297, 299, 300, 308, 316, 319, 322, 332, 355, 356, 360, 361, 362, 367, 371, 372, 373, 405, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 432, 433, 434, 437, 438, 447, 448, 453, 456, 457, 463, 471, 473, 476, 478, 479, 480, 481, 482, 489, 492, 493, 496, 498, 502, 505, 521, 523, 531, 533, 536, 540, 548, 557, 561, 562, 563, 572, 573, 577, 579, 580, 581, 583, 585, 594, 612, 614, 624, 643, 645, 648, 651, 656, 657, 658, 659, 660, 671, 676, 680, 688, 692, 706, 707, 708, 709, 710, 725, 726, 733, 734, 744, 754, 758, 759, 771, 777, 778, 784, 785, 786, 788, 791, 793, 794, 797, 806, 808, 809, 814, 815, 816, 820, 824, 834, 836, 841, 843, 846, 850, 851, 853, 857, 862, 863, 866, 867, 868, 871, 872, 874, 886], "standard": [4, 8, 28, 34, 41, 44, 46, 70, 74, 83, 94, 109, 121, 135, 136, 142, 150, 151, 152, 156, 160, 161, 170, 171, 172, 183, 192, 196, 197, 201, 203, 206, 209, 217, 223, 229, 238, 242, 246, 258, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 281, 282, 289, 314, 316, 325, 330, 332, 391, 413, 420, 422, 433, 446, 447, 462, 466, 469, 481, 482, 489, 493, 496, 506, 510, 529, 545, 546, 556, 561, 562, 583, 620, 627, 651, 655, 688, 691, 706, 708, 709, 710, 718, 719, 754, 771, 772, 778, 779, 785, 786, 788, 793, 794, 797, 799, 806, 809, 812, 814, 815, 816, 818, 841, 843, 861, 862, 863, 865, 868, 871, 874, 876, 886], "deviat": [4, 54, 55, 90, 97, 100, 121, 151, 152, 179, 197, 206, 210, 228, 230, 242, 263, 266, 267, 268, 269, 289, 316, 413, 544, 545, 546, 562, 583, 668, 688, 706, 708, 709, 710, 778, 779, 785, 788, 794, 797, 799, 814, 815, 841, 868, 886], "how": [4, 5, 9, 10, 13, 18, 19, 22, 26, 27, 31, 33, 43, 44, 45, 47, 58, 62, 64, 66, 67, 68, 69, 70, 71, 75, 78, 79, 90, 94, 95, 98, 99, 105, 113, 116, 117, 120, 122, 124, 125, 127, 129, 130, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 181, 182, 183, 184, 189, 191, 193, 196, 197, 202, 203, 204, 205, 206, 207, 209, 210, 212, 217, 218, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 238, 241, 242, 243, 246, 259, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 277, 279, 280, 281, 282, 299, 300, 310, 314, 315, 340, 344, 350, 367, 368, 369, 375, 413, 419, 420, 425, 440, 455, 457, 471, 472, 476, 478, 479, 481, 482, 486, 494, 502, 503, 506, 513, 529, 538, 539, 540, 561, 562, 565, 573, 583, 594, 595, 636, 637, 638, 639, 647, 651, 693, 694, 696, 697, 704, 706, 707, 708, 709, 710, 725, 754, 755, 762, 770, 771, 775, 778, 780, 784, 785, 786, 789, 793, 797, 798, 799, 800, 806, 807, 809, 812, 813, 814, 816, 817, 822, 824, 841, 843, 845, 846, 853, 861, 862, 867, 868, 869, 871, 872, 874, 886], "onli": [4, 8, 10, 11, 12, 19, 21, 22, 31, 34, 39, 41, 44, 45, 47, 49, 50, 55, 63, 70, 74, 78, 79, 82, 83, 88, 90, 93, 94, 95, 96, 97, 103, 107, 109, 112, 114, 115, 116, 117, 120, 127, 131, 133, 137, 138, 141, 142, 143, 144, 150, 151, 152, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 179, 181, 184, 189, 190, 191, 192, 193, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 217, 218, 219, 220, 223, 224, 225, 228, 230, 231, 232, 233, 236, 237, 238, 242, 243, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 321, 323, 324, 325, 327, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 432, 434, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 461, 463, 464, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 555, 558, 559, 560, 561, 562, 564, 565, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 597, 598, 601, 602, 603, 606, 607, 608, 609, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 628, 629, 630, 631, 632, 634, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 651, 653, 654, 655, 657, 658, 659, 660, 669, 670, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 683, 692, 693, 694, 695, 696, 697, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 724, 725, 728, 729, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 749, 753, 754, 762, 770, 771, 772, 773, 775, 778, 779, 782, 784, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 801, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 845, 852, 861, 862, 865, 866, 867, 868, 869, 871, 886], "500": [4, 10, 11, 22, 70, 80, 81, 86, 88, 116, 136, 142, 144, 146, 182, 185, 191, 193, 196, 197, 203, 206, 210, 212, 213, 214, 225, 233, 562], "ts_arg": [4, 101, 128, 197, 212, 229, 266, 267, 268, 269, 562, 785, 791, 799, 886], "xlim": [4, 19, 37, 39, 97, 127, 161, 182, 196, 203, 204, 212, 213, 225, 228, 238, 243, 268, 269, 788, 790], "plot_joint": [4, 71, 101, 151, 152, 167, 181, 183, 197, 200, 206, 208, 212, 229, 242, 268, 269, 706, 872, 886], "15": [4, 5, 9, 11, 12, 13, 19, 21, 22, 25, 28, 29, 32, 33, 34, 35, 42, 43, 45, 47, 50, 51, 68, 69, 70, 71, 73, 75, 76, 80, 81, 83, 92, 93, 94, 103, 108, 109, 112, 114, 127, 135, 136, 137, 138, 141, 142, 143, 144, 146, 149, 152, 156, 158, 163, 167, 169, 170, 171, 172, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 196, 197, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 223, 225, 228, 229, 230, 232, 233, 236, 237, 238, 240, 241, 246, 264, 266, 267, 268, 269, 273, 274, 275, 276, 277, 279, 280, 281, 282, 286, 320, 371, 415, 424, 449, 451, 452, 453, 478, 481, 482, 510, 562, 565, 574, 575, 639, 670, 690, 695, 708, 710, 725, 735, 736, 738, 758, 769, 770, 784, 792, 812, 817, 841, 848, 861, 862, 868], "titl": [4, 8, 9, 15, 16, 19, 22, 30, 35, 39, 42, 43, 44, 46, 47, 48, 49, 50, 54, 55, 59, 69, 70, 71, 76, 82, 86, 90, 94, 101, 103, 107, 108, 109, 110, 114, 120, 123, 125, 127, 132, 135, 138, 142, 143, 145, 147, 152, 153, 161, 173, 176, 177, 178, 180, 181, 196, 197, 201, 203, 204, 206, 207, 208, 209, 211, 213, 225, 228, 229, 230, 233, 238, 242, 243, 246, 264, 266, 267, 268, 269, 273, 276, 277, 281, 481, 482, 561, 562, 706, 708, 710, 754, 774, 777, 778, 782, 783, 784, 785, 786, 788, 790, 791, 792, 795, 797, 798, 800, 801, 802, 807, 809, 810, 812, 815, 821, 845, 860, 886], "differ": [4, 9, 16, 21, 22, 27, 28, 33, 37, 39, 44, 45, 47, 54, 55, 63, 68, 70, 77, 80, 81, 85, 94, 96, 99, 101, 103, 107, 110, 111, 112, 114, 120, 122, 123, 127, 130, 134, 135, 136, 138, 141, 143, 144, 145, 148, 150, 151, 152, 153, 157, 159, 161, 163, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 181, 182, 184, 185, 186, 189, 190, 191, 192, 197, 200, 203, 204, 205, 206, 207, 208, 209, 211, 213, 217, 218, 219, 223, 228, 229, 230, 231, 233, 236, 237, 238, 242, 246, 260, 261, 266, 267, 268, 269, 270, 273, 274, 277, 280, 281, 282, 283, 299, 300, 301, 305, 322, 343, 356, 360, 361, 363, 365, 366, 371, 372, 373, 392, 405, 413, 420, 422, 434, 436, 437, 447, 454, 456, 457, 471, 472, 476, 478, 479, 481, 482, 489, 496, 504, 515, 522, 535, 537, 538, 539, 540, 549, 562, 564, 572, 573, 579, 583, 592, 594, 608, 611, 617, 618, 621, 625, 648, 657, 658, 659, 660, 666, 669, 670, 671, 672, 688, 693, 694, 695, 696, 697, 706, 707, 708, 709, 710, 754, 759, 770, 780, 784, 788, 792, 793, 794, 799, 801, 807, 810, 812, 818, 832, 841, 843, 845, 849, 850, 853, 861, 862, 863, 865, 868, 871, 874, 886], "wave": [4, 46, 95, 114, 138, 145, 152, 167, 203, 208, 229, 241, 246, 266, 267, 268, 269, 405, 406, 481, 482, 512, 574, 579, 584, 708, 710, 718, 724, 862], "contrast": [4, 7, 79, 88, 96, 99, 150, 152, 167, 171, 209, 225, 228, 229, 236, 241, 242, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709, 862, 872, 874, 886], "although": [4, 21, 65, 101, 141, 144, 150, 162, 173, 202, 203, 205, 207, 217, 264, 446, 481, 482, 688, 852, 868, 886], "shouldn": [4, 152, 246, 277, 280, 549], "expect": [4, 32, 38, 94, 114, 121, 145, 157, 160, 162, 163, 166, 167, 168, 173, 181, 191, 197, 203, 206, 207, 208, 212, 217, 218, 223, 225, 228, 232, 233, 238, 243, 266, 267, 268, 269, 332, 334, 339, 360, 481, 482, 488, 497, 501, 508, 540, 562, 594, 618, 619, 623, 634, 645, 754, 784, 794, 801, 807, 841, 843, 845, 864, 865, 867, 868, 869, 886], "great": [4, 120, 145, 152, 243, 863, 874], "among": [4, 10, 27, 36, 56, 173, 203, 228, 277, 279, 366, 539, 541, 543, 562, 583, 626, 629, 686, 754, 759, 857, 867, 886], "minu": [4, 142, 145, 230, 243, 562, 648, 691, 868, 871], "difference_wav": 4, "weight": [4, 5, 7, 11, 15, 18, 19, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 58, 59, 60, 73, 74, 90, 94, 99, 104, 107, 108, 109, 110, 123, 138, 142, 145, 150, 152, 158, 167, 169, 177, 178, 179, 180, 181, 182, 183, 186, 189, 192, 196, 197, 201, 203, 204, 205, 207, 208, 209, 212, 224, 225, 228, 229, 231, 236, 237, 238, 246, 258, 271, 272, 277, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 355, 367, 417, 418, 419, 431, 434, 457, 458, 476, 478, 479, 492, 529, 535, 536, 540, 561, 562, 592, 662, 663, 668, 669, 672, 693, 694, 696, 697, 701, 713, 716, 724, 786, 809, 841, 861, 862, 871, 872, 886], "clear": [4, 74, 113, 117, 141, 158, 201, 205, 207, 211, 213, 225, 228, 263, 266, 267, 271, 275, 290, 304, 481, 482, 528, 741, 754, 785, 845, 874, 886], "pattern": [4, 11, 17, 19, 20, 21, 27, 46, 80, 83, 112, 113, 143, 144, 162, 167, 168, 173, 196, 200, 203, 206, 207, 208, 212, 243, 246, 266, 267, 268, 269, 271, 276, 314, 330, 365, 375, 413, 417, 419, 420, 421, 428, 431, 437, 442, 463, 496, 498, 559, 563, 621, 634, 644, 645, 659, 706, 708, 709, 845, 861, 862, 868, 871, 886], "when": [4, 21, 27, 28, 31, 44, 45, 46, 47, 60, 70, 74, 75, 79, 81, 82, 83, 84, 90, 94, 95, 103, 107, 115, 126, 127, 135, 141, 143, 144, 145, 146, 147, 150, 151, 152, 158, 159, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 176, 179, 181, 183, 185, 189, 190, 191, 192, 193, 197, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 224, 228, 230, 233, 241, 242, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 289, 299, 300, 311, 314, 318, 319, 341, 349, 350, 351, 355, 356, 360, 361, 362, 363, 365, 367, 371, 372, 373, 374, 377, 413, 420, 421, 424, 430, 432, 434, 438, 440, 442, 445, 447, 448, 449, 451, 452, 454, 456, 457, 460, 463, 472, 476, 478, 479, 481, 482, 489, 494, 496, 497, 498, 502, 504, 506, 510, 529, 530, 531, 532, 533, 535, 536, 540, 545, 546, 548, 551, 561, 562, 564, 567, 572, 573, 576, 577, 579, 583, 584, 586, 587, 594, 595, 609, 612, 614, 618, 620, 622, 624, 637, 643, 645, 646, 651, 655, 656, 667, 670, 693, 694, 695, 696, 697, 701, 705, 706, 707, 708, 709, 710, 712, 713, 715, 718, 724, 744, 751, 754, 762, 763, 771, 778, 782, 784, 786, 787, 788, 790, 791, 793, 794, 796, 797, 799, 801, 804, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 820, 832, 834, 841, 843, 848, 849, 850, 851, 860, 861, 863, 865, 866, 867, 868, 869, 871, 872, 886], "howev": [4, 16, 21, 45, 70, 74, 75, 141, 143, 147, 150, 163, 168, 170, 171, 172, 173, 190, 191, 192, 193, 196, 197, 201, 203, 205, 206, 207, 208, 209, 213, 217, 218, 228, 230, 232, 233, 236, 238, 243, 266, 267, 271, 299, 314, 356, 405, 434, 496, 498, 512, 529, 695, 845, 865, 867, 868, 871, 874, 886], "could": [4, 28, 29, 30, 38, 39, 41, 43, 69, 79, 84, 104, 141, 145, 152, 161, 162, 167, 170, 172, 173, 176, 180, 181, 182, 192, 200, 202, 206, 207, 208, 209, 211, 214, 217, 218, 219, 223, 228, 229, 236, 238, 243, 266, 267, 268, 269, 272, 277, 299, 382, 405, 406, 412, 434, 436, 440, 456, 481, 482, 483, 489, 562, 565, 580, 584, 585, 608, 757, 762, 827, 845, 865, 867, 874, 886], "narrow": [4, 200, 204, 243, 276, 886], "our": [4, 5, 19, 26, 27, 32, 42, 44, 62, 67, 70, 74, 80, 84, 93, 103, 109, 112, 114, 115, 120, 121, 127, 135, 136, 137, 138, 141, 142, 143, 145, 146, 147, 151, 152, 157, 161, 167, 169, 172, 173, 176, 181, 182, 184, 185, 197, 200, 201, 203, 204, 206, 207, 208, 209, 211, 212, 213, 217, 218, 223, 225, 228, 230, 232, 233, 236, 237, 238, 241, 242, 243, 279, 453, 454, 537, 722, 732, 750, 844, 845, 847, 848, 849, 850, 861, 864, 865, 867, 868, 869, 873, 874, 886], "search": [4, 152, 157, 197, 246, 276, 279, 299, 416, 423, 440, 461, 565, 570, 577, 722, 732, 733, 736, 770, 845, 850, 851, 865], "bit": [4, 5, 7, 79, 109, 127, 142, 145, 161, 172, 181, 190, 203, 205, 210, 213, 228, 236, 238, 243, 266, 267, 271, 343, 481, 482, 489, 496, 503, 843, 851, 862, 868, 871, 886], "sinc": [4, 19, 32, 43, 44, 70, 79, 94, 115, 119, 135, 136, 141, 142, 143, 145, 152, 161, 167, 168, 170, 172, 173, 176, 179, 189, 190, 192, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 217, 218, 219, 223, 228, 231, 236, 238, 243, 260, 261, 266, 267, 268, 269, 272, 276, 277, 280, 292, 314, 340, 356, 360, 361, 434, 443, 444, 445, 446, 457, 469, 481, 482, 525, 549, 562, 573, 579, 583, 594, 693, 694, 695, 696, 697, 771, 798, 845, 861, 865, 868, 871, 886], "paradigm": [4, 7, 145, 163, 167, 200, 203, 787, 862, 886], "might": [4, 5, 19, 21, 70, 120, 127, 142, 145, 152, 157, 162, 163, 168, 169, 177, 193, 197, 203, 206, 209, 228, 233, 236, 243, 273, 277, 281, 334, 437, 548, 562, 602, 693, 812, 843, 844, 845, 861, 864, 865, 868, 886], "best": [4, 5, 10, 16, 73, 79, 83, 121, 135, 136, 143, 150, 163, 167, 177, 178, 179, 181, 193, 196, 202, 206, 211, 225, 272, 356, 361, 421, 481, 482, 577, 662, 664, 665, 755, 845, 851, 853, 863, 864, 865, 867, 868, 871], "electrod": [4, 27, 67, 77, 78, 85, 118, 120, 122, 130, 136, 139, 140, 142, 144, 151, 160, 162, 166, 167, 171, 187, 188, 192, 196, 200, 203, 205, 209, 211, 217, 228, 246, 263, 266, 267, 268, 269, 270, 271, 275, 277, 283, 314, 315, 318, 327, 328, 330, 332, 333, 334, 335, 336, 337, 340, 356, 368, 375, 413, 420, 454, 465, 472, 473, 481, 482, 487, 489, 491, 496, 502, 504, 525, 528, 529, 540, 561, 562, 570, 577, 589, 590, 591, 593, 622, 651, 706, 708, 709, 710, 742, 743, 744, 746, 754, 755, 770, 771, 774, 776, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 819, 822, 824, 841, 861, 862, 871, 874, 886], "over": [4, 5, 8, 9, 12, 21, 27, 28, 45, 46, 58, 59, 67, 70, 80, 81, 103, 104, 107, 109, 112, 113, 115, 122, 130, 136, 137, 138, 150, 151, 152, 160, 162, 163, 167, 170, 173, 176, 177, 192, 193, 201, 203, 206, 208, 211, 213, 219, 220, 225, 228, 229, 232, 233, 241, 243, 246, 258, 260, 265, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 293, 294, 297, 309, 323, 344, 356, 362, 413, 420, 422, 424, 452, 455, 481, 482, 516, 531, 533, 536, 562, 566, 595, 608, 621, 655, 656, 681, 693, 702, 706, 708, 709, 710, 717, 725, 738, 754, 767, 784, 785, 786, 796, 801, 841, 845, 852, 862, 863, 865, 867, 868, 874, 886], "occipit": [4, 47, 49, 170, 205, 243, 641, 868], "lobe": [4, 47, 136, 137, 181], "ani": [4, 5, 18, 24, 27, 41, 45, 50, 75, 83, 110, 112, 117, 120, 126, 127, 135, 136, 138, 141, 142, 143, 144, 150, 152, 157, 159, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 177, 182, 184, 185, 186, 190, 191, 197, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 217, 218, 219, 220, 228, 233, 243, 246, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 276, 277, 279, 280, 281, 282, 289, 291, 293, 307, 308, 314, 321, 326, 328, 363, 367, 389, 419, 432, 435, 436, 437, 440, 447, 465, 470, 481, 482, 497, 551, 553, 554, 555, 559, 560, 562, 563, 564, 565, 579, 583, 584, 589, 594, 601, 612, 618, 626, 634, 644, 647, 648, 651, 656, 667, 671, 692, 701, 706, 707, 708, 709, 710, 723, 754, 755, 757, 779, 784, 785, 787, 796, 799, 807, 808, 818, 824, 833, 836, 841, 843, 845, 848, 862, 863, 865, 867, 868, 874, 886], "easier": [4, 135, 141, 143, 145, 151, 152, 157, 173, 192, 197, 201, 203, 206, 207, 208, 209, 260, 374, 843, 845, 886], "spot": [4, 201, 204, 232, 276, 886], "area": [4, 5, 54, 70, 79, 94, 116, 135, 136, 179, 192, 193, 197, 201, 206, 214, 219, 224, 228, 232, 243, 266, 267, 268, 269, 272, 481, 482, 589, 667, 706, 776, 778, 788, 790, 808, 845, 868, 871, 886], "dictionari": [4, 10, 27, 36, 56, 59, 94, 115, 127, 137, 141, 142, 143, 145, 146, 150, 151, 152, 167, 168, 170, 189, 206, 208, 211, 217, 218, 223, 246, 258, 260, 261, 263, 266, 267, 268, 269, 270, 271, 275, 276, 277, 279, 290, 299, 300, 301, 304, 312, 314, 326, 327, 342, 356, 360, 361, 367, 370, 371, 372, 373, 375, 413, 415, 420, 424, 437, 440, 442, 445, 448, 449, 451, 452, 454, 456, 457, 473, 476, 477, 478, 479, 480, 481, 482, 514, 524, 528, 540, 562, 572, 574, 575, 577, 579, 582, 583, 614, 621, 626, 637, 639, 642, 648, 655, 692, 706, 741, 744, 754, 777, 778, 784, 785, 787, 794, 797, 799, 807, 813, 852, 886], "concentr": [4, 191, 207, 212, 224, 418, 535, 536, 596, 601, 713, 716, 724, 786, 886], "b11": 4, "ylim": [4, 7, 9, 19, 35, 39, 40, 46, 51, 59, 99, 112, 114, 127, 152, 161, 196, 203, 205, 212, 213, 228, 238, 243, 268, 269, 778, 788, 792, 886], "do": [4, 5, 15, 16, 18, 24, 26, 27, 31, 34, 40, 41, 45, 47, 50, 51, 54, 55, 58, 59, 60, 65, 67, 70, 74, 79, 83, 109, 112, 114, 115, 120, 127, 135, 137, 138, 141, 142, 145, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 167, 169, 172, 173, 176, 177, 178, 181, 183, 184, 185, 186, 189, 190, 192, 193, 196, 197, 201, 203, 204, 206, 207, 208, 209, 210, 211, 213, 217, 219, 223, 224, 225, 228, 233, 236, 237, 238, 242, 243, 246, 258, 259, 260, 261, 263, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 285, 289, 305, 309, 311, 321, 328, 356, 360, 367, 371, 372, 382, 388, 405, 406, 424, 425, 426, 432, 434, 442, 447, 448, 454, 463, 471, 478, 479, 481, 482, 489, 496, 525, 529, 530, 531, 532, 533, 535, 536, 545, 546, 553, 554, 555, 559, 560, 562, 563, 564, 565, 573, 579, 580, 583, 594, 611, 614, 621, 624, 625, 643, 645, 647, 693, 694, 696, 697, 701, 706, 708, 709, 710, 723, 744, 779, 783, 795, 814, 831, 834, 836, 843, 845, 848, 850, 851, 853, 856, 861, 862, 867, 868, 871, 872, 874, 886], "pretti": [4, 142, 145, 203, 206, 208, 865], "small": [4, 5, 11, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 70, 75, 79, 90, 93, 94, 104, 107, 108, 109, 110, 121, 127, 128, 136, 142, 143, 153, 163, 167, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 192, 197, 203, 204, 206, 208, 219, 224, 225, 228, 230, 236, 238, 258, 263, 264, 266, 267, 268, 269, 272, 275, 322, 356, 413, 420, 481, 482, 497, 561, 562, 564, 612, 618, 693, 694, 696, 697, 699, 706, 708, 710, 782, 786, 793, 797, 806, 809, 814, 841, 845, 862, 865, 868, 871, 886], "determin": [4, 22, 79, 82, 128, 135, 142, 146, 152, 162, 167, 170, 172, 179, 191, 203, 205, 211, 217, 218, 219, 228, 231, 233, 260, 263, 264, 266, 267, 268, 269, 271, 274, 275, 280, 282, 285, 299, 300, 307, 314, 316, 343, 350, 356, 360, 361, 371, 372, 373, 388, 413, 419, 420, 421, 430, 452, 456, 457, 476, 478, 479, 481, 482, 493, 517, 521, 540, 562, 589, 592, 594, 599, 600, 622, 641, 698, 734, 737, 754, 782, 785, 790, 792, 793, 794, 795, 804, 811, 817, 827, 865, 868, 871, 886], "whether": [4, 13, 82, 142, 145, 146, 147, 172, 179, 181, 197, 201, 206, 207, 211, 243, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 289, 299, 300, 314, 323, 324, 325, 326, 328, 356, 361, 366, 388, 395, 413, 420, 435, 446, 454, 472, 473, 480, 481, 482, 492, 500, 522, 529, 530, 531, 532, 533, 536, 538, 539, 540, 544, 545, 546, 561, 562, 563, 571, 577, 579, 580, 583, 584, 585, 589, 592, 595, 609, 648, 651, 670, 671, 693, 694, 696, 697, 706, 707, 708, 709, 710, 712, 715, 718, 754, 763, 771, 775, 778, 780, 782, 783, 784, 785, 786, 788, 792, 793, 797, 799, 801, 804, 806, 807, 808, 809, 810, 812, 814, 815, 816, 817, 820, 824, 845, 851, 865, 868, 871, 886], "stronger": [4, 142, 192, 230, 238, 268, 269, 788], "along": [4, 19, 46, 67, 115, 119, 137, 141, 143, 161, 167, 169, 171, 179, 196, 197, 200, 201, 205, 206, 209, 210, 217, 219, 220, 225, 236, 263, 264, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 289, 413, 416, 420, 423, 424, 426, 453, 471, 472, 478, 481, 482, 561, 562, 611, 685, 686, 693, 694, 696, 697, 700, 706, 708, 709, 710, 754, 770, 771, 778, 784, 785, 786, 789, 793, 797, 806, 809, 810, 812, 814, 815, 816, 817, 841, 843, 844, 845, 862, 868, 886], "phase_coh": 4, "get": [4, 5, 7, 15, 18, 19, 21, 22, 26, 27, 28, 34, 38, 39, 41, 47, 48, 50, 52, 60, 62, 63, 65, 66, 69, 70, 72, 80, 81, 83, 84, 94, 95, 96, 97, 103, 109, 113, 114, 116, 120, 123, 124, 127, 135, 136, 137, 141, 142, 143, 144, 145, 147, 150, 151, 152, 156, 157, 158, 159, 161, 163, 166, 167, 168, 170, 171, 174, 175, 176, 181, 182, 184, 185, 186, 193, 200, 201, 202, 203, 204, 206, 208, 217, 219, 220, 228, 230, 232, 233, 238, 241, 242, 246, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 290, 304, 308, 312, 313, 314, 324, 325, 343, 344, 360, 367, 372, 373, 376, 379, 380, 381, 382, 384, 385, 386, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 430, 433, 437, 442, 448, 454, 462, 465, 468, 472, 481, 482, 487, 511, 519, 528, 538, 539, 551, 562, 563, 569, 571, 580, 624, 655, 656, 675, 677, 685, 698, 701, 706, 707, 708, 709, 710, 741, 754, 755, 778, 785, 787, 800, 841, 843, 844, 845, 847, 849, 850, 851, 856, 862, 863, 867, 868, 869, 871, 872, 874, 886], "sort": [4, 7, 15, 21, 27, 47, 94, 121, 122, 130, 138, 144, 161, 171, 228, 266, 267, 268, 269, 271, 276, 326, 356, 361, 421, 439, 442, 466, 497, 562, 629, 707, 709, 785, 788, 790, 836, 853, 886], "label": [4, 8, 9, 10, 11, 12, 13, 15, 16, 18, 21, 22, 27, 28, 29, 36, 37, 44, 45, 56, 68, 70, 90, 92, 94, 95, 96, 97, 101, 105, 106, 110, 111, 112, 113, 116, 120, 126, 127, 135, 136, 138, 141, 143, 144, 145, 150, 152, 156, 161, 167, 169, 173, 177, 181, 182, 192, 193, 197, 202, 206, 208, 211, 217, 218, 219, 229, 238, 242, 243, 246, 262, 263, 264, 266, 267, 268, 269, 271, 273, 274, 275, 277, 278, 279, 280, 281, 282, 299, 300, 362, 366, 387, 390, 413, 414, 415, 418, 420, 421, 422, 424, 430, 446, 447, 454, 459, 465, 466, 467, 471, 481, 482, 489, 492, 496, 516, 517, 528, 529, 530, 531, 532, 533, 535, 536, 538, 539, 541, 543, 545, 546, 548, 559, 561, 562, 563, 577, 611, 624, 626, 627, 628, 629, 634, 644, 645, 655, 656, 664, 669, 672, 673, 683, 702, 706, 708, 709, 710, 722, 732, 754, 759, 772, 773, 776, 778, 784, 785, 786, 787, 788, 790, 793, 797, 800, 801, 806, 807, 809, 812, 813, 814, 815, 816, 817, 835, 836, 841, 845, 874, 876, 886], "2f": [4, 59, 158, 273, 274, 277, 280, 281, 282, 562, 754, 797, 812, 817], "format": [4, 27, 34, 43, 44, 62, 66, 70, 114, 127, 136, 138, 141, 144, 150, 151, 152, 161, 166, 167, 169, 171, 172, 173, 177, 183, 189, 192, 193, 204, 206, 207, 208, 209, 212, 214, 217, 218, 219, 221, 228, 229, 230, 233, 258, 260, 263, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 314, 332, 333, 337, 339, 352, 353, 354, 375, 413, 420, 442, 443, 444, 445, 446, 473, 480, 481, 482, 484, 487, 489, 493, 498, 503, 551, 557, 561, 562, 577, 579, 589, 612, 616, 621, 627, 637, 652, 653, 657, 658, 659, 671, 686, 693, 694, 696, 697, 706, 707, 708, 709, 710, 724, 725, 727, 749, 754, 769, 771, 786, 793, 797, 806, 809, 812, 814, 816, 817, 831, 839, 841, 845, 852, 857, 861, 862, 865, 871, 874, 886], "90": [4, 5, 11, 13, 19, 24, 35, 41, 42, 47, 80, 81, 90, 94, 103, 104, 108, 109, 112, 114, 123, 136, 137, 144, 152, 157, 158, 159, 161, 170, 171, 172, 180, 185, 191, 196, 197, 202, 204, 209, 210, 212, 213, 228, 229, 230, 232, 233, 236, 237, 238, 243, 246, 268, 269, 299, 300, 356, 360, 361, 371, 372, 373, 413, 418, 420, 456, 457, 476, 478, 479, 526, 535, 536, 540, 562, 655, 662, 664, 665, 666, 687, 713, 716, 724, 759, 786, 794, 862, 863, 868], "each": [4, 9, 10, 11, 15, 16, 19, 24, 28, 32, 33, 38, 41, 44, 45, 67, 70, 80, 83, 93, 94, 95, 101, 103, 107, 108, 109, 112, 113, 115, 117, 120, 127, 128, 133, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 156, 157, 159, 161, 162, 163, 167, 168, 169, 170, 173, 176, 177, 178, 179, 181, 182, 184, 186, 190, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 219, 220, 223, 225, 228, 230, 232, 233, 236, 237, 238, 241, 243, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 288, 291, 292, 299, 300, 305, 312, 316, 319, 323, 344, 346, 347, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 364, 367, 369, 373, 388, 405, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 436, 437, 438, 447, 451, 452, 453, 454, 455, 456, 457, 465, 471, 476, 478, 479, 480, 481, 482, 483, 485, 496, 505, 513, 514, 517, 519, 521, 522, 529, 533, 535, 536, 538, 539, 552, 561, 562, 563, 565, 567, 570, 577, 579, 581, 583, 589, 593, 594, 598, 614, 618, 624, 637, 640, 648, 654, 655, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 675, 677, 686, 688, 689, 691, 693, 694, 695, 696, 697, 698, 701, 702, 705, 706, 707, 708, 709, 710, 711, 712, 713, 725, 736, 737, 744, 754, 755, 758, 762, 770, 771, 772, 774, 775, 776, 778, 779, 780, 781, 782, 785, 786, 788, 790, 791, 792, 793, 794, 797, 805, 806, 807, 808, 809, 813, 814, 815, 816, 819, 823, 824, 832, 834, 839, 841, 843, 844, 845, 851, 861, 862, 863, 865, 868, 871, 886], "zip": [4, 9, 10, 22, 27, 47, 81, 90, 107, 113, 114, 120, 127, 138, 141, 151, 161, 166, 181, 196, 201, 203, 204, 206, 207, 209, 228, 229, 230, 231, 232, 233, 238, 242, 389, 505, 845, 853], "c22": 4, "figur": [4, 5, 8, 16, 19, 22, 27, 28, 37, 38, 45, 49, 54, 55, 92, 103, 109, 111, 115, 116, 118, 122, 123, 125, 130, 136, 137, 142, 143, 146, 151, 157, 159, 161, 167, 171, 177, 179, 180, 181, 184, 185, 192, 196, 197, 203, 205, 206, 208, 211, 212, 220, 225, 228, 230, 233, 238, 242, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 314, 315, 328, 413, 420, 472, 473, 481, 482, 561, 562, 577, 624, 634, 706, 707, 708, 709, 710, 733, 734, 736, 737, 754, 756, 757, 760, 763, 767, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 821, 822, 824, 843, 844, 845, 863, 865, 886], "ax": [4, 10, 11, 12, 13, 15, 19, 21, 22, 37, 39, 41, 45, 47, 58, 67, 68, 69, 70, 71, 72, 73, 81, 82, 86, 90, 93, 96, 99, 104, 112, 113, 114, 115, 116, 120, 127, 133, 135, 136, 137, 138, 145, 146, 147, 151, 152, 157, 161, 162, 171, 173, 177, 178, 181, 182, 184, 196, 197, 200, 203, 204, 207, 208, 211, 212, 213, 220, 225, 228, 229, 230, 231, 232, 233, 241, 242, 243, 263, 264, 266, 267, 268, 269, 275, 314, 315, 323, 328, 413, 420, 472, 481, 482, 561, 562, 706, 708, 710, 722, 732, 755, 757, 767, 770, 771, 773, 776, 777, 778, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 802, 803, 804, 806, 808, 809, 810, 811, 814, 816, 868, 886], "subplot": [4, 10, 11, 12, 13, 15, 19, 21, 22, 39, 41, 45, 47, 58, 68, 69, 70, 71, 72, 73, 82, 86, 90, 93, 96, 99, 104, 107, 112, 113, 114, 115, 116, 120, 127, 135, 137, 138, 143, 145, 147, 152, 161, 171, 173, 177, 178, 181, 182, 184, 196, 197, 203, 208, 211, 212, 213, 220, 225, 228, 229, 230, 231, 232, 233, 242, 243, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 706, 708, 710, 722, 732, 754, 776, 777, 786, 787, 792, 793, 797, 802, 806, 809, 814, 816, 819, 886], "figsiz": [4, 12, 15, 19, 22, 45, 47, 70, 73, 96, 112, 113, 114, 115, 120, 127, 135, 137, 145, 161, 177, 184, 196, 203, 208, 211, 212, 225, 228, 229, 231, 232, 233, 242, 243, 562, 799, 800], "20": [4, 5, 9, 11, 12, 13, 14, 15, 19, 20, 22, 28, 33, 34, 35, 37, 45, 46, 47, 48, 54, 55, 56, 59, 60, 61, 70, 74, 76, 81, 82, 84, 85, 88, 90, 100, 103, 104, 107, 108, 109, 112, 113, 114, 115, 116, 121, 127, 128, 133, 138, 141, 143, 144, 151, 152, 153, 158, 160, 167, 170, 171, 172, 173, 177, 178, 180, 182, 184, 185, 186, 192, 196, 197, 200, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 217, 220, 223, 225, 228, 229, 230, 232, 233, 237, 238, 240, 241, 243, 246, 247, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 299, 300, 310, 314, 319, 326, 332, 343, 344, 345, 346, 347, 349, 362, 367, 412, 413, 420, 438, 448, 456, 476, 478, 479, 481, 482, 489, 518, 522, 529, 530, 531, 532, 536, 540, 544, 545, 546, 554, 561, 562, 571, 577, 583, 592, 616, 621, 651, 654, 655, 670, 672, 694, 695, 706, 707, 708, 709, 710, 723, 758, 770, 771, 772, 778, 783, 784, 786, 788, 789, 790, 792, 793, 794, 797, 804, 806, 807, 808, 809, 810, 812, 814, 816, 817, 844, 861, 862, 865, 868], "cmap": [4, 9, 10, 13, 15, 16, 19, 22, 41, 70, 100, 101, 107, 109, 112, 114, 115, 116, 120, 135, 137, 144, 161, 183, 196, 197, 211, 228, 230, 231, 232, 233, 242, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 706, 707, 708, 710, 769, 771, 778, 780, 785, 786, 790, 793, 796, 797, 806, 809, 814, 815, 816], "magma": 4, "consider": [4, 81, 99, 152, 202, 203, 206, 213, 224, 233, 246, 276, 692, 852, 868, 874, 886], "chosen": [4, 45, 138, 146, 152, 200, 203, 205, 206, 208, 241, 260, 263, 266, 267, 268, 269, 274, 275, 279, 280, 282, 360, 413, 415, 420, 424, 426, 449, 451, 452, 471, 481, 482, 515, 537, 561, 562, 577, 592, 611, 658, 659, 693, 694, 696, 697, 706, 707, 708, 709, 710, 754, 770, 771, 780, 784, 786, 790, 793, 797, 800, 806, 807, 808, 809, 810, 814, 816, 868], "test": [4, 8, 10, 13, 15, 16, 19, 26, 27, 90, 95, 98, 102, 112, 123, 128, 136, 141, 152, 166, 169, 172, 173, 189, 196, 197, 210, 211, 217, 229, 230, 231, 234, 235, 238, 239, 240, 243, 246, 266, 267, 268, 269, 271, 277, 278, 279, 291, 293, 299, 320, 362, 388, 416, 417, 430, 434, 436, 452, 481, 482, 490, 510, 513, 528, 529, 537, 543, 553, 559, 562, 583, 594, 621, 634, 636, 678, 684, 686, 688, 690, 693, 694, 695, 696, 697, 698, 699, 700, 706, 708, 709, 710, 736, 754, 762, 775, 778, 786, 793, 800, 814, 843, 846, 849, 850, 865, 868, 874, 886], "interpol": [4, 15, 24, 27, 32, 60, 70, 77, 85, 87, 90, 93, 94, 95, 119, 135, 136, 137, 152, 178, 182, 189, 197, 206, 211, 225, 228, 241, 263, 266, 267, 268, 269, 275, 279, 281, 282, 413, 420, 447, 470, 481, 482, 561, 562, 577, 581, 586, 593, 624, 655, 657, 658, 659, 671, 706, 708, 710, 742, 754, 771, 786, 793, 797, 806, 809, 814, 816, 852, 886], "miss": [4, 44, 69, 84, 135, 136, 152, 159, 160, 181, 184, 189, 191, 203, 209, 243, 266, 267, 268, 269, 271, 279, 318, 341, 389, 405, 419, 481, 482, 489, 496, 502, 553, 594, 692, 787, 788, 841, 845, 849, 850, 852, 853, 871, 874, 886], "drop": [4, 8, 9, 11, 12, 16, 18, 21, 32, 33, 34, 42, 46, 49, 71, 72, 96, 97, 100, 103, 107, 110, 112, 113, 114, 117, 121, 128, 136, 137, 138, 142, 143, 145, 146, 147, 152, 153, 163, 167, 168, 173, 178, 181, 183, 184, 186, 192, 200, 201, 202, 205, 206, 208, 209, 212, 213, 214, 219, 224, 225, 230, 231, 232, 233, 236, 238, 242, 260, 261, 263, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 316, 319, 438, 439, 446, 470, 481, 482, 494, 562, 574, 575, 579, 595, 618, 620, 648, 706, 707, 708, 709, 710, 783, 784, 797, 799, 845, 848, 868, 886], "furthermor": [4, 156, 176, 179, 190, 205, 861, 868, 871], "mark": [4, 8, 11, 49, 74, 78, 79, 83, 92, 93, 111, 120, 126, 127, 136, 138, 143, 145, 151, 152, 167, 170, 171, 173, 179, 190, 191, 192, 202, 203, 206, 207, 209, 210, 211, 212, 217, 219, 220, 233, 246, 259, 261, 266, 267, 268, 269, 316, 373, 382, 390, 405, 406, 470, 472, 480, 481, 482, 561, 562, 567, 570, 576, 577, 581, 583, 593, 594, 602, 609, 618, 620, 648, 706, 708, 709, 710, 750, 774, 784, 786, 793, 798, 800, 807, 808, 814, 841, 845, 862, 863, 886], "exg": 4, "prefix": [4, 74, 156, 171, 176, 258, 263, 266, 267, 268, 269, 275, 357, 358, 413, 420, 473, 481, 482, 489, 496, 497, 561, 562, 577, 618, 706, 708, 710, 771, 793, 797, 806, 809, 814, 841], "interpolate_bad": [4, 70, 78, 201, 266, 267, 268, 269, 470, 481, 482, 868, 886], "reset_bad": [4, 78, 201, 266, 267, 268, 269, 481, 482, 868], "drop_channel": [4, 42, 67, 70, 137, 141, 150, 217, 233, 266, 267, 268, 269, 481, 482, 706, 708, 709, 710, 872, 886], "exg1": 4, "exg2": 4, "exg3": 4, "exg4": 4, "radiu": [4, 5, 24, 26, 41, 45, 50, 70, 71, 78, 80, 93, 94, 109, 135, 152, 157, 159, 160, 171, 177, 182, 183, 184, 185, 186, 201, 208, 209, 211, 224, 263, 266, 267, 268, 269, 275, 304, 307, 314, 328, 330, 332, 413, 420, 433, 471, 481, 482, 515, 526, 544, 561, 562, 571, 577, 655, 658, 701, 706, 708, 710, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 868, 886], "95": [4, 5, 7, 19, 34, 47, 50, 70, 75, 79, 80, 81, 90, 109, 112, 113, 114, 121, 130, 135, 137, 143, 144, 146, 147, 152, 157, 159, 161, 170, 180, 185, 196, 197, 202, 210, 211, 212, 228, 229, 232, 233, 246, 266, 267, 268, 269, 562, 577, 666, 685, 706, 778, 794, 799, 815, 868], "113": [4, 35, 112, 170, 175, 209, 217, 218, 222, 228, 233, 246], "524face": 4, "To": [4, 5, 11, 18, 19, 22, 33, 44, 45, 88, 90, 94, 95, 113, 116, 127, 133, 135, 138, 141, 143, 145, 147, 150, 151, 152, 157, 159, 160, 161, 162, 167, 169, 170, 171, 172, 173, 176, 179, 181, 185, 189, 191, 192, 193, 196, 197, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 217, 219, 220, 223, 225, 228, 230, 232, 233, 237, 238, 242, 258, 260, 261, 266, 267, 268, 269, 272, 276, 281, 282, 299, 300, 356, 360, 361, 419, 426, 437, 443, 444, 445, 446, 448, 454, 481, 482, 489, 494, 511, 515, 519, 525, 562, 576, 579, 583, 585, 590, 592, 594, 609, 611, 626, 652, 655, 658, 659, 660, 666, 669, 670, 672, 693, 694, 695, 696, 697, 699, 712, 715, 731, 733, 734, 735, 736, 737, 738, 752, 754, 771, 784, 797, 799, 801, 807, 818, 819, 833, 843, 844, 845, 848, 849, 850, 851, 853, 860, 861, 862, 863, 865, 867, 868, 872, 886], "predict": [4, 10, 12, 13, 15, 16, 17, 20, 27, 42, 101, 138, 142, 177, 196, 197, 246, 271, 299, 314, 330, 375, 416, 417, 419, 423, 425, 430, 453, 482, 530, 537, 816, 862, 886], "brain": [4, 5, 7, 8, 10, 11, 15, 19, 21, 22, 24, 26, 27, 28, 29, 31, 32, 33, 35, 38, 40, 41, 42, 43, 44, 46, 54, 58, 59, 60, 70, 79, 82, 88, 94, 104, 109, 115, 122, 126, 130, 135, 136, 147, 152, 156, 157, 159, 163, 171, 176, 177, 178, 179, 180, 182, 183, 185, 189, 190, 191, 192, 197, 200, 205, 206, 208, 209, 225, 228, 236, 237, 238, 243, 246, 257, 258, 264, 266, 267, 268, 269, 271, 273, 274, 277, 278, 279, 280, 281, 282, 292, 299, 300, 305, 333, 362, 374, 382, 413, 419, 421, 447, 452, 465, 479, 481, 482, 491, 502, 517, 521, 526, 528, 529, 543, 549, 559, 560, 563, 567, 578, 590, 591, 593, 616, 624, 634, 639, 644, 655, 671, 695, 706, 708, 709, 710, 763, 765, 768, 770, 772, 773, 776, 782, 812, 813, 817, 818, 822, 824, 841, 843, 845, 846, 851, 852, 861, 862, 865, 868, 873, 874, 876, 886], "purpos": [4, 8, 11, 12, 21, 113, 141, 142, 150, 157, 169, 181, 190, 200, 201, 202, 203, 206, 207, 209, 232, 236, 238, 243, 246, 266, 267, 379, 380, 381, 382, 384, 385, 386, 388, 393, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 424, 426, 481, 482, 770, 784, 807, 841, 852, 861, 862, 867, 870, 871, 872], "intercept": [4, 101, 691], "predictor_var": 4, "where": [4, 10, 13, 31, 45, 68, 70, 74, 79, 81, 82, 83, 90, 94, 95, 101, 112, 135, 138, 141, 142, 143, 145, 150, 152, 156, 161, 166, 167, 168, 169, 170, 171, 173, 176, 183, 184, 185, 189, 191, 192, 193, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 217, 219, 223, 224, 225, 228, 230, 232, 233, 236, 237, 238, 243, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 279, 280, 281, 282, 321, 323, 324, 325, 337, 355, 374, 379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 420, 426, 428, 447, 449, 452, 454, 473, 481, 482, 515, 537, 561, 562, 564, 571, 577, 579, 580, 581, 594, 656, 662, 663, 664, 665, 666, 668, 670, 671, 686, 687, 692, 693, 694, 696, 697, 706, 708, 709, 710, 734, 737, 754, 759, 771, 772, 775, 776, 777, 784, 785, 786, 793, 797, 806, 807, 808, 809, 814, 816, 820, 841, 845, 846, 848, 849, 850, 851, 861, 862, 865, 867, 868, 871, 886], "func": [4, 211, 273, 274, 277, 280, 281, 282, 489, 496, 504, 845, 886], "reg": [4, 8, 9, 12, 21, 34, 49, 135, 181, 225, 299, 300, 413, 420, 421, 563, 868, 886], "design_matrix": [4, 142, 691], "25728": 4, "target": [4, 17, 20, 27, 49, 77, 85, 101, 128, 142, 162, 197, 204, 206, 228, 229, 243, 266, 268, 269, 271, 412, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 425, 426, 430, 439, 481, 494, 523, 559, 562, 563, 621, 845, 886], "regressor": [4, 69, 101, 197, 228, 691], "within": [4, 5, 16, 24, 38, 41, 45, 47, 50, 61, 69, 94, 108, 109, 112, 120, 121, 127, 128, 136, 141, 142, 145, 152, 156, 157, 159, 161, 162, 166, 167, 169, 173, 176, 177, 179, 182, 184, 185, 186, 200, 203, 206, 207, 209, 211, 219, 224, 228, 239, 243, 246, 259, 263, 266, 267, 268, 269, 273, 274, 275, 277, 280, 281, 282, 284, 309, 316, 375, 388, 413, 418, 420, 437, 439, 442, 447, 465, 471, 481, 482, 535, 536, 545, 561, 562, 577, 693, 694, 696, 697, 701, 706, 708, 710, 713, 716, 724, 735, 738, 751, 771, 785, 786, 793, 794, 797, 806, 809, 813, 814, 816, 841, 843, 845, 850, 851, 856, 865, 867, 868, 874, 886], "object": [4, 9, 10, 18, 19, 27, 30, 31, 32, 33, 34, 36, 47, 54, 55, 56, 60, 63, 78, 94, 99, 101, 103, 104, 109, 112, 113, 114, 127, 132, 135, 142, 145, 147, 152, 156, 158, 161, 162, 163, 166, 167, 168, 171, 173, 176, 182, 183, 189, 190, 191, 192, 193, 197, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 214, 218, 221, 222, 225, 229, 236, 242, 243, 246, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 285, 286, 287, 290, 292, 293, 294, 297, 299, 300, 301, 304, 305, 307, 308, 312, 313, 314, 316, 319, 320, 321, 322, 323, 326, 328, 329, 342, 344, 346, 351, 355, 356, 359, 360, 361, 362, 363, 367, 371, 372, 373, 375, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 429, 430, 431, 432, 438, 442, 447, 454, 455, 457, 459, 464, 473, 476, 478, 479, 480, 481, 482, 483, 486, 487, 488, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 515, 518, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 536, 538, 539, 540, 544, 551, 558, 559, 561, 562, 563, 564, 565, 573, 576, 577, 578, 579, 587, 589, 590, 591, 593, 599, 600, 607, 612, 616, 617, 619, 623, 624, 625, 628, 634, 641, 642, 655, 656, 670, 671, 674, 683, 691, 692, 698, 702, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 726, 727, 728, 733, 734, 735, 736, 737, 738, 739, 741, 743, 753, 754, 755, 760, 763, 765, 767, 768, 770, 771, 774, 775, 778, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 806, 807, 808, 809, 810, 811, 814, 816, 821, 822, 832, 835, 841, 845, 861, 863, 868, 870, 872, 876, 884, 886], "multipl": [4, 16, 40, 44, 45, 51, 93, 96, 97, 101, 103, 112, 120, 141, 145, 150, 151, 160, 161, 167, 173, 176, 191, 196, 201, 203, 204, 206, 207, 209, 217, 218, 219, 229, 233, 236, 237, 238, 243, 246, 260, 264, 265, 266, 267, 268, 269, 273, 274, 276, 277, 279, 280, 281, 282, 302, 319, 356, 362, 388, 415, 424, 426, 436, 438, 440, 449, 450, 451, 454, 457, 463, 478, 479, 481, 482, 494, 500, 505, 524, 538, 539, 544, 549, 562, 580, 585, 594, 598, 616, 624, 648, 651, 655, 684, 690, 694, 695, 706, 707, 709, 718, 721, 728, 729, 734, 737, 754, 768, 778, 785, 788, 791, 794, 797, 799, 801, 807, 812, 813, 815, 817, 841, 845, 862, 868, 874, 876, 883, 886], "list": [4, 9, 10, 11, 16, 28, 41, 43, 47, 67, 69, 84, 94, 103, 104, 111, 112, 113, 115, 116, 117, 127, 132, 138, 141, 145, 146, 150, 151, 152, 162, 167, 169, 170, 171, 172, 173, 176, 178, 184, 186, 189, 192, 201, 202, 203, 206, 207, 208, 211, 212, 217, 219, 220, 223, 224, 225, 228, 229, 232, 233, 237, 238, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 289, 291, 292, 293, 294, 297, 299, 300, 302, 305, 307, 308, 312, 314, 315, 316, 319, 320, 321, 323, 324, 325, 326, 328, 329, 331, 339, 340, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 367, 369, 371, 372, 373, 375, 382, 388, 394, 396, 405, 406, 413, 415, 419, 420, 423, 425, 428, 429, 430, 432, 434, 435, 436, 437, 438, 440, 444, 445, 447, 448, 451, 452, 454, 455, 459, 461, 463, 465, 466, 467, 468, 469, 470, 471, 476, 477, 478, 479, 480, 481, 482, 485, 489, 491, 493, 496, 497, 498, 500, 504, 505, 506, 508, 513, 517, 519, 520, 521, 524, 527, 531, 533, 536, 538, 539, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 570, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 590, 593, 594, 595, 600, 602, 605, 609, 611, 614, 616, 618, 620, 621, 624, 625, 626, 629, 632, 639, 641, 647, 648, 651, 655, 656, 669, 672, 673, 674, 675, 683, 686, 687, 689, 691, 692, 693, 694, 696, 697, 698, 701, 702, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 722, 723, 728, 731, 732, 737, 739, 740, 751, 753, 754, 755, 758, 759, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 812, 813, 814, 816, 817, 818, 829, 832, 836, 837, 841, 845, 848, 852, 853, 856, 860, 861, 865, 867, 868, 869, 871, 874, 886], "field": [4, 5, 7, 17, 20, 22, 26, 27, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 69, 78, 80, 81, 90, 94, 109, 113, 117, 119, 121, 124, 128, 131, 143, 145, 150, 157, 159, 160, 163, 166, 167, 170, 177, 178, 179, 180, 183, 184, 189, 190, 192, 197, 198, 199, 200, 201, 205, 206, 207, 208, 209, 210, 211, 217, 219, 220, 223, 225, 233, 246, 252, 259, 263, 266, 267, 268, 269, 271, 299, 300, 314, 321, 330, 375, 419, 425, 445, 453, 456, 481, 482, 483, 493, 501, 521, 529, 530, 576, 577, 594, 602, 619, 623, 626, 651, 692, 735, 738, 754, 771, 778, 785, 788, 789, 791, 793, 794, 796, 815, 816, 824, 841, 846, 861, 862, 865, 874, 886], "getattr": [4, 722, 732], "_field": [4, 142], "beta": [4, 12, 19, 32, 33, 34, 94, 101, 110, 112, 113, 115, 138, 142, 228, 242, 266, 267, 268, 269, 481, 482, 609, 691, 708, 710, 786], "stderr": [4, 142, 691], "t_val": [4, 142, 229, 691], "p_val": [4, 101, 142, 230, 231, 687, 691, 886], "mlog10_p_val": [4, 142, 691, 886], "just": [4, 5, 28, 32, 33, 41, 42, 44, 48, 50, 59, 70, 74, 82, 83, 101, 103, 109, 113, 114, 115, 120, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 152, 157, 159, 161, 162, 163, 166, 167, 169, 170, 171, 172, 173, 178, 180, 181, 182, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 225, 229, 230, 233, 236, 237, 238, 242, 243, 263, 266, 267, 268, 269, 273, 274, 275, 277, 279, 280, 281, 282, 314, 413, 420, 447, 448, 481, 482, 497, 537, 561, 562, 572, 577, 593, 618, 706, 708, 710, 750, 771, 778, 784, 786, 788, 790, 793, 794, 797, 801, 804, 806, 807, 808, 809, 810, 814, 816, 824, 843, 845, 853, 863, 868, 871, 886], "would": [4, 5, 19, 43, 44, 70, 79, 141, 144, 145, 151, 152, 156, 157, 161, 162, 173, 176, 182, 191, 192, 197, 200, 202, 203, 204, 205, 206, 207, 208, 211, 223, 228, 229, 230, 233, 236, 238, 243, 266, 267, 268, 269, 273, 274, 277, 279, 280, 281, 282, 292, 299, 300, 356, 360, 361, 371, 372, 373, 382, 388, 405, 406, 413, 420, 434, 435, 436, 448, 456, 457, 463, 476, 478, 479, 481, 482, 496, 519, 527, 540, 562, 573, 594, 643, 706, 709, 754, 788, 793, 794, 807, 841, 851, 867, 868, 874, 886], "higher": [4, 26, 38, 44, 54, 69, 74, 79, 94, 142, 152, 185, 193, 197, 200, 202, 204, 206, 211, 224, 230, 233, 243, 276, 594, 722, 732, 843, 845, 849, 850, 868, 886], "better": [4, 9, 19, 43, 60, 70, 79, 94, 143, 147, 152, 184, 185, 196, 203, 205, 206, 211, 228, 246, 268, 269, 273, 274, 277, 280, 281, 282, 412, 577, 590, 594, 720, 722, 732, 736, 754, 812, 817, 843, 845, 868, 886], "visibl": [4, 47, 79, 127, 173, 192, 203, 204, 210, 219, 220, 243, 266, 267, 268, 269, 481, 482, 562, 647, 706, 754, 784, 790, 801, 807, 841, 886], "neg": [4, 19, 22, 39, 71, 112, 114, 145, 151, 152, 163, 189, 192, 204, 206, 213, 228, 236, 243, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 280, 281, 282, 288, 308, 413, 419, 420, 425, 432, 441, 455, 481, 482, 506, 561, 562, 585, 592, 664, 665, 690, 706, 708, 709, 710, 773, 778, 784, 786, 793, 797, 806, 807, 809, 812, 814, 818, 862, 865, 868, 871, 886], "around": [4, 49, 70, 75, 83, 94, 112, 142, 143, 145, 147, 152, 166, 167, 172, 173, 181, 184, 192, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 217, 223, 243, 266, 267, 268, 269, 276, 360, 413, 420, 432, 437, 439, 481, 482, 515, 562, 574, 575, 579, 580, 611, 668, 706, 708, 709, 710, 778, 784, 790, 793, 794, 801, 807, 841, 843, 851], "200": [4, 9, 12, 47, 59, 75, 81, 90, 91, 92, 93, 95, 99, 109, 111, 114, 127, 131, 136, 137, 143, 146, 147, 152, 159, 170, 173, 180, 182, 184, 192, 197, 202, 204, 207, 208, 223, 228, 231, 232, 233, 238, 242, 246, 343, 345, 349, 452, 481, 482, 535, 536, 562, 592, 852, 861, 868, 871, 874, 886], "follow": [4, 24, 27, 32, 33, 34, 41, 42, 67, 69, 70, 80, 94, 103, 107, 109, 113, 116, 128, 135, 136, 138, 142, 145, 152, 156, 159, 161, 162, 163, 169, 171, 173, 179, 181, 189, 190, 191, 193, 197, 202, 203, 204, 205, 209, 211, 213, 214, 217, 218, 219, 223, 225, 228, 230, 232, 236, 238, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 289, 290, 299, 300, 304, 305, 356, 367, 372, 388, 405, 413, 437, 439, 440, 451, 452, 453, 457, 480, 481, 482, 483, 487, 489, 496, 525, 528, 545, 546, 562, 579, 583, 594, 595, 624, 634, 652, 687, 689, 691, 706, 708, 709, 710, 722, 732, 733, 736, 737, 741, 744, 750, 754, 767, 778, 786, 791, 814, 841, 843, 844, 847, 849, 850, 851, 861, 862, 864, 865, 868, 871, 872, 886], "onset": [4, 8, 33, 34, 117, 136, 137, 138, 141, 145, 147, 167, 169, 192, 202, 203, 205, 214, 219, 243, 259, 260, 266, 267, 356, 442, 454, 481, 482, 500, 565, 612, 711, 712, 713, 841, 886], "23": [4, 8, 11, 13, 19, 20, 28, 34, 35, 38, 45, 47, 64, 65, 74, 81, 82, 103, 106, 108, 109, 114, 123, 126, 138, 145, 146, 149, 152, 159, 163, 165, 170, 172, 177, 184, 185, 186, 192, 196, 197, 206, 210, 228, 229, 230, 232, 233, 238, 241, 246, 260, 264, 265, 266, 267, 268, 269, 271, 273, 274, 276, 277, 279, 280, 281, 282, 299, 348, 360, 371, 372, 382, 390, 391, 405, 406, 437, 472, 481, 482, 489, 522, 562, 573, 614, 624, 706, 708, 709, 710, 754, 783, 788, 798, 832, 862, 868], "correspond": [4, 16, 31, 48, 50, 61, 72, 76, 88, 92, 94, 103, 112, 120, 135, 138, 144, 145, 152, 156, 157, 159, 161, 169, 171, 173, 176, 181, 182, 183, 189, 192, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 217, 218, 219, 220, 230, 232, 233, 238, 243, 259, 261, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 291, 299, 300, 302, 306, 314, 324, 325, 326, 327, 337, 356, 360, 361, 364, 371, 372, 373, 382, 388, 405, 406, 413, 414, 416, 417, 419, 420, 423, 425, 429, 437, 442, 456, 457, 458, 466, 476, 478, 479, 481, 482, 489, 491, 493, 496, 501, 504, 506, 511, 515, 519, 521, 524, 526, 527, 538, 539, 540, 561, 562, 563, 577, 579, 583, 584, 589, 619, 620, 623, 634, 647, 651, 655, 658, 671, 686, 687, 690, 691, 692, 693, 694, 696, 697, 698, 706, 707, 708, 709, 710, 718, 719, 725, 744, 745, 747, 754, 757, 765, 767, 771, 772, 773, 778, 784, 785, 786, 788, 790, 792, 793, 794, 797, 806, 807, 809, 812, 814, 816, 817, 818, 841, 845, 851, 862, 865, 868, 871, 886], "unit": [4, 8, 14, 19, 21, 32, 83, 100, 103, 127, 136, 137, 142, 157, 161, 169, 170, 181, 190, 191, 193, 201, 206, 208, 211, 214, 217, 225, 230, 231, 233, 241, 242, 246, 261, 263, 264, 265, 266, 267, 268, 269, 271, 275, 277, 299, 300, 307, 315, 332, 337, 339, 341, 361, 367, 375, 413, 415, 420, 422, 424, 434, 449, 451, 452, 457, 480, 481, 482, 489, 491, 496, 497, 506, 562, 573, 579, 582, 583, 594, 618, 656, 698, 706, 708, 710, 745, 747, 754, 778, 785, 786, 788, 790, 793, 794, 806, 808, 814, 815, 822, 841, 845, 871, 886], "scale": [4, 5, 10, 16, 19, 22, 27, 28, 29, 30, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 57, 58, 59, 60, 65, 70, 74, 77, 85, 90, 94, 100, 101, 103, 104, 107, 108, 109, 110, 114, 115, 116, 119, 127, 133, 137, 138, 142, 143, 150, 152, 157, 158, 161, 167, 178, 179, 180, 181, 182, 183, 184, 191, 192, 193, 196, 197, 203, 205, 206, 208, 209, 214, 220, 224, 225, 236, 238, 242, 243, 246, 258, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 280, 281, 282, 299, 300, 314, 318, 327, 330, 340, 355, 356, 360, 361, 367, 371, 372, 373, 413, 420, 422, 434, 436, 447, 456, 457, 472, 475, 476, 478, 479, 481, 482, 487, 491, 535, 536, 540, 542, 545, 546, 553, 561, 562, 572, 573, 583, 594, 624, 643, 644, 645, 646, 658, 659, 670, 673, 706, 708, 709, 710, 718, 743, 744, 754, 767, 769, 771, 778, 782, 784, 785, 786, 788, 790, 792, 793, 794, 795, 797, 802, 806, 807, 808, 809, 813, 814, 815, 817, 819, 841, 859, 886], "keep": [4, 11, 12, 27, 31, 60, 88, 104, 110, 111, 112, 138, 143, 146, 150, 152, 161, 162, 163, 166, 167, 170, 182, 201, 202, 203, 204, 205, 206, 217, 218, 219, 223, 230, 258, 263, 266, 267, 268, 269, 293, 294, 297, 300, 373, 419, 437, 481, 482, 492, 531, 533, 536, 562, 595, 707, 718, 845, 853, 863, 867, 886], "avoid": [4, 8, 9, 28, 40, 59, 70, 88, 114, 138, 141, 152, 162, 167, 168, 170, 173, 184, 190, 192, 200, 203, 204, 208, 217, 219, 228, 241, 246, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 277, 280, 281, 282, 356, 430, 442, 481, 482, 489, 496, 504, 542, 562, 628, 634, 666, 669, 672, 688, 699, 700, 706, 709, 754, 812, 817, 843, 849, 863, 865, 867, 868, 886], "convers": [4, 157, 169, 190, 192, 193, 201, 203, 204, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 481, 482, 506, 603, 693, 694, 696, 697, 706, 709, 868, 871, 886], "micro": [4, 27, 77, 85, 266, 267, 268, 269, 271, 314, 318, 327, 481, 482, 487, 743, 754, 819, 886], "volt": [4, 142, 206, 208, 223, 266, 267, 268, 269, 446, 481, 482, 868, 886], "topomap_arg": [4, 70, 101, 197, 212, 229, 268, 269, 562, 706, 774, 791, 799, 886], "set_ylabel": [4, 12, 13, 21, 22, 45, 70, 96, 104, 112, 113, 115, 133, 145, 173, 184, 197, 203, 207, 231, 232, 233, 243], "systemat": [4, 142, 163, 203, 246, 416, 581, 865, 886], "larg": [4, 10, 28, 70, 75, 80, 83, 84, 114, 120, 137, 143, 151, 152, 168, 173, 179, 197, 200, 201, 203, 204, 205, 207, 208, 209, 212, 213, 220, 228, 233, 236, 243, 246, 266, 267, 272, 299, 356, 360, 361, 365, 422, 452, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522, 542, 562, 564, 693, 694, 696, 697, 754, 772, 819, 849, 863, 886], "consist": [4, 10, 43, 70, 76, 112, 123, 158, 159, 162, 169, 171, 176, 184, 190, 191, 192, 197, 201, 202, 203, 205, 206, 210, 228, 230, 231, 246, 258, 266, 267, 268, 269, 279, 283, 323, 370, 481, 482, 562, 570, 577, 581, 658, 659, 691, 706, 708, 709, 710, 711, 712, 713, 841, 861, 862, 867, 868, 874, 886], "guillaum": [4, 15, 88, 152, 158, 197, 203, 228, 246, 563, 699, 700, 862, 873, 886], "rousselet": [4, 152, 203, 246, 862], "2016": [4, 19, 46, 83, 113, 126, 196, 203, 246, 390, 391, 419, 478, 479, 562, 862], "7488": [4, 246], "1556": [4, 246], "carl": [4, 126, 246, 390, 862], "gaspar": [4, 246, 862], "cyril": [4, 246, 862], "r": [4, 8, 10, 12, 19, 21, 28, 37, 39, 41, 43, 49, 70, 81, 82, 96, 97, 99, 115, 127, 137, 138, 142, 146, 157, 161, 167, 177, 181, 182, 184, 185, 186, 196, 197, 201, 203, 205, 206, 208, 212, 213, 218, 224, 228, 232, 233, 238, 243, 246, 258, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 277, 278, 280, 281, 282, 302, 362, 382, 413, 419, 420, 448, 481, 482, 514, 529, 537, 561, 562, 571, 574, 576, 577, 579, 584, 666, 690, 693, 694, 699, 700, 706, 708, 709, 710, 735, 738, 754, 771, 772, 778, 782, 786, 793, 797, 802, 806, 809, 814, 816, 841, 843, 845, 862, 868, 871, 886], "pernet": [4, 246, 862], "jess": [4, 246, 862], "husk": [4, 246, 862], "patrick": [4, 246, 862, 868], "j": [4, 8, 12, 13, 18, 19, 21, 31, 35, 42, 44, 59, 65, 70, 71, 74, 75, 83, 94, 99, 101, 113, 121, 126, 138, 145, 152, 156, 161, 163, 173, 179, 181, 196, 197, 203, 205, 206, 207, 208, 213, 228, 229, 233, 241, 246, 258, 266, 267, 268, 269, 272, 276, 277, 278, 299, 302, 356, 362, 382, 391, 396, 406, 413, 417, 419, 420, 421, 431, 476, 479, 481, 482, 529, 530, 537, 540, 544, 561, 562, 570, 571, 576, 577, 592, 598, 601, 663, 666, 668, 692, 693, 694, 696, 697, 699, 700, 708, 710, 718, 720, 722, 724, 732, 735, 736, 738, 860, 862, 865, 868, 886], "bennett": [4, 246, 862], "allison": [4, 246, 862], "sekul": [4, 246, 862], "healthi": [4, 246, 405, 406, 862, 874], "ag": [4, 113, 138, 190, 246, 266, 267, 268, 269, 391, 406, 481, 482, 483, 671, 862, 876, 886], "scalp": [4, 19, 27, 70, 71, 75, 78, 122, 130, 135, 143, 145, 150, 152, 156, 157, 159, 167, 171, 184, 185, 186, 191, 200, 201, 206, 208, 209, 211, 212, 213, 220, 223, 241, 246, 258, 266, 267, 268, 269, 271, 310, 432, 472, 481, 482, 526, 562, 571, 598, 639, 651, 708, 710, 754, 770, 786, 808, 822, 841, 846, 849, 852, 861, 862, 865, 868, 871, 886], "sensit": [4, 5, 7, 23, 25, 27, 82, 122, 130, 152, 159, 179, 204, 208, 213, 232, 238, 246, 266, 267, 268, 269, 270, 271, 276, 277, 279, 366, 457, 481, 482, 559, 562, 626, 632, 647, 674, 693, 694, 696, 697, 754, 798, 862, 867, 886], "frontier": [4, 10, 19, 135, 152, 196, 203, 246, 419, 567, 860, 862], "psychologi": [4, 10, 152, 203, 246, 688, 862], "19": [4, 9, 11, 13, 19, 20, 28, 34, 35, 41, 42, 45, 47, 58, 64, 71, 73, 76, 81, 83, 90, 93, 94, 103, 108, 109, 112, 114, 127, 130, 141, 142, 147, 152, 158, 159, 167, 168, 169, 170, 172, 179, 180, 181, 182, 183, 184, 185, 186, 192, 196, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 225, 228, 229, 230, 232, 233, 236, 237, 238, 246, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 277, 279, 280, 281, 282, 306, 308, 311, 330, 432, 476, 481, 482, 521, 525, 555, 561, 562, 651, 701, 706, 709, 725, 770, 773, 778, 779, 782, 784, 801, 807, 818, 827, 843, 844, 862, 868], "14": [4, 5, 8, 9, 11, 12, 13, 16, 19, 20, 21, 22, 28, 32, 33, 34, 35, 43, 45, 46, 47, 48, 49, 54, 55, 58, 65, 80, 81, 83, 85, 93, 94, 103, 104, 107, 108, 109, 112, 114, 120, 121, 123, 130, 133, 146, 151, 153, 158, 159, 163, 169, 170, 172, 173, 176, 178, 179, 180, 181, 184, 186, 191, 192, 195, 196, 197, 203, 208, 210, 211, 216, 223, 225, 228, 229, 230, 232, 233, 236, 237, 238, 243, 246, 257, 264, 266, 267, 268, 269, 279, 308, 361, 382, 414, 415, 419, 424, 429, 448, 449, 451, 481, 482, 498, 510, 562, 579, 580, 598, 706, 724, 725, 733, 734, 754, 782, 784, 795, 802, 810, 862, 868], "2010": [4, 94, 117, 156, 203, 246, 299, 356, 413, 735, 738, 862, 886], "3389": [4, 10, 19, 135, 152, 196, 203, 246, 419, 567, 860, 862], "fpsyg": [4, 152, 203, 246, 862], "00019": [4, 246, 862], "parametr": [4, 69, 94, 113, 166, 167, 233, 234, 235, 246, 266, 268, 269, 271, 320, 355, 454, 481, 529, 559, 562, 621, 641, 685, 686, 693, 694, 696, 697, 699, 700, 709, 736, 778, 799, 841, 883, 886], "studi": [4, 33, 70, 121, 145, 152, 162, 179, 181, 203, 205, 211, 225, 230, 232, 233, 246, 292, 299, 405, 406, 437, 841, 861, 868, 886], "bmc": [4, 16, 197, 246, 414, 429], "98": [4, 15, 19, 33, 35, 42, 44, 47, 81, 112, 114, 117, 123, 138, 160, 170, 178, 181, 192, 193, 195, 196, 197, 210, 225, 228, 229, 230, 232, 233, 237, 238, 246, 292, 299, 344, 346, 594, 693, 694, 696, 697], "2008": [4, 10, 35, 44, 152, 171, 181, 206, 225, 228, 229, 246, 278, 299, 300, 340, 362, 413, 434, 452, 476, 544, 562, 666, 693, 694, 696, 697], "1186": [4, 16, 197, 210, 246, 414, 429], "1471": [4, 16, 197, 246, 414, 429], "2202": [4, 16, 197, 246, 414, 429], "861": [4, 6, 13, 130, 132, 233], "579": [4, 6, 67, 69, 233], "limo_data": [4, 6], "dataset": [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 191, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 242, 244, 245, 246, 258, 260, 263, 264, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 299, 300, 304, 314, 330, 347, 355, 356, 357, 358, 360, 361, 363, 365, 371, 372, 373, 413, 416, 420, 423, 430, 433, 442, 444, 445, 454, 456, 457, 470, 476, 478, 479, 481, 482, 491, 492, 494, 519, 520, 521, 525, 526, 528, 529, 532, 535, 536, 540, 545, 546, 559, 562, 575, 576, 580, 586, 594, 602, 623, 624, 625, 626, 632, 639, 654, 691, 693, 694, 696, 697, 706, 708, 709, 728, 739, 754, 770, 778, 782, 787, 794, 816, 822, 832, 845, 863, 868, 869, 874, 876, 886], "electr": [5, 167, 181, 200, 208, 209, 246, 299, 300, 562, 570, 774, 841, 846, 861, 871], "stimul": [5, 32, 45, 152, 181, 214, 238, 266, 267, 268, 269, 361, 481, 482, 559, 560, 565, 586, 656, 706, 708, 709, 710, 754, 770, 862, 868, 886], "deliv": 5, "left": [5, 10, 11, 13, 15, 23, 25, 27, 30, 31, 35, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 52, 54, 55, 57, 58, 59, 60, 61, 67, 71, 73, 78, 79, 80, 83, 86, 87, 94, 112, 116, 119, 120, 124, 127, 128, 132, 134, 135, 136, 141, 142, 143, 144, 145, 146, 150, 151, 152, 153, 156, 157, 159, 161, 167, 169, 173, 176, 179, 181, 182, 183, 192, 193, 196, 197, 205, 206, 207, 208, 209, 211, 218, 219, 220, 224, 225, 229, 232, 236, 237, 238, 241, 259, 260, 262, 263, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 279, 280, 281, 282, 314, 316, 326, 327, 337, 338, 362, 382, 388, 413, 420, 435, 437, 440, 447, 471, 479, 481, 482, 500, 505, 515, 527, 561, 562, 582, 641, 646, 654, 655, 658, 669, 706, 708, 709, 710, 754, 770, 778, 784, 785, 786, 788, 790, 792, 793, 794, 797, 805, 806, 807, 808, 809, 814, 818, 822, 841, 862, 868, 871, 886], "wrist": 5, "somatosensori": [5, 32, 34, 46, 113, 242, 246, 395, 886], "nine": [5, 143], "quspin": 5, "serf": 5, "place": [5, 7, 26, 67, 127, 135, 141, 150, 151, 152, 157, 162, 166, 167, 170, 174, 175, 179, 203, 205, 206, 207, 209, 211, 213, 217, 223, 236, 260, 263, 265, 266, 267, 268, 269, 270, 271, 275, 278, 283, 284, 289, 314, 319, 322, 342, 349, 365, 366, 383, 387, 388, 390, 413, 420, 435, 437, 438, 451, 452, 481, 482, 483, 492, 540, 549, 554, 558, 561, 562, 574, 575, 577, 580, 582, 585, 586, 590, 642, 648, 651, 656, 657, 658, 659, 671, 703, 706, 707, 708, 709, 710, 723, 740, 757, 771, 775, 786, 793, 797, 806, 809, 814, 816, 841, 845, 862, 866, 868, 869, 871, 872, 886], "side": [5, 19, 32, 45, 70, 142, 157, 167, 205, 209, 236, 243, 263, 264, 266, 267, 268, 269, 273, 275, 277, 281, 413, 420, 481, 482, 561, 562, 577, 583, 594, 691, 693, 694, 696, 697, 706, 707, 708, 710, 754, 771, 780, 782, 784, 786, 793, 797, 800, 806, 809, 812, 814, 816, 863, 868, 886], "somatomotor": 5, "custom": [5, 27, 36, 56, 67, 109, 120, 122, 126, 130, 135, 141, 143, 146, 150, 151, 152, 168, 193, 203, 204, 205, 206, 208, 209, 214, 223, 233, 243, 258, 263, 266, 267, 268, 269, 270, 271, 273, 274, 276, 277, 280, 281, 282, 323, 327, 329, 388, 481, 482, 559, 562, 615, 624, 626, 686, 710, 748, 754, 767, 772, 773, 784, 791, 801, 807, 812, 813, 817, 818, 841, 845, 861, 862, 863, 865, 886], "opm_sampl": [5, 109], "subjects_dir": [5, 7, 11, 22, 24, 26, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 68, 79, 81, 90, 94, 95, 104, 109, 115, 116, 118, 124, 125, 126, 127, 131, 134, 135, 136, 137, 151, 156, 157, 158, 159, 160, 161, 162, 167, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 191, 192, 197, 212, 224, 225, 236, 237, 238, 258, 264, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 305, 309, 310, 311, 314, 362, 367, 368, 369, 374, 387, 389, 390, 391, 392, 432, 463, 465, 467, 469, 471, 472, 473, 474, 475, 515, 519, 521, 548, 549, 590, 611, 629, 631, 638, 643, 644, 645, 646, 654, 655, 669, 672, 683, 701, 702, 746, 753, 754, 770, 772, 782, 812, 817, 818, 836, 851, 861, 868, 886], "raw_fnam": [5, 7, 8, 9, 11, 13, 14, 15, 16, 18, 26, 32, 33, 34, 42, 45, 46, 49, 69, 70, 72, 73, 74, 76, 82, 83, 88, 93, 96, 97, 99, 100, 107, 108, 110, 111, 113, 117, 119, 121, 132, 133, 142, 153, 157, 159, 160, 163, 178, 181, 184, 186, 197, 205, 225, 230, 231, 232, 233, 236, 238, 242, 862, 868], "opm_sef_raw": 5, "bem_fnam": [5, 45, 68, 109], "bem": [5, 7, 23, 26, 27, 40, 41, 43, 44, 45, 50, 68, 109, 125, 135, 136, 137, 151, 156, 157, 160, 161, 164, 165, 166, 177, 181, 182, 183, 184, 185, 186, 191, 192, 209, 236, 237, 238, 256, 264, 276, 279, 367, 389, 412, 432, 456, 463, 519, 520, 521, 524, 525, 590, 613, 614, 637, 643, 645, 646, 655, 671, 770, 772, 828, 829, 834, 839, 841, 851, 862, 871, 876, 886], "5120": [5, 7, 26, 41, 45, 50, 68, 109, 151, 159, 160, 177, 182, 183, 258, 412, 519, 525, 671, 861], "sol": [5, 7, 22, 26, 41, 45, 50, 68, 109, 159, 160, 177, 182, 183, 258, 270, 525, 671, 861, 871], "fwd_fname": [5, 22, 31, 35, 40, 46, 51, 59, 68, 90, 92, 93, 94, 95, 181, 192, 225], "fwd": [5, 11, 22, 26, 31, 32, 33, 34, 35, 40, 42, 43, 45, 46, 47, 48, 49, 51, 54, 55, 58, 59, 68, 90, 92, 93, 94, 95, 109, 131, 159, 160, 173, 176, 177, 178, 179, 180, 181, 183, 192, 197, 224, 225, 258, 270, 277, 286, 287, 288, 366, 447, 459, 460, 524, 525, 626, 647, 670, 671, 754, 770, 833, 861, 868], "coil_def_fnam": 5, "coil_def": [5, 109, 862, 868, 871], "dat": [5, 109, 211, 334, 495, 511, 573, 583, 594, 605, 610, 862, 868, 886], "read_raw_fif": [5, 10, 11, 13, 14, 15, 16, 18, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 68, 69, 71, 72, 73, 74, 76, 80, 83, 84, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 113, 115, 117, 118, 121, 123, 127, 129, 132, 133, 141, 142, 143, 146, 147, 150, 152, 153, 157, 163, 167, 168, 169, 170, 171, 178, 181, 183, 184, 189, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 224, 230, 231, 232, 233, 236, 238, 241, 242, 260, 487, 868, 872, 876, 886], "h_trans_bandwidth": [5, 21, 113, 114, 192, 203, 212, 266, 267, 268, 269, 415, 424, 449, 451, 481, 482, 598, 886], "notch_width": [5, 213, 452, 481, 482], "threshold": [5, 30, 34, 38, 74, 82, 96, 112, 120, 146, 152, 166, 167, 173, 183, 185, 189, 192, 201, 202, 206, 208, 211, 230, 231, 232, 233, 234, 235, 236, 237, 238, 246, 258, 261, 266, 267, 268, 269, 271, 310, 320, 326, 355, 360, 452, 481, 482, 500, 506, 544, 562, 564, 567, 574, 577, 579, 580, 583, 584, 585, 587, 589, 599, 617, 662, 663, 664, 665, 666, 667, 668, 689, 690, 693, 694, 696, 697, 698, 709, 754, 778, 783, 784, 800, 861, 868, 874, 886], "larger": [5, 49, 59, 70, 151, 180, 197, 200, 203, 205, 211, 220, 230, 243, 266, 267, 276, 281, 282, 457, 481, 482, 500, 564, 585, 603, 701, 734, 735, 737, 738, 784, 807, 815, 818, 867, 868, 886], "squid": [5, 109, 213, 246, 841, 862, 868], "2e": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 70, 74, 90, 93, 94, 109, 119, 121, 153, 163, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 197, 224, 225, 574, 575], "trigger": [5, 10, 93, 103, 109, 145, 167, 169, 172, 178, 183, 186, 189, 190, 191, 192, 202, 207, 212, 228, 258, 259, 356, 361, 454, 455, 481, 482, 489, 496, 498, 504, 506, 580, 585, 621, 671, 841, 845, 861, 868, 871, 886], "257": [5, 112, 115, 170, 171, 196, 210, 228, 233, 862], "sti101": [5, 169, 259, 454, 455], "mask": [5, 28, 31, 82, 96, 100, 101, 112, 120, 143, 186, 203, 207, 224, 228, 229, 230, 231, 232, 233, 259, 263, 266, 267, 268, 269, 275, 413, 419, 420, 454, 481, 482, 489, 561, 562, 577, 621, 693, 694, 696, 697, 706, 708, 710, 771, 786, 790, 793, 797, 806, 809, 814, 816, 865, 886], "mask_typ": [5, 186, 259, 454, 489, 621, 886], "verbos": [5, 10, 11, 13, 14, 15, 34, 38, 40, 41, 42, 44, 49, 51, 58, 70, 75, 78, 80, 84, 88, 93, 94, 99, 104, 108, 109, 121, 123, 124, 126, 134, 135, 136, 137, 141, 143, 146, 147, 150, 151, 153, 158, 159, 160, 163, 171, 172, 173, 178, 180, 181, 182, 183, 184, 185, 191, 197, 201, 202, 203, 206, 209, 210, 211, 212, 213, 218, 219, 223, 228, 229, 230, 236, 241, 243, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 418, 419, 423, 424, 426, 429, 430, 432, 434, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 464, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 555, 558, 562, 564, 565, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 585, 587, 588, 589, 590, 591, 592, 594, 595, 597, 598, 601, 602, 603, 606, 607, 608, 609, 613, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 626, 628, 629, 630, 631, 632, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 651, 653, 654, 655, 657, 658, 659, 660, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 693, 694, 695, 696, 697, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 724, 725, 728, 729, 733, 734, 736, 737, 738, 739, 742, 743, 744, 749, 750, 753, 754, 762, 770, 779, 782, 786, 787, 788, 789, 794, 797, 798, 799, 804, 805, 807, 808, 810, 811, 812, 813, 817, 818, 819, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 843, 845, 876, 886], "error": [5, 10, 13, 38, 42, 54, 55, 79, 90, 93, 109, 114, 134, 136, 137, 141, 145, 150, 153, 158, 163, 172, 173, 182, 184, 186, 189, 196, 197, 202, 203, 206, 209, 213, 228, 229, 232, 246, 261, 266, 267, 268, 269, 271, 272, 273, 274, 277, 280, 281, 282, 286, 287, 318, 341, 350, 351, 356, 360, 363, 365, 367, 371, 372, 405, 432, 447, 448, 460, 461, 463, 481, 482, 497, 502, 544, 553, 562, 573, 583, 593, 594, 612, 614, 618, 643, 645, 653, 663, 666, 668, 684, 690, 691, 695, 706, 708, 709, 710, 751, 752, 754, 785, 787, 798, 832, 834, 844, 845, 850, 851, 856, 861, 862, 865, 868, 871, 886], "suppress": [5, 13, 27, 38, 49, 77, 84, 85, 137, 146, 151, 152, 172, 181, 185, 189, 200, 201, 203, 204, 205, 208, 213, 246, 258, 263, 266, 267, 268, 269, 270, 271, 272, 277, 343, 345, 349, 366, 448, 449, 451, 452, 481, 482, 559, 560, 578, 615, 626, 629, 652, 670, 672, 791, 841, 862, 868, 886], "warn": [5, 10, 13, 38, 134, 136, 137, 141, 152, 163, 172, 173, 182, 185, 192, 204, 206, 207, 218, 219, 230, 241, 258, 260, 261, 266, 267, 268, 269, 271, 273, 274, 276, 277, 280, 281, 282, 286, 287, 318, 341, 344, 350, 351, 356, 360, 362, 363, 365, 367, 371, 372, 405, 432, 440, 447, 460, 463, 481, 482, 502, 562, 573, 583, 594, 595, 614, 624, 643, 645, 648, 652, 653, 706, 708, 709, 710, 750, 752, 754, 787, 798, 832, 834, 851, 853, 876, 886], "about": [5, 13, 19, 27, 34, 43, 44, 70, 74, 94, 101, 114, 141, 142, 144, 145, 147, 150, 152, 156, 161, 163, 167, 169, 170, 173, 176, 179, 185, 189, 190, 191, 192, 193, 196, 197, 201, 203, 204, 206, 207, 211, 212, 214, 217, 218, 219, 224, 225, 228, 230, 258, 259, 261, 263, 265, 266, 267, 268, 269, 271, 275, 276, 277, 279, 284, 286, 287, 299, 300, 301, 307, 308, 312, 313, 320, 321, 322, 326, 328, 329, 342, 344, 346, 351, 360, 369, 371, 372, 373, 375, 413, 415, 420, 421, 422, 432, 437, 454, 457, 464, 473, 480, 481, 482, 483, 486, 513, 518, 525, 526, 530, 540, 558, 559, 562, 573, 576, 590, 599, 600, 621, 641, 642, 670, 671, 674, 692, 706, 707, 708, 709, 710, 733, 734, 736, 737, 743, 754, 767, 770, 774, 779, 780, 789, 796, 806, 810, 841, 845, 849, 861, 862, 864, 865, 867, 869, 871, 874, 886], "decim": [5, 7, 11, 12, 13, 18, 19, 24, 33, 34, 41, 42, 103, 109, 112, 159, 162, 163, 167, 173, 182, 184, 197, 204, 206, 211, 229, 230, 231, 232, 233, 242, 258, 261, 264, 265, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 310, 412, 426, 434, 454, 481, 482, 506, 522, 545, 546, 562, 579, 580, 617, 620, 675, 692, 706, 709, 712, 715, 731, 733, 734, 735, 736, 737, 738, 754, 772, 784, 807, 861, 868, 871, 886], "caus": [5, 13, 44, 70, 143, 152, 162, 200, 201, 202, 203, 204, 207, 211, 213, 219, 263, 266, 267, 268, 269, 276, 472, 481, 482, 510, 562, 751, 788, 793, 846, 861, 886], "alias": [5, 13, 163, 182, 204, 261, 264, 265, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 426, 481, 482, 579, 580, 706, 709, 731, 733, 734, 736, 737, 784, 807, 820, 865, 886], "ideal": [5, 70, 108, 133, 136, 145, 152, 171, 203, 205, 208, 209, 229, 243, 314, 795, 802, 841, 845, 865, 868], "instead": [5, 43, 67, 74, 104, 114, 120, 135, 137, 143, 144, 147, 150, 151, 152, 157, 159, 161, 162, 167, 169, 170, 171, 172, 173, 197, 201, 202, 203, 204, 206, 207, 211, 213, 217, 218, 220, 225, 228, 236, 237, 238, 241, 242, 258, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 280, 281, 282, 291, 292, 293, 294, 297, 299, 309, 311, 314, 326, 340, 355, 356, 361, 442, 443, 444, 445, 446, 447, 454, 461, 464, 469, 473, 480, 481, 482, 531, 533, 536, 562, 563, 564, 601, 640, 651, 655, 670, 706, 709, 722, 732, 733, 734, 735, 736, 737, 738, 754, 756, 778, 784, 788, 794, 801, 807, 816, 824, 843, 844, 845, 849, 850, 853, 861, 862, 863, 868, 886], "proj": [5, 8, 9, 11, 13, 14, 15, 18, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 71, 78, 86, 87, 88, 92, 109, 111, 116, 117, 119, 120, 121, 124, 127, 131, 141, 143, 146, 150, 151, 152, 163, 167, 170, 173, 177, 178, 179, 180, 181, 182, 183, 184, 192, 197, 200, 204, 207, 208, 209, 212, 213, 217, 220, 223, 258, 261, 263, 266, 267, 268, 269, 271, 275, 276, 299, 300, 343, 344, 356, 357, 358, 359, 360, 373, 480, 481, 482, 522, 561, 562, 574, 575, 576, 579, 609, 617, 624, 632, 647, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 779, 786, 788, 790, 792, 793, 805, 806, 807, 808, 837, 841, 861, 886], "cov": [5, 11, 21, 31, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 64, 68, 84, 90, 92, 93, 94, 95, 121, 153, 173, 177, 179, 180, 182, 183, 184, 185, 186, 192, 196, 197, 224, 225, 258, 263, 276, 277, 356, 361, 456, 518, 530, 552, 562, 615, 633, 660, 670, 752, 779, 830, 845, 861, 862, 865, 876, 886], "compute_covari": [5, 7, 34, 42, 46, 49, 84, 93, 121, 153, 163, 178, 181, 183, 184, 186, 197, 224, 263, 361, 373, 413, 420, 421, 563, 615, 752, 861, 865, 876, 886], "del": [5, 18, 33, 41, 42, 46, 47, 48, 49, 50, 54, 55, 109, 113, 135, 137, 141, 143, 146, 150, 167, 173, 178, 180, 181, 182, 184, 185, 192, 197, 203, 206], "open": [5, 11, 13, 14, 15, 16, 18, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 68, 69, 70, 71, 72, 73, 74, 76, 79, 80, 83, 84, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 109, 110, 111, 113, 115, 117, 118, 121, 123, 127, 129, 132, 133, 135, 136, 142, 143, 145, 147, 151, 152, 153, 156, 157, 162, 163, 166, 167, 168, 169, 170, 173, 178, 181, 183, 184, 197, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 217, 220, 224, 225, 230, 231, 232, 233, 236, 238, 242, 243, 246, 265, 266, 267, 268, 269, 276, 279, 382, 481, 482, 562, 570, 671, 792, 797, 807, 815, 841, 842, 844, 849, 851, 852, 862, 864, 865, 867, 871, 886], "isotrak": [5, 42, 101, 109, 123, 129, 144, 163, 173, 208, 210, 229, 258, 339, 868], "700999": 5, "700": [5, 81, 115, 128, 135, 197, 210, 233, 722, 732, 754], "999": [5, 34, 76, 80, 84, 92, 96, 109, 111, 123, 129, 131, 143, 145, 160, 169, 173, 184, 206, 207, 209, 210, 211, 233, 574, 579, 584, 587], "lowpass": [5, 11, 71, 73, 76, 81, 82, 83, 84, 90, 93, 127, 142, 147, 152, 167, 168, 169, 170, 192, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 258, 264, 265, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 448, 481, 482, 706, 708, 709, 710, 784, 807, 808, 871, 886], "331": [5, 31, 34, 56, 84, 106, 114, 170, 181, 188, 196, 203, 211, 233], "48": [5, 11, 12, 13, 19, 21, 28, 35, 45, 46, 47, 81, 94, 103, 108, 109, 112, 114, 138, 146, 152, 158, 169, 170, 172, 196, 197, 210, 219, 228, 229, 230, 232, 233, 235, 237, 238, 246, 886], "6601": 5, "initi": [5, 16, 19, 21, 41, 43, 44, 70, 93, 96, 109, 112, 145, 150, 152, 157, 169, 181, 186, 192, 206, 213, 217, 223, 228, 229, 230, 231, 232, 233, 236, 237, 238, 243, 257, 258, 264, 266, 267, 272, 273, 274, 276, 277, 278, 280, 281, 282, 375, 377, 476, 481, 482, 488, 509, 515, 562, 592, 601, 603, 611, 658, 659, 660, 669, 670, 672, 685, 693, 694, 695, 696, 697, 709, 744, 754, 782, 784, 798, 801, 807, 812, 817, 818, 845, 850, 852, 867, 868, 871, 886], "256": [5, 12, 21, 70, 109, 115, 124, 135, 157, 161, 170, 171, 172, 173, 184, 225, 232, 233, 279, 445, 725, 769, 843, 868], "initial_ev": [5, 90, 93, 109, 186, 225, 454, 886], "detect": [5, 8, 9, 12, 22, 27, 68, 70, 72, 74, 77, 82, 83, 93, 109, 112, 127, 138, 147, 152, 158, 160, 163, 166, 169, 173, 186, 191, 192, 193, 197, 201, 203, 204, 205, 206, 207, 208, 211, 214, 215, 216, 218, 243, 246, 258, 259, 266, 267, 268, 269, 271, 276, 320, 343, 345, 349, 452, 481, 482, 487, 510, 559, 562, 564, 566, 567, 568, 570, 574, 575, 578, 579, 580, 583, 584, 585, 587, 594, 692, 706, 735, 738, 754, 784, 800, 801, 807, 852, 865, 868, 875, 886], "201": [5, 45, 127, 137, 170, 177, 182, 184, 210, 233, 238, 871], "rank": [5, 7, 8, 9, 12, 15, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 84, 88, 90, 93, 94, 104, 107, 108, 109, 110, 113, 121, 153, 163, 167, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 197, 201, 205, 206, 207, 224, 225, 236, 238, 263, 268, 269, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 421, 456, 457, 476, 478, 479, 534, 540, 562, 779, 794, 841, 865, 886], "toler": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 90, 93, 94, 109, 121, 153, 163, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 197, 203, 206, 207, 224, 225, 360, 476, 478, 479, 562, 603, 868, 886], "1e": [5, 8, 9, 32, 33, 34, 40, 45, 46, 49, 59, 65, 70, 71, 74, 82, 93, 94, 114, 120, 121, 138, 159, 163, 180, 181, 184, 186, 197, 202, 203, 224, 225, 228, 266, 267, 276, 476, 481, 482, 529, 561, 571, 592, 672, 699, 706, 784, 807, 809, 814, 841, 886], "16": [5, 8, 9, 11, 12, 13, 19, 20, 21, 22, 28, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 71, 79, 80, 81, 85, 90, 93, 94, 96, 100, 103, 108, 109, 112, 114, 121, 123, 145, 153, 157, 161, 163, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 196, 197, 200, 203, 204, 206, 208, 209, 210, 211, 212, 214, 216, 217, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 236, 237, 238, 240, 243, 246, 259, 261, 265, 266, 267, 268, 269, 276, 279, 356, 413, 420, 454, 472, 481, 482, 489, 529, 531, 532, 535, 536, 542, 545, 562, 570, 579, 602, 686, 706, 708, 709, 710, 770, 784, 788, 790, 792, 793, 794, 796, 807, 868, 871], "ep": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 90, 93, 94, 109, 121, 153, 163, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 197, 224, 225, 529], "dim": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 90, 93, 94, 109, 121, 153, 161, 163, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 197, 223, 224, 225, 241, 263, 535, 536, 545, 546, 563, 709, 871], "singular": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 90, 93, 94, 109, 121, 153, 163, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 197, 207, 224, 225, 263, 273, 274, 277, 280, 281, 282, 360, 447, 537, 779, 868, 871], "reduc": [5, 8, 9, 12, 15, 16, 21, 27, 34, 40, 42, 46, 49, 55, 59, 71, 77, 84, 85, 88, 104, 107, 108, 109, 110, 114, 120, 121, 147, 150, 152, 158, 159, 163, 168, 173, 178, 181, 183, 184, 186, 192, 196, 197, 204, 205, 206, 207, 208, 209, 211, 213, 217, 224, 230, 231, 233, 236, 237, 238, 242, 246, 263, 266, 267, 268, 269, 270, 273, 274, 277, 280, 281, 282, 299, 300, 356, 360, 361, 371, 372, 373, 390, 413, 414, 420, 426, 429, 430, 436, 448, 454, 456, 457, 476, 478, 479, 481, 482, 532, 535, 536, 540, 545, 546, 561, 562, 592, 602, 649, 693, 694, 696, 697, 712, 715, 731, 733, 734, 735, 736, 737, 738, 788, 793, 794, 841, 845, 865, 868, 871, 886], "covari": [5, 8, 9, 11, 12, 15, 19, 21, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 66, 68, 81, 88, 90, 92, 93, 94, 103, 104, 107, 108, 109, 110, 113, 122, 124, 130, 150, 153, 164, 165, 166, 167, 177, 179, 180, 182, 183, 184, 185, 186, 192, 197, 201, 202, 206, 225, 236, 238, 246, 258, 266, 267, 268, 269, 270, 271, 276, 277, 296, 299, 300, 302, 319, 355, 356, 357, 359, 360, 361, 371, 372, 373, 413, 419, 420, 421, 438, 454, 456, 457, 476, 478, 479, 481, 482, 486, 518, 528, 529, 530, 531, 532, 533, 535, 536, 540, 542, 545, 546, 554, 562, 563, 615, 621, 626, 660, 670, 692, 707, 717, 754, 779, 784, 788, 792, 794, 807, 830, 841, 862, 871, 876, 886], "empir": [5, 8, 9, 15, 27, 31, 36, 46, 49, 56, 88, 93, 121, 163, 178, 181, 183, 184, 186, 197, 211, 224, 246, 263, 268, 269, 270, 271, 277, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 421, 456, 457, 476, 477, 478, 479, 540, 563, 615, 624, 626, 781, 782, 794, 813, 886], "10251": 5, "examin": [5, 34, 47, 74, 129, 137, 143, 146, 147, 152, 161, 167, 178, 179, 206, 217, 219, 845, 865], "align": [5, 7, 9, 28, 79, 80, 136, 152, 156, 158, 159, 164, 165, 166, 169, 173, 183, 184, 185, 191, 217, 228, 260, 264, 266, 267, 271, 273, 274, 277, 278, 279, 280, 281, 282, 304, 310, 314, 367, 369, 392, 432, 447, 472, 473, 481, 526, 562, 591, 636, 637, 639, 655, 742, 743, 744, 754, 770, 782, 784, 822, 841, 868, 886], "forward": [5, 7, 12, 22, 26, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 68, 72, 80, 90, 92, 93, 94, 95, 131, 136, 147, 156, 157, 161, 162, 165, 167, 171, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 189, 192, 197, 200, 201, 202, 203, 205, 206, 208, 209, 224, 225, 246, 258, 266, 267, 268, 269, 271, 274, 276, 277, 279, 280, 282, 286, 287, 288, 299, 300, 301, 302, 304, 314, 318, 319, 330, 336, 366, 375, 391, 413, 420, 424, 438, 440, 441, 448, 449, 451, 452, 476, 477, 478, 479, 481, 482, 486, 496, 519, 520, 524, 525, 526, 538, 539, 540, 541, 544, 555, 560, 613, 626, 636, 647, 651, 654, 655, 657, 658, 659, 670, 671, 706, 748, 754, 770, 772, 791, 795, 820, 822, 833, 841, 846, 857, 862, 867, 871, 874, 876, 886], "mri": [5, 24, 26, 30, 35, 40, 41, 43, 44, 45, 50, 59, 79, 93, 94, 109, 115, 124, 125, 135, 136, 137, 151, 158, 159, 162, 164, 165, 166, 167, 171, 177, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 209, 217, 225, 246, 263, 264, 266, 268, 269, 270, 271, 276, 277, 278, 279, 281, 282, 304, 305, 306, 309, 310, 311, 314, 318, 327, 330, 332, 336, 356, 362, 367, 368, 369, 374, 375, 389, 391, 392, 432, 447, 454, 456, 464, 465, 466, 472, 473, 474, 475, 481, 482, 496, 512, 514, 521, 524, 525, 528, 529, 540, 590, 613, 636, 638, 643, 644, 645, 646, 650, 654, 655, 674, 701, 740, 741, 743, 744, 746, 754, 765, 770, 772, 782, 818, 822, 834, 841, 846, 849, 852, 861, 865, 871, 874, 876, 886], "ident": [5, 45, 70, 79, 99, 109, 125, 136, 151, 157, 159, 161, 167, 184, 185, 186, 196, 206, 209, 211, 213, 264, 271, 278, 279, 306, 375, 392, 437, 514, 521, 524, 525, 535, 537, 583, 592, 594, 616, 671, 701, 741, 770, 841, 861, 862, 863, 868, 871, 886], "matrix": [5, 9, 10, 11, 15, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 66, 68, 78, 79, 81, 87, 90, 92, 93, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 119, 121, 124, 131, 134, 135, 138, 142, 151, 152, 153, 157, 158, 159, 160, 161, 164, 165, 166, 167, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 192, 196, 197, 201, 206, 207, 208, 224, 225, 229, 230, 231, 232, 233, 237, 238, 246, 258, 263, 264, 266, 268, 269, 271, 276, 278, 279, 296, 299, 300, 301, 306, 314, 317, 318, 320, 331, 356, 361, 362, 371, 372, 373, 419, 434, 454, 457, 481, 482, 486, 521, 525, 529, 535, 536, 537, 538, 539, 540, 541, 544, 545, 546, 554, 559, 562, 563, 569, 570, 592, 595, 615, 619, 621, 655, 660, 671, 676, 677, 678, 679, 680, 681, 682, 686, 691, 692, 693, 694, 696, 697, 701, 707, 714, 715, 716, 723, 741, 770, 774, 775, 779, 780, 797, 798, 801, 830, 841, 862, 886], "co": [5, 22, 68, 158, 203, 211, 223, 246, 343, 439, 841, 862, 868], "registr": [5, 43, 44, 79, 134, 135, 158, 181, 246, 278, 362, 591, 742, 743, 744, 851, 862, 868, 886], "equat": [5, 136, 157, 196, 197, 207, 246, 434, 573, 735, 738, 868, 874], "mi": [5, 862], "defin": [5, 8, 9, 10, 12, 18, 19, 21, 27, 31, 33, 43, 44, 60, 61, 76, 77, 85, 94, 95, 104, 107, 111, 114, 120, 128, 135, 137, 141, 142, 143, 145, 152, 156, 159, 161, 163, 164, 166, 168, 169, 171, 173, 176, 179, 181, 183, 191, 192, 196, 197, 203, 207, 212, 225, 231, 232, 233, 236, 238, 242, 243, 246, 258, 259, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 286, 287, 292, 299, 300, 314, 319, 322, 336, 337, 356, 362, 366, 388, 394, 413, 419, 420, 438, 439, 442, 448, 468, 471, 481, 482, 487, 493, 514, 515, 516, 524, 529, 530, 531, 532, 533, 536, 540, 545, 546, 548, 559, 561, 562, 563, 565, 566, 576, 577, 582, 592, 611, 616, 621, 655, 658, 659, 660, 663, 666, 668, 669, 670, 671, 672, 679, 682, 693, 694, 695, 696, 697, 701, 702, 706, 707, 708, 709, 710, 712, 714, 715, 716, 717, 720, 722, 732, 733, 734, 736, 737, 754, 759, 771, 775, 778, 785, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 817, 841, 845, 851, 861, 862, 867, 868, 871, 886], "base": [5, 7, 9, 11, 16, 21, 22, 27, 28, 32, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 54, 55, 58, 59, 61, 68, 70, 77, 83, 85, 90, 92, 94, 96, 99, 100, 103, 107, 109, 110, 112, 113, 114, 117, 119, 121, 132, 135, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 161, 162, 163, 166, 167, 170, 171, 173, 177, 178, 179, 180, 181, 182, 183, 190, 192, 197, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 217, 218, 219, 220, 224, 225, 226, 228, 229, 230, 231, 232, 233, 236, 238, 241, 242, 243, 246, 255, 260, 261, 263, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 314, 316, 320, 321, 326, 331, 334, 343, 344, 345, 346, 349, 355, 356, 357, 358, 361, 362, 366, 377, 406, 413, 415, 416, 419, 420, 421, 423, 424, 426, 427, 430, 434, 436, 439, 442, 444, 446, 448, 449, 451, 452, 454, 457, 464, 470, 472, 480, 481, 482, 487, 498, 515, 521, 522, 525, 527, 530, 544, 559, 561, 562, 564, 565, 569, 570, 571, 572, 573, 576, 577, 579, 580, 583, 584, 594, 607, 608, 609, 621, 626, 628, 645, 654, 658, 659, 666, 679, 682, 691, 692, 693, 694, 695, 696, 697, 701, 702, 706, 708, 709, 710, 712, 715, 718, 725, 733, 734, 736, 737, 739, 750, 754, 763, 765, 771, 773, 778, 783, 784, 786, 792, 793, 794, 795, 797, 799, 800, 801, 806, 807, 809, 811, 812, 814, 816, 817, 818, 833, 841, 843, 844, 845, 846, 848, 849, 854, 857, 861, 862, 865, 871, 874, 877, 881, 886], "lpa": [5, 79, 135, 137, 157, 161, 308, 314, 327, 338, 347, 367, 369, 432, 488, 841, 862, 886], "nasion": [5, 79, 157, 158, 161, 171, 308, 314, 327, 337, 338, 347, 367, 369, 432, 659, 841, 862, 868, 871, 886], "rpa": [5, 79, 135, 137, 157, 161, 308, 314, 327, 338, 347, 367, 369, 432, 488, 841, 862, 886], "fine": [5, 182, 189, 211, 243, 271, 434, 572, 573, 583, 594, 605, 610, 886], "analys": [5, 11, 27, 31, 41, 69, 98, 102, 116, 136, 144, 147, 151, 152, 159, 161, 193, 197, 201, 207, 208, 217, 229, 243, 246, 268, 269, 481, 482, 617, 690, 691, 778, 790, 852, 862, 868, 874, 886], "read_bem_solut": [5, 45, 109, 160, 520, 828, 876], "tran": [5, 7, 26, 41, 50, 51, 52, 68, 79, 81, 109, 115, 116, 118, 124, 125, 135, 136, 137, 151, 158, 159, 160, 161, 173, 177, 179, 182, 183, 184, 191, 192, 209, 212, 258, 264, 276, 279, 302, 306, 314, 367, 368, 389, 392, 432, 434, 456, 464, 472, 473, 521, 524, 525, 569, 590, 594, 639, 671, 674, 701, 740, 741, 743, 754, 770, 782, 840, 841, 861, 862, 868, 886], "solut": [5, 7, 11, 22, 23, 26, 27, 31, 32, 33, 34, 36, 38, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 68, 70, 71, 90, 92, 93, 94, 95, 105, 106, 107, 108, 109, 110, 124, 131, 157, 158, 160, 163, 166, 167, 171, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 192, 197, 201, 208, 224, 225, 236, 238, 246, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 286, 287, 288, 299, 300, 301, 311, 362, 366, 373, 447, 457, 458, 476, 477, 478, 479, 481, 482, 516, 520, 524, 525, 526, 528, 529, 530, 531, 532, 533, 536, 537, 540, 543, 544, 554, 555, 559, 560, 562, 606, 613, 615, 621, 624, 626, 628, 629, 636, 651, 654, 655, 657, 658, 659, 670, 671, 754, 770, 781, 782, 797, 799, 801, 812, 813, 817, 828, 833, 841, 843, 845, 846, 852, 857, 871, 876, 886], "must": [5, 18, 32, 43, 44, 47, 60, 83, 127, 128, 136, 145, 147, 157, 168, 170, 172, 173, 182, 185, 189, 191, 200, 201, 206, 208, 211, 219, 223, 228, 230, 232, 233, 236, 238, 243, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 285, 288, 293, 299, 300, 314, 316, 317, 320, 323, 327, 331, 343, 345, 349, 356, 360, 361, 362, 367, 371, 372, 373, 388, 394, 397, 412, 413, 419, 420, 421, 425, 428, 429, 430, 432, 437, 442, 445, 447, 454, 456, 457, 473, 476, 478, 479, 480, 481, 482, 489, 496, 500, 502, 504, 506, 514, 517, 522, 523, 524, 538, 539, 540, 561, 562, 564, 573, 575, 577, 578, 579, 583, 590, 594, 617, 620, 648, 651, 655, 656, 667, 671, 672, 674, 676, 677, 680, 688, 691, 692, 693, 694, 696, 697, 701, 706, 708, 709, 710, 721, 725, 729, 736, 754, 757, 759, 770, 771, 773, 777, 778, 782, 784, 785, 786, 788, 790, 792, 793, 794, 795, 797, 801, 802, 804, 806, 807, 808, 809, 810, 812, 815, 816, 817, 818, 849, 861, 862, 865, 867, 868, 871], "temporari": [5, 152, 173, 258, 271, 649, 762], "definit": [5, 26, 41, 45, 50, 109, 135, 159, 160, 161, 162, 163, 177, 182, 183, 184, 185, 186, 203, 209, 230, 246, 258, 271, 276, 299, 300, 322, 324, 331, 456, 481, 576, 594, 640, 748, 754, 841, 861, 867, 869, 886], "use_coil_def": [5, 109, 876], "make_forward_solut": [5, 7, 26, 41, 50, 109, 159, 160, 183, 192, 209, 270, 626, 748, 861, 868, 876, 886], "src": [5, 7, 22, 24, 26, 28, 30, 31, 35, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 54, 55, 59, 60, 68, 90, 92, 93, 94, 95, 109, 136, 137, 157, 159, 160, 161, 179, 181, 182, 183, 192, 209, 224, 236, 237, 238, 258, 270, 272, 273, 274, 277, 279, 280, 281, 282, 284, 300, 362, 447, 467, 477, 516, 517, 525, 538, 539, 542, 544, 549, 636, 646, 654, 655, 656, 663, 666, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 701, 702, 754, 770, 772, 812, 813, 817, 818, 838, 861, 871, 886], "mindist": [5, 24, 41, 45, 50, 157, 159, 160, 177, 182, 184, 185, 186, 209, 525, 655, 671], "read_forward_solut": [5, 22, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 51, 54, 55, 58, 59, 68, 90, 92, 93, 94, 95, 131, 159, 178, 179, 180, 181, 192, 197, 224, 225, 270, 833, 876, 886], "orient": [5, 11, 22, 26, 28, 29, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 68, 80, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 116, 124, 131, 135, 157, 159, 160, 161, 166, 167, 173, 176, 177, 178, 181, 182, 183, 184, 187, 188, 189, 192, 197, 209, 211, 224, 225, 228, 236, 238, 246, 263, 264, 265, 268, 270, 271, 273, 274, 277, 280, 281, 282, 286, 287, 299, 300, 301, 366, 433, 447, 456, 457, 458, 472, 476, 478, 479, 501, 524, 525, 528, 529, 530, 531, 532, 533, 535, 536, 538, 539, 540, 541, 544, 545, 546, 605, 615, 616, 619, 623, 624, 626, 639, 654, 658, 670, 671, 754, 763, 770, 772, 773, 782, 822, 833, 861, 870, 871, 874, 886], "later": [5, 11, 19, 32, 38, 43, 47, 69, 101, 109, 127, 135, 137, 141, 142, 143, 145, 150, 152, 163, 173, 176, 178, 181, 182, 190, 192, 200, 201, 202, 203, 206, 207, 208, 209, 213, 217, 218, 219, 220, 223, 236, 237, 243, 246, 261, 266, 267, 268, 269, 274, 276, 278, 280, 283, 362, 455, 481, 482, 562, 618, 620, 706, 708, 709, 710, 754, 817, 845, 850, 851, 862, 863, 868, 871, 886], "convert_forward_solut": [5, 22, 47, 48, 49, 54, 55, 68, 159, 179, 224, 525, 626, 833, 868, 876, 886], "force_fix": [5, 47, 48, 49, 54, 55, 68, 159, 224, 366, 540, 886], "plot_align": [5, 24, 52, 81, 109, 115, 118, 123, 124, 125, 136, 137, 157, 158, 159, 160, 171, 179, 183, 184, 185, 186, 266, 267, 268, 269, 311, 481, 482, 772, 810, 819, 824, 861, 865, 868, 876, 886], "surfac": [5, 11, 22, 24, 26, 27, 31, 34, 35, 36, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 58, 59, 60, 68, 71, 79, 81, 90, 92, 94, 109, 115, 116, 118, 120, 124, 125, 134, 135, 136, 137, 151, 156, 157, 158, 160, 164, 165, 166, 167, 173, 176, 177, 178, 179, 180, 181, 184, 185, 186, 189, 191, 192, 197, 200, 209, 211, 219, 224, 225, 228, 236, 237, 238, 246, 264, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 284, 286, 287, 299, 300, 306, 309, 310, 311, 337, 362, 366, 367, 389, 392, 412, 432, 447, 458, 463, 464, 469, 471, 472, 475, 476, 478, 479, 506, 515, 517, 519, 520, 521, 525, 529, 530, 531, 532, 533, 536, 538, 539, 540, 545, 546, 548, 549, 571, 572, 589, 590, 611, 614, 626, 629, 634, 636, 637, 640, 643, 645, 654, 655, 669, 670, 671, 672, 675, 677, 678, 681, 683, 701, 702, 734, 737, 740, 743, 754, 770, 772, 782, 789, 812, 813, 817, 829, 833, 834, 839, 841, 843, 846, 849, 851, 852, 862, 865, 874, 876, 886], "pial": [5, 115, 124, 136, 137, 156, 161, 182, 264, 279, 548, 629, 701, 754, 770, 782, 886], "set_3d_view": [5, 24, 52, 81, 109, 115, 118, 124, 125, 137, 157, 158, 159, 160, 161, 171, 179, 184, 876, 886], "azimuth": [5, 24, 79, 81, 109, 115, 116, 118, 124, 125, 135, 136, 137, 157, 158, 159, 161, 171, 179, 182, 184, 191, 212, 225, 754, 822, 886], "elev": [5, 24, 79, 81, 109, 115, 116, 118, 124, 125, 135, 136, 137, 157, 158, 159, 161, 171, 182, 184, 191, 200, 207, 212, 225, 754, 822, 886], "distanc": [5, 11, 22, 24, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 68, 80, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 116, 124, 128, 131, 135, 136, 137, 144, 157, 158, 159, 160, 161, 162, 167, 171, 173, 177, 178, 179, 180, 182, 184, 191, 192, 193, 197, 203, 210, 212, 224, 225, 236, 238, 258, 263, 266, 267, 268, 269, 271, 272, 275, 276, 277, 279, 284, 306, 346, 367, 413, 416, 417, 420, 423, 432, 434, 456, 465, 471, 472, 481, 482, 515, 525, 544, 561, 562, 566, 570, 573, 577, 583, 594, 599, 600, 646, 654, 655, 663, 666, 669, 671, 672, 674, 676, 677, 678, 680, 681, 693, 694, 696, 697, 701, 706, 708, 710, 754, 771, 774, 786, 793, 797, 806, 809, 814, 816, 822, 841, 868, 871, 886], "focalpoint": [5, 24, 52, 109, 116, 124, 135, 136, 157, 158, 159, 160, 161, 179, 225, 754, 822, 886], "04": [5, 19, 24, 31, 35, 41, 42, 49, 50, 56, 70, 71, 73, 84, 85, 90, 93, 95, 100, 103, 121, 123, 124, 127, 130, 140, 142, 159, 163, 165, 178, 181, 184, 186, 201, 202, 210, 212, 228, 229, 230, 232, 233, 238, 246, 391, 434, 521, 526, 562, 594, 663, 668, 848, 868], "load": [5, 7, 11, 13, 14, 24, 26, 28, 29, 30, 32, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 68, 71, 75, 79, 80, 81, 82, 92, 93, 94, 96, 97, 99, 100, 101, 103, 104, 107, 109, 110, 112, 113, 117, 119, 120, 121, 123, 125, 127, 128, 135, 136, 143, 144, 146, 151, 152, 153, 157, 159, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 177, 178, 181, 182, 183, 184, 185, 189, 190, 192, 193, 194, 197, 200, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212, 218, 219, 220, 221, 228, 229, 230, 231, 232, 236, 237, 238, 241, 243, 258, 261, 262, 266, 267, 268, 269, 276, 315, 320, 324, 331, 361, 363, 377, 463, 464, 481, 482, 488, 501, 502, 509, 521, 524, 525, 540, 551, 562, 564, 574, 607, 617, 619, 623, 624, 626, 628, 634, 635, 637, 671, 704, 727, 728, 770, 784, 788, 792, 794, 801, 807, 833, 841, 862, 863, 871, 886], "three": [5, 31, 45, 79, 94, 103, 109, 120, 143, 146, 152, 157, 159, 160, 162, 169, 179, 183, 189, 190, 193, 200, 201, 206, 207, 208, 217, 219, 220, 223, 228, 241, 243, 258, 260, 263, 264, 266, 267, 268, 269, 274, 275, 280, 282, 299, 300, 309, 310, 311, 326, 413, 420, 471, 476, 481, 482, 519, 538, 539, 561, 562, 572, 577, 605, 637, 640, 655, 658, 687, 689, 706, 708, 710, 744, 754, 771, 782, 784, 786, 793, 795, 797, 805, 806, 807, 809, 814, 816, 834, 839, 845, 862, 865, 868, 871, 886], "layer": [5, 45, 109, 159, 160, 183, 184, 185, 186, 201, 246, 309, 389, 519, 526, 655, 663, 668, 770, 861, 868, 886], "model": [5, 7, 11, 12, 13, 18, 22, 26, 31, 32, 36, 41, 42, 50, 56, 73, 101, 105, 106, 109, 113, 116, 121, 136, 142, 152, 156, 157, 160, 161, 162, 163, 165, 171, 172, 173, 176, 177, 183, 184, 185, 186, 191, 192, 193, 197, 205, 206, 225, 232, 246, 252, 263, 264, 266, 268, 269, 270, 271, 274, 276, 277, 279, 280, 281, 282, 299, 300, 304, 306, 309, 343, 356, 362, 366, 374, 413, 417, 419, 420, 423, 425, 430, 431, 454, 456, 476, 481, 486, 519, 520, 524, 525, 526, 528, 529, 530, 531, 540, 559, 561, 571, 576, 590, 604, 613, 615, 616, 632, 641, 654, 655, 663, 668, 692, 719, 748, 754, 770, 772, 794, 809, 822, 828, 841, 846, 849, 851, 852, 862, 865, 871, 876, 886], "colloc": [5, 26, 41, 45, 50, 109, 159, 160, 177, 183, 520, 886], "patch": [5, 11, 22, 28, 29, 31, 34, 35, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 68, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 124, 127, 131, 157, 159, 161, 167, 173, 178, 179, 180, 182, 183, 192, 197, 224, 225, 236, 238, 258, 263, 266, 267, 268, 269, 274, 275, 279, 280, 282, 284, 286, 287, 366, 413, 420, 481, 482, 529, 530, 531, 532, 533, 536, 540, 545, 546, 561, 562, 577, 614, 636, 654, 670, 671, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 871, 886], "statist": [5, 10, 11, 22, 28, 29, 31, 35, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 68, 87, 88, 90, 92, 93, 94, 95, 96, 97, 101, 103, 104, 107, 108, 110, 113, 124, 131, 150, 152, 156, 157, 159, 161, 163, 167, 173, 178, 179, 180, 182, 183, 192, 197, 203, 206, 207, 224, 225, 235, 246, 258, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 286, 287, 299, 300, 320, 324, 326, 355, 356, 362, 366, 454, 481, 482, 529, 530, 531, 532, 533, 536, 540, 545, 546, 559, 562, 614, 617, 621, 636, 641, 666, 670, 671, 684, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 706, 708, 709, 710, 736, 786, 790, 793, 814, 841, 852, 863, 865, 876, 886], "3523": [5, 22, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 51, 54, 55, 58, 59, 68, 90, 92, 93, 94, 95, 131, 173, 178, 179, 180, 181, 192, 197, 224, 225], "8196": [5, 183, 192], "free": [5, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 68, 81, 90, 92, 93, 94, 95, 109, 131, 141, 152, 159, 160, 167, 173, 177, 178, 179, 181, 183, 192, 197, 209, 211, 224, 225, 229, 233, 246, 264, 266, 267, 270, 299, 300, 301, 376, 456, 457, 458, 476, 478, 479, 529, 530, 531, 532, 533, 536, 540, 544, 545, 546, 571, 626, 647, 651, 693, 694, 696, 697, 833, 845, 849, 851, 852, 861, 867, 868, 874, 886], "frame": [5, 11, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 68, 79, 80, 90, 92, 93, 94, 95, 104, 107, 108, 110, 112, 124, 131, 135, 136, 137, 141, 152, 160, 164, 165, 166, 167, 171, 173, 178, 179, 180, 181, 182, 183, 184, 185, 191, 192, 197, 211, 213, 224, 225, 236, 238, 258, 264, 266, 267, 268, 269, 270, 271, 279, 304, 305, 314, 318, 327, 332, 369, 392, 432, 472, 475, 481, 482, 485, 492, 512, 514, 521, 526, 573, 583, 594, 636, 637, 639, 653, 655, 729, 741, 749, 751, 754, 770, 782, 822, 841, 862, 867, 868, 871, 886], "normal": [5, 11, 15, 16, 18, 22, 24, 26, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 54, 55, 58, 59, 60, 68, 70, 90, 92, 94, 104, 107, 108, 109, 110, 113, 114, 115, 116, 137, 138, 143, 144, 156, 157, 158, 159, 161, 162, 170, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 192, 197, 207, 208, 211, 223, 224, 225, 236, 238, 242, 243, 246, 257, 259, 263, 264, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 279, 280, 281, 282, 286, 287, 299, 300, 315, 323, 360, 366, 413, 415, 418, 420, 447, 456, 476, 478, 479, 481, 482, 501, 529, 530, 531, 532, 533, 535, 536, 538, 539, 540, 545, 546, 561, 562, 572, 576, 590, 619, 623, 655, 659, 670, 671, 688, 706, 708, 710, 718, 722, 724, 732, 755, 771, 786, 793, 797, 805, 806, 809, 814, 816, 841, 845, 851, 867, 871, 886], "emploi": [5, 11, 22, 26, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 54, 55, 58, 59, 68, 90, 92, 94, 109, 159, 160, 177, 178, 179, 180, 183, 189, 190, 192, 197, 225, 243, 561, 687, 861, 862, 867, 868, 871], "rotat": [5, 10, 15, 19, 22, 34, 35, 40, 41, 42, 44, 46, 47, 48, 49, 54, 55, 58, 59, 68, 80, 90, 92, 94, 109, 135, 157, 159, 173, 178, 179, 180, 181, 183, 192, 193, 196, 197, 203, 205, 225, 258, 268, 269, 271, 299, 300, 352, 367, 371, 434, 472, 566, 572, 594, 744, 745, 747, 754, 770, 789, 843, 851, 868, 886], "convert": [5, 22, 27, 34, 35, 40, 41, 42, 46, 47, 48, 49, 54, 55, 58, 59, 68, 75, 79, 90, 92, 94, 109, 112, 122, 130, 135, 137, 138, 141, 142, 143, 144, 145, 150, 151, 152, 157, 159, 161, 162, 170, 172, 178, 179, 180, 183, 189, 190, 191, 192, 193, 197, 202, 203, 207, 214, 217, 219, 224, 225, 229, 233, 236, 237, 238, 242, 260, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 277, 280, 281, 282, 285, 292, 305, 314, 315, 340, 352, 366, 368, 415, 419, 424, 425, 428, 442, 449, 451, 452, 469, 474, 475, 477, 481, 482, 492, 502, 506, 517, 524, 582, 596, 597, 706, 708, 709, 710, 722, 732, 745, 747, 753, 755, 758, 770, 822, 824, 845, 846, 849, 852, 862, 868, 886], "helmet": [5, 7, 27, 45, 80, 81, 109, 116, 122, 123, 130, 138, 151, 157, 159, 171, 173, 184, 185, 186, 189, 213, 268, 269, 271, 464, 521, 528, 543, 624, 754, 763, 770, 789, 822, 868, 886], "unknown": [5, 46, 71, 73, 76, 83, 90, 93, 109, 127, 142, 147, 152, 168, 169, 170, 182, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 271, 327, 332, 476, 481, 482, 489, 496, 512, 514, 741, 807, 827, 836, 868, 871, 886], "deriv": [5, 32, 33, 34, 46, 71, 109, 123, 126, 141, 145, 150, 157, 169, 201, 228, 229, 241, 246, 271, 367, 562, 601, 626, 833, 868, 871, 886], "subset": [5, 45, 112, 141, 143, 145, 147, 152, 159, 161, 173, 176, 208, 209, 213, 219, 228, 241, 261, 266, 267, 268, 269, 272, 276, 286, 287, 299, 300, 356, 360, 361, 371, 372, 373, 405, 413, 416, 420, 423, 437, 451, 456, 457, 470, 476, 478, 479, 481, 482, 540, 562, 679, 682, 706, 707, 708, 709, 710, 754, 784, 794, 807, 867, 868, 874, 886], "dip_opm": 5, "_": [5, 8, 9, 19, 37, 38, 45, 50, 60, 67, 112, 135, 138, 147, 152, 161, 162, 173, 179, 181, 192, 196, 203, 206, 208, 213, 217, 224, 228, 229, 232, 233, 242, 243, 305, 562, 573, 609, 722, 732, 845, 868, 886], "fit_dipol": [5, 45, 84, 177, 182, 184, 185, 186, 264, 265, 302, 616, 868, 876, 886], "040": [5, 81, 113, 121, 141, 150, 163, 170, 210, 225, 246, 268, 269, 356, 865], "080": [5, 38, 81, 186, 210, 229], "idx": [5, 31, 35, 40, 47, 59, 63, 84, 114, 133, 151, 182, 192, 200, 204, 208, 224, 236, 260, 264, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 313, 480, 481, 482, 538, 539, 709, 782, 886], "argmax": [5, 35, 38, 40, 48, 50, 58, 59, 119, 177, 182, 196], "gof": [5, 40, 116, 170, 177, 179, 184, 185, 186, 264, 266, 267, 268, 269, 302, 313, 344, 346, 347, 348, 481, 482, 559, 706, 708, 709, 710, 782, 886], "1f": [5, 30, 40, 47, 76, 100, 109, 114, 157, 177, 184, 185, 192, 197, 203, 224, 228, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 708, 710, 786, 793, 806], "1000": [5, 40, 48, 70, 81, 84, 96, 113, 114, 128, 135, 147, 157, 158, 160, 161, 177, 182, 183, 184, 185, 192, 203, 204, 208, 214, 217, 223, 229, 233, 236, 237, 238, 442, 448, 450, 454, 481, 482, 562, 628, 693, 694, 696, 697, 722, 732, 754, 841, 862, 886], "n20m": 5, "plot_loc": [5, 177, 182, 264, 886], "orthoview": [5, 35, 40, 59, 135, 161, 177, 264, 782, 886], "conductormodel": [5, 45, 109, 159, 184, 185, 186, 263, 266, 267, 268, 269, 275, 306, 314, 413, 420, 456, 481, 482, 519, 520, 526, 561, 562, 577, 613, 655, 706, 708, 710, 770, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 828, 841, 876], "solver": [5, 10, 11, 13, 15, 18, 27, 36, 40, 45, 46, 56, 59, 176, 197, 263, 264, 268, 270, 271, 277, 456, 457, 478, 520, 544, 615, 624, 626, 692, 813, 849, 854, 874, 886], "instanc": [5, 15, 26, 31, 43, 44, 45, 50, 74, 83, 88, 109, 114, 159, 160, 167, 170, 172, 173, 177, 179, 183, 184, 186, 189, 190, 192, 205, 206, 207, 209, 211, 213, 217, 223, 241, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 314, 315, 316, 318, 319, 321, 327, 330, 332, 333, 335, 336, 337, 338, 339, 340, 343, 345, 347, 348, 349, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 371, 372, 373, 375, 379, 380, 381, 383, 384, 385, 386, 388, 393, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 454, 456, 457, 458, 459, 460, 467, 470, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 517, 518, 520, 521, 522, 523, 524, 525, 526, 529, 530, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 549, 551, 554, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 601, 602, 606, 607, 608, 609, 611, 612, 613, 616, 617, 618, 619, 620, 623, 626, 628, 635, 638, 647, 648, 651, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 691, 692, 693, 694, 695, 696, 697, 698, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 726, 727, 742, 743, 744, 746, 751, 754, 755, 756, 757, 763, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 824, 828, 832, 836, 838, 845, 863, 886], "36": [5, 13, 19, 28, 34, 35, 42, 45, 47, 55, 56, 79, 81, 83, 91, 103, 108, 112, 114, 145, 161, 170, 172, 182, 196, 197, 210, 228, 229, 230, 232, 233, 237, 238, 243, 246, 266, 267, 268, 269, 405, 481, 482, 603, 886], "rad": [5, 45, 177, 182, 184, 185, 186, 582, 655, 841], "77": [5, 11, 19, 35, 81, 82, 108, 109, 112, 114, 157, 158, 169, 170, 182, 192, 196, 197, 208, 209, 210, 219, 228, 229, 232, 233, 236, 241, 337, 886], "guess": [5, 45, 123, 177, 182, 184, 185, 186, 206, 210, 258, 472, 492, 767, 886], "grid": [5, 24, 40, 41, 45, 50, 113, 115, 123, 127, 136, 156, 157, 159, 177, 179, 181, 182, 184, 185, 186, 196, 197, 209, 210, 213, 228, 230, 258, 276, 278, 279, 329, 478, 562, 590, 655, 707, 780, 797, 800, 861, 862, 868, 886], "n_sampl": [5, 45, 53, 64, 97, 138, 184, 185, 186, 197, 223, 228, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 425, 426, 427, 428, 430, 455, 563, 592, 656, 685, 692, 695, 845], "10250": 5, "65975931e": 5, "41596252e": 5, "50067005e": 5, "18042429e": 5, "93613735e": 5, "88258373e": 5, "73325418e": 5, "23906800e": 5, "47917983e": 5, "14619592e": 5, "36697422e": 5, "53163548e": 5, "08794660e": 5, "00286749e": 5, "18143308e": 5, "22829671e": 5, "93976860e": 5, "28130683e": 5, "86574659e": 5, "28436459e": 5, "91104392e": 5, "54318851e": 5, "60478446e": 5, "18114621e": 5, "42024459e": 5, "20931076e": 5, "52605668e": 5, "29661483e": 5, "53868159e": 5, "40025250e": 5, "28102479e": 5, "49204692e": 5, "41942628e": 5, "29095862e": 5, "00102289e": 5, "19639173e": 5, "09222979e": 5, "25564394e": 5, "49616938e": 5, "35015052e": 5, "94284541e": 5, "29140004e": 5, "85113742e": 5, "46141046e": 5, "97190359e": 5, "ra": [5, 24, 26, 41, 43, 45, 50, 79, 109, 135, 136, 157, 159, 160, 162, 177, 181, 182, 184, 185, 186, 209, 264, 273, 274, 277, 279, 280, 281, 282, 314, 327, 367, 447, 475, 514, 589, 626, 741, 743, 746, 754, 833, 841, 862, 868, 886], "000000": [5, 24, 26, 41, 45, 50, 109, 144, 145, 157, 159, 160, 177, 181, 182, 183, 184, 185, 186, 209, 231, 233, 237, 238, 243], "999800": [5, 109], "015800": [5, 109], "009200": [5, 109], "018100": [5, 109], "930500": [5, 109], "365900": [5, 109], "002800": [5, 109], "366000": [5, 109], "930600": [5, 109], "40": [5, 9, 10, 12, 13, 19, 21, 28, 33, 35, 40, 45, 46, 47, 58, 59, 68, 73, 75, 79, 80, 81, 84, 90, 100, 103, 104, 108, 109, 112, 114, 121, 124, 135, 137, 141, 142, 145, 146, 152, 156, 157, 159, 161, 167, 170, 172, 182, 184, 185, 192, 196, 197, 202, 203, 205, 206, 210, 211, 212, 213, 217, 228, 229, 230, 232, 233, 236, 237, 238, 242, 246, 266, 267, 276, 434, 448, 481, 482, 490, 562, 574, 583, 584, 587, 658, 758, 784, 802, 807, 821, 862, 868, 886], "105": [5, 24, 26, 35, 41, 45, 50, 94, 109, 114, 136, 138, 157, 159, 170, 177, 182, 184, 185, 186, 207, 209, 210, 228, 871], "decompos": [5, 8, 45, 177, 182, 184, 185, 186, 206, 413, 417, 420, 562, 563, 736, 868, 886], "eigenvalu": [5, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 90, 93, 94, 104, 107, 108, 109, 110, 121, 153, 163, 167, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 197, 224, 225, 236, 238, 263, 413, 718, 868, 871], "without": [5, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 70, 75, 79, 90, 93, 94, 104, 107, 109, 113, 120, 121, 127, 135, 145, 150, 151, 152, 153, 160, 162, 163, 166, 171, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 197, 201, 202, 203, 205, 206, 207, 208, 209, 211, 219, 224, 225, 228, 243, 258, 261, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 293, 294, 297, 299, 300, 327, 328, 356, 360, 361, 371, 372, 373, 374, 413, 420, 443, 444, 445, 446, 454, 456, 457, 476, 478, 479, 481, 482, 489, 496, 501, 502, 522, 531, 533, 536, 540, 555, 583, 601, 617, 619, 623, 624, 641, 700, 707, 744, 754, 794, 812, 817, 824, 843, 845, 849, 853, 861, 863, 865, 867, 868, 886], "whiten": [5, 7, 14, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 90, 93, 94, 104, 105, 106, 107, 108, 109, 110, 113, 122, 130, 150, 154, 155, 163, 166, 167, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 197, 206, 224, 225, 236, 238, 246, 258, 263, 266, 267, 268, 269, 271, 276, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 454, 456, 457, 476, 478, 479, 481, 482, 537, 540, 559, 562, 563, 592, 621, 632, 719, 784, 788, 792, 794, 807, 811, 841, 865, 886], "omit": [5, 12, 21, 24, 26, 28, 29, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 78, 81, 87, 90, 93, 94, 104, 107, 108, 109, 110, 119, 121, 124, 151, 153, 157, 159, 163, 167, 169, 170, 172, 173, 177, 178, 179, 180, 182, 183, 184, 185, 186, 192, 197, 201, 209, 211, 224, 225, 236, 238, 260, 266, 267, 268, 269, 276, 419, 481, 482, 517, 562, 584, 585, 595, 612, 624, 663, 668, 710, 744, 770, 772, 788, 793, 799, 808, 845, 871, 886], "inner": [5, 26, 31, 41, 43, 45, 50, 109, 129, 156, 159, 161, 162, 177, 182, 183, 192, 246, 258, 266, 267, 270, 306, 309, 456, 472, 525, 594, 655, 671, 754, 841, 846, 849, 852, 861, 862, 865, 868, 871, 886], "skull": [5, 26, 41, 43, 45, 50, 109, 113, 135, 156, 157, 159, 161, 162, 171, 177, 182, 183, 192, 246, 258, 270, 279, 306, 309, 456, 525, 526, 590, 655, 663, 668, 671, 754, 770, 841, 846, 849, 852, 861, 862, 865, 868, 871, 886], "cm": [5, 9, 15, 24, 41, 45, 50, 90, 116, 123, 143, 146, 157, 159, 167, 171, 177, 182, 184, 185, 186, 190, 202, 208, 209, 210, 211, 212, 230, 242, 258, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 337, 339, 341, 481, 482, 489, 518, 583, 785, 788, 790, 815, 841, 886], "35": [5, 11, 12, 13, 19, 21, 28, 34, 35, 45, 47, 79, 81, 103, 108, 109, 112, 114, 123, 137, 144, 146, 147, 150, 159, 161, 165, 170, 172, 183, 185, 186, 188, 196, 197, 207, 208, 210, 212, 216, 228, 229, 230, 232, 233, 236, 237, 238, 242, 246, 258, 478, 529, 574, 575, 584, 587, 758, 868], "insid": [5, 16, 24, 26, 41, 45, 50, 109, 141, 150, 157, 159, 160, 161, 162, 177, 182, 183, 184, 185, 186, 204, 209, 211, 217, 232, 238, 272, 276, 277, 280, 281, 282, 294, 340, 396, 437, 465, 472, 481, 482, 511, 533, 591, 754, 807, 845, 861, 865, 868, 886], "sphere": [5, 24, 26, 35, 41, 43, 45, 48, 50, 59, 67, 71, 84, 93, 94, 109, 120, 123, 125, 136, 157, 159, 160, 161, 177, 179, 182, 183, 184, 185, 186, 190, 201, 209, 210, 211, 246, 258, 263, 264, 266, 267, 268, 269, 272, 275, 277, 299, 300, 304, 307, 308, 314, 362, 412, 413, 420, 456, 481, 482, 493, 521, 524, 525, 526, 561, 562, 571, 577, 655, 669, 672, 706, 708, 710, 754, 770, 771, 778, 782, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 813, 814, 816, 824, 841, 886], "102": [5, 11, 13, 14, 15, 16, 18, 22, 26, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 68, 69, 71, 72, 73, 76, 78, 80, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 133, 141, 142, 143, 147, 150, 151, 152, 153, 157, 158, 159, 161, 163, 167, 168, 169, 170, 171, 173, 177, 178, 179, 180, 181, 182, 183, 184, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 217, 218, 219, 220, 224, 225, 230, 231, 232, 233, 236, 238, 258, 871], "extent": [5, 13, 16, 24, 41, 45, 47, 50, 55, 70, 90, 95, 107, 141, 157, 159, 177, 182, 184, 185, 186, 197, 208, 209, 230, 231, 232, 233, 236, 237, 238, 246, 266, 267, 436, 471, 515, 544, 666, 696, 697, 867, 868, 886], "73": [5, 13, 15, 19, 33, 34, 35, 40, 45, 80, 81, 96, 107, 108, 112, 114, 121, 128, 146, 150, 170, 177, 183, 196, 197, 210, 228, 229, 230, 231, 232, 233, 236, 237, 238, 241, 246, 266, 267, 268, 269, 481, 482, 708, 710, 725], "y": [5, 9, 10, 11, 12, 13, 16, 18, 19, 24, 41, 45, 47, 50, 67, 70, 71, 80, 82, 90, 112, 114, 115, 120, 137, 146, 152, 157, 159, 161, 162, 171, 173, 176, 177, 181, 182, 184, 185, 186, 193, 196, 197, 200, 203, 204, 207, 209, 214, 217, 218, 219, 220, 228, 238, 243, 260, 263, 264, 266, 267, 268, 269, 271, 274, 275, 280, 282, 290, 304, 307, 308, 314, 315, 337, 346, 347, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 453, 481, 482, 493, 528, 529, 561, 562, 563, 571, 577, 582, 626, 659, 692, 706, 708, 710, 741, 744, 745, 747, 754, 755, 758, 771, 778, 782, 785, 786, 787, 788, 790, 792, 793, 794, 795, 796, 797, 802, 804, 806, 808, 809, 810, 814, 815, 816, 822, 833, 841, 843, 868, 886], "42": [5, 8, 9, 11, 13, 14, 15, 16, 18, 19, 28, 29, 35, 42, 45, 47, 49, 68, 69, 71, 72, 73, 76, 80, 81, 83, 88, 90, 92, 93, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 114, 117, 118, 121, 123, 127, 132, 133, 138, 142, 147, 152, 153, 157, 163, 167, 168, 169, 170, 173, 176, 177, 178, 181, 182, 183, 185, 197, 200, 203, 204, 205, 206, 207, 208, 209, 210, 217, 220, 224, 225, 228, 229, 230, 231, 232, 233, 236, 238, 246, 271, 529, 544, 666], "108": [5, 16, 35, 81, 82, 113, 114, 121, 135, 163, 170, 192, 210, 216, 228, 232, 246, 268, 269, 356, 794, 865], "80": [5, 9, 13, 16, 19, 30, 31, 33, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 78, 80, 81, 86, 87, 90, 94, 96, 108, 112, 114, 115, 116, 118, 119, 120, 125, 127, 130, 131, 150, 152, 157, 159, 169, 170, 172, 173, 177, 179, 180, 182, 184, 185, 186, 192, 196, 197, 208, 210, 211, 212, 228, 229, 230, 232, 233, 237, 238, 246, 412, 562, 658, 795, 802, 851, 886], "1080": [5, 10, 196, 246, 419], "543": [5, 40, 172, 175, 233], "after": [5, 8, 11, 16, 22, 24, 26, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 61, 68, 81, 88, 90, 92, 94, 101, 103, 109, 127, 131, 135, 137, 138, 141, 142, 143, 145, 146, 147, 150, 151, 152, 156, 157, 159, 162, 167, 168, 169, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 192, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 217, 219, 224, 225, 228, 230, 231, 236, 241, 243, 258, 259, 260, 266, 267, 268, 269, 271, 273, 274, 276, 277, 279, 280, 281, 282, 289, 299, 300, 343, 356, 360, 361, 363, 365, 371, 372, 373, 388, 413, 415, 419, 420, 424, 426, 427, 431, 437, 454, 455, 456, 457, 476, 478, 479, 481, 482, 540, 561, 562, 565, 573, 574, 575, 579, 580, 583, 584, 585, 587, 592, 595, 624, 626, 648, 667, 706, 731, 733, 734, 736, 737, 742, 754, 770, 778, 784, 788, 790, 792, 793, 794, 797, 798, 801, 805, 807, 818, 833, 841, 845, 853, 861, 862, 865, 867, 868, 871, 874, 886], "infeas": [5, 24, 41, 45, 50, 157, 159, 177, 182, 184, 185, 186, 209], "least": [5, 41, 45, 70, 84, 114, 142, 159, 160, 177, 182, 202, 203, 204, 206, 207, 211, 228, 233, 246, 266, 267, 268, 269, 276, 415, 424, 428, 430, 449, 451, 452, 470, 481, 482, 562, 564, 565, 581, 583, 594, 691, 754, 784, 807, 851, 861, 865, 867, 868, 886], "awai": [5, 41, 45, 135, 142, 145, 159, 160, 177, 182, 184, 189, 202, 207, 209, 213, 367, 493, 562, 589, 590, 659, 701, 734, 737, 754, 848, 868, 871, 886], "few": [5, 21, 26, 41, 44, 45, 50, 70, 94, 101, 109, 136, 145, 146, 150, 156, 157, 158, 159, 160, 162, 163, 168, 172, 173, 177, 182, 183, 200, 201, 202, 203, 205, 206, 208, 209, 210, 217, 220, 229, 233, 238, 241, 243, 271, 434, 572, 573, 583, 594, 841, 845, 853, 863, 865, 868, 870, 886], "interior": [5, 26, 41, 45, 50, 109, 159, 160, 177, 182, 183, 211], "statu": [5, 26, 41, 45, 50, 109, 159, 160, 177, 182, 183, 189, 266, 267, 268, 269, 271, 343, 365, 367, 481, 482, 489, 496, 504, 559, 706, 708, 709, 710, 754, 841, 845, 868, 871, 886], "70": [5, 9, 12, 13, 15, 19, 21, 34, 41, 45, 46, 47, 58, 59, 81, 88, 90, 103, 104, 108, 109, 112, 114, 116, 135, 137, 141, 144, 145, 157, 159, 160, 167, 170, 171, 184, 185, 196, 197, 203, 206, 210, 212, 228, 229, 232, 233, 236, 241, 243, 246, 266, 267, 268, 269, 337, 479, 481, 482, 562, 708, 710, 722, 725, 732, 733, 736, 886], "outsid": [5, 16, 24, 26, 41, 45, 50, 109, 135, 136, 141, 145, 157, 159, 160, 162, 177, 182, 183, 184, 185, 186, 201, 203, 208, 209, 211, 217, 219, 260, 263, 266, 267, 268, 269, 270, 272, 273, 274, 275, 277, 280, 281, 282, 294, 392, 413, 420, 455, 481, 482, 515, 533, 561, 562, 577, 579, 706, 708, 710, 742, 751, 754, 771, 772, 786, 793, 797, 806, 809, 812, 814, 816, 817, 867, 868, 869, 871, 886], "exterior": [5, 26, 41, 45, 50, 109, 159, 160, 177, 182, 183, 211], "284": [5, 112, 170, 228, 246, 413, 886], "473": [5, 114, 210, 228, 233, 279], "qhull": [5, 26, 41, 45, 50, 109, 159, 160, 177, 182, 183, 886], "189": [5, 32, 33, 34, 46, 99, 113, 170, 228, 233, 242, 246, 868], "solid": [5, 26, 41, 45, 50, 109, 151, 159, 160, 162, 177, 182, 183, 208, 778, 805, 868], "angl": [5, 26, 41, 45, 50, 109, 118, 131, 159, 160, 162, 170, 171, 173, 177, 182, 183, 184, 214, 258, 271, 305, 309, 582, 592, 647, 754, 759, 822, 868, 886], "244": [5, 112, 170, 210, 232, 246, 576], "complet": [5, 7, 9, 26, 32, 33, 34, 41, 45, 50, 109, 135, 145, 151, 156, 159, 160, 162, 170, 177, 181, 182, 183, 201, 203, 206, 209, 225, 228, 246, 258, 266, 267, 279, 305, 513, 562, 593, 607, 703, 750, 754, 762, 769, 845, 852, 861, 862, 863, 865, 868, 870, 871, 886], "155": [5, 35, 170, 228, 232, 233, 243, 886], "limit": [5, 31, 34, 40, 41, 42, 45, 50, 58, 59, 90, 94, 109, 113, 114, 127, 136, 138, 142, 143, 159, 166, 167, 169, 177, 178, 180, 182, 183, 190, 192, 197, 201, 203, 206, 211, 217, 225, 233, 243, 246, 260, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 280, 281, 282, 284, 413, 420, 439, 446, 457, 478, 481, 482, 501, 561, 562, 566, 583, 594, 619, 623, 628, 634, 684, 690, 692, 706, 708, 709, 710, 769, 771, 773, 778, 785, 786, 788, 790, 792, 793, 795, 797, 802, 806, 809, 812, 814, 816, 817, 818, 835, 843, 845, 867, 868, 869, 871, 874, 886], "214": [5, 170, 228, 232, 233], "through": [5, 9, 19, 27, 37, 45, 77, 85, 113, 135, 141, 142, 143, 145, 146, 150, 156, 157, 161, 166, 167, 169, 173, 177, 181, 182, 184, 185, 186, 196, 201, 203, 206, 207, 208, 211, 213, 217, 219, 220, 225, 236, 243, 246, 259, 264, 266, 267, 268, 269, 299, 375, 454, 463, 472, 481, 514, 561, 562, 656, 718, 754, 776, 778, 782, 785, 787, 791, 799, 841, 843, 845, 852, 863, 867, 868, 874, 886], "0642": [5, 170], "3779": 5, "18": [5, 9, 11, 13, 19, 28, 31, 34, 35, 40, 43, 45, 47, 50, 56, 59, 64, 71, 81, 82, 83, 85, 90, 91, 93, 95, 103, 108, 109, 110, 112, 114, 123, 127, 130, 137, 140, 141, 146, 161, 168, 169, 170, 172, 177, 178, 180, 181, 182, 184, 185, 188, 192, 196, 197, 200, 201, 204, 207, 208, 209, 210, 211, 213, 216, 217, 218, 219, 220, 225, 228, 229, 230, 232, 233, 236, 237, 238, 246, 266, 267, 268, 269, 279, 281, 282, 286, 287, 295, 300, 309, 311, 356, 357, 358, 359, 360, 361, 371, 372, 373, 389, 397, 405, 419, 425, 442, 457, 460, 461, 472, 476, 478, 479, 481, 482, 502, 515, 517, 523, 548, 553, 555, 562, 574, 575, 584, 654, 657, 658, 660, 671, 673, 706, 709, 771, 784, 793, 795, 807, 813, 816, 818, 843, 848, 868], "7678": 5, "6600": 5, "0647": 5, "99": [5, 13, 15, 19, 26, 35, 47, 49, 69, 70, 79, 81, 82, 90, 93, 103, 104, 108, 109, 112, 114, 120, 121, 130, 138, 152, 153, 158, 161, 163, 170, 173, 178, 180, 181, 182, 185, 192, 196, 197, 208, 210, 219, 224, 225, 228, 229, 231, 232, 233, 246, 266, 267, 276, 481, 482, 784, 807, 868, 886], "leakag": [5, 27, 36, 45, 56, 277, 279, 366, 539, 541, 543, 626, 629, 734, 737, 754, 759], "constrain": [5, 109, 145, 167, 176, 179, 180, 181, 207, 246, 261, 266, 267, 295, 296, 297, 298, 299, 300, 362, 579, 841, 846, 852, 865, 868, 871, 886], "idea": [5, 7, 21, 27, 113, 156, 172, 176, 178, 203, 205, 206, 207, 208, 236, 238, 243, 246, 266, 267, 310, 436, 864, 865, 868, 869, 874], "inverse_oper": [5, 7, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 47, 48, 54, 59, 90, 104, 107, 108, 109, 110, 173, 178, 236, 238, 276, 529, 530, 531, 532, 533, 535, 536, 541, 545, 546], "minimum_norm": [5, 7, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 58, 59, 60, 90, 94, 104, 107, 108, 109, 110, 124, 167, 178, 179, 180, 182, 183, 192, 197, 207, 224, 225, 236, 238, 841, 854, 861, 868, 876, 886], "make_inverse_oper": [5, 7, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 90, 94, 109, 178, 179, 180, 183, 192, 197, 225, 543, 861, 868, 876, 886], "loos": [5, 7, 31, 34, 35, 40, 41, 42, 46, 48, 54, 55, 59, 60, 90, 94, 109, 145, 178, 180, 183, 192, 197, 225, 457, 458, 476, 478, 479, 529, 530, 531, 532, 533, 535, 536, 540, 544, 545, 546, 861, 868, 871, 886], "depth": [5, 7, 11, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 57, 58, 59, 60, 90, 94, 104, 107, 108, 109, 110, 124, 167, 173, 178, 179, 180, 182, 183, 192, 197, 220, 224, 225, 236, 238, 246, 264, 299, 300, 457, 476, 478, 479, 540, 663, 668, 674, 871, 874, 886], "snr": [5, 7, 10, 11, 19, 21, 27, 28, 29, 30, 36, 38, 39, 41, 48, 54, 55, 56, 60, 88, 90, 104, 109, 167, 178, 180, 182, 185, 192, 203, 224, 225, 236, 238, 263, 268, 270, 271, 277, 345, 457, 528, 529, 537, 540, 542, 543, 615, 624, 626, 670, 754, 777, 811, 861, 868, 874, 886], "lambda2": [5, 7, 11, 28, 29, 30, 38, 39, 40, 41, 45, 47, 48, 50, 54, 55, 58, 59, 60, 71, 90, 94, 104, 108, 109, 157, 167, 178, 180, 182, 184, 185, 186, 192, 209, 224, 236, 238, 529, 530, 531, 532, 533, 535, 536, 541, 542, 545, 546, 571, 861], "stc": [5, 7, 11, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 56, 58, 59, 60, 68, 92, 93, 94, 95, 104, 108, 109, 110, 116, 127, 134, 136, 137, 159, 166, 167, 173, 177, 178, 179, 180, 181, 183, 187, 188, 197, 225, 237, 264, 268, 273, 274, 276, 277, 278, 279, 280, 281, 282, 286, 287, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 362, 447, 456, 460, 466, 476, 477, 478, 479, 517, 524, 528, 529, 530, 531, 532, 533, 536, 538, 539, 543, 545, 624, 634, 647, 656, 670, 671, 672, 673, 698, 701, 702, 754, 812, 813, 817, 818, 841, 861, 881, 886], "apply_invers": [5, 7, 28, 30, 38, 39, 40, 41, 44, 45, 58, 59, 60, 90, 94, 167, 178, 179, 180, 182, 183, 192, 197, 207, 224, 225, 236, 238, 530, 531, 532, 533, 535, 536, 542, 545, 546, 841, 861, 868, 876, 886], "pick_ori": [5, 7, 11, 28, 29, 32, 33, 34, 38, 39, 41, 49, 60, 90, 108, 178, 179, 181, 182, 225, 299, 300, 476, 478, 479, 529, 530, 531, 532, 533, 535, 536, 545, 546, 886], "hemi": [5, 7, 11, 26, 32, 33, 34, 38, 41, 43, 47, 48, 49, 50, 58, 60, 67, 94, 104, 109, 116, 127, 131, 134, 137, 156, 161, 167, 176, 178, 179, 180, 181, 182, 192, 197, 224, 225, 236, 237, 238, 272, 273, 274, 277, 280, 281, 282, 284, 471, 611, 629, 753, 754, 812, 817, 836, 886], "rh": [5, 24, 26, 34, 37, 38, 41, 43, 47, 59, 68, 90, 92, 94, 95, 107, 109, 116, 131, 137, 156, 159, 160, 161, 176, 178, 224, 225, 262, 272, 273, 274, 277, 280, 281, 282, 469, 515, 611, 629, 634, 754, 812, 817, 836, 868], "view": [5, 7, 11, 26, 28, 29, 31, 32, 33, 35, 40, 43, 47, 50, 53, 58, 59, 69, 79, 94, 95, 100, 104, 107, 108, 109, 113, 115, 118, 127, 136, 137, 141, 143, 151, 152, 153, 159, 160, 161, 167, 170, 171, 173, 176, 178, 181, 182, 190, 191, 192, 197, 206, 208, 219, 220, 224, 225, 233, 236, 237, 238, 246, 263, 264, 266, 267, 268, 269, 271, 273, 274, 275, 277, 280, 281, 282, 290, 304, 311, 481, 482, 528, 641, 741, 754, 782, 784, 807, 812, 815, 817, 822, 824, 841, 861, 865, 867, 868, 874, 886], "lat": [5, 11, 26, 58, 94, 104, 127, 137, 152, 161, 167, 197, 224, 238, 754], "initial_tim": [5, 7, 11, 32, 41, 43, 58, 59, 60, 94, 104, 127, 134, 167, 176, 178, 179, 180, 181, 182, 183, 192, 197, 224, 273, 274, 277, 280, 281, 282, 754, 812, 817, 818], "clim": [5, 7, 10, 22, 26, 42, 43, 47, 49, 54, 55, 58, 59, 104, 109, 127, 131, 136, 137, 147, 176, 178, 180, 181, 182, 212, 224, 236, 237, 238, 268, 269, 273, 274, 277, 280, 281, 282, 754, 773, 790, 812, 817, 818, 886], "percent": [5, 26, 42, 107, 109, 112, 180, 230, 233, 273, 274, 277, 280, 281, 282, 289, 545, 546, 562, 662, 663, 664, 665, 666, 668, 706, 709, 773, 799, 812, 814, 817, 818, 886], "lim": [5, 7, 22, 26, 42, 43, 49, 54, 55, 58, 59, 104, 109, 127, 131, 136, 137, 176, 178, 180, 181, 182, 237, 238, 273, 274, 277, 280, 281, 282, 773, 812, 817, 818], "400": [5, 7, 13, 40, 44, 75, 81, 92, 111, 127, 131, 136, 142, 143, 145, 147, 152, 157, 161, 172, 173, 177, 179, 182, 207, 208, 210, 212, 228, 230, 233, 472], "background": [5, 21, 43, 116, 126, 127, 135, 136, 143, 152, 161, 166, 167, 173, 206, 208, 212, 215, 216, 217, 219, 220, 246, 264, 266, 267, 268, 269, 271, 273, 274, 275, 277, 280, 281, 282, 413, 448, 449, 451, 481, 482, 502, 567, 589, 632, 706, 708, 710, 722, 754, 757, 763, 770, 782, 788, 792, 795, 802, 807, 812, 813, 815, 817, 818, 826, 861, 867, 886], "w": [5, 21, 32, 33, 39, 45, 60, 61, 73, 83, 103, 127, 132, 138, 143, 153, 157, 161, 162, 179, 183, 196, 197, 203, 212, 225, 228, 241, 246, 263, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 299, 300, 311, 323, 371, 413, 420, 481, 482, 529, 537, 540, 561, 562, 592, 634, 663, 668, 688, 706, 708, 709, 710, 722, 731, 732, 735, 738, 771, 786, 792, 793, 807, 809, 814, 815, 816, 868, 886], "invers": [5, 7, 11, 19, 21, 32, 33, 34, 38, 43, 44, 45, 46, 48, 50, 51, 54, 55, 56, 58, 59, 60, 88, 90, 105, 106, 107, 108, 109, 110, 124, 150, 156, 157, 160, 161, 163, 171, 173, 176, 177, 179, 180, 181, 182, 183, 189, 192, 197, 201, 207, 209, 224, 225, 236, 238, 246, 258, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 299, 300, 355, 362, 368, 369, 373, 419, 427, 431, 447, 476, 477, 478, 481, 482, 516, 525, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 542, 543, 544, 545, 546, 547, 559, 562, 563, 615, 621, 624, 626, 628, 629, 636, 654, 655, 721, 754, 770, 781, 782, 811, 813, 822, 841, 846, 852, 871, 874, 876, 886], "adjust": [5, 24, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 50, 51, 54, 55, 58, 59, 90, 94, 109, 116, 120, 127, 150, 157, 159, 162, 171, 173, 178, 179, 180, 181, 183, 189, 192, 197, 209, 211, 219, 220, 225, 230, 258, 263, 266, 267, 268, 269, 275, 288, 344, 346, 413, 420, 473, 481, 482, 483, 492, 500, 561, 562, 572, 585, 595, 684, 690, 695, 699, 700, 706, 708, 710, 725, 767, 777, 784, 785, 786, 790, 792, 793, 797, 806, 807, 809, 814, 815, 843, 849, 861, 865, 868, 874, 886], "svd": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 90, 94, 109, 178, 179, 180, 183, 192, 197, 207, 225, 263, 274, 280, 282, 343, 537, 538, 539, 779, 861, 868, 886], "lead": [5, 22, 26, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 69, 70, 88, 90, 94, 109, 145, 152, 163, 168, 178, 179, 180, 183, 192, 196, 197, 201, 203, 211, 213, 225, 260, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 356, 447, 476, 478, 479, 481, 482, 529, 530, 531, 532, 533, 595, 626, 651, 693, 694, 696, 697, 706, 841, 843, 863, 868, 886], "largest": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 90, 94, 109, 136, 152, 178, 179, 180, 183, 189, 192, 197, 225, 228, 413, 457, 506, 538, 539, 562], "38802": 5, "factor": [5, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 48, 50, 54, 55, 58, 59, 60, 90, 94, 104, 107, 108, 109, 110, 136, 158, 178, 179, 180, 182, 183, 192, 197, 203, 204, 211, 213, 224, 225, 230, 231, 232, 236, 238, 242, 258, 261, 264, 265, 266, 267, 268, 269, 271, 273, 274, 276, 277, 280, 281, 282, 301, 356, 360, 367, 373, 421, 422, 425, 426, 434, 453, 481, 482, 491, 532, 542, 545, 546, 572, 573, 579, 580, 583, 592, 594, 596, 643, 645, 646, 658, 659, 687, 689, 706, 709, 712, 715, 718, 731, 733, 734, 735, 736, 737, 738, 744, 754, 767, 784, 792, 805, 807, 813, 815, 817, 841, 868, 871, 886], "trace": [5, 31, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 74, 80, 90, 93, 94, 109, 145, 150, 152, 167, 173, 178, 179, 180, 183, 192, 193, 197, 201, 208, 210, 211, 214, 217, 220, 225, 258, 264, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 413, 481, 482, 562, 751, 754, 781, 784, 788, 796, 798, 805, 807, 812, 817, 868, 886], "35945e": 5, "nchan": [5, 34, 40, 41, 42, 45, 48, 50, 52, 54, 55, 57, 58, 59, 90, 94, 109, 167, 168, 170, 178, 179, 180, 183, 192, 197, 217, 223, 225, 270, 271, 871, 886], "nzero": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 90, 94, 109, 178, 179, 180, 183, 192, 197, 225], "invert": [5, 21, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 90, 94, 104, 107, 108, 109, 110, 136, 157, 159, 162, 167, 178, 179, 180, 181, 182, 183, 192, 197, 203, 224, 225, 236, 238, 243, 285, 295, 298, 419, 422, 427, 476, 478, 479, 692, 729, 862, 871], "vector": [5, 15, 18, 19, 27, 34, 36, 41, 56, 109, 111, 131, 163, 176, 178, 179, 189, 196, 205, 206, 207, 208, 210, 211, 225, 246, 258, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 280, 281, 282, 292, 299, 300, 343, 345, 349, 357, 358, 359, 362, 414, 417, 419, 424, 429, 431, 447, 451, 452, 453, 476, 478, 479, 481, 482, 516, 522, 528, 529, 531, 532, 533, 538, 539, 543, 561, 562, 573, 574, 575, 576, 578, 583, 590, 594, 603, 609, 617, 624, 632, 634, 641, 647, 706, 707, 708, 709, 710, 754, 786, 788, 790, 792, 793, 796, 805, 808, 812, 815, 817, 818, 837, 841, 865, 868, 871, 876, 886], "eigenlead": [5, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 58, 59, 60, 90, 94, 104, 107, 108, 109, 110, 167, 178, 179, 180, 182, 183, 192, 197, 224, 225, 236, 238, 868], "residu": [5, 28, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 55, 58, 59, 60, 70, 75, 90, 94, 167, 178, 179, 180, 182, 183, 184, 185, 192, 197, 206, 210, 224, 225, 236, 238, 302, 456, 476, 478, 479, 529, 777, 886], "explain": [5, 18, 28, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 58, 59, 60, 90, 94, 138, 160, 161, 167, 178, 179, 180, 182, 183, 184, 192, 193, 197, 206, 224, 225, 236, 238, 275, 302, 413, 420, 476, 478, 479, 538, 539, 562, 576, 798, 845, 849, 868, 886], "97": [5, 11, 13, 15, 19, 34, 41, 44, 47, 71, 79, 81, 83, 103, 108, 109, 112, 114, 117, 135, 157, 161, 167, 170, 192, 196, 197, 206, 209, 210, 211, 228, 229, 232, 233, 236, 246, 434, 526, 571, 573, 594, 687, 861, 868, 886], "varianc": [5, 8, 14, 16, 28, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 58, 59, 60, 70, 90, 94, 114, 167, 178, 179, 180, 181, 182, 183, 184, 192, 197, 201, 206, 213, 224, 225, 236, 238, 246, 275, 277, 295, 296, 297, 298, 299, 300, 422, 458, 476, 478, 479, 538, 539, 540, 562, 570, 688, 699, 700, 734, 737, 777, 798, 799, 841, 868, 886], "control": [5, 11, 19, 22, 26, 32, 33, 34, 38, 41, 42, 47, 48, 50, 60, 94, 109, 114, 120, 127, 134, 141, 150, 151, 157, 167, 169, 172, 173, 179, 180, 182, 183, 189, 192, 197, 202, 203, 204, 206, 207, 208, 211, 212, 219, 224, 225, 228, 236, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 421, 423, 424, 426, 429, 430, 432, 434, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 464, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 555, 558, 562, 564, 565, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 585, 587, 588, 589, 590, 591, 592, 594, 595, 597, 598, 601, 602, 603, 606, 607, 608, 609, 613, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 626, 628, 629, 630, 631, 632, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 651, 654, 655, 657, 658, 659, 660, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 693, 694, 695, 696, 697, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 722, 724, 725, 728, 729, 732, 733, 734, 736, 737, 738, 739, 742, 743, 744, 749, 753, 754, 762, 768, 770, 773, 779, 780, 782, 785, 786, 787, 788, 789, 794, 797, 798, 799, 800, 804, 805, 807, 808, 810, 811, 812, 813, 817, 818, 819, 820, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 851, 862, 865, 867, 868, 886], "24807258e": 5, "11": [5, 9, 10, 11, 13, 16, 19, 20, 21, 28, 33, 34, 35, 45, 47, 49, 64, 70, 73, 74, 80, 81, 83, 96, 100, 101, 103, 108, 109, 110, 112, 114, 120, 121, 123, 127, 138, 146, 158, 162, 163, 165, 167, 169, 170, 171, 172, 173, 175, 177, 180, 181, 182, 183, 184, 186, 188, 192, 196, 197, 200, 202, 203, 205, 210, 211, 212, 216, 217, 223, 224, 228, 229, 230, 232, 233, 235, 236, 237, 238, 243, 245, 246, 257, 266, 267, 276, 279, 337, 370, 382, 434, 470, 481, 482, 492, 494, 497, 498, 521, 540, 562, 592, 594, 598, 618, 663, 666, 668, 692, 706, 784, 807, 844, 851, 861, 868], "55793898e": 5, "13115753e": 5, "21": [5, 6, 11, 19, 28, 34, 35, 41, 44, 45, 46, 47, 64, 70, 81, 96, 103, 106, 108, 109, 112, 114, 130, 134, 146, 151, 161, 165, 169, 170, 172, 173, 175, 184, 189, 192, 196, 197, 200, 210, 216, 217, 228, 229, 230, 232, 233, 236, 237, 238, 243, 246, 263, 264, 266, 267, 268, 269, 273, 274, 275, 276, 277, 279, 280, 281, 282, 287, 299, 300, 360, 362, 406, 413, 420, 447, 452, 466, 481, 482, 517, 522, 542, 561, 562, 570, 572, 573, 577, 579, 580, 583, 594, 629, 637, 651, 655, 698, 706, 708, 710, 771, 772, 782, 786, 787, 788, 789, 793, 794, 795, 797, 799, 806, 807, 809, 811, 812, 814, 816, 820, 836, 839, 843, 844, 862, 868], "154": [5, 6, 35, 138, 169, 170, 228, 232, 233], "877": [5, 6, 25, 26, 197, 206, 233, 246, 577], "opm_data": [5, 6], "039": [6, 41, 56, 141, 143, 150, 170, 225], "executauto_examples_dataset": 6, "07": [6, 12, 20, 35, 46, 59, 66, 79, 81, 84, 85, 102, 103, 106, 130, 134, 161, 171, 175, 177, 180, 184, 185, 186, 188, 192, 196, 197, 210, 230, 233, 246, 323, 420, 666, 868], "491": [6, 210, 228, 233], "06": [6, 10, 19, 26, 35, 41, 44, 45, 46, 50, 52, 56, 59, 71, 75, 84, 85, 94, 100, 102, 103, 130, 156, 159, 175, 177, 180, 181, 182, 184, 203, 208, 210, 216, 228, 229, 230, 232, 233, 238, 246, 278, 362, 421, 476, 571, 841, 844], "spm_faces_dataset_sgskip": [6, 7], "pipelin": [7, 8, 9, 10, 11, 12, 13, 15, 18, 109, 135, 138, 162, 166, 167, 172, 173, 174, 196, 197, 201, 202, 206, 413, 415, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 466, 563, 744, 852, 862, 863, 865, 886], "reconstruct": [7, 16, 53, 135, 159, 160, 163, 164, 165, 166, 183, 187, 188, 192, 196, 200, 201, 206, 211, 238, 246, 263, 264, 266, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 295, 300, 305, 309, 310, 311, 314, 356, 362, 367, 368, 369, 392, 395, 421, 454, 465, 469, 471, 472, 473, 474, 475, 478, 515, 519, 521, 548, 562, 563, 572, 573, 583, 590, 594, 602, 611, 626, 629, 636, 638, 650, 654, 655, 669, 672, 683, 701, 702, 746, 754, 765, 770, 772, 782, 788, 793, 812, 817, 818, 836, 862, 865, 868, 874, 886], "scrambl": [7, 197, 862], "doe": [7, 28, 31, 55, 58, 59, 70, 71, 75, 80, 84, 112, 117, 127, 141, 142, 150, 152, 159, 161, 162, 163, 169, 179, 182, 183, 189, 190, 191, 193, 201, 203, 204, 205, 206, 207, 209, 211, 212, 213, 214, 223, 225, 230, 232, 233, 236, 243, 246, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 277, 278, 280, 281, 282, 290, 299, 300, 304, 321, 334, 360, 363, 371, 372, 389, 443, 444, 445, 446, 447, 471, 481, 482, 501, 505, 528, 548, 551, 564, 577, 579, 586, 619, 623, 648, 653, 656, 706, 708, 709, 710, 741, 744, 749, 757, 792, 815, 845, 850, 861, 865, 867, 868, 871, 886], "quit": [7, 21, 127, 145, 151, 152, 163, 203, 204, 206, 211, 212, 217, 228, 229, 237, 562, 845, 863, 865], "so": [7, 10, 28, 31, 32, 38, 40, 44, 47, 63, 67, 70, 71, 75, 79, 83, 93, 94, 95, 103, 104, 109, 114, 115, 127, 135, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 181, 182, 183, 184, 185, 191, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 232, 233, 236, 237, 238, 242, 243, 258, 266, 267, 268, 269, 271, 273, 274, 276, 277, 278, 279, 280, 281, 282, 291, 292, 293, 300, 314, 336, 362, 369, 388, 392, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 444, 445, 447, 448, 452, 481, 482, 500, 505, 529, 535, 548, 562, 563, 564, 572, 573, 584, 594, 595, 612, 624, 646, 653, 654, 693, 694, 696, 697, 744, 749, 754, 755, 763, 764, 788, 797, 799, 801, 807, 832, 841, 843, 845, 848, 850, 851, 852, 853, 861, 863, 865, 867, 868, 871, 886], "even": [7, 70, 74, 112, 128, 143, 156, 161, 167, 168, 169, 172, 173, 184, 191, 192, 200, 201, 203, 205, 206, 207, 208, 209, 213, 217, 219, 228, 243, 258, 266, 267, 268, 269, 310, 326, 379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 481, 482, 510, 562, 718, 815, 845, 853, 862, 868, 886], "fast": [7, 21, 44, 128, 152, 156, 192, 241, 243, 246, 266, 267, 268, 269, 365, 421, 430, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 521, 522, 562, 603, 708, 710, 725, 843, 865, 868, 886], "machin": [7, 18, 94, 95, 182, 197, 201, 202, 246, 252, 271, 284, 356, 573, 583, 594, 863, 886], "sever": [7, 70, 75, 81, 82, 114, 127, 146, 151, 152, 154, 156, 159, 160, 166, 167, 169, 170, 172, 173, 181, 182, 189, 190, 191, 192, 200, 202, 207, 208, 213, 217, 219, 220, 228, 236, 238, 261, 266, 267, 405, 448, 481, 482, 602, 709, 734, 737, 845, 848, 849, 850, 852, 857, 861, 862, 865, 866, 868, 871, 886], "alexandr": [7, 9, 10, 11, 12, 13, 15, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 88, 92, 96, 97, 100, 107, 108, 110, 111, 113, 117, 121, 125, 131, 132, 135, 138, 160, 163, 181, 186, 197, 206, 230, 231, 232, 236, 237, 238, 242, 246, 268, 269, 356, 413, 478, 479, 530, 562, 860, 865, 867, 873, 886], "gramfort": [7, 9, 10, 11, 13, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 92, 96, 97, 100, 107, 108, 110, 111, 113, 117, 121, 125, 131, 132, 135, 138, 160, 163, 181, 186, 197, 206, 230, 231, 232, 236, 237, 238, 242, 246, 268, 269, 356, 478, 479, 530, 562, 794, 860, 865, 867, 873, 886], "inria": [7, 9, 10, 11, 13, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 92, 96, 97, 100, 107, 108, 110, 111, 117, 121, 125, 131, 132, 138, 160, 186, 230, 231, 232, 236, 237, 238, 242], "deni": [7, 11, 13, 16, 21, 26, 33, 42, 69, 78, 101, 109, 113, 114, 120, 121, 126, 132, 133, 152, 163, 197, 232, 233, 238, 246, 268, 269, 356, 530, 860, 865, 873, 886], "engemann": [7, 11, 13, 16, 21, 26, 33, 42, 69, 78, 101, 109, 113, 114, 120, 121, 126, 132, 133, 163, 197, 232, 233, 238, 246, 268, 269, 356, 530, 794, 860, 865, 873, 886], "spm_face": [7, 123, 217, 862, 876], "ica": [7, 17, 20, 27, 74, 77, 84, 85, 88, 163, 166, 167, 200, 201, 202, 205, 208, 215, 216, 219, 246, 263, 266, 267, 268, 269, 271, 276, 314, 329, 330, 375, 417, 427, 454, 481, 482, 496, 556, 559, 577, 579, 580, 587, 588, 592, 606, 607, 621, 784, 797, 798, 799, 800, 801, 807, 826, 852, 865, 872, 875, 876, 886], "create_eog_epoch": [7, 173, 200, 202, 205, 206, 208, 575, 585, 863, 876, 886], "spm_path": 7, "spm_ctf_meg_example_fac": 7, "d_3d": 7, "downsampl": [7, 19, 79, 109, 135, 137, 146, 167, 196, 202, 204, 231, 258, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 412, 453, 454, 481, 482, 519, 583, 692, 706, 709, 813, 865, 886], "heavili": [7, 109, 158, 197, 291, 293, 744, 871], "advis": [7, 70, 190, 203, 258, 861, 868, 886], "real": [7, 32, 50, 92, 93, 152, 156, 157, 159, 161, 162, 203, 206, 207, 208, 209, 219, 223, 225, 230, 246, 299, 456, 481, 482, 524, 603, 709, 722, 732, 733, 734, 754, 852, 857, 874, 886], "jitter": [7, 169, 204, 481, 482, 865], "resampl": [7, 19, 21, 44, 75, 81, 82, 109, 135, 137, 141, 147, 150, 152, 166, 192, 196, 200, 203, 206, 208, 215, 216, 225, 236, 237, 238, 242, 264, 265, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 434, 448, 449, 451, 452, 454, 481, 482, 489, 496, 504, 559, 608, 706, 709, 710, 754, 784, 795, 812, 817, 826, 843, 863, 868, 875, 876, 883, 886], "npad": [7, 19, 75, 81, 82, 192, 196, 236, 237, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 453, 481, 482, 865], "auto": [7, 10, 15, 16, 19, 22, 31, 70, 74, 75, 76, 81, 82, 83, 90, 107, 113, 120, 121, 125, 148, 149, 157, 163, 166, 192, 196, 203, 206, 209, 211, 230, 231, 232, 233, 236, 237, 258, 260, 263, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 307, 308, 314, 330, 343, 345, 349, 355, 356, 360, 361, 362, 367, 413, 415, 419, 420, 424, 425, 432, 434, 437, 442, 443, 444, 446, 447, 449, 451, 452, 453, 458, 476, 478, 479, 481, 482, 487, 489, 491, 493, 496, 497, 504, 508, 521, 526, 540, 559, 561, 562, 563, 571, 572, 573, 574, 577, 583, 584, 587, 594, 598, 612, 618, 637, 651, 706, 708, 709, 710, 754, 770, 771, 773, 778, 784, 786, 788, 790, 791, 793, 794, 797, 799, 801, 804, 806, 807, 808, 809, 810, 812, 814, 816, 817, 818, 839, 861, 862, 865, 886], "sfreq": [7, 8, 9, 14, 19, 21, 31, 63, 65, 68, 69, 70, 90, 92, 93, 94, 95, 109, 111, 114, 125, 127, 128, 137, 138, 145, 167, 169, 170, 173, 191, 192, 196, 202, 203, 204, 212, 213, 217, 218, 219, 223, 225, 243, 260, 261, 266, 267, 268, 269, 271, 273, 274, 276, 277, 280, 281, 282, 285, 375, 415, 418, 419, 424, 425, 426, 437, 439, 441, 448, 449, 451, 481, 482, 598, 612, 698, 711, 712, 713, 722, 724, 725, 730, 732, 733, 734, 735, 787, 795, 871, 886], "5e": [7, 8, 9, 13, 31, 32, 34, 35, 40, 41, 45, 49, 59, 76, 109, 124, 142, 173, 184, 186, 197, 209, 217, 225, 266, 267, 276, 456, 481, 482, 784, 807], "major": [7, 322, 481, 845, 865, 867, 871, 874, 886], "n_compon": [7, 8, 9, 12, 15, 74, 76, 83, 88, 117, 167, 173, 197, 206, 413, 420, 421, 427, 562, 563, 577, 886], "max_it": [7, 74, 76, 83, 167, 206, 529, 562, 592, 671, 713, 724, 886], "random_st": [7, 8, 9, 10, 15, 40, 76, 83, 90, 92, 93, 94, 113, 117, 138, 167, 206, 224, 225, 478, 515, 562, 592, 611, 658, 659, 660, 669, 670, 672, 685, 886], "correl": [7, 12, 18, 22, 26, 44, 74, 103, 147, 163, 197, 205, 206, 211, 228, 229, 232, 246, 258, 271, 278, 344, 356, 362, 419, 420, 425, 562, 577, 594, 690, 695, 862, 865, 868, 886], "indic": [7, 13, 16, 22, 31, 47, 48, 69, 70, 81, 100, 141, 142, 143, 145, 146, 147, 150, 152, 156, 157, 161, 169, 170, 171, 176, 179, 189, 192, 196, 200, 201, 202, 204, 206, 207, 210, 211, 213, 217, 219, 220, 223, 225, 230, 233, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 312, 314, 315, 316, 326, 329, 331, 337, 356, 361, 371, 405, 413, 415, 419, 420, 421, 429, 434, 437, 442, 451, 452, 455, 481, 482, 489, 491, 493, 496, 497, 498, 504, 508, 538, 539, 553, 556, 558, 559, 561, 562, 563, 564, 565, 570, 572, 577, 578, 579, 580, 586, 590, 592, 593, 599, 600, 602, 603, 609, 618, 624, 625, 628, 637, 640, 646, 651, 674, 675, 679, 682, 686, 692, 693, 694, 696, 697, 698, 701, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 736, 737, 754, 767, 770, 771, 772, 774, 778, 784, 785, 786, 788, 790, 791, 793, 797, 798, 799, 801, 803, 805, 806, 808, 809, 814, 816, 834, 839, 841, 850, 867, 868, 871, 886], "eog_epoch": [7, 173, 200, 205, 580], "mrt31": 7, "2908": 7, "eog_ind": [7, 206, 562], "eog_scor": [7, 173, 206, 276], "find_bads_eog": [7, 173, 206, 276, 562, 886], "plot_scor": [7, 74, 83, 206, 562, 886], "plot_compon": [7, 76, 206, 562, 872, 886], "topograph": [7, 8, 16, 18, 19, 27, 122, 130, 133, 152, 197, 246, 268, 269, 271, 275, 276, 413, 420, 494, 558, 559, 562, 624, 706, 771, 778, 788, 793, 799, 806, 814, 816, 886], "compon": [7, 8, 12, 14, 15, 21, 27, 29, 30, 31, 34, 41, 42, 44, 45, 47, 59, 70, 74, 76, 77, 78, 80, 85, 87, 88, 94, 119, 124, 138, 151, 152, 163, 167, 173, 178, 179, 180, 182, 183, 185, 192, 197, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 219, 225, 236, 238, 246, 268, 269, 270, 272, 276, 299, 300, 314, 330, 356, 360, 361, 371, 372, 373, 382, 405, 406, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 434, 452, 453, 456, 457, 458, 476, 478, 479, 481, 482, 496, 532, 535, 536, 538, 539, 540, 541, 546, 562, 563, 570, 572, 573, 576, 577, 582, 583, 592, 594, 709, 794, 797, 798, 799, 800, 801, 807, 852, 861, 862, 865, 868, 871, 872, 886], "saw": [7, 141, 143, 168, 169, 172, 200, 201, 202, 208, 217, 232], "2nd": [7, 152, 196, 200, 230, 233, 243, 246, 577, 648, 886], "ecg": [7, 71, 73, 76, 81, 82, 83, 90, 92, 93, 94, 109, 111, 127, 131, 141, 142, 143, 147, 150, 152, 168, 169, 170, 173, 190, 192, 201, 202, 204, 205, 207, 209, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 266, 267, 268, 269, 276, 313, 361, 375, 446, 481, 482, 492, 493, 496, 508, 559, 562, 574, 579, 580, 584, 587, 658, 659, 692, 706, 708, 709, 710, 784, 800, 805, 807, 841, 868, 871, 886], "too": [7, 27, 69, 77, 85, 127, 141, 143, 145, 151, 152, 158, 159, 162, 166, 173, 179, 182, 200, 201, 202, 203, 204, 205, 208, 210, 212, 219, 228, 230, 232, 243, 266, 267, 268, 269, 271, 314, 330, 344, 375, 434, 481, 482, 487, 497, 565, 570, 572, 573, 583, 593, 594, 612, 618, 754, 774, 816, 845, 865, 886], "dipolar": [7, 456, 562, 798], "plot_overlai": [7, 83, 135, 206, 562, 886], "inspect": [7, 21, 28, 70, 83, 127, 142, 152, 157, 163, 192, 200, 211, 212, 258, 266, 267, 268, 269, 309, 311, 320, 334, 481, 482, 594, 602, 658, 659, 784, 788, 807, 857, 865], "clean": [7, 73, 74, 75, 84, 142, 145, 160, 167, 168, 173, 190, 201, 203, 205, 206, 207, 208, 212, 233, 243, 261, 266, 276, 481, 482, 494, 522, 562, 602, 617, 692, 798, 845, 865, 886], "default": [7, 21, 31, 43, 44, 74, 88, 103, 112, 114, 120, 127, 135, 136, 138, 141, 143, 146, 147, 150, 151, 152, 157, 159, 163, 167, 168, 169, 170, 171, 172, 173, 179, 180, 189, 190, 192, 193, 201, 202, 204, 206, 207, 208, 209, 211, 214, 217, 218, 219, 220, 223, 228, 232, 233, 238, 241, 242, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 463, 464, 465, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 597, 598, 599, 600, 601, 602, 603, 606, 607, 608, 609, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 626, 628, 629, 630, 631, 632, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 687, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 728, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 749, 751, 753, 754, 757, 762, 763, 767, 768, 770, 771, 772, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 844, 845, 849, 850, 861, 862, 865, 871, 886], "k": [7, 8, 9, 10, 11, 13, 14, 18, 19, 22, 28, 31, 38, 39, 41, 59, 65, 69, 70, 83, 97, 100, 104, 143, 144, 159, 161, 177, 182, 189, 196, 197, 203, 207, 218, 220, 232, 233, 241, 242, 243, 246, 263, 264, 266, 267, 268, 269, 272, 275, 277, 285, 290, 299, 302, 304, 413, 420, 476, 478, 479, 481, 482, 528, 529, 561, 562, 583, 626, 666, 687, 693, 694, 695, 697, 706, 708, 710, 722, 732, 741, 767, 771, 786, 792, 793, 796, 807, 809, 814, 815, 816, 841, 843, 845, 868, 871, 886], "append": [7, 8, 10, 16, 43, 44, 45, 47, 61, 68, 75, 80, 113, 138, 151, 173, 184, 196, 201, 206, 208, 212, 217, 228, 232, 233, 238, 260, 266, 267, 268, 269, 272, 481, 482, 562, 577, 583, 594, 652, 683, 706, 707, 708, 709, 710, 726, 845, 886], "covarari": 7, "noise_cov": [7, 11, 31, 34, 40, 41, 42, 45, 48, 49, 50, 51, 54, 55, 58, 59, 94, 109, 121, 153, 163, 173, 178, 179, 181, 183, 192, 206, 263, 266, 267, 268, 269, 276, 300, 302, 371, 372, 457, 476, 478, 479, 481, 482, 540, 562, 784, 788, 792, 794, 807, 871, 886], "shrunk": [7, 31, 34, 40, 41, 42, 45, 59, 121, 153, 163, 178, 184, 356], "visual": [7, 8, 13, 14, 15, 16, 32, 33, 35, 36, 41, 42, 45, 56, 57, 59, 60, 61, 69, 71, 73, 80, 87, 94, 101, 104, 105, 106, 113, 115, 116, 119, 120, 128, 130, 132, 134, 135, 136, 138, 142, 144, 146, 148, 149, 152, 153, 154, 155, 156, 161, 163, 166, 167, 169, 172, 173, 176, 179, 180, 184, 187, 188, 192, 193, 197, 200, 202, 203, 204, 209, 211, 214, 215, 216, 217, 218, 219, 220, 229, 230, 232, 242, 243, 246, 258, 261, 264, 266, 267, 268, 269, 271, 273, 274, 276, 277, 279, 280, 281, 282, 309, 310, 311, 315, 343, 344, 345, 346, 351, 353, 354, 362, 365, 366, 419, 440, 442, 454, 456, 466, 481, 482, 496, 517, 521, 528, 529, 539, 541, 543, 557, 559, 562, 566, 582, 594, 602, 618, 620, 621, 624, 626, 629, 632, 634, 647, 655, 658, 659, 693, 698, 706, 708, 709, 722, 732, 733, 735, 736, 737, 738, 754, 759, 771, 777, 778, 784, 785, 787, 788, 789, 792, 795, 796, 797, 798, 799, 800, 801, 804, 805, 807, 821, 825, 826, 841, 842, 843, 846, 848, 849, 852, 857, 863, 865, 868, 869, 871, 876, 886], "dig": [7, 109, 118, 125, 137, 157, 158, 159, 160, 161, 167, 170, 171, 184, 185, 217, 223, 271, 308, 314, 344, 432, 488, 526, 770, 886], "montag": [7, 8, 19, 70, 79, 83, 115, 125, 135, 136, 137, 152, 160, 190, 191, 206, 223, 243, 266, 267, 268, 269, 271, 314, 317, 318, 320, 325, 327, 330, 332, 333, 334, 335, 336, 337, 338, 339, 367, 446, 465, 481, 482, 493, 589, 591, 595, 804, 816, 824, 841, 862, 868, 886], "It": [7, 10, 13, 31, 39, 47, 55, 60, 70, 71, 74, 90, 94, 95, 103, 114, 116, 117, 121, 141, 143, 145, 146, 150, 151, 152, 157, 158, 159, 160, 161, 167, 170, 171, 172, 173, 176, 178, 181, 189, 190, 191, 193, 197, 201, 202, 204, 205, 206, 207, 209, 210, 211, 214, 217, 218, 220, 223, 228, 230, 231, 233, 236, 238, 242, 243, 258, 259, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 280, 281, 282, 284, 289, 299, 300, 305, 314, 332, 343, 356, 361, 367, 413, 421, 422, 448, 456, 473, 476, 478, 479, 481, 482, 489, 496, 501, 511, 521, 524, 529, 535, 536, 540, 545, 546, 562, 566, 572, 583, 594, 595, 602, 608, 615, 619, 623, 628, 632, 634, 672, 678, 681, 695, 700, 706, 709, 722, 729, 732, 744, 754, 792, 797, 817, 830, 833, 837, 841, 843, 845, 848, 849, 850, 852, 857, 861, 862, 865, 867, 868, 871, 874, 886], "spm_dig_montag": 7, "trans_fnam": [7, 68, 81, 157, 179, 192], "spm_ctf_meg_example_faces1_3d_raw": 7, "map": [7, 8, 10, 16, 19, 23, 24, 25, 26, 27, 36, 40, 41, 43, 56, 58, 71, 76, 78, 87, 94, 105, 106, 107, 109, 115, 119, 122, 124, 128, 130, 134, 135, 136, 137, 144, 145, 146, 147, 152, 157, 159, 161, 166, 167, 169, 176, 179, 182, 183, 196, 197, 200, 201, 202, 203, 206, 207, 208, 212, 217, 223, 224, 226, 227, 228, 233, 236, 237, 238, 246, 260, 263, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 285, 290, 292, 299, 312, 314, 326, 342, 362, 365, 366, 373, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 434, 437, 440, 442, 454, 458, 466, 476, 477, 478, 479, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 518, 521, 522, 528, 529, 540, 553, 558, 559, 562, 563, 571, 577, 582, 615, 621, 624, 626, 627, 631, 632, 641, 642, 647, 655, 660, 666, 671, 674, 687, 689, 690, 693, 695, 699, 700, 706, 707, 708, 709, 710, 715, 737, 754, 771, 773, 778, 781, 782, 784, 788, 789, 793, 799, 806, 807, 812, 813, 814, 815, 816, 817, 818, 824, 841, 843, 845, 861, 871, 874, 886], "make_field_map": [7, 124, 151, 268, 269, 789, 876, 886], "plot_field": [7, 124, 151, 268, 269, 886], "170": [7, 81, 84, 123, 130, 138, 149, 170, 184, 185, 186, 192, 203, 206, 228, 233, 246], "daat": 7, "plot_whit": [7, 93, 121, 153, 163, 178, 266, 267, 268, 269, 481, 482, 784, 788, 807, 865, 886], "oct": [7, 11, 22, 24, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 68, 90, 92, 93, 94, 95, 104, 107, 108, 109, 110, 124, 131, 157, 159, 160, 161, 167, 173, 178, 179, 180, 182, 183, 192, 197, 224, 225, 236, 238, 258, 273, 277, 279, 281, 412, 654, 812, 886], "spm_": 7, "s_dspm_invers": 7, "comment": [7, 46, 61, 115, 127, 150, 151, 153, 172, 173, 190, 209, 223, 242, 259, 265, 266, 267, 268, 269, 272, 276, 337, 471, 623, 628, 706, 709, 739, 778, 792, 839, 841, 843, 845, 868, 886], "3d": [7, 27, 31, 35, 38, 40, 52, 59, 60, 96, 97, 122, 127, 130, 135, 136, 137, 143, 152, 157, 159, 161, 162, 176, 177, 186, 191, 197, 207, 211, 228, 231, 233, 258, 264, 266, 267, 268, 269, 271, 273, 274, 276, 277, 280, 281, 282, 292, 314, 315, 327, 340, 368, 421, 451, 452, 481, 482, 502, 512, 521, 573, 583, 594, 687, 693, 694, 754, 755, 756, 761, 763, 764, 765, 770, 775, 782, 789, 804, 810, 812, 813, 817, 819, 820, 822, 824, 825, 841, 844, 845, 849, 857, 862, 863, 866, 886], "both": [7, 19, 31, 32, 33, 38, 40, 41, 45, 47, 51, 58, 59, 69, 70, 71, 74, 87, 90, 94, 99, 109, 114, 132, 135, 141, 142, 150, 151, 152, 163, 167, 169, 170, 171, 172, 173, 176, 178, 179, 181, 182, 183, 184, 190, 191, 192, 193, 197, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 217, 225, 230, 232, 236, 237, 238, 241, 242, 243, 246, 261, 262, 265, 266, 267, 268, 269, 273, 274, 276, 277, 279, 280, 281, 282, 289, 299, 300, 308, 317, 356, 360, 361, 362, 371, 372, 373, 413, 420, 432, 437, 454, 456, 457, 476, 478, 479, 481, 482, 500, 521, 540, 562, 565, 572, 577, 579, 608, 611, 624, 625, 629, 634, 655, 656, 660, 669, 687, 689, 693, 694, 696, 697, 706, 708, 709, 751, 754, 767, 777, 778, 785, 790, 791, 794, 797, 812, 817, 836, 841, 845, 851, 865, 866, 867, 868, 871, 886], "ven": [7, 50], "save_imag": [7, 236, 238, 754], "dspm_map": 7, "png": [7, 47, 115, 173, 236, 238, 258, 276, 886], "classifi": [8, 9, 10, 11, 13, 17, 20, 27, 197, 211, 266, 268, 269, 271, 417, 428, 430, 431, 562, 583, 621, 664, 665, 886], "featur": [8, 11, 15, 18, 19, 27, 98, 102, 143, 151, 172, 173, 196, 197, 208, 211, 220, 223, 228, 233, 243, 246, 268, 269, 273, 274, 276, 277, 280, 281, 282, 413, 416, 419, 420, 422, 423, 425, 428, 446, 481, 482, 562, 583, 594, 617, 690, 691, 778, 788, 790, 812, 817, 819, 823, 845, 852, 853, 862, 864, 865, 866, 867, 868, 886], "extract": [8, 9, 18, 21, 24, 27, 36, 38, 41, 56, 61, 67, 73, 74, 80, 83, 100, 112, 113, 123, 127, 128, 136, 137, 142, 143, 145, 150, 152, 159, 160, 166, 167, 170, 172, 182, 189, 191, 192, 197, 200, 204, 206, 207, 208, 214, 215, 216, 218, 223, 229, 230, 231, 238, 246, 258, 259, 266, 268, 271, 272, 273, 274, 277, 279, 280, 281, 282, 309, 343, 344, 345, 346, 347, 348, 351, 353, 354, 364, 373, 388, 413, 417, 420, 421, 437, 447, 454, 481, 484, 489, 496, 501, 517, 528, 529, 543, 562, 566, 594, 619, 623, 624, 628, 634, 678, 681, 753, 777, 796, 841, 845, 861, 862, 868, 871, 886], "en": [8, 19, 197, 246, 257, 873, 886], "wikipedia": [8, 197, 228, 246], "org": [8, 15, 32, 33, 70, 71, 79, 83, 88, 113, 114, 115, 116, 120, 127, 135, 136, 137, 197, 230, 232, 233, 236, 242, 246, 273, 277, 281, 302, 382, 405, 406, 421, 452, 563, 652, 690, 735, 738, 750, 812, 845, 865, 886], "wiki": [8, 156, 197, 273, 277, 281, 562, 750, 812, 841, 861], "common_spatial_pattern": [8, 197], "eegbci": [8, 9, 112, 160, 206, 876, 886], "document": [8, 15, 32, 63, 88, 127, 136, 137, 144, 150, 152, 161, 167, 169, 170, 171, 173, 178, 182, 190, 203, 204, 206, 208, 211, 217, 219, 220, 223, 242, 246, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 331, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 418, 419, 423, 424, 426, 429, 430, 432, 434, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 464, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 555, 558, 562, 563, 564, 565, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 585, 587, 588, 589, 590, 591, 592, 594, 595, 597, 598, 601, 602, 603, 606, 607, 608, 609, 613, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 626, 628, 629, 630, 631, 632, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 651, 654, 655, 657, 658, 659, 660, 663, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 693, 694, 695, 696, 697, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 724, 725, 728, 729, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 749, 753, 754, 762, 763, 770, 779, 782, 786, 787, 788, 789, 792, 794, 797, 798, 799, 804, 805, 807, 808, 810, 811, 812, 813, 817, 818, 819, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 849, 850, 852, 860, 861, 862, 864, 865, 868, 886], "physionet": [8, 138, 206, 246, 382, 405, 406, 862, 874, 886], "martin": [8, 10, 35, 47, 104, 246, 413, 860, 862, 868, 886], "billing": [8, 886], "tugraz": 8, "sklearn": [8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 117, 138, 172, 196, 197, 206, 228, 356, 361, 414, 416, 419, 422, 423, 427, 430, 750, 844, 845, 886], "discriminant_analysi": [8, 9], "lineardiscriminantanalysi": [8, 9], "model_select": [8, 9, 10, 12, 15, 16, 19, 356, 361, 430, 886], "shufflesplit": 8, "cross_val_scor": [8, 9], "events_from_annot": [8, 9, 112, 128, 136, 137, 138, 145, 169, 212, 243, 260, 285, 489, 496, 876, 886], "make_standard_montag": [8, 19, 70, 83, 125, 160, 171, 191, 243, 266, 267, 268, 269, 271, 325, 332, 481, 482, 493, 505, 876, 886], "concatenate_raw": [8, 9, 10, 81, 112, 192, 266, 267, 268, 269, 363, 364, 481, 482, 583, 594, 862, 876, 886], "read_raw_edf": [8, 9, 83, 112, 138, 160, 190, 206, 487, 489, 504, 862, 868, 872, 876, 886], "classif": [8, 9, 10, 11, 12, 15, 51, 139, 140, 147, 163, 166, 197, 246, 260, 266, 271, 302, 405, 414, 442, 496, 612, 708, 787, 862, 886], "start": [8, 22, 29, 33, 34, 40, 61, 65, 70, 82, 93, 96, 127, 135, 137, 138, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 157, 158, 159, 161, 162, 166, 167, 168, 169, 171, 174, 175, 178, 179, 189, 197, 201, 202, 204, 205, 206, 207, 209, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 228, 229, 230, 241, 242, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 285, 286, 287, 298, 337, 343, 344, 345, 346, 356, 359, 361, 413, 419, 420, 425, 437, 453, 454, 455, 471, 472, 480, 481, 482, 487, 489, 496, 500, 507, 510, 523, 528, 532, 551, 562, 565, 569, 574, 575, 579, 580, 583, 584, 585, 586, 587, 589, 608, 624, 671, 683, 693, 694, 696, 697, 706, 707, 709, 711, 712, 713, 714, 715, 716, 717, 741, 754, 759, 778, 780, 787, 793, 798, 800, 801, 807, 841, 843, 845, 847, 848, 849, 850, 853, 856, 861, 864, 865, 868, 869, 871, 872, 886], "cue": [8, 136], "feet": [8, 9, 112, 382], "standard_1005": [8, 70, 83, 160, 171, 206], "set_montag": [8, 15, 19, 67, 70, 79, 83, 125, 128, 135, 136, 137, 152, 160, 171, 183, 190, 191, 206, 223, 243, 266, 267, 268, 269, 271, 446, 481, 482, 493, 505, 868, 886], "skip_by_annot": [8, 9, 266, 267, 268, 269, 481, 482, 583, 594, 886], "t1": [8, 9, 30, 44, 50, 79, 112, 157, 158, 159, 160, 161, 162, 177, 258, 279, 281, 282, 305, 309, 310, 311, 322, 392, 473, 481, 590, 655, 772, 818, 841, 862, 868, 886], "t2": [8, 9, 112, 322, 481, 886], "train": [8, 10, 11, 13, 15, 16, 19, 88, 138, 196, 197, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 425, 426, 430, 562, 563, 797, 845, 861, 862, 886], "epochs_train": [8, 138], "edf": [8, 9, 83, 112, 138, 160, 193, 206, 446, 481, 482, 489, 496, 504, 612, 862, 868, 872, 886], "eegmmidb": [8, 9, 83, 112, 160, 206, 382, 886], "s001": [8, 9, 83, 112, 160, 206], "s001r06": [8, 9, 112, 160], "19999": [8, 112, 160, 206], "124": [8, 35, 112, 145, 149, 160, 170, 206, 210, 228, 233, 246, 391], "994": [8, 9, 22, 25, 70, 83, 112, 160, 206, 233], "s001r10": [8, 9, 112], "s001r14": [8, 9, 112], "bandpass": [8, 9, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 76, 82, 88, 113, 115, 121, 133, 137, 142, 145, 147, 173, 197, 200, 202, 205, 206, 208, 212, 213, 233, 243, 266, 267, 268, 269, 415, 421, 424, 448, 449, 451, 481, 482, 598, 708, 710, 807, 808, 886], "265": [8, 9, 81, 82, 85, 87, 112, 170, 192, 228, 233, 246, 663, 668], "656": [8, 9, 13, 20, 233], "64": [8, 9, 12, 13, 19, 21, 26, 32, 33, 34, 35, 41, 45, 46, 47, 50, 58, 59, 81, 82, 83, 101, 103, 108, 112, 114, 138, 144, 159, 160, 170, 171, 172, 173, 177, 179, 182, 185, 186, 192, 196, 197, 206, 210, 225, 228, 229, 232, 233, 246, 263, 266, 267, 268, 269, 272, 275, 277, 413, 420, 479, 481, 482, 503, 535, 536, 545, 546, 561, 562, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 851, 862, 868, 872], "annot": [8, 9, 27, 38, 41, 44, 47, 68, 75, 77, 83, 85, 90, 94, 95, 112, 113, 126, 127, 128, 135, 136, 137, 145, 147, 152, 161, 166, 167, 174, 176, 182, 190, 191, 192, 193, 196, 200, 206, 209, 214, 220, 221, 222, 224, 261, 266, 267, 268, 269, 271, 285, 346, 347, 361, 365, 390, 442, 480, 481, 482, 483, 489, 494, 496, 500, 502, 510, 522, 562, 564, 565, 566, 567, 568, 569, 579, 580, 583, 584, 585, 594, 595, 612, 621, 629, 645, 648, 710, 754, 770, 796, 799, 807, 808, 822, 823, 836, 841, 862, 863, 868, 876, 886], "descript": [8, 9, 112, 128, 136, 137, 138, 141, 143, 145, 152, 169, 170, 171, 189, 191, 192, 202, 212, 217, 218, 219, 223, 228, 260, 266, 267, 268, 269, 271, 275, 285, 324, 325, 357, 358, 361, 442, 481, 482, 483, 500, 522, 562, 565, 579, 580, 584, 618, 706, 709, 710, 799, 808, 841, 845, 862, 871, 886], "801": [8, 106, 113, 145, 210, 233, 242], "discrim": 8, "mont": [8, 246], "carlo": [8, 246, 886], "cross": [8, 9, 10, 11, 12, 15, 16, 19, 27, 32, 33, 34, 36, 44, 56, 78, 87, 105, 106, 119, 121, 122, 130, 138, 163, 167, 178, 196, 197, 201, 206, 208, 211, 224, 225, 232, 246, 263, 266, 268, 270, 271, 277, 278, 290, 292, 299, 300, 301, 356, 361, 362, 366, 373, 413, 416, 419, 425, 429, 430, 434, 454, 481, 528, 538, 539, 540, 541, 544, 559, 562, 572, 579, 583, 584, 594, 615, 621, 624, 626, 634, 707, 711, 712, 713, 714, 715, 716, 717, 723, 754, 780, 798, 841, 857, 862, 865, 874, 886], "epochs_data": [8, 415, 418, 422, 886], "get_data": [8, 9, 10, 12, 13, 14, 16, 18, 21, 70, 72, 75, 84, 96, 97, 100, 114, 115, 127, 133, 138, 141, 142, 147, 150, 167, 168, 197, 204, 207, 229, 233, 241, 242, 243, 266, 267, 268, 269, 481, 482, 707, 708, 710, 868, 886], "epochs_data_train": 8, "cv": [8, 9, 10, 11, 12, 15, 16, 19, 197, 356, 361, 429, 430, 886], "test_siz": 8, "cv_split": 8, "split": [8, 10, 11, 15, 16, 19, 58, 67, 88, 94, 127, 146, 160, 167, 196, 197, 208, 224, 229, 238, 246, 266, 267, 268, 269, 272, 273, 274, 277, 280, 281, 282, 356, 361, 430, 472, 480, 481, 482, 502, 505, 535, 536, 594, 683, 692, 707, 735, 738, 754, 780, 812, 817, 871, 886], "assembl": [8, 9, 232, 540, 698, 863, 886], "lda": [8, 9], "log": [8, 9, 12, 21, 33, 83, 121, 129, 143, 163, 178, 201, 203, 206, 208, 212, 220, 230, 242, 243, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 423, 424, 426, 429, 430, 432, 434, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 464, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 555, 558, 562, 564, 565, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 585, 587, 588, 589, 590, 591, 592, 594, 595, 597, 598, 601, 602, 603, 606, 607, 608, 609, 613, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 626, 628, 629, 630, 631, 632, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 651, 652, 653, 654, 655, 657, 658, 659, 660, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 693, 694, 695, 696, 697, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 724, 725, 728, 729, 733, 734, 736, 737, 738, 739, 742, 743, 744, 749, 752, 753, 754, 762, 770, 779, 782, 783, 786, 787, 788, 789, 794, 795, 797, 798, 799, 802, 804, 805, 807, 808, 810, 811, 812, 813, 814, 817, 818, 819, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 865, 876, 886], "norm_trac": [8, 9, 197, 413, 886], "scikit": [8, 9, 16, 18, 19, 117, 197, 206, 417, 419, 421, 422, 423, 424, 426, 427, 428, 431, 562, 863, 886], "learn": [8, 9, 16, 18, 19, 21, 70, 117, 144, 162, 163, 167, 197, 199, 201, 202, 206, 246, 252, 356, 417, 419, 421, 422, 423, 424, 426, 427, 428, 430, 431, 562, 592, 845, 852, 862, 863, 865, 886], "clf": [8, 9, 10, 11, 12, 13, 15, 18, 197, 428, 886], "class_bal": 8, "accuraci": [8, 10, 15, 33, 81, 135, 138, 246, 263, 266, 267, 268, 269, 275, 372, 373, 413, 419, 420, 425, 434, 456, 481, 482, 540, 561, 562, 576, 577, 589, 663, 668, 706, 708, 710, 734, 737, 744, 771, 786, 793, 797, 806, 809, 814, 816, 871, 886], "chanc": [8, 9, 10, 11, 197, 867, 886], "fit_transform": [8, 9, 10, 14, 18, 197, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 563], "plot_pattern": [8, 12, 197, 413, 420, 886], "ch_type": [8, 14, 22, 26, 42, 63, 80, 82, 87, 100, 112, 114, 120, 124, 125, 131, 142, 143, 146, 150, 151, 152, 167, 171, 177, 178, 191, 206, 211, 212, 220, 223, 233, 241, 242, 263, 266, 267, 268, 269, 320, 321, 375, 413, 420, 481, 482, 508, 521, 561, 562, 567, 577, 583, 647, 651, 706, 708, 709, 710, 785, 786, 793, 797, 809, 810, 814, 816, 886], "au": [8, 214, 263, 266, 267, 268, 269, 275, 375, 413, 420, 481, 482, 582, 706, 708, 710, 786, 793, 806, 814], "7e": [8, 9, 32, 35, 48, 49, 54, 55, 58, 70, 94, 121, 151, 153, 163, 173, 179, 180, 183, 184, 186, 192, 197, 201, 224], "8e": [8, 9, 32, 35, 49, 74, 109, 121, 163, 173, 178, 181, 184, 186, 192, 197], "09": [8, 9, 21, 42, 43, 44, 45, 49, 56, 73, 75, 81, 82, 103, 116, 120, 121, 123, 159, 160, 161, 163, 165, 176, 178, 181, 186, 210, 229, 232, 233, 235, 246, 272, 277, 526, 601, 687, 735, 738], "0001": [8, 9, 32, 78, 87, 119, 124, 151, 180, 201, 478, 479], "00012": [8, 9], "6e": [8, 9, 34, 42, 46, 119, 121, 153, 173, 178, 184, 186, 197], "00011": [8, 9], "933333": 8, "533333": 8, "00025": 8, "00026": 8, "9e": [8, 9, 21, 42, 49, 87, 93, 124, 151, 153, 163, 178, 181, 183, 184, 185, 186, 197, 224], "w_length": 8, "int": [8, 11, 19, 31, 68, 72, 90, 93, 95, 109, 114, 127, 144, 150, 161, 170, 172, 192, 196, 203, 204, 213, 217, 223, 225, 238, 243, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 313, 314, 316, 318, 319, 329, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 423, 424, 425, 426, 429, 430, 432, 434, 435, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 463, 464, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 553, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 597, 598, 601, 602, 603, 606, 607, 608, 609, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 626, 628, 629, 630, 631, 632, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 669, 670, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 689, 692, 693, 694, 695, 696, 697, 698, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 724, 725, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 749, 753, 754, 762, 763, 767, 770, 771, 772, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 792, 793, 794, 797, 798, 799, 800, 801, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 886], "w_step": 8, "w_start": 8, "shape": [8, 16, 19, 22, 31, 41, 47, 50, 53, 63, 65, 70, 97, 114, 115, 120, 135, 137, 138, 141, 147, 150, 158, 159, 161, 171, 176, 182, 189, 196, 197, 203, 217, 223, 228, 229, 230, 232, 233, 236, 237, 238, 241, 242, 243, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 289, 299, 300, 301, 306, 307, 308, 314, 315, 316, 320, 323, 327, 331, 341, 346, 350, 351, 352, 353, 354, 365, 367, 370, 371, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 437, 441, 442, 447, 449, 451, 454, 455, 456, 457, 458, 471, 472, 474, 475, 476, 478, 481, 482, 484, 492, 506, 517, 519, 521, 523, 527, 537, 538, 539, 541, 544, 545, 557, 561, 562, 563, 565, 566, 567, 569, 570, 571, 572, 573, 577, 583, 586, 591, 592, 594, 599, 600, 608, 609, 618, 620, 621, 637, 640, 643, 644, 645, 646, 655, 656, 661, 662, 663, 664, 665, 666, 667, 668, 673, 674, 683, 685, 686, 687, 691, 692, 693, 694, 695, 696, 697, 704, 706, 707, 708, 709, 710, 711, 712, 713, 718, 721, 722, 724, 725, 729, 731, 732, 733, 734, 735, 736, 737, 741, 742, 743, 744, 745, 747, 753, 754, 757, 758, 759, 769, 770, 771, 773, 774, 775, 778, 784, 785, 786, 787, 788, 790, 793, 794, 796, 797, 799, 800, 804, 806, 808, 809, 810, 812, 814, 815, 816, 817, 818, 822, 824, 831, 834, 839, 841, 852, 861, 868, 886], "scores_window": 8, "train_idx": 8, "test_idx": 8, "y_train": [8, 138, 196], "y_test": [8, 138, 196], "x_train": [8, 196], "x_test": [8, 196], "slide": [8, 12, 21, 135, 157, 243, 276, 733, 734, 736, 737], "score_this_window": 8, "n": [8, 10, 43, 45, 70, 83, 93, 99, 109, 114, 138, 142, 145, 150, 152, 158, 161, 171, 173, 176, 189, 203, 206, 207, 208, 209, 217, 223, 225, 228, 230, 232, 233, 243, 246, 258, 260, 261, 264, 265, 266, 267, 268, 269, 272, 273, 274, 277, 278, 280, 281, 282, 284, 314, 323, 342, 352, 353, 354, 357, 358, 359, 362, 370, 382, 405, 406, 428, 434, 437, 448, 450, 471, 481, 482, 502, 544, 561, 562, 566, 569, 579, 580, 583, 594, 642, 666, 679, 680, 681, 682, 686, 691, 706, 709, 718, 719, 722, 732, 733, 734, 736, 737, 754, 757, 758, 773, 788, 795, 812, 817, 818, 824, 841, 853, 862, 865, 868, 872, 886], "w_time": [8, 9], "axvlin": [8, 10, 11, 13, 19, 45, 112, 127, 145, 161, 197, 211], "linestyl": [8, 9, 11, 21, 97, 111, 112, 113, 127, 151, 197, 203, 207, 212, 233, 722, 732, 778, 802, 886], "color": [8, 9, 10, 11, 12, 13, 19, 21, 22, 38, 39, 45, 47, 48, 49, 50, 54, 55, 59, 70, 81, 82, 96, 97, 101, 104, 112, 113, 114, 115, 116, 120, 127, 132, 133, 135, 136, 137, 138, 142, 143, 145, 150, 151, 152, 157, 161, 167, 169, 171, 173, 176, 177, 178, 179, 182, 184, 186, 196, 197, 200, 201, 203, 204, 207, 211, 212, 218, 219, 220, 225, 233, 238, 241, 242, 243, 262, 263, 264, 266, 267, 268, 269, 272, 273, 274, 275, 277, 279, 280, 281, 282, 371, 413, 420, 465, 466, 471, 472, 481, 482, 561, 562, 627, 628, 706, 708, 710, 722, 732, 754, 763, 767, 769, 770, 771, 773, 776, 778, 781, 782, 783, 784, 785, 786, 787, 788, 790, 792, 793, 795, 796, 797, 802, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 820, 835, 836, 841, 886], "axhlin": [8, 9, 10, 11, 13, 19, 21, 81, 82, 112, 113, 145, 161, 197, 243, 562, 800], "xlabel": [8, 9, 15, 16, 19, 22, 28, 29, 37, 39, 41, 53, 58, 68, 72, 82, 90, 93, 97, 107, 108, 110, 114, 127, 138, 152, 161, 178, 181, 182, 196, 203, 212, 213, 225, 228, 230, 238, 242, 243, 722, 732, 886], "ylabel": [8, 9, 15, 16, 19, 22, 28, 29, 37, 39, 41, 53, 58, 68, 69, 72, 82, 90, 93, 97, 107, 108, 110, 127, 138, 152, 161, 178, 181, 182, 196, 203, 208, 212, 213, 225, 228, 230, 238, 242, 243, 722, 732], "legend": [8, 9, 10, 11, 12, 16, 19, 21, 22, 28, 37, 38, 39, 41, 45, 68, 70, 96, 97, 110, 111, 127, 138, 145, 146, 151, 163, 167, 173, 181, 196, 197, 212, 217, 218, 238, 242, 243, 266, 267, 268, 269, 722, 732, 754, 767, 777, 778, 784, 787, 792, 886], "loc": [8, 10, 16, 37, 39, 70, 112, 123, 127, 137, 141, 144, 145, 146, 170, 177, 181, 184, 212, 242, 271, 332, 605, 722, 732, 777, 824, 868, 871], "zoltan": [8, 197, 246, 413], "kole": [8, 197, 246, 413], "quantit": [8, 163, 197, 246, 562, 865, 867], "abnorm": [8, 197, 246], "clinic": [8, 70, 71, 78, 112, 152, 197, 201, 205, 206, 246, 529, 561, 562, 570, 571, 577, 594, 609, 735, 738, 862, 868], "electroencephalographi": [8, 58, 71, 78, 112, 152, 197, 201, 205, 246, 277, 561, 571, 609, 868], "neurophysiologi": [8, 70, 71, 78, 112, 152, 197, 201, 205, 206, 246, 561, 562, 570, 571, 577, 609, 735, 738, 868], "79": [8, 13, 15, 16, 19, 35, 41, 45, 47, 81, 103, 108, 112, 114, 119, 158, 159, 170, 177, 182, 185, 196, 197, 210, 228, 229, 232, 233, 246, 405, 433], "440": [8, 13, 81, 197, 246], "447": [8, 13, 197, 210, 233, 246], "1991": [8, 197, 228, 246, 413], "1016": [8, 12, 13, 18, 19, 21, 35, 42, 44, 59, 70, 71, 74, 75, 78, 94, 101, 112, 113, 119, 121, 126, 145, 152, 156, 163, 181, 197, 201, 203, 205, 206, 213, 228, 229, 233, 246, 268, 269, 272, 277, 278, 299, 356, 362, 391, 417, 419, 420, 421, 431, 476, 479, 529, 530, 540, 544, 561, 562, 570, 571, 577, 598, 601, 609, 663, 666, 668, 693, 694, 696, 697, 699, 700, 720, 722, 732, 735, 736, 738, 771, 860, 862, 865, 868], "0013": [8, 71, 78, 112, 152, 197, 201, 205, 246, 561, 571, 609, 868], "4694": [8, 71, 78, 112, 152, 197, 201, 205, 246, 561, 571, 609, 868], "91": [8, 13, 19, 26, 35, 41, 45, 47, 50, 56, 71, 78, 80, 108, 109, 112, 114, 117, 144, 149, 152, 157, 159, 170, 177, 182, 183, 188, 196, 197, 201, 208, 209, 210, 211, 212, 228, 229, 232, 233, 246, 337], "90163": [8, 197, 246], "gerwin": [8, 206, 246, 382, 862], "schalk": [8, 206, 246, 382, 862], "denni": [8, 206, 246, 382, 862], "mcfarland": [8, 206, 246, 382, 862], "thilo": [8, 206, 246, 382, 862], "hinterberg": [8, 206, 246, 382, 862], "niel": [8, 206, 246, 382, 862], "birbaum": [8, 206, 246, 382, 862], "jonathan": [8, 101, 206, 229, 246, 382, 396, 862, 886], "wolpaw": [8, 206, 246, 382, 862], "bci2000": [8, 206, 246, 382, 862], "bci": [8, 15, 88, 112, 160, 197, 206, 246, 382, 563, 862, 874, 886], "ieee": [8, 15, 40, 46, 51, 71, 83, 84, 88, 117, 138, 145, 163, 181, 197, 206, 241, 246, 266, 267, 268, 269, 299, 300, 302, 356, 382, 406, 413, 437, 478, 479, 481, 482, 562, 563, 571, 602, 708, 710, 725, 735, 738, 861, 862, 865, 868], "transact": [8, 15, 51, 71, 84, 88, 117, 138, 163, 181, 197, 206, 241, 246, 266, 267, 268, 269, 299, 300, 356, 382, 406, 413, 478, 481, 482, 529, 562, 563, 571, 602, 708, 710, 725, 861, 862, 865, 868], "biomed": [8, 15, 71, 84, 88, 117, 138, 181, 190, 197, 206, 225, 246, 257, 299, 300, 382, 406, 413, 562, 563, 571, 602, 861, 862, 868, 873], "engin": [8, 15, 71, 83, 84, 88, 117, 181, 197, 206, 207, 208, 225, 246, 299, 300, 382, 406, 413, 529, 562, 563, 571, 602, 845, 851, 861, 862, 868], "1034": [8, 206, 246, 382, 659, 862], "1043": [8, 170, 197, 206, 246, 382, 862], "2004": [8, 70, 206, 246, 356, 382, 570, 666, 862, 868], "1109": [8, 15, 40, 46, 51, 71, 83, 84, 88, 117, 138, 145, 163, 181, 197, 206, 241, 246, 266, 267, 268, 269, 299, 300, 302, 356, 382, 406, 413, 437, 478, 479, 481, 482, 562, 563, 571, 602, 708, 710, 725, 861, 862, 865, 868], "tbme": [8, 15, 71, 84, 88, 117, 197, 206, 246, 382, 413, 562, 563, 571, 602, 861, 862], "827072": [8, 206, 246, 382, 862], "ari": [8, 138, 206, 246, 382, 405, 406, 852, 862, 886], "l": [8, 19, 44, 49, 99, 126, 127, 135, 138, 145, 161, 173, 189, 196, 206, 209, 211, 213, 233, 236, 242, 243, 246, 257, 258, 278, 362, 382, 405, 406, 419, 529, 562, 570, 666, 735, 738, 772, 778, 799, 851, 860, 862, 868, 873, 886], "goldberg": [8, 138, 206, 246, 382, 405, 406, 862], "lui": [8, 138, 206, 246, 382, 405, 406, 862], "amar": [8, 138, 206, 246, 382, 405, 406, 862], "leon": [8, 138, 206, 246, 382, 405, 406, 862], "glass": [8, 31, 35, 40, 44, 59, 60, 138, 182, 206, 246, 274, 280, 281, 282, 382, 405, 406, 813, 817, 818, 862], "jeffrei": [8, 138, 206, 246, 382, 405, 406, 529, 862], "hausdorff": [8, 138, 206, 246, 382, 405, 406, 862], "plamen": [8, 138, 206, 246, 382, 405, 406, 862], "ivanov": [8, 138, 206, 246, 382, 405, 406, 862], "roger": [8, 10, 138, 206, 246, 382, 405, 406, 862], "joseph": [8, 138, 206, 246, 382, 405, 406, 862], "mietu": [8, 138, 206, 246, 382, 405, 406, 862], "georg": [8, 138, 206, 213, 246, 382, 405, 406, 576, 862, 886], "moodi": [8, 138, 206, 246, 382, 405, 406, 862], "chung": [8, 138, 206, 246, 382, 405, 406, 862], "kang": [8, 138, 206, 246, 382, 405, 406, 862], "peng": [8, 138, 206, 246, 382, 405, 406, 862], "h": [8, 96, 101, 112, 127, 135, 138, 203, 205, 206, 219, 246, 258, 260, 266, 267, 323, 382, 405, 406, 449, 452, 561, 609, 666, 688, 704, 719, 784, 795, 860, 861, 862, 868, 886], "eugen": [8, 138, 206, 246, 382, 405, 406, 862], "stanlei": [8, 138, 206, 246, 382, 405, 406, 862], "physiobank": [8, 138, 206, 246, 382, 405, 406, 862], "physiotoolkit": [8, 138, 206, 246, 382, 405, 406, 862], "new": [8, 14, 19, 27, 31, 61, 69, 81, 113, 135, 138, 141, 143, 146, 150, 152, 162, 166, 173, 176, 183, 193, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 219, 220, 223, 228, 231, 232, 233, 241, 246, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 286, 287, 289, 290, 295, 299, 300, 302, 304, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 320, 323, 324, 325, 326, 330, 332, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 371, 372, 373, 374, 382, 389, 391, 392, 405, 406, 412, 413, 415, 417, 419, 420, 424, 425, 432, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 460, 461, 463, 466, 470, 471, 472, 475, 476, 478, 479, 480, 481, 482, 489, 492, 493, 494, 496, 497, 498, 502, 505, 510, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 535, 536, 537, 538, 539, 542, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 583, 584, 590, 593, 594, 595, 602, 604, 608, 609, 614, 618, 620, 621, 625, 629, 637, 639, 640, 641, 642, 643, 645, 648, 651, 655, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 683, 687, 689, 699, 700, 701, 705, 706, 707, 708, 709, 710, 718, 720, 723, 724, 725, 728, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 751, 754, 755, 757, 762, 763, 767, 770, 771, 772, 773, 775, 777, 778, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 816, 817, 818, 820, 823, 827, 830, 831, 832, 836, 837, 839, 841, 843, 844, 847, 849, 850, 851, 853, 856, 861, 862, 865, 866, 867, 868, 869, 871, 873, 874], "research": [8, 67, 70, 138, 142, 145, 152, 156, 169, 200, 206, 214, 225, 243, 246, 257, 382, 405, 406, 530, 598, 688, 853, 860, 862, 864, 873], "resourc": [8, 123, 138, 145, 204, 206, 246, 382, 405, 406, 844, 862, 869, 874], "complex": [8, 32, 37, 114, 135, 136, 138, 193, 206, 228, 246, 266, 267, 268, 269, 292, 382, 405, 406, 426, 481, 482, 533, 658, 709, 724, 725, 733, 734, 736, 841, 845, 862, 871, 886], "circul": [8, 138, 206, 246, 382, 405, 406, 862], "2000": [8, 10, 138, 193, 202, 203, 205, 206, 208, 217, 246, 266, 267, 268, 269, 382, 405, 406, 413, 442, 481, 482, 483, 529, 561, 685, 861, 862, 868], "1161": [8, 138, 197, 206, 246, 382, 405, 406, 862], "cir": [8, 138, 206, 246, 382, 405, 406, 862], "101": [8, 70, 114, 138, 159, 170, 191, 206, 208, 210, 228, 233, 246, 382, 405, 406, 421, 862, 871], "e215": [8, 138, 206, 246, 382, 405, 406, 862], "608": [8, 20, 178, 197, 210], "decoding_csp_eeg": [8, 20], "decomposit": [9, 11, 14, 17, 20, 27, 28, 29, 30, 32, 38, 39, 44, 47, 52, 57, 60, 74, 76, 103, 104, 107, 108, 110, 112, 113, 124, 167, 173, 182, 197, 200, 206, 207, 223, 224, 228, 230, 231, 233, 236, 238, 242, 243, 246, 266, 268, 269, 271, 273, 274, 277, 280, 281, 282, 413, 420, 421, 426, 427, 447, 494, 523, 543, 562, 577, 592, 712, 715, 725, 731, 733, 734, 736, 737, 861, 868, 871, 886], "iter": [9, 19, 27, 35, 36, 43, 44, 56, 59, 83, 90, 93, 94, 95, 104, 112, 134, 135, 138, 158, 170, 173, 180, 181, 196, 206, 219, 225, 232, 236, 237, 238, 246, 260, 261, 263, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 278, 290, 293, 294, 297, 304, 349, 356, 362, 367, 416, 423, 430, 454, 476, 477, 478, 479, 480, 481, 482, 514, 528, 529, 531, 533, 536, 562, 565, 572, 577, 592, 626, 656, 671, 691, 692, 693, 694, 696, 697, 706, 708, 709, 710, 713, 724, 741, 744, 754, 767, 813, 868, 886], "roll": [9, 109, 124, 754, 822], "laura": [9, 197, 246, 886], "gwilliam": [9, 197, 246, 886], "nyu": [9, 37, 101, 120, 134, 172, 228, 886], "jean": [9, 10, 11, 12, 13, 14, 16, 18, 71, 78, 186, 197, 201, 206, 246, 562, 571, 666, 861, 868, 886], "remi": [9, 10, 11, 12, 13, 14, 16, 18, 886], "king": [9, 10, 11, 12, 13, 14, 16, 18, 197, 246, 886], "jeanremi": [9, 10, 11, 12, 13, 14, 16, 18], "alex": [9, 32, 38, 70, 71, 79, 83, 114, 115, 116, 120, 135, 136, 137, 186, 232, 233, 873, 886], "barach": [9, 12, 15, 88, 197, 246, 413, 886], "create_info": [9, 14, 15, 19, 63, 65, 70, 114, 125, 160, 189, 191, 223, 267, 269, 271, 413, 420, 482, 625, 876, 886], "time_frequ": [9, 21, 32, 33, 34, 92, 103, 111, 112, 114, 167, 203, 223, 225, 230, 231, 232, 233, 241, 242, 276, 418, 421, 426, 470, 876, 884, 886], "averagetfr": [9, 112, 114, 265, 268, 269, 319, 438, 470, 709, 728, 736, 737, 738, 739, 814, 876, 886], "stratifiedkfold": [9, 10, 15, 16, 430, 886], "make_pipelin": [9, 10, 11, 12, 13, 15, 18, 138, 197, 428], "labelencod": 9, "motor": [9, 17, 20, 27, 32, 75, 83, 109, 112, 145, 182, 197, 212, 266, 271, 314, 330, 365, 382, 413, 420, 442, 496, 559, 886], "imageri": [9, 17, 20, 27, 112, 197, 266, 271, 314, 330, 365, 382, 413, 442, 496, 559, 886], "n_split": [9, 10, 12, 15, 16, 19, 430], "speed": [9, 10, 11, 19, 32, 33, 41, 42, 44, 50, 74, 82, 83, 84, 94, 103, 109, 113, 135, 136, 142, 146, 152, 159, 162, 163, 166, 173, 180, 181, 184, 196, 197, 200, 206, 208, 210, 213, 229, 230, 236, 238, 266, 267, 273, 274, 277, 278, 280, 281, 282, 418, 419, 425, 469, 481, 482, 535, 536, 562, 649, 724, 754, 784, 786, 807, 812, 817, 843, 845, 865, 869, 874, 886], "shuffl": [9, 10, 12, 15, 233, 886], "n_cycl": [9, 32, 107, 110, 112, 114, 167, 203, 230, 231, 232, 233, 242, 426, 545, 546, 712, 715, 720, 722, 732, 733, 734, 736, 737], "mani": [9, 44, 70, 74, 112, 120, 121, 127, 141, 143, 147, 150, 151, 152, 153, 156, 159, 161, 162, 163, 167, 168, 172, 173, 178, 191, 196, 200, 201, 202, 203, 204, 206, 207, 208, 223, 225, 228, 241, 243, 257, 258, 259, 266, 267, 271, 276, 278, 299, 350, 356, 437, 442, 455, 472, 562, 655, 691, 701, 706, 707, 754, 770, 780, 797, 799, 800, 841, 843, 845, 848, 849, 861, 863, 865, 868, 870, 872, 874, 886], "cycl": [9, 107, 114, 185, 203, 242, 243, 266, 267, 343, 426, 481, 482, 545, 546, 562, 712, 715, 720, 722, 732, 733, 734, 736, 737, 778, 784, 787, 799, 807, 845, 886], "min_freq": 9, "max_freq": 9, "n_freq": [9, 114, 196, 232, 242, 418, 426, 686, 696, 697, 706, 707, 708, 709, 722, 724, 725, 731, 732, 733, 734, 736, 737], "bin": [9, 22, 27, 70, 98, 102, 120, 123, 143, 145, 172, 203, 211, 213, 230, 236, 241, 243, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 292, 299, 421, 481, 482, 488, 503, 583, 617, 686, 690, 691, 693, 694, 696, 697, 707, 708, 710, 778, 786, 790, 844, 845, 848, 849, 850, 851, 856, 868, 886], "tupl": [9, 115, 151, 171, 172, 173, 196, 206, 217, 219, 232, 233, 260, 261, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 289, 290, 304, 315, 324, 325, 362, 388, 413, 420, 428, 446, 447, 450, 453, 480, 481, 482, 489, 491, 492, 493, 496, 497, 498, 504, 508, 517, 519, 528, 545, 546, 561, 562, 565, 570, 577, 579, 580, 582, 593, 618, 624, 625, 657, 658, 659, 671, 683, 691, 693, 694, 696, 697, 698, 706, 708, 709, 710, 718, 725, 741, 744, 754, 755, 763, 768, 771, 773, 774, 776, 778, 782, 783, 785, 786, 788, 790, 792, 793, 795, 797, 800, 802, 806, 808, 809, 812, 813, 814, 816, 817, 818, 822, 886], "linspac": [9, 19, 32, 40, 42, 68, 70, 113, 117, 137, 142, 151, 173, 178, 196, 200, 207, 208, 223, 224, 243], "freq_rang": [9, 243], "infer": [9, 10, 43, 44, 113, 157, 166, 171, 203, 218, 219, 229, 233, 234, 235, 246, 266, 267, 268, 269, 272, 273, 274, 277, 280, 281, 282, 299, 300, 320, 324, 356, 360, 361, 365, 371, 372, 373, 413, 420, 443, 444, 446, 456, 457, 473, 476, 478, 479, 481, 482, 489, 491, 496, 540, 562, 637, 684, 690, 693, 694, 695, 696, 697, 699, 706, 708, 710, 767, 792, 793, 794, 801, 807, 816, 839, 841, 852, 868, 886], "gap": [9, 127, 246, 478, 479, 481, 482, 500, 807, 868, 886], "window_spac": 9, "centered_w_tim": 9, "n_window": [9, 583], "len": [9, 10, 15, 16, 18, 19, 28, 32, 39, 41, 42, 43, 45, 47, 52, 63, 67, 68, 70, 72, 74, 90, 93, 100, 114, 117, 138, 141, 144, 145, 157, 160, 169, 177, 179, 184, 186, 192, 196, 200, 201, 202, 203, 204, 206, 208, 209, 211, 212, 213, 218, 224, 225, 228, 229, 230, 232, 233, 243, 260, 261, 263, 264, 266, 267, 268, 269, 271, 275, 277, 278, 279, 290, 304, 355, 362, 415, 423, 448, 451, 481, 482, 528, 655, 686, 708, 709, 722, 732, 741, 754, 759, 785, 807, 815, 816, 886], "instanti": [9, 145, 173, 197, 206, 223, 261, 263, 264, 265, 266, 267, 271, 275, 276, 278, 314, 482, 708, 710, 756, 767, 886], "encod": [9, 19, 127, 144, 145, 151, 167, 169, 173, 189, 196, 197, 210, 211, 212, 246, 252, 271, 348, 419, 489, 496, 504, 505, 506, 618, 839, 841, 868, 874, 886], "le": 9, "59999": [9, 185], "374": [9, 13, 81, 170, 217, 233], "loop": [9, 32, 42, 60, 109, 120, 136, 138, 150, 178, 182, 201, 233, 238, 243, 246, 406, 434, 573, 583, 594, 754, 862, 868, 886], "init": [9, 377, 845, 850], "freq_scor": 9, "fmin": [9, 32, 103, 104, 108, 113, 114, 116, 133, 138, 223, 241, 242, 243, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 418, 481, 482, 535, 536, 706, 707, 708, 709, 710, 711, 713, 714, 716, 724, 725, 735, 738, 754, 773, 808, 812, 814, 817, 818, 886], "fmax": [9, 32, 74, 103, 104, 108, 113, 114, 116, 133, 138, 167, 200, 204, 213, 223, 241, 242, 243, 266, 267, 268, 269, 418, 481, 482, 535, 536, 706, 707, 708, 709, 710, 711, 713, 714, 716, 724, 725, 735, 738, 754, 769, 808, 814, 886], "enumer": [9, 10, 15, 19, 28, 39, 40, 47, 71, 79, 94, 96, 104, 107, 112, 114, 135, 136, 137, 147, 150, 151, 152, 160, 196, 203, 206, 208, 212, 224, 233, 238, 243], "being": [9, 45, 79, 114, 116, 127, 137, 161, 167, 172, 173, 201, 203, 208, 209, 211, 217, 225, 228, 230, 233, 263, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 364, 367, 447, 457, 471, 481, 482, 517, 562, 583, 585, 629, 706, 708, 710, 754, 772, 785, 788, 790, 791, 808, 813, 818, 845, 867, 868, 886], "w_size": 9, "isol": [9, 45, 114, 202, 206, 208, 886], "raw_filt": [9, 114, 142, 204, 206], "pad": [9, 15, 114, 127, 228, 233, 243, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 323, 448, 451, 452, 453, 481, 482, 725, 886], "drop_bad": [9, 16, 143, 152, 192, 202, 266, 267, 316, 470, 562, 708, 709, 868, 886], "fold": [9, 10, 12, 15, 16, 26, 138, 272, 277, 430, 669, 672], "roc_auc": [9, 11, 13, 197, 416, 423], "axi": [9, 10, 12, 14, 15, 16, 19, 21, 22, 28, 31, 35, 45, 58, 60, 68, 70, 72, 84, 90, 96, 100, 104, 107, 109, 110, 112, 113, 114, 115, 116, 117, 119, 127, 133, 135, 138, 141, 142, 143, 145, 151, 152, 157, 161, 167, 173, 182, 184, 186, 192, 196, 197, 201, 203, 213, 217, 220, 223, 228, 231, 233, 236, 238, 242, 243, 246, 258, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 277, 280, 281, 282, 289, 316, 323, 367, 413, 420, 426, 433, 453, 472, 481, 482, 492, 561, 562, 576, 577, 659, 683, 685, 693, 694, 696, 697, 700, 706, 708, 710, 735, 738, 754, 767, 770, 771, 778, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 797, 799, 801, 802, 806, 807, 808, 809, 814, 815, 816, 851, 868, 886], "701": [9, 20, 136], "205": [9, 170, 185, 210, 216, 233], "281": [9, 170, 210], "629": [9, 210, 233], "17": [9, 10, 11, 12, 13, 19, 26, 28, 32, 34, 35, 41, 43, 45, 47, 50, 56, 58, 60, 61, 71, 78, 79, 81, 83, 84, 85, 90, 103, 108, 109, 112, 114, 115, 123, 138, 146, 150, 152, 155, 157, 158, 159, 161, 170, 172, 173, 177, 178, 181, 182, 183, 184, 185, 186, 189, 192, 197, 209, 210, 213, 214, 223, 228, 229, 230, 232, 233, 235, 236, 238, 243, 245, 246, 266, 267, 268, 269, 273, 276, 277, 278, 279, 281, 282, 290, 299, 356, 358, 361, 362, 373, 413, 420, 422, 480, 481, 482, 529, 535, 536, 594, 659, 671, 694, 706, 722, 732, 733, 736, 771, 812, 818, 862, 868], "165": [9, 147, 170, 178, 203, 206, 210, 212, 228, 232, 233, 246], "031": [9, 80, 85, 128, 141, 150, 170, 185, 225], "581": [9, 210, 233], "139": [9, 102, 170, 182, 197, 199, 210, 225, 228, 233, 279, 886], "869": 9, "549": [9, 209, 246], "22": [9, 11, 13, 14, 15, 16, 19, 21, 28, 32, 34, 35, 39, 40, 44, 45, 47, 56, 59, 81, 88, 90, 103, 104, 108, 109, 110, 114, 127, 130, 133, 138, 151, 156, 170, 172, 177, 181, 184, 189, 192, 196, 197, 206, 209, 210, 225, 228, 229, 230, 232, 233, 236, 237, 238, 241, 246, 266, 267, 268, 269, 278, 279, 314, 337, 341, 342, 362, 406, 452, 481, 482, 502, 517, 522, 562, 565, 608, 625, 642, 651, 701, 725, 770, 798, 808, 844, 868], "121": [9, 64, 66, 91, 141, 146, 167, 170, 171, 177, 228, 232, 233, 266, 267, 436], "756": [9, 197, 233], "523": [9, 233], "bar": [9, 135, 144, 151, 172, 184, 219, 220, 243, 263, 266, 267, 268, 269, 275, 276, 413, 416, 420, 423, 481, 482, 561, 562, 706, 708, 710, 754, 778, 783, 784, 785, 786, 790, 793, 797, 801, 806, 807, 809, 814, 823, 868, 886], "width": [9, 114, 127, 135, 161, 173, 200, 203, 204, 220, 228, 243, 264, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 315, 323, 328, 415, 424, 449, 451, 452, 472, 481, 482, 598, 706, 720, 722, 732, 735, 736, 738, 754, 763, 782, 783, 810, 812, 813, 817, 841, 865, 868, 886], "edgecolor": [9, 10, 242], "black": [9, 21, 45, 47, 48, 50, 112, 136, 143, 152, 161, 191, 208, 212, 263, 264, 266, 267, 268, 269, 273, 274, 275, 277, 280, 281, 282, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 754, 767, 770, 771, 782, 786, 788, 792, 793, 797, 805, 806, 808, 809, 812, 814, 815, 816, 817, 886], "xtick": [9, 15, 19, 90, 127, 196, 203, 213, 228], "tf_score": 9, "center": [9, 37, 45, 68, 70, 80, 90, 95, 112, 120, 121, 135, 152, 157, 159, 161, 171, 186, 200, 202, 203, 204, 208, 228, 243, 257, 258, 268, 269, 272, 277, 307, 422, 492, 515, 526, 562, 571, 655, 658, 663, 669, 672, 706, 744, 754, 758, 794, 805, 813, 862, 868, 873, 886], "w_tmin": 9, "w_tmax": 9, "av_tfr": 9, "newaxi": [9, 15, 28, 100, 117, 233, 236, 237, 238, 754], "white": [9, 24, 26, 41, 52, 109, 112, 116, 121, 126, 127, 133, 135, 136, 143, 157, 159, 160, 161, 177, 179, 191, 211, 224, 228, 233, 258, 264, 266, 267, 268, 269, 272, 273, 274, 277, 279, 280, 281, 282, 371, 471, 481, 482, 515, 548, 549, 611, 629, 654, 706, 708, 710, 754, 770, 772, 782, 792, 794, 812, 815, 817, 841, 861, 886], "vmin": [9, 13, 19, 88, 107, 112, 114, 116, 117, 137, 142, 161, 177, 196, 197, 211, 212, 228, 230, 231, 242, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 706, 708, 710, 754, 771, 785, 786, 793, 797, 806, 809, 814, 815, 816, 886], "red": [9, 54, 59, 70, 80, 81, 83, 100, 112, 132, 133, 143, 145, 151, 157, 161, 171, 179, 182, 191, 196, 200, 201, 204, 208, 211, 212, 220, 233, 236, 242, 243, 262, 263, 264, 266, 267, 268, 269, 272, 275, 413, 420, 481, 482, 561, 562, 577, 628, 706, 708, 710, 754, 769, 771, 778, 779, 782, 785, 786, 788, 793, 797, 806, 809, 814, 816, 841, 845, 886], "decoding_csp_timefreq": [9, 20], "supervis": [10, 18, 88, 138, 413, 430], "class": [10, 16, 19, 60, 69, 88, 94, 95, 114, 115, 138, 141, 143, 150, 152, 158, 166, 167, 169, 172, 173, 176, 196, 202, 203, 206, 217, 220, 223, 233, 244, 245, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 290, 304, 314, 315, 367, 397, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 454, 480, 481, 482, 513, 528, 561, 562, 563, 591, 656, 686, 706, 707, 708, 709, 710, 741, 742, 743, 744, 749, 750, 751, 754, 755, 756, 765, 841, 845, 853, 854, 861, 863, 868, 869, 871, 876, 877, 886], "rel": [10, 24, 32, 33, 34, 42, 61, 75, 86, 109, 112, 113, 127, 135, 138, 141, 143, 145, 157, 167, 169, 171, 190, 193, 200, 203, 204, 208, 211, 212, 213, 219, 242, 243, 258, 259, 261, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 311, 360, 367, 419, 434, 437, 449, 481, 482, 526, 562, 589, 592, 608, 644, 646, 662, 699, 706, 709, 711, 712, 713, 725, 754, 767, 772, 787, 792, 801, 805, 807, 815, 841, 845, 861, 868, 871, 886], "character": [10, 13, 197, 246, 562, 668, 800, 868], "confus": [10, 15, 138, 145, 193, 666, 845], "serv": [10, 169, 218, 233, 263, 266, 267, 268, 269, 275, 283, 413, 420, 481, 482, 561, 562, 577, 706, 708, 709, 710, 752, 770, 771, 786, 793, 797, 806, 809, 814, 816, 845, 867, 868], "proxi": [10, 206, 210], "mental": [10, 13, 197, 246], "rsa": [10, 852, 862, 886], "24": [10, 11, 13, 19, 20, 21, 26, 28, 34, 35, 42, 45, 46, 47, 52, 56, 64, 81, 103, 108, 109, 112, 114, 115, 118, 119, 123, 130, 145, 153, 155, 170, 172, 182, 184, 190, 192, 196, 197, 199, 210, 211, 225, 227, 228, 229, 230, 232, 233, 236, 237, 238, 243, 246, 248, 260, 264, 266, 267, 268, 269, 271, 272, 276, 279, 299, 345, 351, 363, 365, 392, 421, 443, 444, 445, 446, 456, 478, 481, 482, 489, 496, 505, 510, 522, 529, 562, 565, 701, 705, 706, 708, 709, 710, 742, 744, 751, 754, 764, 772, 777, 784, 801, 807, 808, 816, 819, 823, 832, 861, 868], "imag": [10, 16, 27, 30, 32, 33, 35, 40, 44, 46, 55, 59, 70, 79, 88, 112, 120, 122, 124, 127, 128, 130, 135, 137, 144, 147, 150, 156, 157, 160, 161, 167, 171, 177, 181, 183, 191, 192, 200, 203, 206, 207, 208, 209, 225, 228, 229, 231, 232, 233, 242, 243, 246, 257, 263, 266, 267, 268, 269, 271, 275, 276, 278, 279, 281, 282, 291, 292, 293, 294, 299, 300, 305, 309, 314, 315, 323, 340, 355, 362, 368, 391, 413, 420, 473, 476, 478, 479, 481, 482, 490, 502, 529, 561, 562, 577, 589, 591, 621, 655, 661, 662, 663, 664, 665, 666, 667, 668, 706, 708, 710, 722, 732, 742, 743, 744, 754, 755, 757, 770, 771, 772, 785, 786, 790, 792, 793, 797, 799, 806, 809, 814, 815, 816, 818, 822, 824, 841, 846, 851, 852, 862, 871, 873, 886], "92": [10, 19, 34, 35, 39, 44, 79, 81, 103, 112, 114, 144, 163, 170, 181, 186, 197, 202, 210, 228, 229, 230, 232, 233, 237, 238, 526, 868], "human": [10, 19, 33, 58, 94, 113, 126, 145, 152, 156, 179, 181, 196, 225, 246, 266, 267, 268, 269, 277, 292, 299, 376, 390, 415, 419, 424, 449, 451, 452, 481, 482, 567, 695, 722, 732, 733, 736, 841, 842, 852, 861, 862, 874], "anim": [10, 137, 268, 269, 862, 886], "inanim": [10, 862], "bodi": [10, 208, 209, 744, 862], "part": [10, 119, 127, 135, 141, 143, 145, 152, 156, 159, 161, 162, 163, 172, 183, 200, 203, 204, 208, 213, 217, 225, 246, 257, 266, 268, 269, 271, 272, 281, 282, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 442, 456, 457, 476, 478, 479, 481, 483, 502, 535, 536, 540, 634, 683, 693, 694, 696, 697, 706, 709, 754, 771, 790, 794, 841, 845, 846, 867, 868, 869, 871, 874, 886], "6gb": 10, "build": [10, 12, 21, 32, 45, 156, 173, 176, 192, 200, 201, 203, 228, 236, 237, 238, 843, 849, 851, 867, 874, 886], "jaakko": [10, 192, 886], "leppakanga": [10, 192, 886], "jaeilepp": [10, 192], "student": [10, 192, 845], "jyu": [10, 192], "panda": [10, 14, 101, 112, 141, 144, 148, 149, 150, 152, 166, 172, 191, 192, 211, 217, 229, 241, 260, 261, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 437, 481, 482, 621, 692, 706, 708, 709, 710, 844, 845, 868, 886], "read_csv": [10, 191, 192], "standardscal": [10, 11, 13, 18, 197, 422], "linear_model": [10, 11, 12, 13, 15, 18, 197, 874], "logisticregress": [10, 11, 13, 15, 197, 417, 428], "metric": [10, 15, 27, 36, 56, 90, 117, 138, 197, 213, 263, 268, 270, 271, 277, 366, 416, 419, 423, 528, 540, 541, 544, 560, 562, 615, 624, 626, 754, 800, 867, 876, 881, 886], "roc_auc_scor": [10, 416, 423, 876], "manifold": [10, 117, 119, 771], "md": [10, 246, 659], "visual_92_categori": [10, 862, 876, 886], "stimulu": [10, 13, 33, 34, 49, 69, 71, 73, 81, 82, 90, 93, 107, 120, 141, 143, 144, 145, 147, 150, 163, 167, 168, 169, 170, 181, 184, 189, 192, 193, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 217, 218, 219, 220, 225, 232, 238, 243, 258, 260, 266, 267, 268, 269, 271, 316, 348, 356, 419, 437, 442, 481, 482, 559, 565, 671, 706, 708, 709, 710, 841, 862, 868, 886], "fname": [10, 12, 21, 53, 65, 78, 86, 87, 112, 119, 120, 128, 131, 161, 171, 206, 258, 260, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 276, 277, 278, 279, 280, 281, 282, 290, 303, 314, 315, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 353, 354, 443, 444, 445, 446, 481, 482, 484, 485, 486, 487, 490, 495, 499, 500, 501, 502, 505, 509, 510, 511, 512, 513, 514, 543, 547, 551, 552, 561, 562, 604, 605, 606, 607, 610, 612, 613, 614, 615, 616, 617, 619, 622, 623, 624, 625, 626, 627, 630, 632, 633, 634, 635, 636, 637, 639, 641, 652, 706, 707, 708, 709, 710, 726, 727, 728, 739, 741, 748, 827, 828, 829, 830, 832, 833, 834, 837, 838, 839, 840, 872, 886], "visual_stimuli": 10, "csv": [10, 123, 192, 219, 260, 332, 338, 505, 612, 886], "cond": [10, 40, 46, 59, 61, 99, 101, 151, 233, 238, 259], "restrict": [10, 28, 29, 104, 126, 143, 152, 159, 162, 167, 179, 204, 205, 208, 209, 217, 224, 228, 231, 232, 243, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 280, 281, 282, 286, 287, 299, 300, 459, 460, 481, 482, 529, 530, 531, 532, 533, 535, 536, 545, 546, 554, 555, 558, 559, 560, 669, 706, 708, 709, 710, 717, 723, 872, 886], "max_trigg": 10, "row": [10, 73, 101, 112, 127, 142, 143, 144, 145, 146, 151, 167, 170, 173, 176, 192, 197, 212, 217, 228, 229, 261, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 301, 360, 371, 413, 419, 420, 437, 481, 482, 505, 541, 544, 562, 563, 583, 691, 692, 706, 707, 708, 709, 710, 754, 780, 785, 793, 797, 800, 868, 871, 886], "cond_tag": 10, "els": [10, 15, 28, 31, 40, 47, 94, 96, 114, 152, 161, 176, 192, 203, 208, 217, 228, 243, 263, 264, 266, 267, 268, 269, 271, 275, 290, 304, 413, 420, 481, 482, 521, 528, 562, 563, 655, 661, 662, 663, 664, 665, 666, 667, 668, 689, 708, 710, 733, 734, 741, 782, 786, 807, 844, 845, 869, 886], "str": [10, 30, 39, 41, 101, 128, 144, 146, 151, 172, 184, 196, 229, 243, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 597, 598, 600, 601, 602, 603, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 634, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 683, 685, 687, 689, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 724, 725, 728, 729, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 746, 749, 750, 751, 753, 754, 757, 759, 762, 764, 766, 769, 770, 771, 772, 773, 774, 775, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 821, 823, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 845, 886], "bodypart": 10, "natur": [10, 19, 126, 173, 196, 232, 246, 390, 419, 453, 598, 862, 868, 871, 886], "n_run": 10, "sample_subject_": 10, "_tsss_mc": 10, "on_split_miss": [10, 481, 502, 886], "ignor": [10, 41, 47, 69, 79, 81, 109, 136, 141, 147, 152, 163, 167, 173, 182, 185, 192, 200, 201, 202, 208, 228, 258, 261, 263, 264, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 280, 281, 282, 284, 285, 286, 287, 299, 300, 318, 326, 341, 350, 351, 356, 360, 362, 363, 365, 367, 371, 372, 377, 379, 380, 381, 384, 385, 386, 388, 393, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 413, 420, 422, 432, 440, 442, 447, 449, 454, 460, 463, 470, 476, 478, 479, 481, 482, 483, 492, 494, 498, 502, 510, 540, 557, 561, 562, 565, 573, 583, 594, 614, 618, 620, 621, 629, 643, 645, 648, 654, 655, 671, 693, 695, 706, 708, 709, 710, 751, 771, 782, 783, 784, 786, 787, 790, 793, 797, 798, 806, 807, 808, 809, 814, 816, 832, 834, 836, 841, 845, 886], "filenam": [10, 43, 44, 71, 73, 76, 81, 82, 83, 93, 127, 136, 141, 142, 147, 152, 157, 158, 168, 169, 173, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 219, 220, 225, 258, 260, 261, 263, 266, 267, 268, 269, 272, 276, 279, 290, 303, 311, 314, 353, 354, 443, 444, 446, 456, 466, 472, 480, 481, 482, 485, 501, 502, 507, 511, 513, 524, 525, 605, 610, 612, 617, 619, 621, 623, 624, 627, 628, 629, 630, 633, 637, 641, 645, 652, 655, 671, 707, 726, 748, 754, 762, 807, 827, 828, 829, 831, 834, 835, 836, 839, 851, 886], "min_dur": [10, 213, 214, 454, 564], "002": [10, 13, 32, 33, 121, 128, 141, 142, 143, 146, 150, 167, 170, 189, 196, 197, 202, 203, 205, 208, 213, 217, 220, 225, 246, 454], "specif": [10, 19, 27, 43, 44, 45, 70, 105, 106, 112, 120, 127, 136, 138, 142, 144, 145, 151, 152, 156, 161, 162, 171, 172, 173, 176, 190, 191, 192, 193, 200, 201, 203, 204, 206, 208, 209, 211, 213, 217, 220, 225, 228, 229, 230, 233, 241, 242, 243, 246, 260, 262, 263, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 280, 281, 282, 289, 299, 314, 413, 420, 437, 442, 444, 448, 454, 481, 482, 483, 496, 515, 538, 539, 559, 560, 561, 562, 568, 573, 577, 582, 583, 594, 628, 634, 655, 685, 692, 706, 707, 708, 709, 710, 722, 732, 736, 754, 773, 778, 785, 786, 793, 797, 806, 807, 809, 812, 814, 815, 817, 818, 835, 841, 845, 849, 852, 860, 862, 867, 868, 869, 871, 874, 875, 886], "appel": 10, "dissimilar": 10, "rdm": 10, "cichi": [10, 246, 862], "et": [10, 16, 19, 21, 196, 203, 205, 243, 257, 266, 267, 570, 868, 873, 886], "al": [10, 16, 19, 21, 196, 203, 205, 243, 266, 267, 570, 868, 886], "multiclass": [10, 246, 413, 430, 886], "multinomi": 10, "logist": [10, 11, 15, 18, 197], "paper": [10, 16, 203, 207, 246, 299, 476, 529, 562, 666, 860, 868], "pairwis": [10, 47, 70, 117, 246, 570], "binari": [10, 99, 161, 193, 197, 218, 264, 414, 430, 454, 497, 498, 503, 506, 616, 686, 692, 704, 831, 843, 850, 851, 868, 871, 886], "roc": [10, 13, 667], "auc": [10, 13, 197, 667], "final": [10, 16, 19, 42, 67, 69, 70, 79, 83, 84, 112, 113, 114, 127, 135, 138, 141, 142, 145, 147, 151, 152, 157, 161, 163, 167, 172, 180, 182, 183, 191, 196, 201, 202, 206, 207, 208, 211, 212, 228, 230, 232, 233, 236, 238, 243, 266, 267, 268, 269, 320, 331, 419, 456, 481, 482, 656, 824, 845, 861, 865, 867, 886], "sake": [10, 127, 202, 232, 872], "did": [10, 11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 83, 104, 107, 108, 110, 124, 161, 162, 163, 167, 171, 173, 176, 177, 182, 203, 206, 208, 209, 223, 224, 236, 238, 271, 279, 863, 871, 886], "instant": [10, 13, 42, 120, 178, 184, 197, 264, 268, 269, 289, 355, 456, 680, 681, 682, 706, 711, 712, 713, 714, 715, 716, 717, 789, 791, 793], "50m": 10, "300m": 10, "focu": [10, 12, 83, 127, 145, 202, 203, 851, 886], "liblinear": [10, 11, 13, 15, 18, 197], "multi_class": [10, 15], "y_pred": [10, 12, 19, 138, 416, 417, 419, 423, 886], "probabilist": [10, 246, 356, 416, 417, 423, 868, 874], "necessari": [10, 21, 31, 73, 94, 127, 136, 147, 152, 156, 157, 159, 161, 162, 167, 170, 172, 181, 200, 202, 203, 204, 205, 206, 207, 208, 214, 217, 218, 223, 228, 259, 266, 267, 268, 269, 270, 273, 274, 277, 278, 280, 281, 282, 299, 300, 318, 320, 327, 360, 377, 413, 420, 422, 437, 448, 456, 480, 481, 482, 489, 496, 501, 529, 594, 602, 612, 619, 623, 651, 670, 706, 708, 709, 710, 754, 793, 812, 817, 841, 845, 861, 862, 866, 867, 868, 871, 886], "predict_proba": [10, 416, 417, 423], "ii": [10, 15, 19, 39, 93, 99, 107, 119, 136, 160, 184, 186, 191, 196, 213, 228, 238, 246, 273, 274, 277, 280, 281, 282, 322, 416, 423, 490, 562, 655, 692, 771, 886], "train_class": 10, "jj": 10, "im": [10, 13, 15, 22, 70, 115, 137, 197, 757, 816, 824, 886], "matshow": [10, 13], "rdbu_r": [10, 13, 16, 19, 22, 107, 114, 196, 197, 230, 231, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 771, 785, 786, 790, 793, 797, 806, 809, 814, 815, 816, 845], "set_ytick": 10, "set_yticklabel": [10, 112], "set_xtick": [10, 243], "set_xticklabel": [10, 243], "colorbar": [10, 13, 15, 22, 70, 71, 107, 112, 114, 115, 116, 120, 127, 137, 143, 147, 151, 177, 183, 197, 208, 212, 220, 228, 229, 230, 232, 233, 263, 266, 267, 268, 269, 273, 274, 275, 277, 280, 281, 282, 413, 420, 481, 482, 561, 562, 577, 706, 707, 708, 710, 754, 768, 771, 773, 778, 779, 780, 785, 786, 790, 791, 793, 797, 806, 809, 812, 814, 815, 816, 817, 818, 886], "tight_layout": [10, 12, 15, 19, 39, 41, 58, 70, 72, 86, 114, 115, 120, 135, 177, 182, 196, 203, 208, 211, 212, 225, 228, 232, 233, 886], "relat": [10, 12, 19, 27, 32, 33, 34, 70, 77, 101, 105, 106, 112, 117, 128, 132, 137, 145, 147, 154, 155, 156, 159, 161, 163, 166, 167, 173, 174, 179, 189, 190, 193, 196, 197, 200, 202, 203, 205, 206, 207, 210, 211, 212, 219, 229, 236, 242, 243, 246, 266, 267, 268, 269, 271, 276, 289, 316, 331, 355, 396, 419, 420, 437, 449, 454, 470, 481, 482, 553, 562, 570, 621, 655, 685, 706, 754, 767, 775, 778, 785, 800, 801, 807, 815, 826, 841, 843, 845, 848, 860, 862, 863, 865, 866, 867, 868, 869, 874, 886], "histor": [10, 151, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 337, 481, 482, 706, 709, 868, 874, 886], "summar": [10, 45, 113, 152, 204, 206, 217, 266, 267, 273, 274, 277, 280, 281, 282, 778, 785, 861, 867, 872, 886], "dimension": [10, 151, 176, 197, 201, 207, 208, 217, 233, 236, 237, 238, 246, 268, 269, 273, 274, 277, 280, 281, 282, 356, 421, 426, 428, 562, 686, 706, 754, 788, 841, 868, 886], "reduct": [10, 17, 20, 27, 114, 192, 204, 212, 213, 246, 266, 267, 268, 269, 271, 371, 375, 412, 421, 427, 481, 559, 562, 563, 594, 602, 621, 734, 737, 886], "multi": [10, 16, 27, 36, 46, 56, 83, 104, 126, 171, 190, 197, 203, 236, 237, 238, 246, 263, 264, 266, 267, 268, 269, 270, 271, 275, 281, 304, 390, 413, 414, 418, 420, 429, 452, 454, 456, 479, 481, 482, 524, 528, 529, 531, 535, 536, 540, 561, 562, 576, 577, 613, 615, 616, 641, 706, 708, 710, 724, 729, 771, 786, 793, 797, 806, 809, 814, 816, 820, 852, 868, 871, 886], "cluster": [10, 27, 98, 102, 112, 166, 229, 234, 235, 239, 240, 243, 246, 266, 268, 269, 271, 277, 278, 279, 320, 355, 362, 436, 454, 481, 528, 529, 543, 559, 621, 634, 636, 641, 678, 686, 687, 689, 693, 694, 696, 697, 698, 709, 736, 754, 813, 883, 886], "togeth": [10, 43, 70, 74, 142, 150, 152, 167, 173, 176, 189, 200, 206, 208, 211, 212, 217, 223, 233, 266, 267, 268, 269, 276, 285, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 435, 456, 457, 476, 478, 479, 481, 482, 506, 540, 562, 593, 620, 637, 640, 693, 694, 696, 697, 724, 794, 834, 839, 841, 845, 886], "precomput": [10, 157, 182, 192, 266, 267, 362, 481, 482, 562, 654, 784, 801, 807, 886], "colormap": [10, 24, 58, 109, 112, 113, 116, 127, 135, 137, 143, 161, 208, 243, 263, 266, 267, 268, 269, 273, 274, 275, 277, 280, 281, 282, 413, 420, 481, 482, 561, 562, 577, 698, 706, 707, 708, 710, 754, 769, 771, 773, 778, 780, 785, 786, 790, 793, 796, 797, 806, 809, 812, 814, 815, 816, 817, 818, 836, 845, 886], "rainbow": 10, "sel": [10, 31, 229, 553, 556, 558, 559, 641, 707], "this_nam": 10, "scatter": [10, 45, 115, 228, 772, 886], "facecolor": [10, 47, 135, 152, 228], "scatterpoint": 10, "ncol": [10, 15, 73, 112, 120, 127, 138, 147, 152, 177, 184, 212, 268, 269, 413, 420, 562, 793, 797, 871, 886], "shepard": [10, 246], "multidimension": [10, 228, 246, 416, 423, 430], "tree": [10, 246, 871], "scienc": [10, 13, 33, 40, 101, 113, 181, 197, 225, 229, 243, 246, 257, 292, 299, 396, 478, 529, 562, 862, 868, 873], "210": [10, 13, 35, 81, 87, 124, 151, 170, 197, 210, 213, 232, 233, 246], "4468": [10, 19, 246], "390": [10, 12, 13, 21, 81, 210, 228, 233, 246], "398": [10, 13, 81, 233, 246], "1980": [10, 152, 246], "1126": [10, 210, 246], "aarr": [10, 246], "laakso": [10, 246], "garrison": [10, 246], "cottrel": [10, 246], "content": [10, 27, 105, 159, 167, 170, 173, 203, 204, 207, 212, 220, 242, 246, 266, 267, 270, 276, 389, 390, 445, 513, 762, 778, 785, 841, 845, 850, 886], "assess": [10, 13, 138, 157, 163, 171, 200, 246, 529, 540, 562, 663, 668, 865, 868], "neural": [10, 18, 19, 22, 27, 33, 62, 66, 70, 71, 83, 117, 138, 152, 179, 181, 197, 200, 203, 206, 209, 213, 225, 243, 244, 246, 271, 292, 299, 300, 375, 413, 417, 419, 420, 476, 481, 482, 562, 571, 592, 841, 846, 862, 886], "philosoph": [10, 246, 529, 868], "76": [10, 13, 15, 16, 18, 19, 34, 35, 46, 47, 79, 80, 81, 103, 108, 109, 112, 114, 119, 160, 170, 177, 192, 197, 210, 228, 229, 230, 232, 233, 236, 237, 238, 246, 687, 771], "09515080050002726": [10, 246], "nikolau": [10, 246], "kriegeskort": [10, 246], "mariek": [10, 246], "mur": [10, 246], "peter": [10, 181, 241, 246, 266, 267, 268, 269, 481, 482, 529, 562, 708, 710, 725, 735, 738, 868, 886], "bandettini": [10, 246], "connect": [10, 38, 47, 70, 161, 167, 172, 225, 228, 246, 272, 291, 293, 299, 300, 377, 598, 686, 693, 694, 696, 697, 702, 774, 851, 852, 857, 876, 886], "branch": [10, 246, 845], "neuro": [10, 86, 246, 886], "radoslaw": [10, 246, 862], "aud": [10, 28, 29, 37, 39, 49, 92, 99, 104, 107, 108, 151, 233, 246, 266, 778, 862], "oliva": [10, 246, 862], "resolv": [10, 181, 206, 211, 246, 717, 849, 862, 886], "recognit": [10, 46, 101, 152, 203, 246, 735, 738, 862], "455": [10, 228, 233, 246, 279, 862], "462": [10, 33, 56, 246, 279, 862], "2014": [10, 12, 13, 18, 19, 40, 71, 113, 121, 152, 163, 197, 203, 246, 268, 269, 356, 417, 419, 420, 421, 431, 478, 571, 598, 688, 735, 738, 860, 862, 865], "1038": [10, 126, 196, 246, 390, 419, 862], "nn": [10, 179, 246, 279, 655, 862, 871, 886], "3635": [10, 19, 246, 862], "decoding_rsa_sgskip": [10, 20], "cortic": [11, 24, 26, 27, 31, 32, 41, 43, 58, 77, 80, 85, 90, 94, 109, 113, 122, 130, 156, 159, 164, 166, 167, 173, 176, 179, 181, 187, 192, 201, 225, 228, 237, 246, 258, 263, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 284, 286, 287, 299, 300, 362, 366, 391, 447, 458, 476, 478, 479, 481, 515, 529, 530, 531, 532, 533, 536, 540, 545, 546, 559, 560, 578, 611, 614, 615, 626, 629, 636, 663, 666, 668, 669, 670, 671, 672, 702, 754, 765, 813, 841, 843, 846, 849, 852, 862, 871, 874, 886], "univari": [11, 166, 197, 228, 229, 234, 235, 246, 266, 271, 481, 559, 621, 687, 689, 690, 694, 709, 736, 883, 886], "confin": [11, 47, 159, 232, 292, 868], "potenti": [11, 15, 47, 70, 71, 73, 78, 88, 101, 117, 127, 128, 142, 145, 154, 155, 166, 169, 173, 197, 201, 203, 205, 209, 228, 229, 232, 243, 246, 266, 267, 268, 269, 271, 272, 277, 311, 316, 355, 362, 371, 396, 452, 469, 470, 481, 482, 483, 553, 563, 570, 571, 621, 669, 672, 692, 699, 769, 778, 785, 815, 826, 861, 862, 865, 867, 868, 886], "relev": [11, 12, 26, 101, 112, 126, 152, 170, 181, 197, 203, 204, 205, 212, 246, 279, 374, 420, 562, 579, 705, 797, 799, 845, 860, 861, 865, 868, 871], "eric": [11, 19, 22, 26, 34, 39, 50, 57, 65, 72, 80, 84, 93, 94, 109, 118, 120, 123, 126, 127, 129, 135, 136, 137, 156, 158, 160, 180, 181, 183, 184, 185, 192, 196, 197, 210, 228, 232, 233, 236, 237, 238, 246, 272, 277, 391, 529, 602, 671, 693, 694, 696, 697, 860, 862, 873, 886], "larson": [11, 19, 22, 26, 34, 39, 50, 57, 65, 72, 80, 84, 93, 94, 109, 118, 120, 123, 126, 127, 129, 135, 136, 137, 160, 180, 181, 183, 184, 185, 192, 196, 197, 210, 228, 232, 236, 237, 238, 246, 266, 267, 268, 269, 272, 277, 391, 481, 482, 602, 671, 860, 862, 873, 886], "feature_select": 11, "selectkbest": 11, "f_classif": 11, "apply_inverse_epoch": [11, 28, 45, 273, 274, 277, 280, 281, 282, 529, 530, 532, 533, 876, 886], "read_inverse_oper": [11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 104, 107, 108, 110, 124, 167, 182, 224, 236, 238, 547, 876], "cross_val_multiscor": [11, 197, 876, 886], "linearmodel": [11, 18, 197, 876, 886], "slidingestim": [11, 197, 430, 876, 886], "get_coef": [11, 18, 197, 876, 886], "meg_path": [11, 13, 14, 15, 16, 22, 28, 30, 31, 35, 37, 39, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 68, 69, 71, 72, 76, 78, 86, 87, 88, 92, 93, 94, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 117, 118, 121, 131, 132, 133, 179, 180, 181, 182, 197, 225, 230, 231, 232, 233, 236, 237, 238], "fname_fwd": [11, 32, 33, 34, 41, 42, 43, 47, 48, 49, 54, 58, 178, 180, 224], "sample_audvi": [11, 22, 28, 29, 30, 31, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 68, 78, 86, 87, 90, 92, 93, 94, 95, 104, 107, 108, 110, 116, 119, 120, 124, 127, 131, 134, 150, 151, 167, 173, 176, 177, 178, 179, 180, 181, 182, 197, 224, 225, 236, 237, 238, 258, 266, 267, 268, 269, 481, 482], "sample_audvis_filt": [11, 13, 14, 15, 16, 18, 28, 42, 49, 69, 72, 73, 76, 88, 96, 97, 99, 100, 117, 121, 132, 133, 142, 146, 152, 153, 167, 170, 173, 178, 181, 197, 202, 206, 233, 236, 238, 868], "40_raw": [11, 13, 14, 15, 16, 18, 28, 42, 49, 69, 72, 73, 76, 88, 96, 97, 99, 100, 117, 121, 132, 133, 142, 146, 152, 153, 167, 170, 173, 178, 181, 197, 202, 206, 233, 236, 238, 868], "event_fnam": [11, 14, 15, 16, 18, 69, 88, 96, 97, 100, 117, 121, 132, 231, 232, 233, 236, 238], "ev": [11, 13, 14, 15, 16, 18, 28, 69, 88, 94, 96, 97, 100, 103, 104, 117, 121, 132, 141, 146, 152, 173, 202, 218, 231, 232, 233, 236, 238, 258, 621, 622, 831, 865, 886], "fname_cov": [11, 41, 48, 49, 50, 54, 55, 58, 64, 94, 177, 180, 182], "fname_inv": [11, 28, 29, 30, 38, 39, 44, 47, 57, 60, 104, 107, 108, 110, 124, 182, 224, 236, 238], "inv": [11, 28, 29, 30, 38, 39, 44, 45, 47, 52, 57, 60, 94, 104, 107, 108, 110, 124, 135, 157, 159, 161, 167, 173, 178, 179, 180, 182, 183, 192, 197, 224, 225, 236, 238, 258, 447, 534, 537, 540, 542, 543, 547, 811, 845, 861, 868, 886], "aud_r": [11, 14, 15, 42, 232], "vis_r": [11, 14, 15, 42, 88, 232], "contra": 11, "setup": [11, 15, 16, 18, 24, 43, 44, 45, 69, 70, 72, 88, 96, 97, 100, 107, 108, 110, 117, 132, 135, 156, 230, 231, 236, 238, 242, 259, 279, 377, 454, 844, 845, 846, 847, 849, 851, 862, 866, 871, 886], "read_ev": [11, 13, 14, 15, 16, 18, 28, 69, 88, 94, 96, 97, 100, 103, 104, 117, 121, 132, 141, 146, 152, 202, 218, 231, 232, 233, 236, 238, 267, 454, 618, 831, 841, 876, 886], "modifi": [11, 61, 69, 117, 135, 141, 150, 151, 152, 162, 166, 169, 170, 173, 174, 175, 183, 197, 201, 207, 209, 212, 219, 223, 228, 232, 241, 246, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 277, 278, 279, 280, 281, 282, 283, 289, 314, 320, 342, 363, 365, 366, 367, 387, 413, 415, 417, 418, 420, 421, 422, 424, 425, 427, 428, 435, 472, 476, 481, 482, 489, 496, 512, 529, 542, 554, 558, 561, 562, 582, 586, 590, 591, 593, 594, 595, 596, 597, 609, 642, 648, 651, 657, 658, 659, 660, 688, 699, 700, 706, 707, 708, 709, 710, 723, 725, 750, 754, 757, 770, 775, 789, 791, 807, 821, 822, 853, 861, 862, 868, 871, 886], "your": [11, 31, 47, 69, 70, 94, 95, 117, 121, 127, 135, 136, 141, 142, 143, 150, 152, 156, 158, 159, 160, 162, 163, 167, 168, 169, 173, 178, 182, 183, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 217, 218, 219, 228, 241, 242, 243, 258, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 283, 299, 300, 311, 320, 331, 334, 337, 340, 356, 360, 361, 371, 372, 373, 391, 413, 420, 437, 454, 456, 457, 476, 478, 479, 481, 482, 492, 497, 540, 548, 561, 562, 565, 572, 579, 582, 594, 612, 618, 692, 706, 708, 709, 710, 754, 784, 791, 794, 800, 801, 807, 812, 824, 843, 848, 849, 850, 851, 852, 853, 860, 861, 862, 863, 864, 865, 866, 868, 871, 886], "2443": [11, 42, 73, 76, 88, 92, 93, 107, 108, 110, 111, 117, 121, 147, 167, 168, 169, 170, 178, 181, 197, 200, 201, 202, 207, 208, 211, 217, 218, 219, 220, 225, 230, 231, 232, 236, 238], "grad": [11, 16, 22, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 61, 76, 78, 86, 87, 93, 94, 96, 97, 99, 100, 103, 104, 107, 109, 110, 111, 113, 114, 116, 117, 119, 120, 121, 123, 124, 127, 131, 132, 141, 143, 146, 151, 153, 157, 158, 159, 163, 167, 170, 171, 173, 177, 178, 179, 180, 181, 182, 184, 197, 201, 202, 208, 210, 211, 217, 223, 224, 225, 230, 231, 232, 236, 238, 241, 242, 258, 261, 263, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 299, 300, 313, 320, 321, 340, 356, 360, 361, 371, 372, 373, 375, 413, 420, 422, 456, 457, 476, 478, 479, 481, 482, 518, 525, 540, 559, 560, 561, 562, 567, 572, 574, 575, 577, 579, 580, 583, 647, 692, 706, 708, 709, 710, 777, 778, 784, 785, 786, 788, 790, 792, 793, 794, 797, 807, 809, 810, 814, 815, 816, 841, 861, 868, 871, 886], "4000e": [11, 16, 28, 42, 45, 46, 76, 96, 97, 100, 103, 104, 107, 110, 113, 117, 121, 132, 153, 167, 178, 181, 197, 208, 230, 231, 232, 236, 238, 242, 261, 266, 267, 361, 562, 579, 580, 692, 861], "150e": [11, 16, 28, 42, 45, 96, 97, 100, 104, 107, 110, 117, 142, 143, 153, 167, 178, 181, 197, 208, 230, 231, 232, 233, 236, 238, 266, 267, 276, 481, 482, 784, 807, 861, 868], "v1": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 68, 69, 71, 72, 73, 76, 78, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 132, 133, 141, 142, 143, 147, 150, 151, 152, 153, 157, 158, 159, 161, 163, 167, 168, 169, 170, 173, 177, 178, 179, 180, 181, 182, 183, 190, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 224, 225, 230, 231, 232, 233, 236, 238, 340], "idl": [11, 13, 14, 15, 16, 18, 26, 28, 29, 42, 45, 49, 61, 68, 69, 71, 72, 73, 76, 83, 84, 88, 92, 93, 94, 96, 97, 99, 100, 103, 104, 107, 110, 111, 117, 118, 121, 123, 127, 129, 131, 132, 133, 142, 143, 147, 152, 153, 157, 158, 159, 161, 163, 167, 168, 169, 170, 173, 178, 181, 183, 184, 192, 197, 200, 204, 205, 206, 207, 208, 210, 211, 217, 220, 224, 225, 230, 231, 232, 233, 236, 238], "v2": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 68, 69, 71, 72, 73, 76, 78, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 132, 133, 141, 142, 143, 147, 150, 151, 152, 153, 157, 158, 159, 161, 163, 167, 168, 169, 170, 173, 177, 178, 179, 180, 181, 182, 183, 190, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 224, 225, 230, 231, 232, 233, 236, 238, 246, 390, 594, 886], "v3": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 68, 69, 71, 72, 73, 76, 78, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 132, 133, 141, 142, 143, 147, 150, 151, 152, 153, 157, 158, 159, 161, 163, 167, 168, 169, 170, 173, 177, 178, 179, 180, 181, 182, 183, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 224, 225, 230, 231, 232, 233, 236, 238], "refer": [11, 14, 22, 27, 28, 29, 30, 31, 38, 39, 41, 45, 47, 48, 49, 50, 52, 57, 60, 61, 64, 67, 68, 69, 72, 73, 76, 77, 79, 81, 82, 85, 86, 87, 90, 92, 93, 95, 96, 97, 99, 100, 104, 107, 108, 110, 116, 120, 124, 127, 132, 133, 146, 150, 151, 153, 157, 159, 160, 166, 167, 168, 170, 171, 173, 176, 178, 180, 182, 183, 189, 193, 202, 210, 215, 216, 217, 224, 236, 238, 242, 243, 246, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 292, 299, 300, 302, 304, 337, 356, 361, 362, 371, 382, 387, 390, 391, 394, 395, 396, 405, 406, 413, 414, 417, 419, 420, 421, 423, 429, 431, 434, 437, 439, 452, 476, 478, 479, 481, 482, 492, 506, 525, 526, 529, 530, 540, 544, 559, 560, 561, 562, 563, 567, 570, 571, 573, 574, 575, 576, 577, 578, 583, 592, 594, 595, 598, 601, 602, 609, 646, 648, 651, 655, 659, 663, 666, 668, 671, 688, 690, 692, 693, 694, 695, 696, 697, 699, 700, 706, 708, 709, 710, 714, 715, 716, 717, 718, 720, 722, 724, 725, 732, 733, 735, 736, 738, 754, 756, 770, 771, 786, 793, 794, 797, 798, 801, 806, 808, 809, 814, 816, 826, 841, 849, 860, 867, 869, 871, 886], "6450": [11, 13, 14, 15, 16, 18, 28, 42, 49, 69, 72, 73, 76, 88, 96, 97, 99, 100, 117, 121, 132, 133, 142, 152, 153, 167, 170, 173, 178, 181, 197, 206, 233, 236, 238], "48149": [11, 13, 14, 15, 16, 18, 28, 42, 49, 69, 72, 73, 76, 88, 96, 97, 99, 100, 117, 121, 132, 133, 142, 152, 153, 167, 170, 173, 178, 181, 197, 206, 233, 236, 238], "956": [11, 13, 14, 15, 16, 18, 28, 29, 42, 45, 49, 68, 69, 71, 72, 73, 76, 80, 83, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 110, 111, 117, 118, 121, 123, 127, 132, 133, 142, 144, 147, 152, 153, 157, 163, 167, 168, 169, 170, 173, 178, 181, 183, 197, 200, 204, 205, 206, 207, 208, 209, 210, 217, 220, 224, 225, 230, 231, 232, 233, 236, 238], "320": [11, 13, 14, 15, 16, 18, 28, 29, 42, 45, 49, 68, 69, 71, 72, 73, 76, 81, 83, 88, 92, 93, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 117, 118, 121, 123, 127, 132, 133, 135, 141, 142, 147, 150, 152, 153, 157, 160, 163, 165, 167, 168, 169, 170, 172, 173, 178, 181, 183, 197, 200, 201, 204, 205, 206, 207, 208, 210, 217, 220, 224, 225, 230, 231, 232, 233, 236, 238, 412], "665": [11, 13, 14, 15, 16, 18, 28, 42, 49, 69, 72, 73, 76, 88, 90, 94, 95, 96, 97, 99, 100, 117, 121, 132, 133, 142, 152, 153, 167, 170, 173, 178, 181, 197, 206, 233, 236, 238], "41699": [11, 13, 14, 15, 16, 18, 42, 72, 73, 88, 99, 121, 133, 142, 153, 167, 197, 233], "277": [11, 13, 14, 15, 16, 18, 42, 71, 72, 73, 88, 99, 112, 121, 133, 142, 153, 167, 168, 170, 183, 197, 202, 205, 210, 217, 228, 233], "709": [11, 13, 14, 15, 16, 18, 42, 72, 73, 88, 99, 121, 130, 133, 142, 153, 167, 197, 233], "199": [11, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 78, 86, 87, 116, 119, 120, 127, 150, 170, 173, 177, 179, 180, 182, 184, 192, 211, 223, 233, 238, 246, 720, 722, 732, 736], "325": [11, 56, 58, 73, 170, 197, 233], "366": [11, 13, 14, 15, 16, 18, 22, 31, 35, 40, 47, 48, 49, 50, 51, 54, 55, 58, 59, 64, 68, 81, 88, 90, 92, 93, 94, 95, 121, 131, 133, 145, 150, 170, 173, 179, 180, 197, 210, 211, 224, 225, 228, 233], "143": [11, 49, 73, 85, 88, 170, 202, 210, 211, 233, 246, 279], "19979521315838786": [11, 28, 61, 69, 71, 72, 80, 93, 94, 96, 97, 100, 103, 104, 107, 110, 117, 132, 143, 146, 150, 151, 153, 167, 173, 178, 181, 183, 201, 202, 205, 224, 231, 232, 236, 238], "151": [11, 21, 120, 152, 153, 155, 170, 173, 197, 206, 210, 228, 232, 238, 279], "prior": [11, 12, 18, 27, 28, 29, 30, 34, 36, 38, 39, 40, 44, 47, 52, 56, 57, 58, 60, 90, 104, 107, 108, 110, 113, 124, 143, 150, 152, 163, 167, 173, 179, 180, 181, 182, 193, 197, 206, 209, 211, 213, 220, 224, 233, 236, 238, 263, 264, 268, 270, 271, 277, 299, 300, 457, 458, 476, 477, 478, 479, 481, 482, 498, 528, 529, 540, 562, 572, 583, 594, 615, 624, 626, 754, 781, 782, 807, 813, 868, 871, 874, 886], "061": [11, 16, 28, 32, 33, 45, 46, 61, 71, 72, 73, 93, 94, 96, 100, 107, 113, 117, 141, 146, 152, 153, 167, 168, 169, 170, 173, 178, 181, 200, 201, 202, 205, 206, 207, 208, 211, 217, 218, 219, 220, 228, 229, 230, 231, 232, 233, 236, 238, 242, 246, 693, 694, 696, 697], "read_cov": [11, 31, 35, 40, 41, 45, 48, 49, 50, 51, 54, 55, 58, 59, 64, 68, 92, 94, 163, 179, 180, 263, 830, 865, 876], "305": [11, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 76, 78, 82, 87, 88, 94, 104, 107, 108, 109, 110, 121, 124, 141, 147, 151, 153, 163, 167, 170, 173, 177, 178, 179, 180, 181, 182, 209, 210, 224, 228, 233, 236, 238, 246, 266, 267, 268, 269, 481, 482, 651], "22494": [11, 22, 28, 29, 35, 38, 39, 52, 57, 60, 104, 107, 108, 110, 124, 167, 173, 182, 236, 238], "diagon": [11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 70, 104, 107, 108, 110, 124, 167, 173, 181, 182, 197, 224, 225, 236, 238, 246, 263, 299, 300, 356, 373, 518, 529, 537, 868, 871, 886], "retriev": [11, 197, 206, 210, 242, 330, 331, 351, 431, 489, 496, 624, 886], "lh_data": [11, 116, 176, 238, 277, 280], "hemispher": [11, 24, 27, 40, 43, 47, 52, 67, 122, 126, 127, 130, 142, 152, 156, 159, 176, 179, 184, 236, 237, 238, 262, 272, 273, 274, 277, 278, 279, 280, 281, 282, 326, 362, 390, 471, 515, 611, 629, 631, 634, 654, 669, 677, 702, 753, 754, 812, 817, 836, 871, 886], "prepar": [11, 12, 19, 21, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 78, 87, 90, 94, 104, 107, 108, 109, 110, 119, 124, 135, 151, 167, 178, 179, 180, 182, 183, 192, 197, 201, 208, 224, 225, 230, 236, 309, 320, 331, 371, 372, 529, 530, 531, 532, 533, 535, 536, 542, 545, 546, 595, 845, 871, 886], "seri": [11, 16, 27, 28, 29, 31, 36, 41, 56, 71, 81, 90, 93, 94, 95, 111, 138, 162, 169, 176, 181, 182, 189, 206, 207, 220, 225, 238, 243, 246, 264, 265, 266, 267, 268, 269, 272, 273, 274, 277, 279, 280, 281, 282, 299, 300, 356, 416, 423, 426, 447, 481, 482, 528, 529, 532, 543, 562, 567, 571, 624, 628, 692, 693, 694, 706, 707, 709, 711, 712, 713, 722, 731, 732, 767, 778, 818, 841, 843, 845, 868, 886], "time_decod": [11, 197], "31": [11, 13, 19, 28, 32, 34, 35, 43, 44, 45, 47, 56, 75, 79, 81, 82, 83, 102, 103, 108, 109, 112, 114, 152, 160, 170, 181, 184, 186, 192, 197, 206, 210, 212, 228, 229, 230, 232, 233, 236, 237, 238, 241, 246, 266, 267, 279, 337, 540, 663, 668, 868, 886], "03": [11, 13, 19, 24, 33, 34, 35, 49, 56, 59, 66, 71, 73, 75, 76, 79, 83, 84, 85, 90, 93, 94, 103, 106, 108, 109, 120, 121, 127, 142, 147, 151, 152, 159, 163, 167, 168, 169, 170, 171, 175, 181, 183, 184, 185, 195, 196, 197, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 223, 224, 225, 228, 229, 230, 232, 233, 237, 238, 246, 260, 264, 356, 562, 693, 694, 696, 697, 782], "86it": [11, 13, 19, 34, 96, 103, 112, 210, 228, 229, 230, 233], "98it": [11, 13, 19, 34, 103, 109, 210, 228, 232, 233], "93it": [11, 19, 103, 108, 109, 196, 197, 210, 229, 232, 233], "22it": [11, 19, 34, 108, 112, 196, 210, 228, 232, 233, 238], "62it": [11, 13, 19, 34, 103, 108, 112, 196, 197, 210, 228, 230, 232, 233, 238], "24it": [11, 13, 19, 34, 103, 112, 196, 210, 232, 233, 236], "55it": [11, 13, 19, 33, 103, 108, 109, 112, 196, 197, 210, 228, 233, 238], "09it": [11, 13, 19, 103, 108, 112, 196, 197, 210, 228, 229, 231, 233, 236, 237], "29": [11, 13, 19, 21, 24, 28, 32, 34, 35, 41, 43, 45, 47, 50, 56, 79, 81, 83, 85, 103, 108, 109, 112, 113, 114, 116, 120, 123, 130, 138, 140, 144, 157, 158, 159, 161, 165, 170, 172, 184, 185, 186, 188, 196, 197, 204, 208, 210, 211, 212, 228, 229, 230, 232, 233, 236, 237, 238, 242, 246, 279, 886], "12it": [11, 13, 19, 34, 103, 109, 112, 197, 210, 228, 229, 233, 237], "32": [11, 12, 13, 19, 21, 28, 34, 35, 41, 42, 45, 47, 49, 69, 71, 72, 73, 74, 76, 79, 81, 82, 85, 94, 99, 103, 106, 107, 108, 109, 110, 112, 114, 120, 129, 136, 141, 142, 143, 147, 149, 150, 152, 153, 159, 163, 167, 169, 170, 171, 172, 173, 177, 178, 181, 183, 184, 185, 186, 196, 197, 201, 202, 204, 205, 206, 208, 209, 210, 213, 218, 223, 224, 225, 228, 229, 230, 232, 233, 235, 237, 238, 243, 246, 259, 266, 267, 392, 412, 454, 481, 482, 503, 529, 578, 851, 862, 868, 871, 872, 886], "64it": [11, 13, 19, 34, 103, 112, 196, 197, 210, 229, 230, 232, 233, 238], "50it": [11, 13, 19, 34, 103, 109, 112, 181, 196, 197, 228, 232, 233, 238], "39": [11, 12, 19, 21, 28, 35, 45, 47, 81, 96, 103, 106, 108, 109, 112, 113, 114, 138, 141, 158, 159, 160, 170, 180, 181, 185, 186, 188, 192, 196, 197, 201, 202, 210, 211, 212, 216, 228, 229, 230, 232, 233, 237, 238, 246, 279, 405, 861], "02it": [11, 19, 103, 197, 210, 228, 232, 233], "78it": [11, 13, 19, 34, 44, 103, 112, 196, 197, 210, 228, 229, 232, 233, 237], "30it": [11, 19, 34, 103, 112, 181, 196, 197, 210, 228, 230, 232, 233], "97it": [11, 13, 19, 34, 103, 112, 196, 197, 210, 228, 229, 230, 232, 233, 237, 238], "52": [11, 13, 19, 28, 35, 45, 47, 79, 81, 82, 99, 103, 108, 109, 112, 114, 135, 146, 152, 169, 170, 192, 195, 196, 197, 203, 210, 228, 229, 232, 233, 236, 238, 246, 405, 692, 735, 738, 886], "60it": [11, 19, 33, 103, 112, 181, 196, 197, 210, 228, 229, 232, 233], "08it": [11, 13, 19, 33, 96, 103, 108, 109, 112, 196, 197, 210, 228, 229, 230, 233, 237, 238], "65it": [11, 13, 19, 33, 34, 108, 112, 196, 197, 210, 228, 229, 233, 238], "61": [11, 13, 19, 30, 35, 45, 47, 51, 57, 71, 81, 83, 90, 93, 103, 108, 109, 112, 114, 116, 123, 127, 137, 147, 150, 167, 168, 169, 170, 171, 173, 177, 179, 180, 185, 186, 196, 197, 200, 201, 204, 207, 208, 209, 210, 211, 217, 218, 219, 220, 228, 229, 230, 232, 233, 236, 237, 238, 246, 356], "16it": [11, 19, 34, 104, 109, 112, 196, 197, 210, 232, 233], "65": [11, 12, 13, 19, 21, 34, 35, 45, 47, 79, 81, 84, 96, 103, 108, 109, 112, 114, 135, 137, 144, 146, 157, 170, 171, 178, 179, 185, 196, 197, 202, 209, 210, 228, 229, 230, 232, 233, 237, 238, 246, 602, 886], "69it": [11, 19, 34, 103, 104, 112, 197, 210, 228, 229, 232, 233], "68": [11, 13, 19, 34, 35, 41, 45, 47, 79, 81, 82, 90, 101, 103, 108, 109, 112, 114, 126, 138, 141, 144, 146, 159, 170, 173, 177, 182, 185, 192, 196, 197, 210, 228, 229, 231, 232, 233, 236, 246, 268, 269, 299, 300, 337, 356, 360, 361, 371, 372, 373, 405, 413, 420, 456, 457, 476, 478, 479, 540, 794], "21it": [11, 19, 33, 34, 103, 112, 196, 197, 229, 232, 233], "71": [11, 12, 19, 21, 35, 45, 81, 85, 103, 108, 109, 112, 114, 138, 170, 177, 182, 183, 185, 196, 197, 210, 228, 229, 230, 232, 233, 236, 238], "80it": [11, 19, 34, 103, 108, 109, 112, 196, 197, 210, 228, 230, 231, 232, 233, 237, 238], "74": [11, 13, 15, 19, 26, 35, 41, 45, 50, 80, 81, 82, 103, 108, 109, 112, 114, 135, 138, 159, 169, 170, 171, 172, 177, 182, 185, 192, 196, 197, 203, 208, 210, 225, 228, 229, 232, 233, 238, 687], "27it": [11, 19, 34, 103, 112, 181, 196, 210, 228, 229, 230, 233, 237], "88it": [11, 19, 33, 34, 96, 103, 108, 112, 196, 210, 228, 229, 230, 233, 237], "81": [11, 13, 15, 16, 19, 34, 35, 79, 81, 103, 107, 108, 109, 112, 114, 143, 157, 170, 181, 185, 196, 209, 210, 212, 228, 229, 232, 233, 241, 246, 663, 668, 720, 722, 732, 736, 886], "53it": [11, 13, 19, 103, 108, 112, 196, 197, 228, 232, 233, 238], "87": [11, 13, 18, 19, 33, 35, 47, 80, 93, 94, 108, 109, 112, 114, 123, 124, 170, 196, 197, 208, 210, 211, 228, 229, 232, 233, 236, 246, 417, 419, 431, 868], "27": [11, 12, 13, 19, 21, 24, 28, 33, 34, 35, 39, 41, 43, 45, 47, 50, 56, 79, 81, 82, 103, 108, 109, 112, 114, 146, 151, 158, 159, 161, 165, 170, 172, 179, 181, 184, 186, 192, 196, 197, 210, 228, 229, 230, 232, 233, 236, 238, 246, 573, 843], "29it": [11, 13, 19, 33, 34, 103, 108, 112, 196, 197, 228, 232, 233, 237], "94": [11, 13, 19, 35, 47, 81, 96, 103, 107, 108, 109, 112, 114, 138, 170, 171, 181, 184, 192, 197, 208, 210, 213, 228, 229, 230, 231, 232, 233, 237, 238, 246, 868], "76it": [11, 13, 19, 33, 103, 109, 112, 196, 197, 210, 232, 233], "45it": [11, 19, 33, 108, 112, 197, 210, 228, 229, 230, 232, 233, 236, 238], "90it": [11, 13, 19, 34, 96, 103, 108, 112, 181, 196, 197, 210, 228, 232, 233, 236], "83it": [11, 13, 19, 34, 103, 108, 112, 181, 196, 197, 210, 230, 232, 233], "84it": [11, 13, 19, 34, 103, 108, 112, 181, 196, 197, 210, 228, 232, 233, 237], "36it": [11, 13, 19, 33, 109, 112, 196, 197, 210, 228, 229, 232, 233, 236], "61it": [11, 19, 33, 34, 103, 112, 123, 196, 197, 210, 228, 230, 232, 233, 238], "95it": [11, 13, 19, 34, 103, 109, 112, 196, 197, 210, 228, 232, 233, 238], "06it": [11, 13, 19, 103, 112, 196, 197, 210, 228, 229, 233], "14it": [11, 13, 19, 33, 34, 108, 197, 210, 225, 228, 233, 237], "28it": [11, 13, 19, 33, 34, 44, 103, 108, 109, 112, 196, 197, 210, 228, 230, 232, 233, 238], "34it": [11, 13, 19, 103, 112, 196, 197, 210, 228, 229, 232, 233], "38it": [11, 13, 19, 33, 103, 104, 108, 109, 196, 197, 210, 228, 229, 232, 233], "42it": [11, 13, 19, 103, 109, 112, 196, 197, 210, 228, 233, 238], "10it": [11, 19, 33, 34, 108, 112, 181, 196, 197, 210, 228, 230, 232, 233, 236, 238], "07it": [11, 13, 19, 103, 108, 112, 197, 210, 228, 229, 230, 232, 233], "71it": [11, 13, 19, 103, 108, 109, 196, 197, 210, 228, 232, 233, 238], "23it": [11, 13, 19, 33, 34, 108, 109, 112, 196, 197, 210, 228, 229, 233, 237], "18it": [11, 19, 103, 108, 112, 196, 228, 229, 230, 233], "99it": [11, 13, 19, 33, 103, 112, 196, 197, 210, 228, 230, 233], "51it": [11, 19, 103, 108, 109, 112, 196, 197, 210, 228, 229, 231, 232, 233, 236, 238], "79it": [11, 13, 19, 34, 108, 112, 196, 197, 210, 228, 229, 233, 238], "56it": [11, 19, 34, 103, 112, 181, 196, 197, 228, 229, 233, 236, 237, 238], "03it": [11, 13, 19, 33, 34, 103, 108, 109, 112, 197, 210, 228, 229, 232, 233, 236], "54it": [11, 19, 34, 103, 108, 109, 112, 196, 197, 210, 228, 229, 232, 233, 237, 238], "13it": [11, 13, 19, 96, 103, 108, 112, 196, 197, 228, 229, 232, 233, 237], "81it": [11, 13, 19, 33, 34, 96, 103, 112, 196, 197, 210, 228, 229, 230, 233, 236, 238], "43it": [11, 13, 19, 33, 34, 103, 108, 197, 210, 228, 232, 233, 236, 237], "67it": [11, 19, 34, 103, 108, 109, 112, 196, 197, 210, 228, 230, 232, 233, 236, 238], "33it": [11, 13, 33, 34, 104, 108, 109, 112, 210, 228, 229, 230, 232, 233, 238], "70it": [11, 13, 19, 103, 108, 112, 197, 228, 229, 232, 233, 238], "73it": [11, 19, 34, 103, 109, 112, 196, 197, 210, 228, 229, 232, 233, 238], "25it": [11, 13, 19, 33, 34, 103, 108, 112, 197, 210, 228, 229, 230, 232, 233, 237], "20it": [11, 19, 33, 34, 103, 112, 197, 210, 228, 233, 238], "17it": [11, 19, 33, 34, 103, 108, 112, 197, 228, 233, 237], "68it": [11, 13, 19, 33, 34, 103, 112, 196, 197, 210, 228, 229, 230, 232, 233, 236, 237, 238], "11it": [11, 13, 19, 34, 103, 108, 112, 196, 197, 210, 228, 229, 232, 233, 237], "66it": [11, 13, 19, 33, 34, 96, 103, 109, 112, 196, 228, 230, 232, 233, 237, 238], "26it": [11, 13, 19, 33, 34, 103, 108, 112, 123, 196, 210, 228, 229, 230, 232, 233], "05it": [11, 19, 34, 96, 109, 112, 181, 196, 197, 210, 225, 228, 232, 233, 236, 238], "48it": [11, 13, 19, 33, 34, 103, 108, 109, 112, 196, 197, 228, 229, 230, 232, 233, 237, 238], "57it": [11, 13, 19, 34, 109, 112, 196, 197, 228, 230, 232, 233, 238], "85it": [11, 19, 103, 108, 109, 123, 196, 197, 210, 228, 229, 230, 232, 233], "39it": [11, 13, 19, 33, 103, 104, 109, 112, 210, 228, 229, 233], "04it": [11, 13, 19, 103, 108, 109, 112, 196, 197, 210, 228, 229, 230, 232, 233, 237], "49it": [11, 13, 19, 34, 96, 108, 112, 210, 228, 229, 233], "19it": [11, 13, 19, 33, 108, 109, 112, 196, 197, 210, 228, 229, 232, 233, 237], "01it": [11, 19, 34, 103, 112, 197, 210, 228, 230, 232, 233], "15it": [11, 13, 19, 34, 112, 196, 197, 210, 228, 230, 232, 233, 236, 238], "58it": [11, 13, 19, 103, 112, 196, 197, 210, 228, 229, 232, 233, 237, 238], "46it": [11, 19, 34, 103, 109, 112, 181, 196, 197, 210, 228, 229, 232, 233], "74it": [11, 19, 104, 108, 112, 196, 197, 210, 228, 229, 232, 233, 238], "52it": [11, 19, 34, 112, 196, 197, 210, 228, 232, 233, 238], "75it": [11, 19, 34, 103, 109, 112, 196, 197, 210, 228, 233, 237, 238], "72it": [11, 13, 19, 33, 34, 103, 109, 112, 181, 196, 197, 210, 228, 229, 230, 232, 233, 237, 238], "investig": [11, 21, 145, 152, 192, 203, 238, 268, 269, 562, 794, 862], "patterns_": [11, 15, 18, 19, 21, 197, 413, 417, 419, 420, 421, 431, 563, 886], "inverse_transform": [11, 18, 197, 421, 422, 427, 428, 431, 563], "lookup": [11, 41, 135, 259, 266, 267, 268, 269, 271, 279, 465, 466, 481, 482, 655, 754, 841], "vertic": [11, 22, 24, 28, 38, 39, 41, 43, 48, 52, 53, 68, 116, 127, 134, 135, 137, 141, 143, 156, 159, 160, 161, 162, 176, 179, 182, 192, 201, 204, 209, 210, 217, 220, 225, 228, 229, 236, 237, 238, 262, 266, 267, 268, 269, 272, 273, 274, 277, 278, 279, 280, 281, 282, 286, 287, 299, 300, 360, 362, 447, 460, 469, 471, 472, 481, 482, 515, 517, 538, 539, 628, 656, 669, 671, 672, 674, 675, 676, 677, 678, 680, 681, 682, 693, 694, 696, 697, 698, 701, 702, 753, 754, 768, 773, 778, 784, 792, 807, 812, 817, 836, 841, 868, 871, 886], "lh_vertno": [11, 116, 176, 277, 280, 669], "empti": [11, 15, 27, 122, 130, 141, 143, 151, 162, 163, 167, 170, 172, 173, 185, 186, 192, 202, 206, 207, 209, 211, 217, 223, 238, 260, 263, 266, 267, 268, 269, 271, 275, 277, 290, 304, 312, 321, 328, 350, 351, 356, 361, 379, 380, 381, 384, 385, 386, 388, 393, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 440, 461, 481, 482, 489, 493, 496, 497, 504, 508, 528, 553, 554, 555, 559, 560, 562, 563, 565, 572, 573, 583, 594, 595, 618, 626, 637, 647, 651, 687, 693, 702, 706, 708, 709, 710, 723, 741, 754, 763, 770, 778, 779, 784, 785, 791, 793, 801, 807, 808, 841, 845, 861, 868, 871, 886], "stc_feat": 11, "sourceestim": [11, 22, 26, 31, 35, 37, 40, 46, 59, 60, 94, 156, 159, 166, 167, 182, 187, 188, 224, 225, 236, 237, 238, 265, 268, 269, 272, 273, 274, 276, 278, 279, 280, 281, 282, 286, 287, 291, 292, 293, 294, 295, 296, 297, 298, 362, 447, 460, 476, 477, 478, 479, 517, 529, 530, 531, 532, 533, 535, 538, 539, 544, 545, 628, 634, 647, 656, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 691, 698, 701, 702, 754, 768, 812, 813, 841, 863, 865, 876, 886], "ab": [11, 19, 35, 38, 40, 47, 59, 60, 68, 97, 119, 120, 127, 136, 152, 180, 184, 192, 196, 203, 228, 230, 231, 236, 237, 238, 243, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 564, 722, 732, 789, 868, 886], "tstep": [11, 22, 31, 46, 59, 90, 94, 95, 182, 225, 236, 237, 238, 273, 274, 277, 280, 281, 282, 361, 479, 517, 562, 656, 673, 692, 698, 721, 729, 886], "transpar": [11, 58, 101, 135, 173, 182, 201, 243, 258, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 754, 773, 790, 807, 812, 817, 818, 819, 820, 867, 886], "82it": [11, 13, 19, 34, 103, 197, 210, 228, 229, 230, 232, 233, 236, 237], "47it": [11, 19, 34, 103, 109, 112, 196, 197, 228, 231, 232, 233, 238], "59it": [11, 13, 19, 33, 103, 108, 109, 112, 196, 197, 210, 229, 230, 232, 233, 238], "87it": [11, 19, 34, 103, 108, 112, 196, 197, 210, 228, 229, 230, 233, 237], "50724321": 11, "37721471": 11, "59502306": 11, "615": [11, 20, 124, 130, 144, 196, 233], "318": [11, 20, 170, 233], "decoding_spatio_temporal_sourc": [11, 20], "comodul": [12, 420], "allow": [12, 19, 40, 43, 44, 46, 60, 94, 104, 112, 115, 116, 120, 135, 138, 141, 142, 143, 144, 145, 147, 151, 152, 158, 159, 161, 167, 170, 171, 173, 179, 190, 193, 197, 203, 208, 217, 218, 220, 228, 229, 230, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 273, 274, 277, 279, 280, 281, 282, 293, 294, 297, 310, 314, 337, 342, 349, 356, 374, 413, 419, 420, 421, 446, 454, 471, 480, 481, 482, 484, 496, 497, 500, 502, 531, 533, 536, 538, 539, 540, 544, 562, 563, 567, 583, 592, 612, 618, 624, 642, 655, 671, 673, 692, 706, 708, 709, 710, 733, 734, 736, 737, 748, 752, 775, 784, 786, 797, 799, 807, 810, 841, 843, 845, 863, 867, 868, 871, 874, 886], "composit": [12, 189, 197, 273, 274, 277, 280, 281, 282, 754, 812, 817, 868], "orthogon": [12, 114, 157, 161, 179, 197, 207, 208, 211, 299, 300, 562, 734, 737, 868, 871, 874, 886], "spatial": [12, 14, 15, 17, 18, 20, 27, 31, 32, 33, 34, 36, 47, 56, 70, 71, 80, 83, 84, 90, 113, 119, 121, 152, 153, 156, 157, 163, 176, 200, 201, 203, 207, 208, 213, 220, 223, 225, 228, 230, 233, 236, 237, 238, 242, 243, 246, 263, 266, 267, 268, 269, 270, 271, 272, 275, 277, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 314, 330, 356, 362, 365, 366, 375, 413, 414, 420, 421, 427, 429, 431, 442, 481, 482, 493, 494, 496, 523, 528, 540, 541, 544, 559, 560, 561, 562, 563, 576, 577, 593, 594, 615, 621, 624, 626, 660, 663, 668, 676, 677, 678, 679, 683, 693, 694, 696, 697, 706, 708, 710, 725, 744, 754, 771, 786, 788, 793, 794, 797, 806, 809, 814, 816, 841, 861, 862, 865, 868, 886], "maxim": [12, 60, 88, 143, 161, 177, 178, 181, 184, 197, 203, 205, 246, 274, 280, 281, 282, 299, 300, 421, 562, 592, 676, 677, 678, 680, 681, 692, 818, 868, 886], "csp": [12, 17, 20, 27, 197, 266, 271, 314, 330, 365, 375, 417, 420, 442, 496, 559, 563, 706, 862, 876, 886], "variabl": [12, 16, 31, 43, 101, 103, 112, 117, 142, 144, 151, 156, 169, 171, 197, 200, 203, 205, 207, 217, 219, 232, 233, 238, 246, 259, 264, 266, 267, 272, 273, 274, 276, 277, 280, 281, 282, 305, 309, 310, 311, 314, 362, 367, 368, 369, 374, 377, 379, 380, 381, 382, 384, 385, 386, 389, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 420, 430, 432, 442, 454, 455, 461, 463, 465, 469, 471, 472, 473, 474, 475, 481, 482, 501, 515, 519, 521, 548, 561, 562, 583, 590, 609, 611, 619, 623, 629, 638, 643, 644, 645, 646, 653, 654, 655, 669, 672, 683, 693, 694, 695, 696, 697, 701, 702, 746, 754, 770, 772, 782, 784, 801, 807, 812, 817, 818, 820, 836, 841, 843, 850, 851, 861, 865, 868, 872, 886], "fluctuat": [12, 142, 143, 152, 200, 202, 208, 209, 213, 225, 268, 269, 794, 841], "electromyogram": [12, 886], "cortico": 12, "muscular": [12, 200, 206], "coher": [12, 32, 33, 103, 107, 181, 225, 246, 291, 292, 293, 294, 299, 706, 707, 733, 734, 735, 736, 737, 738, 780, 841, 852, 862], "fieldtrip": [12, 157, 192, 203, 209, 228, 230, 236, 324, 331, 501, 619, 623, 733, 734, 736, 737, 868, 874, 886], "fieldtrip_cmc": [12, 21], "ridg": [12, 19, 196, 419, 425], "kfold": [12, 16, 19, 356, 361, 430, 886], "cross_val_predict": [12, 886], "subjectcmc": [12, 21], "emg": [12, 83, 138, 170, 190, 197, 217, 223, 246, 266, 267, 268, 269, 276, 313, 375, 420, 446, 481, 482, 493, 496, 508, 559, 562, 706, 708, 709, 710, 784, 807, 862, 868, 871, 886], "pick_channel": [12, 45, 70, 72, 86, 100, 115, 127, 141, 142, 150, 152, 170, 171, 217, 225, 230, 231, 232, 263, 266, 267, 268, 269, 270, 481, 482, 556, 706, 707, 708, 709, 710, 876, 886], "emglft": 12, "ref_meg": [12, 21, 74, 119, 123, 170, 213, 266, 267, 268, 269, 276, 313, 375, 481, 482, 559, 560, 576, 706, 708, 709, 710, 784, 807, 886], "make_fixed_length_ev": [12, 21, 167, 169, 218, 223, 361, 535, 841, 876, 886], "durat": [12, 21, 49, 65, 70, 71, 73, 74, 75, 76, 81, 82, 83, 90, 93, 94, 123, 127, 138, 141, 142, 145, 147, 150, 151, 152, 167, 168, 169, 192, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 225, 236, 237, 238, 258, 260, 266, 267, 268, 269, 276, 277, 285, 343, 345, 359, 361, 413, 415, 419, 420, 424, 425, 442, 449, 451, 452, 454, 481, 482, 498, 522, 523, 562, 564, 565, 567, 583, 594, 602, 656, 658, 698, 720, 784, 793, 801, 807, 841, 845, 886], "meg_epoch": [12, 18], "detrend": [12, 110, 136, 212, 261, 266, 268, 269, 522, 617, 886], "emg_epoch": 12, "var": [12, 47, 70, 172, 208, 377, 461, 699], "oa": [12, 21, 84, 184, 356], "validaton": 12, "first_samp": [12, 70, 75, 138, 167, 169, 185, 217, 218, 219, 260, 261, 266, 267, 271, 276, 285, 364, 441, 442, 454, 480, 481, 482, 502, 523, 557, 562, 595, 620, 621, 656, 671, 787, 801, 807, 831, 841, 871, 886], "set_xlabel": [12, 13, 19, 21, 22, 45, 70, 96, 104, 113, 133, 145, 147, 173, 184, 197, 207, 231, 232, 233], "set_titl": [12, 13, 22, 45, 70, 71, 96, 99, 112, 114, 120, 127, 135, 137, 145, 196, 197, 211, 212, 231, 232, 233, 242, 243], "78": [12, 13, 19, 21, 34, 35, 47, 51, 80, 81, 103, 112, 114, 123, 138, 158, 159, 167, 170, 177, 180, 186, 191, 195, 197, 210, 217, 228, 229, 230, 232, 233, 238, 246, 302, 405, 868], "62": [12, 13, 16, 19, 21, 34, 35, 45, 47, 56, 70, 79, 81, 103, 108, 112, 114, 137, 138, 170, 181, 196, 197, 210, 228, 229, 232, 233, 236, 246], "258": [12, 21, 112, 123, 159, 167, 170, 210, 246, 576], "114": [12, 20, 21, 35, 81, 152, 169, 170, 182, 196, 228, 232, 233, 886], "12000": [12, 21], "911610": [12, 21], "191": [12, 21, 112, 126, 130, 170, 228, 233], "180000": 12, "150": [12, 13, 35, 42, 45, 59, 73, 74, 76, 81, 82, 94, 120, 123, 142, 143, 147, 152, 159, 161, 167, 170, 181, 192, 202, 206, 208, 210, 233, 258, 279, 724, 886], "793": [12, 13, 145], "661": [12, 203, 229, 233], "1057": [12, 210], "881": [12, 41, 106, 110, 196, 233, 279], "183": [12, 16, 20, 170, 196, 197, 210, 228, 233], "1801": 12, "contribut": [12, 19, 45, 68, 150, 152, 181, 230, 233, 257, 266, 267, 442, 578, 662, 843, 849, 862, 864, 867, 886], "sven": [12, 18, 19, 197, 246, 417, 419, 420, 421, 431], "d\u00e4hne": [12, 18, 19, 197, 246, 417, 419, 420, 431], "frank": [12, 18, 19, 75, 197, 206, 246, 417, 419, 420, 431, 562, 601], "meineck": [12, 18, 19, 197, 246, 417, 419, 420, 431], "stefan": [12, 18, 19, 33, 113, 127, 197, 206, 230, 233, 236, 242, 246, 417, 419, 420, 421, 431, 577, 873, 886], "hauf": [12, 18, 19, 197, 246, 417, 419, 420, 421, 431], "johann": [12, 197, 246, 420, 886], "h\u00f6hne": [12, 197, 246, 420], "michael": [12, 19, 101, 196, 197, 205, 206, 246, 356, 413, 419, 420, 561, 562, 598, 609, 720, 722, 732, 736, 862, 868, 886], "tangermann": [12, 197, 206, 246, 420], "klau": [12, 197, 206, 246, 413, 420, 562], "robert": [12, 75, 181, 196, 197, 206, 213, 233, 246, 413, 419, 420, 576, 693, 694, 696, 697, 862, 873, 886], "m\u00fcller": [12, 74, 197, 206, 246, 413, 420, 562], "vadim": [12, 21, 197, 246, 420, 421], "nikulin": [12, 21, 197, 246, 420, 421], "novel": [12, 21, 197, 246, 334, 420, 421, 874], "framework": [12, 35, 197, 246, 420, 476, 857, 868], "amplitud": [12, 19, 35, 37, 39, 40, 45, 47, 53, 59, 81, 82, 93, 94, 95, 116, 123, 127, 132, 136, 141, 142, 145, 146, 163, 167, 173, 176, 181, 184, 185, 191, 193, 196, 197, 200, 201, 203, 206, 207, 208, 210, 212, 213, 225, 246, 258, 261, 264, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 292, 300, 343, 344, 345, 349, 361, 420, 456, 478, 479, 481, 482, 524, 533, 544, 562, 564, 579, 580, 616, 658, 659, 663, 667, 668, 692, 693, 708, 709, 710, 722, 732, 754, 781, 782, 795, 808, 841, 852, 865, 868, 871, 886], "neuron": [12, 21, 138, 145, 196, 197, 200, 246, 299, 406, 419, 420, 421, 529, 576, 841, 862, 868], "oscil": [12, 21, 68, 94, 113, 114, 197, 200, 204, 225, 246, 420, 421, 659, 720, 722, 732, 736], "behavior": [12, 145, 170, 189, 197, 200, 202, 203, 208, 246, 259, 266, 267, 276, 420, 454, 523, 527, 529, 594, 621, 655, 824, 845, 864, 865, 867, 874], "111": [12, 32, 35, 46, 113, 127, 146, 170, 197, 210, 228, 233, 246, 420], "122": [12, 16, 161, 170, 171, 197, 206, 210, 228, 233, 246, 337, 414, 420, 429, 868, 886], "2013": [12, 16, 18, 19, 43, 59, 81, 82, 129, 145, 170, 197, 246, 272, 277, 278, 284, 362, 414, 417, 419, 420, 429, 431, 437, 479, 567, 598, 663, 668, 860], "079": [12, 137, 197, 246, 420], "724": [12, 13, 20, 197, 210, 233], "313": [12, 20, 35, 143, 149, 170, 228, 233, 886], "decoding_spoc_cmc": [12, 20], "illustr": [13, 27, 28, 68, 69, 90, 94, 95, 125, 134, 139, 143, 147, 151, 152, 166, 167, 172, 189, 200, 201, 202, 204, 206, 208, 212, 217, 228, 232, 238, 242, 481, 482, 841, 861, 868], "discriminatori": 13, "given": [13, 16, 19, 26, 31, 70, 80, 94, 95, 112, 120, 121, 138, 144, 145, 150, 151, 152, 159, 161, 163, 166, 167, 170, 171, 172, 176, 179, 181, 187, 188, 189, 196, 197, 202, 203, 206, 207, 208, 211, 213, 217, 218, 220, 228, 230, 232, 233, 241, 243, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 280, 281, 282, 290, 299, 300, 304, 312, 314, 318, 319, 320, 329, 331, 332, 356, 361, 367, 368, 369, 370, 371, 379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 417, 420, 421, 423, 428, 429, 433, 434, 438, 448, 449, 452, 454, 456, 458, 469, 476, 478, 479, 480, 481, 482, 522, 525, 526, 528, 529, 530, 531, 532, 533, 535, 536, 537, 540, 545, 546, 561, 562, 563, 564, 565, 567, 573, 577, 578, 579, 580, 583, 586, 590, 594, 600, 602, 608, 609, 614, 617, 651, 655, 660, 670, 673, 674, 686, 688, 692, 693, 694, 696, 697, 699, 701, 704, 706, 707, 708, 709, 710, 714, 715, 716, 717, 718, 719, 722, 724, 726, 730, 732, 737, 741, 742, 746, 754, 758, 760, 770, 771, 772, 778, 782, 784, 785, 786, 788, 789, 790, 791, 793, 798, 801, 805, 807, 808, 809, 810, 812, 814, 816, 817, 821, 822, 841, 843, 845, 862, 865, 867, 868, 871, 886], "subsequ": [13, 69, 84, 112, 113, 141, 143, 146, 158, 162, 167, 197, 201, 204, 206, 217, 236, 246, 266, 267, 481, 482, 562, 565, 572, 583, 698, 841, 848, 861, 865, 868, 886], "accur": [13, 26, 41, 44, 45, 50, 109, 135, 136, 159, 160, 177, 183, 189, 197, 205, 206, 208, 211, 213, 259, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 456, 481, 482, 521, 562, 576, 589, 744, 793, 820, 861, 886], "generalizingestim": [13, 197, 430, 876, 886], "events_fnam": 13, "auditori": [13, 15, 30, 31, 37, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 60, 61, 65, 71, 78, 80, 86, 87, 94, 112, 116, 119, 120, 124, 127, 132, 141, 142, 143, 144, 146, 147, 150, 151, 152, 153, 166, 167, 169, 173, 176, 177, 179, 180, 181, 182, 183, 194, 195, 196, 197, 203, 208, 213, 218, 224, 232, 236, 238, 241, 243, 246, 259, 260, 261, 263, 266, 267, 268, 269, 271, 272, 277, 355, 357, 361, 363, 365, 419, 440, 454, 481, 494, 519, 520, 525, 527, 528, 529, 540, 575, 598, 618, 620, 626, 632, 639, 654, 709, 754, 886], "050": [13, 30, 56, 81, 141, 143, 150, 170, 181, 201, 209, 210, 225, 246], "faster": [13, 18, 44, 120, 141, 184, 197, 206, 243, 246, 258, 266, 267, 268, 269, 272, 273, 274, 277, 280, 281, 282, 362, 365, 453, 469, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522, 562, 564, 693, 694, 696, 697, 843, 848, 849, 851, 874, 886], "constructor": [13, 88, 141, 143, 152, 166, 167, 173, 202, 204, 207, 219, 223, 226, 261, 273, 274, 277, 280, 281, 282, 480, 563, 579, 812, 817, 845, 865, 886], "497": [13, 14, 15, 76, 88, 99, 121, 133, 179, 206, 233, 246, 279], "310": [13, 14, 15, 35, 76, 81, 88, 99, 109, 112, 121, 133, 170, 206, 210, 228, 233], "lbfg": [13, 18, 197], "time_gen": [13, 197], "experiment": [13, 16, 45, 70, 71, 73, 76, 81, 82, 83, 90, 93, 127, 141, 142, 147, 150, 151, 152, 154, 166, 168, 169, 170, 181, 197, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 228, 246, 266, 267, 268, 269, 271, 414, 429, 481, 482, 483, 529, 583, 594, 595, 658, 659, 666, 706, 709, 841, 861, 868, 872, 886], "34": [13, 19, 28, 34, 35, 41, 45, 47, 68, 71, 81, 103, 108, 109, 112, 114, 116, 123, 130, 146, 170, 172, 175, 177, 182, 186, 188, 196, 197, 203, 210, 211, 224, 228, 229, 230, 232, 233, 237, 238, 246, 571, 687], "54": [13, 19, 28, 34, 35, 45, 47, 81, 103, 108, 112, 114, 145, 152, 159, 170, 197, 206, 210, 211, 216, 228, 229, 232, 233, 246, 279, 886], "1225": 13, "349": [13, 19, 170, 197, 210, 246, 868], "411": [13, 79, 135, 136, 228, 233, 246, 356], "432": [13, 172, 197, 233], "442": [13, 210, 228, 233], "449": [13, 233, 279], "106": [13, 16, 35, 72, 96, 97, 100, 121, 142, 146, 153, 167, 170, 173, 178, 181, 197, 202, 206, 232, 233, 871], "445": [13, 137, 210, 228], "89it": [13, 19, 34, 103, 108, 196, 197, 210, 228, 229, 233], "118": [13, 19, 61, 170, 228, 232, 233, 246, 562, 886], "132": [13, 35, 46, 152, 170, 197, 216, 228, 232, 233], "429": [13, 29, 56, 197], "441": [13, 35, 233, 246, 562, 592], "168": [13, 35, 45, 129, 130, 170, 177, 182, 228, 233, 238], "452": [13, 228, 233, 279], "186": [13, 35, 45, 138, 140, 145, 170, 177, 182, 202, 232, 233], "461": [13, 109, 228, 233], "203": [13, 35, 40, 42, 49, 50, 58, 59, 80, 87, 92, 93, 94, 99, 111, 116, 119, 121, 123, 124, 131, 143, 151, 153, 157, 158, 159, 163, 170, 171, 173, 178, 179, 180, 181, 197, 201, 207, 208, 210, 211, 225, 228, 246], "465": [13, 35, 204, 233], "220": [13, 81, 106, 138, 170, 210, 232, 233], "469": 13, "235": [13, 112, 159, 170, 182, 210, 228, 232, 233], "466": 13, "249": [13, 42, 46, 112, 152, 170, 197, 210, 227, 228, 233, 246], "264": [13, 46, 81, 82, 112, 152, 170, 192, 210, 228, 233, 246], "460": [13, 81, 109, 185, 228, 246, 860], "280": [13, 81, 112, 170, 171, 228, 233, 340, 886], "298": [13, 46, 75, 170, 228, 233], "315": [13, 112, 170, 210, 233, 886], "44it": [13, 19, 34, 103, 112, 197, 210, 228, 229, 230, 233], "329": [13, 170, 197, 210, 228, 233], "344": [13, 19, 145, 170, 233], "463": [13, 279], "360": [13, 40, 48, 49, 54, 55, 58, 59, 81, 82, 93, 94, 121, 153, 163, 170, 173, 179, 192, 196, 210, 228, 233, 242], "464": [13, 75, 145, 172, 196, 197, 210, 212, 228, 233, 279], "63it": [13, 19, 33, 34, 103, 112, 196, 197, 210, 228, 230, 233, 238], "404": [13, 81, 228], "457": [13, 233], "416": [13, 136, 140, 145, 172, 210, 228, 233], "450": [13, 75, 81, 142, 161, 233, 279, 886], "92it": [13, 19, 103, 108, 112, 197, 210, 228, 229, 232, 233, 237], "37": [13, 19, 21, 28, 34, 35, 45, 47, 79, 81, 103, 108, 112, 114, 146, 158, 167, 170, 172, 175, 196, 197, 210, 228, 229, 230, 232, 233, 236, 237, 238, 241, 337, 405, 454, 573, 886], "38": [13, 19, 21, 28, 34, 35, 45, 47, 71, 73, 79, 81, 82, 93, 96, 103, 104, 106, 108, 112, 114, 127, 141, 142, 143, 145, 159, 170, 181, 185, 192, 196, 197, 202, 208, 210, 228, 229, 230, 232, 233, 236, 237, 238, 573], "436": [13, 233, 246], "31it": [13, 19, 34, 96, 103, 109, 181, 196, 197, 210, 229, 232, 233], "485": [13, 19, 197, 228, 233, 279], "438": [13, 48, 49, 54, 55, 56, 197, 210, 228, 233], "503": [13, 51, 56, 233], "444": [13, 233, 238], "518": 13, "533": [13, 19, 233], "443": [13, 44, 56, 144, 246], "548": [13, 233], "566": [13, 69, 141, 210], "584": [13, 40, 56], "453": [13, 210, 233, 279], "602": [13, 84, 85, 169, 204, 233, 871], "458": [13, 185, 197, 228, 233], "617": 13, "456": [13, 40, 56, 145, 196, 197, 210, 233, 279], "96it": [13, 19, 34, 103, 109, 181, 196, 197, 210, 228, 229, 232, 233], "631": [13, 233], "454": [13, 145, 210, 233, 279], "643": [13, 233], "448": [13, 126, 172, 228, 233, 279, 886], "655": [13, 209, 233], "35it": [13, 19, 34, 108, 109, 112, 181, 196, 197, 210, 228, 229, 233], "667": [13, 233], "678": [13, 233], "56": [13, 15, 19, 32, 35, 45, 47, 56, 60, 75, 80, 81, 82, 88, 103, 108, 112, 114, 136, 140, 152, 155, 161, 170, 172, 173, 175, 177, 181, 192, 197, 210, 212, 228, 229, 232, 233, 246, 260, 413, 563, 693, 694, 696, 697], "690": [13, 81, 197, 233], "427": [13, 233], "57": [13, 19, 34, 35, 40, 41, 45, 79, 81, 103, 108, 112, 114, 117, 126, 137, 151, 152, 158, 170, 172, 181, 184, 185, 188, 192, 196, 197, 208, 210, 219, 228, 229, 230, 232, 233, 237, 238, 241, 246, 266, 267, 268, 269, 337, 478, 481, 482, 708, 710, 718, 724, 886], "702": [13, 233], "423": [13, 163, 210, 228, 233], "713": [13, 152, 197], "418": [13, 210, 233, 886], "41it": [13, 19, 103, 108, 109, 112, 196, 197, 210, 228, 229, 230, 232, 233, 238], "59": [13, 15, 19, 25, 28, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 49, 54, 55, 58, 59, 60, 69, 71, 76, 78, 79, 81, 83, 85, 90, 92, 93, 94, 103, 108, 111, 112, 114, 116, 118, 121, 127, 131, 142, 143, 146, 151, 152, 153, 157, 159, 163, 170, 173, 177, 179, 183, 185, 196, 197, 200, 201, 206, 207, 208, 210, 224, 228, 229, 230, 232, 233, 237, 238, 241, 246, 279, 434, 573, 583, 594, 699, 700], "413": [13, 114, 179, 228, 246], "37it": [13, 19, 33, 34, 109, 112, 196, 197, 210, 228, 229, 232, 233, 236, 238], "735": [13, 197, 233], "408": [13, 35, 81, 186, 233], "746": [13, 38, 56, 197], "757": [13, 150, 155, 197, 233], "399": [13, 81, 228, 233], "770": [13, 81, 233], "783": [13, 233], "392": [13, 81, 228, 233], "803": [13, 233], "387": [13, 35, 81, 96, 197, 228, 233, 246, 299], "812": [13, 233], "381": [13, 81, 233], "827": [13, 210], "384": [13, 21, 35, 81, 145, 172, 210, 233], "843": [13, 210, 233], "389": [13, 24, 25, 81, 210, 233], "396": [13, 41, 45, 81, 177, 182, 196, 246, 299], "72": [13, 15, 19, 28, 35, 45, 47, 68, 71, 78, 80, 81, 96, 100, 103, 104, 112, 114, 117, 123, 141, 150, 157, 163, 170, 178, 181, 183, 184, 185, 186, 196, 197, 201, 210, 211, 228, 229, 230, 231, 232, 233, 236, 246, 562, 571, 868, 886], "878": [13, 210, 246, 690], "402": [13, 35, 81, 145, 228, 871], "890": [13, 81, 197, 210, 233, 246, 279], "395": [13, 56, 81, 233], "915": [13, 233], "77it": [13, 19, 34, 103, 109, 112, 196, 197, 210, 229, 232, 233], "933": [13, 210, 233], "403": [13, 50, 81, 210, 233], "951": 13, "410": [13, 19, 59, 71, 81, 83, 129, 200, 204, 208, 220, 228, 241, 246, 479], "969": [13, 47, 56, 233], "988": [13, 210], "424": [13, 56, 233], "1007": [13, 19, 59, 152, 197, 207, 208, 209, 225, 246, 299, 300, 413, 479, 529, 562, 578, 671, 868], "431": [13, 210, 228, 233], "83": [13, 19, 35, 40, 47, 81, 103, 108, 112, 114, 170, 196, 197, 202, 205, 210, 211, 228, 229, 232, 233, 246, 337, 561, 609, 693, 694, 696, 697], "1022": [13, 170, 210], "1040": [13, 210], "437": [13, 84, 138, 184], "1054": 13, "435": [13, 145, 210, 228, 233], "1071": [13, 19], "439": [13, 56, 57, 228, 233, 448], "89": [13, 19, 34, 35, 47, 71, 78, 79, 80, 81, 82, 103, 108, 112, 114, 137, 170, 185, 192, 196, 197, 201, 210, 228, 229, 232, 233, 246, 571, 868], "1087": 13, "1102": 13, "1119": 13, "93": [13, 19, 33, 35, 40, 47, 80, 103, 108, 112, 114, 170, 196, 197, 210, 228, 229, 232, 233, 246, 598], "1137": [13, 40, 210, 246, 478], "1153": 13, "96": [13, 15, 18, 19, 44, 47, 79, 82, 103, 107, 108, 112, 113, 114, 124, 135, 138, 163, 170, 172, 181, 185, 196, 197, 207, 208, 210, 228, 229, 230, 231, 232, 233, 238, 246, 268, 269, 417, 419, 431, 794, 865], "1171": 13, "1188": [13, 197], "1207": [13, 302], "1224": [13, 197], "constrained_layout": [13, 90, 184, 213, 242, 722, 732], "vmax": [13, 19, 70, 88, 107, 112, 114, 116, 117, 124, 137, 142, 161, 177, 196, 197, 211, 212, 228, 230, 231, 242, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 706, 708, 710, 754, 771, 785, 786, 789, 793, 797, 806, 809, 814, 815, 816, 886], "xaxi": [13, 127], "set_ticks_posit": 13, "bottom": [13, 70, 73, 74, 112, 120, 127, 141, 147, 162, 192, 219, 220, 228, 233, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 767, 784, 794, 812, 817, 841, 886], "ntest": 13, "ntrain": 13, "fontweight": [13, 127, 145, 211], "bold": [13, 127, 145, 152, 201, 204, 207, 208, 209, 211, 212, 228], "r\u00e9mi": [13, 197, 246], "stanisla": [13, 16, 138, 197, 246, 414, 429, 886], "dehaen": [13, 16, 197, 246, 414, 429], "dynam": [13, 21, 27, 32, 33, 70, 94, 105, 106, 112, 167, 181, 197, 203, 205, 206, 213, 225, 246, 266, 269, 272, 277, 289, 291, 292, 293, 294, 299, 421, 452, 454, 481, 482, 529, 562, 563, 570, 685, 807, 841, 852, 862, 868, 871, 886], "represent": [13, 17, 20, 27, 43, 44, 94, 103, 112, 115, 141, 150, 161, 167, 169, 170, 171, 173, 176, 191, 197, 206, 217, 218, 236, 237, 238, 241, 242, 246, 266, 267, 268, 269, 276, 278, 362, 365, 448, 454, 481, 482, 513, 559, 562, 706, 708, 710, 733, 734, 736, 737, 738, 762, 798, 841, 852, 862, 871, 886], "tempor": [13, 16, 19, 27, 46, 59, 77, 85, 105, 106, 113, 114, 136, 137, 138, 141, 143, 147, 152, 166, 181, 185, 198, 199, 202, 203, 204, 205, 208, 211, 219, 228, 230, 231, 232, 233, 239, 240, 246, 261, 266, 268, 269, 271, 277, 278, 279, 356, 362, 419, 425, 433, 436, 439, 453, 454, 456, 477, 478, 479, 481, 482, 522, 526, 528, 529, 543, 545, 546, 559, 562, 564, 578, 594, 601, 602, 617, 621, 632, 634, 636, 641, 661, 662, 663, 664, 665, 666, 667, 668, 678, 680, 681, 682, 687, 689, 696, 697, 698, 719, 722, 732, 733, 734, 735, 736, 737, 738, 754, 862, 863, 868, 886], "trend": [13, 65, 113, 142, 197, 246], "cognit": [13, 42, 43, 197, 203, 246, 257, 278, 362, 530, 873], "tic": [13, 197, 246], "129": [13, 14, 15, 16, 35, 61, 72, 88, 106, 112, 121, 128, 142, 170, 171, 228, 233, 246], "decoding_time_generalization_condit": [13, 20], "Then": [14, 19, 45, 67, 82, 109, 113, 115, 135, 136, 137, 141, 157, 162, 182, 191, 192, 193, 208, 233, 243, 268, 269, 319, 438, 577, 701, 790, 845, 849, 856, 865, 868], "virtual": [14, 70, 99, 152, 206, 209, 266, 267, 268, 269, 316, 434, 481, 482, 593, 648, 651, 841, 843, 853, 886], "output": [14, 19, 32, 35, 40, 44, 46, 47, 59, 113, 114, 122, 127, 135, 136, 141, 144, 150, 152, 156, 162, 164, 165, 166, 169, 172, 173, 189, 193, 196, 197, 203, 204, 206, 207, 208, 214, 217, 218, 220, 223, 228, 230, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 418, 419, 423, 424, 425, 426, 429, 430, 432, 434, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 464, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 555, 557, 558, 562, 564, 565, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 585, 587, 588, 589, 590, 591, 592, 594, 595, 597, 598, 601, 602, 603, 606, 607, 608, 609, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 626, 628, 629, 630, 631, 632, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 651, 652, 654, 655, 657, 658, 659, 660, 669, 670, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 693, 694, 695, 696, 697, 698, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 724, 725, 728, 729, 733, 734, 736, 737, 738, 739, 742, 743, 744, 749, 753, 754, 758, 762, 770, 779, 782, 786, 787, 788, 789, 794, 795, 797, 798, 799, 804, 805, 807, 808, 810, 811, 812, 813, 817, 818, 819, 822, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844, 845, 849, 850, 853, 865, 868, 869, 871, 886], "asish": [14, 886], "asishrocks95": 14, "decod": [14, 16, 19, 20, 21, 153, 166, 167, 169, 196, 198, 199, 246, 263, 266, 268, 269, 271, 277, 314, 330, 356, 365, 375, 442, 454, 481, 489, 494, 496, 506, 523, 528, 529, 531, 540, 543, 559, 563, 615, 621, 626, 706, 754, 862, 876, 886], "unsupervisedspatialfilt": [14, 876, 886], "fastica": [14, 76, 206, 562], "aud_l": [14, 15, 18, 42, 178, 232, 266, 267, 784, 787], "vis_l": [14, 15, 18, 42, 232], "ie": [14, 53, 110, 263, 273, 277, 281, 611, 722, 732, 754, 779, 812, 813], "pca_data": 14, "evokedarrai": [14, 15, 16, 18, 21, 84, 100, 109, 184, 189, 197, 223, 233, 267, 268, 482, 535, 536, 623, 625, 841, 876, 886], "window_titl": [14, 192, 268, 269, 788], "ica_data": 14, "ev1": [14, 886], "540": [14, 20, 81, 224, 225, 233, 246, 299, 300], "decoding_unsupervised_spatial_filt": [14, 20], "erp": [15, 99, 101, 117, 128, 154, 155, 166, 173, 197, 200, 201, 203, 206, 208, 209, 246, 266, 268, 269, 271, 316, 355, 470, 481, 553, 562, 563, 621, 692, 778, 797, 799, 826, 852, 872, 874, 886], "concaten": [15, 70, 74, 81, 112, 138, 152, 169, 189, 192, 205, 207, 217, 243, 266, 267, 268, 269, 363, 364, 365, 413, 422, 478, 481, 482, 565, 581, 583, 594, 671, 796, 886], "rescal": [15, 63, 113, 114, 371, 372, 373, 580, 706, 709, 814, 876, 886], "fed": 15, "classification_report": [15, 138], "confusion_matrix": [15, 138], "minmaxscal": 15, "n_filter": 15, "penalti": [15, 40, 46, 246, 478, 479, 874], "l1": [15, 40, 478, 479], "pred": 15, "report": [15, 138, 166, 174, 175, 193, 211, 213, 214, 229, 243, 246, 263, 266, 267, 268, 270, 271, 275, 277, 291, 293, 437, 454, 481, 482, 487, 528, 551, 562, 580, 583, 599, 624, 722, 732, 736, 784, 801, 807, 843, 845, 861, 864, 865, 866, 868, 874, 876, 886], "target_nam": [15, 138], "cm_normal": 15, "astyp": [15, 72, 135, 146, 161, 192, 196, 204, 217], "float": [15, 19, 31, 40, 65, 93, 115, 144, 145, 146, 150, 161, 170, 189, 193, 196, 206, 217, 219, 228, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 292, 299, 300, 306, 307, 314, 323, 328, 330, 332, 343, 344, 345, 346, 349, 355, 356, 359, 360, 361, 362, 367, 373, 375, 413, 415, 417, 418, 419, 420, 421, 424, 425, 426, 430, 434, 437, 439, 441, 442, 448, 449, 451, 452, 453, 454, 456, 457, 458, 465, 471, 472, 476, 478, 479, 480, 481, 482, 491, 492, 500, 506, 515, 517, 518, 522, 523, 525, 526, 529, 530, 531, 532, 533, 535, 536, 540, 541, 542, 544, 545, 546, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 596, 598, 599, 600, 602, 603, 612, 637, 643, 644, 645, 646, 655, 656, 661, 662, 663, 664, 665, 666, 667, 668, 671, 673, 676, 677, 678, 680, 681, 684, 685, 688, 689, 690, 692, 693, 694, 696, 697, 698, 699, 700, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 724, 725, 730, 732, 733, 734, 735, 736, 737, 738, 742, 743, 744, 754, 758, 759, 767, 771, 773, 774, 778, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 804, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 822, 839, 871, 886], "sum": [15, 28, 31, 41, 47, 60, 72, 82, 109, 113, 114, 117, 138, 145, 150, 162, 163, 169, 176, 184, 185, 203, 228, 229, 233, 243, 266, 267, 268, 269, 272, 273, 274, 277, 280, 281, 282, 288, 355, 360, 481, 482, 544, 562, 567, 658, 693, 694, 696, 697, 701, 707, 708, 710, 786, 865, 868, 871, 886], "imshow": [15, 16, 22, 70, 107, 115, 116, 127, 135, 137, 147, 161, 173, 197, 228, 230, 231, 232, 233, 266, 267, 268, 269, 323, 706, 755, 757, 792, 815, 824], "nearest": [15, 26, 80, 116, 120, 135, 137, 141, 146, 161, 169, 183, 217, 228, 263, 266, 267, 268, 269, 272, 273, 274, 275, 277, 279, 280, 281, 282, 284, 362, 367, 413, 420, 481, 482, 561, 562, 577, 701, 706, 707, 708, 709, 710, 742, 754, 771, 772, 778, 786, 793, 797, 806, 809, 814, 816, 868, 871, 886], "blue": [15, 54, 55, 80, 83, 112, 132, 136, 143, 152, 157, 173, 176, 178, 179, 182, 191, 208, 236, 237, 243, 264, 754, 769, 770, 778, 782, 841], "tick_mark": 15, "ytick": [15, 127, 196, 203, 228], "precis": [15, 47, 70, 79, 90, 135, 138, 158, 185, 193, 203, 204, 211, 217, 225, 260, 266, 267, 272, 299, 300, 454, 481, 482, 503, 594, 662, 664, 683, 733, 734, 736, 737, 861, 865, 871, 886], "recal": [15, 90, 138, 150, 151, 157, 218, 662, 663, 665, 668], "f1": [15, 70, 90, 138, 662], "support": [15, 34, 61, 123, 135, 136, 137, 138, 141, 143, 150, 151, 152, 167, 171, 173, 182, 183, 186, 190, 191, 193, 220, 241, 242, 243, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 273, 274, 276, 277, 279, 280, 281, 282, 299, 300, 306, 314, 320, 322, 342, 356, 361, 362, 371, 372, 373, 375, 394, 413, 420, 421, 429, 434, 443, 444, 446, 447, 451, 452, 453, 473, 480, 481, 482, 487, 492, 502, 505, 506, 507, 508, 512, 517, 521, 524, 525, 562, 573, 582, 583, 594, 616, 619, 620, 634, 641, 642, 651, 654, 655, 671, 687, 689, 698, 701, 706, 708, 709, 710, 754, 770, 772, 775, 778, 782, 783, 784, 788, 793, 801, 807, 808, 812, 817, 818, 819, 820, 823, 841, 843, 845, 848, 850, 851, 852, 857, 863, 865, 872, 886], "288": [15, 35, 71, 72, 112, 132, 142, 146, 161, 170, 172, 210, 233, 238, 246, 571], "macro": [15, 138], "avg": [15, 138, 145, 228, 258, 733, 734], "attribut": [15, 30, 31, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 71, 78, 83, 86, 87, 116, 119, 120, 127, 141, 142, 144, 150, 151, 152, 167, 169, 170, 171, 173, 176, 177, 179, 180, 182, 183, 184, 202, 206, 207, 211, 212, 220, 223, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 304, 355, 367, 413, 414, 416, 417, 419, 420, 421, 423, 428, 431, 470, 471, 480, 481, 482, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 521, 561, 562, 563, 618, 624, 628, 634, 656, 691, 706, 707, 708, 709, 710, 741, 754, 756, 778, 787, 800, 835, 841, 845, 863, 886], "last": [15, 70, 82, 104, 127, 138, 141, 145, 147, 152, 161, 167, 184, 189, 197, 201, 202, 203, 204, 206, 207, 217, 220, 228, 229, 236, 243, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 280, 281, 282, 289, 290, 304, 322, 344, 356, 364, 416, 423, 424, 426, 437, 451, 452, 453, 454, 480, 481, 482, 506, 523, 528, 557, 562, 565, 687, 692, 693, 694, 696, 697, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 724, 735, 741, 754, 786, 791, 793, 798, 801, 808, 814, 841, 844, 862, 867, 868, 886], "nrow": [15, 45, 73, 120, 127, 147, 152, 177, 184, 212, 229, 268, 269, 413, 420, 562, 793, 797, 871, 886], "fitted_xdawn": 15, "get_channel_typ": [15, 141, 170, 266, 267, 268, 269, 271, 481, 482, 562, 706, 708, 709, 710, 886], "get_montag": [15, 115, 135, 136, 137, 266, 267, 268, 269, 271, 481, 482, 886], "cur_class": 15, "cur_pattern": 15, "pattern_evok": 15, "time_format": [15, 21, 100, 109, 112, 146, 177, 219, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 562, 706, 709, 793, 801, 807, 886], "show_nam": [15, 67, 100, 120, 152, 171, 183, 229, 263, 266, 267, 268, 269, 275, 314, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 771, 790, 793, 797, 804, 806, 809, 810, 814, 886], "h_pad": [15, 228], "w_pad": [15, 228], "bertrand": [15, 71, 78, 88, 197, 201, 246, 563, 571, 722, 732, 733, 736, 868, 886], "rivet": [15, 88, 197, 246, 563], "antoin": [15, 88, 197, 246, 563, 886], "souloumiac": [15, 88, 197, 246, 563], "virgini": [15, 88, 197, 246, 563], "attina": [15, 88, 197, 246, 563], "gibert": [15, 88, 197, 246, 563], "algorithm": [15, 27, 31, 70, 74, 77, 83, 84, 85, 88, 113, 126, 135, 153, 157, 158, 163, 167, 197, 201, 203, 206, 211, 228, 233, 236, 237, 238, 246, 271, 272, 276, 311, 356, 412, 413, 427, 434, 478, 481, 529, 548, 562, 563, 565, 570, 572, 573, 579, 583, 585, 592, 594, 601, 602, 603, 666, 683, 688, 744, 852, 857, 861, 862, 863, 874, 886], "enhanc": [15, 88, 196, 197, 229, 233, 246, 419, 562, 563, 583, 693, 694, 696, 697, 845, 864, 871, 874], "2035": [15, 19, 88, 181, 197, 246, 563], "2043": [15, 88, 170, 197, 246, 563], "2009": [15, 35, 58, 88, 117, 172, 197, 206, 228, 229, 246, 277, 476, 563, 577, 693, 694, 696, 697, 861, 871, 886], "2012869": [15, 88, 197, 246, 563], "hubert": [15, 88, 246, 563, 886], "cecotti": [15, 88, 246, 563], "emmanuel": [15, 88, 203, 246, 563], "mabi": [15, 88, 246, 563], "j\u00e9r\u00e9mie": [15, 88, 246, 563], "mattout": [15, 88, 246, 563], "theoret": [15, 88, 196, 197, 203, 223, 246, 413, 563, 841], "effici": [15, 42, 44, 88, 192, 203, 228, 246, 261, 266, 267, 268, 269, 425, 481, 482, 562, 563, 564, 666, 708, 710, 736, 737, 863, 886], "p300": [15, 88, 192, 197, 203, 246, 563, 735, 738], "proceed": [15, 33, 40, 46, 88, 167, 181, 205, 206, 225, 246, 292, 299, 479, 563, 735, 738, 861, 868], "eusipco": [15, 88, 246, 563, 735, 738], "1382": [15, 88, 246, 563], "1386": [15, 88, 246, 563], "barcelona": [15, 88, 246, 563], "url": [15, 88, 113, 152, 197, 246, 356, 382, 388, 390, 394, 405, 406, 476, 529, 563, 688, 735, 738, 845, 868, 886], "ieeexplor": [15, 88, 246, 563, 735, 738], "7073970": [15, 88, 246, 563], "806": [15, 20, 233], "decoding_xdawn_eeg": [15, 20], "cours": [16, 27, 32, 36, 38, 39, 41, 50, 56, 70, 74, 83, 90, 92, 95, 101, 113, 116, 136, 137, 143, 144, 152, 166, 167, 173, 176, 177, 178, 181, 187, 188, 197, 200, 203, 207, 208, 225, 233, 238, 246, 264, 265, 266, 267, 268, 269, 272, 273, 274, 277, 279, 280, 281, 282, 291, 293, 295, 298, 362, 414, 429, 447, 456, 466, 476, 478, 479, 481, 482, 517, 524, 528, 529, 543, 559, 624, 628, 634, 656, 670, 672, 673, 692, 706, 708, 709, 710, 753, 754, 778, 805, 812, 817, 841, 868, 871, 886], "techniqu": [16, 17, 20, 27, 59, 70, 73, 74, 75, 150, 152, 166, 167, 197, 200, 203, 205, 206, 208, 209, 211, 212, 213, 215, 225, 228, 246, 266, 267, 268, 269, 271, 375, 415, 424, 427, 449, 451, 452, 472, 481, 482, 559, 562, 621, 651, 841, 862, 868, 869, 874], "By": [16, 45, 70, 80, 83, 103, 104, 112, 135, 136, 143, 146, 150, 151, 152, 159, 167, 169, 170, 171, 172, 173, 179, 189, 190, 201, 203, 206, 207, 208, 209, 211, 214, 217, 218, 220, 241, 258, 266, 267, 268, 269, 271, 272, 273, 274, 277, 280, 281, 282, 311, 328, 437, 454, 481, 482, 562, 565, 648, 671, 683, 699, 706, 707, 708, 709, 710, 780, 784, 792, 800, 807, 817, 868, 874, 886], "onto": [16, 18, 40, 73, 136, 137, 143, 156, 167, 171, 176, 181, 196, 201, 207, 208, 211, 224, 272, 274, 280, 282, 421, 590, 655, 683, 754, 770, 805, 824, 862, 868, 886], "surrog": [16, 158, 184, 208, 367, 429, 475, 886], "expos": [16, 133, 196, 232, 850, 886], "exhibit": [16, 243, 268, 269, 273, 274, 277, 280, 281, 282, 868], "evolut": [16, 113, 562, 801], "compute_em": [16, 876, 886], "audl": [16, 72], "visl": [16, 72], "wai": [16, 21, 27, 34, 43, 44, 74, 114, 115, 127, 135, 141, 142, 143, 145, 150, 151, 152, 157, 161, 162, 167, 169, 170, 171, 172, 173, 178, 181, 191, 196, 201, 202, 203, 204, 206, 207, 208, 211, 213, 218, 219, 220, 223, 225, 228, 230, 231, 236, 238, 243, 246, 260, 261, 264, 265, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 356, 437, 447, 481, 482, 496, 522, 562, 564, 579, 586, 595, 617, 624, 655, 687, 688, 689, 695, 701, 706, 709, 720, 722, 732, 736, 754, 841, 843, 845, 848, 851, 861, 862, 863, 864, 867, 869, 886], "n_epoch": [16, 114, 141, 147, 150, 167, 196, 197, 223, 233, 242, 261, 266, 267, 316, 413, 414, 415, 418, 419, 420, 421, 422, 424, 425, 427, 428, 451, 452, 563, 570, 708, 709, 711, 712, 713, 733, 734, 735, 778, 784, 785, 886], "n_time": [16, 19, 31, 63, 65, 67, 70, 75, 83, 114, 141, 147, 150, 160, 167, 191, 192, 196, 197, 206, 209, 217, 223, 225, 228, 232, 233, 236, 237, 238, 261, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 316, 350, 413, 414, 415, 418, 419, 420, 421, 422, 424, 426, 427, 429, 447, 449, 451, 452, 480, 481, 482, 502, 537, 563, 592, 656, 661, 662, 663, 664, 665, 666, 667, 668, 673, 680, 681, 682, 686, 692, 696, 697, 706, 708, 709, 710, 711, 712, 713, 724, 725, 729, 731, 733, 734, 735, 754, 778, 785, 786, 793, 814, 886], "993": [16, 18, 113, 233], "613": [16, 18, 196, 228, 233, 235], "145": [16, 18, 45, 73, 75, 82, 150, 170, 197, 224, 233], "x_transform": 16, "leav": [16, 138, 145, 173, 192, 200, 205, 217, 602, 843, 851, 853, 886], "recommend": [16, 41, 43, 44, 45, 70, 114, 135, 156, 159, 162, 173, 189, 191, 193, 203, 204, 206, 207, 209, 211, 246, 261, 266, 267, 268, 269, 273, 277, 281, 284, 309, 311, 320, 332, 349, 356, 361, 362, 375, 412, 415, 421, 457, 476, 481, 482, 501, 512, 522, 529, 535, 542, 562, 567, 579, 594, 601, 617, 619, 623, 648, 654, 655, 692, 696, 697, 763, 770, 812, 843, 845, 849, 850, 851, 864, 865, 868, 886], "stratifi": [16, 430], "tend": [16, 163, 179, 203, 205, 206, 228, 572, 865, 868], "overfit": [16, 88, 196], "cannot": [16, 59, 162, 170, 173, 189, 191, 193, 203, 204, 207, 209, 219, 238, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 292, 343, 345, 435, 481, 482, 529, 562, 582, 583, 626, 655, 706, 754, 790, 812, 817, 833, 843, 845, 867, 886], "x_scale": 16, "futur": [16, 70, 172, 206, 220, 284, 419, 425, 453, 583, 845, 849, 863, 865, 867, 886], "filters_": [16, 18, 413, 414, 417, 420, 421, 431, 563, 886], "individu": [16, 26, 32, 37, 42, 43, 44, 101, 135, 141, 143, 145, 156, 160, 167, 171, 173, 176, 201, 207, 208, 212, 219, 220, 228, 242, 243, 246, 261, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 299, 300, 330, 351, 413, 454, 481, 482, 530, 538, 539, 579, 602, 624, 684, 690, 698, 735, 738, 772, 784, 788, 792, 805, 807, 832, 845, 861, 862, 867, 868, 886], "argsort": [16, 31, 117, 128, 144, 182], "reorder": [16, 47, 117, 266, 267, 268, 269, 481, 482, 492, 706, 708, 709, 710, 785, 815, 886], "kei": [16, 94, 95, 127, 135, 138, 141, 142, 143, 150, 151, 153, 167, 170, 171, 172, 182, 190, 207, 208, 217, 218, 220, 223, 259, 260, 261, 263, 264, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 285, 290, 299, 300, 304, 326, 327, 356, 360, 361, 367, 370, 371, 372, 373, 388, 394, 405, 413, 420, 422, 429, 437, 440, 442, 456, 457, 458, 461, 473, 476, 478, 479, 481, 482, 514, 518, 528, 529, 540, 552, 561, 562, 564, 577, 579, 580, 583, 605, 618, 620, 637, 650, 657, 658, 659, 671, 675, 691, 692, 693, 694, 696, 697, 706, 708, 709, 710, 741, 744, 754, 771, 776, 777, 778, 782, 784, 785, 786, 787, 788, 790, 792, 793, 794, 797, 806, 807, 809, 810, 812, 814, 816, 817, 818, 839, 845, 851, 862, 874, 886], "ems_av": 16, "u": [16, 19, 21, 47, 70, 79, 104, 112, 115, 116, 138, 142, 145, 147, 150, 152, 161, 167, 172, 173, 181, 182, 184, 189, 190, 196, 202, 203, 206, 207, 208, 214, 217, 218, 223, 246, 257, 258, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 447, 481, 482, 537, 845, 848, 853, 864, 867, 868, 871, 886], "schurger": [16, 197, 246, 414, 429], "thu": [16, 18, 43, 47, 55, 70, 103, 114, 141, 142, 150, 153, 171, 172, 176, 181, 183, 189, 193, 197, 203, 206, 208, 209, 211, 228, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 349, 415, 424, 436, 447, 449, 451, 481, 482, 529, 537, 540, 564, 734, 737, 841, 845, 861, 862, 865, 868, 886], "equalize_event_count": [16, 150, 152, 167, 232, 233, 238, 266, 267, 709, 886], "103": [16, 35, 50, 112, 114, 121, 170, 197, 233, 871], "112": [16, 70, 115, 135, 170, 172, 216, 222, 232, 233, 246, 570, 871], "aaron": [16, 197, 246, 414, 429], "sebastien": [16, 197, 246, 414, 429, 886], "marti": [16, 197, 246, 414, 429, 886], "reveal": [16, 101, 113, 145, 171, 192, 197, 203, 243, 246, 414, 429, 735, 738], "ems_filt": [16, 20], "continu": [17, 19, 20, 21, 27, 98, 102, 141, 143, 146, 149, 152, 162, 169, 189, 197, 198, 199, 200, 202, 203, 206, 207, 211, 215, 218, 222, 223, 228, 241, 246, 258, 260, 266, 267, 268, 269, 271, 347, 355, 359, 361, 365, 413, 419, 420, 421, 425, 453, 454, 481, 482, 494, 501, 512, 522, 523, 559, 561, 562, 565, 574, 612, 617, 690, 691, 692, 706, 708, 709, 710, 731, 778, 790, 797, 799, 841, 845, 861, 862, 867, 871, 874, 886], "spoc": [17, 20, 27, 246, 266, 271, 413, 421, 494, 523, 563, 876, 886], "xdawn": [17, 20, 27, 77, 85, 246, 263, 266, 268, 269, 271, 361, 375, 413, 417, 420, 428, 481, 559, 621, 785, 876, 886], "em": [17, 20, 27, 197, 266, 268, 269, 271, 429, 481, 559, 621, 876, 886], "recept": [17, 20, 27, 166, 198, 199, 246, 252, 271, 314, 330, 375, 419, 425, 453, 482, 816, 862], "spectro": [17, 20, 27, 114, 166, 198, 199, 266, 268, 269, 271, 419, 421, 425, 453, 494, 523, 725], "ssd": [17, 20, 27, 266, 268, 269, 271, 494, 523, 725, 876, 886], "mvpa": [18, 166, 198, 199, 263, 266, 268, 269, 271, 277, 356, 413, 414, 416, 417, 420, 422, 423, 428, 430, 431, 454, 529, 540, 563, 626, 754, 886], "neurophysiolog": [18, 19, 842], "interpret": [18, 19, 103, 143, 152, 160, 161, 189, 197, 203, 204, 219, 230, 232, 233, 238, 246, 261, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 280, 281, 282, 284, 305, 312, 315, 329, 331, 356, 357, 359, 361, 371, 415, 416, 417, 419, 423, 426, 429, 430, 431, 434, 451, 452, 456, 469, 471, 472, 481, 482, 489, 496, 504, 506, 521, 524, 525, 529, 535, 536, 545, 546, 561, 562, 564, 567, 574, 575, 578, 579, 580, 583, 586, 590, 600, 602, 609, 654, 657, 658, 659, 662, 671, 674, 692, 693, 694, 695, 696, 697, 701, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 724, 725, 733, 734, 735, 736, 737, 754, 778, 784, 785, 786, 788, 789, 790, 791, 798, 803, 805, 808, 845, 848, 849, 856, 868, 886], "romain": [18, 886], "trachel": [18, 886], "trachelr": 18, "sample_path": [18, 124, 135, 136, 137], "meg_data": [18, 141], "reshap": [18, 138, 196, 228, 229, 232, 236, 238, 419, 428], "scaler": [18, 876, 886], "coef": [18, 19, 196, 197, 431], "revers": [18, 19, 72, 144, 147, 173, 189, 200, 202, 203, 205, 206, 208, 217, 263, 268, 269, 273, 274, 277, 279, 280, 281, 282, 788, 790, 792, 793, 812, 817, 886], "sequenti": [18, 141, 151, 223, 264, 265, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 284, 337, 356, 357, 359, 361, 416, 423, 426, 429, 430, 456, 469, 471, 481, 482, 521, 524, 525, 535, 536, 545, 546, 567, 574, 575, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 744, 754, 773, 778, 786, 789, 808, 812, 817, 818, 841], "kai": [18, 19, 145, 246, 417, 419, 431, 437], "g\u00f6rgen": [18, 19, 246, 417, 419, 431], "dylan": [18, 19, 83, 246, 417, 419, 431, 562], "hayn": [18, 19, 246, 417, 419, 431], "benjamin": [18, 19, 246, 413, 417, 419, 431], "blankertz": [18, 19, 246, 413, 417, 419, 431], "felix": [18, 19, 112, 246, 417, 419, 431, 886], "bie\u00dfmann": [18, 19, 246, 417, 419, 431], "On": [18, 19, 70, 71, 167, 169, 201, 203, 206, 207, 243, 246, 258, 284, 417, 419, 431, 442, 462, 562, 571, 843, 845, 850, 851, 853, 863, 868, 886], "multivari": [18, 19, 90, 94, 138, 163, 196, 197, 246, 356, 417, 419, 431, 660, 862, 865, 886], "110": [18, 19, 21, 35, 41, 42, 81, 82, 112, 135, 159, 170, 210, 232, 233, 246, 417, 419, 431, 567], "067": [18, 19, 246, 417, 419, 431], "095": [18, 20, 152, 171, 263, 266, 267, 268, 269, 275, 314, 332, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 886], "1033": [18, 20, 170], "linear_model_pattern": [18, 20], "reproduc": [19, 45, 70, 79, 93, 152, 196, 218, 299, 515, 562, 592, 611, 658, 659, 660, 669, 670, 672, 693, 694, 695, 696, 697, 845, 886], "lalor": [19, 196, 246, 419, 862], "mtrf": [19, 196, 246, 419, 876, 886], "receptivefield": [19, 196, 425, 876, 886], "speech": [19, 196, 246, 419, 598, 735, 738, 862], "envelop": [19, 82, 113, 114, 115, 137, 147, 197, 266, 267, 268, 269, 420, 481, 482, 567, 862, 886], "128": [19, 20, 24, 41, 45, 50, 85, 120, 130, 149, 159, 161, 169, 170, 171, 172, 223, 225, 228, 232, 235, 266, 267, 412, 772, 862, 886], "try": [19, 31, 70, 74, 83, 141, 142, 144, 152, 157, 159, 162, 163, 168, 172, 177, 181, 193, 203, 204, 205, 206, 207, 208, 217, 224, 225, 243, 276, 284, 430, 450, 463, 489, 496, 562, 577, 770, 827, 843, 844, 845, 850, 863, 865, 866, 886], "known": [19, 44, 88, 112, 114, 145, 152, 157, 161, 166, 181, 226, 227, 228, 263, 266, 267, 268, 269, 270, 271, 272, 277, 356, 366, 448, 454, 481, 482, 489, 496, 512, 528, 529, 543, 602, 626, 629, 662, 670, 673, 688, 754, 841, 857, 862, 868, 886], "literatur": [19, 145, 243, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709, 841], "simpli": [19, 43, 136, 144, 145, 147, 150, 171, 172, 189, 201, 202, 206, 208, 211, 218, 219, 228, 242, 243, 261, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 299, 300, 481, 482, 579, 580, 706, 709, 843, 845, 848, 853, 862, 868, 886], "chri": [19, 114, 137, 196, 197, 246, 886], "holdgraf": [19, 114, 115, 137, 196, 197, 246, 419, 886], "choldgraf": [19, 114, 115, 137, 196], "nicola": [19, 47, 246, 666, 886], "barascud": [19, 886], "sphinx_gallery_thumbnail_numb": [19, 120, 197], "scipi": [19, 31, 97, 111, 157, 172, 173, 196, 203, 207, 225, 228, 229, 230, 233, 236, 237, 243, 258, 263, 266, 267, 268, 269, 273, 274, 275, 277, 278, 279, 280, 281, 282, 284, 320, 331, 360, 362, 413, 415, 420, 424, 448, 449, 451, 452, 453, 456, 481, 482, 561, 562, 570, 577, 654, 686, 688, 693, 694, 696, 697, 699, 700, 706, 708, 709, 710, 722, 725, 732, 754, 771, 786, 793, 797, 806, 808, 809, 814, 816, 844, 845, 865, 867, 870, 883, 886], "loadmat": [19, 196], "collect": [19, 70, 127, 152, 158, 169, 173, 184, 185, 191, 192, 193, 201, 211, 243, 246, 259, 263, 266, 267, 268, 269, 323, 413, 420, 440, 481, 482, 561, 562, 691, 706, 708, 710, 768, 778, 786, 793, 797, 809, 814, 816, 841, 845, 860, 861, 868, 871, 886], "listen": [19, 862, 867, 874], "know": [19, 40, 127, 143, 157, 161, 170, 173, 190, 193, 201, 203, 206, 207, 208, 219, 232, 268, 269, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 537, 540, 647, 794, 845, 848, 851, 852, 863, 865, 868, 886], "primarili": [19, 70, 171, 200, 203, 415, 481, 482, 608, 776, 841, 852], "speech_data": [19, 196], "down": [19, 21, 70, 112, 135, 152, 162, 193, 196, 197, 203, 207, 219, 220, 230, 232, 263, 264, 266, 267, 268, 269, 275, 276, 413, 420, 453, 481, 482, 561, 562, 592, 693, 694, 696, 697, 706, 708, 710, 754, 782, 784, 785, 786, 790, 793, 797, 806, 807, 809, 814, 843, 845, 867, 886], "biosemi128": [19, 171], "rawarrai": [19, 63, 65, 67, 70, 75, 83, 114, 160, 189, 191, 206, 209, 223, 267, 269, 501, 841, 876, 886], "ln": [19, 92, 722, 732, 736, 851, 868], "800": [19, 33, 43, 51, 81, 83, 126, 127, 134, 136, 145, 156, 157, 161, 167, 176, 178, 193, 203, 210, 236, 273, 274, 277, 280, 281, 282, 472, 754, 812, 817], "alpha": [19, 21, 28, 35, 39, 40, 44, 46, 49, 50, 59, 70, 79, 96, 97, 110, 112, 113, 116, 135, 136, 138, 147, 152, 173, 178, 182, 191, 196, 207, 213, 228, 230, 233, 238, 242, 243, 262, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 356, 419, 425, 471, 476, 478, 479, 481, 482, 545, 628, 684, 690, 693, 694, 696, 697, 706, 708, 710, 754, 770, 773, 786, 790, 802, 808, 812, 817, 886], "ln1": 19, "lw": [19, 39, 135, 145, 173, 182, 196, 211, 213, 225, 722, 732, 886], "frameon": [19, 127], "float64": [19, 63, 65, 67, 70, 75, 83, 92, 94, 114, 160, 168, 191, 206, 209, 223, 480, 686, 868], "7677": 19, "7676": 19, "119": [19, 79, 123, 135, 136, 161, 170, 210, 232, 886], "938": [19, 184, 188, 233], "construct": [19, 42, 69, 103, 141, 145, 163, 169, 179, 181, 184, 185, 189, 192, 197, 203, 206, 207, 208, 211, 225, 228, 242, 243, 266, 267, 268, 269, 273, 277, 279, 281, 282, 286, 287, 299, 315, 362, 437, 448, 449, 451, 452, 481, 482, 498, 577, 618, 651, 655, 656, 692, 701, 712, 715, 767, 773, 807, 812, 818, 841, 861, 868, 886], "relationship": [19, 22, 144, 161, 193, 205, 228, 419, 425, 457, 722, 732, 733, 734, 736, 737, 841, 862, 867, 868], "rf": [19, 196, 419], "feature_nam": [19, 196, 419, 886], "corrcoef": [19, 22, 47, 419], "extra": [19, 81, 82, 146, 161, 167, 170, 171, 192, 208, 217, 224, 263, 266, 267, 268, 269, 275, 307, 308, 314, 337, 339, 413, 414, 420, 432, 481, 482, 561, 562, 577, 706, 708, 710, 750, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 841, 849, 853, 886], "inclus": [19, 123, 141, 144, 186, 258, 266, 267, 276, 279, 382, 405, 406, 458, 476, 478, 479, 492, 540, 557, 562, 583, 698, 707, 709, 886], "n_delai": [19, 419], "held": [19, 80, 172, 196, 867], "coef_": [19, 196, 417, 419, 561], "n_output": [19, 419, 425], "n_featur": [19, 196, 197, 413, 414, 415, 417, 418, 419, 420, 421, 424, 425, 428, 563, 592, 686], "delays_": [19, 196, 419], "mean_coef": 19, "mean_scor": 19, "ix_ch": 19, "00it": [19, 33, 108, 112, 196, 197, 210, 228, 229, 232, 233, 238], "sometim": [19, 27, 60, 79, 83, 112, 115, 117, 127, 128, 135, 141, 145, 157, 162, 169, 170, 190, 191, 201, 203, 204, 206, 208, 209, 228, 263, 266, 267, 268, 269, 271, 275, 413, 420, 481, 482, 497, 561, 562, 577, 612, 618, 706, 708, 710, 771, 778, 786, 793, 797, 806, 809, 814, 816, 841, 845, 853, 861, 865, 868, 886], "well": [19, 22, 32, 37, 47, 70, 78, 116, 120, 135, 137, 138, 141, 144, 145, 151, 153, 161, 163, 166, 167, 170, 173, 176, 183, 185, 189, 190, 192, 196, 200, 201, 203, 205, 206, 207, 208, 209, 211, 213, 215, 217, 223, 225, 233, 241, 243, 246, 266, 267, 268, 269, 276, 277, 322, 344, 356, 371, 413, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 437, 452, 453, 481, 482, 562, 563, 576, 582, 594, 601, 706, 722, 724, 732, 735, 736, 737, 738, 784, 786, 800, 841, 843, 845, 851, 857, 862, 863, 865, 867, 868, 870, 874, 886], "recreat": [19, 127, 141, 203, 777], "time_plot": 19, "180": [19, 24, 35, 81, 90, 92, 111, 157, 170, 179, 192, 196, 197, 200, 202, 204, 206, 210, 213, 228, 232, 233, 273, 274, 277, 280, 281, 282, 447, 759, 886], "highlight": [19, 21, 90, 95, 114, 120, 151, 152, 173, 176, 177, 204, 206, 211, 219, 263, 264, 266, 267, 268, 269, 276, 413, 420, 481, 482, 561, 706, 708, 710, 771, 782, 786, 788, 793, 809, 814, 816, 845, 886], "max_coef": 19, "pcolormesh": [19, 114, 196, 886], "shade": [19, 196, 207, 763, 778, 819, 820, 886], "gouraud": [19, 196], "ncoeffici": 19, "setp": [19, 196, 204], "get_xticklabel": [19, 196], "2c": [19, 868], "ix_plot": 19, "argmin": [19, 120, 145, 243], "vlim": [19, 70, 80, 100, 109, 142, 143, 205, 208, 212, 233, 243, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 886], "nfor": 19, "anoth": [19, 31, 45, 70, 87, 95, 126, 142, 144, 145, 146, 150, 152, 156, 157, 162, 168, 172, 181, 189, 202, 203, 206, 207, 211, 213, 218, 219, 220, 228, 233, 266, 267, 268, 269, 272, 273, 274, 276, 277, 278, 280, 281, 282, 284, 316, 356, 357, 359, 361, 362, 416, 423, 426, 429, 430, 439, 456, 469, 471, 481, 482, 510, 521, 524, 525, 535, 536, 545, 546, 548, 567, 574, 575, 591, 654, 657, 658, 659, 671, 677, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 742, 743, 744, 775, 786, 789, 807, 808, 841, 843, 845, 853, 862, 867, 868, 871, 886], "case": [19, 44, 58, 70, 73, 79, 90, 94, 95, 103, 114, 120, 123, 127, 141, 144, 145, 150, 156, 162, 163, 166, 169, 170, 172, 173, 181, 182, 186, 189, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 217, 218, 219, 228, 229, 230, 236, 238, 241, 243, 246, 260, 261, 263, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 290, 299, 300, 304, 310, 320, 331, 355, 356, 360, 361, 371, 372, 373, 374, 413, 420, 430, 437, 442, 453, 456, 457, 464, 471, 476, 478, 479, 481, 482, 489, 496, 504, 512, 517, 522, 528, 529, 530, 531, 532, 533, 540, 551, 557, 565, 577, 592, 611, 617, 634, 648, 651, 666, 671, 692, 693, 706, 708, 709, 710, 718, 724, 734, 737, 741, 754, 772, 778, 785, 787, 790, 791, 794, 812, 841, 845, 853, 865, 867, 868, 886], "aim": [19, 138, 159, 178, 224, 225, 305, 357, 358, 359], "exploit": [19, 88, 886], "context": [19, 42, 116, 172, 173, 176, 197, 203, 228, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 284, 356, 357, 359, 361, 413, 416, 423, 426, 429, 430, 456, 469, 471, 481, 482, 521, 524, 525, 530, 535, 536, 545, 546, 551, 562, 567, 574, 575, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 748, 749, 784, 786, 789, 801, 807, 808, 825, 826, 851, 867, 886], "treat": [19, 21, 152, 173, 197, 208, 209, 228, 232, 266, 267, 270, 276, 492, 494, 553, 555, 693, 694, 696, 697, 709, 778, 796, 886], "independ": [19, 70, 74, 83, 109, 112, 152, 159, 163, 167, 180, 181, 182, 197, 200, 202, 203, 205, 206, 207, 211, 219, 228, 246, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 360, 416, 423, 428, 481, 482, 562, 563, 570, 577, 583, 592, 594, 688, 690, 693, 694, 696, 697, 700, 733, 734, 736, 737, 797, 799, 801, 852, 861, 862, 865, 868, 886], "therefor": [19, 70, 94, 135, 137, 143, 147, 152, 159, 163, 170, 171, 190, 197, 201, 202, 203, 205, 206, 209, 211, 214, 228, 243, 266, 267, 276, 320, 322, 437, 481, 497, 501, 562, 612, 618, 619, 623, 845, 849, 861, 867, 868], "qualiti": [19, 121, 158, 167, 173, 202, 203, 206, 208, 220, 243, 246, 261, 266, 267, 268, 269, 481, 482, 521, 562, 579, 598, 798, 845, 861, 867, 868, 874, 886], "expens": [19, 166, 167, 173, 602, 869, 874, 886], "especi": [19, 55, 70, 112, 120, 127, 144, 150, 163, 167, 170, 200, 201, 203, 205, 206, 210, 217, 243, 268, 269, 277, 481, 482, 562, 584, 602, 693, 694, 696, 697, 794, 841, 845, 848, 861, 865, 868, 886], "lag": [19, 27, 77, 85, 196, 225, 246, 266, 268, 269, 271, 419, 425, 439, 481, 559, 621, 886], "footcit": [19, 387, 845], "crosseetal2016": 19, "earlier": [19, 146, 168, 172, 192, 200, 203, 217, 268, 269, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 455, 456, 457, 476, 478, 479, 540, 794, 849, 886], "wherea": [19, 81, 135, 137, 144, 157, 159, 169, 176, 197, 203, 204, 205, 211, 228, 260, 266, 267, 285, 299, 300, 481, 482, 489, 784, 807, 813, 841, 868, 872, 886], "chang": [19, 31, 44, 45, 114, 127, 135, 137, 143, 146, 150, 152, 157, 159, 162, 168, 171, 172, 173, 176, 177, 179, 185, 189, 190, 192, 193, 196, 201, 206, 207, 208, 212, 213, 218, 219, 220, 224, 228, 231, 236, 238, 243, 246, 258, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 299, 300, 306, 309, 311, 314, 322, 337, 342, 343, 345, 349, 362, 364, 389, 413, 420, 434, 442, 447, 448, 450, 452, 454, 456, 457, 466, 472, 476, 478, 479, 481, 482, 502, 505, 506, 517, 521, 524, 525, 540, 550, 551, 561, 562, 564, 577, 583, 590, 592, 594, 616, 624, 642, 651, 653, 654, 655, 671, 698, 701, 706, 708, 709, 710, 749, 754, 764, 770, 771, 772, 778, 779, 782, 783, 784, 785, 786, 788, 790, 793, 794, 795, 797, 799, 801, 804, 806, 807, 808, 809, 810, 812, 814, 816, 817, 818, 819, 824, 832, 846, 851, 853, 861, 864, 865, 868, 871, 872], "affect": [19, 49, 71, 81, 142, 143, 150, 152, 168, 191, 200, 201, 203, 204, 206, 207, 209, 211, 243, 246, 259, 261, 266, 267, 268, 269, 273, 276, 277, 281, 367, 405, 454, 455, 481, 482, 502, 579, 624, 658, 659, 734, 737, 807, 812, 845, 861, 868, 886], "obvious": [19, 159, 211, 243], "cf": [19, 146, 156, 722, 732, 736], "next": [19, 54, 55, 58, 114, 116, 121, 136, 137, 142, 146, 151, 152, 157, 158, 162, 167, 172, 176, 178, 180, 189, 191, 200, 202, 206, 208, 212, 217, 218, 219, 228, 242, 243, 263, 266, 267, 268, 269, 275, 356, 412, 413, 420, 481, 482, 561, 562, 577, 706, 708, 709, 710, 735, 738, 771, 772, 793, 797, 806, 809, 814, 843, 845, 853, 868, 871, 886], "section": [19, 74, 116, 137, 138, 141, 143, 145, 150, 151, 152, 157, 166, 167, 168, 172, 173, 176, 189, 190, 191, 193, 200, 202, 203, 204, 206, 209, 211, 217, 218, 243, 261, 263, 264, 265, 266, 267, 268, 269, 275, 276, 278, 299, 300, 314, 394, 413, 420, 434, 440, 448, 450, 481, 482, 498, 510, 561, 562, 577, 583, 595, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 845, 849, 861, 867, 868, 869, 871, 886], "haufeetal2014": 19, "sr": [19, 214, 862, 868], "1e4": 19, "mean_pattern": 19, "max_pattern": 19, "8384": [19, 886], "1190": 19, "1880": 19, "197": [19, 170, 862], "2370": 19, "272": [19, 46, 112, 119, 170, 172, 210, 233, 246, 663, 668], "2774": 19, "3092": 19, "3187": 19, "474": [19, 159, 233, 279], "3291": 19, "3336": [19, 196], "598": [19, 233], "3410": 19, "660": [19, 35, 81, 233], "3456": 19, "733": [19, 162, 196, 233], "3564": 19, "809": [19, 233], "3676": 19, "885": [19, 210], "3771": 19, "955": [19, 80, 83, 144, 197], "3818": 19, "1030": [19, 172], "3888": 19, "1095": [19, 144, 210], "3901": 19, "1167": 19, "3944": 19, "1233": [19, 170, 210], "3955": 19, "1284": 19, "3898": 19, "1349": 19, "3908": 19, "1416": 19, "3924": 19, "1490": 19, "3972": 19, "40it": [19, 33, 34, 103, 108, 109, 196, 197, 210, 228, 229, 233], "1559": 19, "3993": 19, "91it": [19, 34, 103, 108, 112, 196, 197, 210, 228, 229, 232, 233, 237], "1625": 19, "3999": 19, "1695": 19, "4020": 19, "1766": [19, 196], "4047": 19, "1835": 19, "4061": 19, "1905": 19, "4080": 19, "1974": [19, 228], "4095": 19, "2045": [19, 41], "4115": 19, "2109": 19, "4105": [19, 206, 246], "2170": 19, "4086": 19, "2232": [19, 61, 170, 337], "4070": 19, "2305": 19, "4097": [19, 183, 203], "2383": 19, "4140": 19, "2450": 19, "2522": [19, 100, 170], "4159": 19, "2595": 19, "4180": 19, "2664": [19, 196], "4184": 19, "2735": 19, "4198": 19, "2810": 19, "4225": 19, "2880": 19, "4233": 19, "2932": [19, 196], "4174": 19, "2996": 19, "4161": 19, "3062": 19, "4158": 19, "3126": 19, "4146": 19, "3176": 19, "4090": 19, "3225": 19, "4032": 19, "3273": 19, "3974": 19, "3333": 19, "3961": 19, "3402": 19, "3977": 19, "3470": 19, "3990": 19, "3537": 19, "4000": [19, 114, 167, 208, 258, 505], "3604": 19, "4010": 19, "3668": 19, "4007": 19, "3733": 19, "4008": 19, "3791": 19, "3988": 19, "3849": 19, "3967": 19, "3951": 19, "3979": 19, "3976": [19, 337], "4052": 19, "4006": 19, "4127": 19, "4040": [19, 206, 246, 562], "4200": 19, "4066": 19, "4276": 19, "4100": 19, "4352": 19, "4132": 19, "4419": 19, "4075": 19, "4517": 19, "4023": 19, "4566": 19, "3971": 19, "4616": 19, "4678": 19, "3919": 19, "4757": 19, "3968": 19, "4827": 19, "4892": 19, "4956": 19, "3989": 19, "5023": 19, "3998": 19, "5100": 19, "4039": 19, "5177": 19, "4077": 19, "5253": 19, "4109": 19, "5332": 19, "4150": 19, "5409": 19, "4183": 19, "5484": 19, "4207": 19, "5560": 19, "67": [19, 33, 35, 47, 57, 79, 81, 82, 103, 108, 112, 114, 116, 150, 159, 170, 173, 177, 179, 182, 192, 196, 197, 210, 228, 229, 230, 232, 233, 237, 238, 246, 529, 886], "5636": 19, "4258": 19, "94it": [19, 103, 109, 112, 196, 197, 210, 229, 230, 232, 233, 238], "5709": 19, "4273": 19, "5785": 19, "4297": 19, "5862": 19, "4320": 19, "5937": 19, "4338": 19, "6016": 19, "4365": 19, "6091": 19, "4379": 19, "6168": 19, "4400": 19, "6244": 19, "4415": 19, "6314": 19, "4412": 19, "6377": 19, "4385": [19, 210], "6441": 19, "4364": 19, "6513": 19, "4369": 19, "6589": 19, "4388": 19, "6666": 19, "4407": 19, "6741": 19, "4420": 19, "6819": 19, "4441": 19, "6895": 19, "4456": 19, "6970": 19, "4464": 19, "7045": 19, "4473": 19, "7110": 19, "4450": 19, "7183": 19, "4454": 19, "7237": 19, "7299": 19, "4373": 19, "88": [19, 26, 35, 41, 45, 47, 50, 79, 80, 81, 82, 103, 109, 112, 114, 120, 159, 170, 177, 181, 182, 183, 192, 196, 197, 210, 212, 228, 229, 230, 232, 233, 237, 238, 246, 356], "7373": 19, "4384": 19, "7448": 19, "4398": 19, "7522": 19, "4409": 19, "7596": 19, "7664": 19, "7729": 19, "4389": 19, "7802": 19, "4396": 19, "7870": 19, "4386": 19, "7933": 19, "4361": 19, "7994": 19, "4333": 19, "8058": 19, "4316": 19, "8122": 19, "4299": 19, "8187": 19, "4287": [19, 35], "8250": 19, "4268": 19, "8323": [19, 886], "4280": [19, 228], "4155": 19, "1674": 19, "134": [19, 25, 70, 91, 95, 170, 228, 232, 233, 246, 279, 527, 570], "2388": 19, "209": [19, 170, 185, 203, 228, 233, 238, 246], "2922": 19, "278": [19, 112, 170, 197, 210, 233, 243, 245], "3195": 19, "342": [19, 100, 102, 113, 121, 163, 170, 210, 228, 246, 268, 269, 356, 794, 865], "3330": 19, "414": [19, 233], "3504": 19, "475": [19, 127, 130, 279], "3541": 19, "545": [19, 70, 210, 233, 246, 570], "3642": 19, "603": [19, 82, 233], "659": [19, 46, 169, 233], "3615": 19, "728": [19, 145, 196, 197, 233], "3683": 19, "802": [19, 145, 233], "873": [19, 35, 197, 233], "3833": 19, "935": [19, 233], "3834": 19, "3890": 19, "1062": [19, 210], "3852": 19, "1122": [19, 170, 204], "3843": 19, "1181": [19, 197], "3827": 19, "1252": 19, "3872": 19, "1322": [19, 170], "1397": 19, "3964": 19, "1472": 19, "4014": 19, "1546": 19, "4056": 19, "1613": [19, 100, 170], "4063": 19, "1660": 19, "3985": 19, "1709": 19, "3922": 19, "1767": 19, "3902": 19, "3923": 19, "1901": 19, "3935": 19, "1969": [19, 109, 196, 228], "3958": 19, "2089": 19, "3920": 19, "2138": 19, "3867": 19, "2169": [19, 41], "3751": 19, "2220": 19, "3715": 19, "2293": 19, "3762": 19, "2372": 19, "2440": 19, "3851": 19, "2499": 19, "3840": [19, 184], "2562": [19, 41, 109, 151, 159, 861], "3844": 19, "2621": [19, 34, 170, 202, 225], "2685": 19, "3841": 19, "2745": [19, 35], "2813": 19, "3855": 19, "2946": 19, "3882": 19, "3011": 19, "3891": 19, "3079": 19, "3145": 19, "3918": 19, "3212": 19, "3930": 19, "3278": 19, "3938": 19, "3352": 19, "3975": 19, "3420": 19, "3483": 19, "3549": 19, "3613": 19, "3675": 19, "3739": 19, "3980": 19, "3806": 19, "3871": 19, "4016": 19, "4078": 19, "4031": 19, "4149": 19, "4050": 19, "4215": 19, "4051": 19, "4279": 19, "4342": 19, "4413": 19, "4057": 19, "4486": 19, "4082": 19, "4560": 19, "4628": 19, "4114": 19, "4702": 19, "4136": 19, "4774": 19, "4154": 19, "4846": 19, "4170": 19, "4916": 19, "4178": 19, "4988": 19, "4192": 19, "5062": 19, "4212": 19, "5135": 19, "4228": 19, "5212": 19, "4256": 19, "5285": 19, "4270": 19, "5348": 19, "4253": 19, "5411": 19, "4234": 19, "5476": 19, "5534": 19, "5584": 19, "5633": 19, "4079": 19, "5682": 19, "4024": 19, "5732": 19, "5783": 19, "3937": 19, "5836": 19, "3904": 19, "5890": 19, "3877": 19, "5956": 19, "6022": 19, "3897": [19, 135, 246], "6093": 19, "6160": 19, "6224": 19, "3939": 19, "6283": 19, "3925": 19, "6351": 19, "3940": 19, "6424": 19, "3969": 19, "6480": 19, "3942": 19, "6529": 19, "3896": 19, "6578": 19, "3853": 19, "6627": 19, "3812": 19, "32it": [19, 34, 103, 108, 112, 181, 197, 210, 228, 233], "6680": 19, "3785": 19, "6748": 19, "6813": 19, "3817": 19, "6881": 19, "3837": 19, "6930": 19, "3798": 19, "7001": 19, "3829": 19, "7071": 19, "3856": 19, "7141": 19, "3880": 19, "7192": [19, 167], "7258": 19, "3858": 19, "7333": 19, "7401": 19, "3915": 19, "7472": 19, "7534": 19, "7592": 19, "7655": 19, "3916": 19, "7714": 19, "3903": 19, "7773": 19, "7833": 19, "3883": 19, "7906": 19, "7972": 19, "8024": 19, "3889": 19, "8094": 19, "3913": 19, "8160": 19, "8226": 19, "3931": 19, "8295": 19, "3948": 19, "8363": 19, "2068": [19, 162], "177": [19, 35, 56, 85, 146, 170, 197, 210, 232, 233, 246, 693, 694, 696, 697], "2436": 19, "232": [19, 65, 145, 170, 210, 233], "2624": 19, "289": [19, 46, 150, 170, 196, 228, 232, 233, 246, 419, 562], "2782": 19, "2878": [19, 246, 861], "3046": 19, "3252": [19, 183], "560": [19, 81, 178, 209, 233], "3418": 19, "636": [19, 233], "705": [19, 35, 233], "3639": 19, "775": [19, 127, 197, 204, 216], "3710": 19, "850": [19, 81, 210, 886], "919": [19, 210, 233], "996": [19, 196, 233], "3987": 19, "1140": [19, 210], "4011": 19, "1200": [19, 35, 224], "1264": 19, "3984": 19, "3956": 19, "1384": 19, "3950": 19, "1441": [19, 34, 146, 170, 192, 202, 210, 225], "3921": 19, "1498": 19, "3892": 19, "1554": 19, "3861": 19, "1614": 19, "1683": 19, "3878": 19, "1752": [19, 196], "1817": 19, "3910": 19, "1884": 19, "1957": 19, "3962": 19, "2017": [19, 84, 135, 152, 206, 246, 395, 562, 602, 666, 671], "3947": 19, "2074": 19, "2134": [19, 196], "2194": 19, "3895": 19, "2257": 19, "2318": 19, "2380": 19, "2439": 19, "3868": 19, "2561": 19, "2627": 19, "3879": 19, "2691": 19, "3885": 19, "2763": 19, "2832": 19, "2905": 19, "3973": 19, "2968": 19, "3035": 19, "3981": 19, "3109": 19, "4013": 19, "3180": 19, "4034": 19, "3239": 19, "4015": 19, "3302": 19, "3361": 19, "3991": 19, "3424": 19, "3986": 19, "3490": 19, "3553": 19, "3680": 19, "3737": [19, 34], "3787": 19, "3869": 19, "3887": 19, "3936": 19, "3784": [19, 246, 529, 868], "3826": 19, "4087": 19, "3876": 19, "4163": 19, "3941": 19, "4308": 19, "3978": 19, "4375": 19, "4439": 19, "4516": 19, "4029": 19, "4584": 19, "4656": 19, "4725": 19, "4072": 19, "4794": 19, "4036": 19, "4895": 19, "3983": 19, "4944": 19, "4992": 19, "5053": 19, "5117": 19, "5186": 19, "3906": 19, "5261": 19, "5330": 19, "5400": 19, "3982": 19, "5473": 19, "5546": 19, "5618": 19, "4058": 19, "5681": 19, "4049": [19, 206, 246, 562], "5754": 19, "4074": 19, "5818": 19, "4069": 19, "5888": 19, "4083": 19, "5953": 19, "4081": 19, "6026": 19, "4102": 19, "6169": 19, "4138": 19, "6245": 19, "4167": 19, "6310": 19, "6384": 19, "4182": 19, "6457": 19, "4199": 19, "6533": 19, "4226": 19, "6607": [19, 205], "4245": 19, "6682": 19, "4267": 19, "6757": 19, "4286": 19, "6831": 19, "4301": 19, "6903": 19, "4309": 19, "6971": 19, "4305": 19, "7037": 19, "4293": 19, "7092": 19, "4248": 19, "7137": 19, "4172": 19, "7182": 19, "4104": 19, "7228": 19, "7274": 19, "7319": 19, "7364": 19, "3865": 19, "7409": 19, "3811": 19, "7454": 19, "3759": 19, "7499": [19, 58, 90], "3709": 19, "7546": 19, "3667": 19, "7593": 19, "3629": 19, "7640": 19, "3591": 19, "7686": 19, "3555": 19, "7733": 19, "3522": 19, "7780": 19, "7826": 19, "3458": 19, "7873": 19, "3431": 19, "7920": 19, "3404": 19, "7965": 19, "3374": 19, "8025": 19, "3391": 19, "8090": 19, "3423": 19, "8161": 19, "3473": 19, "8205": 19, "3435": 19, "8268": 19, "3459": 19, "8341": [19, 886], "3513": 19, "sens": [19, 60, 70, 143, 161, 203, 208, 213, 243, 268, 269, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 540, 776, 794, 841, 845, 867, 868], "actual": [19, 23, 27, 41, 43, 60, 63, 81, 115, 128, 135, 145, 152, 159, 161, 163, 169, 171, 173, 176, 183, 184, 185, 186, 190, 191, 196, 201, 202, 203, 204, 219, 228, 230, 233, 236, 237, 238, 243, 259, 276, 447, 542, 562, 841, 845, 862, 868, 886], "valid_samples_": [19, 419], "grei": [19, 113, 143, 243, 268, 269, 706, 790, 886], "attempt": [19, 75, 196, 200, 230, 266, 267, 268, 269, 274, 280, 282, 377, 481, 482, 488, 498, 562, 637, 651, 817, 839, 841, 867, 886], "reflect": [19, 32, 60, 70, 120, 136, 142, 150, 152, 161, 162, 178, 182, 200, 205, 206, 208, 217, 266, 267, 268, 269, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 451, 452, 453, 456, 457, 476, 478, 479, 481, 482, 540, 624, 686, 793, 794, 807, 841, 845, 861, 868, 886], "most": [19, 28, 45, 47, 70, 73, 82, 83, 104, 108, 109, 114, 120, 127, 135, 136, 141, 145, 150, 151, 152, 153, 156, 157, 166, 168, 170, 172, 173, 182, 189, 193, 200, 203, 205, 207, 208, 210, 211, 212, 213, 217, 228, 232, 241, 258, 266, 267, 268, 269, 271, 272, 277, 280, 314, 332, 357, 358, 359, 379, 380, 381, 384, 385, 386, 388, 392, 393, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 442, 448, 453, 456, 476, 515, 521, 549, 562, 572, 592, 594, 611, 658, 659, 660, 669, 670, 671, 672, 693, 694, 695, 696, 697, 744, 749, 754, 772, 793, 841, 844, 845, 849, 850, 851, 863, 865, 867, 868, 869, 872, 876, 886], "toward": [19, 43, 46, 54, 55, 70, 103, 161, 181, 193, 202, 232, 243, 246, 455, 457, 544, 565, 868, 886], "directli": [19, 34, 43, 79, 94, 95, 144, 145, 150, 171, 172, 173, 189, 191, 197, 201, 204, 205, 206, 207, 208, 219, 236, 242, 243, 258, 261, 263, 264, 265, 266, 267, 268, 269, 271, 273, 275, 277, 278, 281, 282, 314, 315, 320, 324, 361, 373, 413, 420, 449, 478, 481, 482, 483, 484, 489, 502, 561, 562, 577, 579, 624, 651, 706, 708, 710, 756, 771, 773, 784, 786, 793, 797, 806, 809, 812, 814, 816, 818, 863, 868, 876, 886], "obtain": [19, 38, 42, 43, 60, 90, 94, 95, 135, 138, 147, 152, 156, 158, 159, 171, 173, 176, 178, 179, 185, 186, 203, 205, 211, 217, 218, 225, 228, 230, 233, 242, 264, 266, 267, 268, 269, 270, 273, 277, 281, 282, 300, 311, 344, 346, 356, 358, 362, 375, 419, 421, 463, 464, 475, 478, 479, 481, 482, 489, 496, 501, 515, 529, 537, 548, 562, 566, 573, 592, 611, 619, 623, 629, 655, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 676, 680, 693, 694, 695, 696, 697, 707, 734, 737, 754, 773, 789, 812, 813, 818, 841, 861, 862, 866, 867, 868, 886], "via": [19, 135, 136, 137, 141, 143, 145, 146, 150, 151, 158, 169, 170, 171, 172, 173, 176, 181, 193, 200, 201, 202, 206, 207, 217, 220, 228, 229, 232, 236, 238, 241, 242, 246, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 276, 278, 279, 281, 282, 285, 299, 300, 311, 320, 324, 330, 331, 377, 424, 447, 449, 451, 452, 465, 472, 481, 482, 494, 562, 687, 693, 694, 696, 697, 708, 709, 710, 756, 770, 774, 775, 784, 788, 789, 793, 801, 807, 832, 841, 843, 845, 847, 848, 853, 865, 886], "procedur": [19, 113, 145, 162, 163, 189, 205, 206, 211, 228, 230, 231, 232, 238, 243, 246, 259, 261, 266, 267, 268, 269, 349, 356, 361, 421, 481, 482, 562, 563, 577, 579, 592, 602, 624, 693, 841, 862, 865, 868, 871, 886], "straightforward": [19, 103, 190, 203, 225, 868, 886], "sign": [19, 28, 38, 39, 47, 152, 206, 228, 231, 236, 268, 269, 273, 274, 277, 280, 281, 282, 337, 447, 455, 476, 478, 479, 516, 529, 530, 531, 532, 533, 592, 693, 694, 696, 697, 845, 868, 886], "strength": [19, 22, 35, 94, 152, 176, 206, 274, 280, 282, 577, 868], "direct": [19, 60, 80, 123, 135, 151, 157, 161, 162, 169, 179, 181, 186, 201, 207, 208, 210, 243, 246, 258, 264, 266, 267, 273, 274, 276, 277, 280, 281, 282, 292, 299, 300, 435, 447, 455, 481, 482, 492, 529, 572, 589, 658, 708, 710, 754, 784, 796, 807, 817, 841, 845, 851, 865, 867, 868, 886], "140": [19, 34, 81, 82, 99, 112, 123, 157, 170, 207, 208, 209, 210, 216, 228, 232, 233, 246, 567, 868], "125": [19, 24, 35, 106, 107, 127, 138, 144, 157, 161, 170, 171, 203, 210, 211, 216, 228, 232, 233, 340], "nbetween": 19, "giovanni": [19, 196, 246, 419, 862], "di": [19, 40, 144, 196, 246, 419, 862], "liberto": [19, 196, 246, 419, 862], "adam": [19, 136, 137, 196, 246, 419, 862, 873, 886], "bednar": [19, 196, 246, 419, 862], "edmund": [19, 196, 246, 419, 862], "fnhum": [19, 152, 196, 246, 419, 567, 862], "00604": [19, 196, 246, 419, 862], "415": [19, 20, 196, 210, 233], "receptive_field_mtrf": [19, 20], "904": [20, 210, 233, 279], "auto_examples_decod": 20, "ssd_spatial_filt": [20, 21], "561": [20, 21], "08": [20, 34, 40, 42, 45, 50, 56, 58, 59, 73, 84, 85, 94, 103, 107, 108, 109, 112, 130, 152, 161, 167, 177, 178, 179, 180, 181, 184, 185, 197, 203, 208, 210, 217, 222, 224, 225, 228, 230, 231, 232, 233, 246], "retain": [21, 112, 150, 179, 201, 202, 217, 228, 261, 266, 267, 276, 279, 437, 562, 693, 694, 696, 697, 797, 843, 874, 886], "oscillatori": [21, 113, 225, 242, 246, 299, 300, 722, 732, 733, 736], "propos": [21, 243, 577, 583, 845], "surround": [21, 82, 101, 135, 243, 421, 567, 589, 603, 701, 845], "victoria": [21, 886], "peterson": [21, 886], "victoriapeterson09": 21, "freqs_sig": 21, "freqs_nois": 21, "sort_by_spectral_ratio": [21, 421], "filt_params_sign": [21, 421], "l_trans_bandwidth": [21, 113, 114, 203, 212, 266, 267, 268, 269, 415, 424, 449, 451, 481, 482, 598, 886], "filt_params_nois": [21, 421], "72000": [21, 82, 192], "196608": 21, "262144": 21, "327680": 21, "393216": 21, "458752": 21, "67108864": 21, "67174400": 21, "134742016": 21, "136314880": 21, "268435456": 21, "825": [21, 83, 114, 197, 233, 246, 562], "086": [21, 246, 663, 668], "preserv": [21, 34, 156, 157, 161, 167, 168, 196, 201, 206, 217, 228, 232, 261, 266, 267, 268, 269, 412, 443, 444, 445, 446, 481, 482, 579, 590, 706, 708, 709, 710, 868, 886], "ratio": [21, 58, 88, 127, 145, 167, 197, 203, 206, 208, 225, 230, 231, 232, 233, 246, 273, 274, 277, 280, 281, 282, 289, 421, 544, 545, 546, 562, 563, 647, 664, 665, 706, 709, 757, 814, 861, 868, 886], "accord": [21, 157, 170, 171, 193, 196, 217, 259, 266, 267, 268, 269, 419, 421, 442, 481, 482, 489, 492, 496, 498, 557, 595, 612, 651, 656, 862, 868, 871, 886], "either": [21, 32, 43, 143, 150, 151, 152, 167, 168, 169, 171, 173, 191, 200, 204, 209, 211, 218, 219, 224, 228, 243, 258, 261, 263, 266, 267, 268, 269, 270, 273, 274, 275, 277, 279, 280, 281, 282, 290, 304, 323, 340, 356, 413, 420, 421, 430, 440, 448, 471, 474, 481, 482, 512, 513, 515, 521, 525, 527, 528, 561, 562, 564, 573, 577, 583, 594, 624, 634, 651, 653, 657, 658, 659, 671, 691, 692, 706, 707, 708, 710, 718, 728, 733, 734, 736, 737, 741, 754, 770, 771, 775, 778, 785, 786, 793, 797, 798, 806, 807, 808, 809, 812, 814, 816, 817, 818, 822, 845, 851, 861, 862, 865, 871, 886], "multipli": [21, 189, 203, 228, 271, 273, 274, 277, 280, 281, 282, 301, 421, 447, 529, 535, 706, 868, 871], "eq": [21, 421, 722, 732, 736, 868], "c_n": [21, 868], "reli": [21, 79, 170, 202, 243, 314, 845, 861, 865, 868, 871, 874, 886], "suggest": [21, 26, 142, 145, 163, 202, 203, 204, 205, 206, 208, 266, 267, 291, 293, 754, 844, 849, 850, 865, 867, 886], "pariet": [21, 49, 641, 754], "ssd_sourc": [21, 421], "psd": [21, 27, 68, 74, 92, 105, 106, 111, 133, 138, 141, 167, 173, 197, 200, 204, 213, 220, 223, 241, 242, 263, 266, 267, 268, 269, 271, 272, 276, 277, 361, 418, 454, 481, 482, 520, 525, 528, 535, 536, 540, 543, 559, 613, 628, 654, 708, 710, 713, 716, 724, 725, 748, 754, 770, 786, 808, 822, 862, 886], "psd_array_welch": [21, 223, 241, 266, 267, 268, 269, 421, 481, 482, 708, 710, 876, 886], "n_fft": [21, 108, 109, 114, 133, 213, 223, 241, 243, 266, 267, 268, 269, 421, 481, 482, 535, 707, 708, 710, 711, 713, 714, 716, 725, 735, 738, 808, 886], "4096": [21, 183, 270], "spec_ratio": [21, 421], "alreadi": [21, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 71, 74, 78, 79, 86, 87, 94, 95, 115, 116, 119, 120, 127, 135, 136, 143, 145, 146, 150, 151, 152, 159, 160, 161, 163, 167, 170, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 200, 202, 203, 206, 207, 208, 211, 217, 223, 243, 258, 266, 267, 268, 269, 273, 274, 276, 277, 278, 280, 281, 282, 299, 300, 309, 311, 330, 356, 360, 361, 369, 371, 372, 373, 374, 382, 405, 406, 413, 420, 447, 448, 456, 457, 476, 478, 479, 481, 482, 523, 540, 573, 574, 579, 624, 644, 645, 707, 726, 775, 778, 794, 836, 845, 846, 847, 862, 865, 868, 869, 874, 886], "sorter": 21, "get_spectral_ratio": [21, 421], "spectral": [21, 27, 32, 33, 34, 68, 71, 105, 106, 112, 113, 114, 117, 133, 138, 143, 167, 173, 197, 202, 210, 223, 225, 242, 246, 263, 266, 267, 268, 269, 271, 272, 277, 291, 292, 293, 299, 361, 418, 421, 454, 457, 481, 482, 520, 525, 528, 535, 536, 540, 543, 559, 562, 613, 621, 628, 654, 694, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 723, 724, 725, 733, 734, 736, 737, 748, 754, 770, 780, 786, 808, 822, 862, 874, 886], "orang": [21, 152, 157, 191, 212, 233, 238, 811], "frac": [21, 150, 203, 204, 211, 228, 277, 537, 666, 719, 722, 732, 733, 734, 736, 737, 868], "p_f": 21, "p_": [21, 868], "sf": [21, 228], "spectrum": [21, 74, 83, 103, 104, 108, 112, 133, 138, 141, 144, 166, 167, 173, 200, 204, 206, 208, 213, 220, 223, 225, 242, 243, 244, 245, 246, 266, 267, 268, 269, 276, 454, 481, 482, 562, 708, 727, 749, 797, 799, 808, 841, 871, 874, 876, 886], "lowest": [21, 243, 261, 266, 267, 268, 269, 272, 343, 579, 683, 706, 707, 709, 778, 788], "below50": 21, "bandfilt": 21, "loglog": 21, "fill_between": [21, 113, 152, 238, 242, 243], "10000": [21, 84, 111, 135, 442, 476, 592, 671, 695], "green": [21, 48, 49, 50, 81, 116, 152, 157, 182, 191, 208, 243, 268, 269, 754, 775, 788, 805, 811, 886], "enjoi": [21, 243], "situat": [21, 205, 209, 223, 225, 276, 321, 440, 562, 845, 849, 867, 886], "chunk": [21, 80, 84, 138, 141, 147, 185, 211, 359, 361, 442, 481, 482, 562, 583, 656, 861, 886], "overlap": [21, 70, 84, 99, 109, 141, 147, 152, 167, 169, 192, 202, 211, 218, 219, 241, 246, 260, 266, 267, 268, 269, 328, 361, 415, 424, 437, 449, 451, 452, 471, 481, 482, 522, 523, 535, 548, 563, 579, 580, 594, 673, 692, 725, 754, 784, 808, 841, 886], "ssd_epoch": 21, "pattern_epoch": 21, "1251": 21, "1661": 21, "guido": [21, 246, 421], "nolt": [21, 246, 421], "gabriel": [21, 40, 205, 246, 421, 478, 561, 609], "curio": [21, 246, 421], "reliabl": [21, 103, 170, 204, 246, 421, 562], "basi": [21, 147, 163, 197, 246, 421, 434, 573, 576, 583, 594, 865, 868, 886], "spatio": [21, 46, 59, 166, 185, 196, 197, 228, 229, 239, 240, 246, 266, 268, 269, 271, 277, 278, 279, 362, 419, 421, 436, 477, 478, 481, 528, 529, 543, 559, 594, 621, 634, 636, 661, 662, 663, 664, 665, 666, 667, 668, 678, 680, 681, 682, 687, 689, 696, 697, 698, 754, 868, 886], "1528": [21, 246, 421], "1535": [21, 246, 421], "057": [21, 141, 143, 150, 170, 225, 232, 235, 246, 421], "produc": [22, 38, 82, 83, 117, 119, 128, 145, 162, 173, 180, 184, 191, 193, 203, 205, 211, 228, 243, 246, 258, 261, 264, 266, 272, 276, 279, 305, 306, 329, 332, 353, 357, 358, 359, 361, 368, 390, 471, 473, 481, 482, 515, 521, 522, 525, 535, 548, 562, 565, 571, 574, 575, 583, 590, 592, 611, 617, 621, 641, 655, 657, 658, 659, 660, 669, 670, 671, 672, 674, 693, 694, 695, 696, 697, 701, 743, 754, 770, 771, 807, 835, 861, 867, 868, 871, 886], "abl": [22, 79, 90, 135, 136, 138, 145, 160, 162, 166, 173, 205, 206, 211, 225, 236, 276, 452, 481, 482, 562, 797, 843, 845, 862, 865, 868, 874, 886], "region": [22, 38, 41, 47, 49, 94, 95, 128, 136, 138, 151, 156, 182, 191, 203, 204, 228, 229, 242, 243, 264, 266, 267, 268, 269, 279, 326, 415, 424, 449, 451, 452, 465, 466, 467, 471, 481, 482, 515, 611, 655, 666, 754, 784, 807, 810, 841, 861, 874, 886], "source_spac": [22, 279, 876, 886], "compute_distance_to_sensor": [22, 876, 886], "source_estim": [22, 27, 36, 56, 272, 277, 628, 634, 753], "surf_ori": [22, 47, 48, 49, 54, 55, 68, 159, 179, 224, 270, 366, 540, 886], "leadfield": [22, 41, 159, 164, 166, 173, 299, 300, 301, 886], "7498": [22, 31, 35, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 68, 90, 92, 93, 94, 95, 131, 173, 176, 178, 179, 180, 182, 197, 224, 225], "combin": [22, 24, 29, 30, 31, 34, 35, 37, 40, 41, 42, 44, 47, 48, 49, 51, 54, 55, 58, 59, 68, 87, 90, 92, 93, 94, 95, 101, 112, 126, 128, 131, 132, 138, 141, 142, 143, 146, 151, 152, 156, 167, 169, 171, 176, 178, 179, 180, 181, 182, 183, 189, 191, 192, 196, 197, 200, 208, 209, 211, 212, 217, 219, 225, 228, 230, 233, 236, 238, 246, 258, 261, 266, 267, 268, 269, 272, 273, 274, 277, 279, 280, 281, 282, 292, 299, 300, 307, 308, 316, 356, 357, 358, 359, 364, 373, 390, 413, 418, 420, 432, 435, 472, 481, 482, 497, 500, 523, 524, 529, 532, 535, 536, 538, 539, 562, 574, 575, 618, 628, 634, 641, 677, 706, 708, 709, 710, 713, 716, 724, 754, 770, 778, 785, 786, 793, 796, 814, 845, 868, 871, 874, 886], "local": [22, 26, 27, 33, 34, 35, 36, 40, 41, 42, 46, 47, 48, 49, 51, 54, 55, 56, 58, 59, 68, 70, 84, 90, 92, 94, 109, 113, 116, 120, 135, 151, 152, 153, 156, 159, 167, 172, 176, 180, 181, 185, 188, 192, 197, 208, 212, 225, 246, 263, 264, 265, 266, 267, 268, 269, 270, 271, 275, 277, 281, 299, 300, 302, 314, 318, 332, 344, 346, 355, 356, 360, 361, 366, 371, 372, 373, 375, 379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 420, 434, 454, 456, 457, 470, 476, 478, 479, 481, 482, 488, 524, 525, 528, 529, 530, 540, 544, 561, 562, 570, 577, 584, 589, 615, 624, 626, 639, 648, 651, 654, 663, 666, 668, 670, 706, 708, 710, 746, 754, 763, 770, 771, 779, 782, 786, 791, 793, 794, 797, 806, 809, 813, 814, 816, 822, 841, 843, 846, 851, 852, 854, 865, 868, 874, 886], "grad_map": 22, "sensitivity_map": [22, 26, 131, 159, 876], "mag_map": [22, 26], "eeg_map": 22, "204": [22, 34, 73, 76, 93, 113, 131, 147, 159, 167, 168, 169, 170, 173, 184, 185, 196, 197, 200, 201, 202, 207, 208, 211, 217, 218, 219, 220, 225, 228, 232, 233, 242, 886], "gain": [22, 24, 31, 41, 65, 90, 93, 94, 95, 109, 159, 181, 203, 225, 299, 300, 448, 457, 795, 802, 868, 886], "picks_meg": 22, "picks_eeg": 22, "sharex": [22, 45, 73, 90, 113, 196, 208, 243], "dipol": [22, 26, 27, 28, 31, 34, 35, 36, 39, 40, 41, 42, 46, 51, 56, 59, 60, 68, 83, 84, 92, 93, 94, 109, 119, 153, 156, 159, 166, 167, 170, 178, 180, 181, 183, 184, 185, 186, 187, 188, 192, 205, 223, 225, 246, 263, 265, 266, 267, 268, 269, 270, 271, 274, 277, 280, 281, 282, 299, 300, 301, 302, 304, 313, 344, 355, 366, 375, 392, 434, 454, 456, 458, 476, 477, 478, 479, 481, 482, 524, 528, 529, 531, 540, 549, 559, 613, 615, 616, 624, 626, 639, 641, 654, 658, 659, 663, 666, 668, 670, 672, 706, 708, 709, 710, 754, 763, 770, 771, 781, 782, 813, 817, 822, 841, 852, 854, 857, 861, 868, 871, 876, 886], "fontsiz": [22, 37, 112, 120, 127, 145, 177, 211, 813], "fig_2": [22, 173], "hist": [22, 70, 131, 145, 212], "ravel": [22, 111, 113, 117, 131, 196, 203, 229], "brain_sen": 22, "add_text": [22, 43, 47, 48, 49, 50, 54, 55, 176, 178, 180, 754], "font_siz": [22, 43, 47, 48, 49, 50, 54, 55, 176, 178, 180, 754], "02108201": 22, "32186553": 22, "minimum": [22, 31, 57, 70, 78, 83, 137, 141, 150, 152, 163, 167, 169, 178, 180, 181, 202, 203, 208, 224, 236, 246, 261, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 295, 296, 297, 298, 299, 300, 343, 345, 346, 361, 446, 448, 449, 451, 452, 454, 456, 457, 481, 482, 525, 529, 530, 531, 532, 533, 535, 536, 540, 542, 544, 545, 546, 564, 565, 570, 579, 580, 583, 663, 666, 668, 671, 699, 706, 711, 712, 713, 714, 715, 716, 717, 735, 738, 754, 778, 792, 808, 811, 841, 852, 854, 861, 871, 886], "euclidean": [22, 272, 277, 279, 544, 666, 669, 672, 674, 677], "maxdep": 22, "vertno": [22, 43, 48, 49, 50, 159, 176, 179, 224, 236, 237, 238, 277, 279, 280, 871], "depths_map": 22, "brain_dep": 22, "like": [22, 26, 27, 31, 32, 34, 35, 36, 40, 41, 42, 47, 56, 59, 60, 70, 79, 82, 83, 101, 109, 112, 127, 135, 136, 137, 141, 142, 143, 144, 145, 150, 151, 152, 156, 157, 161, 162, 163, 167, 168, 169, 170, 172, 173, 176, 178, 182, 183, 189, 190, 191, 193, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 217, 218, 219, 220, 223, 228, 232, 243, 258, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 290, 303, 304, 305, 306, 309, 310, 311, 314, 315, 323, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 349, 353, 354, 355, 356, 362, 367, 368, 369, 370, 374, 387, 388, 390, 392, 413, 420, 434, 436, 437, 442, 448, 454, 456, 463, 465, 466, 469, 471, 472, 473, 474, 475, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 519, 521, 524, 525, 528, 529, 531, 540, 543, 547, 548, 549, 551, 552, 561, 562, 567, 577, 580, 585, 589, 590, 591, 592, 594, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 652, 654, 655, 657, 658, 659, 660, 669, 670, 671, 672, 675, 683, 687, 689, 692, 693, 694, 695, 696, 697, 701, 702, 704, 705, 706, 707, 708, 709, 710, 722, 726, 727, 728, 732, 739, 741, 742, 746, 748, 751, 754, 762, 770, 771, 772, 778, 782, 784, 786, 788, 790, 792, 793, 794, 797, 801, 804, 806, 807, 808, 809, 810, 812, 814, 816, 817, 818, 827, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 839, 840, 841, 843, 844, 845, 846, 848, 849, 850, 851, 852, 853, 861, 863, 865, 867, 868, 871, 886], "corr": [22, 258], "gradiomt": 22, "815476": 22, "sensitivii": 22, "highest": [22, 135, 177, 206, 261, 264, 266, 267, 268, 269, 272, 457, 481, 482, 579, 683, 706, 707, 709, 782, 794, 868], "close": [22, 60, 70, 97, 107, 111, 117, 120, 127, 135, 141, 143, 145, 150, 152, 159, 161, 173, 192, 201, 202, 205, 206, 208, 209, 212, 220, 225, 228, 233, 264, 266, 267, 268, 269, 272, 344, 360, 382, 436, 456, 472, 473, 481, 482, 562, 580, 585, 677, 701, 708, 710, 754, 760, 761, 782, 784, 801, 807, 810, 845, 849, 857, 865, 868, 871, 886], "decreas": [22, 55, 112, 203, 214, 225, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 413, 434, 481, 482, 562, 702, 706, 709, 733, 734, 736, 737, 754, 868, 886], "rapidli": [22, 213], "inreas": 22, "confirm": [22, 47, 70, 172, 191, 202, 206, 845, 868], "135": [22, 118, 125, 152, 159, 170, 172, 207, 208, 209, 228, 233, 246, 279, 868], "forward_sensitivity_map": [22, 25], "coregistr": [23, 27, 81, 157, 161, 162, 164, 165, 166, 182, 264, 271, 276, 279, 306, 310, 368, 374, 391, 432, 473, 486, 521, 525, 590, 645, 674, 701, 743, 754, 770, 822, 859, 861, 874, 876, 886], "displai": [23, 24, 25, 27, 44, 47, 76, 112, 116, 125, 141, 144, 152, 157, 159, 161, 163, 167, 193, 206, 209, 217, 220, 229, 233, 258, 259, 263, 266, 267, 268, 269, 270, 272, 273, 274, 277, 279, 280, 281, 282, 314, 366, 481, 482, 521, 559, 561, 562, 626, 647, 674, 706, 708, 710, 754, 755, 769, 770, 778, 783, 784, 785, 787, 788, 789, 790, 792, 793, 794, 795, 798, 799, 804, 807, 808, 809, 810, 812, 813, 815, 817, 818, 841, 843, 844, 848, 851, 857, 865, 868, 871, 874, 886], "cerebellum": [23, 25, 27, 41, 279, 654, 655, 770, 822], "volum": [23, 25, 27, 31, 36, 44, 56, 59, 71, 135, 136, 137, 156, 157, 159, 161, 167, 173, 177, 181, 211, 246, 258, 263, 264, 268, 270, 271, 273, 274, 277, 278, 279, 280, 281, 282, 305, 311, 314, 362, 447, 458, 466, 467, 476, 478, 479, 517, 525, 528, 529, 539, 540, 541, 543, 589, 591, 615, 624, 634, 637, 646, 654, 655, 678, 681, 698, 701, 742, 743, 744, 754, 770, 812, 817, 818, 822, 839, 841, 860, 861, 868, 874, 886], "morph": [23, 25, 27, 36, 40, 56, 134, 135, 137, 156, 161, 178, 182, 236, 237, 238, 258, 268, 270, 271, 272, 273, 277, 278, 279, 280, 281, 282, 362, 469, 486, 525, 528, 529, 543, 548, 549, 558, 559, 591, 624, 626, 631, 634, 635, 636, 647, 655, 742, 743, 744, 754, 812, 818, 841, 861, 862, 871, 886], "its": [24, 70, 75, 94, 126, 136, 138, 141, 142, 144, 146, 151, 157, 159, 161, 167, 169, 170, 171, 172, 173, 176, 181, 184, 190, 191, 197, 200, 201, 203, 204, 206, 207, 208, 209, 211, 217, 218, 220, 228, 233, 241, 243, 246, 263, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 314, 413, 416, 420, 427, 428, 447, 454, 478, 479, 480, 481, 482, 489, 496, 561, 562, 577, 662, 672, 692, 693, 694, 696, 697, 706, 708, 709, 710, 722, 725, 732, 744, 771, 778, 782, 785, 786, 793, 797, 805, 806, 807, 809, 812, 814, 816, 817, 841, 843, 844, 845, 849, 851, 861, 863, 865, 867, 868, 886], "freesurf": [24, 32, 33, 34, 38, 41, 43, 44, 47, 79, 116, 136, 137, 157, 159, 162, 164, 165, 166, 173, 176, 183, 192, 246, 262, 264, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 305, 309, 310, 311, 314, 362, 367, 368, 369, 374, 387, 389, 390, 392, 395, 412, 432, 447, 465, 466, 467, 469, 471, 472, 473, 474, 475, 486, 515, 517, 519, 521, 548, 589, 590, 611, 627, 628, 629, 630, 636, 637, 638, 639, 650, 654, 655, 669, 672, 683, 701, 702, 704, 746, 753, 754, 765, 770, 772, 782, 812, 817, 818, 822, 835, 836, 839, 841, 849, 851, 852, 857, 862, 865, 886], "alan": [24, 246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709, 886], "leggitt": [24, 886], "ucsf": 24, "setup_source_spac": [24, 41, 109, 156, 159, 161, 179, 192, 279, 636, 655, 676, 680, 861, 868, 876, 886], "setup_volume_source_spac": [24, 41, 50, 157, 159, 161, 209, 273, 274, 277, 279, 280, 281, 282, 447, 517, 636, 654, 868, 876, 886], "aseg_fnam": 24, "aseg": [24, 41, 136, 177, 182, 264, 273, 274, 277, 280, 281, 282, 447, 465, 466, 517, 655, 754, 841, 886], "mgz": [24, 30, 41, 44, 50, 79, 135, 157, 159, 161, 162, 177, 181, 182, 183, 258, 273, 274, 277, 279, 280, 281, 282, 305, 309, 310, 311, 392, 447, 466, 517, 655, 772, 818, 841, 865, 868, 886], "surf": [24, 26, 41, 81, 109, 118, 136, 156, 157, 158, 159, 160, 161, 162, 173, 177, 182, 224, 228, 258, 264, 272, 277, 279, 281, 282, 309, 463, 464, 515, 520, 549, 614, 637, 669, 672, 703, 740, 754, 772, 782, 829, 861, 862, 868], "add_dist": [24, 41, 109, 159, 258, 654, 676, 680, 868, 886], "lh_surf": 24, "cortex": [24, 26, 31, 37, 41, 43, 52, 53, 54, 55, 58, 60, 94, 109, 116, 126, 135, 136, 146, 152, 159, 167, 179, 182, 191, 196, 206, 212, 225, 246, 273, 274, 277, 279, 280, 281, 282, 390, 419, 598, 611, 672, 754, 812, 817, 841, 861, 862, 868, 871, 886], "volume_label": [24, 41, 273, 274, 277, 279, 280, 281, 282, 447, 517, 655, 886], "lh_cereb": 24, "sphere_unit": [24, 159, 655, 886], "octahedron": [24, 41, 109, 157, 159, 161, 258, 273, 277, 281, 654, 812], "subdivis": [24, 41, 109, 159], "octahedr": [24, 41, 109, 159, 412], "vertex": [24, 26, 41, 48, 49, 50, 83, 90, 109, 157, 158, 159, 161, 162, 176, 178, 181, 182, 224, 225, 228, 238, 272, 273, 274, 277, 278, 279, 280, 281, 282, 284, 299, 300, 447, 469, 471, 515, 538, 539, 548, 562, 628, 629, 640, 641, 646, 672, 673, 674, 679, 682, 683, 698, 701, 702, 703, 753, 754, 868, 871, 886], "lh": [24, 26, 28, 29, 37, 38, 39, 41, 43, 47, 48, 49, 54, 55, 60, 68, 90, 92, 94, 95, 104, 108, 109, 116, 126, 127, 134, 136, 156, 157, 158, 159, 160, 161, 162, 173, 176, 177, 179, 180, 183, 184, 192, 224, 225, 237, 238, 258, 262, 272, 273, 274, 277, 280, 281, 282, 469, 515, 611, 629, 634, 644, 754, 812, 817, 836, 868], "triangl": [24, 26, 41, 52, 109, 157, 158, 159, 161, 162, 176, 179, 224, 272, 279, 412, 640, 675, 679, 682, 703, 868, 871], "neighbor": [24, 26, 41, 109, 143, 157, 158, 159, 162, 201, 224, 228, 230, 243, 324, 331, 343, 455, 505, 590, 676, 677, 678, 680, 681, 686, 693, 694, 696, 697, 703, 867, 868, 886], "geometri": [24, 41, 60, 70, 109, 159, 162, 184, 185, 211, 246, 258, 392, 413, 457, 637, 754, 841, 861, 886], "triangul": [24, 41, 52, 109, 159, 176, 229, 230, 258, 279, 320, 637, 640, 834, 839, 868, 871, 886], "4098": [24, 43, 160, 161, 183, 861], "155407": [24, 26, 41, 43, 52, 159, 161], "156866": [24, 26, 41, 43, 52, 159, 161], "132651": 24, "57769": 24, "50733": 24, "401": [24, 81, 210, 233], "voxel": [24, 41, 44, 50, 135, 157, 159, 161, 209, 228, 246, 276, 279, 281, 282, 362, 589, 699, 700, 744, 754, 772, 818, 868, 886], "neighborhood": [24, 41, 50, 157, 159, 209, 279], "005000": [24, 159], "001000": [24, 41, 50, 159], "556177": 24, "16777216": 24, "nonzero": [24, 212, 868], "coord_fram": [24, 79, 109, 118, 123, 124, 125, 136, 137, 157, 158, 159, 160, 170, 171, 179, 183, 184, 185, 191, 211, 264, 270, 271, 279, 314, 327, 332, 434, 485, 514, 572, 573, 583, 594, 754, 770, 782, 871], "export": [24, 30, 41, 112, 115, 135, 141, 148, 149, 150, 156, 166, 169, 173, 190, 191, 221, 260, 266, 267, 268, 269, 273, 274, 277, 279, 280, 281, 282, 339, 341, 481, 482, 496, 506, 621, 706, 708, 709, 710, 843, 845, 851, 856, 872, 876, 886], "nifti": [24, 30, 41, 156, 279, 281, 282, 886], "nii_fnam": [24, 41], "mne_sample_lh": 24, "nii": [24, 30, 41, 156, 258], "export_volum": [24, 41, 279, 886], "mri_resolut": [24, 30, 41, 44, 278, 279, 281, 282, 447, 886], "And": [24, 42, 54, 70, 109, 135, 161, 180, 182, 191, 197, 203, 208, 212, 279, 527, 537, 696, 697, 845, 861, 868], "freeview": [24, 79, 135, 183, 865, 868, 886], "util": [24, 93, 147, 181, 190, 228, 266, 267, 443, 446, 481, 482, 749, 843, 845, 851, 855, 868, 876, 880, 886], "run_subprocess": 24, "mri_fnam": 24, "lut": [24, 466, 627, 754, 841], "opac": [24, 31, 35, 40, 46, 59, 92, 135, 157, 258, 276, 472, 708, 710, 754, 813, 819, 886], "jet": 24, "colorscal": 24, "slice": [24, 35, 40, 59, 135, 141, 144, 157, 159, 161, 173, 182, 196, 219, 232, 258, 260, 261, 264, 265, 266, 267, 268, 269, 271, 276, 281, 282, 312, 315, 329, 331, 361, 371, 415, 416, 419, 423, 426, 429, 434, 451, 452, 481, 482, 561, 562, 564, 576, 578, 579, 580, 583, 586, 590, 600, 602, 609, 674, 692, 693, 694, 696, 697, 701, 706, 708, 709, 710, 712, 714, 715, 716, 717, 719, 731, 733, 734, 736, 737, 772, 778, 782, 784, 785, 788, 790, 791, 797, 798, 799, 801, 803, 805, 808, 818, 868, 871, 874, 886], "157": [24, 123, 138, 152, 170, 171, 189, 212, 228, 232, 233, 246, 340, 666, 886], "234": [24, 25, 35, 112, 170, 228], "left_cerebellum_volume_sourc": [24, 25], "260": [25, 81, 112, 170, 193, 210, 233, 603, 862], "auto_examples_forward": 25, "source_space_morph": [25, 26], "547": [25, 26, 39, 56, 233], "oppos": [26, 60, 214, 225, 349, 422, 841, 845, 871, 886], "evenli": [26, 209, 211, 268, 269, 361, 594, 791, 868], "caution": [26, 27, 143, 158, 170, 193, 266, 267, 268, 269, 415, 481, 482, 483, 709, 763], "fname_tran": [26, 41, 50, 52, 124, 177, 182, 861], "sample_audvis_raw": [26, 29, 41, 45, 50, 52, 68, 71, 83, 92, 93, 94, 103, 104, 107, 108, 110, 111, 116, 118, 123, 124, 127, 141, 143, 147, 150, 151, 157, 159, 161, 163, 167, 168, 169, 171, 173, 177, 179, 182, 183, 200, 201, 204, 205, 207, 208, 209, 211, 217, 218, 219, 220, 224, 225, 230, 231, 232, 241, 258, 845], "fname_bem": [26, 41, 50, 160, 177, 182, 183], "fname_src_f": 26, "fsaverag": [26, 40, 43, 44, 125, 126, 135, 136, 137, 157, 158, 161, 172, 182, 191, 212, 236, 237, 238, 246, 264, 272, 273, 277, 278, 281, 282, 306, 314, 330, 362, 367, 368, 369, 374, 387, 389, 390, 469, 473, 521, 525, 548, 590, 643, 644, 674, 698, 701, 702, 743, 754, 770, 812, 818, 861, 886], "ico": [26, 40, 43, 137, 159, 160, 162, 192, 236, 237, 238, 258, 273, 277, 281, 284, 412, 519, 654, 678, 681, 812, 861, 871, 886], "read_info": [26, 64, 90, 92, 94, 95, 158, 159, 161, 170, 876], "pick_info": [26, 119, 136, 168, 170, 225, 876, 886], "src_f": [26, 44, 181], "read_source_spac": [26, 40, 43, 44, 136, 137, 157, 160, 161, 181, 236, 237, 238, 279, 838, 876], "src_morph": 26, "morph_source_spac": [26, 277, 280, 876, 886], "subject_to": [26, 40, 43, 44, 236, 238, 258, 272, 278, 281, 282, 362, 548, 549, 631, 643, 644, 645, 646, 818, 861], "return": [26, 31, 34, 68, 69, 75, 84, 92, 93, 94, 99, 103, 108, 109, 110, 113, 114, 115, 117, 121, 138, 141, 142, 145, 147, 150, 151, 152, 161, 162, 167, 168, 169, 170, 172, 179, 189, 206, 207, 208, 209, 211, 217, 219, 223, 225, 228, 229, 232, 238, 241, 242, 243, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 379, 380, 381, 382, 384, 385, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 752, 753, 754, 755, 756, 757, 758, 759, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 823, 824, 827, 838, 839, 840, 863, 867, 868, 871, 886], "mag_map_f": 26, "to_original_src": [26, 277, 280, 886], "track": [26, 113, 143, 150, 167, 170, 192, 193, 201, 204, 214, 218, 219, 223, 562, 582, 863, 874, 875, 886], "sulcal": [26, 161, 754], "gyral": [26, 161, 754], "outlier": [26, 70, 158, 432, 562, 800], "mai": [26, 70, 74, 76, 83, 103, 135, 136, 141, 142, 144, 145, 147, 150, 151, 152, 157, 159, 162, 167, 169, 171, 173, 189, 190, 191, 193, 196, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 217, 218, 219, 220, 223, 225, 230, 233, 236, 246, 261, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 280, 281, 282, 301, 320, 331, 332, 337, 355, 367, 412, 413, 415, 420, 422, 426, 432, 437, 443, 444, 445, 446, 447, 452, 463, 465, 472, 481, 482, 489, 496, 497, 502, 524, 529, 549, 561, 562, 564, 577, 579, 580, 583, 585, 594, 595, 612, 614, 616, 618, 624, 643, 645, 688, 692, 693, 694, 696, 697, 699, 701, 706, 708, 709, 710, 731, 733, 734, 735, 736, 737, 738, 754, 770, 771, 777, 784, 786, 788, 789, 791, 793, 797, 801, 806, 807, 809, 814, 816, 834, 843, 845, 846, 848, 849, 851, 852, 853, 860, 861, 863, 865, 867, 868, 871, 874, 886], "occur": [26, 44, 47, 70, 75, 90, 94, 95, 135, 141, 144, 145, 152, 162, 169, 202, 203, 208, 217, 230, 231, 259, 261, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 284, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 436, 437, 439, 455, 456, 457, 476, 478, 479, 481, 482, 510, 540, 579, 580, 656, 706, 709, 784, 794, 807, 845, 846, 851, 861, 867, 868, 886], "kwarg": [26, 58, 109, 112, 116, 123, 142, 180, 181, 196, 203, 224, 242, 266, 267, 268, 269, 271, 276, 279, 416, 423, 481, 482, 487, 551, 706, 754, 755, 776, 791, 810, 813, 845], "smooth": [26, 38, 43, 59, 71, 83, 114, 134, 135, 136, 143, 152, 157, 167, 182, 196, 208, 228, 229, 236, 237, 238, 246, 266, 267, 268, 269, 272, 273, 274, 277, 278, 280, 281, 282, 362, 481, 482, 562, 571, 693, 694, 696, 697, 702, 722, 724, 732, 733, 734, 736, 737, 754, 763, 785, 812, 815, 817, 819, 820, 823, 864, 886], "smoothing_step": [26, 41, 42, 43, 55, 59, 60, 104, 109, 116, 131, 137, 176, 178, 180, 182, 224, 236, 273, 274, 277, 280, 281, 282, 754, 812, 817], "almost": [26, 114, 141, 169, 845, 868], "equidist": [26, 276], "unevenli": [26, 524], "achiev": [26, 43, 44, 112, 127, 143, 145, 147, 161, 162, 181, 203, 212, 219, 225, 268, 269, 356, 365, 515, 537, 562, 592, 611, 658, 659, 660, 669, 670, 672, 693, 694, 695, 696, 697, 794, 865, 868, 872, 874, 886], "closest": [26, 145, 158, 159, 217, 243, 261, 266, 267, 268, 269, 272, 279, 481, 482, 702, 708, 710, 754, 772, 786, 868, 886], "approxim": [26, 67, 135, 171, 206, 217, 228, 246, 258, 263, 266, 267, 268, 269, 273, 274, 275, 277, 280, 281, 282, 314, 413, 420, 434, 449, 450, 452, 464, 481, 482, 561, 562, 573, 577, 583, 594, 654, 706, 708, 710, 718, 771, 778, 779, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 841, 868, 886], "brain_subject": 26, "time_label": [26, 33, 34, 59, 60, 109, 124, 131, 225, 236, 237, 238, 268, 269, 273, 274, 277, 280, 281, 282, 754, 789, 812, 817], "brain_f": 26, "remap": [26, 27, 77, 85, 268, 269, 624, 886], "destin": [26, 43, 44, 80, 156, 161, 260, 263, 264, 266, 267, 268, 269, 273, 274, 276, 277, 278, 279, 280, 281, 282, 290, 310, 311, 314, 315, 362, 374, 412, 434, 443, 444, 445, 446, 481, 482, 514, 547, 549, 561, 562, 583, 594, 643, 644, 646, 706, 707, 708, 709, 710, 739, 740, 796, 828, 829, 830, 831, 832, 833, 834, 837, 838, 839, 840, 871, 886], "sourcespac": [26, 41, 43, 45, 50, 109, 159, 160, 161, 177, 209, 270, 272, 273, 274, 277, 280, 281, 282, 284, 362, 447, 467, 477, 516, 517, 525, 538, 539, 544, 549, 636, 654, 655, 656, 663, 666, 668, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 698, 701, 702, 754, 770, 772, 812, 817, 818, 838, 841, 868, 876, 886], "n_vertic": [26, 41, 43, 53, 109, 159, 160, 161, 262, 272, 273, 274, 277, 280, 281, 282, 457, 544, 637, 640, 674, 693, 694, 696, 697, 704, 753, 754, 834, 839], "n_use": [26, 41, 43, 45, 50, 109, 159, 160, 161, 177, 209], "10242": [26, 43, 160, 236, 237, 238, 272, 284, 469, 698, 861], "coord": [26, 41, 43, 45, 50, 109, 125, 159, 160, 161, 162, 177, 209, 344, 456, 754, 755, 824, 839], "conductor": [26, 41, 45, 50, 109, 157, 159, 160, 177, 183, 306, 456, 526, 655, 770, 841, 868, 886], "20484": [26, 137, 160, 162, 236, 237, 258, 519], "999310": [26, 41, 50, 159, 177, 182, 183], "009985": [26, 41, 50, 159, 177, 182, 183], "035787": [26, 41, 50, 159, 177, 182, 183], "012759": [26, 41, 50, 159, 177, 182, 183], "812405": [26, 41, 50, 159, 177, 182], "582954": [26, 41, 50, 159, 177, 182], "034894": [26, 41, 50, 159, 177, 182, 183], "583008": [26, 41, 50, 159, 177, 182], "811716": [26, 41, 50, 159, 177, 182, 183], "991420": [26, 41, 45, 50, 159, 177, 182], "039936": [26, 41, 45, 50, 159, 177, 182], "124467": [26, 41, 45, 50, 159, 177, 182], "060661": [26, 41, 45, 50, 159, 177, 182], "984012": [26, 41, 45, 50, 159, 177, 182], "167456": [26, 41, 45, 50, 159, 177, 182], "115790": [26, 41, 45, 50, 159, 177, 182], "173570": [26, 41, 45, 50, 159, 177, 182], "977991": [26, 41, 45, 50, 159, 177, 182], "homogen": [26, 41, 50, 109, 159, 177, 209, 246, 576, 868, 871, 886], "2154": 26, "8088": 26, "8079": 26, "10233": [26, 886], "5028": 26, "2113": [26, 170], "8129": 26, "8125": 26, "10237": 26, "5136": 26, "20470": 26, "00205101": 26, "08784125": 26, "17433707": 26, "work": [27, 31, 68, 70, 75, 78, 83, 87, 133, 135, 138, 139, 140, 141, 145, 148, 149, 150, 151, 152, 156, 157, 161, 162, 167, 168, 169, 170, 174, 175, 176, 178, 179, 182, 185, 189, 191, 194, 195, 197, 200, 202, 204, 205, 206, 207, 208, 211, 212, 215, 216, 217, 219, 220, 222, 223, 225, 230, 233, 236, 238, 241, 242, 243, 246, 253, 257, 260, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 314, 315, 318, 320, 325, 328, 330, 334, 340, 349, 355, 357, 361, 362, 363, 365, 368, 373, 384, 388, 391, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 436, 440, 442, 447, 448, 453, 454, 465, 473, 476, 478, 479, 481, 482, 487, 491, 494, 500, 517, 519, 520, 523, 525, 527, 528, 529, 530, 531, 532, 533, 535, 536, 540, 546, 557, 558, 561, 562, 563, 575, 582, 589, 594, 608, 617, 621, 626, 632, 636, 637, 638, 639, 654, 655, 683, 701, 706, 708, 709, 710, 754, 755, 757, 770, 776, 778, 784, 786, 787, 792, 793, 797, 801, 806, 807, 809, 814, 816, 820, 822, 824, 841, 844, 845, 846, 850, 851, 852, 862, 863, 867, 868, 869, 871, 874, 886], "variou": [27, 62, 101, 120, 121, 136, 142, 151, 156, 166, 170, 171, 178, 179, 187, 188, 189, 190, 193, 194, 200, 203, 204, 206, 208, 215, 217, 219, 225, 228, 229, 263, 268, 271, 277, 332, 528, 529, 540, 562, 594, 615, 624, 626, 754, 776, 861, 865, 867, 868, 869, 871, 875, 886], "often": [27, 67, 70, 74, 75, 83, 135, 141, 143, 151, 167, 169, 170, 176, 179, 181, 189, 191, 193, 197, 201, 203, 204, 207, 209, 211, 214, 218, 219, 230, 243, 268, 269, 273, 274, 277, 280, 281, 282, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 540, 595, 754, 794, 812, 817, 841, 845, 849, 850, 861, 865, 867, 868, 869, 886], "lack": [27, 70, 191, 263, 275, 290, 304, 528, 595, 741, 869], "narr": [27, 166, 841, 869], "explan": [27, 73, 143, 156, 166, 232, 708, 869, 873, 886], "discov": [27, 863, 869, 886], "ve": [27, 115, 141, 150, 152, 157, 161, 172, 200, 202, 206, 208, 217, 218, 220, 243, 824, 845, 863, 865, 869], "flag": [27, 135, 166, 168, 258, 266, 267, 271, 273, 274, 277, 280, 281, 282, 311, 481, 482, 519, 773, 807, 812, 817, 818, 845, 861, 865, 886], "tutorial_script": [27, 166], "them": [27, 47, 50, 67, 70, 74, 79, 115, 127, 134, 135, 136, 138, 141, 142, 143, 145, 146, 150, 151, 152, 157, 161, 162, 166, 167, 169, 171, 172, 173, 192, 193, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 217, 218, 219, 225, 228, 229, 236, 238, 243, 258, 260, 266, 267, 268, 269, 272, 293, 294, 297, 361, 364, 369, 416, 417, 431, 492, 493, 523, 524, 531, 533, 536, 557, 561, 562, 581, 595, 602, 616, 621, 660, 670, 683, 710, 749, 800, 841, 843, 845, 853, 861, 862, 863, 867, 868, 871, 874, 886], "shortcut": [27, 220, 744, 754, 886], "intention": [27, 210], "record": [27, 62, 65, 70, 74, 83, 84, 109, 135, 138, 141, 145, 147, 152, 157, 163, 167, 169, 170, 171, 173, 176, 185, 187, 189, 191, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 217, 218, 219, 223, 225, 228, 243, 246, 260, 261, 266, 267, 268, 269, 271, 276, 283, 322, 349, 356, 361, 365, 405, 436, 445, 481, 482, 490, 494, 500, 502, 505, 510, 511, 523, 562, 564, 565, 566, 570, 572, 573, 583, 594, 595, 602, 608, 624, 651, 692, 706, 708, 709, 710, 787, 801, 807, 841, 852, 857, 861, 862, 863, 865, 868, 871, 874, 886], "past": [27, 152, 203, 425, 656, 849, 865, 867, 871], "recip": [27, 62, 845], "write": [27, 29, 41, 62, 66, 108, 110, 141, 161, 162, 171, 172, 173, 178, 190, 204, 217, 238, 241, 258, 260, 263, 264, 268, 269, 271, 272, 273, 274, 276, 279, 280, 282, 290, 309, 354, 454, 486, 514, 547, 561, 610, 615, 705, 739, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 845, 848, 849, 861, 863, 865, 868, 874, 886], "manipul": [27, 62, 141, 150, 166, 221, 365, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522, 862, 868, 875, 886], "ensembl": [27, 62, 66, 138, 271, 375, 481, 482], "neo": [27, 62, 66, 189, 271, 375, 481, 482, 886], "xdf": [27, 62, 66, 271, 375, 482], "anatomi": [27, 89, 91, 157, 176, 263, 266, 268, 269, 270, 271, 272, 277, 279, 310, 482, 486, 528, 529, 540, 615, 621, 626, 629, 656, 658, 659, 660, 671, 754, 841, 862, 886], "contralater": [27, 77, 85, 94, 152, 209, 271, 326, 487, 648], "css": [27, 77, 85, 173, 246, 263, 269, 270, 271, 272, 276, 277, 366, 481, 559, 560, 578, 615, 626, 629, 670, 672, 886], "bridg": [27, 77, 85, 246, 271, 314, 330, 375, 482, 487, 570, 593, 774, 816, 886], "much": [27, 44, 55, 74, 77, 83, 85, 135, 138, 141, 142, 143, 145, 150, 162, 166, 167, 171, 184, 192, 197, 203, 205, 206, 207, 208, 209, 210, 213, 217, 225, 243, 246, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 314, 330, 375, 437, 448, 452, 453, 481, 482, 487, 570, 593, 647, 774, 816, 845, 848, 849, 868, 874, 886], "gel": [27, 77, 85, 271, 314, 330, 375, 482, 487, 570, 593, 774, 816, 886], "densiti": [27, 32, 33, 34, 68, 75, 77, 78, 85, 105, 106, 119, 133, 135, 138, 143, 161, 162, 167, 173, 191, 197, 201, 202, 210, 225, 242, 246, 263, 266, 267, 268, 269, 271, 272, 277, 292, 299, 328, 361, 373, 418, 454, 481, 482, 520, 525, 528, 535, 536, 540, 543, 559, 562, 570, 571, 596, 597, 601, 613, 621, 628, 654, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 723, 724, 725, 748, 754, 770, 780, 786, 808, 822, 841, 862, 868, 871, 886], "csd": [27, 32, 33, 34, 77, 85, 105, 106, 170, 225, 266, 267, 268, 269, 271, 292, 299, 313, 328, 332, 373, 454, 481, 482, 559, 571, 621, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 723, 726, 780, 841, 886], "nir": [27, 77, 85, 172, 212, 260, 271, 482, 510, 842, 852, 868, 875, 876, 886], "intracrani": [27, 77, 85, 136, 139, 140, 166, 246, 271, 314, 318, 327, 368, 465, 473, 481, 482, 487, 589, 590, 591, 742, 743, 744, 754, 819, 861, 862, 874, 875, 886], "contact": [27, 77, 85, 136, 139, 140, 166, 200, 271, 314, 318, 327, 334, 368, 473, 481, 487, 589, 590, 591, 742, 743, 744, 754, 819, 845, 862, 886], "maxwel": [27, 77, 84, 85, 166, 167, 185, 200, 215, 216, 266, 268, 269, 271, 299, 300, 349, 350, 353, 356, 360, 361, 371, 372, 373, 413, 420, 434, 454, 456, 457, 476, 478, 479, 481, 482, 540, 573, 583, 594, 595, 794, 796, 886], "movement": [27, 74, 75, 77, 83, 85, 112, 138, 166, 193, 200, 206, 207, 208, 215, 216, 219, 220, 246, 258, 260, 266, 268, 269, 271, 343, 344, 345, 346, 347, 349, 351, 353, 354, 365, 434, 454, 472, 481, 494, 566, 569, 583, 594, 659, 671, 770, 777, 789, 796, 822, 841, 862, 886], "reestim": [27, 77, 85, 260, 271, 346, 347, 365, 494, 566, 569, 572, 770, 796, 822, 886], "dev_head_t": [27, 77, 80, 85, 157, 167, 170, 217, 260, 271, 317, 346, 347, 365, 375, 494, 566, 569, 573, 583, 594, 657, 658, 659, 671, 770, 796, 822, 871, 886], "muscl": [27, 77, 85, 145, 206, 246, 260, 314, 330, 494, 496, 562, 567, 886], "denois": [27, 77, 85, 197, 263, 266, 268, 269, 271, 356, 361, 421, 433, 454, 456, 481, 526, 559, 563, 573, 602, 621, 785, 886], "oversampl": [27, 77, 85, 246, 266, 268, 269, 356, 433, 454, 456, 481, 526, 602], "shift": [27, 75, 77, 85, 135, 141, 167, 196, 200, 203, 204, 209, 220, 246, 261, 264, 265, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 419, 441, 481, 482, 489, 496, 553, 562, 564, 590, 601, 624, 706, 709, 718, 754, 795, 807, 818, 886], "2d": [27, 31, 35, 40, 59, 96, 97, 119, 122, 130, 152, 173, 191, 197, 201, 204, 206, 207, 208, 209, 228, 233, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 314, 315, 320, 323, 331, 340, 368, 421, 424, 428, 430, 451, 452, 481, 482, 493, 502, 512, 517, 562, 691, 693, 694, 754, 755, 766, 770, 771, 775, 792, 813, 815, 816, 822, 823, 824, 826, 841, 849, 862, 886], "arrowmap": [27, 122, 130, 268, 271, 494, 558, 559, 624, 771, 886], "layout": [27, 47, 100, 115, 122, 130, 132, 133, 143, 145, 151, 152, 160, 190, 213, 230, 266, 267, 268, 269, 271, 275, 321, 323, 325, 328, 329, 330, 340, 375, 481, 482, 488, 492, 494, 505, 506, 526, 706, 708, 710, 755, 759, 767, 770, 778, 792, 803, 806, 815, 821, 822, 841, 868, 876, 886], "parcel": [27, 38, 41, 68, 90, 94, 95, 122, 130, 136, 156, 177, 182, 224, 246, 272, 387, 389, 390, 465, 611, 629, 754, 765, 836, 841, 886], "roi": [27, 38, 122, 130, 152, 156, 201, 229, 246, 264, 266, 268, 269, 271, 326, 439, 442, 497, 529, 754, 790, 841, 868, 871, 886], "rt": [27, 122, 130, 169, 266, 271, 326, 439, 442, 497], "room": [27, 122, 127, 130, 143, 152, 163, 173, 185, 192, 204, 206, 207, 209, 211, 212, 213, 218, 246, 277, 356, 361, 481, 572, 573, 583, 594, 595, 777, 841, 861, 868, 886], "lock": [27, 105, 106, 141, 157, 163, 169, 205, 208, 232, 243, 246, 261, 266, 271, 272, 437, 454, 481, 528, 543, 546, 559, 562, 628, 801, 865], "vectorview": [27, 61, 105, 106, 119, 171, 184, 259, 263, 268, 269, 271, 277, 315, 321, 322, 336, 340, 361, 392, 433, 434, 481, 520, 525, 535, 540, 573, 583, 594, 613, 654, 748, 754, 770, 822, 841, 857, 862, 868], "induc": [27, 105, 106, 107, 163, 167, 230, 231, 232, 243, 246, 266, 267, 271, 277, 454, 481, 528, 543, 545, 546, 559, 706, 709, 722, 732, 733, 736, 865, 886], "erd": [27, 105, 106, 242, 246, 263, 266, 267, 268, 269, 275, 365, 413, 420, 442, 481, 482, 496, 561, 562, 693, 706, 708, 709, 710, 737, 771, 786, 793, 797, 806, 809, 814, 816, 862, 886], "multitap": [27, 74, 83, 103, 105, 106, 109, 138, 143, 144, 167, 173, 197, 206, 233, 241, 242, 246, 266, 267, 268, 269, 271, 289, 375, 426, 452, 481, 482, 535, 706, 708, 710, 713, 716, 733, 734, 735, 736, 737, 738, 758, 874, 886], "morlet": [27, 32, 103, 105, 106, 113, 167, 203, 232, 233, 246, 266, 271, 289, 375, 426, 482, 706, 709, 712, 715, 720, 731, 733, 736, 737, 738, 758, 876, 884, 886], "stockwel": [27, 105, 106, 233, 246, 266, 271, 289, 375, 482, 706, 733, 735, 736, 737, 738, 758, 886], "hilbert": [27, 82, 105, 106, 113, 168, 233, 266, 267, 268, 269, 271, 289, 375, 481, 482, 706, 733, 736, 737, 738, 758, 886], "permut": [27, 98, 102, 112, 166, 228, 229, 230, 231, 234, 235, 238, 239, 240, 246, 266, 268, 269, 271, 277, 278, 279, 320, 362, 436, 481, 528, 529, 543, 553, 559, 621, 634, 636, 678, 686, 693, 694, 695, 696, 697, 698, 709, 736, 754, 775, 778, 874, 886], "1d": [27, 98, 102, 117, 211, 266, 271, 285, 289, 478, 479, 481, 517, 559, 573, 583, 594, 603, 621, 693, 694, 696, 697, 758, 795], "fdr": [27, 98, 101, 102, 266, 271, 481, 559, 621, 684, 690, 886], "rer": [27, 98, 102, 266, 268, 269, 271, 355, 454, 481, 559, 692], "p": [27, 47, 51, 58, 96, 97, 98, 100, 101, 102, 112, 135, 157, 161, 173, 189, 203, 225, 228, 229, 230, 232, 233, 236, 237, 238, 243, 246, 258, 264, 265, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 355, 452, 454, 476, 481, 482, 540, 559, 562, 573, 663, 666, 668, 684, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 706, 709, 772, 785, 845, 861, 865, 868, 886], "sloreta": [27, 28, 30, 31, 36, 38, 39, 41, 48, 50, 56, 59, 90, 104, 166, 167, 176, 179, 180, 182, 187, 188, 224, 236, 238, 246, 263, 266, 268, 269, 271, 272, 273, 274, 277, 280, 281, 282, 356, 454, 481, 528, 529, 530, 531, 532, 533, 535, 536, 540, 541, 542, 543, 545, 546, 626, 628, 754, 779, 841, 886], "timecours": [27, 33, 36, 42, 56, 263, 264, 266, 268, 269, 270, 271, 277, 281, 290, 294, 299, 304, 454, 456, 481, 524, 528, 529, 531, 540, 613, 615, 616, 626, 641, 707, 709, 717, 736, 754], "dic": [27, 31, 36, 56, 103, 166, 181, 226, 227, 246, 263, 266, 270, 271, 277, 290, 291, 292, 293, 294, 296, 299, 300, 356, 360, 454, 481, 482, 487, 518, 528, 529, 530, 540, 553, 558, 559, 626, 641, 660, 671, 707, 709, 715, 717, 736, 754, 841, 852, 862, 886], "beamform": [27, 36, 51, 56, 103, 166, 167, 187, 188, 225, 246, 263, 266, 268, 269, 270, 271, 277, 278, 279, 281, 356, 360, 362, 366, 373, 454, 456, 481, 530, 538, 540, 559, 615, 626, 636, 707, 709, 715, 717, 736, 754, 841, 854, 862, 876, 886], "er": [27, 32, 33, 36, 56, 112, 242, 246, 263, 266, 267, 270, 271, 277, 292, 296, 299, 300, 356, 360, 454, 481, 530, 540, 559, 626, 692, 715, 754, 785, 862, 886], "lcmv": [27, 31, 36, 56, 166, 176, 187, 188, 263, 266, 268, 269, 270, 271, 277, 278, 279, 281, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 356, 360, 362, 366, 373, 454, 457, 481, 530, 538, 540, 559, 615, 626, 636, 715, 754, 841, 886], "spars": [27, 36, 44, 46, 56, 119, 176, 228, 233, 236, 238, 246, 258, 263, 264, 268, 270, 271, 277, 278, 279, 310, 320, 331, 362, 373, 375, 457, 476, 477, 478, 479, 528, 529, 540, 615, 624, 626, 636, 672, 686, 692, 693, 694, 696, 697, 754, 781, 782, 813, 845, 852, 854, 868, 871, 886], "gamma": [27, 36, 56, 112, 113, 117, 246, 263, 266, 267, 268, 269, 270, 271, 277, 373, 476, 477, 481, 482, 537, 615, 624, 626, 708, 710, 722, 732, 733, 736, 781, 782, 786, 813, 868, 871, 886], "bayesian": [27, 36, 56, 246, 263, 268, 270, 271, 277, 356, 373, 476, 477, 615, 624, 626, 781, 782, 813, 852, 868], "mix": [27, 36, 56, 59, 103, 197, 206, 243, 246, 263, 264, 268, 270, 271, 273, 274, 277, 278, 279, 280, 281, 282, 299, 300, 362, 447, 458, 476, 477, 478, 479, 517, 525, 528, 529, 540, 562, 592, 615, 624, 626, 629, 634, 636, 654, 655, 661, 662, 663, 664, 665, 666, 667, 668, 698, 701, 754, 781, 782, 797, 812, 813, 817, 874, 886], "norm": [27, 31, 36, 47, 48, 49, 50, 56, 57, 59, 78, 84, 116, 150, 157, 163, 167, 178, 180, 186, 208, 224, 225, 246, 263, 264, 266, 267, 268, 269, 270, 271, 277, 278, 279, 362, 457, 476, 477, 478, 479, 481, 482, 528, 529, 530, 531, 532, 533, 535, 536, 538, 539, 540, 542, 544, 545, 546, 615, 624, 626, 636, 663, 666, 668, 718, 781, 782, 811, 813, 841, 852, 854, 861, 871, 886], "mxne": [27, 31, 36, 56, 176, 263, 264, 266, 268, 269, 270, 271, 277, 278, 279, 356, 362, 454, 477, 478, 479, 528, 529, 540, 615, 624, 626, 636, 754, 781, 782, 813, 841, 886], "irmxn": [27, 36, 56, 263, 264, 268, 270, 271, 277, 278, 279, 362, 477, 478, 528, 529, 540, 615, 624, 626, 636, 781, 782, 813], "volumetr": [27, 36, 50, 56, 136, 159, 161, 176, 178, 182, 268, 273, 274, 277, 278, 279, 280, 281, 282, 362, 517, 528, 529, 543, 589, 624, 636, 754, 812, 817, 818, 820, 841, 874, 886], "xfit": [27, 36, 56, 263, 264, 266, 268, 269, 270, 271, 281, 304, 454, 456, 481, 524, 528, 529, 531, 540, 613, 615, 616, 641, 886], "reweight": [27, 36, 40, 56, 246, 263, 266, 268, 269, 270, 277, 356, 454, 477, 478, 479, 626, 813], "tf": [27, 31, 36, 56, 59, 203, 263, 266, 268, 269, 270, 277, 356, 454, 477, 479, 626, 813, 886], "multiscal": [27, 36, 56, 263, 266, 268, 269, 270, 277, 356, 454, 477, 479, 626, 813], "circular": [27, 36, 56, 152, 224, 277, 279, 366, 471, 539, 541, 543, 626, 629, 754, 759, 852, 868, 886], "graph": [27, 36, 56, 117, 246, 277, 279, 366, 539, 541, 543, 626, 629, 676, 677, 678, 679, 680, 681, 682, 754, 759, 886], "spread": [27, 36, 42, 54, 55, 56, 71, 81, 83, 84, 113, 166, 169, 203, 208, 209, 211, 226, 227, 246, 263, 266, 268, 269, 270, 271, 272, 277, 279, 281, 356, 366, 454, 481, 525, 528, 529, 530, 538, 539, 540, 541, 543, 544, 570, 594, 615, 624, 626, 629, 655, 668, 670, 673, 754, 845, 868, 886], "psf": [27, 36, 54, 55, 56, 263, 268, 270, 271, 277, 279, 281, 366, 525, 528, 538, 539, 540, 541, 544, 615, 624, 626, 655, 754, 886], "talk": [27, 36, 56, 161, 203, 211, 230, 263, 266, 268, 270, 271, 277, 290, 300, 301, 356, 366, 373, 434, 454, 528, 538, 539, 540, 541, 544, 559, 572, 583, 594, 615, 624, 626, 754, 841, 867, 886], "rap": [27, 36, 56, 246, 263, 268, 270, 302, 615, 624, 626, 781, 782, 886], "music": [27, 36, 56, 206, 246, 263, 268, 270, 302, 615, 624, 626, 781, 782, 886], "resolut": [27, 30, 36, 44, 47, 48, 50, 56, 79, 114, 120, 135, 147, 157, 158, 159, 177, 213, 230, 231, 246, 259, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 301, 362, 366, 413, 420, 447, 469, 472, 481, 482, 528, 529, 538, 539, 540, 541, 544, 560, 561, 562, 615, 624, 626, 706, 708, 710, 722, 732, 733, 734, 735, 736, 737, 738, 754, 771, 786, 793, 797, 806, 809, 812, 814, 816, 817, 841, 852, 861, 867, 868, 886], "auto_examples_python": 27, "auto_examples_jupyt": 27, "fname_raw": [28, 29, 61, 103, 104, 127, 158, 183, 210], "fname_ev": [28, 94, 103, 104], "label_nam": [28, 29, 47, 92, 94, 104, 107, 182, 224, 466], "fname_label": [28, 29, 104, 107, 108], "assumpt": [28, 109, 121, 141, 142, 145, 153, 163, 203, 207, 211, 228, 268, 269, 602, 688, 794, 865, 868, 886], "read_label": [28, 29, 37, 39, 92, 104, 107, 108, 277, 280, 656, 876], "add": [28, 37, 43, 44, 70, 74, 90, 94, 95, 101, 114, 120, 126, 127, 135, 137, 141, 142, 144, 145, 152, 162, 169, 172, 173, 176, 177, 182, 190, 192, 196, 200, 201, 202, 204, 206, 207, 209, 217, 219, 224, 225, 228, 233, 243, 258, 260, 262, 263, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 314, 374, 413, 415, 420, 424, 437, 449, 451, 452, 472, 481, 482, 561, 562, 572, 574, 575, 576, 577, 614, 636, 645, 648, 653, 654, 656, 657, 658, 659, 660, 670, 703, 706, 708, 709, 710, 749, 754, 757, 771, 774, 775, 784, 786, 791, 793, 797, 806, 809, 814, 816, 823, 841, 843, 845, 848, 851, 852, 871, 886], "053": [28, 45, 49, 56, 69, 73, 92, 93, 104, 107, 108, 110, 111, 117, 152, 163, 167, 168, 169, 170, 178, 200, 201, 202, 207, 208, 209, 211, 217, 218, 219, 220, 225, 230, 231, 245], "sqrt": [28, 117, 184, 185, 224, 225, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 567, 592, 722, 732, 736, 808, 868], "mean_stc": 28, "flip": [28, 38, 39, 115, 162, 206, 228, 258, 273, 274, 277, 280, 281, 282, 305, 447, 516, 693, 824, 868, 886], "cancel": [28, 81, 181, 203, 211, 273, 274, 277, 280, 281, 282, 434, 447, 562, 594, 798, 861, 868, 871], "label_sign_flip": [28, 876, 886], "label_mean": 28, "label_mean_flip": 28, "stc_evok": 28, "sub": [28, 32, 33, 34, 41, 46, 65, 67, 70, 83, 113, 147, 156, 171, 213, 242, 243, 266, 267, 268, 269, 271, 440, 481, 482, 592, 655, 707, 754, 780, 857, 865, 868, 886], "stc_evoked_label": 28, "in_label": [28, 37, 38, 39, 277, 280, 281, 282, 886], "care": [28, 34, 142, 151, 152, 161, 203, 206, 207, 217, 219, 373, 479, 692, 868, 886], "polar": [28, 47, 143, 208, 776], "label_mean_evok": 28, "1711": [28, 34, 45, 107, 121, 132, 143, 146, 147, 153, 167, 170, 178, 181, 202, 225, 233, 236, 238], "benefit": [28, 45, 46, 55, 59, 71, 126, 173, 191, 246, 544, 571, 666, 861, 867], "1e3": [28, 29, 38, 39, 41, 69, 72, 97, 113, 138, 150, 152, 157, 158, 178, 186, 193, 214, 224, 230, 231, 232, 238], "h0": [28, 96, 100, 228, 229, 230, 231, 232, 236, 237, 238, 693, 694, 695, 696, 697], "h1": [28, 96, 112, 228, 229, 230, 231, 232, 233, 236, 237, 238], "linewidth": [28, 39, 97, 112, 113, 137, 151, 161, 207, 228, 263, 266, 267, 268, 269, 413, 420, 481, 482, 561, 706, 708, 710, 754, 771, 778, 786, 793, 809, 810, 813, 814, 816], "h2": 28, "unflip": 28, "pool": [28, 141, 150, 152, 167, 218, 299, 300, 476, 478, 479, 529, 530, 531, 532, 533, 535, 536, 546, 874], "stc_trial": 28, "_nolegend_": 28, "723": [28, 56, 197, 233], "compute_mne_inverse_epochs_in_label": [28, 56], "apply_inverse_raw": [29, 529, 530, 531, 533, 876, 886], "smaller": [29, 41, 75, 104, 127, 143, 150, 159, 203, 208, 211, 228, 229, 243, 261, 266, 267, 273, 274, 277, 280, 281, 282, 479, 500, 564, 579, 583, 592, 693, 694, 696, 697, 721, 729, 754, 812, 817, 861, 868, 886], "time_as_index": [29, 40, 84, 141, 150, 176, 217, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709, 886], "mne_": [29, 30, 871], "s_raw_inverse_": 29, "overwrit": [29, 41, 104, 108, 110, 141, 162, 173, 192, 219, 258, 260, 263, 264, 266, 267, 268, 269, 273, 274, 276, 277, 278, 279, 280, 281, 282, 290, 309, 310, 311, 314, 315, 443, 444, 445, 446, 481, 482, 514, 547, 561, 562, 571, 644, 645, 648, 652, 706, 707, 708, 709, 710, 739, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 839, 840, 886], "25800": [29, 45, 68, 71, 80, 83, 92, 93, 103, 104, 107, 110, 111, 118, 123, 127, 147, 157, 163, 168, 169, 173, 183, 200, 204, 205, 207, 208, 209, 217, 220, 224, 225, 230, 231, 232], "192599": [29, 45, 68, 71, 83, 92, 93, 103, 104, 107, 110, 111, 118, 123, 127, 147, 157, 163, 168, 169, 173, 183, 200, 204, 205, 207, 208, 217, 220, 224, 225, 230, 231, 232], "670": [29, 45, 68, 71, 81, 83, 92, 93, 103, 104, 106, 107, 110, 111, 114, 118, 123, 127, 147, 157, 163, 168, 169, 173, 183, 197, 200, 204, 205, 207, 208, 210, 217, 220, 224, 225, 230, 231, 232, 233], "compute_mne_inverse_raw_in_label": [29, 56], "nilearn": [30, 41, 44, 135, 172, 177, 182, 183, 281, 282, 818], "plot_stat_map": 30, "index_img": 30, "read_evok": [30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 78, 86, 87, 116, 119, 120, 124, 127, 150, 151, 173, 177, 179, 180, 182, 266, 267, 268, 269, 276, 481, 482, 832, 865, 876, 886], "vol": [30, 44, 50, 136, 161, 177, 181, 182, 264, 266, 267, 268, 269, 279, 302, 434, 634, 661, 662, 663, 664, 665, 666, 667, 668, 794], "4d": [30, 123, 166, 187, 188, 189, 263, 264, 266, 267, 268, 269, 271, 304, 356, 454, 456, 481, 482, 492, 526, 559, 560, 693, 694, 706, 708, 709, 710, 770, 782, 868, 871, 886], "img": [30, 116, 161, 183, 228, 281, 282], "as_volum": [30, 281, 282, 886], "nib": [30, 44, 79, 135, 157], "s_invers": 30, "gz": [30, 141, 156, 173, 207, 258, 265, 266, 267, 268, 269, 279, 314, 388, 481, 482, 502, 543, 547, 562, 606, 612, 615, 617, 624, 626, 632, 636, 671, 827, 830, 832, 833, 837, 838, 851, 886], "t1_fname": [30, 161, 177], "499": [30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 78, 86, 87, 116, 119, 120, 127, 143, 144, 150, 169, 173, 177, 179, 180, 182, 230, 231, 232, 233, 235], "11271": [30, 44, 182, 886], "336": [30, 56, 170, 172, 228, 886], "compute_mne_inverse_volum": [30, 56], "plug": [31, 845, 868], "facil": [31, 259], "implement": [31, 70, 135, 167, 170, 180, 197, 204, 206, 211, 225, 243, 259, 263, 271, 275, 290, 291, 293, 304, 334, 356, 362, 413, 420, 421, 426, 430, 453, 476, 478, 479, 481, 482, 525, 528, 529, 530, 531, 532, 533, 535, 536, 546, 562, 563, 570, 577, 583, 609, 631, 690, 731, 733, 741, 807, 845, 852, 860, 869, 874, 884, 886], "wmne": [31, 478, 479], "eloreta": [31, 166, 167, 176, 179, 180, 187, 188, 236, 238, 263, 266, 268, 269, 271, 277, 299, 300, 356, 454, 476, 478, 479, 528, 529, 530, 531, 532, 533, 535, 536, 540, 542, 545, 546, 626, 754, 779, 841, 886], "educ": [31, 867], "shall": [31, 145, 202, 268, 269, 437, 562, 674, 789, 845, 867, 874], "develop": [31, 70, 135, 172, 206, 211, 257, 258, 334, 583, 705, 763, 848, 849, 851, 852, 862, 865, 867, 871, 886], "meant": [31, 90, 95, 109, 172, 228, 275, 291, 293, 343, 415, 425, 517, 653, 748, 749, 757, 886], "practic": [31, 71, 99, 114, 152, 161, 169, 202, 203, 209, 211, 243, 246, 272, 299, 562, 571, 628, 634, 692, 841, 845, 867, 868], "apply_solv": 31, "linalg": [31, 84, 135, 157, 161, 186, 207, 360, 692, 865, 886], "plot_sparse_source_estim": [31, 35, 40, 46, 59, 92, 819, 876, 886], "ave_fnam": [31, 40, 59, 68, 92], "cov_fnam": [31, 35, 40, 45, 51, 59, 68, 92, 173, 225, 276], "handl": [31, 40, 46, 59, 127, 133, 141, 145, 147, 152, 156, 161, 166, 167, 169, 171, 173, 174, 208, 211, 215, 216, 261, 266, 267, 268, 269, 271, 344, 440, 454, 481, 482, 556, 559, 562, 594, 651, 755, 763, 771, 774, 776, 787, 798, 802, 826, 845, 871, 886], "365": [31, 40, 41, 45, 59, 81, 170, 208, 210, 233, 246, 272, 277, 356], "auxiliari": [31, 143, 374], "def": [31, 34, 68, 76, 84, 92, 93, 94, 109, 113, 117, 133, 135, 138, 151, 152, 157, 161, 203, 204, 207, 223, 225, 228, 232, 238, 243, 845], "ones": [31, 83, 88, 111, 142, 171, 179, 184, 186, 189, 207, 208, 228, 243, 259, 272, 389, 448, 474, 475, 481, 482, 521, 564, 583, 628, 634, 641, 691, 845, 865, 868, 871, 886], "account": [31, 80, 109, 123, 135, 142, 143, 157, 159, 163, 181, 186, 193, 201, 202, 208, 209, 211, 217, 218, 228, 233, 243, 260, 263, 268, 269, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 540, 562, 565, 592, 794, 845, 865, 868, 871, 886], "constraint": [31, 60, 159, 167, 179, 196, 209, 246, 266, 267, 289, 301, 456, 540, 785, 871, 886], "weigth": 31, "formul": [31, 722, 732, 733, 736, 868], "problem": [31, 40, 59, 70, 88, 96, 97, 114, 138, 145, 162, 167, 176, 177, 189, 190, 197, 201, 205, 206, 208, 209, 217, 228, 229, 233, 236, 237, 238, 243, 246, 478, 497, 562, 583, 612, 618, 693, 694, 696, 697, 699, 700, 820, 844, 845, 850, 865, 866, 868, 874, 886], "bia": [31, 40, 70, 84, 142, 152, 185, 203, 236, 238, 242, 246, 263, 268, 269, 299, 300, 362, 426, 476, 478, 479, 540, 592, 725, 788, 793, 868, 886], "callabl": [31, 151, 263, 266, 267, 268, 269, 273, 274, 275, 277, 280, 281, 282, 285, 314, 316, 342, 367, 413, 416, 420, 423, 430, 442, 481, 482, 532, 561, 562, 577, 642, 672, 673, 685, 692, 693, 694, 696, 697, 706, 708, 709, 710, 752, 754, 767, 771, 778, 785, 786, 788, 793, 797, 806, 809, 812, 814, 815, 816, 817, 886], "boolean": [31, 101, 142, 144, 170, 172, 207, 208, 217, 219, 263, 266, 267, 268, 269, 275, 277, 413, 420, 481, 482, 561, 562, 693, 694, 696, 697, 706, 708, 710, 785, 786, 790, 793, 797, 806, 809, 814, 845, 872, 886], "what": [31, 59, 71, 83, 90, 94, 95, 117, 127, 128, 135, 137, 141, 142, 143, 144, 145, 157, 161, 170, 172, 176, 181, 182, 183, 191, 201, 203, 212, 217, 218, 219, 225, 228, 230, 233, 241, 243, 261, 264, 265, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 356, 360, 367, 371, 372, 388, 405, 432, 437, 442, 446, 463, 480, 481, 482, 497, 548, 599, 612, 614, 618, 643, 645, 656, 706, 709, 734, 737, 777, 812, 817, 834, 841, 845, 848, 850, 851, 853, 871, 874, 876], "tangenti": [31, 299, 300, 458, 476, 478, 479, 540, 868, 871], "discret": [31, 45, 104, 159, 177, 197, 209, 241, 246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 279, 280, 281, 282, 420, 458, 476, 478, 479, 481, 482, 524, 540, 655, 706, 708, 709, 710, 718, 724, 867, 886], "coeffici": [31, 101, 109, 142, 147, 159, 196, 203, 205, 417, 419, 425, 431, 448, 449, 450, 478, 479, 561, 572, 573, 583, 594, 605, 609, 660, 669, 670, 691, 692, 708, 710, 719, 721, 724, 725, 729, 795, 886], "privat": [31, 845, 886], "inverse_spars": [31, 35, 40, 46, 59, 176, 854, 876, 886], "mxne_invers": 31, "_prepare_gain": 31, "is_fixed_ori": [31, 886], "_reapply_source_weight": 31, "_make_sparse_stc": 31, "all_ch_nam": 31, "gain_info": 31, "source_weight": 31, "weights_min": [31, 40, 59, 478, 479, 886], "dot": [31, 78, 87, 112, 119, 124, 127, 145, 151, 161, 176, 179, 183, 186, 191, 196, 201, 208, 212, 236, 238, 264, 268, 269, 273, 277, 281, 692, 782, 788, 845, 868, 886], "n_orient": [31, 273, 274, 277, 280, 281, 282, 447, 544], "active_set": 31, "l2": [31, 40, 54, 55, 246, 478, 479, 544, 666, 718, 854, 871], "penal": 31, "strongest": [31, 35, 40, 47, 59, 152], "n_dipol": [31, 51, 68, 92, 93, 159, 264, 273, 274, 277, 280, 281, 282, 302, 433, 538, 539, 541, 672], "depend": [31, 70, 82, 101, 126, 136, 137, 138, 142, 150, 152, 156, 158, 159, 163, 171, 172, 173, 191, 196, 202, 203, 205, 207, 208, 211, 219, 225, 228, 229, 230, 238, 243, 246, 260, 266, 267, 268, 269, 273, 274, 277, 279, 280, 281, 282, 301, 320, 331, 344, 345, 406, 419, 425, 439, 447, 457, 481, 482, 489, 496, 498, 562, 572, 583, 589, 602, 608, 687, 693, 694, 696, 697, 699, 701, 702, 705, 706, 708, 709, 710, 728, 754, 763, 775, 777, 778, 784, 785, 788, 801, 807, 843, 844, 845, 848, 851, 852, 853, 860, 861, 862, 865, 868], "n_active_dipol": 31, "bool": [31, 120, 172, 233, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 319, 322, 323, 324, 325, 326, 328, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 461, 463, 464, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 587, 588, 589, 590, 591, 592, 594, 595, 597, 598, 599, 601, 602, 603, 606, 607, 608, 609, 613, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 626, 628, 629, 630, 631, 632, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 687, 690, 693, 694, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 728, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 742, 743, 744, 749, 753, 754, 759, 762, 763, 767, 768, 770, 771, 772, 773, 775, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 824, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 865], "entri": [31, 109, 135, 141, 143, 145, 151, 152, 167, 171, 172, 197, 201, 217, 260, 263, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 288, 316, 343, 344, 345, 346, 347, 348, 413, 420, 423, 435, 445, 448, 479, 480, 481, 482, 529, 537, 561, 562, 577, 652, 655, 657, 658, 659, 671, 686, 706, 708, 709, 710, 754, 771, 772, 784, 785, 786, 790, 793, 797, 806, 807, 809, 812, 813, 814, 816, 817, 845, 848, 868, 871, 886], "x_full": 31, "solv": [31, 59, 162, 176, 413, 497, 562, 612, 618, 692, 868, 874], "ey": [31, 74, 125, 135, 136, 138, 159, 166, 173, 184, 200, 202, 205, 207, 208, 215, 216, 260, 266, 267, 268, 269, 382, 454, 481, 482, 497, 500, 559, 580, 582, 585, 618, 706, 708, 709, 710, 862, 875], "dtype": [31, 92, 94, 114, 120, 145, 157, 168, 223, 225, 233, 266, 267, 268, 269, 419, 480, 481, 482, 868], "bgcolor": [31, 35, 40, 46, 59, 92, 157, 161, 179, 481, 482, 763, 773, 807, 813], "141": [31, 56, 170, 216, 228, 233, 279], "custom_inverse_solv": [31, 56], "synchron": [32, 33, 34, 112, 147, 212, 242, 246, 259, 299, 483, 489, 496, 845, 862, 886], "marijn": [32, 33, 45, 60, 73, 103, 162, 225, 246, 299, 300, 873, 886], "van": [32, 33, 43, 45, 60, 73, 103, 126, 162, 181, 203, 225, 246, 278, 299, 300, 362, 390, 570, 868, 873, 886], "vliet": [32, 33, 45, 60, 73, 103, 162, 225, 246, 299, 300, 873, 886], "vanvliet": [32, 33, 45, 60, 73, 103, 162, 225], "rockhil": [32, 70, 71, 79, 83, 114, 115, 116, 120, 135, 136, 137, 232, 233, 246, 873, 886], "aprockhil": [32, 70, 71, 79, 83, 114, 115, 116, 120, 135, 136, 137, 232, 233], "mailbox": [32, 33, 70, 71, 79, 83, 113, 114, 115, 116, 120, 127, 135, 136, 137, 230, 232, 233, 236, 242], "tfr_morlet": [32, 114, 167, 230, 231, 232, 233, 242, 426, 731, 733, 734, 735, 737, 738, 876, 886], "csd_tfr": [32, 876, 886], "make_d": [32, 33, 34, 225, 291, 292, 293, 294, 841, 876, 886], "apply_dics_tfr_epoch": [32, 291, 292, 293, 876, 886], "organ": [32, 71, 232, 233, 246, 571, 696, 697, 862, 867, 871], "_task": [32, 33, 34, 46, 113, 242], "_meg": [32, 33, 34, 46, 113, 173, 242, 258, 481, 482, 502, 503, 886], "5000e": 32, "mostli": [32, 109, 142, 176, 179, 189, 202, 205, 379, 380, 381, 384, 385, 386, 388, 393, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 458, 476, 478, 479, 481, 482, 540, 754, 841], "wavelet": [32, 103, 113, 167, 203, 232, 246, 426, 546, 706, 709, 712, 715, 720, 722, 731, 732, 733, 734, 736, 737, 841, 886], "tfr": [32, 112, 203, 230, 231, 242, 426, 529, 530, 531, 532, 706, 709, 712, 715, 717, 728, 733, 734, 736, 737, 738, 739, 814, 841, 874, 876, 884, 886], "wish": [32, 145, 172, 191, 209, 223, 229, 230, 236, 365, 481, 482, 583, 755, 757, 845, 853, 867], "epochs_tfr": [32, 294, 533, 717], "return_itc": [32, 112, 114, 167, 230, 231, 232, 233, 242, 735, 736, 737, 738], "buffer": [32, 114, 190, 258, 271, 480, 481, 482, 497, 583, 594, 612, 618, 871, 886], "01_task": [32, 33, 34, 46, 67, 113, 171, 242, 243], "somato_meg": [32, 33, 34, 46, 113, 242], "237600": [32, 33, 34, 46, 113, 242], "506999": [32, 33, 34, 46, 113, 242], "791": [32, 33, 34, 46, 113, 182, 233, 242], "1688": [32, 33, 34, 46, 113, 210, 242], "266": [32, 33, 34, 46, 112, 113, 170, 203, 228, 233, 242, 246], "9989760657919393": 32, "1052": [32, 33, 34], "0121": [32, 34, 146, 167, 170, 217, 225], "0211": [32, 34, 167, 170, 225], "1331": [32, 34, 146, 170, 196, 202, 210, 225], "2211": [32, 34, 170, 225], "2241": [32, 34, 160, 170, 225], "2521": [32, 34, 141, 150, 170, 225], "1641": [32, 34, 170, 225], "1831": [32, 34, 170, 225], "1921": [32, 34, 170, 225], "1941": [32, 34, 170, 225], "1611": [32, 34, 120, 170, 225], "0441": [32, 34, 170, 225], "1631": [32, 34, 120, 170, 225], "0231": [32, 34, 120, 167, 170, 225], "1411": [32, 34, 146, 147, 170, 202, 208, 225], "0341": [32, 34, 170, 225], "1621": [32, 34, 120, 170, 196, 225], "1811": [32, 34, 120, 151, 170, 217, 225], "1521": [32, 34, 167, 170, 210, 225], "1721": [32, 34, 170, 225], "1911": [32, 34, 170, 225], "1931": [32, 34, 170, 225], "2111": [32, 34, 170, 225], "2121": [32, 34, 170, 225], "2021": [32, 34, 145, 170, 181, 191, 196, 213, 225, 246, 391, 510, 576, 862, 867], "1341": [32, 34, 170, 210, 225], "0221": [32, 34, 167, 170, 225], "0241": [32, 34, 170, 225], "1731": [32, 34, 35, 170, 225], "2041": [32, 34, 170, 225], "0731": [32, 34, 170, 225], "1141": [32, 34, 170, 225], "1131": [32, 34, 170, 197, 225], "0131": [32, 34, 146, 167, 170, 225], "period": [32, 81, 121, 141, 142, 145, 146, 150, 151, 173, 181, 200, 202, 203, 204, 206, 213, 243, 261, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 356, 500, 562, 565, 566, 567, 579, 624, 625, 718, 750, 788, 841, 845, 867, 886], "baseline_csd": 32, "scalar": [32, 142, 161, 181, 225, 266, 267, 268, 269, 273, 274, 275, 277, 280, 281, 282, 292, 299, 300, 301, 413, 420, 481, 482, 562, 692, 708, 710, 754, 786, 793, 797, 806, 812, 817, 886], "beamfom": 32, "noise_csd": [32, 33, 299], "reduce_rank": [32, 33, 34, 49, 299, 300, 886], "real_filt": [32, 33, 34, 225, 299, 886], "epochs_stc": 32, "return_gener": [32, 104, 293, 294, 297, 447, 531, 533, 536], "nsourc": [32, 52, 270, 871], "epoch_stc": 32, "conj": [32, 114, 299, 300], "apply_baselin": [32, 112, 127, 142, 150, 173, 179, 200, 205, 206, 208, 230, 231, 232, 233, 242, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 706, 709, 886], "8155": [32, 33, 34, 46], "sti": [32, 33, 42, 46, 69, 72, 73, 80, 90, 93, 94, 95, 107, 108, 110, 113, 141, 143, 150, 153, 167, 169, 170, 178, 189, 197, 201, 205, 206, 208, 218, 225, 230, 241, 242, 259, 454, 455, 481, 482, 498, 841, 886], "014": [32, 33, 42, 46, 61, 69, 72, 73, 80, 90, 93, 94, 95, 107, 108, 110, 113, 128, 141, 143, 150, 153, 167, 169, 170, 178, 189, 197, 201, 205, 206, 208, 218, 225, 230, 241, 242, 259, 454, 455, 481, 482, 498, 886], "006": [32, 33, 121, 128, 141, 143, 146, 150, 159, 167, 170, 205, 208, 225, 246, 258, 272, 277, 519, 861], "005": [32, 33, 56, 121, 128, 135, 140, 141, 143, 150, 158, 160, 163, 167, 170, 205, 225, 238, 242, 264, 346, 564, 782], "015": [32, 33, 128, 141, 143, 150, 170, 205, 206, 225, 236, 246, 264, 577, 666, 782], "001": [32, 33, 71, 80, 83, 84, 106, 108, 121, 128, 141, 142, 143, 145, 146, 150, 151, 152, 161, 167, 169, 170, 173, 189, 196, 200, 202, 203, 204, 205, 208, 213, 217, 225, 228, 229, 230, 232, 233, 236, 237, 242, 246, 537, 571, 656, 693, 694, 696, 697, 862, 868], "003": [32, 33, 72, 121, 128, 141, 142, 143, 146, 150, 167, 168, 170, 173, 202, 203, 205, 206, 208, 217, 225, 246], "074": 32, "gyri": [32, 94, 156, 159, 224, 246], "border": [32, 38, 59, 104, 116, 126, 156, 182, 263, 266, 267, 268, 269, 275, 413, 420, 439, 481, 482, 561, 562, 577, 706, 708, 710, 754, 786, 792, 793, 797, 806, 809, 814, 815, 816, 886], "central": [32, 128, 142], "sulcu": 32, "primari": [32, 94, 150, 867, 868], "s1": [32, 505], "m1": [32, 67, 171, 209, 228, 243, 266, 267, 268, 269, 481, 482, 651, 886], "4500": 32, "dorsal": [32, 754], "brain_kwarg": [32, 41, 116, 135, 181, 182, 273, 274, 277, 280, 281, 282, 812, 817], "add_data_kwarg": [32, 136, 182, 273, 274, 277, 280, 281, 282, 812, 817], "fmid": [32, 273, 274, 277, 280, 281, 282, 754, 773, 812, 817, 818, 886], "scale_factor": [32, 35, 48, 49, 50, 59, 178, 274, 280, 282, 314, 754, 804, 813, 817], "colorbar_kwarg": [32, 136, 182, 754], "label_font_s": [32, 136, 182], "movi": [32, 60, 136, 137, 178, 182, 754, 886], "websit": [32, 136, 137, 152, 178, 182, 190, 208, 405, 406, 577, 845, 848, 867], "save_movi": [32, 60, 136, 137, 178, 182, 754, 886], "time_view": [32, 60, 109, 127, 136, 137, 178, 182, 192, 273, 274, 277, 280, 281, 282, 754, 812, 817, 886], "onc": [32, 34, 43, 44, 60, 70, 94, 120, 127, 133, 136, 143, 144, 145, 146, 151, 152, 167, 169, 170, 171, 173, 178, 182, 200, 201, 203, 205, 206, 207, 208, 217, 219, 259, 260, 266, 267, 268, 269, 278, 284, 377, 448, 449, 451, 452, 481, 482, 581, 592, 734, 737, 775, 807, 845, 861, 867, 868, 886], "688": [32, 233], "33913449": 32, "817": [32, 233], "80202112": 32, "3163": 32, "68479992": 32, "1408": 32, "dics_epoch": [32, 56, 886], "roman": [33, 246, 860, 886], "goj": [33, 246, 860, 886], "appelhoff": [33, 113, 127, 230, 233, 236, 242, 873, 886], "csd_morlet": [33, 34, 103, 225, 707, 711, 712, 713, 714, 716, 876, 886], "apply_dics_csd": [33, 34, 225, 291, 293, 294, 299, 876, 886], "shorter": [33, 114, 203, 211, 243, 273, 274, 277, 280, 281, 282, 437, 442, 481, 482, 567, 595, 601, 722, 732, 733, 734, 736, 737, 807, 886], "498464098687909": [33, 34], "logspac": [33, 34, 196, 242, 356], "log10": [33, 34, 100, 133, 203, 213, 225, 228, 242, 243, 706], "loss": [33, 70, 202, 207, 266, 267, 268, 269, 416, 423, 443, 444, 445, 446, 481, 482, 688, 868], "csd_baselin": [33, 34], "csd_er": [33, 34], "block": [33, 34, 59, 63, 103, 133, 135, 143, 144, 173, 192, 193, 202, 214, 225, 264, 266, 267, 268, 269, 276, 454, 472, 473, 478, 481, 482, 500, 551, 562, 592, 625, 693, 694, 696, 697, 708, 710, 754, 782, 784, 801, 807, 808, 810, 843, 850, 868, 871, 886], "rather": [33, 34, 60, 141, 142, 147, 150, 157, 167, 168, 169, 171, 172, 179, 189, 197, 202, 208, 209, 213, 217, 228, 232, 236, 241, 266, 267, 270, 273, 274, 277, 280, 281, 282, 420, 481, 482, 527, 535, 536, 546, 553, 555, 593, 698, 701, 754, 772, 807, 841, 843, 845, 861, 862, 867, 868, 886], "entir": [33, 74, 104, 145, 152, 177, 185, 202, 203, 205, 211, 213, 218, 228, 243, 261, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 289, 414, 429, 529, 530, 531, 532, 533, 562, 579, 624, 656, 706, 845, 886], "baseline_source_pow": 33, "beta_source_pow": 33, "messag": [33, 172, 214, 241, 258, 273, 274, 277, 280, 281, 282, 367, 447, 497, 500, 612, 618, 652, 653, 749, 750, 751, 754, 843, 845, 851, 856, 865, 871, 886], "40188307": 33, "5102619": 33, "34636424": 33, "joachim": [33, 181, 225, 246, 292, 299], "gro\u00df": [33, 181, 225, 246, 292, 299], "jan": [33, 181, 225, 246, 292, 299, 300, 861, 886], "kujala": [33, 181, 225, 246, 292, 299, 300], "matti": [33, 40, 54, 55, 58, 59, 126, 163, 179, 181, 211, 225, 246, 277, 292, 299, 478, 479, 529, 540, 544, 573, 578, 594, 663, 668, 852, 860, 865, 868, 886], "h\u00e4m\u00e4l\u00e4inen": [33, 40, 58, 59, 126, 179, 181, 225, 246, 277, 292, 299, 434, 478, 479, 529, 540, 544, 578, 663, 666, 668, 852, 886], "lar": [33, 181, 225, 246, 292, 299], "timmermann": [33, 181, 225, 246, 292, 299], "alfon": [33, 181, 225, 246, 292, 299], "schnitzler": [33, 181, 225, 246, 292, 299], "riitta": [33, 113, 179, 181, 225, 246, 292, 299, 300], "salmelin": [33, 113, 181, 225, 246, 292, 299, 300], "nation": [33, 181, 225, 246, 257, 292, 299, 873], "academi": [33, 181, 225, 246, 292, 299], "694": [33, 181, 197, 210, 225, 246, 292, 299], "699": [33, 141, 152, 181, 197, 225, 233, 246, 292, 299], "2001": [33, 41, 70, 181, 196, 209, 225, 246, 266, 267, 268, 269, 292, 299, 419, 481, 482, 570, 651, 690], "1073": [33, 181, 225, 246, 292, 299], "pna": [33, 181, 225, 246, 292, 299], "123": [33, 35, 56, 123, 152, 155, 170, 206, 208, 210, 220, 222, 228, 232, 233, 347], "dics_source_pow": [33, 56, 886], "luke": [34, 38, 42, 75, 81, 82, 109, 873, 886], "bloi": [34, 38, 42, 81, 82, 109, 873, 886], "make_lcmv": [34, 49, 181, 291, 293, 295, 296, 297, 298, 299, 301, 841, 876, 886], "apply_lcmv_cov": [34, 181, 295, 297, 298, 876, 886], "apply_inverse_cov": [34, 42, 529, 531, 532, 533, 876, 886], "90092": 34, "maxfilt": [34, 189, 211, 271, 352, 353, 354, 434, 481, 482, 535, 536, 545, 546, 572, 573, 583, 594, 657, 658, 659, 671, 871, 886], "conserv": [34, 70, 147, 228, 570, 655, 754, 886], "advanc": [34, 73, 127, 162, 163, 205, 219, 246, 263, 266, 267, 268, 269, 275, 356, 375, 413, 420, 472, 476, 481, 482, 561, 562, 577, 671, 706, 708, 710, 763, 771, 786, 793, 797, 806, 809, 814, 816, 844, 847, 849, 865, 866, 868, 870, 874, 886], "correctli": [34, 43, 44, 151, 191, 205, 238, 266, 267, 268, 269, 334, 446, 481, 482, 582, 769, 788, 843, 844, 851, 861, 862, 868, 871, 886], "compute_rank": [34, 263, 421, 779, 876, 886], "tol": [34, 40, 46, 59, 74, 173, 360, 456, 476, 478, 479, 886], "tol_kind": [34, 360, 886], "active_win": 34, "baseline_win": 34, "baseline_cov": 34, "active_cov": 34, "common_cov": 34, "ref": [34, 61, 67, 123, 152, 258, 754, 770, 845, 886], "ex": [34, 211, 845, 849, 850], "_gen_dic": 34, "stc_base": [34, 42], "stc_act": 34, "_gen_lcmv": 34, "_gen_mn": 34, "stc_dic": 34, "stc_lcmv": 34, "stc_dspm": [34, 40, 59], "0521": [34, 170, 202, 225], "1041": [34, 170, 225], "2411": [34, 120, 170, 225], "0431": [34, 170, 225], "0141": [34, 170, 202, 225], "1031": [34, 170, 225, 844], "2221": [34, 170, 225], "1111": [34, 142, 152, 170, 203, 225, 233, 246, 356, 692, 693, 694, 696, 697, 845], "0421": [34, 170, 225], "0931": [34, 170, 225], "1231": [34, 170, 225], "0741": [34, 170, 225], "0821": [34, 170, 225], "2541": [34, 170, 202, 225], "0531": [34, 170, 225], "1021": [34, 170, 225, 246, 266, 267, 268, 269, 481, 482], "0631": [34, 170, 225], "1321": [34, 170, 202, 225], "2611": [34, 170, 202, 225], "0331": [34, 167, 170, 225], "0541": [34, 170, 225], "0321": [34, 167, 170, 225], "2321": [34, 170, 225], "1421": [34, 146, 147, 170, 202, 208, 210, 225], "2631": [34, 170, 202, 225], "1431": [34, 170, 202, 225], "2231": [34, 170, 225], "2441": [34, 170, 225], "1841": [34, 170, 225], "1511": [34, 167, 170, 225], "2311": [34, 170, 225], "1741": [34, 170, 202, 225, 246], "2131": [34, 170, 202, 225, 228, 246, 699, 700], "0411": [34, 170, 225], "2511": [34, 170, 225], "1011": [34, 170, 225], "1541": [34, 170, 202, 210, 225], "1821": [34, 170, 225], "2421": [34, 120, 170, 202, 225], "0641": [34, 170, 225], "1311": [34, 79, 135, 136, 170, 210, 225], "2141": [34, 170, 202, 225, 228, 246, 699, 700], "0621": [34, 170, 225], "2641": [34, 170, 225], "1121": [34, 170, 225], "1211": [34, 170, 210, 225], "2341": [34, 170, 225], "0511": [34, 147, 170, 225], "0921": [34, 170, 225], "2531": [34, 170, 202, 225], "0911": [34, 170, 202, 225], "2431": [34, 170, 225], "0721": [34, 170, 225], "1221": [34, 170, 202, 225], "2031": [34, 170, 196, 225], "0311": [34, 167, 170, 225], "2331": [34, 170, 225, 556], "0811": [34, 170, 202, 225], "0111": [34, 146, 167, 170, 177, 202, 208, 217, 225, 641], "1531": [34, 167, 170, 225, 258], "0941": [34, 170, 225], "1241": [34, 170, 197, 225], "0711": [34, 170, 225], "0611": [34, 170, 225], "planar": [34, 40, 42, 50, 58, 59, 71, 84, 92, 94, 109, 111, 119, 131, 143, 147, 173, 178, 179, 180, 184, 189, 197, 200, 207, 208, 211, 225, 228, 771, 868, 871, 886], "7615": [34, 126, 246, 390], "004172": 34, "17919e": 34, "exp": [34, 40, 42, 50, 58, 59, 90, 92, 94, 109, 178, 179, 180, 183, 192, 197, 208, 225, 228, 299, 300, 457, 476, 478, 479, 540], "37508": 34, "81894e": 34, "brain_dic": 34, "5205929": 34, "6585548": 34, "71744034": 34, "brain_lcmv": 34, "37202028": 34, "44229054": 34, "93188606": 34, "brain_dspm": 34, "71161502": 34, "88782419": 34, "99242158": 34, "459": [34, 56, 79, 85, 210, 233], "378": [34, 35, 56, 81, 197, 233], "evoked_ers_source_pow": [34, 56], "detail": [35, 44, 45, 80, 119, 141, 143, 150, 151, 152, 156, 157, 159, 167, 168, 169, 170, 171, 172, 173, 176, 178, 181, 189, 190, 191, 196, 197, 201, 202, 204, 206, 207, 208, 211, 217, 218, 219, 220, 238, 241, 246, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420, 421, 423, 424, 426, 429, 430, 432, 434, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 464, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 555, 558, 561, 562, 564, 565, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 585, 587, 588, 589, 590, 591, 592, 594, 595, 597, 598, 601, 602, 603, 606, 607, 608, 609, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 626, 628, 629, 630, 631, 632, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 651, 654, 655, 657, 658, 659, 660, 669, 670, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 693, 694, 695, 696, 697, 699, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 724, 725, 728, 729, 733, 734, 736, 737, 738, 739, 742, 743, 744, 749, 753, 754, 762, 769, 770, 771, 778, 779, 782, 785, 786, 787, 788, 789, 792, 793, 794, 796, 797, 798, 799, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 845, 861, 862, 864, 865, 869, 874, 886], "luessi": [35, 47, 104, 246, 860, 886], "mluessi": [35, 47, 104], "nmr": [35, 43, 47, 104, 114, 156, 217, 273, 277, 281, 369, 812, 868], "mgh": [35, 43, 47, 58, 104, 114, 156, 171, 217, 273, 277, 281, 330, 369, 655, 812, 856, 862, 868, 874, 886], "harvard": [35, 43, 47, 58, 104, 114, 156, 257, 273, 277, 281, 369, 812, 868, 873], "daniel": [35, 40, 46, 58, 59, 92, 127, 210, 246, 277, 478, 479, 860, 873, 886], "strohmeier": [35, 40, 46, 59, 92, 246, 478, 479, 860, 886], "tu": [35, 40, 46, 59, 92], "ilmenau": [35, 40, 46, 59, 92, 257, 873], "de": [35, 40, 46, 59, 92, 99, 112, 196, 197, 214, 243, 246, 257, 419, 562, 577, 861, 873, 886], "gamma_map": [35, 876, 886], "make_stc_from_dipol": [35, 40, 46, 59, 876, 886], "plot_dipole_loc": [35, 40, 51, 59, 179, 184, 186, 876, 886], "plot_dipole_amplitud": [35, 40, 51, 59, 876], "evoked_fnam": [35, 51, 90, 95, 266, 267, 268, 269, 481, 482], "50e": [35, 92, 152, 205], "300e": 35, "xyz_same_gamma": [35, 476, 886], "return_residu": [35, 40, 46, 51, 59, 178, 302, 476, 478, 479, 529, 886], "return_as_dipol": [35, 40, 46, 59, 476, 478, 479, 886], "303": [35, 88, 112, 170, 197, 210, 224, 233, 237], "364": [35, 40, 48, 49, 54, 55, 58, 59, 68, 81, 92, 94, 121, 163, 167, 170, 179, 233, 241], "converg": [35, 40, 46, 59, 173, 180, 206, 476, 529, 562, 713, 724, 868, 886], "054e": 35, "22233": 35, "856e": 35, "20712": 35, "375e": 35, "17166": 35, "061e": 35, "12996": 35, "273e": 35, "10107": 35, "574e": 35, "8307": 35, "319e": 35, "7209": 35, "369e": 35, "6342": 35, "631e": 35, "5694": 35, "047e": 35, "5142": 35, "579e": 35, "4692": 35, "199e": 35, "889e": 35, "4002": [35, 868], "634e": 35, "3696": 35, "422e": 35, "3429": 35, "246e": 35, "3153": 35, "099e": 35, "2952": [35, 163], "748e": 35, "703e": 35, "2559": 35, "817e": 35, "2394": 35, "063e": 35, "2229": 35, "417e": 35, "2067": 35, "883e": 35, "1944": 35, "711e": 35, "1836": 35, "551e": 35, "400e": 35, "1617": 35, "266e": 35, "1509": 35, "166e": 35, "1440": 35, "066e": 35, "1350": [35, 210], "964e": 35, "1245": 35, "861e": 35, "754e": 35, "1128": 35, "643e": 35, "1077": [35, 58, 246, 277, 544, 666], "529e": 35, "1017": [35, 246], "410e": 35, "975": [35, 73, 196], "288e": 35, "924": [35, 233], "163e": 35, "036e": 35, "837": [35, 233], "906e": 35, "798": [35, 44, 96, 121, 130, 145, 178, 188, 197, 233], "776e": 35, "744": [35, 197, 233], "644e": 35, "513e": 35, "687": [35, 61, 197, 233], "382e": 35, "253e": 35, "627": 35, "125e": 35, "600": [35, 40, 58, 59, 71, 74, 81, 83, 90, 93, 126, 127, 134, 156, 157, 161, 168, 169, 179, 180, 181, 185, 192, 197, 200, 201, 204, 207, 208, 209, 210, 211, 213, 217, 218, 219, 220, 225, 246, 479, 754, 886], "000e": 35, "588": [35, 197, 233], "877e": 35, "570": [35, 81, 233], "758e": 35, "552": [35, 197, 224, 227, 233], "642e": 35, "528": [35, 144, 196, 197, 233], "495": [35, 82, 223, 233], "421e": 35, "486": [35, 144, 233], "316e": 35, "215e": 35, "119e": 35, "417": [35, 119, 210, 228, 233, 246, 562, 592, 771], "026e": 35, "937e": 35, "853e": 35, "772e": 35, "695e": 35, "348": [35, 163, 170, 203, 228, 233, 886], "622e": 35, "339": [35, 69, 85, 170, 196, 228, 233], "552e": 35, "333": [35, 75, 170, 180, 188, 210, 233], "486e": 35, "330": [35, 50, 81, 82, 170, 184, 233, 886], "423e": 35, "312": [35, 170, 210, 233], "306e": 35, "252e": 35, "297": [35, 112, 170, 210, 228, 233], "201e": 35, "152e": 35, "273": [35, 46, 112, 167, 170, 185, 233, 886], "106e": 35, "261": [35, 91, 94, 112, 128, 130, 170, 210, 228, 233], "062e": 35, "020e": 35, "807e": 35, "431e": 35, "222": [35, 46, 102, 170, 192, 232, 233, 238], "074e": 35, "219": [35, 41, 67, 85, 112, 170, 228, 233, 886], "735e": 35, "412e": 35, "105e": 35, "207": [35, 112, 114, 159, 170, 210, 232, 233, 246], "813e": 35, "198": [35, 170, 180, 185, 188, 197, 228, 232, 233, 238], "535e": 35, "192": [35, 170, 172, 183, 188, 228, 232, 237, 240], "271e": 35, "018e": 35, "778e": 35, "174": [35, 126, 170, 197, 210, 228, 233, 246, 279], "549e": 35, "121e": 35, "922e": 35, "156": [35, 45, 162, 165, 170, 177, 182, 210, 228, 233, 279], "731e": 35, "138": [35, 65, 70, 85, 167, 170, 228, 232, 233, 246, 279, 567, 886], "895e": 35, "749e": 35, "608e": 35, "126": [35, 45, 170, 197, 228, 233], "344e": 35, "220e": 35, "104": [35, 61, 170, 228, 232, 233, 246, 666, 871, 886], "100e": [35, 65, 146, 152, 202, 225], "117": [35, 61, 146, 170, 228, 233, 246, 735, 738, 886], "985e": 35, "875e": 35, "107": [35, 61, 113, 115, 135, 141, 170, 208, 216, 233, 246, 871, 886], "769e": 35, "666e": 35, "473e": 35, "208e": 35, "126e": 35, "115": [35, 61, 84, 94, 170, 184, 233, 246, 570], "688e": 35, "500e": 35, "441e": 35, "384e": 35, "329e": 35, "127": [35, 170, 177, 197, 228, 232, 233], "275e": 35, "137": [35, 66, 135, 170, 172, 210, 228, 279], "247e": 35, "649e": 35, "116e": 35, "179": [35, 75, 91, 170, 197, 210, 228, 232, 246, 601, 868], "523e": 35, "211": [35, 41, 59, 146, 170, 228, 232, 233], "307e": 35, "227": [35, 112, 151, 152, 170, 210, 232, 233, 246, 391, 862], "214e": 35, "041e": 35, "293": [35, 112, 170, 184, 233, 246], "730e": 35, "124e": 35, "160e": 35, "783e": 35, "340": [35, 51, 81, 82, 123, 170, 192, 210, 246, 302, 886], "168e": 35, "343": [35, 144, 170, 171, 210, 233, 886], "949e": 35, "886e": 35, "420": [35, 81, 109, 228, 233], "855e": 35, "reach": [35, 40, 46, 59, 173, 243, 259, 266, 267, 268, 269, 481, 482, 662, 706, 708, 710, 713, 724, 734, 737, 751, 786, 793, 814, 886], "dip": [35, 40, 59, 84, 116, 177, 182, 184, 185, 186, 212, 243, 264, 456, 616, 886], "mri_head_t": [35, 40, 51, 59, 182, 270, 271, 474, 475, 871], "fig_nam": [35, 40, 46, 59, 813], "david": [35, 42, 119, 126, 129, 135, 196, 203, 241, 246, 266, 267, 268, 269, 356, 390, 419, 476, 481, 482, 530, 708, 710, 718, 724, 735, 738, 771, 868, 886], "wipf": [35, 246, 476], "srikantan": [35, 225, 246, 299, 300, 476], "nagarajan": [35, 225, 246, 299, 300, 476], "unifi": [35, 138, 181, 203, 246, 476, 666, 886], "947": [35, 233, 246, 476], "966": [35, 42, 129, 163, 173, 208, 210, 233, 246, 476], "059": [35, 141, 143, 150, 170, 201, 217, 225, 246, 476], "451": [35, 56, 228, 233, 279], "328": [35, 113, 121, 163, 170, 246, 268, 269, 356, 794, 865], "gamma_map_invers": [35, 56], "form": [37, 142, 144, 161, 169, 176, 179, 200, 203, 205, 206, 207, 211, 228, 230, 233, 236, 263, 266, 267, 268, 269, 271, 273, 274, 275, 277, 280, 281, 282, 337, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 448, 476, 478, 479, 481, 482, 515, 524, 529, 531, 532, 533, 561, 562, 563, 571, 577, 594, 637, 640, 655, 656, 657, 658, 659, 671, 693, 694, 696, 697, 706, 708, 709, 710, 718, 771, 786, 788, 793, 797, 806, 809, 814, 816, 834, 839, 845, 864, 865, 867, 868, 871, 886], "merg": [37, 142, 218, 219, 261, 266, 268, 269, 355, 455, 500, 527, 648, 655, 845, 867, 886], "christian": [37, 120, 126, 134, 145, 246, 390, 391, 413, 437, 666, 860, 862, 886], "brodbeck": [37, 120, 134, 246, 860, 886], "christianbrodbeck": [37, 120, 134], "read_source_estim": [37, 43, 53, 116, 127, 134, 176, 182, 237, 876, 886], "aud_lh": 37, "aud_rh": 37, "stc_lh": [37, 47], "stc_rh": [37, 47], "stc_bh": 37, "calcul": [37, 38, 58, 81, 101, 112, 128, 145, 151, 152, 159, 163, 167, 171, 177, 181, 189, 196, 202, 203, 206, 208, 213, 217, 228, 229, 233, 242, 261, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 299, 300, 306, 320, 356, 360, 361, 371, 372, 373, 413, 420, 421, 448, 456, 457, 470, 476, 478, 479, 481, 482, 519, 524, 525, 526, 540, 562, 569, 574, 575, 579, 583, 594, 598, 614, 624, 636, 671, 685, 693, 694, 696, 697, 699, 700, 707, 718, 725, 794, 799, 808, 841, 865, 871, 886], "mass": [37, 166, 228, 229, 234, 235, 266, 271, 272, 277, 481, 559, 621, 655, 663, 669, 672, 687, 689, 690, 694, 709, 736, 744, 883, 886], "mni": [37, 135, 136, 137, 160, 177, 182, 183, 191, 264, 281, 282, 314, 330, 369, 474, 638, 746, 753, 754, 818, 868, 886], "vtx": 37, "t_lh": 37, "center_of_mass": [37, 224, 272, 277, 669, 672, 886], "mni_lh": 37, "vertex_to_mni": [37, 272, 277, 876], "t_rh": 37, "mni_rh": 37, "275": [37, 46, 123, 167, 170, 171, 192, 197, 210, 228, 233, 246, 340, 413, 862, 868], "625": [37, 144, 210, 233], "hl": 37, "hr": 37, "hb": 37, "figlegend": 37, "510": [37, 56, 81, 145, 196, 210, 228, 243], "label_activation_from_stc": [37, 56], "typic": [38, 44, 60, 70, 83, 135, 144, 146, 150, 152, 157, 161, 168, 169, 171, 189, 192, 193, 197, 200, 201, 203, 205, 206, 207, 208, 209, 211, 213, 219, 228, 243, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 280, 281, 282, 299, 300, 314, 315, 333, 344, 346, 356, 360, 361, 362, 364, 420, 431, 456, 466, 469, 481, 482, 542, 561, 562, 564, 572, 577, 595, 605, 608, 618, 655, 677, 691, 692, 693, 694, 696, 697, 706, 709, 754, 792, 801, 805, 807, 841, 844, 845, 851, 862, 863, 865, 867, 868, 886], "anatom": [38, 44, 70, 94, 135, 136, 157, 161, 177, 182, 246, 264, 281, 282, 367, 465, 754, 772, 776, 818, 841, 868, 886], "yield": [38, 141, 143, 146, 150, 152, 156, 162, 172, 181, 193, 204, 206, 217, 218, 243, 261, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 320, 430, 434, 562, 565, 572, 573, 583, 594, 620, 658, 659, 698, 733, 734, 736, 737, 754, 841, 863, 865, 868, 886], "peak": [38, 54, 55, 60, 70, 72, 74, 82, 90, 94, 95, 127, 132, 146, 150, 151, 167, 173, 176, 178, 179, 181, 184, 185, 186, 192, 200, 202, 205, 206, 208, 210, 212, 228, 243, 258, 261, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 361, 544, 562, 564, 567, 574, 575, 579, 580, 583, 584, 585, 587, 588, 589, 603, 663, 692, 706, 784, 789, 791, 792, 793, 861, 868, 886], "banksst": [38, 41, 47], "aparc_label_nam": 38, "stc_mean": 38, "grow": [38, 90, 95, 243, 471, 515, 611, 852, 867], "halt": [38, 135, 143, 264, 266, 267, 268, 269, 472, 473, 481, 482, 562, 708, 710, 782, 784, 801, 807, 810, 851, 886], "read_labels_from_annot": [38, 41, 47, 68, 90, 94, 95, 126, 224, 548, 628, 836, 876, 886], "parc": [38, 41, 47, 629, 836], "aparc": [38, 41, 47, 68, 90, 94, 95, 126, 136, 156, 177, 182, 224, 264, 273, 274, 277, 280, 281, 282, 387, 447, 465, 517, 629, 644, 754, 841, 886], "regexp": [38, 90, 94, 95, 201, 206, 208, 213, 442, 556, 629, 886], "stc_mean_label": 38, "func_label": 38, "stc_to_label": [38, 876, 886], "maximum": [38, 47, 48, 50, 58, 83, 115, 119, 152, 177, 178, 182, 183, 202, 203, 206, 217, 246, 261, 266, 267, 268, 269, 273, 274, 277, 279, 280, 281, 282, 299, 300, 328, 344, 367, 421, 446, 447, 450, 471, 476, 478, 479, 481, 482, 515, 523, 529, 538, 539, 544, 562, 564, 579, 589, 592, 593, 671, 693, 694, 696, 697, 702, 706, 711, 712, 713, 714, 715, 716, 717, 718, 720, 722, 724, 732, 735, 736, 738, 754, 778, 783, 789, 792, 812, 817, 818, 841, 868, 886], "anat_label": 38, "stc_anat_label": 38, "pca_anat": 38, "extract_label_time_cours": [38, 39, 41, 182, 273, 274, 277, 280, 281, 282, 517, 876, 886], "pca_flip": [38, 39, 273, 274, 277, 280, 281, 282, 447], "stc_func_label": 38, "pca_func": 38, "show_view": [38, 48, 79, 109, 116, 135, 136, 161, 182, 191, 212, 225, 238, 273, 274, 277, 280, 281, 282, 754, 812, 817, 886], "add_label": [38, 59, 104, 116, 126, 754], "73227205": 38, "80078852": 38, "62750681": 38, "label_from_stc": [38, 56], "strategi": [39, 197, 200, 206, 208, 209, 246, 355, 367, 418, 430, 478, 666, 724, 786, 865], "simpl": [39, 46, 128, 145, 146, 152, 161, 162, 167, 182, 196, 197, 203, 207, 225, 228, 243, 246, 258, 326, 355, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 498, 563, 722, 732, 802, 845, 862, 868, 886], "patheffect": [39, 161], "path_effect": [39, 161], "label_fnam": 39, "stc_label": 39, "mean_flip": [39, 273, 274, 277, 280, 281, 282, 447, 886], "tc": 39, "pe": 39, "stroke": [39, 161], "foreground": [39, 143, 161, 273, 274, 277, 280, 281, 282, 754, 812, 817, 886], "possibl": [39, 43, 45, 114, 135, 138, 141, 143, 144, 146, 150, 151, 152, 157, 161, 162, 169, 170, 171, 172, 173, 179, 181, 189, 191, 193, 197, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 213, 217, 218, 219, 220, 223, 225, 228, 232, 233, 241, 243, 260, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 328, 356, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 430, 436, 454, 464, 472, 481, 482, 489, 506, 562, 563, 601, 602, 620, 621, 651, 688, 693, 695, 706, 707, 710, 740, 770, 780, 788, 789, 792, 797, 800, 801, 808, 843, 850, 862, 863, 865, 867, 868, 871, 872, 886], "vectorsourceestim": [39, 60, 176, 273, 274, 277, 278, 281, 282, 294, 295, 476, 478, 479, 529, 530, 531, 532, 533, 538, 539, 634, 817, 818, 841, 876, 886], "stc_vec": [39, 41, 181], "stc_vec_label": 39, "ee6677": [39, 161, 722, 732], "228833": 39, "4477aa": [39, 722, 732], "xyz": [39, 157, 161, 179, 273, 274, 277, 280, 281, 282, 314, 332, 447, 476, 506, 824, 886], "zorder": [39, 161, 268, 269, 722, 732, 788, 791, 886], "label_source_activ": [39, 56], "ir": 40, "l0": [40, 478], "sparser": [40, 273, 277, 281, 812], "convex": [40, 46, 59, 246, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 886], "mixed_norm": [40, 176, 479, 876, 886], "sure": [40, 43, 45, 67, 70, 79, 109, 113, 135, 136, 141, 142, 145, 152, 157, 162, 163, 167, 171, 172, 173, 177, 190, 201, 204, 205, 206, 208, 211, 217, 232, 236, 237, 238, 258, 268, 269, 444, 445, 478, 493, 546, 561, 572, 701, 722, 732, 733, 734, 736, 791, 832, 843, 844, 845, 853, 886], "criterion": [40, 529, 886], "n_mxne_it": [40, 478], "use_cp": [40, 92, 159, 224, 274, 280, 282, 286, 287, 366, 529, 530, 531, 532, 533, 536, 540, 545, 546, 670, 671, 868, 886], "maxit": [40, 59, 476, 478, 479], "3000": [40, 49, 113, 138, 143, 146, 147, 193, 202, 208, 213, 258, 478, 479], "active_set_s": [40, 478], "debia": [40, 59, 478, 479], "slower": [40, 44, 46, 203, 261, 266, 365, 412, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522, 532, 602, 845, 874], "sure_alpha_grid": [40, 478], "083": [40, 124], "tidx": [40, 182], "7262": [40, 58, 59, 94, 179, 197, 225], "020866": [40, 58, 197], "58122e": [40, 58, 59, 94, 179, 197, 225], "element": [40, 58, 90, 169, 173, 179, 180, 183, 192, 197, 203, 207, 208, 217, 219, 228, 230, 246, 260, 263, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 324, 325, 413, 420, 425, 434, 435, 447, 448, 468, 481, 482, 517, 518, 519, 561, 577, 594, 655, 686, 694, 706, 708, 710, 759, 771, 773, 778, 786, 793, 806, 809, 812, 814, 816, 817, 818, 841, 845, 851, 866, 867, 871, 886], "21995": 40, "82623e": 40, "warm": 40, "33333333333333": 40, "66666666666667": 40, "66666666666666": 40, "666666666666664": 40, "60279": 40, "603691813114": 40, "59855": 40, "33381940738": 40, "60434": 40, "87086639602": 40, "60386": 40, "806544140134": 40, "60336": 40, "58240427435": 40, "60303": 40, "83155030615": 40, "60157": 40, "013430584055": 40, "59974": 40, "67524684279": 40, "59597": 40, "86913013583": 40, "59084": 40, "52687739991": 40, "compute_source_morph": [40, 43, 44, 134, 159, 161, 181, 182, 236, 237, 238, 273, 277, 278, 281, 282, 631, 812, 818, 861, 876, 886], "subject_from": [40, 43, 44, 181, 272, 278, 362, 548, 549, 631, 643, 644, 645, 646, 861], "stc_fsaverag": [40, 43, 44, 861], "src_fsaverage_fnam": 40, "src_fsaverag": 40, "matthieu": [40, 59, 246, 478, 479], "kowalski": [40, 59, 246, 478, 479], "acceler": [40, 246, 478, 851, 865, 868, 886], "gradient": [40, 119, 213, 246, 261, 266, 267, 268, 269, 271, 478, 480, 481, 482, 525, 562, 576, 706, 708, 709, 710, 771, 886], "physic": [40, 157, 161, 171, 177, 179, 190, 211, 246, 268, 269, 271, 434, 446, 478, 481, 482, 529, 573, 583, 594, 788, 841, 868, 871, 886], "medicin": [40, 83, 177, 211, 246, 478, 562, 594, 868], "biologi": [40, 83, 177, 211, 246, 478, 562, 594, 868], "1937": [40, 246, 478], "1961": [40, 246, 478], "2012": [40, 59, 152, 170, 203, 228, 246, 272, 277, 284, 356, 478, 479, 699, 700, 874], "1088": [40, 177, 196, 209, 211, 246, 266, 267, 268, 269, 419, 478, 481, 482, 594, 651, 868], "0031": [40, 177, 211, 246, 478, 594, 868], "9155": [40, 177, 211, 246, 478, 594, 868], "jen": [40, 46, 59, 246, 478, 479, 886], "haueisen": [40, 46, 59, 246, 478, 479], "improv": [40, 70, 145, 196, 197, 205, 208, 213, 246, 266, 267, 268, 269, 307, 343, 345, 349, 372, 373, 415, 424, 449, 451, 452, 453, 481, 482, 540, 563, 602, 605, 663, 668, 734, 737, 845, 861, 863, 864, 865, 886], "prni": [40, 46, 246, 479], "t\u00fcbingen": [40, 246], "6858545": [40, 246], "charl": [40, 44, 246, 278, 362, 478], "alban": [40, 246, 478], "deledal": [40, 246, 478], "samuel": [40, 94, 95, 246, 478, 886], "vaiter": [40, 246, 478], "jalal": [40, 246, 478], "fadili": [40, 246, 478], "peyr\u00e9": [40, 246, 478], "stein": [40, 246, 478], "unbias": [40, 246, 478], "risk": [40, 182, 203, 206, 232, 246, 266, 267, 268, 269, 478, 481, 482, 583, 754], "sugar": [40, 246, 478], "siam": [40, 246, 478], "journal": [40, 43, 70, 71, 74, 119, 135, 158, 197, 203, 211, 233, 241, 246, 266, 267, 268, 269, 278, 356, 362, 434, 478, 481, 482, 562, 570, 571, 573, 594, 666, 693, 694, 696, 697, 708, 710, 718, 722, 724, 732, 733, 735, 736, 738, 771, 860], "2448": [40, 196, 246, 478], "2487": [40, 246, 478], "140968045": [40, 246, 478], "mixed_norm_invers": [40, 56], "annalisa": [41, 886], "pascarella": [41, 886], "iac": 41, "cnr": 41, "dir": [41, 172, 258, 754, 868, 871], "data_dir": [41, 57, 134, 145], "bem_dir": [41, 45, 109, 160, 162, 183], "fname_mixed_src": 41, "fname_aseg": [41, 182], "fname_model": 41, "_audvi": 41, "_audvis_raw": [41, 158], "substructur": 41, "labels_vol": 41, "amygdala": 41, "thalamu": 41, "proper": [41, 70, 228, 243, 267, 268, 269, 272, 299, 300, 356, 360, 361, 367, 371, 372, 373, 375, 413, 420, 456, 457, 476, 478, 479, 482, 540, 765, 794, 845, 862, 874, 886], "stem": [41, 72, 214, 277, 281, 488, 508], "oct6": [41, 109, 159, 258, 273, 277, 281, 646, 654, 812, 861], "oct5": [41, 109, 861], "1026": [41, 109, 861], "bound": [41, 135, 159, 263, 266, 267, 268, 269, 273, 274, 275, 277, 280, 281, 282, 413, 420, 457, 481, 482, 561, 562, 655, 706, 707, 708, 710, 724, 742, 769, 771, 773, 778, 786, 793, 797, 806, 807, 808, 809, 812, 814, 816, 817, 818, 868, 871, 886], "10mm": 41, "someth": [41, 127, 150, 162, 172, 173, 192, 203, 208, 209, 217, 273, 274, 277, 280, 281, 282, 754, 755, 812, 817, 841, 844, 845, 848, 849, 850, 852, 886], "vol_src": [41, 136, 159], "add_interpol": [41, 50, 159, 655], "usual": [41, 50, 70, 83, 112, 114, 141, 144, 146, 150, 151, 152, 156, 157, 161, 162, 167, 168, 169, 171, 173, 181, 184, 189, 192, 193, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 217, 218, 219, 220, 236, 238, 241, 242, 258, 264, 265, 266, 267, 268, 269, 270, 271, 279, 305, 327, 332, 337, 339, 341, 464, 481, 482, 506, 671, 693, 694, 696, 697, 841, 845, 846, 848, 851, 853, 865, 868, 871], "nuse": [41, 271, 279, 871], "node": [41, 47, 159, 680, 681, 682, 759, 871, 886], "4590": 41, "2961": 41, "346": [41, 145, 170], "1275": 41, "2615": 41, "1340": 41, "1589": 41, "1372": [41, 210], "283": [41, 71, 112, 170, 210, 228, 246, 571], "1306": [41, 210], "010000": [41, 157], "write_source_spac": [41, 636, 861, 876, 886], "again": [41, 135, 142, 143, 145, 151, 152, 156, 157, 162, 173, 197, 200, 201, 203, 205, 206, 207, 208, 217, 228, 233, 243, 266, 267, 268, 269, 276, 481, 482, 562, 602, 805, 832, 844, 867, 868, 886], "plot_img": 41, "nipy_spectr": 41, "exist": [41, 44, 99, 101, 127, 141, 144, 150, 151, 157, 162, 171, 172, 173, 177, 181, 202, 203, 204, 207, 208, 209, 219, 223, 228, 230, 258, 260, 263, 264, 266, 267, 268, 269, 270, 271, 273, 274, 276, 277, 278, 279, 280, 281, 282, 290, 309, 310, 311, 314, 315, 374, 379, 380, 381, 382, 384, 385, 386, 388, 389, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 435, 439, 443, 444, 445, 446, 448, 465, 481, 482, 483, 496, 500, 514, 547, 549, 551, 561, 562, 565, 572, 595, 614, 624, 644, 645, 648, 651, 652, 653, 656, 658, 659, 676, 677, 680, 706, 707, 708, 709, 710, 739, 742, 754, 777, 793, 808, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 839, 840, 845, 853, 861, 862, 865, 867, 872, 874, 886], "5mm": [41, 84, 136, 433, 754], "innerskul": 41, "815": [41, 210, 233], "521": [41, 246, 356], "807": 41, "502": [41, 96, 233, 527, 871], "6003": 41, "inv_method": [41, 90], "a2009": [41, 94, 136, 156, 177, 273, 274, 277, 280, 281, 282, 447, 517, 629], "39266": 41, "01344e": 41, "coron": [41, 136, 159, 161, 181, 264, 754, 772, 782], "silhouett": [41, 181, 182, 273, 274, 277, 280, 281, 282, 754, 812, 817, 886], "43101017": 41, "98225664": 41, "7504814": 41, "45409596": 41, "02821048": 41, "97219252": 41, "vox": [41, 135, 161, 181, 182, 183], "21567156": 41, "47889133": 41, "39837939": 41, "labels_parc": 41, "label_t": 41, "allow_empti": [41, 273, 274, 277, 280, 281, 282, 447], "nam": [41, 93, 94, 95, 184, 185, 225, 672, 886], "mixed_source_space_invers": [41, 56], "computation": [42, 173, 203, 206, 207, 602, 868, 874], "sabbagh": [42, 246, 530, 886], "pierr": [42, 76, 206, 246, 530, 562, 886], "ablin": [42, 76, 206, 246, 530, 562, 886], "ga\u00ebl": [42, 246, 530], "varoquaux": [42, 246, 530], "state": [42, 90, 93, 109, 126, 141, 163, 167, 169, 176, 200, 201, 208, 209, 218, 223, 228, 243, 246, 259, 261, 266, 267, 351, 437, 478, 497, 515, 522, 530, 562, 592, 611, 612, 617, 618, 658, 659, 660, 669, 670, 672, 693, 694, 695, 696, 697, 706, 708, 709, 754, 797, 841, 843, 845, 853, 867, 868, 871, 874, 886], "2020": [42, 74, 145, 158, 196, 246, 391, 530, 562, 862], "116893": [42, 246, 530], "alexand": [42, 135, 213, 246, 576, 862, 886], "captur": [42, 46, 138, 145, 167, 173, 184, 185, 197, 205, 206, 207, 208, 209, 271, 276, 457, 561, 574, 575, 579, 608, 609, 841, 886], "environ": [42, 43, 44, 156, 173, 176, 264, 272, 273, 274, 276, 277, 279, 280, 281, 282, 305, 309, 310, 311, 314, 362, 367, 368, 369, 374, 379, 380, 381, 382, 384, 385, 386, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 432, 461, 463, 465, 469, 471, 472, 473, 474, 475, 515, 519, 521, 548, 549, 590, 611, 629, 631, 638, 643, 644, 645, 646, 650, 653, 654, 655, 669, 672, 683, 701, 702, 746, 753, 754, 770, 772, 782, 812, 817, 818, 820, 836, 843, 844, 848, 849, 850, 851, 853, 861, 865, 868, 886], "raw_empty_room_fnam": [42, 163], "ernoise_raw": [42, 129, 163, 173, 208], "raw_empty_room": [42, 163], "compute_raw_covari": [42, 88, 109, 163, 185, 192, 202, 263, 356, 615, 752, 861, 876, 886], "19800": [42, 129, 163, 173, 208], "85867": [42, 129, 163, 173, 208], "142": [42, 83, 129, 159, 163, 170, 173, 208, 214, 228, 232, 279, 886], "965": [42, 129, 163, 173, 197, 206, 208, 233], "18000": 42, "658": [42, 197, 233], "319": [42, 49, 72, 73, 99, 142, 153, 167, 170, 178, 181, 197, 202, 210, 228, 246, 562], "environment": [42, 167, 200, 204, 207, 209, 211, 217, 219, 220, 861], "rest": [42, 70, 73, 109, 126, 135, 138, 141, 163, 167, 169, 170, 218, 246, 266, 267, 268, 269, 277, 375, 395, 481, 482, 651, 659, 841, 845, 867, 869, 874, 886], "base_cov": 42, "data_cov": [42, 181, 296, 300], "fig_noise_cov": 42, "plot_cov": [42, 178, 876, 886], "show_svd": [42, 64, 263, 779], "fig_base_cov": 42, "fig_data_cov": 42, "1680": 42, "_cov": 42, "_kw": 42, "7265": [42, 178, 180], "037795": [42, 178], "52065e": [42, 178, 180], "40775": 42, "63307e": 42, "stc_data": [42, 94, 673], "11847053": 42, "45687517": 42, "03282162": 42, "980": [42, 56, 81, 206, 210, 233], "mne_cov_pow": [42, 56], "pre": [43, 49, 135, 141, 142, 163, 167, 181, 202, 203, 206, 217, 223, 266, 267, 268, 269, 356, 481, 482, 562, 648, 651, 845, 846, 850, 857, 886], "spheric": [43, 71, 78, 152, 157, 171, 184, 185, 186, 201, 208, 211, 246, 263, 266, 267, 268, 269, 272, 275, 277, 278, 314, 330, 332, 362, 413, 420, 434, 481, 482, 526, 561, 562, 571, 572, 573, 576, 577, 583, 594, 655, 669, 672, 683, 687, 706, 708, 710, 754, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 868, 886], "surfer": [43, 156, 273, 277, 281, 369, 754, 812, 868], "fswiki": [43, 156, 273, 277, 281, 369, 812, 868], "surfaceregandtempl": 43, "depict": [43, 268, 269, 274, 280, 282, 794, 817, 868], "success": [43, 145, 258, 266, 267, 273, 274, 277, 278, 280, 281, 282, 362, 479, 538, 539, 592, 656, 693, 694, 696, 697, 708, 709, 721, 729, 744, 775, 845], "inflat": [43, 48, 49, 54, 55, 59, 60, 126, 136, 152, 176, 192, 246, 273, 277, 281, 412, 754, 770, 812, 851, 868, 886], "overlaid": [43, 44, 135, 137, 173, 258, 655, 868, 886], "tommi": [43, 44, 886], "clausner": [43, 44, 886], "sample_dir": [43, 44, 116, 159, 173, 176], "fname_src": [43, 136, 160, 183], "fname_fsaverage_src": 43, "fname_stc": [43, 127, 176, 182], "repres": [43, 70, 74, 81, 115, 119, 141, 142, 143, 144, 145, 150, 152, 157, 159, 162, 163, 167, 169, 170, 171, 176, 190, 196, 203, 206, 220, 246, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 279, 280, 281, 282, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 447, 456, 457, 476, 478, 479, 481, 482, 497, 503, 506, 515, 528, 540, 562, 577, 618, 620, 694, 706, 709, 754, 771, 794, 797, 799, 801, 812, 813, 817, 841, 845, 861, 865, 868, 871, 886], "itself": [43, 70, 144, 152, 161, 173, 189, 203, 206, 207, 208, 219, 228, 260, 266, 267, 272, 277, 280, 309, 446, 481, 482, 549, 754, 843, 845, 865, 868, 871], "proxim": [43, 136, 270, 701, 886], "src_orig": [43, 277, 280], "3732": [43, 176], "3766": 43, "src_to": [43, 44, 181, 362, 886], "argument": [43, 44, 120, 152, 156, 162, 163, 170, 171, 173, 181, 189, 190, 191, 192, 193, 202, 203, 204, 207, 211, 214, 217, 228, 232, 238, 242, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 321, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 418, 419, 423, 424, 426, 429, 430, 432, 434, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 464, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 555, 557, 558, 562, 564, 565, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 585, 587, 588, 589, 590, 591, 592, 594, 595, 597, 598, 601, 602, 603, 606, 607, 608, 609, 613, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 626, 628, 629, 630, 631, 632, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 651, 654, 655, 657, 658, 659, 660, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 688, 693, 694, 695, 696, 697, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 724, 725, 728, 729, 733, 734, 736, 737, 738, 739, 742, 743, 744, 749, 750, 751, 752, 753, 754, 755, 762, 769, 770, 774, 776, 779, 782, 785, 786, 787, 788, 789, 791, 794, 797, 798, 799, 804, 805, 806, 807, 808, 810, 811, 812, 813, 815, 817, 818, 819, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 861, 871, 874, 886], "special": [43, 161, 170, 207, 217, 243, 373, 489, 496, 849, 867, 868, 874, 886], "alwai": [43, 73, 144, 145, 150, 152, 161, 168, 169, 170, 176, 191, 200, 202, 203, 204, 205, 206, 207, 208, 209, 214, 217, 223, 228, 243, 264, 266, 267, 271, 273, 274, 276, 277, 279, 280, 281, 282, 320, 437, 447, 513, 562, 583, 624, 626, 693, 707, 762, 772, 782, 783, 813, 815, 824, 833, 841, 845, 868, 871, 872, 886], "10239": 43, "10240": 43, "10241": 43, "give": [43, 44, 59, 70, 74, 95, 143, 153, 162, 169, 172, 181, 183, 197, 201, 203, 204, 207, 228, 258, 263, 266, 267, 268, 269, 275, 279, 314, 413, 414, 415, 420, 424, 429, 430, 434, 449, 451, 452, 456, 478, 479, 481, 482, 497, 561, 562, 577, 583, 594, 612, 618, 692, 693, 694, 696, 697, 706, 708, 710, 718, 754, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 841, 843, 845, 851, 861, 865, 867, 868, 871, 886], "surfer_kwarg": [43, 176, 178], "brain_inf": 43, "under": [43, 44, 60, 127, 144, 145, 163, 190, 197, 200, 203, 207, 224, 228, 230, 236, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 284, 314, 326, 356, 357, 359, 361, 379, 380, 381, 382, 384, 385, 386, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 416, 423, 426, 429, 430, 456, 469, 471, 481, 482, 493, 501, 521, 524, 525, 535, 536, 545, 546, 567, 574, 575, 577, 602, 619, 623, 654, 657, 658, 659, 667, 671, 691, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 786, 789, 808, 845, 861, 867, 868, 874, 886], "h5": [43, 44, 173, 181, 225, 273, 274, 276, 277, 278, 280, 281, 282, 290, 561, 604, 706, 707, 709, 726, 728, 739, 828, 829, 886], "respect": [43, 44, 47, 55, 68, 71, 90, 132, 141, 145, 152, 157, 160, 169, 170, 173, 176, 189, 197, 201, 203, 206, 207, 209, 210, 217, 218, 233, 261, 263, 266, 267, 268, 269, 271, 275, 276, 277, 281, 282, 299, 300, 301, 337, 356, 360, 361, 367, 371, 372, 373, 413, 415, 420, 424, 437, 449, 451, 456, 457, 476, 478, 479, 481, 482, 487, 506, 515, 518, 526, 540, 561, 562, 563, 564, 566, 577, 579, 612, 620, 655, 663, 666, 668, 674, 694, 706, 708, 710, 725, 733, 734, 736, 737, 754, 770, 771, 775, 778, 784, 786, 788, 793, 794, 797, 798, 801, 806, 807, 809, 814, 816, 818, 845, 848, 851, 861, 865, 868, 871, 886], "my": [43, 44, 173, 183, 223], "read_source_morph": [43, 44, 278, 876], "further": [43, 142, 152, 158, 167, 169, 179, 189, 197, 202, 206, 208, 211, 217, 228, 233, 238, 243, 266, 267, 291, 293, 322, 367, 562, 566, 693, 694, 696, 697, 709, 769, 785, 857, 863, 867, 868, 886], "assign": [43, 45, 101, 103, 120, 137, 141, 144, 145, 152, 162, 169, 171, 176, 179, 189, 190, 193, 208, 211, 218, 223, 260, 266, 271, 276, 279, 471, 473, 489, 493, 496, 498, 504, 506, 515, 524, 562, 579, 580, 584, 585, 587, 588, 616, 650, 754, 776, 836, 861, 868, 871, 886], "chain": [43, 168, 197, 201, 217, 419, 863, 868], "handi": [43, 191, 206], "liner": 43, "shortest": [43, 157, 203, 266, 267, 268, 269, 415, 424, 449, 451, 452, 481, 482, 567], "dougla": [43, 246, 278, 362], "greve": [43, 246, 278, 362], "lise": [43, 246, 278, 362], "der": [43, 246, 278, 362, 868, 886], "haegen": [43, 246, 278, 362], "qing": [43, 246, 278, 362], "cai": [43, 246, 278, 362], "steven": [43, 58, 126, 145, 152, 203, 246, 277, 278, 362, 413, 540, 663, 668, 862, 886], "stufflebeam": [43, 58, 126, 246, 277, 278, 362, 540, 544, 663, 666, 668], "mert": [43, 246, 278, 362], "sabuncu": [43, 246, 278, 362], "bruce": [43, 94, 156, 246, 278, 362, 529, 868], "fischl": [43, 94, 156, 246, 278, 362, 529, 868], "marc": [43, 246, 278, 362], "brysbaert": [43, 246, 278, 362], "languag": [43, 152, 173, 203, 232, 238, 246, 263, 266, 267, 268, 269, 275, 276, 278, 362, 413, 420, 481, 482, 561, 562, 706, 708, 710, 786, 793, 797, 806, 809, 814, 849, 870, 886], "asymmetri": [43, 246, 278, 362], "1477": [43, 210, 246, 278, 362], "1492": [43, 246, 278, 362, 861], "1162": [43, 246, 278, 362, 562], "jocn_a_00405": [43, 246, 278, 362], "morph_surface_stc": [43, 56], "affin": [44, 135, 157, 181, 183, 278, 362, 369, 591, 630, 638, 742, 743, 744, 841, 868, 886], "nonlinear": [44, 246, 692], "symmetr": [44, 135, 203, 246, 266, 267, 268, 269, 273, 274, 277, 278, 280, 281, 282, 362, 448, 449, 451, 452, 481, 482, 591, 693, 694, 696, 697, 707, 718, 742, 743, 744, 754, 773, 812, 817, 818, 886], "diffeomorph": [44, 135, 246, 278, 362, 591, 742, 743, 744, 886], "sdr": [44, 135, 181, 278, 362, 591, 742, 743, 744, 886], "afterward": [44, 150, 266, 267, 268, 269, 481, 482, 651, 670, 886], "nibabel": [44, 79, 135, 157, 161, 172, 183, 279, 473, 474, 475, 589, 754, 844, 868, 886], "fetch_fsaverag": [44, 125, 135, 136, 160, 181, 191, 862, 876, 886], "plot_glass_brain": [44, 135, 183], "sample_dir_raw": [44, 176], "fname_t1_fsaverag": 44, "ensur": [44, 45, 83, 112, 145, 150, 160, 162, 163, 181, 203, 204, 207, 209, 211, 212, 225, 263, 266, 267, 268, 269, 271, 272, 273, 274, 277, 280, 281, 282, 322, 343, 356, 447, 448, 481, 482, 483, 554, 565, 594, 595, 706, 707, 708, 709, 710, 723, 749, 843, 845, 867, 868, 886], "fname_src_fsaverag": 44, "root": [44, 82, 135, 136, 137, 150, 151, 152, 160, 173, 181, 191, 225, 263, 268, 269, 273, 274, 277, 280, 281, 282, 299, 300, 382, 388, 405, 779, 788, 845, 868, 886], "txt": [44, 135, 136, 160, 181, 184, 218, 219, 260, 332, 341, 388, 484, 488, 506, 612, 620, 621, 831, 843, 845, 865, 886], "zoom": [44, 70, 135, 152, 161, 181, 206, 208, 278, 362, 744, 886], "reslic": [44, 135, 181, 362, 744], "isotrop": [44, 868], "niter_affin": [44, 181, 278, 362, 886], "niter_sdr": [44, 181, 278, 362, 886], "999999888241291": 44, "translat": [44, 135, 136, 157, 161, 181, 190, 211, 236, 258, 266, 267, 268, 269, 352, 367, 413, 420, 434, 492, 562, 566, 594, 706, 744, 754, 770, 785, 790, 793, 798, 801, 871, 886], "optim": [44, 59, 82, 135, 143, 158, 161, 163, 180, 181, 202, 203, 206, 211, 228, 236, 237, 238, 246, 268, 269, 272, 356, 413, 456, 478, 481, 482, 562, 572, 594, 683, 735, 738, 744, 841, 865, 886], "r\u00b2": [44, 135, 181], "rigid": [44, 135, 181, 213, 744], "compute_vol_morph_mat": [44, 278, 362, 886], "equival": [44, 136, 142, 151, 157, 159, 161, 163, 166, 172, 187, 188, 190, 203, 206, 209, 224, 228, 241, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 280, 281, 282, 299, 300, 314, 355, 413, 419, 420, 453, 456, 457, 476, 478, 479, 481, 482, 524, 529, 540, 561, 562, 565, 567, 577, 583, 624, 653, 670, 693, 706, 708, 710, 722, 732, 736, 737, 744, 754, 770, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 812, 814, 816, 817, 841, 845, 861, 865, 868, 871, 872, 886], "reus": [44, 74, 138, 268, 269, 706, 790, 868], "exce": [44, 228, 261, 266, 267, 268, 269, 343, 345, 413, 420, 481, 482, 564, 567, 579, 693, 793, 807, 886], "thousand": [44, 101, 207, 229, 246, 362, 396, 862, 886], "nifti1": [44, 278, 281, 282], "img_fsaverag": 44, "t1_fsaverag": 44, "plot_anat": [44, 177], "draw_cross": 44, "overlai": [44, 156, 161, 173, 181, 206, 273, 274, 277, 280, 281, 282, 562, 754, 798, 812, 817, 886], "add_overlai": [44, 754], "brian": [44, 196, 246, 278, 362, 419, 868], "avant": [44, 246, 278, 362], "epstein": [44, 246, 278, 362], "murrai": [44, 152, 246, 278, 362], "grossman": [44, 246, 278, 362], "jame": [44, 203, 246, 278, 362], "gee": [44, 246, 278, 362], "autom": [44, 83, 113, 121, 135, 145, 157, 163, 164, 165, 166, 167, 200, 201, 202, 205, 206, 211, 246, 258, 268, 269, 271, 278, 356, 362, 367, 391, 486, 645, 770, 794, 822, 853, 865, 868, 874, 886], "elderli": [44, 246, 278, 362], "neurodegen": [44, 246, 278, 362], "medic": [44, 59, 207, 208, 246, 257, 278, 362, 478, 479, 529, 868, 873], "media": [44, 246, 278, 362], "2007": [44, 181, 233, 246, 278, 362, 476, 562, 693, 694, 696, 697, 735, 738], "morph_volume_stc": [44, 56], "megin": [45, 157, 594, 886], "program": [45, 152, 162, 173, 258, 264, 266, 267, 268, 269, 271, 276, 309, 472, 473, 481, 482, 562, 708, 710, 782, 784, 801, 807, 810, 845, 849, 850, 851, 852, 868, 870, 871], "offer": [45, 182, 197, 203, 209, 225, 228, 229, 259, 260, 754, 843, 845, 872, 874, 886], "guid": [45, 156, 271, 843, 849, 864, 867, 869, 886], "ecd": [45, 166, 187, 188, 264, 265, 268, 269, 270, 271, 281, 355, 456, 524, 624, 670, 841, 886], "manual": [45, 83, 120, 127, 135, 138, 143, 150, 152, 157, 158, 161, 162, 163, 173, 183, 189, 191, 193, 200, 201, 202, 204, 207, 211, 246, 259, 262, 271, 272, 320, 330, 356, 377, 434, 448, 562, 572, 573, 583, 594, 595, 647, 777, 851, 862, 865, 868, 871, 886], "advantag": [45, 113, 138, 151, 152, 168, 169, 203, 205, 206, 209, 213, 228, 243, 843, 853], "graphic": [45, 135, 156, 190, 266, 267, 276, 473, 481, 482, 562, 784, 801, 807, 845, 849, 851, 852, 862, 886], "read_dipol": [45, 116, 264, 265, 456, 876, 886], "everyth": [45, 104, 112, 127, 135, 136, 160, 161, 170, 179, 183, 192, 203, 217, 268, 269, 792, 843, 845, 847, 862, 863, 865], "read_vectorview_select": [45, 225, 230, 876, 886], "audvi": [45, 862], "evoked_left": [45, 212], "evoked_right": [45, 212], "09989760657919393": [45, 61], "80m": 45, "picks_left": 45, "evoked_fit_left": 45, "cov_fit_left": 45, "picks_right": 45, "evoked_fit_right": 45, "cov_fit_right": 45, "sss": [45, 163, 166, 200, 210, 215, 216, 266, 267, 268, 269, 271, 343, 345, 349, 350, 353, 373, 434, 481, 482, 502, 562, 573, 583, 594, 624, 784, 788, 796, 807, 865, 868, 886], "normalize_proj": [45, 271, 886], "dip_left": 45, "dip_right": 45, "153": [45, 170, 228, 232, 405], "38720": [45, 183], "58607874e": 45, "29495097e": 45, "04486582e": 45, "78988420e": 45, "81501987e": 45, "79536167e": 45, "22800262e": 45, "50545865e": 45, "24472969e": 45, "41763741e": 45, "51116585e": 45, "49899073e": 45, "11191910e": 45, "30776654e": 45, "58725785e": 45, "82015291e": 45, "83338121e": 45, "85132759e": 45, "76790821e": 45, "26581206e": 45, "61643686e": 45, "900": [45, 81, 177, 182], "354": [45, 81, 170, 177, 182, 228, 233], "195": [45, 158, 165, 167, 170, 177, 182, 197, 233, 246], "9828": [45, 886], "152": [45, 55, 56, 123, 170, 191, 197, 232, 233, 242, 279], "69262885e": 45, "19272571e": 45, "91546253e": 45, "01298483e": 45, "64516797e": 45, "19806525e": 45, "33734643e": 45, "87121666e": 45, "27849772e": 45, "17670368e": 45, "61094719e": 45, "47048282e": 45, "57358697e": 45, "03235995e": 45, "14274862e": 45, "19294391e": 45, "09342253e": 45, "00283865e": 45, "12915739e": 45, "54166863e": 45, "75855684e": 45, "149": [45, 170, 182, 232, 233, 279], "9340": [45, 886], "prevent": [45, 70, 120, 201, 211, 258, 515, 567, 589, 594, 671, 886], "lambda": [45, 67, 100, 112, 146, 197, 212, 224, 243, 263, 266, 267, 268, 269, 275, 316, 413, 420, 481, 482, 537, 561, 562, 577, 672, 706, 708, 710, 771, 778, 785, 793, 797, 806, 809, 814, 868, 871], "fulli": [45, 74, 173, 202, 204, 228, 232, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 322, 481, 482, 483, 687, 754, 773, 812, 817, 818, 843, 886], "make_forward_dipol": [45, 177, 876, 886], "stc_left": 45, "stc_right": 45, "sharei": [45, 73, 113, 114, 196, 208, 243], "supylabel": 45, "meter": [45, 81, 93, 94, 152, 157, 158, 161, 171, 177, 183, 193, 208, 223, 258, 263, 264, 266, 267, 268, 269, 271, 272, 275, 284, 314, 330, 339, 367, 413, 420, 434, 481, 482, 497, 506, 521, 561, 562, 566, 571, 572, 573, 577, 583, 594, 599, 600, 618, 628, 655, 701, 706, 708, 710, 754, 771, 778, 782, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 868, 886], "kb": [45, 50, 138, 144, 177, 182, 209, 223], "161": [45, 170, 206, 228, 232, 233, 236, 240], "7006": 45, "97034e": 45, "stcs_left": 45, "stcs_right": 45, "90m": 45, "amplitudes_left": 45, "amplitudes_right": 45, "vstack": [45, 115, 137, 142, 185, 225], "ampltud": 45, "n_left": 45, "mean_left": 45, "mean_right": 45, "transition_point": 45, "c0": [45, 152, 207], "c1": [45, 70, 112, 152, 207], "text": [45, 68, 127, 135, 136, 143, 152, 161, 178, 184, 189, 190, 192, 193, 203, 204, 207, 208, 218, 219, 228, 243, 258, 266, 267, 279, 334, 481, 482, 506, 621, 671, 754, 831, 845, 849, 861, 868, 886], "610": [45, 56, 81, 177, 188, 210, 233], "multi_dipole_model": [45, 56], "promot": [46, 59], "focal": [46, 59, 83, 181, 562, 754, 822, 886], "assum": [46, 59, 63, 93, 94, 115, 123, 136, 142, 145, 152, 159, 161, 166, 173, 183, 189, 190, 193, 202, 203, 206, 213, 219, 228, 230, 232, 243, 258, 260, 263, 264, 266, 267, 268, 269, 272, 275, 279, 299, 300, 305, 306, 309, 314, 327, 339, 356, 360, 361, 367, 371, 372, 373, 375, 413, 420, 432, 440, 448, 454, 455, 456, 457, 463, 476, 478, 479, 481, 482, 488, 489, 496, 511, 521, 525, 532, 540, 561, 562, 576, 577, 614, 621, 640, 643, 645, 655, 671, 693, 694, 696, 697, 700, 701, 706, 708, 709, 710, 742, 754, 770, 771, 778, 786, 788, 790, 793, 794, 795, 796, 797, 804, 806, 808, 809, 810, 814, 816, 834, 841, 845, 850, 853, 868, 871, 872, 886], "stationar": [46, 59, 452, 481, 482], "properti": [46, 59, 74, 101, 114, 127, 144, 162, 173, 190, 196, 201, 206, 207, 217, 220, 259, 260, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 276, 277, 280, 281, 282, 304, 367, 412, 481, 482, 548, 562, 579, 580, 595, 656, 671, 688, 706, 707, 708, 709, 710, 741, 754, 756, 773, 782, 784, 788, 794, 795, 797, 799, 807, 812, 817, 818, 822, 872, 886], "bias": [46, 70, 152, 167, 181, 201, 203, 208, 232, 246, 457, 886], "short": [46, 59, 65, 82, 103, 112, 114, 127, 137, 138, 141, 161, 169, 173, 200, 203, 207, 208, 210, 212, 219, 229, 241, 243, 246, 266, 267, 268, 269, 481, 482, 498, 599, 602, 708, 710, 711, 714, 721, 722, 725, 729, 732, 841, 845, 862, 868, 869, 886], "transient": [46, 82, 200, 211, 243, 567], "mathurin": [46, 246, 886], "massia": [46, 246, 886], "yousra": [46, 51, 93, 126, 246, 478, 479, 886], "bekhti": [46, 51, 93, 126, 246, 478, 479, 886], "tf_mixed_norm": [46, 59, 478, 876, 886], "350e": [46, 113, 242], "49948803289596966": 46, "301": [46, 112, 114, 170, 192, 197, 210, 228, 233, 241, 871], "16610": 46, "multidict": 46, "l1_ratio": [46, 59, 479, 886], "wsize": [46, 59, 479, 721, 729, 730], "n_tfmxne_it": [46, 479], "dgap": [46, 59], "89e": 46, "p_obj": [46, 59], "000835": 46, "d_obj": [46, 59], "190": [46, 59, 75, 81, 116, 170, 185, 197, 210, 232, 233, 246, 693, 694, 696, 697], "083203": 46, "n_activ": [46, 59, 211, 350], "247": [46, 112, 170, 197, 210, 213, 237, 240, 246, 862], "27e": 46, "253": [46, 112, 170, 177, 188, 233, 246], "327890": 46, "582652": 46, "53e": 46, "707285": 46, "246": [46, 112, 135, 170, 181, 228, 232, 246], "182101": 46, "18e": 46, "589468": 46, "408712": 46, "82e": 46, "243688": 46, "248": [46, 73, 85, 112, 123, 170, 210, 212, 228, 232, 233], "420556": 46, "67e": [46, 59], "094971": 46, "57e": 46, "991067": 46, "49e": [46, 59], "936498": 46, "442467": 46, "08e": 46, "906871": 46, "829870": 46, "70e": 46, "887205": 46, "017223": 46, "24e": 46, "872107": 46, "148583": 46, "11e": 46, "762424": 46, "94e": 46, "854012": 46, "259629": 46, "867870": 46, "46e": 46, "043596": 46, "270": [46, 81, 112, 170, 192, 228, 233, 886], "587841": 46, "87e": 46, "274": [46, 81, 82, 112, 123, 167, 170, 192, 197, 210, 228, 233], "722230": 46, "856399": 46, "29e": 46, "678013": 46, "849283": 46, "335": [46, 109, 170, 228, 233, 246, 868], "966495": 46, "73e": 46, "239": [46, 68, 81, 82, 159, 170, 192, 204, 232, 233], "215341": 46, "236": [46, 112, 170, 173, 175, 184, 188, 232, 233], "481796": 46, "17e": 46, "095509": 46, "238": [46, 112, 170, 210, 228, 229, 233], "178504": 46, "77e": 46, "068507": 46, "591286": 46, "546285": 46, "06e": 46, "223": [46, 170, 210, 228, 233], "133013": 46, "826666": 46, "295": [46, 112, 170, 228, 233], "194637": 46, "debias": [46, 59], "551": [46, 106, 107, 114], "d0": [46, 59], "235933e": 46, "000000e": [46, 59], "irtf": 46, "2015": [46, 71, 99, 101, 113, 121, 163, 203, 206, 229, 243, 246, 268, 269, 356, 391, 396, 571, 692, 735, 738, 794, 862, 865, 874], "intern": [46, 70, 71, 83, 127, 133, 137, 161, 169, 171, 184, 191, 193, 201, 208, 211, 214, 230, 246, 266, 267, 268, 269, 314, 356, 361, 367, 392, 413, 434, 481, 482, 496, 502, 559, 562, 570, 571, 572, 573, 583, 594, 624, 692, 693, 706, 707, 708, 709, 710, 754, 800, 845, 886], "workshop": [46, 246, 413], "roland": [46, 246, 479], "badeau": [46, 246, 479], "trento": [46, 246, 479], "7552337": [46, 246, 479], "874": [46, 56, 91, 92, 233], "multidict_reweighted_tfmxn": [46, 56], "plane": [47, 135, 157, 171, 207, 230, 233, 242, 433, 659, 734, 737, 772, 841, 868], "olaf": [47, 48, 49, 50, 54, 55, 101, 246, 544, 663, 668, 886], "hauk": [47, 48, 49, 50, 54, 55, 101, 246, 544, 663, 668, 886], "mrc": [47, 48, 49, 50, 54, 55, 868], "cbu": [47, 48, 49, 50, 54, 55, 868], "cam": [47, 48, 49, 50, 54, 55, 868], "ac": [47, 48, 49, 50, 54, 55, 135, 191, 200, 204, 246, 356, 373, 841, 868], "uk": [47, 48, 49, 50, 54, 55, 246, 356, 868], "rougier": 47, "borrow": [47, 232, 238], "hi": [47, 258], "make_inverse_resolution_matrix": [47, 48, 50, 54, 55, 876, 886], "get_point_spread": [47, 48, 50, 876, 886], "circular_layout": [47, 876], "plot_connectivity_circl": [47, 776], "rm_mne": [47, 54], "n_label": [47, 224, 273, 274, 277, 280, 281, 282, 447, 517, 673], "label_color": [47, 466], "lh_label": [47, 754], "endswith": [47, 171], "label_ypo": 47, "ypo": 47, "yp": 47, "rh_label": [47, 754], "summaris": [47, 213], "five": [47, 143, 151, 172, 184, 210, 220, 246, 343, 481, 482, 562, 754, 799, 868], "princip": [47, 206, 207, 246, 272, 356, 562, 683, 868, 886], "probabl": [47, 70, 166, 189, 200, 201, 202, 203, 206, 207, 228, 230, 233, 243, 417, 423, 442, 481, 482, 493, 754, 811, 843, 845, 850, 851, 852, 868], "n_comp": [47, 538, 539], "stcs_psf_mne": 47, "pca_vars_mn": 47, "return_pca_var": [47, 538, 539], "n_vert": 47, "printopt": 47, "caudalanteriorcingul": 47, "caudalmiddlefront": [47, 90, 95, 136], "cuneu": [47, 754], "entorhin": 47, "frontalpol": 47, "fusiform": 47, "inferiorpariet": [47, 224], "inferiortempor": 47, "insula": 47, "isthmuscingul": 47, "lateraloccipit": 47, "lateralorbitofront": 47, "lingual": 47, "medialorbitofront": 47, "middletempor": 47, "paracentr": 47, "parahippocamp": [47, 68], "parsoperculari": 47, "parsorbitali": 47, "parstriangulari": 47, "pericalcarin": 47, "postcentr": [47, 68], "posteriorcingul": 47, "precentr": [47, 136], "precuneu": 47, "rostralanteriorcingul": 47, "rostralmiddlefront": [47, 224], "superiorfront": [47, 136], "superiorpariet": 47, "superiortempor": 47, "supramargin": 47, "temporalpol": 47, "transversetempor": [47, 224], "overal": [47, 127, 208, 230, 236, 237, 479, 867, 886], "bigger": [47, 81, 127, 237, 481, 482], "leaker": 47, "psfs_mat": 47, "pearson": [47, 203, 206, 246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 562, 706, 709], "arbitrari": [47, 115, 161, 166, 167, 168, 172, 193, 203, 214, 223, 226, 230, 233, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 277, 280, 281, 282, 413, 420, 481, 482, 498, 562, 580, 585, 693, 694, 696, 697, 706, 708, 709, 710, 786, 793, 800, 806, 814, 867, 868, 886], "absolut": [47, 60, 82, 86, 123, 129, 136, 152, 180, 190, 228, 261, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 360, 413, 481, 482, 484, 538, 539, 544, 562, 579, 606, 655, 667, 699, 706, 709, 772, 778, 798, 818, 841, 845, 851, 886], "leakage_mn": 47, "node_ord": [47, 759], "mirror": [47, 67, 70, 171, 266, 267, 268, 269, 273, 277, 281, 282, 451, 452, 453, 481, 482, 769, 773, 812, 818, 874, 886], "node_angl": [47, 759], "start_po": [47, 759], "group_boundari": [47, 759], "subplot_kw": 47, "n_line": 47, "node_color": 47, "neighbour": [47, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 786, 793, 797, 806, 809, 814, 816, 886], "deeper": [47, 54, 55, 181, 868], "versu": [47, 142, 152, 167, 218, 225, 301, 853], "fname_fig": 47, "plot_label_leakag": 47, "savefig": [47, 115], "inde": [47, 70, 142, 169, 176, 207, 208, 243, 843], "max_val": 47, "brain_lh": 47, "caudal": [47, 90, 95, 754], "pos_lim": [47, 54, 55, 181, 224, 236, 273, 274, 277, 280, 281, 282, 773, 812, 817, 818], "brain_rh": 47, "641": [47, 233], "psf_ctf_label_leakag": [47, 56], "get_cross_talk": [48, 49, 876, 886], "fname_evo": [48, 49, 50, 54, 55, 64], "regularis": [48, 54, 55, 541], "rm_lor": 48, "stc_psf": 48, "stc_ctf": 48, "31738": [48, 54, 55], "68644e": [48, 54, 55], "vertno_lh": 48, "verttru": [48, 49], "maxima": [48, 146, 268, 269, 603, 791, 793, 886], "vert_max_psf": 48, "vert_max_ctf": 48, "brain_psf": 48, "ventral": [48, 754], "add_foci": [48, 49, 50, 161, 176, 178, 225, 754, 886], "coords_as_vert": [48, 49, 50, 176, 178, 225, 754], "22842778": 48, "2956258": 48, "85246681": 48, "brain_ctf": 48, "10932369": 48, "16149934": 48, "93351158": 48, "863": [48, 56, 210, 233], "psf_ctf_vertic": [48, 56], "make_lcmv_resolution_matrix": [49, 876, 886], "vi": [49, 151, 233, 266, 778], "cov_pr": 49, "post": [49, 120, 135, 181, 203, 208, 211, 841, 845, 851, 852, 864, 865, 867], "cov_post": 49, "4433": 49, "filters_pr": 49, "weight_norm": [49, 181, 225, 299, 300, 886], "filters_post": 49, "rm_pre": 49, "stc_pre": 49, "rm_post": 49, "stc_post": 49, "brain_pr": 49, "ndata": 49, "brain_post": 49, "648": [49, 56, 150, 233], "psf_ctf_vertices_lcmv": [49, 56], "coars": 50, "don": [50, 95, 115, 117, 120, 135, 142, 145, 146, 147, 158, 159, 160, 163, 169, 172, 201, 204, 206, 207, 208, 217, 230, 231, 232, 233, 238, 243, 258, 261, 266, 267, 374, 492, 493, 551, 595, 611, 618, 620, 655, 693, 696, 845, 846, 851, 853, 865, 867, 869, 886], "src_vol": 50, "forward_vol": 50, "3375": 50, "1045": 50, "895": [50, 233], "015000": [50, 209], "860": [50, 81, 210, 233], "304": [50, 109, 112, 124, 151, 170, 172, 185, 228, 229, 886], "158": [50, 170, 197, 228, 233], "488": [50, 168, 228, 233], "251": [50, 112, 170, 197, 213, 228, 233, 481, 482], "inverse_operator_vol": 50, "rm_lor_vol": 50, "sources_vol": 50, "stc_psf_vol": 50, "383": [50, 81, 233], "140193": 50, "7904e": 50, "66519": 50, "31885e": 50, "1209": 50, "verttrue_vol": 50, "max_vert_idx": 50, "unravel_index": [50, 182, 230], "vert_max_ctf_vol": 50, "brain_psf_vol": 50, "plot_3d": [50, 136, 181, 281, 282, 886], "volume_opt": [50, 273, 274, 277, 280, 281, 282, 754, 812, 817], "32501698": 50, "38884743": 50, "87974682": 50, "484": [50, 56, 141, 144, 149, 205, 210, 233, 246, 561, 609], "psf_volum": [50, 56], "recurs": [51, 161, 203, 246, 258, 273, 277, 281, 302, 654, 812], "rap_mus": [51, 56, 456, 876, 886], "n100": [51, 167, 192, 203, 208], "1834": 51, "ori": [51, 177, 181, 184, 186, 225, 264, 299, 300, 433, 456], "2470324143277338": 51, "7764326014559829": 51, "5797649538112025": 51, "5304": 51, "5154591814700811": 51, "5345116895021849": 51, "6697753996853825": 51, "332": [51, 109, 170, 192, 210, 228, 246, 302], "1999": [51, 112, 243, 246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 302, 356, 481, 482, 562, 592, 706, 709, 868], "740118": [51, 246, 302], "inv_fnam": 52, "fmri": [52, 197, 246, 478, 479, 529, 841, 862, 868, 871], "fmri_prior": 52, "rr": [52, 161, 162, 176, 179, 279, 344, 346, 347, 348, 637, 640, 655, 675, 834, 871], "use_tri": [52, 161, 279, 871], "8192": [52, 183, 186, 412], "995": [52, 56, 193, 195, 223], "read_invers": [52, 56], "nb": [53, 481, 482], "692": [53, 56, 109, 145, 233, 243], "read_stc": [53, 56], "localis": [54, 55, 186, 228, 229, 246, 544, 693, 694, 696, 697], "mimic": [54, 55, 414, 437, 529], "resolution_metr": [54, 55, 56, 876, 886], "ple": [54, 55, 544], "sd": [54, 55, 135, 243, 668, 708, 710], "ple_mne_psf": 54, "peak_err": [54, 55, 544], "sd_mne_psf": 54, "sd_ext": [54, 55, 544], "rm_dspm": 54, "ple_dspm_psf": 54, "sd_dspm_psf": 54, "brain_ple_mn": 54, "brain_ple_dspm": 54, "subtract": [54, 55, 65, 70, 73, 107, 113, 120, 134, 142, 152, 177, 203, 209, 211, 228, 230, 258, 261, 262, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 289, 299, 300, 355, 356, 360, 361, 371, 372, 373, 413, 420, 421, 456, 457, 476, 478, 479, 481, 482, 483, 540, 545, 546, 562, 563, 579, 594, 624, 625, 648, 651, 693, 696, 706, 709, 794, 814, 841, 868, 871, 886], "diff_pl": [54, 55], "brain_ple_diff": [54, 55], "superfici": [54, 181, 868], "brain_sd_mn": 54, "brain_sd_dspm": 54, "diff_sd": [54, 55], "brain_sd_diff": [54, 55], "wors": [54, 172, 594, 861], "distinguish": [54, 72, 152, 173, 197, 200, 201, 202, 205, 206, 208, 217, 363, 841, 886], "stenroo": [54, 55, 246, 544, 663, 668], "matthia": [54, 55, 246, 544, 886], "treder": [54, 55, 246, 544], "kit": [54, 55, 171, 172, 185, 228, 246, 271, 340, 348, 434, 506, 525, 544, 573, 583, 594, 620, 868, 876, 877, 886], "biorxiv": [54, 55, 225, 246, 299, 300, 544], "2019": [54, 55, 65, 75, 142, 209, 212, 228, 233, 246, 544, 578, 601, 693, 694, 696, 697, 720, 722, 732, 735, 736, 738, 844, 851], "1101": [54, 55, 114, 225, 246, 299, 300, 544], "672956": [54, 55, 246, 544], "268": [54, 56, 112, 170, 186, 192, 233], "resolution_matrix": 55, "spatial_resolut": 55, "fname_fwd_emeg": 55, "forward_emeg": 55, "forward_meg": 55, "pick_types_forward": [55, 68, 92, 286, 287, 876], "inv_emeg": 55, "inv_meg": 55, "63485": 55, "05542e": 55, "rm_emeg": 55, "ple_psf_emeg": 55, "sd_psf_emeg": 55, "rm_meg": 55, "ple_psf_meg": 55, "sd_psf_meg": 55, "brain_ple_emeg": 55, "emeg": [55, 874], "brain_ple_meg": 55, "bring": [55, 70, 157, 182, 206, 219, 271, 281, 282, 434, 573, 583, 594, 818, 868, 871], "brain_sd_emeg": 55, "brain_sd_meg": 55, "resolution_metrics_eegmeg": [55, 56], "auto_examples_invers": 56, "1407": 56, "vector_mne_solut": [56, 60], "797": [56, 145, 233], "263": [56, 81, 82, 112, 170, 192, 210, 211, 233], "109": [56, 129, 138, 170, 206, 210, 228, 233, 382, 862], "327": [56, 170, 197, 210, 228, 233], "time_frequency_mixed_norm_invers": [56, 59], "035": [56, 59, 141, 150, 170, 225], "640": [56, 81, 184, 197, 210, 223, 233], "source_space_snr": [56, 58], "snr_estim": [56, 57], "plot_snr_estim": [57, 876, 886], "padma": [58, 246, 578, 886], "sundaram": [58, 246, 578, 886], "tottochan": 58, "kaisu": [58, 886], "lankinen": [58, 886], "klankinen": 58, "inv_op": [58, 224], "snr_stc": [58, 277], "estimate_snr": [58, 277, 876, 886], "maxidx": 58, "med": [58, 94, 137, 167, 197, 224], "viridi": [58, 101, 127, 137, 144, 228, 707, 796], "70263": [58, 179], "18949e": [58, 179], "evoked_eeg": [58, 150, 208], "inv_op_eeg": 58, "stc_eeg": 58, "snr_stc_eeg": 58, "118742": [58, 90], "155292": [58, 90], "81981": 58, "0644e": 58, "goldenholz": [58, 246, 277], "seppo": [58, 246, 277, 540, 663, 668], "ahlfor": [58, 246, 277, 434, 540, 663, 668], "dahlia": [58, 246, 277], "sharon": [58, 246, 277], "mamiko": [58, 246, 277], "ishitobi": [58, 246, 277], "lucia": [58, 126, 246, 277], "vaina": [58, 126, 246, 277], "magnetoencephalographi": [58, 158, 179, 246, 277, 666, 735, 738, 868], "1086": [58, 197, 210, 246, 277], "1002": [58, 84, 179, 210, 241, 246, 266, 267, 268, 269, 277, 481, 482, 602, 659, 695, 708, 710, 718, 724, 861], "hbm": [58, 179, 246, 277, 695, 861], "20571": [58, 246, 277], "built": [59, 141, 151, 152, 158, 160, 166, 167, 168, 176, 182, 204, 206, 212, 217, 221, 222, 228, 264, 266, 267, 268, 269, 271, 306, 330, 331, 340, 368, 442, 464, 465, 473, 481, 482, 502, 521, 525, 590, 641, 674, 701, 710, 743, 754, 770, 845, 851, 857, 865, 866, 886], "fourier": [59, 103, 203, 241, 243, 246, 266, 267, 268, 269, 481, 482, 708, 710, 711, 714, 718, 721, 722, 724, 725, 729, 732, 733, 734, 736, 737], "stft": [59, 479, 721, 730, 841, 876, 886], "henc": [59, 114, 143, 151, 157, 163, 176, 191, 205, 208, 217, 228, 241, 243, 264, 265, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 481, 482, 706, 709, 767, 841, 852, 865], "trap": 59, "minima": [59, 603], "pick_channels_evok": 59, "slightli": [59, 70, 127, 161, 181, 185, 203, 208, 211, 212, 223, 232, 266, 267, 268, 269, 272, 361, 481, 482, 532, 540, 683, 754, 791, 861, 862, 868, 886], "eventu": [59, 137, 320, 331, 581, 845, 861], "020865": [59, 94, 179, 225], "96729": 59, "38524e": 59, "985": 59, "descent": [59, 246, 478, 886], "4411": 59, "845726": 59, "4408": [59, 185, 192], "353441": 59, "4410": 59, "859492": 59, "292946": 59, "51e": 59, "670058": 59, "519426": 59, "61e": 59, "669663": 59, "668049": 59, "546629e": 59, "049948803289596964": [59, 95, 180, 182], "2996928197375818": [59, 141, 150, 152, 230], "10e": [59, 68, 90, 95], "15e": 59, "20e": [59, 266, 267, 276, 481, 482, 784, 807], "medial": [59, 238, 693, 694, 754], "yellow": [59, 208, 268, 269, 769, 788, 805], "scalar_thresh": [59, 754], "stationari": [59, 80, 206, 208, 213, 246, 349, 479, 861], "422": [59, 65, 66, 228, 233, 246, 479], "051": [59, 141, 143, 150, 170, 201, 225, 227, 246, 479], "sparsiti": [59, 246, 479, 666], "g\u00e1bor": [59, 246, 479], "sz\u00e9keli": [59, 246, 479], "horst": [59, 246, 479], "hahn": [59, 246, 479], "editor": [59, 192, 246, 334, 476, 479, 562, 735, 738, 845, 849, 863], "6801": [59, 246, 479], "page": [59, 135, 173, 203, 220, 246, 266, 267, 331, 390, 479, 481, 482, 562, 722, 732, 733, 735, 736, 738, 754, 784, 807, 843, 845, 846, 849, 851, 852, 857, 860, 861, 864, 865, 866, 867, 868, 869, 886], "611": [59, 246, 356, 479], "springer": [59, 225, 246, 299, 300, 390, 479, 562], "berlin": [59, 225, 246, 299, 300, 479], "heidelberg": [59, 225, 246, 299, 300, 479], "978": [59, 113, 129, 130, 152, 203, 206, 225, 233, 246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 299, 300, 356, 479, 481, 482, 562, 688, 706, 709], "22092": [59, 246, 479], "0_49": [59, 246, 479], "magnitud": [60, 63, 70, 112, 113, 136, 143, 146, 150, 151, 167, 169, 179, 181, 200, 201, 203, 218, 225, 236, 237, 274, 280, 282, 356, 413, 434, 457, 537, 567, 573, 583, 594, 603, 698, 795, 817, 843, 865, 886], "accomplish": [60, 135, 136, 150, 162, 172, 843, 851, 861, 862, 868], "plot_vector_source_estim": [60, 819, 876, 886], "hood": [60, 127, 144, 190, 200, 203, 207, 886], "plot_source_estim": [60, 754, 819, 876, 886], "instruct": [60, 116, 162, 190, 212, 472, 843, 844, 845, 846, 847, 849, 850, 851, 852, 856, 859, 865, 871, 886], "impos": [60, 196, 202, 886], "underli": [60, 161, 167, 203, 207, 228, 229, 241, 246, 260, 264, 265, 266, 267, 268, 269, 272, 273, 274, 277, 280, 281, 282, 413, 481, 482, 487, 585, 706, 709, 744, 886], "getter": [60, 178, 886], "peak_tim": [60, 176], "get_peak": [60, 127, 150, 152, 176, 178, 179, 181, 268, 269, 273, 274, 277, 280, 281, 282, 886], "time_dil": [60, 136, 137, 178, 182, 754], "framer": [60, 136, 137, 178, 182, 754], "95048065": 60, "56941314": 60, "72451438": 60, "stc_max": 60, "cosin": [60, 90, 203, 223, 661, 868], "source_nn": [60, 270, 299, 300, 871], "brain_max": 60, "975978731472672": 60, "90575168": 60, "52414196": 60, "71336747": 60, "brain_norm": 60, "83607509": 60, "44726242": 60, "57923594": 60, "lot": [60, 70, 127, 153, 159, 161, 167, 170, 201, 203, 205, 206, 207, 212, 217, 219, 361, 367, 432, 463, 614, 643, 645, 834, 845], "fname_inv_fix": 60, "inv_fix": 60, "stc_fix": 60, "brain_fix": [60, 179], "00351751": 60, "62842071": 60, "43519503": 60, "178": [60, 74, 126, 170, 184, 185, 186, 197, 202, 233, 246, 390], "pars": [61, 141, 152, 166, 172, 174, 175, 191, 202, 218, 259, 260, 266, 271, 285, 442, 454, 461, 481, 489, 496, 497, 504, 523, 552, 621, 841, 886], "elekta": [61, 84, 157, 166, 187, 188, 211, 259, 263, 264, 266, 267, 268, 269, 271, 276, 304, 356, 433, 454, 456, 481, 482, 526, 770, 782, 784, 794, 807, 822, 857, 862, 868, 871, 886], "triux": [61, 184, 259, 266, 267, 268, 269, 392, 481, 482, 559, 706, 708, 709, 710, 862, 868], "dacq": [61, 259, 862], "acquisit": [61, 157, 161, 169, 189, 190, 191, 192, 208, 217, 246, 259, 260, 266, 267, 268, 269, 271, 285, 454, 481, 482, 483, 583, 594, 608, 671, 841, 857, 861, 868, 871, 886], "accordingli": [61, 135, 151, 159, 179, 190, 217, 261, 266, 267, 268, 269, 472, 481, 482, 489, 496, 502, 595, 868, 886], "multimod": [61, 138, 246, 872, 876, 886], "multimodal_raw": 61, "grad_ssp_upright": 61, "mag_ssp_upright": 61, "v4": [61, 210, 211], "v5": [61, 210, 211], "183600": 61, "576599": 61, "960": [61, 81, 101, 144, 229, 862], "categori": [61, 112, 146, 259, 337, 625, 751, 868, 869, 886], "acqpars": [61, 259, 481, 886], "acqparserfif": [61, 271, 481, 876, 886], "get_condit": [61, 259], "plot_topo": [61, 151, 153, 167, 220, 241, 242, 266, 267, 268, 269, 323, 481, 482, 706, 708, 710, 886], "background_color": [61, 132, 268, 269, 792, 886], "cat": [61, 112], "flat": [61, 83, 111, 136, 141, 142, 151, 182, 201, 202, 203, 207, 208, 209, 211, 259, 261, 266, 267, 273, 277, 281, 359, 361, 562, 564, 574, 575, 579, 580, 583, 692, 754, 812, 841, 861, 886], "fiff": [61, 115, 157, 161, 266, 267, 270, 276, 279, 481, 482, 485, 498, 513, 514, 562, 574, 575, 740, 762, 862, 886], "fname_out": [61, 762], "write_evok": [61, 150, 268, 269, 444, 624, 865, 876, 886], "0812": [61, 170], "0123": [61, 146, 167, 170, 217], "0942": [61, 170], "newcat": 61, "longer": [61, 114, 146, 163, 168, 169, 173, 192, 201, 202, 203, 204, 206, 228, 243, 266, 267, 268, 269, 271, 343, 437, 448, 452, 454, 481, 482, 564, 594, 709, 733, 734, 736, 737, 754, 764, 784, 787, 845, 851, 865, 868, 886], "reqev": [61, 259], "requir": [61, 79, 109, 135, 136, 137, 141, 143, 145, 151, 157, 159, 162, 163, 167, 169, 171, 173, 183, 190, 191, 192, 193, 197, 200, 203, 204, 206, 209, 211, 213, 214, 217, 223, 225, 228, 229, 232, 236, 258, 259, 263, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 299, 300, 305, 310, 314, 356, 357, 358, 359, 361, 362, 365, 388, 412, 413, 415, 416, 420, 422, 423, 426, 429, 430, 451, 452, 454, 456, 469, 471, 474, 475, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 517, 521, 522, 524, 525, 532, 535, 536, 545, 546, 561, 562, 564, 567, 574, 575, 577, 586, 595, 603, 612, 649, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 702, 706, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 748, 754, 771, 777, 784, 786, 789, 793, 797, 801, 806, 807, 808, 809, 812, 814, 816, 817, 823, 841, 843, 846, 849, 850, 861, 862, 867, 868, 874, 886], "reqwithin": [61, 259], "reqwhen": [61, 259], "freeli": 61, "316": [61, 66, 145, 170, 185, 188, 196, 228, 233, 246, 419], "elekta_epoch": [61, 66], "scratch": [63, 141, 150, 166, 189, 191, 192, 217, 226, 227, 243, 266, 267, 268, 269, 271, 375, 481, 482, 523, 710, 725], "exampleio": 63, "fake": [63, 70, 79, 160, 183], "won": [63, 79, 152, 207, 208, 219, 232, 246, 266, 267, 268, 269, 362, 481, 482, 562, 624, 706, 708, 709, 710, 744], "consult": [63, 203, 207, 594, 845, 850, 851, 861, 865, 867, 868], "reader": [63, 167, 176, 189, 207, 217, 332, 480, 487, 489, 490, 491, 493, 496, 499, 500, 502, 504, 505, 506, 508, 509, 510, 511, 512, 618, 620, 622, 868, 872, 886], "fakedata": 63, "nof": 63, "lazi": 63, "analogsign": 63, "multichannel": [63, 70, 112, 152, 197, 211, 246, 434, 570, 573, 594], "sampling_r": 63, "misc": [63, 65, 79, 80, 81, 82, 115, 135, 136, 138, 150, 170, 179, 183, 184, 186, 189, 190, 192, 193, 217, 223, 266, 267, 268, 269, 276, 313, 329, 348, 375, 446, 481, 482, 489, 491, 493, 496, 498, 504, 508, 559, 706, 708, 709, 710, 778, 784, 788, 790, 792, 807, 862, 876, 886], "show_scrollbar": [63, 75, 152, 206, 212, 223, 266, 267, 481, 482, 562, 784, 801, 807, 886], "100000": [63, 450], "99999": [63, 442], "096": [63, 66, 229], "read_neo_format": [63, 66], "ev_info": 64, "15972": 64, "27235589e": 64, "79818505e": 64, "12852747e": 64, "85348042e": 64, "02846360e": 64, "26727393e": 64, "33468523e": 64, "80261790e": 64, "33583009e": 64, "93161055e": 64, "35199238e": 64, "79073915e": 64, "09498615e": 64, "16924072e": 64, "93873875e": 64, "40677185e": 64, "27444183e": 64, "08634620e": 64, "59818134e": 64, "51070563e": 64, "53708918e": 64, "read_noise_covariance_matrix": [64, 66], "analyz": [65, 71, 141, 166, 169, 181, 193, 197, 200, 201, 203, 204, 211, 218, 219, 228, 246, 266, 267, 439, 565, 571, 689, 842, 845, 861, 868, 886], "pabr": 65, "maddox": [65, 246, 886], "lab": [65, 68, 864, 874], "clemen": [65, 112, 873, 886], "brunner": [65, 112, 873, 886], "pyxdf": [65, 190], "p001_se": 65, "s004_task": 65, "default_run": 65, "001_eeg_a2": 65, "stream": [65, 190, 201, 204, 886], "header": [65, 113, 123, 157, 161, 183, 190, 192, 268, 269, 299, 300, 341, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 480, 488, 491, 493, 508, 510, 511, 540, 794, 886], "load_xdf": 65, "time_seri": 65, "assert": [65, 109, 141, 145, 150, 157, 172, 192, 218, 225, 228, 230, 867, 886], "four": [65, 70, 142, 145, 152, 167, 186, 203, 228, 238, 246, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 754, 771, 786, 793, 797, 806, 809, 814, 816, 861, 868, 869], "plu": [65, 167, 169, 173, 178, 183, 203, 206, 208, 210, 232, 271, 725, 852, 863, 868, 871, 886], "rerefer": 65, "bipolar": [65, 67, 192, 205, 206, 228, 266, 267, 268, 269, 481, 482, 648, 651, 886], "subselect": [65, 116, 144, 150, 151, 152, 167, 217, 230, 233, 241, 243, 264, 265, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 372, 481, 482, 706, 707, 708, 709, 784, 865, 886], "uv": [65, 266, 267, 268, 269, 481, 482, 886], "preamp": 65, "nominal_sr": 65, "2320128": 65, "2320127": 65, "013": [65, 128, 141, 142, 150, 152, 170, 225], "melissa": [65, 246], "polonenko": [65, 246], "ross": [65, 246, 886], "brainstem": [65, 246], "hear": [65, 246, 598], "2331216519871395": [65, 246], "1177": [65, 101, 229, 246, 396, 862], "read_xdf": [65, 66], "954": [66, 206, 233], "auto_examples_io": 66, "mastoid": [67, 190, 209, 266, 267, 268, 269, 481, 482, 651], "bone": [67, 273, 274, 277, 280, 281, 282, 754, 812, 817], "sleep": [67, 139, 140, 166, 169, 246, 260, 266, 271, 405, 406, 442, 496, 612, 708, 787, 841, 865, 886], "ssvep_fold": [67, 171], "ssvep": [67, 166, 171, 244, 245, 266, 271, 314, 330, 442, 491, 559, 708, 816, 876, 886], "ssvep_data_raw_path": [67, 171], "se": [67, 171, 202, 213, 243, 868], "02_se": [67, 171, 243], "ssvep_eeg": [67, 171, 243], "vhdr": [67, 137, 171, 243, 446, 481, 482, 612, 862, 868, 886], "read_raw": [67, 70, 79, 135, 136, 145, 173, 225, 258, 876, 886], "easycap": [67, 171, 228, 243, 886], "467579": 67, "467": [67, 228, 233], "tp9": 67, "tp10": 67, "rename_channel": [67, 74, 112, 128, 141, 150, 152, 160, 186, 212, 217, 266, 267, 268, 269, 314, 481, 482, 492, 505, 876, 886], "m2": [67, 209, 266, 267, 268, 269, 481, 482, 651, 871], "midlin": [67, 128, 135, 170, 171, 220, 229, 326, 886], "make_1020_channel_select": [67, 128, 229, 876, 886], "return_ch_nam": [67, 326, 886], "rereferenc": [67, 168, 243], "rereferenced_midline_ch": 67, "alter": [67, 209, 211, 217, 260, 595, 886], "set_bipolar_refer": [67, 209, 266, 267, 268, 269, 481, 482, 651, 876, 886], "anod": [67, 209, 648, 886], "cathod": [67, 209, 648, 886], "strip": [67, 112, 246], "suffix": [67, 258, 276, 481, 482, 494, 886], "replac": [67, 78, 88, 101, 142, 144, 152, 160, 173, 189, 191, 202, 207, 208, 211, 217, 219, 246, 263, 266, 267, 268, 269, 275, 276, 413, 420, 435, 448, 481, 482, 493, 510, 527, 561, 562, 577, 706, 708, 710, 771, 793, 797, 806, 809, 814, 845, 849, 851, 853, 856, 868, 886], "unreferenc": [67, 648], "add_channel": [67, 70, 74, 266, 267, 268, 269, 481, 482, 562, 706, 708, 709, 710, 886], "467580": 67, "o1": [67, 70, 128, 160, 223, 243], "po9": [67, 243], "p7": [67, 70, 128, 160, 505], "p3": [67, 70, 128, 145, 160, 505], "cp5": [67, 128, 505], "cp1": [67, 70, 128], "t7": [67, 128, 160, 171, 263, 266, 267, 268, 269, 275, 314, 413, 420, 481, 482, 505, 561, 562, 577, 706, 708, 710, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 886], "c3": [67, 112, 128, 145, 160, 505], "fc1": [67, 70, 128, 480], "fc5": [67, 128, 505], "f3": [67, 70, 128, 145, 160, 209, 505], "f7": [67, 145, 160, 337, 505], "fp1": [67, 145, 160, 209, 223, 337, 449, 452, 489, 496, 580, 585], "o2": [67, 128, 160, 223, 243], "po10": [67, 243], "p8": [67, 70, 128, 160], "p4": [67, 70, 128, 145, 160], "cp6": [67, 128], "cp2": [67, 70, 128], "c4": [67, 70, 112, 128, 145, 160], "t8": [67, 70, 128, 160, 171, 263, 266, 267, 268, 269, 275, 314, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 886], "fc2": [67, 70, 128], "fc6": [67, 70, 128], "f4": [67, 70, 128, 145, 160, 171, 209], "f8": [67, 145, 160], "fp2": [67, 145, 160, 223, 337, 449, 452, 580, 585], "still": [67, 70, 74, 78, 115, 120, 143, 144, 145, 161, 172, 189, 190, 200, 201, 203, 204, 205, 207, 209, 211, 213, 217, 220, 228, 236, 266, 271, 279, 322, 367, 432, 463, 481, 562, 594, 614, 643, 645, 688, 709, 763, 777, 778, 819, 834, 843, 845, 851, 863, 874, 886], "plot_sensor": [67, 127, 143, 152, 171, 183, 191, 220, 266, 267, 268, 269, 481, 482, 876, 886], "fpz": [67, 128, 138, 171, 206, 263, 266, 267, 268, 269, 275, 314, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 886], "oz": [67, 70, 128, 138, 160, 171, 243, 263, 266, 267, 268, 269, 275, 314, 413, 420, 481, 482, 561, 562, 577, 655, 706, 708, 710, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 886], "175": [67, 85, 135, 143, 151, 170, 188, 197, 205, 216, 228, 232, 233, 246, 562], "contralateral_referenc": [67, 85], "facilit": [68, 112, 136, 137, 168, 191, 197, 229, 266, 267, 268, 269, 481, 482, 706, 708, 709, 710, 861, 868, 871, 886], "subcort": [68, 246, 578, 886], "simul": [68, 70, 80, 91, 105, 106, 141, 150, 162, 177, 189, 191, 202, 203, 217, 223, 233, 236, 237, 238, 243, 246, 263, 266, 267, 268, 269, 270, 271, 272, 277, 279, 289, 356, 375, 454, 481, 482, 486, 515, 518, 524, 528, 529, 540, 559, 560, 598, 615, 621, 626, 628, 629, 632, 706, 708, 710, 719, 733, 736, 737, 738, 754, 758, 813, 862, 876, 886], "samuelsson": [68, 246, 578, 886], "johnsam": 68, "mit": [68, 71, 152, 246, 476, 571, 856, 862, 868], "simulate_sparse_stc": [68, 92, 93, 670, 671, 673, 876, 886], "simulate_evok": [68, 92, 177, 224, 524, 671, 672, 673, 876, 886], "all_label": 68, "select_label": 68, "hiplab": 68, "postcenlab": 68, "cortical_waveform": 68, "waveform": [68, 99, 203, 205, 208, 212, 246, 274, 280, 282, 656, 658, 672, 673, 692, 813, 852], "pi": [68, 90, 93, 94, 95, 114, 203, 208, 223, 224, 225, 537, 603, 672, 722, 730, 732, 736, 868], "subcortical_waveform": 68, "data_fun": [68, 92, 93, 94, 672], "isin": [68, 112, 145], "evoked_subcort": [68, 578], "cortical_signal_suppress": [68, 876, 886], "n_proj": [68, 578], "fft": [68, 108, 133, 203, 241, 243, 266, 267, 268, 269, 421, 425, 426, 481, 482, 535, 545, 546, 707, 711, 712, 713, 714, 715, 716, 718, 725, 731, 733, 734, 735, 736, 737, 738, 808, 886], "rfft": 68, "psd_proc": 68, "transax": 68, "footbibliographi": [68, 845], "820": [68, 81, 85, 165, 233], "put": [69, 116, 123, 127, 142, 145, 156, 157, 162, 171, 173, 183, 184, 186, 196, 203, 206, 217, 223, 224, 225, 228, 268, 269, 272, 388, 754, 788, 845, 850, 886], "earli": [69, 70, 142, 173, 201, 203, 243, 246, 261, 266, 267, 268, 269, 481, 482, 522, 617], "button": [69, 71, 94, 121, 128, 135, 141, 143, 145, 153, 157, 162, 167, 169, 192, 200, 202, 207, 218, 219, 220, 263, 266, 267, 268, 269, 275, 276, 413, 420, 439, 481, 482, 561, 562, 706, 708, 710, 784, 785, 786, 788, 790, 793, 797, 806, 807, 808, 809, 814, 845, 862, 886], "press": [69, 71, 113, 121, 128, 135, 141, 143, 145, 152, 153, 157, 162, 167, 169, 173, 192, 200, 202, 218, 219, 220, 246, 266, 267, 356, 439, 452, 476, 481, 482, 562, 571, 784, 799, 801, 807, 862, 886], "590": [69, 81, 233], "millisecond": [69, 82, 112, 141, 146, 150, 169, 217, 236, 237, 238, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 439, 481, 482, 706, 709, 754, 812, 817, 886], "late": [69, 163, 865], "quickli": [69, 166, 167, 196, 206, 207, 219, 869, 886], "slowli": 69, "define_target_ev": [69, 85, 128, 876], "quick": [69, 73, 93, 135, 184, 200, 242, 527, 845], "reference_id": [69, 128, 439], "smilei": [69, 71, 94, 153, 167, 169, 218, 862], "target_id": [69, 128, 439], "new_id": [69, 128, 439, 527], "hit": [69, 243, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 706, 708, 710, 785, 786, 790, 793, 797, 806, 809, 814, 886], "fill_na": [69, 439], "fill": [69, 224, 272, 277, 279, 280, 362, 439, 469, 481, 482, 586, 673, 702, 754, 886], "events_": 69, "besid": [69, 202, 207], "tmin_": 69, "tmax_": 69, "8522": [69, 886], "10649": 69, "12859": 69, "14830": 69, "16850": 69, "18826": 69, "21224": 69, "23200": 69, "25272": 69, "27243": 69, "29525": 69, "31530": 69, "33481": 69, "35611": 69, "38007": 69, "08643728": 69, "532": [69, 209, 233], "78723509": 69, "352": [69, 81, 170, 172, 196, 197, 228], "97154325": 69, "359": [69, 81, 170, 228, 233], "63138369": 69, "446": [69, 200, 216, 233, 246, 860], "20930939": 69, "40611816": 69, "512": [69, 72, 276, 279, 412], "80771377": 69, "ft": [69, 143, 146, 167, 202, 208, 242, 258, 263, 266, 267, 268, 269, 273, 274, 275, 277, 280, 281, 282, 413, 420, 481, 482, 518, 561, 562, 577, 583, 706, 708, 710, 771, 785, 786, 788, 790, 793, 797, 806, 809, 814, 815, 816, 841, 868], "conduct": [70, 71, 101, 152, 159, 192, 228, 229, 230, 232, 246, 258, 519, 526, 663, 668, 841, 845, 861, 864, 868, 871, 886], "undesir": [70, 205, 562, 886], "otherwis": [70, 83, 120, 145, 152, 163, 173, 189, 202, 203, 233, 236, 238, 260, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 290, 299, 300, 304, 314, 326, 339, 356, 360, 361, 362, 371, 372, 373, 388, 406, 413, 420, 448, 451, 452, 456, 457, 471, 476, 478, 479, 481, 482, 491, 527, 528, 529, 535, 540, 561, 562, 577, 612, 621, 643, 644, 646, 652, 655, 672, 691, 692, 706, 708, 709, 710, 718, 730, 741, 744, 754, 770, 771, 778, 782, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 797, 804, 806, 807, 808, 809, 810, 812, 813, 814, 816, 817, 831, 843, 845, 868, 886], "introduct": [70, 90, 95, 152, 233, 241, 243, 246, 276, 870], "smear": [70, 80, 81, 143, 203, 243, 593, 733, 734, 736, 737, 886], "unfortun": [70, 163, 853, 865], "brigd": 70, "far": [70, 83, 127, 141, 142, 145, 158, 172, 179, 202, 203, 204, 207, 209, 217, 218, 228, 367, 493, 565, 693, 694, 696, 697, 734, 737, 778, 868, 871], "address": [70, 96, 97, 167, 203, 228, 229, 236, 237, 238, 246, 271, 693, 694, 696, 697, 845, 851], "Or": [70, 120, 172, 200, 210, 223, 577, 845], "quantifi": [70, 212, 243, 277], "introduc": [70, 75, 141, 142, 150, 152, 166, 167, 174, 176, 200, 202, 203, 204, 206, 207, 208, 213, 217, 236, 238, 261, 266, 267, 268, 269, 322, 481, 482, 562, 784, 788, 807, 865, 868, 874, 886], "outcom": 70, "awar": [70, 103, 141, 145, 168, 169, 219, 230, 236, 266, 267, 268, 269, 481, 482, 791, 886], "mitig": [70, 181, 203, 204, 211, 868], "confound": [70, 152, 562], "psychophysiologi": [70, 71, 99, 142, 152, 203, 233, 246, 571, 692, 693, 694, 696, 697], "cpmc": 70, "columbia": 70, "softwar": [70, 135, 159, 166, 185, 190, 191, 209, 246, 259, 271, 322, 446, 472, 481, 482, 490, 510, 594, 637, 820, 839, 841, 843, 845, 846, 851, 853, 861, 862, 865, 866, 867, 870, 874, 876, 886], "ebridg": 70, "html": [70, 144, 170, 246, 258, 276, 577, 652, 869, 886], "linearsegmentedcolormap": [70, 769], "nearli": [70, 845], "exactli": [70, 79, 127, 141, 145, 176, 185, 197, 217, 243, 564, 692, 772, 816, 886], "suffici": [70, 201, 203, 211, 230, 266, 267, 268, 269, 271, 284, 356, 481, 482, 521, 784, 807, 843, 845, 851, 861, 865, 868, 886], "portion": [70, 179, 200, 202, 217, 242, 266, 267, 323, 481, 482, 562, 784, 801, 807, 845, 865, 867, 886], "plenti": 70, "settl": [70, 299], "ed_data": 70, "raw_data": 70, "compute_bridged_electrod": [70, 593, 774, 876, 886], "1959919512423807e": 70, "665886892347821": 70, "iz": 70, "4367320903573773": 70, "fcz": [70, 145, 243], "fc4": [70, 145], "f2": 70, "4835197413857302e": 70, "587817798758312": 70, "fc3": [70, 145, 505], "cp3": [70, 505], "af7": 70, "af3": 70, "af4": 70, "af8": 70, "f5": [70, 505], "fz": [70, 128, 145, 160, 223, 229, 446, 481, 482, 496], "ft8": 70, "tp8": 70, "p5": [70, 505], "p1": [70, 112, 212], "p6": 70, "po3": [70, 128, 243], "po4": [70, 128, 243], "po8": [70, 128, 243, 886], "746002687400983": 70, "cz": [70, 112, 128, 138, 145, 160, 171, 190, 192, 207, 209, 223, 229, 266, 267, 268, 269, 481, 482, 651, 886], "c2": [70, 112, 207], "cp4": 70, "pz": [70, 128, 138, 144, 160, 192, 223, 229], "p2": [70, 112], "590631749463316": 70, "f6": 70, "understand": [70, 136, 145, 191, 203, 243, 722, 732, 736, 845, 868, 869, 874, 886], "physiologi": 70, "clip": [70, 173, 220, 258, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 771, 786, 793, 797, 806, 807, 809, 814, 816, 886], "bridged_idx": [70, 570, 593, 774], "ed_matrix": [70, 570, 774], "ax1": [70, 86, 90, 99, 138, 184, 196], "ax2": [70, 86, 90, 96, 99, 138, 184, 196, 230, 231], "triangular": [70, 161, 162, 272, 637, 693, 694, 696, 697, 813, 839, 861, 868, 871], "ed_plot": 70, "triu_idx": 70, "triu_indic": 70, "idx0": 70, "idx1": 70, "nanmedian": 70, "im1": 70, "cax1": 70, "set_label": [70, 147, 197, 228], "mu": [70, 203, 228, 570, 886], "im2": 70, "cax2": 70, "histogram": [70, 159, 266, 267, 784], "previou": [70, 135, 141, 145, 152, 162, 171, 172, 173, 182, 202, 203, 207, 209, 220, 268, 269, 299, 300, 356, 360, 361, 371, 372, 373, 413, 419, 420, 456, 457, 476, 478, 479, 540, 572, 583, 594, 754, 772, 794, 856, 871, 886], "pair": [70, 103, 120, 138, 145, 169, 189, 190, 191, 193, 197, 211, 212, 228, 236, 243, 258, 263, 266, 267, 268, 269, 271, 273, 274, 275, 277, 279, 280, 281, 282, 285, 290, 304, 413, 420, 481, 482, 505, 528, 561, 562, 570, 593, 605, 637, 693, 695, 696, 706, 707, 708, 710, 741, 754, 770, 774, 775, 778, 786, 792, 793, 797, 809, 812, 814, 816, 817, 839, 845, 886], "isnan": 70, "arrang": [70, 127, 152, 166, 171, 220, 246, 326, 759], "light": [70, 138, 143, 172, 191, 201, 214, 266, 267, 268, 269, 416, 423, 481, 482, 562, 754, 784, 788, 801, 807, 841, 862, 886], "horizont": [70, 81, 136, 138, 141, 142, 143, 181, 192, 200, 211, 228, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 562, 754, 773, 788, 800, 801, 807, 812, 817, 886], "stand": [70, 156, 170, 176, 667, 845, 857], "insert": [70, 152, 170, 217, 263, 271, 275, 290, 304, 439, 455, 528, 741, 759], "syring": 70, "tip": [70, 206, 246, 356, 849, 850, 866, 872], "plot_bridged_electrod": [70, 876, 886], "saniti": [70, 120, 145, 183, 203, 449, 671, 874, 886], "implausibli": [70, 203, 228, 699], "interestingli": [70, 868], "though": [70, 74, 112, 152, 157, 161, 169, 173, 180, 184, 191, 200, 203, 204, 206, 207, 208, 213, 228, 271, 757, 777, 841, 862, 868, 886], "adjac": [70, 143, 147, 201, 229, 237, 238, 320, 331, 425, 454, 564, 567, 676, 677, 678, 679, 680, 681, 682, 686, 693, 694, 696, 697, 775, 874, 883, 886], "distinct": [70, 71, 197, 246, 263, 266, 267, 268, 269, 413, 420, 481, 482, 561, 706, 708, 710, 771, 786, 793, 809, 814, 816], "unlik": [70, 141, 142, 150, 151, 157, 161, 171, 182, 200, 203, 205, 217, 265, 266, 267, 268, 269, 274, 280, 282, 363, 392, 421, 595, 710, 817, 843, 861, 868, 886], "ch1": 70, "ch2": 70, "9760": [70, 83], "9759": [70, 83], "lesser": [70, 481, 482, 807, 886], "trough": [70, 145], "monoton": [70, 101, 492, 589, 758], "discrep": [70, 868], "driven": [70, 197, 228, 373, 420, 476], "blink": [70, 72, 83, 93, 94, 145, 173, 193, 200, 202, 205, 206, 208, 209, 214, 217, 219, 243, 246, 260, 266, 267, 500, 561, 577, 658, 659, 886], "flatten": [70, 119, 207, 228, 232, 238, 246, 771, 886], "axvspan": [70, 96, 152], "subplots_adjust": [70, 71, 73, 107, 109, 112, 120, 127, 147, 152, 161, 201, 204, 206, 207, 208, 209, 212, 218, 228, 230, 231, 233, 777], "725": [70, 197, 233], "wspace": [70, 73, 127, 228], "compel": 70, "evid": [70, 113, 203, 204, 246, 562, 735, 738], "judici": [70, 845], "electrolyt": [70, 246, 570], "tri": [70, 161, 162, 169, 176, 179, 266, 267, 272, 273, 277, 279, 281, 320, 367, 436, 468, 637, 640, 655, 675, 679, 682, 812, 834, 863, 868, 871, 886], "those": [70, 74, 78, 99, 127, 143, 145, 152, 158, 162, 166, 167, 169, 170, 171, 172, 173, 176, 181, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 217, 218, 219, 223, 224, 228, 258, 261, 266, 267, 268, 269, 271, 279, 299, 312, 314, 326, 329, 331, 357, 358, 359, 361, 370, 371, 415, 419, 429, 434, 436, 437, 442, 446, 465, 481, 482, 492, 510, 540, 548, 561, 562, 564, 565, 578, 579, 580, 586, 590, 600, 602, 609, 655, 658, 659, 674, 692, 701, 706, 708, 709, 710, 714, 715, 716, 717, 719, 733, 734, 736, 737, 778, 784, 785, 788, 790, 791, 798, 805, 808, 845, 861, 867, 868, 870, 886], "biolog": [70, 200, 207, 208, 246, 529, 861, 868], "interpolate_bridged_electrod": [70, 876, 886], "midwai": [70, 593], "aid": [70, 246, 593, 886], "recov": [70, 135, 167, 367, 886], "impli": [70, 163, 224, 243, 271, 332, 366, 496, 865], "unbridg": 70, "ch0": 70, "bridged_idx_simul": 70, "data_orig": 70, "rng": [70, 92, 93, 94, 114, 196, 203, 228, 515, 562, 592, 611, 658, 659, 660, 669, 670, 672, 693, 694, 695, 696, 697], "random": [70, 84, 90, 92, 93, 94, 114, 160, 191, 192, 196, 200, 203, 206, 225, 228, 229, 236, 237, 238, 478, 515, 562, 592, 611, 658, 659, 660, 669, 670, 672, 693, 694, 695, 696, 697, 886], "default_rng": 70, "seed": [70, 90, 95, 112, 114, 206, 224, 225, 229, 236, 237, 238, 471, 515, 562, 592, 611, 658, 659, 660, 669, 670, 672, 685, 693, 694, 695, 696, 697, 886], "raw_sim": [70, 93, 94], "bridged_data": 70, "tile": [70, 114], "back": [70, 74, 83, 88, 116, 141, 144, 159, 162, 163, 167, 172, 173, 181, 182, 201, 203, 206, 207, 208, 209, 241, 259, 266, 267, 268, 269, 276, 367, 371, 428, 454, 481, 482, 562, 788, 845, 865, 886], "raw_virtu": 70, "data_virtu": 70, "raw_comp": 70, "data_comp": 70, "With": [70, 114, 121, 163, 172, 173, 189, 192, 207, 208, 213, 219, 225, 266, 267, 268, 269, 284, 455, 481, 482, 506, 562, 644, 754, 802, 841, 845, 848, 853, 857, 865, 867, 868], "comp": [70, 170, 271, 886], "1086289630998356e": 70, "139834556312537e": 70, "brought": [70, 157], "impend": 70, "help": [70, 72, 79, 120, 135, 136, 141, 145, 146, 147, 152, 160, 161, 162, 163, 167, 170, 173, 182, 189, 191, 197, 200, 201, 202, 204, 205, 206, 208, 220, 232, 258, 264, 265, 266, 267, 268, 269, 272, 273, 274, 277, 280, 281, 282, 440, 442, 448, 472, 481, 482, 489, 496, 497, 504, 513, 562, 612, 618, 651, 655, 669, 672, 698, 706, 709, 722, 732, 736, 751, 754, 762, 784, 798, 812, 845, 850, 851, 861, 863, 867, 868, 869, 871, 874, 886], "quest": 70, "technician": [70, 861, 862], "noisi": [70, 92, 143, 151, 201, 203, 208, 211, 228, 236, 238, 243, 271, 583, 584, 587, 658, 659, 670, 861, 886], "bid": [70, 135, 137, 172, 246, 266, 267, 314, 481, 482, 852, 862, 874, 886], "tsv": [70, 332, 886], "kohm": 70, "passiv": [70, 200], "accept": [70, 94, 141, 170, 172, 173, 189, 201, 202, 203, 206, 207, 208, 217, 261, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 316, 346, 361, 379, 380, 381, 388, 390, 481, 482, 506, 564, 579, 580, 691, 693, 694, 696, 697, 708, 710, 754, 778, 785, 786, 792, 810, 839, 845, 864, 886], "from_list": 70, "impedance_cmap": 70, "cn": [70, 816], "cax": [70, 112, 116, 127, 147, 233], "omega": [70, 109], "hopefulli": [70, 200, 243, 453], "convinc": [70, 152], "tenk": [70, 71, 246, 570, 571], "kayser": [70, 71, 246, 570, 571], "electroencephalogram": [70, 246, 570], "offici": [70, 71, 191, 246, 506, 562, 570, 571, 620, 845, 853, 867, 870, 886], "feder": [70, 246, 562, 570], "550": [70, 81, 163, 225, 233, 246, 434, 570], "march": [70, 246, 570, 871, 886], "s1388": [70, 112, 246, 570], "2457": [70, 112, 246, 570], "00553": [70, 246, 570], "arnaud": [70, 246, 562, 570], "delorm": [70, 246, 562, 570], "scott": [70, 112, 145, 214, 246, 437, 476, 562, 570, 861, 886], "makeig": [70, 112, 145, 246, 437, 476, 562, 570, 861], "jneumeth": [70, 74, 203, 233, 246, 562, 570, 666, 693, 694, 696, 697], "2003": [70, 196, 243, 246, 419, 570, 861], "009": [70, 73, 121, 128, 141, 150, 170, 225, 246, 570], "eeg_bridg": [70, 85], "laplacian": [71, 196, 246, 425, 571, 651, 886], "sharper": [71, 203], "impact": [71, 138, 179, 201, 243, 413, 886], "166799": [71, 168, 183, 205], "714": [71, 168, 183, 197, 205, 233], "date": [71, 73, 76, 81, 82, 83, 90, 93, 127, 142, 147, 152, 168, 169, 170, 190, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 258, 260, 266, 267, 268, 269, 271, 481, 482, 483, 493, 496, 595, 843, 845, 886], "decemb": [71, 73, 76, 81, 82, 83, 90, 93, 127, 142, 147, 152, 168, 169, 170, 200, 201, 202, 204, 206, 207, 208, 209, 211, 217, 218, 219, 220, 225], "2002": [71, 73, 76, 83, 90, 93, 112, 127, 142, 147, 152, 167, 168, 169, 170, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 217, 218, 219, 220, 225, 246, 260, 529, 688, 690, 695, 868], "gmt": [71, 73, 76, 81, 82, 83, 90, 93, 127, 142, 147, 152, 168, 169, 170, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 214, 217, 218, 219, 220, 225], "146": [71, 73, 76, 83, 90, 93, 127, 142, 147, 152, 167, 168, 169, 170, 200, 201, 202, 204, 206, 207, 208, 209, 211, 214, 217, 218, 219, 220, 225, 228, 232, 233, 246], "172": [71, 83, 93, 127, 168, 169, 170, 200, 201, 203, 204, 207, 208, 209, 211, 217, 218, 219, 220, 228, 233, 246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 666, 671, 706, 709], "hh": [71, 73, 76, 81, 82, 83, 90, 93, 127, 142, 147, 152, 168, 169, 200, 201, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 219, 220, 225], "ss": [71, 73, 76, 81, 82, 83, 90, 93, 127, 142, 147, 152, 168, 169, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 217, 218, 219, 220, 225, 868], "raw_csd": 71, "compute_current_source_dens": [71, 651, 876, 886], "421": [71, 107, 110, 143, 163, 177, 183, 205, 224, 231, 232, 233], "evoked_csd": 71, "stiff": [71, 571], "spline": [71, 78, 201, 246, 266, 267, 268, 269, 481, 482, 571, 868, 886], "flexibl": [71, 144, 173, 190, 213, 754, 886], "hspace": [71, 73, 127, 228], "set_size_inch": [71, 205], "this_evoked_csd": 71, "contour": [71, 101, 120, 159, 173, 242, 258, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 590, 706, 708, 710, 771, 772, 786, 789, 790, 793, 797, 806, 809, 814, 816, 886], "n\u03bb\u00b2": 71, "perrin": [71, 78, 201, 246, 571, 868], "pernier": [71, 78, 201, 246, 571, 722, 732, 733, 736, 868], "bme": [71, 246, 571], "1987": [71, 177, 203, 246, 571], "326089": [71, 246, 571], "jacqu": [71, 78, 201, 246, 571, 722, 732, 733, 736, 868], "olivi": [71, 78, 201, 246, 356, 562, 571, 722, 732, 733, 736, 868], "fran\u0107oi": [71, 78, 201, 246, 571, 868], "echalli": [71, 78, 201, 246, 571, 868], "184": [71, 75, 78, 170, 197, 201, 210, 232, 233, 246, 571, 601, 868], "187": [71, 75, 78, 165, 170, 196, 201, 228, 233, 246, 562, 571, 868], "1989": [71, 78, 201, 246, 571, 868], "90180": [71, 78, 201, 246, 571, 868], "mike": [71, 246, 571], "cohen": [71, 119, 129, 246, 571, 720, 722, 732, 736, 771, 886], "theori": [71, 166, 179, 211, 246, 571, 594], "j\u00fcrgen": [71, 206, 246, 562, 571], "craig": [71, 246, 571], "methodologi": [71, 101, 246, 356, 571], "electrophysiologi": [71, 79, 135, 246, 571], "171": [71, 75, 126, 133, 147, 170, 203, 228, 232, 246, 390, 540, 571, 601, 663, 668, 886], "173": [71, 146, 159, 170, 197, 210, 228, 232, 233, 246, 279, 571], "ijpsycho": [71, 246, 571], "668": [71, 85, 195, 196], "267": [71, 85, 112, 144, 169, 170, 208, 210, 216, 228, 246, 860], "eeg_csd": [71, 85], "eog_event_id": 72, "eog_ev": [72, 202, 260, 575, 585, 588], "find_eog_ev": [72, 200, 202, 219, 260, 575, 580, 863, 876, 886], "add_ev": [72, 173, 276, 481, 482, 886], "audr": 72, "visr": 72, "pick_ch": 72, "375": [72, 81, 94, 170, 200, 202, 208, 210, 228], "dc": [72, 167, 169, 173, 191, 200, 202, 203, 204, 205, 206, 208, 213, 218, 261, 266, 268, 269, 271, 343, 481, 482, 562, 564, 594, 807, 841, 871, 886], "offset": [72, 93, 137, 162, 169, 173, 192, 200, 202, 203, 205, 206, 207, 208, 217, 218, 219, 260, 261, 264, 265, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 363, 442, 454, 481, 482, 500, 565, 608, 621, 686, 706, 709, 754, 841, 871, 886], "saccad": [72, 173, 192, 193, 200, 202, 205, 206, 208, 214, 500, 561], "firwin2": [72, 147, 173, 192, 200, 202, 203, 205, 206, 208, 266, 267, 268, 269, 415, 424, 449, 451, 452, 481, 482, 886], "hann": [72, 84, 108, 109, 147, 173, 200, 202, 203, 205, 206, 208, 266, 267, 268, 269, 424, 449, 451, 452, 481, 482, 535, 536, 657, 658, 659, 671, 886], "1502": [72, 173, 202, 206, 210], "507": [72, 85, 228, 233], "eog_artifact_histogram": [72, 85], "basic": [73, 83, 112, 151, 152, 159, 162, 163, 166, 167, 172, 173, 174, 177, 194, 200, 205, 206, 207, 208, 211, 217, 220, 221, 225, 244, 245, 246, 258, 266, 271, 275, 314, 330, 375, 392, 442, 448, 491, 559, 708, 816, 862, 868, 886], "thorough": [73, 166, 201, 869], "modul": [73, 135, 141, 143, 144, 146, 147, 150, 151, 152, 162, 167, 168, 169, 170, 171, 172, 173, 190, 191, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 217, 218, 219, 220, 223, 241, 243, 258, 349, 492, 556, 705, 751, 754, 844, 845, 852, 857, 865, 868, 874, 875, 876, 877, 878, 881, 884, 886], "eogregress": [73, 205, 213, 604, 809, 876, 886], "elimin": [73, 170, 205, 207, 211, 228, 236, 238, 357, 358, 359, 413, 586, 865, 868, 886], "slow": [73, 128, 138, 142, 145, 151, 203, 205, 212, 246, 266, 267, 405, 406, 418, 535, 536, 592, 724, 744, 786, 845, 862], "drift": [73, 142, 203, 205, 212, 213, 562, 608, 886], "1653": [73, 74], "376": [73, 81, 93, 94, 95, 150, 167, 168, 170, 180, 217, 233], "offpca": [73, 76, 93, 168, 169, 170, 200, 201, 202, 204, 206, 207, 208, 211, 217, 218, 219, 220, 225], "offaverag": [73, 93, 170, 202, 206], "raw_clean": [73, 84, 205, 602], "evoked_befor": 73, "evoked_aft": 73, "epochs_aft": 73, "spatial_color": [73, 94, 99, 129, 138, 145, 151, 152, 208, 220, 223, 266, 267, 268, 269, 481, 482, 708, 710, 788, 791, 808, 886], "905": 73, "769": [73, 85, 138, 233, 246], "eog_regress": [73, 85], "intermitt": 74, "extern": [74, 152, 181, 189, 211, 246, 266, 267, 268, 269, 343, 345, 349, 434, 443, 444, 445, 446, 481, 482, 562, 572, 573, 583, 594, 861, 862, 868, 886], "magnet": [74, 79, 81, 119, 129, 135, 151, 157, 177, 189, 204, 205, 213, 233, 246, 344, 529, 562, 576, 771, 841, 846, 861, 862], "fail": [74, 208, 360, 367, 432, 434, 463, 497, 498, 572, 573, 583, 594, 612, 614, 618, 643, 645, 834, 845, 867, 886], "succe": [74, 162, 172, 851], "choos": [74, 82, 114, 115, 136, 142, 147, 152, 161, 163, 181, 182, 190, 196, 200, 203, 205, 206, 211, 230, 243, 259, 266, 267, 273, 274, 277, 279, 280, 281, 282, 321, 454, 529, 537, 561, 567, 574, 584, 587, 594, 621, 669, 672, 692, 754, 770, 773, 812, 817, 818, 843, 845, 865, 867, 886], "made": [74, 116, 156, 173, 200, 203, 228, 266, 267, 272, 274, 279, 280, 282, 316, 330, 489, 608, 671, 785, 787, 817, 843, 845, 862, 867, 886], "whose": [74, 95, 145, 169, 171, 189, 197, 225, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 442, 447, 456, 457, 476, 478, 479, 481, 482, 522, 540, 562, 567, 577, 579, 580, 584, 659, 709, 710, 778, 781, 794, 799, 808, 809, 867, 868, 871, 886], "particularli": [74, 162, 191, 205, 228, 266, 267, 268, 269, 440, 481, 482, 562, 583, 848, 868], "heavi": [74, 236, 238, 865, 886], "jeff": [74, 246, 562, 886], "hanna": [74, 246, 562, 886], "refmeg_nois": [74, 862, 876, 886], "sample_reference_meg_nois": 74, "refmeg": 74, "165353": 74, "530": [74, 81, 209, 233, 246], "30000": [74, 412], "select_pick": 74, "plot_kwarg": [74, 158, 205, 213], "480": [74, 81, 172, 192, 228, 233], "raw_tog": 74, "ica_kwarg": 74, "picard": [74, 76, 83, 206, 562, 852, 886], "fit_param": [74, 76, 173, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 430, 562, 563, 886], "all_pick": 74, "ica_tog": 74, "allow_ref_meg": [74, 562], "bad_comp": 74, "find_bads_ref": [74, 562, 886], "plot_properti": [74, 83, 167, 206, 562, 872, 886], "147": [74, 159, 170, 186, 188, 197, 228, 232, 233], "patient": [74, 76, 83, 137, 167, 173, 206, 886], "took": [74, 76, 83, 167, 173, 206, 562], "dpss": [74, 83, 103, 104, 138, 143, 144, 167, 173, 206, 241, 242, 266, 267, 268, 269, 426, 481, 482, 708, 710, 718, 724, 734, 737, 886], "raw_sep": 74, "ref_pick": 74, "ica_ref": 74, "ica_sep": 74, "think": [74, 145, 173, 197, 203, 228, 841, 864], "ekg": [74, 137], "cardiac": [74, 212], "ref_comp": 74, "get_sourc": [74, 562, 886], "ref_": 74, "recognis": 74, "cora": [74, 246, 562, 886], "kim": [74, 246, 562, 886], "nadia": [74, 246, 562], "voggel": [74, 246, 562], "magnetoencephalograph": [74, 246, 562], "108592": [74, 246, 562], "094": [74, 85], "find_ref_artifact": [74, 85], "fnir": [75, 166, 170, 171, 194, 195, 215, 216, 246, 266, 267, 268, 269, 271, 314, 330, 355, 373, 375, 442, 481, 482, 505, 510, 512, 559, 596, 597, 598, 600, 601, 706, 708, 709, 710, 754, 770, 778, 787, 792, 841, 852, 868, 886], "mail": [75, 214, 228, 856], "robertluk": 75, "net": [75, 171, 196, 246, 419, 688, 868, 886], "optical_dens": [75, 212, 876, 886], "temporal_derivative_distribution_repair": [75, 876, 886], "exact": [75, 103, 135, 204, 228, 236, 243, 246, 266, 267, 268, 269, 292, 430, 481, 482, 529, 693, 695, 696, 707, 711, 713, 714, 716, 841, 849, 868, 886], "fnirs_data_fold": [75, 212], "fnirs_motor": [75, 212, 862, 876, 886], "fnirs_cw_amplitude_dir": [75, 212], "raw_intens": [75, 212], "read_raw_nirx": [75, 191, 212, 487, 868, 876, 886], "raw_od": [75, 212], "new_annot": [75, 219], "317": [75, 170, 210, 233], "set_annot": [75, 81, 82, 138, 169, 192, 202, 219, 260, 266, 267, 481, 482, 564, 595, 886], "23238": [75, 212], "2974": [75, 212], "spike": [75, 83, 259, 601, 861], "person": [75, 152, 193, 212, 271, 845, 861, 867], "optod": [75, 191, 212, 512, 598, 754, 770, 862, 886], "corrupted_data": 75, "750": [75, 81, 144, 197, 233, 862], "corrupted_od": 75, "245": [75, 170, 186, 202, 233, 246, 868], "8924": 75, "8923": 75, "suppli": [75, 101, 153, 173, 181, 208, 223, 228, 264, 265, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 362, 388, 437, 447, 448, 481, 482, 562, 577, 600, 601, 648, 706, 709, 777, 778, 797, 886], "corrected_tddr": 75, "said": [75, 176], "fishburn": [75, 246, 601], "ruth": [75, 246, 601], "ludlum": [75, 246, 601], "chandan": [75, 246, 601], "vaidya": [75, 246, 601], "andrei": [75, 246, 601], "medvedev": [75, 246, 601], "tddr": [75, 246, 601, 886], "motion": [75, 246, 566, 601, 886], "2018": [75, 84, 126, 138, 197, 206, 225, 246, 299, 300, 562, 601, 602], "025": [75, 128, 137, 141, 147, 150, 170, 192, 200, 203, 225, 228, 236, 240, 246, 601], "679": [75, 85, 210, 233], "fnirs_artifact_remov": [75, 85], "pierreablin": 76, "9009": [76, 173, 206], "run_ica": [76, 886], "t0": [76, 100, 186, 243, 259, 711, 712, 713], "fit_tim": 76, "infomax": [76, 206, 246, 562, 872, 876, 886], "056": [76, 85, 141, 143, 150, 170, 225], "ica_comparison": [76, 85], "evoked_interp": 78, "product": [78, 87, 119, 124, 151, 171, 189, 190, 196, 201, 208, 246, 271, 333, 426, 686, 734, 735, 737, 738, 763, 867, 868, 886], "truncat": [78, 87, 119, 124, 151, 201, 208, 218, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 436, 442, 481, 482, 494, 706, 709, 778, 886], "evoked_interp_mn": 78, "\u03b1": [78, 143, 208, 220], "0e": [78, 196, 208], "666": [78, 85, 121, 196, 197], "interpolate_bad_channel": [78, 85], "tomographi": [79, 135, 246, 529, 841, 868, 886], "ct": [79, 473, 589, 744, 886], "scan": [79, 135, 156, 167, 177, 181, 184, 211, 271, 392, 589, 590, 846, 849, 852, 857, 871, 874], "reson": [79, 135, 246, 868], "mr": [79, 473, 744, 868, 874, 886], "seeg": [79, 135, 137, 139, 140, 166, 170, 217, 223, 266, 267, 268, 269, 271, 279, 281, 313, 314, 318, 368, 373, 375, 442, 446, 465, 481, 482, 487, 496, 558, 559, 560, 562, 636, 638, 651, 701, 706, 708, 709, 710, 754, 770, 776, 810, 841, 842, 852, 868, 886], "sample_seeg_ieeg": [79, 135, 136], "1310640": [79, 135, 136], "1370605": [79, 135, 136], "1371": [79, 135, 136, 158, 197, 241, 246, 266, 267, 268, 269, 481, 482, 708, 710, 718, 724], "mne_gui_addon": [79, 135, 473, 886], "misc_path": [79, 115, 135, 136, 183], "gui": [79, 135, 158, 159, 161, 266, 267, 273, 274, 277, 280, 281, 282, 310, 481, 482, 562, 770, 784, 801, 807, 812, 817, 843, 845, 849, 851, 852, 859, 861, 863, 865, 876, 886], "pyvista": [79, 115, 135, 172, 182, 264, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 754, 756, 764, 768, 770, 782, 810, 812, 813, 817, 819, 824, 843, 844, 863, 874, 886], "set_3d_backend": [79, 135, 825, 843, 876, 886], "pyvistaqt": [79, 135, 172, 273, 277, 281, 764, 812, 819, 825, 843, 844, 886], "thing": [79, 112, 142, 146, 152, 161, 172, 173, 182, 189, 201, 203, 217, 225, 233, 236, 238, 314, 481, 482, 845, 865, 886], "associ": [79, 135, 138, 145, 169, 173, 192, 200, 207, 208, 210, 228, 230, 246, 260, 261, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 421, 464, 481, 482, 524, 618, 620, 656, 688, 693, 698, 706, 709, 776, 784, 785, 787, 788, 790, 805, 806, 843, 845, 868, 871, 886], "intens": [79, 135, 144, 161, 182, 183, 191, 206, 268, 269, 273, 274, 277, 280, 281, 282, 284, 538, 539, 589, 754, 789, 812, 817, 841, 886], "ct_orig": [79, 135], "sample_seeg_ct": [79, 135], "sample_seeg": [79, 135, 136], "fiduci": [79, 125, 135, 137, 157, 160, 161, 171, 189, 190, 314, 317, 318, 327, 337, 338, 367, 368, 369, 389, 485, 488, 506, 514, 620, 645, 770, 841, 861, 868, 871, 886], "tkreg": [79, 135], "scanner": [79, 161, 279, 475, 862, 868], "make_dig_montag": [79, 266, 267, 268, 269, 271, 314, 330, 332, 333, 334, 335, 336, 337, 338, 339, 341, 481, 482, 505, 868, 876, 886], "on_miss": [79, 261, 266, 267, 268, 269, 271, 286, 287, 318, 350, 351, 405, 440, 460, 481, 482, 706, 708, 709, 710, 787, 886], "haven": [79, 141, 219, 845, 869, 886], "head_ct_t": 79, "invert_transform": [79, 81, 136], "compute_native_head_t": [79, 135, 136, 160, 183, 314, 876, 886], "misnorm": 79, "launch": [79, 472, 550, 843, 845, 849, 851, 886], "viewer": [79, 135, 273, 274, 277, 280, 281, 282, 754, 812, 817, 841, 874, 886], "locate_ieeg": [79, 135, 876, 886], "programmat": [79, 266], "shaft": [79, 862, 874], "set_ra": 79, "mark_channel": 79, "lent": [79, 136], "unless": [79, 168, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 284, 356, 357, 359, 361, 413, 416, 420, 423, 426, 429, 430, 432, 437, 456, 458, 469, 471, 476, 478, 479, 481, 482, 491, 521, 524, 525, 535, 536, 540, 545, 546, 561, 562, 567, 574, 575, 594, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 744, 778, 784, 785, 786, 789, 793, 797, 801, 807, 808, 809, 845, 867, 868, 886], "recon": [79, 116, 136, 156, 161, 311, 368, 548, 886], "fortun": [79, 203, 207, 868], "apply_volume_registration_point": [79, 876, 886], "didn": [79, 141, 145, 266, 448, 709, 886], "enough": [79, 103, 159, 181, 204, 205, 206, 208, 211, 217, 228, 243, 263, 266, 267, 268, 269, 275, 307, 308, 314, 413, 420, 432, 481, 482, 561, 562, 577, 701, 706, 708, 709, 710, 763, 771, 778, 784, 786, 788, 790, 793, 794, 797, 801, 804, 806, 807, 808, 809, 810, 814, 816, 849, 867, 868, 886], "reg_affin": [79, 135, 591, 742, 743, 744], "99270756": [79, 135], "03243313": [79, 135], "11610254": [79, 135], "094156": [79, 135], "04374389": [79, 135], "99439665": [79, 135], "09623816": [79, 135], "58320673": [79, 135], "11233068": [79, 135], "10061512": [79, 135], "98856381": [79, 135], "45551601": [79, 135], "head_mri_t": [79, 136], "add_sensor": [79, 116, 135, 136, 137, 191, 212, 754, 886], "1285": [79, 85], "locate_ieeg_micro": [79, 85], "bilater": [80, 208, 654, 886], "repeat": [80, 93, 101, 113, 135, 141, 162, 166, 168, 207, 208, 217, 218, 228, 234, 235, 239, 240, 260, 266, 267, 268, 269, 271, 277, 279, 362, 437, 481, 528, 529, 543, 559, 562, 577, 603, 621, 636, 678, 687, 689, 690, 694, 697, 698, 709, 736, 754, 792, 845, 853, 865, 886], "maxwell_filt": [80, 185, 210, 211, 434, 572, 583, 595, 796, 865, 876, 886], "head_po": [80, 81, 210, 211, 434, 583, 594, 657, 658, 659, 671, 886], "chpi": [80, 81, 123, 170, 184, 210, 211, 258, 266, 267, 268, 269, 271, 276, 313, 434, 481, 482, 559, 566, 569, 594, 657, 658, 659, 671, 706, 708, 709, 710, 777, 784, 807, 841, 868, 874, 875, 876, 886], "read_head_po": [80, 210, 211, 344, 346, 352, 354, 434, 583, 594, 657, 658, 659, 671, 876], "simulated_quat": 80, "simulated_movement_raw": 80, "raw_stat": 80, "simulated_stationary_raw": 80, "34208": 80, "backward": [80, 203, 258, 266, 267, 268, 269, 373, 413, 419, 420, 424, 441, 448, 449, 451, 452, 481, 482, 535, 708, 710, 754, 786, 795, 819, 868, 886], "plot_head_posit": [80, 81, 210, 211, 876, 886], "quiver": [80, 264, 754, 782, 796], "306m": [80, 109, 116, 123, 124, 151, 157, 159, 171, 173, 184], "topo_kwarg": [80, 142], "evoked_stat": 80, "naiv": [80, 232], "therebi": [80, 176, 205, 207, 734, 737, 868], "third": [80, 94, 95, 152, 170, 173, 189, 208, 212, 219, 260, 261, 266, 441, 442, 454, 455, 481, 482, 523, 557, 562, 620, 621, 696, 697, 710, 787, 831, 845, 868], "restor": [80, 202, 209, 268, 269, 413, 417, 562, 563, 606, 754, 832, 886], "raw_sss": [80, 173, 211, 258, 481, 482, 502, 594], "evoked_raw_mc": 80, "harmon": [80, 93, 184, 185, 192, 200, 204, 210, 211, 243, 246, 576, 868, 886], "fourth": [80, 203, 219, 471, 868], "cleanli": [80, 170], "evoked_evo_mc": 80, "average_mov": [80, 211, 594, 876, 886], "movement_compens": [80, 85], "contamin": [81, 203, 206, 246, 562], "similarli": [81, 99, 112, 144, 150, 172, 197, 203, 209, 212, 260, 562, 778, 863, 868], "suffer": [81, 861], "adonai": [81, 82, 886], "nune": [81, 82, 246, 666, 886], "bst_auditori": [81, 82, 192, 876], "annotate_mov": [81, 210, 876, 886], "compute_average_dev_head_t": [81, 566, 876, 886], "data_path_meg": 81, "raw_fname1": [81, 192], "s01_aef_20131218_01": [81, 82, 192], "raw_fname2": [81, 192], "s01_aef_20131218_02": [81, 192], "mismatch": [81, 161, 162, 192, 356, 447, 537, 811, 886], "on_mismatch": [81, 192, 356, 363, 365, 832, 886], "350": [81, 85, 86, 116, 117, 135, 142, 161, 170, 233], "s01_20131218_01": [81, 82, 192], "2400": [81, 82, 185, 192], "864000": [81, 82, 192], "eab": [81, 82], "s01": [81, 82], "lt": [81, 115], "br": 81, "gt": 81, "chpi_loc": [81, 210, 344, 346, 347, 348], "extract_chpi_locs_ctf": [81, 344, 346, 876, 886], "compute_head_po": [81, 210, 211, 344, 347, 594, 876, 886], "original_head_dev_t": 81, "average_head_dev_t": 81, "val": [81, 101], "val_ori": 81, "010": [81, 94, 128, 141, 150, 156, 170, 225, 246], "020": [81, 128, 141, 150, 170, 225], "090": [81, 162, 165, 210], "130": [81, 82, 83, 159, 170, 171, 210, 228, 232, 233, 246, 340, 886], "160": [81, 82, 84, 106, 112, 123, 170, 171, 172, 189, 228, 233, 246, 340, 540, 574, 584, 587, 663, 668], "290": [81, 112, 115, 130, 145, 170, 185, 210, 228, 233, 246, 666], "370": [81, 137, 140, 170, 210, 233, 246, 272, 277], "380": [81, 233, 240], "430": [81, 233], "470": [81, 210, 228, 233], "490": [81, 210, 233], "520": [81, 233], "580": [81, 210, 233], "620": [81, 197], "630": [81, 233], "650": [81, 82, 147, 197, 213, 233], "680": [81, 197], "710": [81, 210, 246, 570], "720": [81, 167, 175, 188, 197, 210, 233, 246, 570], "730": [81, 130, 131, 197], "740": [81, 197, 233], "760": [81, 91, 93, 210, 233], "780": [81, 210], "790": [81, 91, 94, 210], "810": [81, 210], "830": [81, 233], "840": [81, 233], "870": [81, 218, 222, 233, 246, 690], "880": [81, 181, 210, 233, 246, 299, 300], "910": [81, 233], "920": [81, 101, 144, 196, 229], "930": [81, 153, 155, 210, 233], "940": [81, 233], "950": [81, 210, 233, 243], "970": [81, 101, 102], "990": [81, 210, 233], "351": [81, 170], "353": [81, 170, 210, 233], "355": [81, 170, 196, 228, 233], "356": [81, 170, 196, 197, 233], "357": [81, 170, 203], "358": [81, 170, 195, 210, 233], "369": [81, 170, 228, 246, 529, 666, 868], "182": [81, 170, 192, 197, 232], "361": [81, 117, 130, 170, 210, 237], "362": [81, 170, 196, 224, 228, 229, 233, 245], "363": [81, 170, 233, 242], "367": [81, 170, 196, 197, 201, 228], "368": [81, 170, 172, 233, 236], "371": [81, 170, 233], "372": [81, 106, 170, 228, 233], "373": [81, 170, 210, 228], "377": [81, 210, 233], "379": [81, 197, 228, 233], "382": [81, 85, 147, 149, 210, 228, 246, 666], "385": [81, 228], "386": [81, 233], "388": [81, 233, 246], "391": [81, 233], "393": [81, 91, 92, 228], "394": [81, 233, 688], "397": [81, 210, 228, 233], "405": [81, 197, 233], "406": [81, 228, 233], "407": [81, 228, 233], "409": [81, 119, 233, 246, 771], "mean_distance_limit": [81, 566], "0015": 81, "annotation_mov": 81, "hpi_disp": [81, 566], "disp": 81, "0015m": 81, "0038m": 81, "new_dev_head_t": 81, "show_ax": [81, 123, 125, 157, 158, 160, 183, 184, 315, 770, 803, 886], "outer_skin": [81, 109, 118, 157, 159, 160, 162, 173, 770, 861, 862, 868], "ctf_275": [81, 123, 185], "225": [81, 85, 127, 145, 170, 197, 210, 232, 233, 246, 862], "movement_detect": [81, 85], "contract": [82, 867], "clench": [82, 206], "jaw": [82, 206], "swallow": [82, 200, 206], "twitch": 82, "cranial": 82, "notic": [82, 84, 141, 142, 144, 146, 150, 151, 152, 157, 161, 163, 167, 168, 171, 176, 192, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 217, 219, 220, 223, 224, 583, 845], "annotate_muscle_zscor": [82, 876, 886], "taken": [82, 94, 138, 143, 193, 201, 205, 207, 208, 233, 236, 243, 259, 260, 268, 269, 271, 272, 276, 277, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 480, 481, 482, 540, 592, 612, 707, 718, 794, 807, 862, 867, 886], "analyt": [82, 113, 246, 266, 267, 268, 269, 481, 482, 886], "divid": [82, 101, 127, 143, 144, 145, 148, 149, 163, 166, 211, 228, 230, 233, 266, 267, 268, 269, 272, 273, 274, 277, 280, 281, 282, 289, 479, 481, 482, 522, 545, 546, 567, 570, 574, 594, 628, 683, 693, 696, 706, 708, 709, 710, 721, 729, 786, 810, 814, 841, 865, 869, 886], "squar": [82, 113, 128, 141, 150, 151, 152, 163, 169, 170, 179, 190, 203, 217, 223, 225, 228, 230, 241, 246, 263, 266, 267, 268, 269, 273, 274, 275, 277, 280, 281, 282, 299, 300, 329, 413, 420, 457, 481, 482, 537, 544, 561, 562, 577, 686, 691, 693, 694, 696, 697, 706, 707, 708, 710, 754, 771, 779, 780, 786, 788, 793, 795, 797, 800, 806, 809, 812, 814, 816, 817, 841, 865, 868, 871, 886], "hundr": [82, 206, 207, 471, 843], "bad_muscl": [82, 567], "min_length_good": [82, 567], "fraction": [82, 113, 145, 176, 200, 206, 228, 328, 535, 544, 562, 581, 701, 798, 867, 886], "notch": [82, 192, 204, 213, 349, 452, 481, 482], "1981": 82, "scores_muscl": [82, 567], "threshold_muscl": 82, "annot_muscl": 82, "filter_freq": [82, 567], "zscore": [82, 289, 545, 546, 562, 706, 709, 814], "144": [82, 170, 172, 197, 205, 210, 212, 228, 232, 233, 279, 886], "164": [82, 168, 170, 175, 188, 197, 203, 210, 228, 232, 233, 235, 246, 693, 694, 696, 697], "946": [82, 85], "196": [82, 85, 170, 232, 233], "muscle_detect": [82, 85], "gross": [83, 246, 413], "widespread": [83, 206], "recover": 83, "ubiquit": 83, "postur": [83, 206], "mainten": [83, 208, 845, 886], "appropri": [83, 147, 150, 163, 167, 183, 184, 191, 202, 206, 208, 211, 223, 228, 230, 232, 243, 246, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 320, 326, 362, 391, 392, 481, 482, 526, 540, 692, 754, 778, 807, 812, 817, 843, 845, 860, 865, 868, 871, 886], "wouldn": [83, 886], "pronounc": [83, 203, 865], "simultan": [83, 138, 143, 193, 197, 204, 206, 220, 421, 471, 505, 524, 608, 616, 695, 862, 868, 874, 886], "18019": 83, "1983": [83, 205, 246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 561, 609, 706, 709], "18020": 83, "exclus": [83, 171, 201, 206, 498, 557, 562, 798, 800, 801, 886], "mdash": [83, 206], "plot_sourc": [83, 206, 266, 267, 481, 482, 562, 784, 801, 807, 886], "85861": 83, "103880": 83, "criteria": [83, 141, 167, 202, 207, 208, 212, 259, 266, 267, 276, 557, 562, 886], "slope": [83, 189, 203, 258, 259, 271, 343, 344, 506, 562, 886], "peripher": [83, 562], "pole": [83, 161], "foci": [83, 754, 886], "blob": [83, 236, 237], "worth": [83, 101, 150, 229, 246, 396, 489, 496, 845, 862, 863, 865], "fire": 83, "fuzzi": 83, "textbook": [83, 207, 246, 688], "temporali": 83, "ear": [83, 167, 171, 181, 862], "muscle_idx": [83, 562], "log_scal": [83, 562, 799], "blink_idx": 83, "heartbeat_idx": 83, "muscle_idx_auto": 83, "find_bads_muscl": [83, 562, 886], "s001r01": 83, "529": [83, 233], "s002": [83, 206], "s002r01": 83, "dhani": [83, 246, 562], "dharmaprani": [83, 246, 562], "hoang": [83, 246, 562], "nguyen": [83, 246, 562], "trent": [83, 246, 562], "lewi": [83, 246, 562, 868], "delosangel": [83, 246, 562], "willoughbi": [83, 246, 562], "kenneth": [83, 145, 246, 437, 562], "pope": [83, 246, 562], "38th": [83, 246, 562], "annual": [83, 208, 246, 562, 870], "confer": [83, 145, 246, 437, 562, 870], "societi": [83, 191, 246, 356, 529, 562, 735, 738, 868], "embc": [83, 206, 246, 562], "828": [83, 233, 246, 562], "orlando": [83, 246, 562], "fl": [83, 246, 562], "usa": [83, 200, 246, 562], "7590828": [83, 246, 562], "696": [83, 85, 233], "muscle_ica": [83, 85], "otp": [84, 85, 602], "flux": [84, 211, 213, 266, 267, 268, 269, 481, 482, 559, 706, 708, 709, 710, 868], "jump": [84, 112, 145, 200, 211, 693, 694, 696, 697, 886], "bst_phantom_elekta": [84, 184], "phantom": [84, 166, 187, 188, 246, 263, 264, 266, 268, 269, 271, 304, 356, 361, 392, 433, 454, 456, 481, 492, 494, 526, 594, 770, 782, 794, 822, 862, 868, 886], "rid": [84, 232], "1522": [84, 170], "dipole_numb": 84, "kojak_all_200nam_pp_no_chpi_no_ms_raw": [84, 184], "47000": [84, 184], "437999": [84, 184], "alongsid": [84, 146, 150, 156, 201, 206, 207, 209, 218, 805, 841, 852], "oversampled_temporal_project": [84, 876, 886], "lump": [84, 594], "compute_bia": 84, "sti201": [84, 184, 271], "make_sphere_model": [84, 125, 157, 184, 185, 186, 209, 519, 868, 876, 886], "r0": [84, 125, 157, 184, 185, 186, 526], "head_radiu": [84, 125, 157, 184, 185, 186, 526, 886], "036": [84, 141, 150, 170, 184, 225, 246, 666], "actual_po": [84, 184, 186], "get_phantom_dipol": [84, 184, 392, 876, 886], "1fmm": 84, "worst": [84, 121, 356, 361, 662, 664, 665, 886], "bias_clean": 84, "9mm": 84, "2mm": [84, 868], "4mm": 84, "samu": [84, 163, 211, 246, 573, 594, 602, 671, 865, 886], "taulu": [84, 163, 211, 246, 434, 573, 594, 602, 671, 865, 886], "1013": [84, 170, 246, 602], "2734641": [84, 246, 602], "116": [84, 85, 170, 197, 210, 232], "628": [85, 233], "auto_examples_preprocess": 85, "virtual_evok": [85, 87], "xdawn_denois": [85, 88], "shift_evok": [85, 86], "hut": 86, "2332": [86, 170, 556], "ax3": [86, 90, 99, 184, 196], "magnomet": 87, "virt_evok": 87, "as_typ": [87, 266, 267, 268, 269, 886], "plot_epochs_imag": [88, 117, 562, 797, 799, 876, 886], "signal_cov": [88, 563], "xd": 88, "1388": 88, "41640": 88, "epochs_denois": 88, "brief": [90, 95, 167, 200, 220, 228, 845], "simplest": [90, 95, 169, 197, 213, 228, 868], "kostiantyn": [90, 94, 95, 246, 666, 886], "maksymenko": [90, 94, 95, 246, 666, 886], "functool": [90, 228, 273, 274, 277, 280, 281, 282, 845], "partial": [90, 150, 152, 167, 202, 217, 218, 228, 246, 266, 267, 273, 274, 277, 280, 281, 282, 320, 596, 735, 738, 754, 778, 819, 823, 862, 874, 886], "region_localization_error": [90, 876], "f1_score": [90, 876], "precision_scor": [90, 876], "recall_scor": [90, 876], "cosine_scor": [90, 876], "peak_position_error": [90, 876], "spatial_deviation_error": [90, 876], "determinist": [90, 206, 886], "middl": [90, 95, 112, 135, 161, 167, 203, 207, 223, 264, 271, 273, 274, 277, 280, 281, 282, 449, 773, 782, 812, 817, 818, 845, 868, 886], "frontal": [90, 95, 167, 200, 206, 208, 217, 225, 307, 641, 754], "selected_label": [90, 95], "term": [90, 103, 126, 135, 167, 169, 196, 203, 207, 228, 232, 238, 243, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 332, 343, 379, 380, 381, 390, 481, 482, 537, 549, 571, 576, 666, 706, 709, 721, 729, 841, 845, 862, 867, 868, 869, 874, 886], "label_region": 90, "select_sourc": [90, 95, 876, 886], "1915": 90, "One": [90, 96, 97, 100, 142, 144, 150, 151, 152, 156, 158, 167, 172, 179, 192, 203, 205, 206, 213, 217, 228, 246, 266, 267, 268, 269, 276, 314, 316, 440, 446, 481, 482, 562, 688, 695, 772, 784, 785, 801, 807, 845, 861, 868, 870, 871, 886], "label_dipol": 90, "source_time_seri": [90, 94, 95], "sin": [90, 92, 93, 94, 95, 114, 203, 223, 224, 225, 343, 603, 672], "n_event": [90, 95, 261, 266, 267, 271, 276, 285, 365, 441, 442, 454, 481, 482, 498, 523, 557, 565, 586, 608, 618, 620, 621, 656, 692, 709, 784, 787, 831, 841], "sourcesimul": [90, 94, 95, 671, 876, 886], "source_simulator_region": 90, "add_data": [90, 94, 95, 116, 273, 274, 277, 280, 281, 282, 656, 754, 812, 817], "source_simulator_dipol": 90, "gaussian": [90, 94, 114, 121, 153, 162, 163, 203, 206, 224, 228, 266, 267, 268, 269, 476, 592, 660, 722, 732, 735, 736, 738, 785, 794, 815, 861, 865, 868], "raw_region": 90, "simulate_raw": [90, 93, 94, 95, 225, 658, 659, 670, 672, 673, 876, 886], "make_ad_hoc_cov": [90, 93, 95, 225, 263, 300, 876, 886], "add_nois": [90, 93, 94, 95, 225, 658, 659, 671, 876, 886], "iir_filt": [90, 92, 93, 95, 225, 660, 670], "raw_dipol": 90, "cos2": [90, 93, 94, 95, 225, 657, 658, 659, 671], "498": [90, 228], "evoked_region": 90, "evoked_dipol": 90, "stc_true_region": 90, "get_stc": [90, 94, 656], "start_sampl": [90, 217, 656], "stop_sampl": [90, 217, 656], "stc_true_dipol": 90, "stc_est_region": 90, "stc_est_dipol": 90, "0004": 90, "2931": 90, "34986e": 90, "scorer": [90, 419, 430, 886], "rle": [90, 666], "region_result": 90, "thx": 90, "per_sampl": [90, 661, 662, 663, 664, 665, 666, 667, 668], "ax4": 90, "col": [90, 112, 754, 886], "super": [90, 243], "ticklabel_format": 90, "style": [90, 127, 135, 151, 152, 172, 189, 212, 258, 261, 263, 266, 267, 268, 269, 276, 281, 282, 299, 413, 419, 420, 472, 481, 482, 506, 561, 562, 706, 708, 709, 710, 754, 770, 771, 778, 785, 786, 789, 791, 792, 793, 801, 802, 807, 809, 814, 815, 816, 818, 886], "sci": [90, 212, 598], "scilimit": 90, "tweak": [90, 114, 127, 243, 843, 863, 865], "dipole_result": 90, "934": [90, 91], "plot_stc_metr": [90, 91], "auto_examples_simul": 91, "simulated_raw_data_using_subject_anatomi": [91, 94], "simulate_raw_data": [91, 93], "simulate_evoked_data": [91, 92], "source_simul": [91, 94, 95], "292": [91, 95, 112, 170, 228], "fit_iir_model_raw": [92, 111, 876, 886], "templat": [92, 93, 125, 135, 136, 156, 158, 164, 165, 166, 171, 177, 233, 246, 270, 271, 279, 286, 304, 314, 318, 319, 320, 330, 331, 332, 336, 367, 375, 391, 438, 482, 496, 525, 577, 591, 613, 636, 655, 770, 822, 841, 859, 886], "read_proj": [92, 111, 131, 143, 192, 207, 266, 267, 268, 269, 276, 481, 482, 837, 876], "sample_audvis_ecg": [92, 111, 131, 143, 173, 207, 258], "randomst": [92, 93, 94, 114, 160, 196, 203, 225, 228, 515, 562, 592, 611, 658, 659, 660, 669, 670, 672, 693, 694, 695, 696, 697, 886], "randn": [92, 114, 160, 196, 203, 225, 228, 236, 237, 238], "high_resolut": [92, 813], "wronkiewicz": [93, 886], "wronk": 93, "add_ecg": [93, 94, 659, 671, 876, 886], "add_eog": [93, 94, 658, 671, 876, 886], "epoch_dur": [93, 570], "stagger": 93, "sinusoid": [93, 94, 114, 184, 185, 203, 210, 223, 225, 343, 452, 481, 482, 672, 841], "10hz": 93, "global": [93, 113, 121, 128, 143, 145, 150, 151, 156, 163, 167, 184, 208, 246, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 437, 752, 778, 785, 788, 791, 793, 794, 812, 817, 841, 845, 865, 886], "n_samp": [93, 217, 225, 886], "25e": 93, "1e9": [93, 185, 225], "plt_show": [93, 181, 228], "input": [93, 94, 114, 156, 173, 189, 196, 197, 203, 208, 211, 217, 228, 232, 233, 238, 258, 266, 267, 268, 269, 272, 273, 274, 277, 280, 281, 282, 285, 316, 332, 357, 358, 359, 363, 370, 413, 414, 416, 417, 419, 420, 421, 423, 425, 430, 437, 442, 448, 470, 472, 473, 478, 481, 482, 506, 508, 562, 563, 571, 572, 574, 575, 579, 580, 583, 584, 589, 607, 621, 672, 683, 685, 692, 693, 694, 696, 697, 704, 706, 724, 725, 754, 755, 757, 758, 770, 778, 785, 789, 793, 801, 812, 815, 817, 861, 867, 868, 871, 886], "millimet": [93, 94, 157, 161, 183, 214, 337, 341, 456, 471, 497, 515, 618, 868, 886], "calc": 93, "orphan": 93, "ivana": [94, 886], "kojcic": [94, 886], "deslauri": [94, 95, 886], "gauthier": [94, 95, 886], "sam": [94, 95, 886], "doesn": [94, 141, 157, 171, 172, 206, 208, 209, 211, 217, 230, 233, 243, 379, 380, 381, 382, 384, 385, 386, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 551, 562, 565, 580, 585, 594, 614, 653, 707, 709, 726, 799, 845, 853, 861, 865, 886], "fname_info": 94, "g_temp_sup": 94, "g_t_transv": 94, "s_calcarin": 94, "vice": [94, 134, 161, 203, 277, 868], "versa": [94, 134, 161, 203, 277, 868], "moreov": [94, 138, 207, 208, 228], "ipsilater": [94, 152, 177], "activation_list": 94, "region_nam": 94, "latenc": [94, 144, 145, 146, 150, 233, 246, 268, 269, 273, 274, 277, 280, 281, 282, 437, 693, 694, 696, 697, 789, 886], "sigma": [94, 117, 128, 138, 143, 197, 228, 266, 267, 526, 699, 700, 722, 732, 744, 785, 815, 868, 871], "gf": 94, "rand": [94, 225], "100m": 94, "30m": 94, "15m": 94, "region_id": 94, "events_tmp": 94, "label_tmp": 94, "amplitude_tmp": 94, "latency_tmp": 94, "wf_tmp": 94, "evoked_aud_left": 94, "evoked_vis_right": 94, "mere": [94, 173, 206, 624, 867], "stc_aud": 94, "stc_vi": 94, "stc_diff": 94, "49264": [94, 179], "64e": [94, 179], "3254294": 94, "92023613": 94, "51105546": 94, "christoph": [94, 115, 152, 156, 196, 246, 356, 419, 690, 886], "destrieux": [94, 156, 246], "ander": [94, 156, 179, 246, 529, 868], "dale": [94, 156, 179, 246, 529, 868], "halgren": [94, 156, 246, 529], "sulci": [94, 156, 161, 224, 246], "nomenclatur": [94, 156, 217, 246], "sine": [95, 223, 258, 721, 729], "everi": [95, 103, 113, 127, 135, 142, 145, 152, 169, 173, 176, 197, 204, 205, 206, 220, 243, 261, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 350, 462, 470, 478, 479, 481, 482, 515, 562, 564, 579, 580, 592, 611, 658, 659, 660, 669, 670, 672, 693, 694, 695, 696, 697, 706, 709, 845, 865, 866], "significantli": [96, 97, 100, 228, 231, 236, 237, 243, 273, 274, 277, 280, 281, 282, 693, 694, 696, 697, 867], "permutation_cluster_test": [96, 228, 231, 232, 697, 876, 886], "1332": [96, 97, 146, 167, 170, 230, 231, 232], "epochs1": [96, 236, 436], "condition1": [96, 236], "epochs2": [96, 236, 436], "condition2": [96, 236], "t_ob": [96, 229, 230, 236, 693, 695, 696, 886], "cluster_p_valu": [96, 230, 231, 232, 236, 237, 238], "n_permut": [96, 100, 112, 228, 229, 230, 231, 232, 233, 237, 238, 693, 694, 695, 696, 697], "tail": [96, 112, 152, 228, 230, 231, 232, 233, 236, 243, 264, 693, 694, 695, 696, 697, 782, 813, 886], "out_typ": [96, 112, 228, 230, 231, 232, 693, 694, 696, 697, 886], "stat_fun": [96, 112, 113, 228, 229, 230, 231, 232, 233, 236, 237, 238, 685, 693, 694, 696, 697], "000227": 96, "167093": 96, "2382": 96, "206": [96, 112, 170, 207, 228, 232], "3028": 96, "296": [96, 112, 170, 233], "2896": 96, "2840": 96, "2964": 96, "645": [96, 184, 233], "3200": 96, "3416": 96, "942": [96, 210, 233], "3539": 96, "3492": 96, "3428": 96, "erf": [96, 117, 128, 192, 200, 203, 233, 246, 562, 797, 799, 852, 886], "i_c": 96, "606": [96, 102, 106, 145, 157, 197, 210, 233], "cluster_stats_evok": [96, 102], "discoveri": [97, 232, 246, 690, 886], "bonferroni_correct": [97, 228, 876, 886], "fdr_correct": [97, 101, 228, 232, 876], "pval": [97, 232, 684, 690, 693, 694, 696, 697], "ttest_1samp": [97, 228, 699], "n_test": [97, 695], "threshold_uncorrect": 97, "ppf": [97, 212, 228, 230, 233, 236, 237, 596, 693, 694, 696, 697], "reject_bonferroni": 97, "pval_bonferroni": 97, "threshold_bonferroni": 97, "reject_fdr": 97, "pval_fdr": 97, "indep": [97, 690], "threshold_fdr": 97, "xmin": 97, "xmax": 97, "hline": [97, 142, 268, 269, 788], "uncorrect": [97, 228], "bonferroni": [97, 452, 481, 482, 684, 695, 886], "fdr_stats_evok": [97, 102], "generalis": 99, "tradit": [99, 144, 209, 213, 733, 734, 736, 737, 778], "predictor": [99, 142, 228, 561, 609, 692], "inapplic": 99, "rerp": [99, 246, 692], "smith": [99, 126, 228, 229, 246, 390, 692, 693, 694, 696, 697], "kuta": [99, 246, 692], "169": [99, 170, 197, 228, 232, 246, 692], "jona": [99, 101, 128, 197, 233, 246, 693, 694, 696, 697, 886], "sassenhagen": [99, 101, 128, 197, 233, 246, 693, 694, 696, 697, 886], "linear_regression_raw": [99, 102, 876, 886], "rerf": 99, "param": [99, 113, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 551, 563, 633, 886], "093": [99, 102], "permutation_t_test": [100, 228, 876], "temporal_mask": 100, "logical_and": [100, 114], "50000": 100, "p_valu": [100, 228, 233, 452, 481, 482, 695], "significant_sensor": 100, "significant_sensors_nam": 100, "49999": 100, "0243": [100, 143, 170], "1323": [100, 170], "1333": [100, 170, 236, 238], "1643": [100, 170], "2423": [100, 170], "2622": [100, 170], "2632": [100, 170], "2642": [100, 170], "2643": [100, 170], "stats_pick": 100, "cbar_fmt": [100, 109, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 706, 708, 710, 786, 793, 797, 806, 809, 814, 886], "sensor_permutation_test": [100, 102], "psycholinguist": [101, 228], "st\u00e9phane": [101, 229, 246, 396, 862], "dufau": [101, 229, 246, 396, 862], "grainger": [101, 229, 246, 396, 862], "katherin": [101, 229, 246, 396, 735, 738, 862], "midglei": [101, 229, 246, 396, 862], "phillip": [101, 142, 229, 246, 391, 396, 862, 886], "holcomb": [101, 229, 246, 396, 862], "pictur": [101, 229, 246, 276, 396, 862], "snapshot": [101, 173, 229, 246, 396, 824, 845, 862, 886], "megastudi": [101, 229, 246, 396, 862], "psycholog": [101, 229, 246, 396, 862], "1887": [101, 229, 246, 396, 862], "1897": [101, 229, 246, 396, 862], "0956797615603934": [101, 229, 246, 396, 862], "matt": [101, 246, 886], "davi": [101, 246], "ford": [101, 246], "friedmann": [101, 246], "pulverm\u00fcl": [101, 246], "william": [101, 196, 246, 419], "marslen": [101, 246], "wilson": [101, 246], "1383": [101, 246], "1400": [101, 246], "2006": [101, 179, 196, 211, 246, 266, 267, 540, 594, 663, 668, 735, 738], "2005": [101, 163, 196, 211, 246, 434, 540, 573, 594, 663, 666, 668, 865], "048": [101, 141, 143, 150, 170, 184, 220, 225, 229, 246, 720, 722, 732, 736], "tal": [101, 120, 126, 246, 489, 496, 886], "linzen": [101, 120, 886], "pd": [101, 112, 137, 144, 152, 191, 192, 211], "kiloword": [101, 144, 217, 229, 876], "kword_metadata": [101, 144, 229], "epo": [101, 141, 144, 173, 229, 258, 266, 267, 617, 886], "read_epoch": [101, 141, 144, 229, 865, 868, 876, 886], "visualcomplex": [101, 144], "film": [101, 144, 229, 874], "783710": [101, 144], "cent": [101, 144], "141553": [101, 144], "shot": [101, 144], "600033": [101, 144], "cold": [101, 144], "657457": [101, 144], "945661": [101, 144], "characterist": [101, 152, 203, 204, 246, 266, 267, 405, 436, 448, 583, 841], "concret": [101, 144, 145], "imagin": [101, 112, 207], "df": [101, 112, 141, 146, 192, 217, 228, 229, 230, 236, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 545, 693, 696, 706, 708, 709, 710], "cut": [101, 112, 113, 181, 207, 243, 258, 266, 267, 268, 269, 415, 424, 449, 451, 481, 482, 574, 575, 585, 588, 594, 598, 853, 871, 886], "split_legend": [101, 233, 778], "percentil": [101, 135, 136, 137, 147, 266, 267, 273, 274, 276, 277, 280, 281, 282, 481, 482, 742, 773, 778, 784, 807, 812, 817, 818, 886], "gfp": [101, 113, 128, 143, 145, 151, 163, 167, 192, 233, 266, 267, 268, 269, 537, 778, 785, 788, 794, 811, 841, 865, 886], "7424": 101, "plot_evoked_imag": [101, 876, 886], "null": [101, 285, 439, 688, 886], "hypothesi": [101, 173, 229, 684, 688, 690, 695, 874], "colour": [101, 177, 886], "palett": [101, 112, 146], "dark": [101, 135, 173, 266, 267, 481, 482, 562, 754, 784, 801, 807, 886], "reject_h0": 101, "fdr_pval": 101, "plot_imag": [101, 128, 143, 144, 147, 151, 167, 200, 202, 212, 229, 266, 267, 268, 269, 886], "sensor_regress": [101, 102], "auto_examples_stat": 102, "csd_fourier": [103, 707, 711, 712, 713, 715, 716, 876, 886], "csd_multitap": [103, 707, 711, 712, 713, 714, 715, 724, 876, 886], "core": [103, 145, 167, 169, 172, 190, 223, 246, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 284, 356, 357, 359, 361, 416, 423, 426, 429, 430, 456, 469, 471, 481, 482, 521, 524, 525, 535, 536, 545, 546, 567, 574, 575, 594, 646, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 786, 789, 808, 843, 844, 845, 852, 867, 886], "clariti": [103, 872], "722": [103, 197, 233, 246, 722, 732, 733, 736], "adapt": [103, 113, 167, 191, 209, 225, 228, 246, 266, 267, 268, 269, 299, 300, 418, 452, 453, 481, 482, 535, 536, 562, 594, 708, 710, 713, 716, 722, 724, 732, 750, 786, 845, 851, 862, 867, 886], "csd_fft": 103, "csd_mt": 103, "convolv": [103, 111, 203, 228, 243, 419, 426], "600hz": 103, "10th": 103, "greatli": 103, "minim": [103, 142, 170, 203, 223, 243, 266, 267, 362, 421, 436, 572, 692, 734, 737, 754, 843, 865, 868], "csd_wav": 103, "crossspectraldens": [103, 292, 299, 319, 438, 711, 712, 713, 714, 715, 716, 717, 723, 726, 780, 876, 886], "trick": [103, 201, 243, 246, 695, 849, 886], "comma": [103, 258, 845, 886], "plot_dict": [103, 242], "505": [103, 106, 197, 210, 228, 233], "221": [103, 147, 170, 197, 210, 228, 233], "compute_csd": [103, 106], "taper": [104, 114, 266, 267, 268, 269, 418, 426, 452, 481, 482, 535, 536, 708, 710, 713, 716, 718, 722, 724, 732, 734, 736, 737, 786, 886], "prolat": [104, 241, 246, 266, 267, 268, 269, 481, 482, 708, 710, 718, 724], "spheroid": [104, 241, 246, 266, 267, 268, 269, 481, 482, 708, 710, 718, 724], "sequenc": [104, 138, 246, 258, 266, 267, 268, 269, 481, 482, 683, 708, 710, 718, 754, 786, 862, 868], "compute_source_psd_epoch": [104, 106, 535, 876, 886], "n_epochs_us": 104, "psd_avg": 104, "set_xlim": [104, 113, 152, 207], "479": [104, 106, 210, 233], "auto_examples_time_frequ": 106, "source_power_spectrum_opm": [106, 109], "202": [106, 109, 112, 170, 210, 228, 229, 232, 233, 871, 886], "time_frequency_global_field_pow": [106, 113], "029": [106, 113, 128, 141, 150, 170, 225, 246], "time_frequency_erd": [106, 112, 886], "time_frequency_simul": [106, 114], "source_label_time_frequ": [106, 107], "source_space_time_frequ": [106, 110], "source_power_spectrum": [106, 108], "temporal_whiten": [106, 111], "925": [106, 111, 197, 233], "former": [107, 143, 232, 356, 562, 867, 886], "latter": [107, 143, 152, 169, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 563, 868], "source_induced_pow": [107, 876, 886], "epochs_induc": 107, "subtract_evok": [107, 113, 205, 266, 267, 609, 886], "this_epoch": 107, "inter": [107, 135, 246, 263, 266, 267, 268, 269, 275, 284, 413, 420, 437, 481, 482, 561, 562, 577, 658, 706, 708, 710, 733, 734, 736, 737, 771, 786, 793, 797, 806, 809, 814, 816], "itc": [107, 733, 734, 735, 736, 737, 738], "baseline_mod": [107, 545, 546], "compute_source_psd": [108, 109, 536, 876, 886], "100hz": 108, "2048": [108, 111, 114, 133, 266, 267, 268, 269, 412, 481, 482, 535, 808], "psd_dspm": 108, "neuromag": [109, 157, 159, 161, 167, 169, 184, 186, 201, 208, 211, 217, 218, 219, 258, 259, 264, 266, 267, 268, 269, 271, 276, 322, 433, 454, 481, 482, 492, 498, 506, 512, 594, 616, 641, 708, 710, 784, 787, 792, 807, 841, 857, 862, 868, 871, 886], "welch": [109, 225, 241, 242, 243, 246, 266, 267, 268, 269, 481, 482, 708, 710, 725, 808, 886], "next_fast_len": 109, "src_fname": [109, 236, 237, 238], "vv_fname": 109, "squid_resting_st": 109, "vv_erm_fnam": 109, "squid_empty_room": 109, "vv_trans_fnam": 109, "opm_fnam": 109, "opm_resting_state_raw": 109, "opm_erm_fnam": 109, "opm_empty_room_raw": 109, "opm_tran": 109, "opm_coil_def_fnam": 109, "vv": 109, "simplifi": [109, 180, 203, 246, 258, 266, 267, 268, 269, 481, 482, 865, 866, 886], "housekeep": [109, 213], "raw_erm": [109, 129, 185, 192, 861], "new_sfreq": 109, "nyquist": [109, 203, 204, 886], "meg2233": 109, "meg1842": 109, "hold": [109, 192, 225, 228, 266, 267, 268, 269, 434, 481, 482, 583, 594, 704, 788, 808, 810, 841, 868, 874], "61999": 109, "60999": 109, "dist": [109, 157, 158, 212, 224, 258, 272, 279, 284, 367, 432, 465, 600, 676, 677, 678, 680, 681, 871], "make_bem_solut": [109, 159, 192, 367, 432, 463, 519, 525, 526, 613, 614, 643, 645, 834, 861, 868, 876, 886], "169022": 109, "169992": 109, "2052": 109, "995623": 109, "029776": 109, "088592": 109, "062622": 109, "916188": 109, "395825": 109, "069381": 109, "399641": 109, "914042": 109, "993107": 109, "074371": 109, "090590": 109, "079171": 109, "995577": 109, "050589": 109, "086427": 109, "057412": 109, "994603": 109, "691": [109, 197, 233], "334": [109, 170], "476": [109, 233, 246, 413], "percentag": [109, 206, 266, 267, 564, 662, 663, 664, 665, 666, 668, 742, 783, 886], "freq_band": [109, 138], "topo": [109, 115, 143, 151, 212, 242, 266, 267, 757, 767, 778, 815, 874, 886], "stc_psd": [109, 535], "sensor_psd": [109, 535], "return_sensor": [109, 535, 536], "topo_norm": 109, "keepdim": [109, 138], "stc_norm": 109, "3660": 109, "014611": 109, "18765e": 109, "291": [109, 112, 170, 210, 233], "34378": 109, "07671e": 109, "3720": 109, "1698": 109, "007069": 109, "0841e": 109, "46031": 109, "26253e": 109, "coverag": 109, "worthwhil": [109, 152, 206], "plot_band": 109, "inferno": [109, 137, 228], "cau": 109, "show_trac": [109, 127, 136, 273, 274, 277, 280, 281, 282, 754, 812, 817, 886], "fig_alpha": 109, "brain_alpha": [109, 274, 280, 282, 817], "7045685": 109, "96394224": 109, "07428314": 109, "profil": [109, 172, 213, 843, 845], "beneath": 109, "fig_beta": 109, "brain_beta": 109, "18935281": 109, "33488802": 109, "88328023": 109, "fig_beta_opm": 109, "brain_beta_opm": 109, "28867831": 109, "68102302": 109, "87342874": 109, "source_band_induced_pow": [110, 876, 886], "use_fft": [110, 112, 242, 426, 545, 546, 712, 715, 731, 733, 734, 736, 737], "induced_power_": 110, "607": [110, 233], "proj_fnam": [111, 192], "20000": 111, "innov": 111, "d_": 111, "lfilter": [111, 266, 267, 268, 269, 448, 449, 451, 452, 481, 482], "regener": [111, 266, 267, 886], "r_": [111, 663, 668, 868], "dummi": [111, 125, 223, 238], "nfft": [111, 225], "written": [112, 172, 173, 176, 193, 210, 219, 262, 305, 309, 445, 446, 480, 481, 482, 628, 634, 831, 836, 839, 852, 861, 874, 886], "desynchron": [112, 242, 246, 862], "conceptu": [112, 152, 203, 206, 246], "ersp": [112, 886], "perturb": 112, "goal": [112, 135, 138, 845, 863, 867, 874], "35hz": 112, "customari": [112, 868], "klotzsch": [112, 886], "cb": 112, "mpg": 112, "twoslopenorm": 112, "seaborn": [112, 146, 211], "sn": [112, 146, 211], "tfr_multitap": [112, 114, 242, 426, 733, 734, 735, 736, 738, 876, 886], "permutation_cluster_1samp_test": [112, 228, 230, 696, 876, 886], "pcluster_test": 112, "961": [112, 161, 210, 233], "suitabl": [112, 147, 160, 162, 230, 232, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 308, 355, 375, 412, 437, 468, 481, 482, 505, 519, 693, 706, 708, 709, 710, 841, 861, 862, 868, 874], "cnorm": [112, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 886], "asymmetr": [112, 769], "rdbu": 112, "equal": [112, 141, 148, 149, 150, 152, 166, 169, 173, 176, 177, 181, 200, 203, 219, 220, 236, 238, 261, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 288, 299, 300, 319, 355, 356, 360, 361, 371, 372, 373, 413, 420, 421, 426, 436, 438, 456, 457, 470, 476, 478, 479, 481, 482, 498, 522, 529, 540, 545, 546, 561, 562, 574, 580, 592, 599, 600, 625, 662, 687, 688, 693, 694, 696, 697, 698, 700, 701, 706, 708, 709, 710, 725, 771, 772, 778, 782, 785, 786, 787, 788, 790, 793, 794, 809, 810, 814, 816, 841, 867, 868, 872, 886], "promin": [112, 144, 200, 212, 214, 243, 357, 358, 359], "extrem": [112, 143, 243, 268, 269, 299, 300, 323, 356, 360, 361, 371, 372, 373, 413, 420, 421, 456, 457, 476, 478, 479, 540, 693, 694, 696, 697, 794], "vcenter": 112, "step_down_p": [112, 693, 694, 696, 697], "buffer_s": [112, 228, 232, 233, 236, 237, 238, 532, 693, 694, 696, 697], "tfr_ev": 112, "gridspec_kw": [112, 127, 177, 212], "width_ratio": [112, 177, 212], "stack": [112, 142, 225, 236, 653, 749, 751, 849, 850, 853], "mask_styl": [112, 268, 269, 706, 790], "set_yscal": 112, "724718": 112, "552076": 112, "183231": 112, "287": [112, 170, 210, 233], "271": [112, 167, 170, 210, 228, 233], "285": [112, 170, 233], "282": [112, 170, 233], "311": [112, 170, 210, 233], "276": [112, 170, 233], "528367": 112, "706422": 112, "308": [112, 170, 175, 196, 223, 227], "217": [112, 169, 170, 219, 222, 228, 233], "233": [112, 170, 210, 228, 232, 233], "242": [112, 120, 130, 170, 228, 232, 233, 886], "254": [112, 170, 228, 232, 233], "259": [112, 170, 206, 210, 216, 228, 233, 246, 868], "581589": 112, "346448": 112, "255": [112, 114, 127, 161, 170, 210, 232, 243, 273, 274, 277, 280, 281, 282, 754, 773, 812, 817, 818], "307": [112, 113, 170, 210, 228, 233], "713872": 112, "754759": 112, "360704": 112, "229": [112, 170, 228, 232], "241": [112, 123, 170, 204, 232, 233, 452, 481, 482], "992503": 112, "416450": 112, "044340": 112, "070444": 112, "279": [112, 170, 204, 246, 562, 735, 738], "269": [112, 137, 170, 233], "epochstfr": [112, 114, 294, 533, 706, 717, 728, 736, 737, 739, 876, 886], "datafram": [112, 141, 148, 149, 150, 152, 166, 191, 192, 211, 217, 229, 241, 260, 261, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 437, 481, 482, 500, 621, 692, 706, 708, 709, 710, 868, 886], "to_data_fram": [112, 137, 141, 146, 150, 217, 229, 260, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 708, 709, 710, 868, 886], "0000": [112, 845], "473093": 112, "474571": 112, "764021": 112, "9875": 112, "491659": 112, "480088": 112, "762445": 112, "9750": [112, 886], "500872": 112, "469376": 112, "749421": 112, "9625": 112, "500605": 112, "449373": 112, "728686": 112, "9500": 112, "515911": 112, "443439": 112, "719536": 112, "lineplot": [112, 146], "confid": [112, 113, 143, 146, 152, 167, 177, 208, 264, 271, 562, 685, 708, 710, 778, 799, 866, 886], "long_format": [112, 146, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 708, 709, 710, 886], "freq_bound": 112, "delta": [112, 138, 203, 266, 267, 268, 269, 478, 481, 482, 545, 708, 710, 786], "theta": [112, 113, 138, 266, 267, 268, 269, 481, 482, 708, 710, 786], "freq_bands_of_interest": 112, "remove_unused_categori": 112, "reorder_categori": 112, "facetgrid": 112, "margin_titl": 112, "n_boot": 112, "axline_kw": 112, "dash": [112, 141, 151, 173, 204, 207, 211, 212, 220, 263, 266, 267, 268, 269, 481, 482, 708, 710, 778, 779, 805, 808, 886], "set_axis_label": 112, "col_templ": 112, "col_nam": [112, 271, 871], "row_templ": 112, "row_nam": [112, 270, 871], "add_legend": [112, 754], "df_mean": 112, "queri": [112, 141, 146, 150, 166, 221, 229, 241, 261, 266, 267, 440, 709], "groupbi": [112, 146, 152, 229], "reset_index": [112, 146], "col_ord": 112, "violinplot": [112, 146], "deep": [112, 138, 146, 159, 182, 203, 246, 266, 267, 268, 269, 290, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 481, 482, 559, 560, 563, 706, 708, 709, 710, 751, 754, 770, 868, 886], "hue_ord": 112, "gert": [112, 246], "pfurtschel": [112, 246], "fernando": [112, 246, 861], "lope": [112, 246, 861], "da": [112, 246, 861], "silva": [112, 246, 861], "principl": [112, 204, 228, 233, 246, 863, 868], "1842": [112, 170, 246], "1857": [112, 246], "00141": [112, 246], "bernhard": [112, 246, 476], "graimann": [112, 246], "jane": [112, 246], "huggin": [112, 246], "simon": [112, 246, 886], "levin": [112, 246], "ecog": [112, 115, 135, 136, 139, 140, 166, 170, 217, 223, 228, 246, 266, 267, 268, 269, 271, 277, 279, 313, 314, 323, 373, 375, 384, 442, 446, 481, 482, 496, 559, 560, 590, 636, 651, 701, 706, 708, 709, 710, 754, 770, 810, 822, 824, 841, 842, 852, 868, 886], "00697": [112, 246], "exposur": [112, 206, 246, 845], "tone": [112, 167, 246, 862], "1993": [112, 179, 246], "90110": [112, 246], "rectifi": 113, "uncertainti": [113, 241, 246, 266, 267, 268, 269, 481, 482, 708, 710, 718, 724, 852], "importantli": [113, 114, 202, 861], "hari": [113, 114, 126, 179, 246, 886], "neuromagnet": [113, 206, 246, 562], "1997": [113, 181, 207, 208, 228, 246, 299, 300, 659, 722, 732, 733, 736, 868], "s0166": [113, 246], "2236": [113, 246], "10065": [113, 246], "bradlei": [113, 246], "efron": [113, 246], "trevor": [113, 246], "hasti": [113, 246], "institut": [113, 246, 735, 738], "mathemat": [113, 152, 177, 201, 203, 211, 228, 246, 510, 529, 693, 735, 738, 845, 861, 868, 886], "monograph": [113, 246], "cambridg": [113, 152, 246, 356], "univers": [113, 246, 257, 356, 452, 862, 867, 873, 886], "york": [113, 203, 246, 257, 452, 873, 886], "isbn": [113, 152, 203, 225, 246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 299, 300, 356, 481, 482, 688, 706, 709], "14989": [113, 246], "web": [113, 147, 206, 214, 243, 246, 276, 550, 762, 874, 886], "stanford": [113, 246], "casi": [113, 246], "bootstrap_confidence_interv": [113, 876], "iter_freq": 113, "frequency_map": 113, "job": [113, 204, 206, 213, 258, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 284, 356, 357, 359, 361, 415, 416, 418, 419, 423, 424, 425, 426, 429, 430, 451, 452, 453, 456, 469, 471, 481, 482, 521, 524, 525, 535, 536, 545, 546, 567, 574, 575, 646, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 738, 786, 789, 808, 886], "skip": [113, 135, 145, 150, 166, 167, 171, 173, 191, 203, 243, 258, 344, 502, 535, 579, 644, 845, 861, 871, 886], "option": [113, 125, 135, 136, 141, 143, 151, 152, 157, 162, 163, 166, 167, 168, 169, 172, 173, 174, 179, 189, 197, 200, 203, 206, 211, 212, 217, 219, 220, 223, 228, 229, 232, 238, 241, 243, 263, 264, 266, 267, 268, 269, 273, 274, 275, 276, 277, 279, 280, 281, 282, 286, 287, 305, 311, 314, 356, 366, 371, 374, 388, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 434, 444, 445, 446, 451, 452, 453, 455, 457, 476, 478, 479, 481, 482, 494, 496, 503, 521, 525, 529, 530, 531, 532, 533, 535, 536, 540, 542, 544, 545, 546, 554, 559, 561, 562, 563, 572, 573, 574, 575, 577, 583, 594, 614, 624, 626, 636, 671, 676, 680, 691, 693, 694, 696, 697, 700, 701, 706, 708, 709, 710, 744, 754, 770, 771, 772, 778, 782, 784, 786, 788, 790, 793, 794, 797, 801, 804, 806, 807, 808, 809, 810, 812, 814, 816, 817, 818, 820, 851, 853, 867, 868, 871, 883, 886], "apply_hilbert": [113, 114, 115, 137, 168, 266, 267, 268, 269, 481, 482, 886], "269399": 113, "897": [113, 196, 233], "077": 113, "1202": 113, "emerg": 113, "bootstrap": [113, 143, 173, 685, 708, 710, 778, 886], "domin": [113, 205, 211, 243, 273, 274, 277, 280, 281, 282, 447, 562], "helper": [113, 135, 228, 314, 332, 875], "winter_r": 113, "freq_nam": 113, "ci_low": 113, "ci_up": 113, "dhz": 113, "xy": [113, 115, 137, 182, 323, 433, 755, 824, 868], "horizontalalign": [113, 135, 203, 207], "xycoord": 113, "trade": [114, 203, 734, 737], "bharadwaj": [114, 126, 246, 886], "berkelei": [114, 115, 257, 873], "tfr_stockwel": [114, 242, 733, 734, 735, 736, 737, 876, 886], "tfr_array_morlet": [114, 734, 735, 736, 737, 738, 876, 886], "centers_to_edg": [114, 876, 886], "sim0001": 114, "sim0002": 114, "1024": [114, 135, 693, 694, 696, 697], "burst": [114, 184, 200, 862], "ramp": [114, 203], "logical_or": 114, "on_tim": 114, "han": [114, 586, 658, 659, 733, 734, 736, 737, 886], "sin50hz": 114, "41160": 114, "41159": 114, "time_bandwidth": [114, 426, 734, 737], "sim": [114, 537, 868], "nmore": 114, "1025": [114, 145, 210, 241], "balanc": [114, 202, 203, 228, 232, 662, 687, 886], "strictli": [114, 152, 162, 169, 170, 179, 203, 205, 292, 754, 886], "regard": [114, 209, 225, 233, 242, 868, 886], "recoverd": 114, "lossless": 114, "disregard": 114, "numer": [114, 157, 163, 172, 203, 206, 217, 228, 233, 272, 279, 355, 378, 448, 473, 481, 482, 562, 683, 693, 694, 696, 697, 719, 865, 867, 868, 874, 886], "all_n_cycl": 114, "isinst": [114, 141, 261, 480], "exagger": 114, "wise": [114, 163, 200, 204, 268, 269, 422, 695, 841, 886], "epochs_hilb": 114, "tfr_data": 114, "3301": 114, "avgpow": 114, "avg_pow": [114, 733, 734], "mesh": [114, 157, 161, 162, 176, 272, 274, 280, 282, 310, 311, 362, 412, 468, 469, 637, 754, 813, 817, 839, 851, 886], "electrocorticographi": [115, 135, 137, 246, 266, 267, 268, 269, 481, 482, 559, 560, 706, 708, 709, 710, 862, 868, 886], "scatterplot": 115, "clickableimag": [115, 876], "own": [115, 127, 152, 178, 184, 208, 220, 230, 233, 266, 267, 268, 269, 273, 276, 277, 281, 323, 479, 481, 482, 594, 754, 785, 812, 845, 848, 849, 865, 867, 871], "dirnam": [115, 125, 160, 172], "pathlib": [115, 123, 145, 158, 171, 173, 276, 379, 380, 381, 384, 385, 386, 388, 393, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 525, 841, 886], "noqa": [115, 117, 171, 207, 228], "f401": 115, "snapshot_brain_montag": [115, 137, 819, 876, 886], "ecog_data_fnam": 115, "sample_ecog_ieeg": [115, 135], "click": [115, 133, 135, 143, 151, 152, 157, 162, 182, 192, 201, 206, 219, 220, 242, 263, 266, 267, 268, 269, 275, 281, 282, 413, 420, 481, 482, 561, 562, 706, 708, 710, 755, 767, 775, 784, 785, 786, 788, 790, 792, 793, 797, 801, 806, 807, 808, 809, 810, 814, 815, 816, 818, 843, 845, 851, 863, 874, 886], "layout_path": 115, "__file__": [115, 123, 171, 172, 173], "layout_nam": 115, "custom_layout": 115, "lout": [115, 171, 315, 328, 329, 340, 886], "coreg": [115, 135, 136, 158, 159, 160, 161, 314, 472, 475, 770, 861, 868, 876, 886], "estimate_head_mri_t": [115, 135, 136, 876, 886], "sample_ecog": [115, 135], "apply_tran": [115, 135, 136, 157, 161, 183, 314, 886], "conjunct": [115, 228, 261, 266, 415, 874], "xy_pt": [115, 137], "beta_pow": 115, "fig2": [115, 152, 171], "coolwarm": 115, "cbar": [115, 127, 147, 197, 228, 773], "set_axis_off": [115, 137, 173], "bbox_inch": [115, 886], "tight": [115, 152, 162, 196, 268, 269, 729, 788, 790, 886], "669": [115, 192], "mous": [115, 192, 219, 263, 264, 266, 267, 268, 269, 275, 413, 420, 472, 481, 482, 561, 562, 706, 708, 710, 755, 768, 770, 782, 784, 785, 786, 788, 789, 790, 793, 797, 806, 808, 809, 814, 863, 886], "imread": [115, 173], "plot_click": [115, 755], "to_layout": [115, 755], "got": [115, 145, 172, 201, 206, 225, 848, 886], "read_layout": [115, 171, 315, 876, 886], "3d_to_2d": [115, 130], "scalarmapp": 116, "low_contrast": [116, 126, 135, 136, 182, 191, 273, 274, 277, 280, 281, 282, 754, 812, 817], "rh_data": [116, 176, 277, 280], "rh_vertno": [116, 176, 277, 280, 669], "brodmann": 116, "ba44": 116, "add_head": [116, 136, 157, 191, 754, 886], "seghead": [116, 157, 158, 159, 162, 173, 177, 183, 184, 258, 264, 754, 770, 782], "read_tran": [116, 118, 157, 161, 179, 192, 279, 464, 671, 840, 876, 886], "role": [116, 166, 171, 178, 187, 188, 263, 264, 268, 270, 271, 277, 366, 528, 529, 540, 615, 624, 626, 639, 654, 754, 763, 770, 782, 822, 845, 867], "sample_audvis_set1": 116, "ylorrd": 116, "add_dipol": [116, 754, 886], "1e8": 116, "static": [116, 135, 181, 211, 217, 246, 258, 265, 390, 591, 742, 743, 744, 843, 871, 886], "add_ax": [116, 127, 147], "231": [116, 130, 170, 210, 232], "embed": [117, 157, 173, 202, 203, 276, 845, 852, 886], "simplic": [117, 178, 197, 203, 228, 232, 865, 886], "instal": [117, 135, 136, 137, 147, 156, 162, 172, 182, 258, 266, 267, 268, 269, 284, 305, 309, 340, 387, 390, 412, 415, 419, 424, 451, 452, 453, 481, 482, 709, 845, 853, 865, 866, 869, 886], "order_func": 117, "spectral_embed": 117, "rbf_kernel": 117, "this_data": 117, "good_pick": 117, "bad_pick": [117, 213], "plt_time": 117, "overlay_tim": [117, 128, 266, 267, 785, 886], "renaud": [117, 246], "keriven": [117, 246], "maureen": [117, 246], "clerc": [117, 246], "1051": [117, 210, 246], "1061": [117, 246], "2037139": [117, 246], "channel_epochs_imag": [117, 130], "237": [118, 130, 170, 210, 232], "eeg_on_scalp": [118, 130], "upon": [119, 145, 158, 171, 173, 266, 267, 276, 419, 481, 482, 755, 771, 824, 845, 851, 867, 886], "hosaka": [119, 246, 771, 886], "flow": [119, 179, 246, 771, 886], "underneath": [119, 771, 886], "poor": [119, 200, 203, 212, 771, 886], "man": [119, 152, 173, 246, 771], "hidehiro": [119, 246, 771], "electrocardiologi": [119, 246, 771], "1976": [119, 246, 771], "s0022": [119, 246, 771], "0736": [119, 246, 771], "80041": [119, 246, 771], "sheraz": [119, 126, 129, 246, 578, 884, 886], "khan": [119, 126, 129, 246, 578, 884, 886], "khansheraz": 119, "plot_arrowmap": [119, 151, 876, 886], "evoked_mag": 119, "evoked_grad": 119, "topoplot": [119, 145, 171, 206, 243, 771, 774, 886], "max_time_idx": 119, "latitud": [119, 771], "longitud": [119, 161, 771], "radial": [119, 159, 535, 536, 546, 647, 771], "cartesian": [119, 176, 179, 771, 868, 871], "info_from": [119, 771, 886], "info_to": [119, 771], "raw_ctf": 119, "raw_ctf_info": 119, "131": [119, 130, 170, 210, 228, 233, 337], "evoked_arrowmap": [119, 130], "engeman": 120, "miko\u0142aj": [120, 873, 886], "magnuski": [120, 873, 886], "mmagnuski": [120, 886], "swp": [120, 257, 873], "pl": 120, "20m": 120, "regularli": [120, 167, 169], "multilin": [120, 886], "all_tim": 120, "rm": [120, 151, 152, 189, 225, 263, 266, 267, 268, 269, 277, 413, 420, 481, 482, 537, 561, 562, 706, 788, 792, 793, 797, 809, 816, 868, 886], "drawn": [120, 151, 220, 228, 263, 266, 267, 268, 269, 274, 275, 280, 282, 413, 420, 481, 482, 561, 562, 577, 658, 659, 706, 708, 710, 771, 772, 777, 778, 786, 787, 790, 792, 793, 797, 806, 808, 809, 810, 814, 816, 817, 886], "spectral_r": 120, "circl": [120, 135, 162, 171, 193, 224, 263, 266, 267, 268, 269, 275, 314, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 759, 771, 776, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 841, 845, 886], "extrapol": [120, 151, 212, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 886], "box": [120, 135, 162, 190, 263, 266, 267, 268, 269, 275, 315, 323, 340, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 750, 771, 786, 788, 790, 792, 793, 797, 806, 809, 814, 816, 851, 886], "stretch": [120, 202, 754], "beyond": [120, 145, 167, 191, 238, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 515, 561, 562, 577, 701, 706, 708, 710, 750, 771, 786, 793, 797, 806, 807, 809, 814, 816], "axes_row": 120, "extr": 120, "margin": [120, 127, 709, 777, 778], "exceed": [120, 185, 208, 211, 230, 266, 562, 592, 709], "mask_param": [120, 233, 263, 266, 267, 268, 269, 413, 420, 481, 482, 561, 706, 708, 710, 771, 786, 793, 809, 814, 816], "markers": [120, 233, 263, 266, 267, 268, 269, 413, 420, 481, 482, 561, 706, 708, 710, 771, 786, 793, 809, 814, 816], "markerfacecolor": [120, 263, 266, 267, 268, 269, 413, 420, 481, 482, 561, 706, 708, 710, 771, 786, 793, 809, 814, 816], "_time": 120, "significant_channel": 120, "_channel": 120, "in1d": 120, "_ch": 120, "perhap": [120, 203, 208, 217, 228], "imped": [120, 203, 246, 886], "image_interp": [120, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 886], "cubic": [120, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 754, 771, 786, 793, 797, 806, 809, 814, 816, 886], "smoothest": 120, "voronoi": [120, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 886], "debug": [120, 163, 172, 258, 379, 380, 381, 384, 385, 386, 393, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 653, 749, 752, 845, 865], "unalt": [120, 363], "properli": [120, 135, 137, 156, 157, 162, 169, 184, 190, 201, 207, 208, 217, 218, 236, 238, 246, 258, 261, 264, 265, 266, 267, 268, 269, 271, 273, 274, 277, 280, 281, 282, 305, 309, 349, 362, 415, 419, 424, 451, 452, 453, 481, 482, 579, 580, 651, 671, 706, 709, 750, 794, 820, 843, 845, 848, 850, 861, 886], "animate_topomap": [120, 268, 269, 886], "frame_r": [120, 268, 269], "blit": [120, 268, 269], "evoked_topomap": [120, 130], "excel": [121, 151, 161, 203, 225], "diagnost": [121, 166, 173, 206, 211, 215], "rare": [121, 276, 867, 886], "80e": [121, 212, 868], "uncom": 121, "fewer": [121, 145, 152, 162, 171, 173, 200, 203, 218, 228, 238, 266, 267, 268, 269, 276, 415, 419, 424, 425, 449, 451, 452, 481, 482, 585, 590, 734, 737, 754, 790, 886], "007": [121, 128, 141, 142, 143, 146, 150, 167, 170, 202, 208, 225, 229, 246, 284, 598], "008": [121, 128, 141, 146, 150, 152, 167, 170, 211, 225, 246, 594], "method_param": [121, 180, 356, 361, 529, 530, 531, 532, 533, 535, 536, 542, 545, 546], "diagonal_fix": [121, 163, 356, 886], "return_estim": [121, 163, 356, 361, 865], "likelihood": [121, 152, 163, 178, 246, 263, 268, 269, 356, 361, 562, 794, 865, 868], "loglik": [121, 263], "1891": 121, "unseen": [121, 163, 178, 356, 865], "descend": [121, 163, 178, 886], "1629": [121, 210], "1659": 121, "813": [121, 233], "1802": [121, 181, 201, 246], "6663146376516": 121, "8130475750986": 121, "10315358209": 121, "evoked_whiten": [121, 130], "read_raw_artemis123": [123, 189, 487, 868, 876, 886], "read_raw_bti": [123, 186, 189, 868, 876, 886], "read_raw_kit": [123, 172, 189, 487, 868, 876, 886], "set_3d_titl": [123, 125, 151, 876, 886], "root_path": 123, "parent": [123, 151, 162, 171, 172, 173, 886], "spm_ctf_meg_example_faces1_3d": 123, "324474": 123, "bti_path": 123, "test_pdf_linux": 123, "test_config_linux": 123, "test_hs_linux": 123, "magn": [123, 189, 868], "3600wh": 123, "pdf": [123, 186, 196, 246, 258, 390, 476, 492, 869], "critic": [123, 152, 161, 172, 179, 186, 203, 211, 228, 230, 233, 594, 653, 752, 862, 872], "mne_create_comp_data": [123, 186, 258, 492], "print_tabl": [123, 186], "routin": [123, 186, 204, 456, 562, 594, 874, 885, 886], "magnes_3600wh": [123, 186], "kit_path": 123, "sqd": [123, 172, 258, 484, 506, 620, 868], "artemis_data_2017": 123, "10h": 123, "38m": 123, "59s_phantom_1k_hpi_1": 123, "artemis123_mneloc": 123, "1863": 123, "hpifit": [123, 210, 258], "ok": [123, 189, 210, 262, 272], "997": [123, 203, 211, 246], "cardin": [123, 167, 170, 217, 223, 307, 308, 337, 432, 841, 871, 886], "794": [123, 130, 145, 210, 233], "meg_sensor": [123, 130, 886], "create_3d_figur": [124, 157, 161, 179, 756, 876], "mne_helmet": [124, 130], "ship": [125, 171, 228, 266, 267, 268, 269, 271, 324, 325, 330, 331, 465, 481, 482, 857, 868, 886], "joan": [125, 138, 160, 886], "massich": [125, 138, 160, 886], "mailsik": [125, 138, 160], "op": [125, 135, 160, 185, 186, 210, 266, 267, 268, 269, 481, 482], "get_builtin_montag": [125, 171, 266, 267, 268, 269, 271, 330, 465, 481, 482, 876, 886], "against": [125, 141, 142, 150, 206, 217, 246, 663, 668, 845, 886], "current_montag": 125, "mri_fiduci": [125, 157, 160, 184, 770, 886], "montage_sgskip": [125, 130], "hcp": [126, 246, 390, 852, 874, 886], "mmp1": [126, 246, 390, 886], "mmp": [126, 390], "Of": [126, 143, 200, 207, 208, 225, 599, 600], "acknowledg": [126, 203], "wu": 126, "minn": 126, "publicli": [126, 167, 405, 406, 862, 867], "get_brain_class": [126, 156, 876], "fetch_hcp_mmp_parcel": [126, 182, 876, 886], "fetch_aparc_sub_parcel": [126, 876], "hcpmmp1": 126, "add_annot": [126, 136, 156, 182, 754], "aud_label": 126, "l_a1_roi": 126, "hcpmmp1_combin": [126, 182, 390], "aparc_sub": 126, "matthew": [126, 181, 246, 390], "glasser": [126, 246, 390], "timothi": [126, 246, 390, 886], "coalson": [126, 246, 390], "emma": [126, 246, 390, 562], "robinson": [126, 181, 246, 390], "hacker": [126, 246, 390], "harwel": [126, 246, 390], "essa": [126, 246, 390], "yacoub": [126, 246, 390], "kamil": [126, 246, 390], "ugurbil": [126, 246, 390], "jesper": [126, 246, 390, 886], "andersson": [126, 246, 390], "beckmann": [126, 246, 390], "jenkinson": [126, 246, 390], "stephen": [126, 181, 196, 228, 229, 246, 390, 419, 562, 693, 694, 696, 697, 735, 738, 886], "essen": [126, 246, 390], "modal": [126, 190, 232, 238, 246, 390], "cerebr": [126, 246, 390], "536": [126, 233, 246, 390], "nature18933": [126, 246, 390], "javeria": [126, 246], "hashmi": [126, 246], "fahimeh": [126, 246, 886], "mamashli": [126, 246, 886], "konstantino": [126, 246], "michmizo": [126, 246], "manfr": [126, 246, 886], "kitzbichl": [126, 246, 886], "santosh": [126, 246], "ganesan": [126, 246], "keri": [126, 246], "lee": [126, 135, 246, 272, 277, 562, 592, 886], "garel": [126, 246], "susan": [126, 246, 659], "whitfield": [126, 246], "gabri": [126, 246], "randi": [126, 246, 529], "gollub": [126, 246], "jian": [126, 246], "kong": [126, 246], "kunjan": [126, 246], "rana": [126, 246], "kenet": [126, 246], "matur": [126, 246], "trajectori": [126, 246], "network": [126, 196, 246, 299, 419, 562, 856], "mediat": [126, 246, 735, 738], "018": [126, 128, 141, 150, 170, 225, 246, 578], "mccloi": [127, 210, 873, 886], "dan": [127, 210, 886], "mpl_toolkit": [127, 171, 207, 228, 233, 778], "axes_grid1": [127, 233, 778], "make_axes_locat": [127, 233], "imagegrid": 127, "inset_loc": [127, 778], "suppos": [127, 169, 207, 767, 868], "max_t": 127, "17909658": 127, "18448887": 127, "83197989": 127, "screenshot": [127, 173, 754, 824, 886], "pixel": [127, 143, 173, 193, 214, 228, 263, 264, 266, 267, 268, 269, 273, 274, 275, 276, 277, 280, 281, 282, 413, 420, 472, 481, 482, 561, 562, 706, 708, 710, 754, 770, 771, 782, 786, 793, 797, 806, 809, 812, 814, 816, 817, 841, 886], "integ": [127, 141, 143, 144, 146, 150, 151, 152, 161, 167, 169, 170, 172, 176, 190, 193, 204, 206, 217, 218, 223, 233, 258, 261, 263, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 285, 299, 300, 312, 315, 316, 323, 329, 331, 356, 360, 361, 371, 372, 373, 413, 415, 420, 429, 430, 434, 435, 442, 451, 452, 455, 456, 457, 471, 476, 478, 479, 481, 482, 514, 538, 539, 540, 561, 562, 564, 577, 578, 579, 580, 586, 590, 600, 602, 609, 618, 620, 624, 654, 656, 674, 692, 701, 706, 708, 709, 710, 714, 715, 716, 717, 719, 737, 740, 771, 778, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 797, 798, 799, 801, 803, 805, 806, 807, 808, 809, 814, 816, 841, 868, 871, 886], "nonwhite_pix": 127, "nonwhite_row": 127, "nonwhite_col": 127, "cropped_screenshot": 127, "nrows_ncol": 127, "axes_pad": 127, "updat": [127, 147, 171, 173, 180, 190, 201, 203, 208, 211, 213, 217, 220, 243, 258, 263, 266, 267, 268, 269, 271, 275, 290, 304, 367, 372, 374, 379, 380, 381, 382, 384, 385, 386, 388, 389, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 448, 465, 476, 481, 482, 502, 528, 563, 646, 650, 741, 754, 843, 845, 862, 867, 871, 886], "rcparam": [127, 138, 203, 886], "labels": 127, "titles": 127, "medium": [127, 157, 184, 258, 310, 874, 886], "height": [127, 258, 271, 273, 274, 277, 280, 281, 282, 311, 315, 323, 328, 472, 754, 763, 812, 817, 841, 886], "gridspec": [127, 268, 269, 793], "keyword": [127, 150, 156, 170, 173, 192, 203, 211, 242, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318, 319, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 418, 419, 423, 424, 426, 429, 430, 432, 434, 438, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 463, 464, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 524, 525, 526, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 555, 558, 562, 564, 565, 567, 568, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 585, 587, 588, 589, 590, 591, 592, 594, 595, 597, 598, 601, 602, 603, 606, 607, 608, 609, 613, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 626, 628, 629, 630, 631, 632, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 651, 654, 655, 657, 658, 659, 660, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 692, 693, 694, 695, 696, 697, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 724, 725, 728, 729, 733, 734, 736, 737, 738, 739, 742, 743, 744, 749, 752, 753, 754, 755, 762, 770, 771, 776, 779, 782, 786, 787, 788, 789, 794, 797, 798, 799, 804, 805, 807, 808, 810, 811, 812, 813, 817, 818, 819, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 845, 861, 886], "subplot2grid": [127, 196], "inch": [127, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 706, 708, 710, 786, 793, 797, 806, 809, 814, 816], "height_ratio": 127, "rowspan": 127, "bot": 127, "evoked_idx": 127, "brain_idx": 127, "peak_lin": 127, "66ccee": [127, 161, 722, 732], "columnspac": 127, "labelspac": 127, "fancybox": 127, "handlelength": 127, "n_ave": 127, "spine": [127, 182, 767, 778], "set_axisbelow": 127, "tick": [127, 243, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 771, 778, 786, 790, 793, 797, 806, 809, 814, 815, 816, 886], "append_ax": [127, 233], "plot_brain_colorbar": [127, 876, 886], "get_posit": [127, 137, 314, 886], "ymax": [127, 204, 233, 238], "transfigur": 127, "va": [127, 161], "panel": [127, 135, 152, 157, 163, 171, 181, 243, 258, 268, 269, 472, 562, 754, 794, 798, 865], "outlin": [127, 161, 173, 177, 203, 243, 263, 264, 266, 267, 268, 269, 275, 314, 413, 420, 481, 482, 561, 562, 577, 609, 706, 708, 710, 771, 778, 782, 786, 788, 790, 791, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 886], "familiar": [127, 145, 200, 847, 862], "to_plot": 127, "return_tim": [127, 217, 481, 482], "\u00b5v": [127, 143, 145, 146, 150, 152, 167, 202, 208, 229, 258, 263, 266, 267, 268, 269, 273, 274, 275, 276, 277, 280, 281, 282, 413, 420, 481, 482, 518, 561, 562, 577, 706, 708, 710, 771, 784, 785, 786, 788, 790, 793, 797, 806, 807, 809, 814, 815, 816, 841, 868, 886], "1e6": [127, 142, 150, 152, 263, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 356, 360, 361, 413, 420, 422, 481, 482, 785, 788, 790, 792, 793, 815], "inset_ax": [127, 778], "server": [127, 147, 167, 173, 204, 206, 217, 820, 849], "axin": 127, "edit": [127, 152, 170, 172, 201, 203, 206, 219, 246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 688, 706, 709, 775, 823, 845, 849, 865, 886], "stai": [127, 145, 203, 204, 223, 225, 266, 267, 268, 269, 481, 482, 483, 655, 841, 845], "intact": [127, 200, 217], "That": [127, 143, 145, 162, 163, 203, 233, 268, 269, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 540, 794, 868], "nice": [127, 145, 151, 170, 172, 217, 228, 243, 845, 868, 886], "But": [127, 144, 145, 173, 185, 203, 211, 213, 223, 228, 236, 243, 562, 863], "big": [127, 189, 206, 422, 695, 863, 886], "tast": 127, "luckili": 127, "facet": [127, 161], "set_": 127, "get_children": 127, "line2d": 127, "0x7f29cd5ee9e0": 127, "0x7f29b690f130": 127, "0x7f29b690fa60": 127, "0x7f29b690fc70": 127, "pathcollect": 127, "0x7f29b690fe50": 127, "0x7f29b7c51e40": 127, "0x7f29b7c52170": 127, "0x7f29b7c50a60": 127, "0x7f29b7c509d0": 127, "0x7f29b7c52fb0": 127, "yaxi": [127, 208], "0x7f29b7c53c10": 127, "rectangl": [127, 219, 706, 771], "0x7f29b7c525c0": 127, "certainli": 127, "artistlist": 127, "sensor_dot": 127, "shrink": [127, 135, 201, 228, 229, 590, 865], "set_siz": 127, "publication_figur": [127, 130], "notat": [128, 207, 232, 238, 868], "odd": [128, 203, 326, 412, 868], "test_raw": [128, 169, 258], "read_raw_eeglab": [128, 169, 190, 487, 849, 868, 872, 876, 886], "eog1": 128, "eog2": 128, "011": [128, 141, 150, 170, 203, 225, 246], "012": [128, 141, 150, 170, 220, 225], "017": [128, 141, 150, 170, 217, 225], "019": [128, 141, 150, 170, 209, 225, 246], "021": [128, 141, 142, 150, 167, 170, 225], "022": [128, 141, 150, 170, 185, 225], "023": [128, 141, 143, 150, 170, 225, 246], "024": [128, 141, 150, 170, 225, 233, 246, 693, 694, 696, 697], "po7": [128, 243], "026": [128, 141, 150, 170, 225, 246], "poz": [128, 243], "027": [128, 141, 150, 170, 225, 228, 246, 299, 562, 699, 700, 860], "028": [128, 141, 150, 170, 225, 246, 570, 735, 738], "standard_1020": [128, 152, 160, 171, 223, 505], "fdt": [128, 169, 497, 618], "msec": [128, 152, 706], "new_ev": [128, 218, 439, 441, 527], "203125": 128, "12z": [128, 229], "group_bi": [128, 143, 229, 258, 266, 267, 268, 269, 481, 482, 784, 785, 790, 807, 886], "vline": [128, 268, 269, 778, 792, 886], "roi_erpimage_by_rt": [128, 130], "plot_psd": [129, 141, 143, 167, 200, 220, 241, 242, 266, 267, 268, 269, 276, 481, 482, 845, 868, 886], "66067": 129, "xscale": [129, 208, 266, 267, 268, 269, 481, 482, 708, 710, 808, 886], "wall": [129, 203, 204, 246, 693, 694], "shield": [129, 204, 213, 246, 266, 267, 268, 269, 271, 481, 482, 559, 594, 706, 708, 709, 710, 868], "review": [129, 152, 179, 205, 206, 246, 561, 567, 845, 867], "scientif": [129, 246, 849, 850, 870], "instrument": [129, 179, 200, 206, 246], "056101": [129, 246], "1063": [129, 211, 246, 573, 594], "4802845": [129, 246], "sensor_noise_level": [129, 130], "515": [130, 197, 886], "auto_examples_visu": 130, "topo_custom": [130, 133], "ssp_projs_sensitivity_map": [130, 131], "topo_compare_condit": [130, 132], "xhemi": [130, 134, 278, 362, 631], "609": [130, 134, 152, 233, 246], "ecg_fnam": 131, "ssp_ecg_map": 131, "arg": [131, 232, 238, 258, 271, 279, 688, 845], "plot_evoked_topo": [132, 151, 212, 876, 886], "audio": [132, 176, 192, 197, 241, 246, 266, 267, 268, 269, 420, 481, 482, 708, 709, 710, 725], "nleft": 132, "iter_topographi": [133, 876, 886], "20hz": 133, "return_freq": [133, 138, 241, 242, 243, 708, 710, 886], "my_callback": 133, "ch_idx": [133, 210, 230, 242], "callback": [133, 367, 754, 767, 886], "fig_facecolor": [133, 143, 241, 266, 267, 268, 269, 481, 482, 706, 708, 710, 767, 815], "axis_facecolor": [133, 241, 266, 267, 268, 269, 481, 482, 708, 710, 767], "axis_spinecolor": [133, 767], "on_pick": [133, 767], "gcf": 133, "639": [133, 167, 173, 210, 233], "stc_path": [134, 173], "fsaverage_sym": [134, 362], "left_right": [134, 362], "stc_xhemi": 134, "70314401": 134, "48867635": 134, "29876034": 134, "involv": [135, 136, 137, 157, 159, 161, 200, 203, 204, 207, 219, 369, 564, 867, 868], "implant": [135, 246, 598], "greater": [135, 145, 167, 201, 206, 228, 231, 266, 267, 278, 360, 454, 562, 589, 590, 695, 709, 735, 738, 754, 886], "dipi": [135, 172, 278, 591, 742, 743, 744, 844, 886], "pip": [135, 136, 137, 147, 162, 843, 845, 847, 850, 853], "conda": [135, 136, 137, 162, 843, 844, 845, 847, 850, 853, 886], "cite": [135, 138, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 391, 452, 481, 482, 706, 709, 845, 862], "mne_gui": 135, "anterior": [135, 161, 272, 326, 683, 841, 868, 886], "commissur": [135, 137, 314], "posterior": [135, 137, 157, 161, 272, 314, 326, 476, 683, 841, 886], "aka": [135, 164, 166, 191], "sample_seeg_t1": 135, "cursor": [135, 755, 886], "long": [135, 138, 141, 142, 147, 200, 203, 204, 206, 210, 218, 219, 223, 229, 236, 237, 264, 266, 267, 268, 269, 273, 274, 277, 278, 280, 281, 282, 356, 362, 481, 482, 532, 565, 570, 594, 706, 708, 709, 710, 754, 845, 848, 849, 861, 867, 874, 886], "menu": [135, 173, 219, 848, 851, 869], "prefer": [135, 143, 152, 171, 172, 190, 191, 193, 203, 206, 207, 214, 261, 266, 267, 268, 269, 362, 420, 442, 461, 481, 482, 562, 650, 708, 710, 808, 843, 845, 849, 851, 852, 864, 867, 868, 871], "pull": [135, 152, 207, 824, 841, 852, 867], "popup": 135, "Be": [135, 162, 217, 219, 268, 269, 791], "until": [135, 143, 201, 202, 209, 212, 261, 264, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 472, 473, 480, 481, 482, 562, 565, 708, 710, 751, 754, 782, 784, 801, 807, 810, 845, 868], "crosshair": 135, "meet": [135, 203, 867], "pc": [135, 206], "transect": 135, "set_posit": [135, 268, 269, 793], "xytext": [135, 182], "arrowprop": [135, 182, 196], "headwidth": 135, "consum": [135, 204, 276, 572, 699, 886], "deform": [135, 161, 171, 246], "hour": [135, 156, 481, 482, 562, 801, 807], "plan": [135, 200, 201, 204, 209, 437, 843, 849, 867], "proce": [135, 152, 261, 266, 405, 562, 565, 572, 763, 865], "my_data_directori": 135, "subjid": 135, "defac": 135, "cw256": 135, "anonym": [135, 157, 266, 267, 268, 269, 481, 482, 483, 865, 886], "orig_defac": 135, "publish": [135, 207, 246, 562, 863], "mne_bid": [135, 137], "write_anat": 135, "hardli": [135, 868], "misalign": [135, 147, 179, 492, 886], "stereotact": [135, 266, 267, 268, 269, 481, 482, 559, 560, 706, 708, 709, 710, 868, 886], "anteriolater": 135, "thresh": [135, 580, 585, 589, 603, 693, 694, 696, 697, 754], "apply_orient": 135, "asarrai": [135, 161, 232], "dataobj": [135, 157, 161, 183], "axcodes2ornt": 135, "aff2axcod": [135, 161], "float32": 135, "quantil": [135, 422], "squeez": [135, 142, 232, 233, 238], "grai": [135, 145, 157, 161, 173, 201, 211, 218, 230, 231, 232, 233, 238, 272, 471, 562, 611, 754, 769, 770, 778, 797], "gist_heat": 135, "invert_yaxi": 135, "world": [135, 157, 161, 173, 183, 203, 219, 230, 278, 456], "ct_resampl": 135, "moving_affin": 135, "static_affin": 135, "unalign": [135, 886], "shear": [135, 744], "compute_volume_registr": [135, 742, 743, 876, 886], "4x4": [135, 279, 505, 657, 658, 659, 671], "cval": [135, 742, 886], "ct_align": 135, "apply_volume_registr": [135, 876, 886], "failur": [135, 845, 886], "heat": 135, "navig": [135, 162, 217, 266, 267, 276, 281, 282, 481, 482, 784, 807, 818, 843, 849, 869], "toolbar": [135, 162, 819], "lta": [135, 630, 886], "realli": [135, 176], "rerun": 135, "manual_reg_affine_vox": 135, "read_lta": [135, 876, 886], "sample_seeg_ct_aligned_manu": 135, "manual_reg_affin": 135, "starting_affin": [135, 744, 886], "hyperintens": [135, 589], "hypointens": [135, 589], "brighter": [135, 238], "subcutan": 135, "fat": 135, "ct_data": 135, "get_fdata": 135, "t1_data": 135, "bright": 135, "halfwai": [135, 772], "talairach": [135, 136, 161, 181, 182, 281, 282, 368, 369, 638, 818, 865, 868, 886], "get_mni_fiduci": [135, 161, 314, 368, 770, 876, 886], "subj_tran": 135, "nearbi": [135, 136, 137, 196, 200, 208, 211, 224, 246, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 589, 594, 701, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816], "video": [135, 136, 157, 161, 162, 870, 886], "sidebar": 135, "scroll": [135, 143, 167, 219, 220, 264, 266, 267, 481, 482, 562, 782, 784, 801, 807, 823, 886], "arrow": [135, 157, 161, 162, 179, 184, 200, 204, 207, 220, 263, 264, 266, 267, 268, 269, 274, 275, 280, 281, 282, 413, 420, 481, 482, 561, 562, 706, 708, 710, 754, 771, 782, 784, 785, 786, 790, 793, 796, 797, 806, 807, 809, 814, 817, 818, 868, 886], "snap": [135, 162, 886], "t1_ecog": 135, "ct_orig_ecog": 135, "sample_ecog_ct": 135, "99982382": 135, "00414586": 135, "01830679": 135, "15413965": 135, "00549597": 135, "99721885": 135, "07432601": 135, "54316131": 135, "01794773": 135, "07441352": 135, "99706595": 135, "84162514": 135, "ct_aligned_ecog": 135, "raw_ecog": 135, "previous": [135, 145, 150, 171, 205, 206, 258, 292, 299, 300, 644, 754, 886], "subj_trans_ecog": 135, "3024": [135, 322, 481, 868], "dura": [135, 865], "pressur": [135, 590], "craniotomi": [135, 590], "watershed_bem": [135, 159, 590, 852, 865, 868, 886], "flash_bem": [135, 159, 590, 852, 868, 886], "modif": [135, 191, 193, 238, 332, 375, 852, 886], "view_kwarg": [135, 136, 158, 161], "ieeg": [135, 137, 874, 875, 876, 886], "project_sensors_onto_brain": [135, 876, 886], "cvs_avg35_inmni152": 135, "subject_brain": 135, "template_brain": 135, "regist": [135, 258, 309, 591, 742, 743, 744, 841, 867, 868], "sdr_morph": [135, 278, 591, 742, 743, 744], "subject_brain_sdr": 135, "appl": [135, 848], "had": [135, 143, 152, 168, 169, 176, 182, 202, 203, 204, 207, 208, 220, 241, 243, 266, 267, 406, 436, 583, 624, 709, 868, 886], "montage_warp": [135, 591], "warp_montag": [135, 876, 886], "elec_imag": [135, 589], "make_montage_volum": [135, 876, 886], "warped_elec_imag": 135, "dark2": 135, "degrad": 135, "inaccur": [135, 163, 217, 263, 266, 267, 268, 269, 275, 356, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 861, 868], "add_estimated_fiduci": [135, 314, 886], "template_tran": 135, "recomput": [135, 206, 209, 233, 454, 562, 592, 646, 886], "behind": [135, 157, 172, 196, 201, 206, 472, 773, 863], "scene": [135, 157, 161, 172, 196, 246, 258, 268, 269, 273, 274, 277, 280, 281, 282, 419, 472, 754, 760, 761, 763, 770, 789, 812, 817, 821, 822, 824, 843, 863, 886], "brittani": [135, 246], "stedelin": [135, 246], "alessandra": [135, 246], "mantovani": [135, 246], "ahm": [135, 246], "raslan": [135, 246], "nicol": [135, 246, 690, 886], "swann": [135, 246], "2022": [135, 170, 181, 213, 214, 246, 247, 576, 862], "21105": [135, 246], "joss": [135, 246], "03897": [135, 246], "liberti": [135, 137, 246, 886], "hamilton": [135, 137, 246, 886], "morgan": [135, 203, 246], "edward": [135, 246], "semi": [135, 206, 246, 577, 886], "neuroinformat": [135, 246], "octob": [135, 246, 666], "fninf": [135, 246], "00062": [135, 246], "1170": [135, 140], "10_ieeg_loc": [135, 140], "stereoelectroencephalographi": [136, 862], "xfm": [136, 281, 282, 369, 638, 818, 868, 886], "li": [136, 137, 161, 173, 209, 246, 868, 873, 886], "adam2392": [136, 137], "fixat": [136, 193, 214, 500, 862], "isi": [136, 192], "mni_tal": [136, 137, 314, 327], "this_subject_dir": 136, "mri_mni_t": [136, 638], "read_talxfm": [136, 161, 876], "taliarach": 136, "fro": [136, 457, 741], "rostral": [136, 754], "warp": [136, 157, 160, 246, 591, 862, 886], "combine_transform": 136, "tan": [136, 213, 886], "dens": [136, 157, 158, 159, 161, 183, 184, 191, 246, 258, 279, 310, 570, 754, 770, 886], "atla": [136, 182, 246, 258, 264, 273, 274, 277, 279, 280, 281, 282, 311, 447, 517, 655, 841, 862, 865, 868, 874, 886], "get_montage_volume_label": [136, 754, 876, 886], "lami": [136, 473], "lttr": 136, "isdigit": 136, "lpm": 136, "lsma": 136, "elec": [136, 229], "plot_channel_labels_circl": [136, 876, 886], "lacn": 136, "lstg": 136, "lpit": 136, "lofc": 136, "ltpo": 136, "rphp": 136, "lpli": 136, "rahp": 136, "lphg": 136, "lpcn": 136, "lbri": 136, "ctx": 136, "putamen": 136, "add_volume_label": [136, 182, 754, 886], "heatmap": [136, 211], "lfp": 136, "stc_near_sensor": [136, 137, 876, 886], "Its": [136, 210, 868], "view_layout": [136, 181, 273, 274, 277, 280, 281, 282, 754, 812, 817], "sagitt": [136, 161, 181, 264, 754, 772, 782], "m4": 136, "sai": [136, 137, 203, 204, 207, 209, 217, 223, 230, 233, 750, 845, 851, 861, 871], "20_seeg": [136, 140], "epilepsi": [137, 886], "seizur": [137, 886], "complementari": [137, 202, 874], "libertyhamilton": 137, "bidspath": 137, "read_raw_bid": 137, "bids_root": 137, "epilepsy_ecog": [137, 876, 886], "bids_path": 137, "pt1": 137, "session": [137, 141, 143, 150, 151, 167, 172, 173, 201, 211, 213, 219, 266, 267, 377, 378, 481, 482, 562, 784, 801, 807, 815, 843, 861, 865, 869, 886], "presurgeri": 137, "ictal": 137, "datatyp": [137, 193, 886], "trans_bandwidth": [137, 203, 449, 452, 481, 482], "add_mni_fiduci": [137, 314, 886], "epoch_length": 137, "269079": 137, "2201": 137, "ad1": 137, "att1": 137, "ast1": 137, "g16": 137, "slt1": 137, "sensor_color": [137, 770], "gamma_power_t": 137, "gamma_info": 137, "gamma_power_at_15": 137, "rgba": [137, 272, 273, 274, 277, 280, 281, 282, 754, 769, 773, 812, 817, 818, 886], "get_cmap": 137, "tolist": 137, "funcanim": [137, 268, 269], "gamma_pow": 137, "x_line": 137, "epileptiform": 137, "progress": [137, 152, 166, 202, 246, 416, 423, 845, 886], "posteriorli": 137, "becom": [137, 142, 183, 202, 203, 205, 206, 211, 213, 236, 237, 238, 266, 267, 268, 269, 608, 775, 790, 845, 853, 867, 868, 886], "xyz_pt": 137, "vmid": 137, "intra": [137, 677], "4932": 137, "626": [137, 140, 233, 246, 562], "30_ecog": [137, 140], "toi": [138, 228, 874], "answer": [138, 208, 233, 243, 845, 865], "question": [138, 142, 211, 243, 845, 848, 864, 866], "alic": 138, "tackl": 138, "chambon": [138, 246, 886], "stan": 138, "sleep_physionet": [138, 862, 876, 886], "fetch_data": [138, 862, 876, 886], "randomforestclassifi": 138, "accuracy_scor": 138, "functiontransform": 138, "ground": [138, 167, 208, 562, 805, 874], "truth": [138, 208, 562, 805], "expert": [138, 163, 845, 865, 867], "alice_fil": 138, "bob_fil": 138, "raw_train": 138, "marker": [138, 152, 169, 178, 189, 190, 196, 202, 207, 258, 263, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 280, 281, 282, 284, 356, 357, 359, 361, 413, 416, 420, 423, 426, 429, 430, 456, 469, 471, 481, 482, 484, 506, 521, 524, 525, 535, 536, 545, 546, 561, 562, 567, 574, 575, 577, 620, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 706, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 771, 786, 789, 793, 797, 806, 807, 808, 809, 813, 814, 816, 862, 886], "infer_typ": [138, 489, 496, 886], "annot_train": 138, "read_annot": [138, 219, 754, 876, 886], "emit_warn": [138, 260, 481, 482, 595], "resp": [138, 170, 217, 266, 267, 268, 269, 276, 313, 481, 482, 496, 559, 706, 708, 709, 710, 784, 807, 868, 886], "physionet_sleep": 138, "sc4001e0": 138, "recogn": [138, 172, 208, 496, 867, 886], "renam": [138, 152, 190, 212, 217, 260, 266, 267, 268, 269, 314, 342, 481, 482, 489, 496, 642, 754, 764, 819, 845, 853, 886], "oro": 138, "nasal": 138, "subment": 138, "temp": [138, 271], "rectal": 138, "wake": 138, "rem": [138, 169], "abbrevi": [138, 176, 207, 754, 868, 886], "rapid": [138, 145, 196, 203, 246, 419], "awak": 138, "night": [138, 405, 862], "imbal": [138, 232, 572, 573, 583, 594, 605], "trim": [138, 266, 267], "occurr": [138, 145, 200, 437, 439], "annotation_desc_2_event_id": 138, "redefin": 138, "events_train": 138, "chunk_dur": [138, 169, 442, 886], "stage_color": 138, "prop_cycl": 138, "by_kei": 138, "841": [138, 233], "188": [138, 159, 170, 182, 185, 188, 232, 233], "raw_test": 138, "annot_test": 138, "events_test": 138, "epochs_test": 138, "sc4011e0": 138, "1103": [138, 179, 246], "562": [138, 167, 175, 233], "signatur": [138, 201, 232, 416, 423, 430, 845, 863, 886], "ci": [138, 147, 203, 212, 228, 241, 562, 685, 708, 710, 778, 799, 845, 886], "\u00b5v\u00b2": 138, "eeg_power_band": 138, "compat": [138, 145, 172, 177, 259, 266, 267, 268, 269, 322, 364, 373, 388, 396, 419, 421, 424, 426, 427, 428, 453, 472, 481, 482, 535, 562, 708, 710, 784, 786, 807, 808, 819, 843, 851, 853, 865, 868, 871, 886], "psds_band": 138, "boilerpl": 138, "sckit": 138, "manner": [138, 152, 179, 228, 229, 261, 266, 886], "thank": [138, 141, 845, 874], "pipe": [138, 845, 862], "n_estim": [138, 416, 423], "acc": 138, "6854034451495921": 138, "ye": [138, 210, 211, 228, 268, 481, 502, 624, 865, 886], "databas": [138, 246, 391, 405, 406], "mathieu": [138, 246, 886], "galtier": [138, 246], "pierrick": [138, 246], "arnal": [138, 246], "gill": [138, 246], "wainrib": [138, 246], "architectur": [138, 246, 886], "rehabilit": [138, 246], "758": [138, 197, 233, 246], "tnsre": [138, 246], "2813138": [138, 246], "kemp": [138, 246, 405, 406, 862], "zwinderman": [138, 246, 405, 406, 862], "tuk": [138, 246, 406, 862], "kamphuisen": [138, 246, 405, 406, 862], "obery\u00e9": [138, 246, 406, 862], "feedback": [138, 246, 406, 862, 886], "microcontinu": [138, 246, 406, 862], "1185": [138, 246, 406, 862], "1194": [138, 246, 406, 862], "867928": [138, 246, 406, 862], "511": [138, 140, 197, 233], "60_sleep": [138, 140], "stage": [139, 140, 145, 156, 157, 166, 173, 192, 201, 203, 206, 207, 212, 219, 246, 260, 261, 266, 267, 268, 269, 271, 278, 362, 405, 442, 481, 482, 496, 522, 577, 612, 617, 708, 744, 787, 841, 845, 852, 861, 862, 876, 886], "polysomnographi": [139, 140, 166, 260, 266, 271, 405, 406, 442, 496, 612, 708, 787, 862, 886], "psg": [139, 140, 166, 260, 266, 271, 405, 442, 496, 612, 708, 787, 862, 886], "761": [140, 163, 165, 197, 233], "auto_tutorials_clin": 140, "cover": [141, 148, 150, 152, 154, 156, 163, 164, 166, 167, 169, 172, 173, 174, 187, 194, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 217, 220, 221, 228, 239, 243, 244, 272, 276, 594, 602, 611, 690, 836, 845, 868, 869, 886], "possibli": [141, 150, 167, 173, 203, 230, 231, 268, 269, 278, 299, 300, 312, 356, 360, 361, 371, 372, 373, 388, 413, 420, 456, 457, 476, 478, 479, 540, 562, 581, 583, 688, 754, 794, 861, 886], "del_proj": [141, 150, 200, 207, 208, 209, 266, 267, 268, 269, 481, 482, 886], "plot_projs_topomap": [141, 143, 150, 208, 220, 266, 267, 268, 269, 481, 482, 805, 876, 886], "legaci": [141, 143, 220, 266, 267, 268, 269, 481, 482, 786, 808, 886], "plot_psd_topomap": [141, 143, 241, 266, 267, 268, 269, 481, 482, 886], "sample_data_fold": [141, 143, 146, 147, 156, 167, 168, 169, 170, 171, 200, 201, 202, 204, 206, 207, 208, 209, 211, 217, 218, 219, 220, 241], "sample_data_raw_fil": [141, 143, 146, 147, 167, 168, 169, 170, 200, 201, 202, 204, 206, 207, 208, 209, 211, 217, 218, 219, 220, 241], "sample_data_events_fil": [141, 146, 218], "events_from_fil": [141, 218], "bare": [141, 167], "299693": [141, 152], "699283": 141, "quot": [141, 196, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709, 845, 868], "string": [141, 144, 145, 146, 150, 151, 169, 170, 172, 173, 202, 217, 218, 219, 241, 259, 260, 261, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 285, 312, 314, 323, 329, 331, 342, 355, 356, 360, 361, 365, 371, 376, 379, 380, 381, 384, 385, 386, 388, 393, 394, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 413, 415, 416, 420, 423, 429, 430, 434, 437, 442, 447, 448, 461, 463, 465, 473, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 517, 522, 529, 535, 536, 559, 560, 561, 562, 564, 565, 577, 578, 579, 580, 583, 585, 586, 590, 594, 600, 602, 609, 618, 620, 624, 642, 662, 663, 664, 665, 666, 668, 671, 674, 683, 687, 689, 692, 701, 702, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 737, 741, 742, 744, 754, 762, 770, 771, 778, 784, 785, 786, 788, 790, 791, 792, 793, 794, 797, 798, 805, 806, 807, 808, 809, 812, 814, 816, 817, 818, 843, 844, 845, 860, 865, 871, 886], "event_dict": [141, 143, 146, 150, 152, 167, 169, 212, 214, 218, 223, 241], "buttonpress": [141, 150, 152, 167, 169, 173, 218], "mention": [141, 145, 152, 167, 169, 170, 171, 176, 203, 207, 208, 209, 217, 233, 355, 845], "turn": [141, 150, 151, 153, 176, 192, 201, 206, 207, 208, 209, 243, 259, 261, 266, 454, 519, 655, 755, 775, 862, 867, 868, 886], "accommod": [141, 886], "request": [141, 162, 167, 172, 173, 206, 208, 211, 217, 218, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 412, 481, 482, 562, 574, 575, 614, 651, 687, 689, 707, 708, 710, 763, 786, 795, 797, 812, 817, 841, 851, 852, 865, 866, 867, 871, 886], "drop_log": [141, 143, 202, 261, 266, 267, 276, 574, 575, 709, 783, 886], "too_short": [141, 152, 266, 709], "forget": [141, 158, 159, 169, 845], "brows": [141, 173, 182, 201, 219, 264, 266, 267, 481, 482, 562, 782, 784, 801, 807, 857, 863, 886], "scrollbar": [141, 266, 267, 481, 482, 562, 784, 801, 807, 886], "focus": [141, 142, 182, 219, 266, 267, 481, 482, 562, 663, 668, 784, 801, 807, 845, 849, 852, 870], "screen": [141, 193, 214, 246, 258, 266, 267, 481, 482, 784, 807, 820, 862, 886], "bracket": [141, 150, 152, 170, 190, 217, 223, 241, 886], "catch": [141, 143, 167, 182, 232, 238, 845], "charact": [141, 167, 170, 201, 217, 218, 326, 497, 513, 612, 618, 662, 663, 664, 665, 666, 668, 762, 845, 886], "tag": [141, 145, 152, 166, 244, 245, 246, 258, 266, 267, 271, 276, 314, 330, 437, 442, 491, 513, 559, 708, 709, 762, 816, 841, 845, 862, 874, 886], "complain": 141, "ask": [141, 145, 161, 845, 860, 862, 866, 867], "except": [141, 144, 172, 176, 177, 193, 211, 217, 266, 267, 268, 269, 286, 287, 330, 350, 351, 356, 405, 454, 481, 482, 483, 551, 563, 583, 634, 697, 701, 744, 845, 868, 871, 886], "keyerror": [141, 263, 266, 267, 271, 275, 290, 304, 528, 709, 741], "rais": [141, 145, 209, 261, 263, 266, 267, 268, 269, 271, 272, 275, 276, 277, 280, 286, 287, 290, 304, 318, 341, 344, 350, 351, 356, 360, 363, 365, 367, 371, 372, 405, 432, 440, 454, 460, 461, 463, 481, 482, 502, 528, 551, 553, 562, 593, 614, 625, 643, 645, 648, 652, 656, 693, 694, 696, 697, 706, 708, 709, 710, 741, 787, 798, 832, 834, 845, 867, 886], "reorder_channel": [141, 150, 217, 266, 267, 268, 269, 481, 482, 706, 708, 709, 710, 886], "exploratori": [141, 150, 168, 207, 217, 229, 863], "epochs_eeg": 141, "new_ord": [141, 150], "epochs_subset": 141, "032": [141, 150, 170, 225, 229, 246], "033": [141, 150, 170, 225], "034": [141, 150, 170, 225], "037": [141, 150, 170, 217, 225], "038": [141, 150, 170, 225], "041": [141, 143, 150, 170, 225], "042": [141, 150, 170, 225, 868], "043": [141, 150, 170, 225], "045": [141, 143, 150, 170, 225], "046": [141, 143, 150, 170, 225, 246, 666, 868], "047": [141, 143, 150, 170, 225], "049": [141, 143, 150, 170, 225], "052": [141, 143, 150, 163, 170, 186, 201, 225, 246, 735, 738], "054": [141, 143, 150, 170, 209, 225, 246, 540, 663, 668], "055": [141, 143, 150, 170, 209, 225, 246, 391], "058": [141, 143, 150, 170, 220, 225], "unchang": [141, 150, 207, 266, 267, 268, 269, 481, 482, 595, 646], "blinkchannel": 141, "20auditori": 141, "20buttonpress": 141, "4face": [141, 152], "4visual": 141, "19visual": 141, "shorter_epoch": 141, "include_tmax": [141, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709, 886], "obj": [141, 162, 637, 839, 886], "0998976": 141, "expand": [141, 145, 161, 202, 207, 266, 267, 268, 269, 272, 277, 280, 356, 443, 446, 471, 481, 482, 708, 710, 786, 865, 886], "later_epoch": 141, "tshift": [141, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 441, 481, 482, 706, 709], "amount": [141, 142, 163, 168, 179, 201, 208, 209, 224, 243, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 280, 281, 282, 365, 376, 413, 420, 453, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522, 537, 561, 562, 603, 619, 706, 708, 709, 710, 722, 732, 736, 784, 786, 793, 797, 806, 807, 809, 812, 814, 817, 865, 868, 886], "00166496": 141, "00332992": 141, "99833504": 141, "99667008": 141, "enforc": [141, 589, 886], "eog_data": 141, "channel_4_6_8": 141, "arr": [141, 217, 243, 685], "repeatedli": [141, 206, 208, 481, 482, 851, 886], "hierarch": [141, 144, 145, 241, 246, 437, 476, 527, 841, 886], "multiindex": [141, 266, 267, 706, 708, 709, 710], "aggreg": [141, 144, 146, 242, 266, 267, 268, 269, 316, 437, 481, 482, 706, 708, 710, 785, 786, 886], "endpoint": [141, 144, 169, 223, 261, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 289, 579, 624, 625], "sort_index": 141, "inplac": [141, 146, 260, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 319, 438, 448, 481, 482, 558, 608, 660, 845], "read_epochs_eeglab": [141, 190, 868, 872, 876, 886], "read_epochs_kit": [141, 189, 868, 876, 886], "audiovisu": [141, 167, 217], "epochs_from_fil": 141, "convent": [141, 161, 171, 173, 189, 191, 207, 208, 218, 246, 258, 271, 305, 326, 336, 498, 602, 625, 641, 722, 731, 732, 754, 868, 871, 886], "basenam": [141, 218], "_epo": 141, "issu": [141, 142, 145, 152, 162, 196, 203, 204, 207, 218, 219, 266, 267, 272, 277, 291, 293, 424, 481, 482, 562, 601, 669, 672, 784, 801, 807, 841, 843, 845, 864, 866, 867, 874, 886], "adher": [141, 144, 360, 445], "epochsfif": [141, 144], "anyth": [141, 189, 206, 389, 754, 845], "baseepoch": [141, 562, 845, 876, 886], "ndarrai": [141, 217, 223, 225, 243, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 285, 299, 300, 307, 323, 346, 352, 365, 367, 370, 371, 412, 413, 414, 417, 420, 425, 429, 433, 439, 441, 449, 450, 451, 453, 456, 457, 458, 480, 481, 482, 484, 517, 537, 561, 562, 563, 570, 573, 574, 575, 577, 583, 587, 588, 591, 592, 609, 630, 655, 656, 671, 685, 686, 687, 691, 692, 693, 694, 696, 697, 706, 707, 708, 709, 710, 719, 722, 724, 725, 732, 735, 742, 743, 744, 754, 755, 758, 768, 771, 773, 786, 790, 792, 793, 795, 796, 809, 812, 813, 814, 816, 817, 818, 834, 884, 886], "10_epochs_overview": [141, 149], "aldai": [142, 246, 886], "reason": [142, 150, 151, 163, 167, 172, 173, 185, 201, 202, 203, 204, 205, 207, 208, 209, 217, 219, 228, 237, 238, 246, 264, 265, 266, 267, 268, 269, 273, 274, 276, 277, 280, 281, 282, 300, 356, 373, 425, 481, 482, 562, 574, 584, 587, 594, 693, 694, 696, 697, 699, 706, 709, 783, 820, 845, 861, 865, 867, 868, 886], "safer": [142, 273, 274, 277, 280, 281, 282, 493], "distort": [142, 190, 203, 220, 243, 493, 744], "spuriou": [142, 147, 163, 454, 865], "carina": [142, 886], "forster": [142, 886], "email": [142, 845, 851], "carinaforster0611": 142, "merge_ev": [142, 218, 356, 876, 886], "baseline_tmin": 142, "baseline_tmax": 142, "4957": [142, 152, 337], "trad_aud": 142, "trad_vi": 142, "heterogen": [142, 202, 886], "aud_predictor": 142, "vis_predictor": 142, "trickier": 142, "seaprat": 142, "baseline_predictor": 142, "singleton": [142, 754, 886], "\u03bcv": 142, "microvolt": [142, 189, 491, 868], "unstabl": [142, 163, 205, 356, 865, 886], "transpos": [142, 217, 228, 229, 233, 236, 237, 238, 871, 886], "reg_model": 142, "6254": 142, "lm": [142, 570], "namedtupl": [142, 691], "dict_kei": [142, 170, 207], "1998": [142, 150, 246, 868], "49949": [142, 150], "tell": [142, 151, 156, 163, 167, 172, 202, 206, 208, 214, 217, 230, 232, 238, 279, 845, 848, 849, 864, 868], "strongli": [142, 173, 200, 201, 209, 481, 482, 512, 843, 845, 861, 865, 868], "\u03b2": [142, 143, 220], "constant": [142, 157, 161, 171, 197, 200, 203, 213, 243, 261, 266, 267, 268, 269, 271, 373, 481, 482, 485, 514, 742, 841, 862, 868, 886], "effect_of_baselin": 142, "unsurprisingli": 142, "farther": [142, 865], "weaker": [142, 266, 267, 268, 269, 448, 449, 451, 452, 481, 482, 868], "pure": [142, 277, 845], "influenc": [142, 203, 205, 206, 246, 867], "reg_aud": 142, "reg_vi": 142, "show_sensor": [142, 145, 167, 778, 886], "truncate_yaxi": [142, 233, 778, 886], "subtl": 142, "apart": [142, 151, 169, 223], "diff_tradit": 142, "diff_regress": 142, "themselv": [142, 268, 269, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 540, 794, 867], "ought": 142, "persist": [142, 143, 200, 204, 865, 886], "interaction_effect": 142, "seem": [142, 145, 152, 163, 192, 203, 206, 208, 243, 562, 845], "randomli": [142, 167, 228, 515, 592, 611, 672], "glm": [142, 246, 852], "lift": [142, 179, 197, 236, 238, 246], "psyp": [142, 152, 203, 233, 246, 692, 693, 694, 696, 697], "13451": [142, 246], "15_baseline_regress": [142, 149], "imagemap": 143, "discontinu": [143, 147, 148, 149, 152, 166, 169, 203, 206, 217, 218, 223, 241, 266, 454, 617, 708, 710, 841], "176": [143, 170, 172, 196, 197, 228, 233, 246, 562], "enabl": [143, 173, 220, 243, 258, 259, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 375, 472, 481, 482, 577, 601, 653, 693, 694, 696, 697, 708, 709, 749, 754, 763, 767, 770, 789, 807, 812, 817, 820, 843, 851, 861, 867, 868, 886], "unappli": [143, 151, 207, 209, 266, 267, 268, 269, 443, 444, 445, 446, 481, 482, 886], "purg": 143, "catch_trials_and_buttonpress": 143, "pick_ev": [143, 218, 876], "event_color": [143, 214, 218, 266, 267, 481, 482, 784, 807, 886], "butterfli": [143, 150, 152, 153, 173, 201, 207, 211, 220, 266, 267, 268, 269, 276, 481, 482, 562, 784, 788, 791, 798, 807, 823, 872, 886], "ecg_proj_fil": [143, 207], "ecg_proj": [143, 147, 207, 208], "41auditori": 143, "40button": 143, "8face": 143, "8visual": 143, "40visual": 143, "inherit": [143, 241, 356, 886], "joint": [143, 183, 208, 246, 266, 267, 268, 269, 275, 413, 420, 481, 482, 651, 708, 710, 786, 793, 806, 874, 886], "epochsspectrum": [143, 166, 244, 245, 266, 267, 268, 269, 454, 481, 710, 749, 876, 886], "\u03b4": [143, 220], "\u03b8": [143, 220], "\u03b3": [143, 220], "api": [143, 170, 193, 197, 220, 223, 228, 241, 414, 550, 754, 763, 767, 853, 857, 869], "jointli": [143, 163, 206, 208, 266, 267, 268, 269, 275, 299, 300, 357, 358, 359, 413, 420, 481, 482, 562, 574, 575, 708, 710, 786, 793, 805, 806, 865, 886], "untransform": 143, "docstr": [143, 152, 181, 203, 204, 211, 217, 220, 241, 267, 285, 299, 300, 476, 478, 479, 540, 708, 750, 752, 769, 886], "plot_topo_imag": [143, 266, 267, 886], "accompani": [143, 671, 867], "scalebar": [143, 886], "highli": [143, 189, 208, 224, 232, 501, 619, 623, 692, 849], "customiz": [143, 268, 269, 706, 791], "respond": [143, 145, 196, 867], "opposit": [143, 169, 517, 868], "0242": [143, 170], "pop": [143, 151, 201, 263, 266, 267, 271, 275, 290, 304, 528, 741, 815, 843, 886], "At": [143, 192, 205, 206, 212, 322, 481, 845, 851, 861, 886], "fullscreen": [143, 472, 886], "unusu": [143, 185, 201, 205], "reject_criteria": [143, 146, 152, 167, 202, 212], "3000e": [143, 146, 202], "find_layout": [143, 171, 876, 886], "font_color": [143, 266, 267, 706, 815], "reinforc": 143, "disguis": 143, "mayb": [143, 265, 266, 267, 268, 269, 481, 482, 559, 706, 708, 709, 710], "651": [143, 149, 170, 175, 210, 233], "20_visualize_epoch": [143, 149], "who": [144, 258, 271, 562, 845, 849, 862, 867, 886], "lexic": [144, 862], "decis": [144, 192, 203, 243, 261, 266, 417, 522, 617, 862], "kiloword_data_fold": 144, "kiloword_data_fil": 144, "capabl": [144, 156, 167, 169, 378, 754, 819, 823, 825, 826, 843, 845, 849, 852, 862, 886], "surviv": [144, 271], "reload": 144, "attach": [144, 170, 201, 217, 229, 241, 437, 841], "numberoflett": [144, 229], "english": [144, 862], "lexicon": 144, "wordfrequ": 144, "render": [144, 157, 161, 173, 258, 266, 267, 273, 274, 276, 277, 280, 281, 282, 472, 481, 482, 562, 706, 754, 763, 784, 801, 807, 812, 813, 817, 820, 822, 845, 851, 868, 869, 886], "orthographicdist": 144, "bigramfrequ": 144, "consonantvowelproport": 144, "450000": 144, "189490": 144, "900000": 144, "700704": 144, "546": [144, 196, 210, 233], "600000": 144, "858537": 144, "700000": 144, "454540": 144, "539076": 144, "686": [144, 197], "drudgeri": 144, "473684": 144, "556303": 144, "732357": 144, "991226": 144, "859": [144, 233], "545879": 144, "957": [144, 233], "billiard": 144, "500000": [144, 145, 196], "672098": 144, "838597": 144, "958": [144, 229], "698970": 144, "088112": 144, "959": [144, 204, 216, 233], "solenoid": 144, "111111": 144, "301030": 144, "544507": 144, "iloc": [144, 146], "iat": 144, "nindex": 144, "arbitrarili": [144, 159, 233, 868], "highcomplex": 144, "startswith": [144, 886], "district": 144, "disarrai": 144, "disast": 144, "diseas": 144, "discord": 144, "dispos": 144, "lasso": [144, 246, 266, 267, 268, 269, 481, 482, 784, 807, 810, 886], "tentacl": 144, "banjo": 144, "corsag": 144, "fall": [144, 152, 169, 172, 211, 219, 259, 276, 367, 406, 437, 454, 564, 841, 868, 886], "rich": [144, 843, 849], "typhoon": 144, "bungalow": 144, "colossu": 144, "linguist": 144, "dozen": [144, 201, 206, 208, 863], "share": [144, 191, 203, 219, 260, 299, 608, 693, 694, 696, 697, 845, 863, 868, 871, 874, 886], "letter": [144, 171, 189, 229, 246, 754, 886], "n_letter": 144, "sort_ord": 144, "obviou": [144, 172, 201, 206, 220, 236], "reaction": [144, 228, 266, 267, 785, 886], "new_metadata": 144, "foo": [144, 151, 172, 266, 267, 388, 709, 845], "592": [144, 149], "30_epochs_metadata": [144, 149], "eriksen": 145, "flanker": [145, 862], "introductori": [145, 151, 163, 169, 170, 200, 217, 218, 228, 865], "straight": [145, 266, 267, 268, 269, 481, 482, 810], "creation": [145, 150, 156, 169, 202, 219, 258, 260, 263, 266, 267, 276, 279, 310, 412, 574, 575, 868, 886], "ourselv": [145, 176, 205, 206, 208], "incorrect": [145, 177, 193, 202, 203, 213, 246, 843, 868, 886], "sophist": [145, 190, 455], "erp_cor": [145, 862, 876], "infil": 145, "core_subject": 145, "001_task": [145, 213], "flankers_eeg": 145, "all_ev": 145, "all_event_id": 145, "935935": 145, "913": [145, 233], "33793": 145, "target_left": 145, "target_right": 145, "incompat": [145, 628, 634, 843, 886], "decid": [145, 212, 243, 261, 266, 267, 453, 522, 617, 783, 867], "1500": 145, "invalid": [145, 230, 886], "metadata_tmin": 145, "metadata_tmax": 145, "why": [145, 152, 159, 161, 193, 202, 203, 207, 217, 225, 228, 232, 246, 735, 738, 867], "event_nam": [145, 233, 437, 440], "551758": 145, "997070": 145, "434570": 145, "343750": 145, "917969": 145, "425781": 145, "416016": 145, "799": [145, 210, 233], "392578": 145, "990234": 145, "402344": 145, "eleg": 145, "row_ev": [145, 437], "pertain": 145, "sync": [145, 260, 271, 442, 498, 608], "508789": 145, "00000": 145, "503906": 145, "449219": 145, "542969": 145, "792": [145, 197], "496094": 145, "437500": 145, "465820": 145, "796": [145, 233], "547852": 145, "46582": 145, "descriptor": [145, 167, 241, 246, 437, 481, 482, 841], "hed": [145, 152, 241, 246, 437, 841], "inspir": [145, 437, 452, 744, 845, 884], "keep_first": [145, 437], "regardless": [145, 152, 172, 191, 205, 208, 454, 805, 841], "first_respons": [145, 437], "notna": 145, "411133": 145, "454102": 145, "443359": 145, "466797": 145, "400391": 145, "499023": 145, "584961": 145, "226": [145, 155, 170, 185, 228, 233, 886], "421875": 145, "450195": 145, "399414": 145, "316406": 145, "416992": 145, "386719": 145, "410156": 145, "467773": 145, "377930": 145, "483398": 145, "457031": 145, "566406": 145, "395508": 145, "354492": 145, "516": [145, 159, 233], "326172": 145, "432617": 145, "538": [145, 233], "322266": 145, "482422": 145, "484375": 145, "652": 145, "371094": 145, "342773": 145, "704": [145, 210], "307617": 145, "706": [145, 196, 197, 233], "442383": 145, "376953": 145, "first_stimulu": 145, "perfect": [145, 159, 203, 211], "stimulus_sid": 145, "response_correct": 145, "correct_response_count": 145, "rememb": [145, 151, 162, 172, 177, 201, 206, 207, 217, 233, 868], "epochs_tmin": 145, "epochs_tmax": 145, "strong": [145, 184, 201, 206, 232, 562, 663, 668, 861], "099609375": 145, "513": 145, "lastli": [145, 173, 210, 212, 242, 243, 845], "vis_erp": 145, "vis_erp_slow": 145, "asid": [145, 173, 200, 238], "fact": [145, 150, 152, 182, 183, 200, 206, 207, 211, 218, 419, 425, 562, 624, 841, 861, 868], "noisier": [145, 192], "deal": [145, 163, 172, 181, 203, 206, 207, 209, 218, 228, 232, 236, 238, 268, 269, 273, 274, 277, 280, 281, 282, 299, 300, 457, 562, 573, 583, 594, 608, 874, 886], "keep_last": [145, 437], "last_": [145, 437], "last_stimulu": 145, "last_respons": 145, "431641": 145, "795": [145, 233], "576172": 145, "puls": [145, 147, 167, 169, 200, 206, 208, 218, 584, 587, 868], "c5": [145, 505], "cpz": 145, "isna": 145, "bummer": 145, "impress": 145, "resp_erp_correct": 145, "resp_erp_incorrect": 145, "deflect": [145, 200, 207, 208, 886], "immedi": [145, 157, 169, 201, 206, 209, 243, 259, 430, 481, 482, 565, 617, 678, 681, 763, 807, 841, 845, 867, 868, 886], "doubt": 145, "resp_erp_diff": 145, "bolder": 145, "set_linewidth": 145, "trough_time_idx": 145, "trough_tim": 145, "emili": [145, 203, 246, 862, 886], "kappenman": [145, 203, 246, 862], "jaclyn": [145, 246, 862], "farren": [145, 246, 862], "wendi": [145, 196, 246, 419, 862], "zhang": [145, 246, 862, 868, 886], "andrew": [145, 181, 246, 562, 695, 862, 886], "stewart": [145, 246, 862], "luck": [145, 152, 203, 246, 862], "117465": [145, 246, 862], "nima": [145, 246, 437], "bigd": [145, 246, 437], "shamlo": [145, 246, 437], "kreutz": [145, 246, 437], "delgado": [145, 246, 437], "robbin": [145, 246, 437], "makoto": [145, 246, 437], "miyakoshi": [145, 246, 437], "marissa": [145, 246, 437], "westerfield": [145, 246, 437], "tarik": [145, 246, 437], "bel": [145, 246, 437], "bahar": [145, 246, 437], "koth": [145, 246, 437], "jessica": [145, 246, 437], "hsi": [145, 246, 437], "globalsip": [145, 246, 437], "6736796": [145, 246, 437], "40_autogenerate_metadata": [145, 149], "workflow": [146, 156, 202, 862, 864, 886], "200e": [146, 152, 202], "0113": [146, 167, 170, 217], "0112": [146, 167, 170, 217], "0122": [146, 167, 170, 217, 242], "0132": [146, 170], "199795": 146, "320252": 146, "567619": 146, "248584": 146, "609895": 146, "700540": 146, "352746": 146, "908667": 146, "193135": 146, "049675": 146, "702938": 146, "168267": 146, "480975": 146, "182237": 146, "225684": 146, "072452": 146, "186476": 146, "283711": 146, "006895": 146, "912317": 146, "130290": 146, "157198": 146, "842466": 146, "986073": 146, "179816": 146, "040471": 146, "643716": 146, "835772": 146, "517952": 146, "214631": 146, "043144": 146, "672744": 146, "173156": 146, "688943": 146, "974112": 146, "561683": 146, "450115": 146, "778315": 146, "795987": 146, "277138": 146, "timedelta": [146, 219, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709], "132025e": 146, "156762e": 146, "324858e": 146, "060990e": 146, "870054e": 146, "835275e": 146, "790867e": 146, "049675e": 146, "702938e": 146, "416827e": 146, "748098e": 146, "018224e": 146, "212257e": 146, "072452e": 146, "283711e": 146, "300690e": 146, "691232e": 146, "213029e": 146, "515720e": 146, "178425e": 146, "986073e": 146, "304047e": 146, "643716e": 146, "783577e": 146, "851795e": 146, "521463e": 146, "204314e": 146, "672744e": 146, "568894e": 146, "974112e": 146, "556168e": 146, "450115e": 146, "377831e": 146, "117960e": 146, "727714e": 146, "0133": [146, 170], "dai": [146, 208, 258, 266, 267, 268, 269, 271, 481, 482, 483], "800204787": 146, "379736": 146, "123525": 146, "806864627": 146, "734826": 146, "339465": 146, "813524468": 146, "996158": 146, "627037": 146, "820184308": 146, "748030": 146, "024973": 146, "826844149": 146, "123811": 146, "917677": 146, "pivot": [146, 264, 782, 813], "long_df": [146, 229], "coupl": [146, 212, 217, 238, 416, 598, 852, 870, 886], "1342": [146, 170, 236, 238], "categorydtyp": 146, "nicer": [146, 207, 886], "hue": 146, "peak_lat": 146, "regex": [146, 886], "2123": [146, 170], "idxmax": 146, "melt": 146, "id_var": 146, "var_nam": 146, "value_nam": 146, "satur": [146, 510], "847": [146, 149, 233], "833": [146, 210], "50_epochs_to_data_fram": [146, 149], "equidistantli": 147, "consecut": [147, 169, 236, 273, 274, 277, 280, 281, 282, 454, 522, 564, 565, 886], "briefli": [147, 152, 203, 220, 228], "hous": 147, "compute_proj_ecg": [147, 207, 208, 579, 584, 861, 876, 886], "envelope_correl": [147, 886], "manag": [147, 167, 172, 173, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 284, 356, 357, 359, 361, 416, 423, 426, 429, 430, 456, 469, 471, 481, 482, 521, 524, 525, 535, 536, 545, 546, 551, 562, 567, 574, 575, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 748, 749, 784, 786, 789, 801, 807, 808, 843, 845, 850, 852, 867, 874, 886], "chan": [147, 257, 686], "heart": [147, 200, 205, 246, 735, 738, 886], "beat": [147, 212, 574, 584, 587, 658], "onpca": 147, "onecg": 147, "make_fixed_length_epoch": [147, 261, 876, 886], "unsuit": [147, 886], "event_related_plot": 147, "1142": [147, 170, 210], "n_sensor": [147, 242, 273, 277, 281, 770], "alpha_data": 147, "1530": 147, "epochconnect": 147, "corr_matrix": 147, "first_30": 147, "last_30": 147, "corr_matric": 147, "color_lim": 147, "mpbl": 147, "60_make_fixed_length_epoch": [147, 149], "745": [149, 197, 210, 233], "auto_tutorials_epoch": 149, "434": [149, 197, 233], "565": [149, 233], "832": [149, 233], "raw_fil": [150, 152], "happen": [150, 152, 157, 161, 162, 168, 169, 172, 197, 202, 204, 206, 228, 259, 266, 267, 319, 436, 438, 841, 845, 862, 865, 867, 871, 886], "discuss": [150, 152, 157, 166, 167, 169, 174, 181, 192, 197, 200, 203, 204, 217, 220, 228, 233, 243, 246, 709, 844, 845, 862, 864, 865, 867, 868, 886], "transfer": [150, 197, 201, 203, 595, 841, 861], "maintain": [150, 201, 228, 266, 267, 268, 269, 481, 482, 483, 553, 845, 864, 867, 868, 886], "proven": [150, 886], "never": [150, 266, 267, 320, 581, 772, 845, 868, 886], "72160572e": 150, "57859354e": 150, "98040833e": 150, "75128428e": 150, "15309907e": 150, "83186429e": 150, "bewar": [150, 161, 868], "evoked_subset": 150, "repair": [150, 166, 167, 200, 201, 202, 207, 211, 215, 216, 220, 246, 263, 266, 268, 269, 271, 357, 359, 454, 481, 496, 556, 559, 561, 562, 574, 575, 577, 579, 580, 584, 601, 602, 606, 710, 805, 806, 826, 861, 886], "evk_fil": 150, "evokeds_list": [150, 151], "right_vi": 150, "remedi": 150, "left_right_aud": 150, "6992832460543575": [150, 152], "fairli": [150, 167, 200, 202, 203, 204, 206, 208, 209], "left_aud": 150, "right_aud": 150, "proport": [150, 228, 273, 274, 275, 277, 280, 281, 282, 355, 367, 479, 562, 570, 812, 817, 868, 886], "grand_averag": [150, 152, 876, 886], "intend": [150, 172, 211, 218, 259, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 437, 481, 482, 562, 595, 601, 852], "standard_error": [150, 266, 267, 268, 269, 624, 886], "iter_evok": [150, 152, 266, 267, 886], "ix": [150, 152], "return_amplitud": [150, 152, 268, 269], "569": [150, 197, 233], "892": [150, 155, 233], "10_evoked_overview": [150, 155], "evoked_fil": 151, "life": [151, 867], "evk": [151, 152], "superimpos": [151, 173, 200, 220, 562, 755, 798], "timeseri": [151, 225, 266, 267, 268, 269, 481, 482, 673, 707], "resembl": [151, 163, 176, 529, 587, 588], "wing": 151, "behav": [151, 203, 217, 270, 271, 442, 886], "time_ranges_of_interest": 151, "drag": [151, 152, 162, 219, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 706, 708, 710, 785, 786, 790, 793, 797, 806, 808, 809, 814, 816, 843, 863], "averaging_dur": 151, "augment": [151, 871], "custom_func": 151, "0x7f29b684c160": 151, "substr": [151, 629, 641, 886], "action": [151, 172, 845, 871, 874], "ambigu": [151, 274, 280, 282, 886], "temp_list": 151, "_comment": 151, "_evk": 151, "overhead": [151, 653, 749, 886], "trans_fil": 151, "00097": 151, "meg_surf": [151, 521], "_map": 151, "166": [151, 170, 203, 228, 233, 238, 246], "834": [151, 155, 233], "20_visualize_evok": [151, 155], "materi": [152, 163, 841, 845, 865], "link": [152, 190, 246, 273, 277, 281, 448, 768, 812, 845, 851, 865, 868, 874, 886], "events_fil": [152, 202], "discard": [152, 201, 206, 207, 208, 211, 238, 593, 594, 621, 886], "last_samp": [152, 271, 364, 480, 481, 482, 841, 886], "13514": 152, "mislabel": 152, "lowercas": 152, "channel_renaming_dict": [152, 217], "schemat": 152, "diagram": [152, 206, 841], "addition": [152, 172, 191, 200, 207, 219, 241, 257, 274, 280, 282, 320, 331, 652, 734, 737, 817, 845, 860, 870], "realist": [152, 246, 861, 868], "dedic": [152, 200, 206, 208, 217, 481, 482, 807, 845, 849, 867, 875, 886], "use_browser_backend": [152, 201, 204, 206, 207, 208, 209, 266, 267, 481, 482, 562, 784, 801, 807, 876, 886], "xx": [152, 201, 204, 207, 208, 209, 260, 845], "qt": [152, 172, 173, 201, 204, 206, 207, 208, 209, 266, 267, 481, 482, 562, 754, 784, 801, 807, 823, 826, 843, 865, 886], "scheme": [152, 189, 223, 232, 263, 266, 267, 268, 269, 275, 413, 420, 429, 481, 482, 561, 562, 577, 648, 651, 687, 706, 708, 710, 771, 784, 786, 793, 797, 806, 809, 810, 814, 816, 845, 868, 886], "eeg53": 152, "eog61": 152, "chose": 152, "consol": [152, 849, 886], "duplic": [152, 162, 261, 266, 267, 268, 269, 272, 276, 314, 342, 481, 482, 642, 886], "eeg03": 152, "eeg01": 152, "eeg02": 152, "eeg04": 152, "eeg06": 152, "eeg07": 152, "eeg25": 152, "25auditori": 152, "27buttonpress": 152, "5visual": 152, "28visual": 152, "barplot": [152, 206], "lose": [152, 190, 219, 865], "plot_drop_log": [152, 202, 212, 266, 267, 876, 886], "break": [152, 166, 215, 216, 219, 260, 266, 268, 271, 481, 559, 565, 585, 621, 839, 845, 861, 886], "l_aud": [152, 238], "l_vi": [152, 238], "fig1": [152, 171], "speak": [152, 168, 169, 205, 853], "agreement": [152, 867], "warrant": 152, "popul": [152, 156, 166, 223, 226, 231, 246, 267, 269, 375, 413, 445, 482, 595, 688, 750, 841, 886], "leverag": [152, 867], "verifi": [152, 183, 243, 850, 851, 868], "plain": [152, 193, 205, 243, 334, 831], "ddof": [152, 163, 865], "lime": 152, "revisit": [152, 246, 413], "eeg17": 152, "eeg18": 152, "eeg26": 152, "eeg23": 152, "eeg24": 152, "eeg34": 152, "eeg35": 152, "left_ix": 152, "right_ix": 152, "roi_dict": 152, "left_roi": [152, 266, 267, 268, 269, 785, 790], "right_roi": [152, 266, 267, 268, 269, 785, 790], "roi_evok": 152, "combine_channel": [152, 876, 886], "aud_minus_vi": 152, "29969": 152, "69928": 152, "weak": [152, 206], "chapter": 152, "erplab": [152, 246], "consequ": [152, 163, 170, 211, 357, 358, 359, 442, 453, 498, 549, 865, 868, 886], "voltag": [152, 167, 169, 189, 190, 209, 218, 506, 841, 886], "p100": 152, "submit": [152, 229, 845, 867], "amp": [152, 179, 184, 186, 258, 886], "throughout": [152, 172, 212, 562, 862, 886], "remaind": 152, "print_peak_measur": 152, "3f": [152, 211, 229, 233, 243, 266, 267, 268, 269, 481, 482, 708, 710, 786, 793], "good_tmin": 152, "good_tmax": 152, "eeg55": 152, "578": [152, 233], "508": [152, 210, 229, 233], "priori": [152, 243, 868], "believ": [152, 243, 845, 868], "eeg59": 152, "fist": 152, "l_vis_roi": 152, "ch_roi": 152, "lat_roi": 152, "amp_roi": 152, "FOR": 152, "ONE": [152, 158, 197, 246], "suscept": [152, 204, 583], "challeng": [152, 213, 246, 862, 865, 874], "meth": [152, 173, 845, 886], "guarante": [152, 189, 201, 206, 209, 211, 228, 266, 267, 268, 269, 443, 444, 445, 446, 481, 482, 512, 886], "rise": [152, 497, 612, 618, 841], "crucial": [152, 157, 200, 236], "bad_tmin": 152, "bad_tmax": 152, "bad_lat_roi": 152, "bad_amp_roi": 152, "898": [152, 233], "487": [152, 175, 228, 233], "unclear": [152, 845], "truli": [152, 203, 693], "pink": [152, 157, 770, 841], "star": 152, "yourself": [152, 157, 170, 200, 204, 217, 258, 268, 269, 492, 793, 845], "c6": 152, "act": [152, 170, 204, 205, 207, 211, 266, 267, 268, 269, 279, 299, 300, 349, 476, 478, 479, 481, 482, 540, 594, 651, 709, 841, 863, 865, 867, 886], "eeg54": 152, "eeg57": 152, "l_vis_mean_roi": 152, "mean_amp_roi": 152, "mean_amp_roi_df": 152, "mean_amp": 152, "numeric_onli": 152, "279764": 152, "685840": 152, "reiter": 152, "hypothes": [152, 228, 229, 874], "l_vis_crop": 152, "mean_amp_al": 152, "mean_amp_all_df": 152, "option_context": 152, "max_column": 152, "689513": 152, "078492": 152, "381191": 152, "609264": 152, "eeg05": 152, "113717": 152, "eeg56": 152, "064174": 152, "259681": 152, "eeg58": 152, "156472": 152, "802306": 152, "eeg60": 152, "878811": 152, "dietrich": [152, 246, 529, 868], "lehmann": [152, 246, 529, 868], "wolfgang": [152, 246, 735, 738], "skrandi": [152, 246], "identif": [152, 206, 246, 577], "checkerboard": [152, 167, 243, 246, 862], "621": [152, 197, 233, 246], "90419": [152, 246], "neurobiologi": [152, 246], "1984": [152, 246], "0301": [152, 246], "0082": [152, 246], "90003": [152, 246], "micah": [152, 246], "brunet": [152, 246], "michel": [152, 186, 246, 391, 562, 666], "s10548": [152, 209, 246, 578, 671], "0054": [152, 246], "ma": [152, 246, 886], "52585": [152, 246], "mitpress": [152, 246], "book": [152, 246, 452, 845], "javier": [152, 246], "lopez": [152, 246], "calderon": [152, 246], "00213": [152, 246], "preclud": [152, 203, 211, 246, 594], "00131": [152, 203, 246], "rufin": [152, 203, 246], "vanrullen": [152, 203, 246], "fallaci": [152, 203, 246], "00365": [152, 203, 246], "nichola": [152, 213, 246, 576, 862], "gaspelin": [152, 246], "12639": [152, 246], "30_eeg_erp": [152, 155], "perspect": [153, 207, 754], "satisfi": [153, 162, 228, 299, 300, 688, 708, 710, 868], "40_whiten": [153, 155], "repetit": [154, 166, 671], "779": [155, 233], "auto_tutorials_evok": 155, "outer": [156, 159, 161, 162, 184, 258, 309, 562, 594, 754, 800, 841, 846, 849, 852, 861, 862, 865, 868, 871], "tissu": [156, 159, 841], "boundari": [156, 159, 173, 183, 192, 220, 263, 266, 267, 268, 269, 272, 275, 276, 365, 413, 420, 471, 481, 482, 561, 562, 583, 611, 671, 685, 706, 708, 710, 754, 759, 771, 772, 786, 793, 797, 806, 808, 809, 814, 816, 841, 851, 871, 886], "analog": [156, 189, 191, 197, 207, 211, 266, 267, 268, 269, 448, 481, 482, 489, 496, 504, 559, 706, 708, 709, 710, 841, 871, 886], "freesurfer_hom": [156, 374, 851], "setupfreesurf": 156, "sh": [156, 848, 851], "folder": [156, 157, 159, 162, 171, 189, 217, 276, 279, 305, 309, 340, 379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 461, 462, 467, 497, 510, 618, 650, 770, 772, 845, 848, 851, 886], "my_subject": 156, "my_nifti": 156, "subfold": [156, 388], "beforehand": [156, 266, 267, 784, 822], "set_config": [156, 172, 266, 267, 377, 388, 461, 481, 482, 562, 752, 784, 801, 807, 843, 845, 861, 876, 886], "overview": [156, 157, 166, 171, 174, 175, 181, 202, 206, 208, 215, 216, 228, 242, 251, 266, 267, 268, 269, 271, 277, 355, 404, 454, 481, 482, 502, 523, 528, 529, 543, 559, 562, 579, 580, 584, 706, 736, 778, 784, 787, 801, 807, 823, 841, 865], "buckner40not": 156, "standalon": [156, 847, 878, 886], "675": [156, 165, 233], "10_background_freesurf": [156, 165], "landmark": [157, 223, 337, 367, 841, 861, 868, 871, 886], "t1w": [157, 314], "nifti1imag": [157, 183, 278, 281, 282, 309], "xyzt_unit": 157, "uint8": 157, "t1_mgh": 157, "mghimag": [157, 868], "draw": [157, 171, 177, 178, 203, 230, 263, 266, 267, 268, 269, 275, 314, 413, 420, 481, 482, 561, 562, 577, 587, 706, 708, 710, 771, 777, 778, 785, 786, 788, 793, 797, 800, 804, 806, 809, 810, 814, 816, 868, 871, 886], "ight": 157, "nterior": 157, "longest": 157, "uperior": 157, "camera": [157, 161, 193, 268, 269, 472, 754, 768, 770, 789, 822, 886], "dig_mri_dist": [157, 367, 876, 886], "na": [157, 243, 488, 841], "preauricular": [157, 314, 338, 841, 868], "manufactur": [157, 171, 189, 190, 191, 193, 841, 868, 874, 886], "faq": [157, 190, 203, 209, 311, 373, 489, 594, 866], "intersect": [157, 161, 162, 185, 594, 611, 861, 886], "purpl": [157, 159, 238], "perpendicular": [157, 179, 868], "goe": [157, 161, 203, 219, 868], "upward": [157, 161, 206, 210, 754, 778], "compani": [157, 246, 688, 867], "acquir": [157, 201, 286, 287, 309, 505, 857, 862, 867, 868, 871, 886], "emit": [157, 210, 260, 266, 267, 268, 269, 271, 273, 274, 276, 277, 280, 281, 282, 286, 287, 318, 341, 350, 351, 356, 360, 363, 365, 367, 371, 372, 432, 447, 460, 463, 481, 482, 502, 562, 595, 614, 643, 645, 706, 708, 709, 710, 751, 787, 798, 832, 834, 841, 886], "coregist": [157, 309, 472], "front": [157, 268, 269, 308, 432, 754, 788, 841, 868], "magenta": 157, "1mm": 157, "anisotrop": [157, 246, 868], "incorrectli": [157, 473, 865, 886], "identity_tran": 157, "mri_voxel": [157, 327, 514, 741], "corner": [157, 192, 203, 204, 207, 220, 258, 266, 267, 268, 269, 271, 481, 482, 767, 778, 784, 792, 807, 871, 886], "inferior": [157, 161, 841], "seghead_rr": 157, "seghead_tri": 157, "read_surfac": [157, 161, 162, 272, 640, 655, 839, 861, 876, 886], "mri_to_head": 157, "scalp_pts_in_head_coord": 157, "head_to_meg": 157, "scalp_pts_in_meg_coord": 157, "vox_to_mri": 157, "get_vox2ras_tkr": [157, 161, 183], "mri_to_vox": 157, "scalp_points_in_vox": 157, "nose": [157, 209, 308], "roughli": [157, 356, 583, 843, 886], "blur": [157, 868], "fiffv_point_cardin": [157, 161, 271, 871], "fiffv_point_nas": [157, 161, 271, 871], "fiffv_coord_head": [157, 270, 271, 871], "nasion_mri": [157, 161], "nasion_vox": [157, 161], "toggl": [157, 167, 173, 192, 201, 206, 220, 266, 267, 481, 482, 562, 754, 784, 799, 801, 807, 823, 886], "radio": [157, 874], "icon": [157, 173], "fid": [157, 705], "icp": [157, 886], "finetun": 157, "inner_skul": [157, 159, 160, 162, 173, 184, 279, 643, 770, 861, 862], "outer_skul": [157, 159, 160, 162, 171, 173, 279, 770, 861, 862], "equiv": [157, 184, 185, 186, 209], "rv": [157, 184, 185, 186, 209, 862], "00349057": [157, 209], "mu1": [157, 184, 185, 186, 209], "944702": [157, 209], "lambda1": [157, 184, 185, 186, 209], "137194": [157, 209], "mu2": [157, 184, 185, 186, 209], "667435": [157, 209], "683781": [157, 209], "mu3": [157, 184, 185, 186, 209], "26548": [157, 209], "lambda3": [157, 184, 185, 186, 209], "0106058": [157, 209], "6156": 157, "2300": 157, "1904": 157, "228": [157, 165, 170, 210, 228, 233, 246, 578], "20_source_align": [157, 165], "hsp": [158, 189, 258, 314, 327, 339, 367, 506, 620, 868, 886], "preprat": 158, "jon": [158, 246, 886], "houck": [158, 246, 886], "faveli": [158, 873, 886], "skin": [158, 159, 162, 258, 266, 267, 268, 269, 309, 367, 481, 482, 559, 706, 708, 709, 710, 841, 862, 865, 868, 886], "fit_fiduci": [158, 367], "fit_icp": [158, 367], "n_iter": [158, 367, 592], "nasion_weight": [158, 367], "omit_head_shape_point": [158, 367], "compute_dig_mri_dist": [158, 367], "write_tran": [158, 639, 876], "abil": [158, 179, 181, 197, 664, 665, 734, 737, 863, 867, 874, 886], "set_scale_mod": [158, 367], "fetch_infant_templ": [158, 160, 862, 876, 886], "scale_mri": [158, 367, 646, 876, 886], "clau": [158, 246], "plo": [158, 197, 246], "e0232100": [158, 246], "pone": [158, 197, 246], "0232100": [158, 246], "25_automated_coreg": [158, 165], "concept": [159, 177, 228, 246, 841, 869, 872], "make_watershed_bem": [159, 192, 841, 865, 876, 886], "make_flash_bem": [159, 305, 841, 876, 886], "plot_bem": [159, 161, 311, 770, 865, 868, 876, 886], "plot_bem_kwarg": 159, "brain_surfac": [159, 772], "mrilab": [159, 871], "isn": [159, 167, 225, 243, 262, 266, 382, 405, 406, 628, 631, 634, 709, 845, 865], "candid": [159, 201, 841, 867], "oct4": 159, "90mm": 159, "57798": 159, "24365": 159, "20377": 159, "32480": 159, "22941": 159, "2787": 159, "9357": 159, "20154": 159, "846": [159, 183, 197, 210, 233], "10797": 159, "12738": 159, "13143": 159, "10203": 159, "2362": [159, 206, 246, 562], "10376": 159, "midpoint": [159, 191, 268, 269, 772, 868, 886], "make_bem_model": [159, 162, 192, 279, 367, 432, 463, 520, 526, 614, 643, 645, 834, 861, 876, 886], "4th": [159, 200, 266, 267, 268, 269, 415, 424, 448, 449, 451, 452, 481, 482, 574, 575], "icosahedron": [159, 161, 162, 258, 273, 277, 281, 654, 812], "n_tri": [159, 161, 272, 834], "topologi": [159, 203, 549, 886], "commonli": [159, 169, 171, 176, 203, 243, 271, 471, 562, 841, 886], "gone": 159, "adequ": [159, 208, 271], "1422": [159, 170], "fwd_fix": 159, "explicitli": [159, 173, 189, 197, 202, 204, 205, 206, 236, 261, 266, 267, 268, 269, 271, 276, 299, 300, 305, 312, 315, 331, 356, 360, 361, 371, 372, 373, 413, 415, 420, 429, 434, 451, 452, 456, 457, 476, 478, 479, 481, 482, 515, 540, 561, 562, 564, 578, 579, 580, 586, 592, 600, 602, 609, 611, 651, 658, 659, 660, 669, 670, 672, 674, 692, 693, 694, 695, 696, 697, 706, 708, 709, 710, 714, 715, 716, 717, 719, 737, 778, 784, 785, 788, 790, 791, 794, 803, 808, 843, 845, 861, 867, 874, 886], "src_hemi": 159, "apply_forward": [159, 287, 876, 886], "write_forward_solut": [159, 626, 876, 886], "justifi": [159, 452, 481, 482, 886], "claim": 159, "604": [159, 165, 196, 233], "30_forward": [159, 165], "centimet": 160, "fs_dir": [160, 389], "live": [160, 203, 845, 886], "1005": 160, "new_nam": 160, "rstrip": 160, "fp": [160, 449, 664], "999994": 160, "003552": 160, "000202": 160, "003558": 160, "998389": 160, "056626": 160, "000001": [160, 229, 232], "998395": 160, "2433": [160, 170], "7809": 160, "4522": 160, "8001": 160, "4418": 160, "6mo": [160, 391], "ants6": 160, "0months3t": 160, "come": [160, 176, 182, 189, 190, 203, 204, 206, 208, 219, 229, 243, 272, 277, 374, 505, 523, 582, 621, 841, 843, 845, 849, 850, 862, 868, 886], "fname_1020": 160, "mon": [160, 505], "read_dig_fif": [160, 314, 327, 330, 333, 334, 335, 337, 338, 339, 868, 876, 886], "03d": [160, 498], "99975431": 160, "01839625": 160, "01236795": 160, "00087239": 160, "0143472": 160, "96230429": 160, "27159646": 160, "01252444": 160, "01689809": 160, "27135229": 160, "96233177": 160, "03137219": 160, "48640": 160, "48214": 160, "35_eeg_no_mri": [160, 165], "readabl": [161, 266, 267, 268, 269, 376, 415, 424, 449, 451, 452, 481, 482, 589, 845], "superior": [161, 274, 280, 282, 629, 754, 841, 868], "wide": [161, 167, 217, 845, 867], "unfamiliar": [161, 849], "unsign": [161, 273, 274, 277, 280, 281, 282, 886], "triplet": [161, 271, 457, 529, 656], "geograph": 161, "earth": 161, "north": 161, "prime": [161, 171], "meridian": 161, "degre": [161, 163, 193, 207, 228, 230, 233, 236, 258, 263, 268, 269, 271, 305, 309, 492, 592, 659, 693, 694, 696, 697, 706, 754, 759, 790, 822, 841, 851, 865, 868, 886], "nonetheless": [161, 203], "nativ": [161, 183, 189, 190, 266, 267, 268, 269, 318, 327, 332, 443, 444, 445, 446, 481, 482, 498, 506, 620, 754, 756, 862, 865, 874, 886], "mind": [161, 163, 176, 203, 257, 845], "si": [161, 191, 193, 228, 242, 266, 267, 268, 269, 300, 457, 481, 482, 582, 788, 790], "xyz_ra": 161, "00000000e": 161, "15484021e": 161, "91852465e": 161, "22726395e": 161, "56816911e": 161, "57160827e": 161, "18960930e": 161, "49011647e": 161, "40284092e": 161, "00712036e": 161, "726": [161, 197, 233], "ras_coords_mm": 161, "inv_affin": 161, "i_": [161, 189], "j_": 161, "k_": 161, "imshow_mri": 161, "ori_slic": 161, "saggit": 161, "ori_nam": 161, "set_path_effect": 161, "reorient": 161, "rightward": 161, "x_order": 161, "lip": 161, "y_order": 161, "torig": 161, "vox2ras_tkr": [161, 183], "conform": [161, 191, 260, 868, 886], "matter": [161, 171, 266, 267, 268, 269, 272, 471, 481, 482, 515, 562, 611, 706, 708, 709, 710, 788, 861, 867, 886], "freeurfer": 161, "whenev": [161, 203, 845, 863], "everywher": 161, "xyz_mri": 161, "digpoint": [161, 367, 886], "nasion_head": 161, "nasion_dig_mri": 161, "nasion_dig_vox": 161, "convention": 161, "rr_mm": 161, "313728": 161, "80481719970703": 161, "rr_vox": 161, "tricontour": 161, "renderer_kwarg": 161, "curv": [161, 197, 266, 267, 268, 269, 271, 481, 482, 667, 704, 708, 710, 868, 871], "read_curvatur": [161, 876], "y_shift": 161, "z_shift": 161, "this_rr": 161, "this_tri": 161, "copper_r": 161, "quiver3d": [161, 207, 886], "1050": 161, "wirefram": 161, "cyan": [161, 481, 482, 807], "line_width": 161, "cull": 161, "render_lines_as_tub": 161, "uniformli": [161, 192, 208, 478], "uniform": [161, 367, 434, 529, 658, 673, 696, 697, 841, 886], "subsampl": [161, 261, 264, 265, 266, 267, 268, 269, 273, 274, 277, 279, 280, 281, 282, 481, 482, 519, 579, 580, 654, 692, 706, 709, 718, 754, 861, 886], "rr_sph": 161, "mri_mni_tran": 161, "xyz_mni": 161, "02248488": 161, "00844919": 161, "03621711": 161, "00111715": 161, "07107091": 161, "91486582": 161, "40609791": 161, "02300193": 161, "00875602": 161, "43369992": 161, "02811882": 161, "03356932": 161, "land": [161, 223], "difficult": [161, 190, 202, 233, 562, 868], "gist": [161, 177, 190, 266, 267, 268, 269, 481, 482, 865], "github": [161, 266, 267, 268, 269, 481, 482, 843, 853, 857, 864, 865, 866, 867], "alexrockhil": 161, "b5a1ce6c6ba363cf3f277cd321a763bf": 161, "948": [161, 165, 210, 233], "50_background_freesurfer_mn": [161, 165], "aris": [162, 200, 583], "ezemikulan": 162, "blender_freesurf": 162, "ezequiel": [162, 886], "mikulan": [162, 886], "manorama": [162, 886], "kadwani": [162, 886], "shutil": 162, "flash": [162, 214, 279, 305, 309, 590, 770, 862, 886], "surf_dir": 162, "problemat": [162, 190, 203, 206, 207, 211, 228, 266, 267, 276, 310, 332], "skill": [162, 845], "conv": 162, "conv_dir": 162, "makedir": 162, "exist_ok": 162, "read_metadata": [162, 637], "write_surfac": [162, 637, 640, 876, 886], "wavefront": [162, 637, 839, 886], "vert": [162, 179, 225, 243, 279], "preset": [162, 273, 274, 277, 280, 281, 282, 754, 812, 817], "beginn": [162, 847, 870], "teach": [162, 178, 246, 886], "_fix": 162, "inner_skull_fix": 162, "backup": 162, "mistak": [162, 845, 865], "inner_skull_orig": 162, "volume_info": [162, 637, 839], "vol_info": 162, "faulti": 162, "write_head_bem": [162, 876, 886], "head_dir": 162, "read_bem_surfac": [162, 519, 520, 613, 876, 886], "make_scalp_surfac": [162, 852, 876, 886], "shrinkwrap": 162, "\u2460": 162, "\u2461": 162, "\u2462": 162, "\u2464": 162, "tab": [162, 193, 258, 472, 550, 762, 845, 863], "\u2465": 162, "\u2467": 162, "noth": [162, 185, 186, 202, 263, 266, 267, 268, 269, 275, 278, 356, 367, 413, 420, 424, 426, 481, 482, 561, 562, 577, 648, 706, 708, 710, 757, 767, 771, 786, 793, 797, 806, 809, 814, 816, 862, 871, 886], "\u2468": 162, "extrus": 162, "extrud": 162, "rough": [162, 865], "ahead": [162, 845], "kernel": [162, 191, 196, 228, 243, 246, 273, 274, 277, 280, 281, 282, 419, 659, 843, 849, 851, 865, 886], "mri_convert": [162, 868], "fwhm": [162, 722, 732, 736, 876, 886], "t1_smoothed_3": 162, "delet": [162, 172, 201, 202, 212, 260, 263, 266, 267, 268, 269, 275, 365, 413, 420, 481, 482, 561, 562, 577, 650, 706, 708, 710, 771, 793, 797, 806, 809, 814, 845, 853, 868, 886], "cleaner": [162, 203], "encount": [162, 166, 190, 203, 447, 843, 851, 865], "runtimeerror": 162, "20516": 162, "isomorph": 162, "defect": [162, 258, 310, 367, 432, 463, 614, 643, 645, 834, 865, 886], "1014": [162, 210], "7732": 162, "8435": [162, 886], "8489": 162, "10181": 162, "11120": [162, 886], "11121": 162, "11122": [162, 886], "11304": 162, "11788": 162, "disrupt": 162, "999668": 162, "wrong": [162, 844, 886], "easiest": [162, 200, 202, 204, 223, 845, 848], "unedit": 162, "gpl": 162, "water": 162, "clean_from_arrai": 162, "80_fix_bem_in_blend": [162, 165], "bb": [163, 442], "pp": [163, 266, 267, 302, 434, 688], "desc": [163, 207, 275], "66000": 163, "write_cov": [163, 615, 876, 886], "noise_cov_baselin": 163, "noise_cov_reg": 163, "1769": 163, "1785": 163, "1797": 163, "freedom": [163, 207, 228, 230, 233, 236, 263, 268, 269, 472, 693, 694, 696, 697, 770, 789, 865, 886], "violat": [163, 845, 865], "hack": [163, 243], "evoked_meg": 163, "empty_room": 163, "improp": [163, 886], "overestim": [163, 205], "juha": [163, 211, 246, 594, 865], "simola": [163, 211, 246, 594, 865], "kajola": [163, 211, 246, 434, 573, 594, 865, 868], "3359": [163, 246, 865], "3372": [163, 246, 865], "tsp": [163, 206, 246, 356, 562, 865], "853302": [163, 246, 865], "90_compute_covari": [163, 165], "auto_tutorials_forward": 165, "605": [165, 197], "emphasi": [166, 268, 269, 788, 869], "topic": [166, 167, 190, 200, 203, 205, 246, 299, 860, 869, 870], "knowledg": [166, 243, 861, 867], "unexplain": 166, "experienc": [166, 564, 867], "troubl": [166, 886], "configur": [166, 169, 174, 175, 191, 208, 217, 233, 266, 267, 359, 388, 461, 462, 472, 481, 482, 506, 540, 550, 562, 574, 575, 650, 705, 749, 754, 784, 801, 807, 820, 821, 822, 843, 850, 862, 864, 865, 868, 871, 874, 876, 886], "eyetrack": [166, 194, 195, 214, 260, 266, 267, 268, 269, 313, 375, 481, 482, 500, 559, 706, 708, 709, 710, 868, 875, 876, 886], "infrar": [166, 191, 215, 216, 246, 266, 267, 268, 269, 271, 355, 442, 481, 482, 510, 559, 596, 597, 598, 600, 706, 708, 709, 710, 754, 778, 787, 792, 852, 862, 868, 886], "spectroscopi": [166, 191, 215, 216, 246, 266, 267, 268, 269, 271, 355, 442, 481, 482, 510, 559, 596, 597, 598, 600, 706, 708, 709, 710, 754, 778, 787, 792, 852, 862, 868, 886], "tracker": [166, 192, 215, 216, 260, 266, 454, 500, 845, 862, 865], "vssr": [166, 244, 245, 266, 271, 314, 330, 442, 491, 559, 708, 816, 862], "bti": [166, 187, 188, 228, 263, 264, 266, 268, 269, 271, 304, 356, 454, 456, 492, 526, 770, 782, 868, 886], "twowai": [166, 234, 235, 266, 271, 481, 559, 621, 687, 689, 690, 694, 709, 736, 886], "anova": [166, 197, 228, 231, 234, 235, 239, 240, 266, 268, 269, 271, 277, 279, 362, 481, 528, 529, 543, 559, 621, 636, 678, 687, 688, 689, 690, 694, 697, 698, 709, 736, 754, 886], "spatiotempor": [166, 230, 234, 235, 246, 266, 268, 269, 271, 320, 481, 559, 594, 621, 686, 693, 697, 698, 709, 736, 775, 778, 886], "strf": [166, 198, 199, 419, 425, 453], "submodul": [166, 167, 200, 206, 208, 217, 223, 226, 845, 886], "corrupt": [166, 200, 201, 226, 227, 263, 266, 269, 270, 271, 272, 277, 356, 366, 454, 481, 528, 529, 543, 626, 629, 670, 673, 754, 865, 886], "auto_tutorials_python": 166, "auto_tutorials_jupyt": 166, "varieti": [167, 189, 191, 200, 217, 868], "smoothli": [167, 202, 217, 263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 706, 708, 710, 786, 793, 797, 806, 809, 814], "substitut": [167, 374, 843, 867, 868], "glimps": [167, 217], "41700": 167, "custom_ref_appli": [167, 170, 217, 223, 271, 886], "file_id": [167, 170, 217, 266, 267, 268, 269, 271, 481, 482, 483, 871, 886], "hpi_mea": [167, 170, 217, 271, 886], "hpi_result": [167, 170, 217, 271, 886], "meas_dat": [167, 169, 170, 202, 217, 219, 223, 260, 266, 267, 268, 269, 271, 480, 481, 482, 483, 562, 595, 801, 807, 886], "utc": [167, 170, 217, 219, 266, 267, 268, 269, 271, 481, 482, 886], "meas_id": [167, 170, 217, 266, 267, 268, 269, 271, 481, 482, 483, 871, 886], "breviti": 167, "walk": [167, 206, 208], "orig_raw": 167, "chan_idx": 167, "sent": [167, 169, 191, 192, 206, 214, 218, 276], "deliveri": 167, "squarewav": 167, "unambigu": [167, 169], "older": [167, 169, 171, 322, 433, 481, 871, 886], "summat": [167, 169, 203, 698], "6994": 167, "7086": 167, "7304": 167, "7413": 167, "ordinari": [167, 169, 201, 207, 228, 580, 585, 691, 867], "autoreject": [167, 201, 202, 852], "aren": [167, 209, 457], "fewest": 167, "conds_we_care_about": 167, "aud_epoch": 167, "vis_epoch": 167, "136": [167, 170, 228, 232, 233, 279], "richer": 167, "aud_evok": 167, "vis_evok": 167, "classic": [167, 243, 273, 274, 277, 280, 281, 282, 735, 738, 754, 812, 817], "p200": [167, 192], "dorso": 167, "evoked_diff": [167, 212], "underdetermin": 167, "akin": 167, "inverse_operator_fil": 167, "inv_oper": 167, "\u03bb\u00b2": 167, "61922423e": 167, "06837855e": 167, "49139511e": 167, "10_overview": [167, 175], "obligatorili": 168, "unexpect": [168, 197, 246, 266, 267, 268, 269, 320, 356, 510, 865], "apply_funct": [168, 266, 267, 268, 269, 481, 482, 886], "unprocess": [168, 871], "original_raw": 168, "complex128": [168, 266, 267, 268, 269, 481, 482], "certain": [168, 169, 192, 200, 204, 206, 211, 214, 223, 242, 264, 268, 269, 388, 439, 468, 481, 482, 540, 562, 581, 595, 693, 694, 788, 820, 843, 845, 867, 868, 886], "unaffect": [168, 204, 419], "rereferenced_raw": 168, "ref_data": [168, 651], "fig_orig": 168, "fig_reref": 168, "15_inplac": [168, 175], "broadli": 169, "ram": [169, 200, 202, 217, 218, 219, 220, 266, 267, 481, 482, 562, 784, 801, 807, 886], "36037": [169, 200, 204, 207, 208, 209, 211, 218, 219, 220], "necessarili": [169, 171, 190, 200, 202, 205, 259, 266, 267, 299, 722, 732, 736, 763, 868], "instantan": [169, 225], "receiv": [169, 191, 434, 498, 667, 843, 868, 886], "rectangular": [169, 203, 228, 273, 274, 277, 280, 281, 282, 812, 817], "ttl": [169, 608], "upcom": 169, "newer": [169, 171, 206, 843, 848, 851, 853, 886], "27977": 169, "28345": 169, "28771": 169, "29219": 169, "29652": 169, "preced": [169, 266, 267, 362, 473, 754, 784, 841, 845, 886], "config": [169, 172, 189, 258, 259, 266, 267, 377, 379, 380, 381, 382, 384, 385, 386, 388, 389, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 454, 455, 461, 462, 472, 481, 482, 492, 552, 562, 633, 643, 646, 650, 754, 763, 784, 801, 807, 845, 886], "mne_stim_channel": [169, 172, 259, 454, 455, 481, 482], "mne_stim_channel_1": [169, 259, 454, 455], "saver": [169, 202, 204, 863, 865], "testing_data_fold": 169, "eeglab_raw_fil": 169, "eeglab_raw": 169, "began": 169, "000068": 169, "unmodifi": [169, 209, 510], "custom_map": 169, "annotations_from_ev": [169, 260, 442, 876, 886], "orig_tim": [169, 202, 219, 260, 285, 886], "annot_from_ev": 169, "event_desc": [169, 285], "rem_annot": 169, "rem_ev": 169, "rem_event_dict": 169, "modulo": 169, "501": [169, 183, 188, 204, 210, 228, 241, 245], "onlin": [169, 201, 206, 220, 259, 857, 870, 886], "894": [169, 175, 210], "20_events_from_raw": [169, 175], "alon": [170, 857], "gantri": [170, 271, 886], "blank": [170, 217, 706, 851, 886], "subject_info": [170, 266, 267, 268, 269, 271, 481, 482, 483, 886], "device_info": [170, 266, 267, 268, 269, 271, 445, 481, 482, 483, 886], "helium_info": [170, 266, 267, 268, 269, 271, 481, 482, 483, 886], "hpi_subsystem": [170, 271], "proc_histori": [170, 266, 267, 268, 269, 271, 481, 482, 483], "proj_id": [170, 217, 266, 267, 268, 269, 271, 481, 482, 483], "proj_nam": [170, 217, 266, 267, 268, 269, 271, 481, 482, 483], "utc_offset": [170, 266, 267, 268, 269, 271, 481, 482, 483, 886], "line_freq": [170, 243, 271], "gantry_angl": [170, 271], "ctf_head_t": [170, 271, 871], "dev_ctf_t": [170, 271, 871], "acq_par": [170, 217, 259, 271], "acq_stim": [170, 271], "xplotter_layout": [170, 271], "kit_system_id": [170, 271], "0143": 170, "0142": 170, "0213": 170, "0212": [170, 337], "0222": 170, "0223": 170, "0232": 170, "0233": 170, "0313": 170, "0312": 170, "0322": 170, "0323": 170, "0333": 170, "0332": 170, "0343": 170, "0342": 170, "0413": 170, "0412": 170, "0422": 170, "0423": 170, "0432": 170, "0433": 170, "0443": 170, "0442": 170, "0513": 170, "0512": 170, "0523": [170, 246, 671], "0522": 170, "0532": 170, "0533": 170, "0542": 170, "0543": 170, "0613": 170, "0612": 170, "0622": 170, "0623": 170, "0633": 170, "0632": 170, "0643": 170, "0713": 170, "0712": 170, "0723": 170, "0722": 170, "0733": 170, "0732": 170, "0743": 170, "0742": 170, "0813": 170, "0822": 170, "0823": 170, "0913": 170, "0912": 170, "0923": 170, "0922": 170, "0932": 170, "0933": 170, "0943": 170, "1012": [170, 196], "1023": [170, 196], "1032": [170, 197, 210], "1042": [170, 197, 337], "1112": 170, "1113": 170, "1123": 170, "1133": 170, "1132": [170, 210], "1143": 170, "1213": 170, "1212": 170, "1223": 170, "1222": [170, 210], "1232": 170, "1243": 170, "1242": 170, "1312": 170, "1313": 170, "1343": [170, 196], "1412": 170, "1413": 170, "1423": 170, "1433": 170, "1432": 170, "1442": 170, "1443": 170, "1512": [170, 246, 476], "1513": 170, "1523": [170, 246, 722, 732, 733, 735, 736, 738], "1533": 170, "1532": 170, "1543": [170, 210], "1542": 170, "1612": 170, "1622": 170, "1623": 170, "1632": 170, "1633": 170, "1642": 170, "1713": 170, "1712": 170, "1722": 170, "1723": 170, "1732": 170, "1733": 170, "1743": 170, "1742": 170, "1813": 170, "1812": 170, "1822": 170, "1823": 170, "1832": 170, "1833": 170, "1843": 170, "1912": [170, 196], "1913": [170, 196], "1923": 170, "1922": 170, "1932": 170, "1933": 170, "1943": 170, "1942": 170, "2023": [170, 172], "2032": 170, "2033": 170, "2042": 170, "2112": 170, "2122": 170, "2133": 170, "2132": 170, "2143": [170, 246, 735, 738], "2142": 170, "2212": 170, "2213": 170, "2223": 170, "2222": 170, "2233": 170, "2242": [170, 217], "2243": 170, "2312": [170, 196], "2313": [170, 211], "2323": 170, "2322": 170, "2333": [170, 556], "2343": 170, "2342": 170, "2412": 170, "2413": 170, "2422": 170, "2432": 170, "2442": 170, "2512": 170, "2513": 170, "2523": 170, "2533": 170, "2532": [170, 196], "2543": 170, "2542": 170, "2612": 170, "2613": 170, "2623": 170, "2633": 170, "bear": [170, 845, 865, 886], "scanno": [170, 271, 871], "logno": [170, 271, 871], "cal": [170, 271, 322, 480, 871], "coil_typ": [170, 271, 862], "unit_mul": [170, 271, 871], "148": [170, 197, 210, 228, 233], "162": [170, 196, 197, 233, 246, 279], "163": [170, 210, 228, 232, 233, 238, 240, 279], "167": [170, 197, 228, 232, 233], "185": [170, 197, 202, 216, 228, 279], "193": [170, 197, 210, 233, 886], "194": [170, 196, 197, 210, 228, 232, 233, 246, 868, 886], "208": [170, 172, 189, 228, 232, 240, 246], "212": [170, 203, 210, 222, 228, 232, 246], "215": [170, 246, 578], "216": [170, 232, 233], "218": [170, 203, 210, 228, 232, 246], "224": [170, 172, 189, 232], "286": [170, 191, 195, 210, 228, 233], "294": [170, 210, 228, 233], "309": [170, 222, 233, 246, 598, 735, 738], "314": [170, 233], "321": [170, 196, 203, 210, 233], "322": [170, 228, 233], "323": [170, 210, 211, 228, 233], "324": [170, 228, 233], "326": 170, "337": [170, 210, 228], "338": [170, 196, 210, 233], "341": [170, 210, 233, 527], "345": [170, 196, 199, 228, 233], "347": [170, 210, 233, 886], "oxyhemoglobin": [170, 266, 267, 268, 269, 481, 482, 559, 706, 708, 709, 710, 841, 868], "deoxyhemoglobin": [170, 191, 266, 267, 268, 269, 481, 482, 559, 706, 708, 709, 710, 841, 868], "hbo": [170, 191, 212, 217, 223, 266, 267, 268, 269, 313, 373, 375, 481, 482, 559, 706, 708, 709, 710, 841, 868], "hbr": [170, 191, 212, 217, 223, 266, 267, 268, 269, 313, 373, 375, 481, 482, 559, 706, 708, 709, 710, 841, 868], "express": [170, 201, 430, 442, 489, 496, 504, 537, 556, 583, 612, 629, 720, 867, 868, 871, 886], "pick_channels_regexp": [170, 201, 206, 208, 213, 553, 876], "unawar": 170, "accident": [170, 219, 671, 886], "channel_typ": [170, 206, 266, 267, 268, 269, 271, 481, 482, 562, 706, 708, 709, 710, 876], "emb": 170, "comprehens": [170, 197, 217, 228, 230, 413, 845, 867], "channel_indices_by_typ": [170, 876], "ch_idx_by_typ": 170, "exci": [170, 217, 266, 267, 268, 269, 313, 481, 482, 559, 706, 708, 709, 710, 868], "ia": [170, 217, 266, 267, 268, 269, 271, 313, 481, 482, 559, 706, 708, 709, 710, 868, 886], "syst": [170, 217, 266, 267, 268, 269, 313, 481, 482, 559, 706, 708, 709, 710, 868], "bio": [170, 223, 266, 267, 268, 269, 313, 375, 446, 481, 482, 496, 559, 706, 708, 709, 710, 868], "temperatur": [170, 266, 267, 268, 269, 313, 481, 482, 559, 706, 708, 709, 710, 841, 862, 868, 886], "gsr": [170, 266, 267, 268, 269, 313, 481, 482, 559, 706, 708, 709, 710, 868, 886], "fnirs_cw_amplitud": [170, 191, 212, 266, 267, 268, 269, 373, 481, 482, 841], "fnirs_fd_ac_amplitud": [170, 191, 266, 267, 268, 269, 373, 481, 482, 841], "fnirs_fd_phas": [170, 191, 266, 267, 268, 269, 373, 481, 482, 841], "fnirs_od": [170, 266, 267, 268, 269, 373, 481, 482, 841], "eyegaz": [170, 193, 214, 266, 267, 268, 269, 481, 482, 559, 582, 706, 708, 709, 710], "pupil": [170, 266, 267, 268, 269, 481, 482, 559, 582, 706, 708, 709, 710, 862], "eeg_indic": 170, "ipython": [170, 266, 267, 481, 482, 562, 784, 801, 807, 843, 856, 865, 867, 869], "30_info": [170, 175], "mplot3d": [171, 207, 228], "axes3d": [171, 207, 228, 264, 266, 267, 268, 269, 314, 481, 482, 782, 804, 810, 886], "plai": [171, 206, 225, 243, 734, 737, 867, 868], "eeg_posit": 171, "builtin_montag": 171, "montage_nam": 171, "montage_descript": 171, "standard_alphabet": 171, "a1": [171, 209], "b2": 171, "standard_postfix": 171, "postfix": 171, "intermedi": [171, 201, 272, 291, 293, 692, 754, 868, 886], "standard_prefix": 171, "standard_prim": 171, "biosemi16": [171, 228], "biosemi": [171, 228, 340, 489, 868], "cap": [171, 197, 228, 841, 862, 886], "biosemi32": [171, 228], "biosemi64": [171, 228], "biosemi160": 171, "biosemi256": 171, "m10": [171, 886], "egi_256": 171, "geodes": [171, 471, 515, 676, 677, 678, 680, 681, 886], "gsn": [171, 445], "hydrocel": [171, 445], "64_1": 171, "65_1": 171, "mgh60": [171, 886], "mgh70": [171, 886], "brainvis": [171, 332, 333, 442, 446, 481, 482, 491, 612, 862, 868, 886], "artini": [171, 191, 330, 886], "octamon": [171, 191, 886], "detector": [171, 191, 212, 217, 505, 599, 600, 754, 770, 868, 886], "brite23": [171, 886], "brainproduct": 171, "rnp": 171, "ba": [171, 448, 868, 886], "easycap_montag": 171, "digmontag": [171, 183, 266, 267, 268, 269, 271, 317, 318, 327, 330, 332, 333, 334, 335, 336, 337, 338, 339, 367, 465, 481, 482, 493, 589, 591, 804, 824, 841, 876, 886], "headshap": [171, 258, 307, 314, 327, 339, 506, 886], "gca": 171, "view_init": [171, 207, 228], "azim": [171, 207], "ssvep_raw": 171, "read_raw_brainvis": [171, 190, 243, 487, 868, 876, 886], "circumfer": 171, "t4": 171, "t3": [171, 322, 481, 886], "075": 171, "sample_data_raw_path": 171, "sample_raw": 171, "ax2d": 171, "add_subplot": [171, 228], "ax3d": 171, "irregular": [171, 865, 886], "fastrak": 171, "predefin": [171, 841], "layout_dir": 171, "iterdir": 171, "IN": 171, "ctf151": [171, 228, 340], "lai": [171, 340, 511, 868, 886], "ctf275": [171, 228, 340], "eeg1005": [171, 340], "egi256": [171, 340], "geodesicheadweb": [171, 340], "AS": [171, 340], "umd": [171, 228, 340], "neuromag_122": [171, 340], "grad_norm": [171, 340], "magneswh3600": [171, 340, 492], "biosemi_layout": 171, "make_eeg_layout": [171, 323, 329, 876], "layout_from_raw": 171, "make_meg_layout": 171, "snugli": 171, "902": [171, 175], "40_sensor_loc": [171, 175], "suit": [172, 857], "get_config": [172, 388, 650, 876, 886], "unnam": 172, "mne_use_cuda": [172, 377, 843], "json": [172, 462], "unset": [172, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 284, 356, 357, 359, 361, 416, 423, 426, 429, 430, 456, 469, 471, 481, 482, 521, 524, 525, 535, 536, 545, 546, 567, 574, 575, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 786, 789, 808, 843, 886], "typeerror": [172, 177, 778, 886], "err": [172, 205, 346], "nonetyp": 172, "unsur": [172, 204, 845], "fallback": [172, 266, 267, 481, 482, 784, 807, 867, 886], "missing_config_kei": 172, "mne_browse_raw_s": 172, "979166666666666": 172, "mne_datasets_brainstorm_path": 172, "mne_datasets_eegbci_path": [172, 382, 388], "mne_datasets_epilepsy_ecog_path": [172, 384], "mne_datasets_erp_core_path": [172, 385], "mne_datasets_eyelink_path": [172, 386], "mne_datasets_fieldtrip_cmc_path": 172, "mne_datasets_fnirs_motor_path": [172, 393], "mne_datasets_hf_sef_path": [172, 395], "mne_datasets_kiloword_path": [172, 396], "mne_datasets_limo_path": [172, 397], "mne_datasets_misc_path": [172, 398], "mne_datasets_mtrf_path": [172, 399], "mne_datasets_multimodal_path": [172, 400], "mne_datasets_opm_path": 172, "mne_datasets_phantom_4dbti_path": [172, 402], "mne_datasets_refmeg_noise_path": [172, 403], "mne_datasets_sample_path": [172, 388, 404], "mne_datasets_somato_path": [172, 407], "mne_datasets_spm_face_path": 172, "mne_datasets_ssvep_path": [172, 409], "mne_datasets_testing_path": 172, "mne_datasets_ucl_opm_auditory_path": [172, 410], "mne_logging_level": [172, 653], "mne_browser_precomput": [172, 266, 267, 481, 482, 562, 784, 801, 807], "mne_browser_them": [172, 266, 267, 481, 482, 562, 784, 801, 807, 886], "mne_3d_option_multi_sampl": [172, 843, 886], "mne_browser_backend": [172, 266, 267, 481, 482, 562, 784, 801, 807, 886], "mne_browser_overview_mod": [172, 266, 267, 481, 482, 562, 784, 801, 807], "hidden": [172, 173, 266, 267, 481, 482, 562, 754, 784, 801, 807, 886], "mne_3d_option_them": [172, 754, 886], "mne_3d_option_antialia": [172, 820, 843, 886], "mne_3d_option_depth_peel": [172, 820], "mne_3d_option_smooth_shad": [172, 763, 820], "mne_browser_use_opengl": [172, 266, 267, 481, 482, 562, 784, 801, 807, 886], "mne_cache_dir": 172, "mne_coreg_advanced_rend": 172, "mne_coreg_copy_annot": 172, "mne_coreg_fullscreen": [172, 472], "mne_coreg_guess_mri_subject": 172, "mne_coreg_head_high_r": [172, 472], "mne_coreg_head_opac": [172, 472], "mne_coreg_head_insid": 172, "mne_coreg_interact": 172, "mne_coreg_mark_insid": 172, "mne_coreg_prepare_bem": 172, "mne_coreg_orient_to_surfac": 172, "mne_coreg_scale_label": 172, "mne_coreg_scale_by_dist": 172, "mne_coreg_scene_scal": 172, "mne_coreg_window_height": 172, "mne_coreg_window_width": [172, 472], "mne_coreg_subjects_dir": 172, "mne_cuda_devic": [172, 886], "mne_cuda_ignore_precis": 172, "mne_datasets_megsim_path": 172, "mne_datasets_spm_face_datasets_test": 172, "mne_datasets_visual_92_categories_path": [172, 411], "mne_force_seri": 172, "mne_kit2fiff_stim_channel": 172, "mne_kit2fiff_stim_channel_cod": 172, "mne_kit2fiff_stim_channel_slop": 172, "mne_kit2fiff_stim_channel_threshold": 172, "mne_memmap_min_s": 172, "mne_repr_html": [172, 886], "mne_skip_ftp_test": 172, "mne_skip_network_test": 172, "mne_skip_testing_dataset_test": 172, "mne_tqdm": [172, 886], "mne_use_numba": 172, "misspel": 172, "mnee_use_cuudaa": 172, "intro": [172, 173, 243], "50_configure_mn": [172, 175], "runtimewarn": [172, 751], "unrecogn": [172, 266, 267, 268, 269, 271, 481, 482, 886], "concern": [172, 205, 228, 501, 583, 619, 623], "userprofil": [172, 462], "linux": [172, 844, 845, 846, 848, 850, 851, 853, 886], "maco": [172, 845, 846, 848, 849, 850, 886], "get_config_path": [172, 876, 886], "home_dir": [172, 461, 462, 650], "use_env": [172, 461], "set_env": [172, 650, 886], "python_env": [172, 206], "minimal_cmd": 172, "usr": [172, 851, 856], "sbin": 172, "statement": [172, 173, 228, 652, 851], "fresh": 172, "me": [172, 701], "worrisom": 172, "set_log_level": [172, 652, 752, 876], "temporarili": [172, 207, 208, 266, 267, 268, 269, 378, 415, 451, 481, 482, 562, 784, 801, 807], "kit_data_path": 172, "abspath": 172, "use_log_level": [172, 241, 876], "496": [172, 210, 233, 279], "meg160": 172, "v2r004": 172, "160ch": 172, "jan24": 172, "eq1160c": 172, "dewar": 172, "fll": 172, "board": 172, "adc": [172, 190], "alloc": [172, 693, 694, 696, 697], "shorthand": 172, "whatev": [172, 209, 481, 482, 709, 845], "recent": [172, 203, 413, 844, 845, 861, 886], "hasn": [172, 574, 886], "sys_info": [172, 276, 843, 844, 865, 876, 886], "stdout": [172, 652, 705, 886], "platform": [172, 266, 267, 268, 269, 481, 482, 708, 710, 807, 844, 848, 853, 857, 874], "aw": [172, 257], "x86_64": [172, 844, 851], "glibc2": [172, 844], "mar": 172, "gcc": [172, 844], "cpu": [172, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 284, 356, 357, 359, 361, 416, 423, 425, 426, 429, 430, 456, 469, 471, 481, 482, 521, 524, 525, 535, 536, 545, 546, 562, 567, 574, 575, 594, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 784, 786, 789, 801, 807, 808, 843, 844], "gb": [172, 843, 844, 851], "dev120": 172, "g295b7c7ee": 172, "openbla": [172, 844, 865], "thread": [172, 238, 266, 267, 481, 482, 562, 784, 801, 807, 868], "agg": 172, "pooch": [172, 388, 886], "jinja2": [172, 886], "numba": [172, 844, 886], "openmeeg": [172, 520, 525, 886], "unavail": [172, 886], "cupi": [172, 266, 267, 268, 269, 415, 419, 424, 451, 452, 453, 481, 482, 843, 844, 886], "opengl": [172, 258, 266, 267, 472, 481, 482, 562, 784, 801, 807, 843, 851, 857], "mesa": [172, 472, 820, 886], "llvmpipe": [172, 843], "llvm": [172, 843], "ipyvtklink": [172, 874], "vtk": [172, 412, 754, 769, 843, 844, 886], "qtpy": [172, 844], "pyqt6": 172, "ipympl": 172, "pyqtgraph": [172, 266, 267, 481, 482, 562, 784, 801, 807, 886], "browser": [172, 173, 192, 217, 258, 266, 267, 276, 481, 482, 550, 562, 762, 766, 784, 801, 807, 823, 826, 845, 886], "ecosystem": [172, 846, 849, 852], "dev0": [172, 844], "0dev0": 172, "icalabel": [172, 886], "shell": [173, 184, 211, 246, 258, 519, 526, 844, 845, 850, 851, 852, 865, 868], "deploi": [173, 865], "tempfil": 173, "ndimag": 173, "raw_tsss": [173, 258, 481, 482, 502], "_eeg": [173, 258, 481, 482, 886], "_ieeg": [173, 258, 481, 482, 886], "underscor": [173, 202, 206, 217, 562], "parse_fold": [173, 276, 886], "add_raw": [173, 276, 886], "slider": [173, 268, 269, 276, 793, 843, 886], "scrub": 173, "report_raw": 173, "jqueri": 173, "bundl": [173, 848, 850, 886], "tableexport": 173, "highlightj": 173, "atom": 173, "meaning": [173, 218, 275, 648, 845], "events_path": 173, "report_ev": 173, "add_epoch": [173, 276, 886], "fly": [173, 230, 266, 267, 481, 482, 739, 752, 784, 807, 886], "make_metadata": [173, 876, 886], "report_epoch": 173, "add_evok": [173, 276], "n_time_point": [173, 276], "evoked_path": 173, "cov_path": 173, "evokeds_subset": 173, "report_evok": 173, "add_covari": [173, 276], "report_cov": 173, "ecg_proj_path": 173, "eog_proj_path": 173, "sample_audvis_eog": [173, 865], "report_proj": 173, "998": [173, 185, 192, 211, 233, 575, 580, 585, 588], "add_ica": [173, 276, 886], "inst": [173, 206, 258, 260, 264, 265, 266, 267, 268, 269, 271, 273, 274, 276, 277, 280, 281, 282, 283, 314, 316, 360, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 472, 481, 482, 561, 562, 563, 570, 571, 576, 581, 582, 586, 593, 609, 648, 651, 660, 691, 706, 708, 709, 710, 736, 737, 738, 797, 798, 799, 801, 808, 886], "ecg_evok": [173, 206, 208, 276], "eog_evok": [173, 205, 206, 208, 276], "artifactu": [173, 200, 203, 206, 246, 562], "find_bads_ecg": [173, 206, 276, 562, 886], "ecg_scor": [173, 206, 276], "liber": 173, "eog_compon": 173, "report_ica": 173, "add_bem": [173, 276, 886], "th": [173, 266, 562, 663, 666, 668, 709, 865, 868], "report_mri_and_bem": 173, "add_tran": [173, 276, 886], "opaqu": [173, 276, 472, 886], "trans_path": 173, "report_coregistr": 173, "add_forward": [173, 276, 754, 886], "fwd_path": 173, "report_forward_sol": 173, "add_inverse_oper": [173, 276], "inverse_op_path": 173, "report_inverse_op": 173, "add_stc": [173, 276, 886], "report_inverse_sol": 173, "01632618": 173, "06303297": 173, "63565434": 173, "add_cod": [173, 276], "syntax": [173, 276, 845, 868], "snippet": [173, 236, 276, 865], "liter": [173, 276, 868], "mne_init_py_path": 173, "__init__": [173, 551], "mne_init_py_cont": 173, "read_text": 173, "utf": [173, 497, 612, 618, 886], "report_cod": 173, "add_figur": [173, 276, 886], "caption": [173, 276, 886], "num": [173, 242], "sky": 173, "image_format": [173, 258, 276, 886], "report_custom_figur": 173, "fig_1": 173, "ax_1": 173, "ax_2": 173, "report_custom_figure_sect": 173, "intuit": [173, 197, 243, 414, 429, 664, 665], "logo": [173, 886], "mne_logo_path": 173, "mne_icon": 173, "fig_arrai": 173, "rotation_angl": 173, "fig_array_rot": 173, "mneqtbrows": [173, 266, 267, 481, 482, 562, 784, 801, 807], "fun": [173, 266, 267, 268, 269, 481, 482], "768": [173, 184], "862": [173, 233], "9176882624364033": 173, "photo": 173, "sketch": 173, "add_imag": [173, 276, 886], "jpeg": [173, 276], "gif": [173, 276, 754, 886], "svg": [173, 258, 276, 886], "report_custom_imag": 173, "add_": 173, "dropdown": [173, 886], "hide": [173, 219, 241, 886], "checkbox": [173, 886], "report_tag": 173, "hdf5": [173, 273, 274, 276, 280, 282, 290, 303, 551, 561, 604, 634, 706, 707, 708, 709, 710, 726, 727, 728, 739, 828, 829, 849, 865, 886], "report_parti": 173, "amend": [173, 334], "report_from_disk": 173, "open_report": [173, 276, 876, 886], "report_fin": 173, "invok": [173, 258, 767, 851, 886], "barebon": [173, 258], "render_bem": [173, 276, 886], "raw_butterfli": [173, 276], "report_parse_folder_bas": 173, "raw_psd": [173, 276, 886], "refin": [173, 278, 322, 362], "report_parse_folder_raw_psd_proj": 173, "mri_decim": [173, 258, 276], "report_parse_folder_mri_bem": 173, "temporarydirectori": 173, "n_time_points_evok": [173, 276], "report_parse_folder_evok": 173, "tmp": 173, "tmph9i1x_gn": 173, "info_fnam": [173, 276], "report_parse_folder_cov": 173, "add_html": [173, 276, 886], "remind": [173, 562, 845], "my_html": 173, "ol": [173, 691, 874, 886], "manifest": [173, 204, 205, 206, 208, 841], "n1": 173, "report_add_html": 173, "591": [173, 175, 233], "70_report": [173, 175], "auto_tutorials_intro": 175, "volsourceestim": [176, 181, 182, 273, 274, 277, 278, 280, 282, 291, 293, 294, 295, 296, 297, 298, 517, 524, 529, 530, 531, 532, 533, 535, 545, 634, 647, 841, 876, 886], "mixedsourceestim": [176, 274, 277, 280, 281, 282, 634, 841, 876, 886], "carri": [176, 200, 206, 243, 489, 687], "belong": [176, 271, 272, 276, 628, 683, 753, 754, 871], "shape_lh": 176, "is_equ": 176, "suspect": 176, "nth": [176, 206, 261, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 579, 580, 706, 709], "peak_vertex": 176, "vert_as_index": [176, 181, 273, 274, 277, 280, 281, 282], "peak_vertex_surf": 176, "peak_valu": 176, "logic": [176, 223, 230, 233, 266, 267, 268, 269, 271, 472, 481, 482, 483, 562, 583, 871, 886], "lh_coordin": 176, "rh_coordin": 176, "534": [176, 188, 233], "10_stc_class": [176, 188], "load_mni152_templ": 177, "fname_av": 177, "fname_surf_lh": 177, "n100m": 177, "evoked_ful": 177, "posixpath": [177, 182], "7283": 177, "6941": 177, "5323": 177, "2659": 177, "0605": 177, "7276": 177, "4483": 177, "mni_po": 177, "to_mni": [177, 264, 886], "mri_po": 177, "to_mri": [177, 264, 886], "best_dip_idx": 177, "to_volume_label": [177, 264, 886], "fig_t1": 177, "cut_coord": 177, "fig_templ": 177, "pred_evok": 177, "inf": [177, 192, 200, 224, 266, 267, 268, 269, 284, 418, 478, 479, 481, 482, 513, 575, 706, 708, 710, 711, 713, 714, 716, 724, 725, 762, 808, 814, 886], "best_idx": 177, "best_tim": 177, "conf": [177, 264, 845], "plot_param": 177, "0f": [177, 268, 269, 789], "20_dipole_fit": [177, 188], "userwarn": 177, "dip_fix": 177, "7509": 177, "6603": 177, "jukka": [177, 179, 246, 886], "sarva": [177, 246], "electromagnet": [177, 179, 200, 208, 211, 225, 246, 299, 300, 434, 529, 573, 594, 841, 868], "biomagnet": [177, 246], "200m": 178, "500m": 178, "fig_cov": [178, 263, 779], "fig_spectra": 178, "1705": [178, 181], "1468": 178, "1574": 178, "write_inverse_oper": [178, 543, 876, 886], "6837": 178, "16026e": 178, "set_color": [178, 184], "98df81": [178, 184], "vertno_max": 178, "time_max": [178, 179], "30_mne_dspm_loreta": [178, 188], "left_auditori": 179, "dip_po": 179, "dip_ori": 179, "dip_len": 179, "dip_tim": 179, "rgb": [179, 273, 274, 277, 280, 281, 282, 466, 471, 754, 770, 773, 812, 817, 818], "actual_amp": [179, 184, 186], "actual_gof": [179, 184, 186], "outward": [179, 264, 274, 280, 282, 367, 782, 865], "moment": [179, 181, 223, 271, 274, 280, 282, 320, 344, 346, 347, 348, 434, 572, 573, 583, 594, 817], "06165525": 179, "70033915": 179, "34794621": 179, "inward": [179, 865], "curvatur": [179, 273, 274, 277, 280, 281, 282, 704, 754, 812, 817, 871, 886], "collaps": [179, 276, 435], "brain_mag": 179, "overlay_alpha": [179, 274, 280, 282, 817], "2188": 179, "44205e": 179, "79973942": 179, "38378769": 179, "8347911": 179, "somewhat": [179, 200], "strai": 179, "unrestrict": 179, "brain_loos": 179, "03844879": 179, "68532258": 179, "12541436": 179, "risto": [179, 207, 208, 246, 529, 868], "ilmoniemi": [179, 207, 208, 246, 529, 868], "knuutila": [179, 246], "olli": [179, 246], "lounasmaa": [179, 246], "noninvas": [179, 246], "modern": [179, 189, 246, 389, 843, 868, 870, 886], "revmodphi": [179, 246], "fa": [179, 246, 540, 663, 668], "hsuan": [179, 246, 540, 663, 668], "lin": [179, 196, 246, 419, 540, 663, 668], "belliveau": [179, 246, 529, 540, 663, 668], "20155": [179, 246], "787": [179, 188], "564": [179, 233, 246, 405], "35_dipole_orient": [179, 188], "variant": [180, 190, 466, 573, 843, 886], "1498464098687909": [180, 182], "037797": 180, "65922": 180, "72259e": 180, "28047949e": 180, "72734061e": 180, "97200565e": 180, "56295843": 180, "27742998": 180, "00597191": 180, "65359441": 180, "22223215": 180, "63030546": 180, "eigen": [180, 272, 683], "34003429e": 180, "79067976e": 180, "93243713e": 180, "61893": 180, "8713e": 180, "81398589e": 180, "00293217e": 180, "59049572e": 180, "79225614": 180, "45181117": 180, "88420763": 180, "65906465": 180, "114468": 180, "42240231": 180, "41240751e": 180, "15338772e": 180, "80101709e": 180, "40_mne_fixed_fre": [180, 188], "britta": [181, 246, 873, 886], "westner": [181, 246, 873, 886], "wstnr": 181, "apply_lcmv": [181, 291, 293, 296, 297, 298, 876, 886], "linearli": [181, 207, 211, 246, 295, 296, 297, 298, 299, 300, 841, 865], "ingredi": 181, "valuabl": [181, 868], "gaug": 181, "incorpor": [181, 228, 233, 322, 437, 446, 481, 482, 567, 845, 868, 874, 886], "stabl": [181, 203, 205, 246, 261, 299, 300, 343, 452, 480, 481, 482, 550, 562, 572, 763, 845, 851, 865], "rule": [181, 200, 204, 246, 562, 868], "thumb": [181, 200, 204, 562, 862], "advic": [181, 845], "defici": [181, 371, 562, 868, 886], "misrepres": 181, "3757": [181, 182], "inher": [181, 190, 233, 430], "somehow": [181, 183, 206], "nai": [181, 299, 300, 886], "switch": [181, 184, 185, 203, 210, 225, 246, 258, 272, 277, 351, 481, 482, 843, 845, 851, 871, 886], "invari": [181, 299, 300], "filters_vec": 181, "apply_lcmv_raw": [181, 295, 296, 297, 876, 886], "apply_lcmv_epoch": [181, 273, 274, 277, 280, 281, 282, 295, 296, 298, 876, 886], "087": 181, "stat_map": [181, 281, 282, 818], "5184": 181, "glass_brain": [181, 182, 281, 282, 818, 886], "022485": [181, 182], "008449": [181, 182], "036217": [181, 182], "071071": [181, 182], "914866": [181, 182], "406098": [181, 182], "008756": [181, 182], "433700": [181, 182], "028119": [181, 182], "plotter": [181, 266, 267, 562, 754, 756, 784, 801, 863, 886], "peak_vox": 181, "ori_label": 181, "sourcemorph": [181, 281, 282, 362, 635, 818, 849, 876, 886], "fname_fs_src": 181, "stc_f": [181, 182], "085": 181, "17352": 181, "barri": [181, 203, 205, 206, 246, 299, 300, 561, 577], "veen": [181, 246, 299, 300], "wim": [181, 246, 299, 300], "drongelen": [181, 246, 299, 300], "mosh": [181, 246, 299, 300], "yuchtman": [181, 246, 299, 300], "akifumi": [181, 246, 299, 300], "suzuki": [181, 246, 299, 300], "867": [181, 233, 246, 299, 300], "623056": [181, 246, 299, 300], "brook": [181, 246, 860, 886], "jiri": [181, 246], "vrba": [181, 246], "clair": [181, 246, 886], "stevenson": [181, 246], "gareth": [181, 213, 246, 576, 862], "barn": [181, 213, 246, 576, 862], "arjan": [181, 246], "hillebrand": [181, 246], "morri": [181, 246], "optimis": [181, 246], "1788": [181, 246], "sarang": [181, 246, 874], "dalal": [181, 246, 874], "vladimir": [181, 228, 246, 699, 700], "litvak": [181, 228, 246, 699, 700], "oostenveld": [181, 233, 246, 693, 694, 696, 697, 886], "mathij": [181, 246], "schoffelen": [181, 246], "118789": [181, 246], "50_beamformer_lcmv": [181, 188], "flatmap": [182, 273, 277, 281, 754, 812, 886], "mpl_fig": 182, "94880328959697": 182, "84640986879091": 182, "649601096532322": 182, "5653": 182, "67635542": 182, "11717401": 182, "19136023": 182, "atlas": [182, 655, 886], "get_volume_labels_from_aseg": [182, 876, 886], "label_tc": [182, 273, 274, 277, 280, 281, 282, 447], "lidx": 182, "arrowstyl": [182, 196], "set_vis": 182, "grain": [182, 886], "loci": 182, "stc_back": 182, "labels_to_stc": [182, 876, 886], "6210": 182, "69834054": 182, "98871778": 182, "62206532": 182, "70708526": 182, "36619556": 182, "64056812": 182, "6864": 182, "721": 182, "60_visualize_stc": [182, 188], "read_custom_montag": [183, 191, 266, 267, 268, 269, 271, 330, 481, 482, 876, 886], "reconstrct": 183, "elc": [183, 332, 886], "synthes": [183, 189, 305, 309, 506, 584, 886], "fname_t1_electrod": 183, "sample_eeg_mri": 183, "t1_electrod": 183, "fname_mon": 183, "sample_mri_montag": 183, "ras_mni_t": [183, 746], "read_ras_mni_t": [183, 876], "mni_affin": 183, "img_mni": 183, "hot_black_bon": 183, "black_bg": 183, "resampling_interpol": 183, "pos_vox": 183, "fname_t1": 183, "vox2mri_t": 183, "pos_mri": [183, 264], "tkmedit": [183, 851, 868], "dig_montag": 183, "head_siz": [183, 330, 332], "99930957": 183, "00998471": 183, "03578661": 183, "00316747": 183, "01275917": 183, "81240435": 183, "58295487": 183, "00685511": 183, "03489383": 183, "58300899": 183, "81171605": 183, "02888406": 183, "812404": 183, "582955": 183, "583009": 183, "3250": 183, "1871": 183, "3223": 183, "1804": 183, "8193": 183, "040598": 183, "157084": 183, "86184": 183, "24877e": 183, "17591891": 183, "939572": 183, "86348066": 183, "70_eeg_mri_coord": [183, 188], "fetch_phantom": [184, 433, 876, 886], "planor": 184, "meg1933": 184, "meg2421": 184, "1792": [184, 196], "7936": 184, "bmax": [184, 258], "ring": [184, 203, 448, 450, 886], "otaniemi": [184, 392, 433, 862, 886], "phantom_otaniemi": 184, "00365867": [184, 185, 186], "944092": [184, 185, 186], "138723": [184, 185, 186], "665896": [184, 185, 186], "684544": [184, 185, 186], "132233": [184, 185, 186], "0128974": [184, 185, 186], "plot_evoked_whit": [184, 268, 269, 788, 876, 886], "t_peak": 184, "32640": 184, "32639": 184, "55367811e": 184, "90213143e": 184, "55347147e": 184, "28605719e": 184, "96728167e": 184, "86739464e": 184, "38610872e": 184, "82304534e": 184, "48308374e": 184, "31818228e": 184, "16854987e": 184, "00130181e": 184, "01608756e": 184, "05724640e": 184, "66791928e": 184, "36603176e": 184, "50599819e": 184, "82644670e": 184, "99846050e": 184, "93593540e": 184, "60183041e": 184, "976295": 184, "211976": 184, "043756": 184, "206488": 184, "972764": 184, "105326": 184, "064891": 184, "093794": 184, "993475": 184, "729": [184, 185, 186, 233], "actual_ori": 184, "rad2deg": 184, "arcco": 184, "dip_tru": [184, 186], "80_brainstorm_phantom_elekta": [184, 188], "phantomctf": 185, "bst_phantom_ctf": 185, "phantom_200ua_20150709_01": 185, "dip_freq": 185, "phantom_20ua_20150603_03": 185, "erm_path": 185, "emptyroom_20150709_01": 185, "24000": 185, "23999": 185, "hdac006": 185, "zeros_lik": [185, 196], "ones_lik": [185, 230, 231], "tsss": [185, 268, 271, 481, 502, 594, 602, 624, 886], "apply_gradient_compens": [185, 189, 481, 482, 868, 886], "un": [185, 204, 207, 211, 220, 481, 482, 538, 539, 807, 868], "mf_kwarg": 185, "st_durat": [185, 211, 583, 594], "021666666666666667": 185, "catch_warn": 185, "simplefilt": 185, "60000": 185, "99596855e": 185, "57828787e": 185, "09548814e": 185, "44821628e": 185, "22550465e": 185, "07831245e": 185, "16519699e": 185, "85599860e": 185, "24819011e": 185, "19149506e": 185, "49201625e": 185, "90435099e": 185, "37114004e": 185, "52368814e": 185, "95491435e": 185, "09260032e": 185, "84849095e": 185, "02461913e": 185, "40860739e": 185, "15627312e": 185, "58591259e": 185, "999939": 185, "002039": 185, "010868": 185, "001115": 185, "959234": 185, "282612": 185, "011001": 185, "282607": 185, "959173": 185, "expected_po": 185, "array_str": 185, "558": [185, 188, 196], "85_brainstorm_phantom_ctf": [185, 188], "4dbti": 186, "badier": [186, 246, 666], "marseil": [186, 862], "franc": 186, "phantom_4dbti": [186, 862, 876, 886], "rfhp1": 186, "0hz": 186, "a173": 186, "a213": 186, "a232": 186, "4350": 186, "not_and": [186, 259, 454, 621, 886], "hs_file": [186, 189, 492], "13599": 186, "20053968578577042": 186, "6576": 186, "6575": 186, "50691838e": 186, "61763336e": 186, "91409625e": 186, "91576159e": 186, "16898444e": 186, "75585208e": 186, "47442194e": 186, "45272203e": 186, "55529894e": 186, "46448717e": 186, "88484744e": 186, "05130802e": 186, "14443569e": 186, "70955369e": 186, "39503671e": 186, "16681391e": 186, "65491197e": 186, "24338008e": 186, "53281664e": 186, "47448228e": 186, "78257781e": 186, "975564": 186, "033891": 186, "217085": 186, "044586": 186, "998011": 186, "044560": 186, "215143": 186, "053150": 186, "975135": 186, "43530566e": 186, "00499851e": 186, "47056513e": 186, "49717001e": 186, "01651220e": 186, "39837298e": 186, "09320996e": 186, "53068976e": 186, "44272962e": 186, "07218608e": 186, "57916869e": 186, "24522939e": 186, "45459681e": 186, "19250060e": 186, "30544307e": 186, "26518629e": 186, "97497347e": 186, "82472005e": 186, "37787240e": 186, "96791371e": 186, "70423989e": 186, "975554": 186, "034041": 186, "217109": 186, "044503": 186, "998063": 186, "043482": 186, "215208": 186, "052081": 186, "975178": 186, "58999814e": 186, "84421337e": 186, "28166457e": 186, "67818745e": 186, "17428979e": 186, "76211498e": 186, "09542089e": 186, "22401648e": 186, "04141267e": 186, "15865669e": 186, "76599754e": 186, "17446488e": 186, "49708010e": 186, "60822410e": 186, "73060305e": 186, "05814038e": 186, "01071067e": 186, "20173942e": 186, "25861185e": 186, "85502070e": 186, "47521229e": 186, "975577": 186, "033678": 186, "217061": 186, "044611": 186, "997960": 186, "045666": 186, "215080": 186, "054233": 186, "975089": 186, "40101009e": 186, "10513936e": 186, "52303974e": 186, "27457778e": 186, "38233857e": 186, "06793751e": 186, "00477278e": 186, "15792686e": 186, "30206685e": 186, "40306943e": 186, "32057779e": 186, "22353020e": 186, "11884928e": 186, "17314181e": 186, "64256593e": 186, "23243102e": 186, "97110034e": 186, "94566869e": 186, "63267153e": 186, "08360546e": 186, "98210291e": 186, "975557": 186, "033946": 186, "217110": 186, "044391": 186, "998071": 186, "043409": 186, "215218": 186, "051986": 186, "975181": 186, "44409481": 186, "37628851": 186, "1860296": 186, "17616473": 186, "90_phantom_4dbti": [186, 188], "auto_tutorials_invers": 188, "563": [188, 197, 214, 216, 233], "maxshield": [189, 258, 268, 271, 481, 502, 594, 624, 871, 886], "allow_maxshield": [189, 210, 211, 268, 481, 502, 624], "ucl": [189, 213, 246, 356, 886], "read_raw_fil": [189, 213, 487, 868, 876, 886], "mandatori": [189, 299, 300, 322, 481, 562, 868], "rfdc": [189, 258], "realiz": [189, 203], "carefulli": [189, 201, 203, 862], "read_dig_polhemus_isotrak": [189, 314, 327, 330, 333, 334, 335, 336, 337, 338, 341, 868, 876, 886], "technic": [189, 241, 246, 266, 267, 268, 269, 481, 482, 529, 708, 710, 718, 724, 861, 867, 868], "disturb": [189, 861, 868], "mainli": [189, 243, 845, 868], "nicknam": 189, "n_1": 189, "n_2": 189, "n_3": 189, "x_1": [189, 868], "x_2": [189, 868], "x_3": 189, "denot": [189, 197, 219, 274, 280, 282, 592, 663, 666, 668, 687, 689, 707, 841, 868], "x_": [189, 197, 868], "m_": 189, "bmatrix": [189, 868], "c_": [189, 228, 868], "standardize_nam": [189, 506, 620, 886], "nx3": [189, 468], "mrk": [189, 258, 484, 506, 620, 886], "elp": [189, 258, 332, 339, 506, 620, 622, 868, 886], "onward": [189, 656], "miscellan": [189, 217, 266, 267, 268, 269, 481, 482, 559, 706, 708, 709, 710, 868, 871], "eight": [189, 868, 886], "endian": [189, 886], "stimthresh": [189, 258, 506], "sum_": [189, 203, 666, 868], "t_p": 189, "d_p": 189, "bigg": 189, "leq": [189, 228], "read_raw_fieldtrip": [189, 487, 868, 876, 886], "read_epochs_fieldtrip": [189, 868, 876, 886], "read_evoked_fieldtrip": [189, 868, 876, 886], "intent": [189, 863], "original_data": 189, "read_raw_fiff": 189, "original_info": 189, "data_from_ft": 189, "evoked_data": [189, 230], "untest": 189, "cnt": [189, 442, 493, 612, 868, 886], "egi": [189, 332, 335, 498, 868, 886], "calibr": [189, 193, 211, 271, 434, 572, 573, 583, 594, 605, 610, 871, 886], "eximia": [189, 499, 868, 886], "3rd": [189, 200, 273, 274, 277, 280, 281, 282, 692], "parti": 189, "librari": [189, 756, 843, 845, 851, 852, 857, 863, 865, 886], "abund": 189, "electrophysiolog": [189, 203, 246, 841], "10_reading_meg_data": [189, 195], "meta": [190, 223, 266, 267, 268, 269, 481, 482, 483, 874], "ini": 190, "host": [190, 867, 886], "pybv": [190, 446, 481, 482], "mnelab": [190, 852], "pyedflib": 190, "read_raw_bdf": [190, 487, 496, 504, 868, 876, 886], "amplifi": [190, 205, 209, 510, 857, 886], "byte": [190, 266, 267, 481, 482, 513, 762, 871, 886], "read_raw_gdf": [190, 487, 489, 496, 868, 876, 886], "overcom": 190, "releas": [190, 845, 853, 865, 867, 886], "gender": [190, 246, 405], "read_raw_cnt": [190, 487, 868, 876, 886], "danger": [190, 271], "x_coord": 190, "y_coord": 190, "electloc": 190, "encourag": [190, 225, 856, 867, 886], "read_raw_egi": [190, 487, 868, 876, 886], "netstat": [190, 498, 886], "read_raw_nicolet": [190, 487, 868, 876, 886], "nexstim": 190, "read_raw_eximia": [190, 487, 868, 876], "read_raw_persyst": [190, 868, 876, 886], "nk": 190, "read_raw_nihon": [190, 876, 886], "11d": 190, "cmt": 190, "cn2": 190, "histori": [190, 271, 445, 841, 871, 886], "successfulli": [190, 218, 845, 871], "neither": [190, 470, 481, 482, 853], "nor": [190, 209, 470, 481, 482, 853, 867], "20_reading_eeg_data": [190, 195], "emitt": 191, "transmitt": 191, "oxyhaemoglobin": [191, 212], "Near": 191, "commun": [191, 196, 197, 225, 246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 419, 481, 482, 706, 709, 735, 738, 845, 849, 864, 874], "effort": [191, 489, 845, 866, 874], "sfnir": 191, "gowerlab": [191, 886], "cortivis": 191, "read_raw_snirf": [191, 876, 886], "provis": 191, "haemoglobin": [191, 596, 886], "optode_fram": [191, 512], "vendor": [191, 868], "icbm": 191, "2009b": 191, "nirstar": [191, 510], "aurora": [191, 510, 886], "nirscout": [191, 510], "nirsport": [191, 510, 886], "read_raw_hitachi": [191, 876, 886], "read_raw_boxi": [191, 487, 868, 876, 886], "iss": [191, 490, 886], "paren": 191, "unmodul": 191, "unpars": 191, "organis": 191, "digaux": 191, "port": [191, 214, 851, 857], "discourag": [191, 266, 267, 268, 269, 481, 482, 708, 710, 786, 865, 886], "standardis": [191, 886], "to_csv": [191, 217], "_d": 191, "wavelength": [191, 200], "s1_d1": [191, 212], "s2_d1": 191, "s3_d1": 191, "s4_d1": 191, "s5_d2": 191, "s6_d2": 191, "s7_d2": 191, "s8_d2": 191, "assist": [191, 252, 843, 851, 868], "ficidu": 191, "30_reading_fnirs_data": [191, 195], "site": [192, 205, 206, 211, 246, 271, 322, 481, 573, 583, 594, 845], "beep": 192, "deviant": [192, 203], "finger": [192, 862], "bug": [192, 259, 454, 472, 705, 754, 845, 864, 866, 867], "consumpt": [192, 268, 269, 430, 788, 886], "use_precomput": 192, "erm_fnam": 192, "s01_noise_20131218_01": 192, "demand": [192, 217, 430, 434, 480, 617, 868, 886], "n_times_run1": 192, "4800": 192, "unus": [192, 271, 279, 583, 886], "heog": [192, 493], "veog": [192, 493, 886], "favorit": [192, 845], "annotations_df": 192, "csv_fname": 192, "events_bad_0": 192, "concat": [192, 413], "saccades_ev": 192, "7625": 192, "142459": 192, "216954": 192, "345135": 192, "357687": 192, "409101": 192, "461110": 192, "479866": 192, "764914": 192, "798174": 192, "846880": 192, "858863": 192, "9256": 192, "14287": 192, "116432": 192, "134489": 192, "464527": 192, "494136": 192, "749288": 192, "788623": 192, "21179": 192, "72993": 192, "134527": 192, "196555": 192, "249894": 192, "343357": 192, "400771": 192, "450256": 192, "593101": 192, "733942": 192, "765939": 192, "789476": 192, "792852": 192, "833208": 192, "859869": 192, "862888": 192, "saccade_epoch": 192, "reject_by_annot": [192, 212, 219, 223, 266, 361, 481, 482, 522, 562, 579, 580, 584, 585, 710, 799, 808, 886], "projs_saccad": 192, "compute_proj_epoch": [192, 207, 208, 358, 359, 876, 886], "n_mag": [192, 208, 258, 357, 358, 359, 574, 575], "desc_prefix": [192, 357, 358], "projs_eog": 192, "compute_proj_eog": [192, 207, 208, 580, 585, 861, 876, 886], "1201": [192, 197, 302], "spectra": [192, 223, 241, 246, 263, 266, 267, 268, 269, 418, 481, 482, 535, 536, 693, 708, 710, 713, 716, 724, 725, 779, 786, 808, 841], "doubl": [192, 203, 206, 243, 266, 267, 268, 269, 415, 424, 446, 448, 449, 451, 452, 480, 481, 482, 503, 594, 845, 851, 868, 871, 886], "filter_length": [192, 203, 204, 208, 258, 266, 267, 268, 269, 415, 424, 449, 451, 452, 481, 482, 574, 575, 584, 585, 886], "sound": [192, 196, 197, 206, 246, 420, 735, 738], "uadc001": 192, "sound_data": 192, "min_diff": 192, "\u03bc": [192, 211, 422], "\u03c3": [192, 211, 422, 526], "mlo52": 192, "mrt51": 192, "mlo42": 192, "mlo43": 192, "epochs_standard": 192, "concatenate_epoch": [192, 876, 886], "epochs_devi": 192, "mlp52": 192, "evoked_std": 192, "evoked_dev": 192, "p50": 192, "paint": [192, 266, 267, 268, 269, 481, 482, 788, 808], "mmn": [192, 874], "emphasis": 192, "evoked_differ": 192, "ico4": [192, 646, 861], "8033": 192, "015871": 192, "10585e": 192, "09843": 192, "11765e": 192, "stc_standard": 192, "80289064": 192, "69025561": 192, "89954824": 192, "stc_deviant": 192, "12814542": 192, "29154719": 192, "6203076": 192, "stc_differ": 192, "96162575": 192, "78319301": 192, "94351171": 192, "076": [192, 195], "60_ctf_bst_auditori": [192, 195], "radian": [193, 214, 367, 566], "set_channel_types_eyetrack": [193, 876], "glossari": [193, 845, 869], "ascii": [193, 258, 497, 612, 618, 640, 868, 886], "edf2asc": 193, "read_raw_eyelink": [193, 214, 868, 876, 886], "european": [193, 257, 868], "occular": [193, 214, 500], "binocular": 193, "ypos_right": 193, "fpath": 193, "px_textpage_w": 193, "create_annot": [193, 214, 500], "custom_sc": 193, "legibl": [193, 214], "bad_rec_gap": [193, 214, 500], "trackabl": 193, "href_textpage_w": 193, "diamet": [193, 868], "ellips": 193, "delimint": 193, "2000hz": 193, "timestamp": [193, 219, 260, 273, 274, 277, 280, 281, 282, 481, 482, 498, 612, 886], "70_reading_eyetracking_data": [193, 195], "auto_tutorials_io": 195, "timedelayingridg": [196, 419, 876, 886], "multivariate_norm": 196, "1337": 196, "path_audio": 196, "spectrogram": [196, 233, 243, 841, 874, 886], "n_decim": 196, "explicit": [196, 265, 360, 371, 372, 845, 871, 886], "delays_samp": 196, "delays_sec": 196, "5000": [196, 230], "meshgrid": [196, 207, 233], "swap": [196, 232, 238, 640, 868, 886], "swapax": [196, 232, 238], "gabor": 196, "means_high": 196, "means_low": 196, "2500": [196, 886], "gauss_high": 196, "gauss_low": 196, "autoscal": 196, "artifici": [196, 246, 498, 562, 862], "convolut": [196, 203, 243, 426, 545, 546, 712, 715, 731, 733, 734, 736, 737, 852, 886], "n_second": 196, "x_del": 196, "ix_delai": 196, "ndim": [196, 243], "elif": 196, "rollaxi": 196, "weights_sim": 196, "iep": 196, "noise_amp": 196, "x_plt": 196, "hstack": [196, 207], "y_plt": 196, "autocorrel": [196, 419, 425], "ix_best_alpha": 196, "best_mod": 196, "best_pr": 196, "iax": 196, "time_pr": 196, "3450": 196, "1250": [196, 197], "1497": 196, "2306": 196, "2527": 196, "2728": 196, "3036": 196, "585": [196, 233, 246], "3377": 196, "673": [196, 197, 233], "471": [196, 203, 210, 228, 246], "21187": 196, "682": [196, 229, 233], "21300": 196, "21289": 196, "1363": 196, "21265": 196, "1696": [196, 210], "21157": 196, "20989": 196, "2324": 196, "20647": 196, "2645": 196, "20560": 196, "2971": 196, "20531": 196, "3314": 196, "20634": 196, "20681": 196, "20675": 196, "20765": 196, "20693": 196, "20945": 196, "1700": [196, 246], "21243": 196, "2064": 196, "21522": 196, "2418": 196, "21614": 196, "2766": 196, "21626": 196, "3118": 196, "21673": 196, "11671": 196, "11281": 196, "11356": 196, "11348": 196, "11491": 196, "1266": 196, "13400": 196, "14854": 196, "1971": 196, "15893": 196, "2317": 196, "16664": 196, "17286": 196, "3016": 196, "17831": 196, "3369": 196, "18286": 196, "17571": 196, "11248": [196, 886], "11450": [196, 886], "11611": 196, "747": [196, 197, 233], "11659": 196, "945": [196, 233, 268, 269, 706, 792], "11815": 196, "1301": [196, 210], "13775": 196, "1650": 196, "15100": 196, "16151": 196, "2359": 196, "16952": 196, "2719": 196, "17637": 196, "3074": 196, "18159": 196, "3425": 196, "18565": 196, "17806": 196, "11434": 196, "11215": 196, "537": [196, 197], "11159": [196, 886], "718": [196, 197], "11185": [196, 886], "11178": 196, "1234": [196, 197], "13034": 196, "1568": 196, "14329": 196, "1903": 196, "15304": 196, "2259": 196, "16240": 196, "2596": 196, "16838": 196, "2893": 196, "17030": 196, "3108": 196, "16636": 196, "3398": 196, "16784": 196, "16343": 196, "10996": 196, "10974": [196, 886], "10971": 196, "11005": 196, "10986": [196, 886], "1219": 196, "12892": 196, "1565": [196, 210, 246], "14331": 196, "15429": 196, "2258": 196, "16251": 196, "2603": 196, "16910": 196, "17330": 196, "3263": 196, "17693": 196, "17146": 196, "i_alpha": 196, "ddot": 196, "tikhonov": 196, "trf": [196, 232], "insensit": [196, 266, 267, 442, 489, 496, 504, 565, 709, 886], "whilst": [196, 213], "mse": 196, "scores_lap": 196, "models_lap": 196, "reg_typ": [196, 425], "ix_best_alpha_lap": 196, "21078": 196, "672": [196, 210, 233], "20956": 196, "968": [196, 233], "20085": 196, "1325": [196, 210], "20682": 196, "1667": 196, "20823": 196, "1988": 196, "20670": 196, "2334": 196, "20821": 196, "2589": 196, "20096": 196, "2851": 196, "19584": 196, "3155": 196, "19509": 196, "19679": [196, 206], "22160": 196, "712": [196, 197, 233], "22227": 196, "1027": 196, "21334": 196, "20691": 196, "1687": 196, "21023": 196, "1968": 196, "20366": 196, "2204": 196, "19428": 196, "19583": 196, "2870": 196, "19786": 196, "3205": 196, "19926": 196, "20124": 196, "18683": 196, "19159": 196, "921": [196, 233], "19164": 196, "1189": [196, 210], "18495": 196, "1424": 196, "17644": 196, "1708": 196, "17659": 196, "17954": 196, "2307": [196, 246], "17942": 196, "2560": 196, "17655": 196, "2844": 196, "17662": 196, "3114": 196, "17568": 196, "3323": 196, "17073": 196, "17063": 196, "16036": 196, "18932": 196, "19215": 196, "1257": 196, "19684": 196, "1594": [196, 210], "19987": 196, "19953": 196, "2206": 196, "19687": 196, "2497": 196, "19458": 196, "2809": 196, "19462": 196, "3097": 196, "19275": 196, "3345": 196, "18836": 196, "18912": 196, "14979": 196, "14200": 196, "13846": 196, "879": [196, 233], "13657": 196, "1089": 196, "13530": 196, "1425": 196, "14935": 196, "16256": 196, "17004": 196, "17355": 196, "2725": 196, "17350": 196, "3044": 196, "17645": 196, "17704": 196, "17377": 196, "20033": 196, "677": [196, 197, 233], "21163": 196, "20273": 196, "20798": 196, "1668": 196, "20846": 196, "20458": 196, "20616": 196, "2575": 196, "19993": 196, "2837": 196, "19502": 196, "3112": 196, "19208": 196, "3399": 196, "19054": 196, "19240": 196, "19220": 196, "19198": 196, "912": [196, 210], "18953": 196, "1184": 196, "18417": 196, "1488": 196, "18543": 196, "18314": 196, "2099": 196, "18723": 196, "2461": 196, "19298": 196, "2828": 196, "19789": 196, "3197": 196, "20194": 196, "20095": 196, "rf_lap": 196, "fr\u00e9d\u00e9ric": [196, 246, 419], "theunissen": [196, 246, 419], "nandini": [196, 246, 419], "singh": [196, 246, 419, 886], "ann": [196, 219, 246, 419, 886], "hsu": [196, 246, 419], "vinj": [196, 246, 419], "jack": [196, 246, 419, 886], "gallant": [196, 246, 419], "ben": [196, 246, 419, 886], "willmor": [196, 246, 419], "darragh": [196, 246, 419], "smyth": [196, 246, 419], "cell": [196, 200, 246, 419, 871, 886], "553": [196, 233, 246, 419], "577": [196, 197, 210, 233, 246, 419], "0954": [196, 246, 419], "898x_14_3_309": [196, 246, 419], "heer": [196, 246, 419], "paslei": [196, 246, 419], "jochem": [196, 246, 419], "rieger": [196, 246, 419], "nathan": [196, 246, 419], "crone": [196, 246, 419], "knight": [196, 246, 419], "tune": [196, 208, 246, 419], "ncomms13654": [196, 246, 419], "30_strf": [196, 199], "visit": [197, 246, 857], "insight": [197, 868], "eas": 197, "camel": 197, "n_meg_channel": 197, "standand": 197, "interquartil": 197, "robustscal": [197, 422], "n_frequenc": [197, 299, 707], "popular": [197, 841, 849], "win": [197, 243], "grasp": 197, "competit": 197, "kaggl": 197, "week": [197, 867], "clf_csp": 197, "ssnr": [197, 563], "rewrit": [197, 886], "plot_filt": [197, 203, 204, 413, 420, 802, 876, 886], "boil": [197, 843], "evoked_time_gen": 197, "joint_kwarg": 197, "diag": [197, 686, 871], "1296": [197, 210, 246], "574": [197, 233], "586": [197, 210, 233], "622": [197, 233, 235, 246, 356], "657": 197, "683": [197, 210], "695": [197, 233], "412": [197, 233], "685": [197, 233], "489": [197, 210, 243], "542": [197, 233], "595": [197, 233, 241, 245, 246], "716": [197, 233], "719": [197, 233], "647": 197, "751": [197, 216], "732": [197, 233], "777": [197, 210, 233], "734": [197, 233, 246, 722, 732, 733, 736], "804": [197, 210, 233], "738": [197, 233], "829": [197, 210, 233], "856": [197, 233], "741": [197, 233], "883": [197, 233], "909": [197, 233], "936": [197, 212, 216, 233], "748": [197, 233], "962": [197, 233], "749": [197, 233], "989": [197, 233], "754": [197, 233, 246, 861], "1069": [197, 246, 544, 666], "1096": 197, "1120": 197, "1138": 197, "743": [197, 233], "1214": 197, "1267": 197, "1293": 197, "731": [197, 233], "771": [197, 233], "778": 197, "776": [197, 233], "774": [197, 233], "742": [197, 233], "739": [197, 233], "478": 197, "736": [197, 233], "623": [197, 233], "674": 197, "765": [197, 210, 233], "717": [197, 233], "819": [197, 210, 233], "907": [197, 233, 243, 245], "697": [197, 210, 233], "943": [197, 233], "684": [197, 229, 233], "992": [197, 212, 233], "1018": 197, "1064": 197, "693": [197, 207, 209, 216, 233, 246, 266, 267, 268, 269, 481, 482, 651], "1107": 197, "1157": 197, "1179": 197, "689": [197, 233], "1276": 197, "698": 197, "727": 197, "752": [197, 233], "755": 197, "614": [197, 233], "772": 197, "763": [197, 233], "766": [197, 233], "851": [197, 199], "903": [197, 233], "929": [197, 210], "981": [197, 210, 233], "764": 197, "1058": [197, 246, 695], "1085": [197, 210], "762": [197, 233], "753": [197, 233], "1208": 197, "1260": 197, "1286": [197, 210], "lanczo": 197, "1353": 197, "91709": 197, "26373e": 197, "98776221": 197, "41838256": 197, "06628582": 197, "methodolog": [197, 246], "uncov": [197, 246], "hal": [197, 246], "01848442": [197, 246], "archiv": [197, 246, 388, 845, 851, 853, 865, 874], "ouvert": [197, 246], "lionel": [197, 246], "naccach": [197, 246], "subtend": [197, 246, 868], "e85791": [197, 246], "0085791": [197, 246], "506": [197, 199, 231, 235], "50_decod": [197, 199], "auto_tutorials_machin": 199, "vibrat": 200, "door": [200, 202], "slam": [200, 202], "phone": 200, "geomagnet": 200, "unshield": 200, "headphon": 200, "malfunct": [200, 201, 861], "qr": [200, 258, 574, 584, 587, 886], "sensori": 200, "genesi": 200, "ssp_projector": 200, "readili": [200, 204, 874], "mag_channel": 200, "remove_dc": [200, 204, 481, 482, 807, 886], "get_xdata": [200, 204], "get_ydata": [200, 204], "searchsort": [200, 204], "dx": [200, 204], "dy": [200, 204], "head_width": [200, 204], "length_includes_head": [200, 204], "find_ecg_ev": [200, 202, 208, 219, 574, 579, 876, 886], "create_ecg_epoch": [200, 202, 206, 208, 574, 584, 876, 886], "ecg_epoch": [200, 206, 579], "6007": [200, 205], "streak": 200, "avg_ecg_epoch": 200, "blocki": 200, "efficaci": 200, "pro": [200, 203, 845], "con": [200, 203], "062": [200, 213, 216], "10_preprocessing_overview": [200, 216], "deepcopi": 201, "usabl": [201, 428, 572, 602, 886], "wildcard": 201, "original_bad": 201, "bad_chan": 201, "paus": [201, 268, 269, 754, 886], "codebas": [201, 845, 860, 869, 874], "good_eeg": 201, "all_eeg": 201, "setdiff1d": 201, "excess": [201, 203, 481, 482, 807, 886], "protocol": [201, 861], "sheet": [201, 861], "offlin": [201, 853], "raw2": [201, 219], "invest": [201, 867], "presenc": [201, 212, 225, 243, 246, 271, 394, 437, 845, 861, 886], "unrealist": [201, 861], "dramat": 201, "robust": [201, 205, 206, 242, 246, 266, 267, 413, 562, 663, 668, 886], "uninform": 201, "deweight": 201, "fair": [201, 209], "eeg_data": [201, 217], "eeg_data_interp": 201, "interp": [201, 657, 658, 659, 671, 886], "00000022": 201, "bad_color": [201, 481, 482, 807], "grad_data": 201, "grad_data_interp": 201, "00000009": 201, "propag": [201, 204, 260, 846], "525": [201, 210, 216, 233], "15_handling_bad_channel": [201, 216], "fake_keypress": [202, 219], "keyboard": [202, 220, 754, 862, 886], "push": [202, 203, 845, 886], "enter": [202, 208, 219, 220, 844, 845, 848], "bad_cough": 202, "wrapper": [202, 270, 444, 448, 487, 696, 697, 886], "bad_blink": 202, "blink_annot": 202, "eeg_pick": 202, "albeit": 202, "annotate_break": [202, 876, 886], "first_tim": [202, 480, 481, 482, 502, 595, 886], "block_1": 202, "block_2": 202, "block_annot": 202, "break_annot": [202, 565], "min_break_dur": [202, 565], "t_start_after_previ": [202, 565], "t_stop_before_next": [202, 565], "bad_break": [202, 565], "events_subset": 202, "flat_criteria": 202, "stringent": 202, "reject_tmin": [202, 261, 266, 267, 579, 886], "reject_tmax": [202, 261, 266, 267, 579, 886], "disappear": [202, 243, 886], "subsum": 202, "stronger_reject_criteria": 202, "2000e": 202, "20_rejecting_bad_data": [202, 216], "park": [203, 246], "burru": [203, 246], "ifeachor": [203, 246], "jervi": [203, 246], "widmann": [203, 246], "somedai": 203, "conclud": [203, 232], "lightli": [203, 845], "cautious": 203, "hope": [203, 204, 206, 243], "math": [203, 207, 865], "b_0": 203, "b_1": [203, 868], "b_2": 203, "ldot": 203, "b_m": [203, 868], "a_1": 203, "a_2": 203, "a_n": 203, "mb_kz": 203, "na_kz": 203, "b_k": [203, 277, 868], "denomin": [203, 233, 299, 300, 660, 670, 694, 697, 719, 886], "a_k": 203, "autoregress": 203, "broken": [203, 271, 453, 845, 886], "finit": [203, 224, 233, 246, 457, 861, 868, 886], "impuls": [203, 865], "infinit": [203, 868, 886], "qquad": 203, "foral": [203, 868], "steeper": [203, 204], "accumul": [203, 266, 267], "despit": [203, 232], "throughput": 203, "sharp": [203, 228, 886], "steep": 203, "broader": [203, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709], "fundament": 203, "fftfreq": 203, "plot_ideal_filt": [203, 795, 876, 886], "f_p": [203, 868], "flim": [203, 204, 795, 802], "dlim": [203, 795], "f_": 203, "nyq": [203, 449, 452], "third_height": 203, "hypothet": [203, 562], "na\u00efv": 203, "brick": [203, 204], "correspondingli": [203, 266, 267, 868], "tighter": [203, 886], "remez": 203, "firl": 203, "ifft": 203, "relax": [203, 238, 886], "shallow": [203, 275], "gradual": 203, "shorten": [203, 220, 243, 778, 849, 868, 886], "benefici": [203, 278], "wherebi": 203, "came": [203, 851], "minimum_phas": 203, "falloff": 203, "h_min": 203, "uncompens": 203, "imaginari": [203, 246, 733, 734, 886], "dur": 203, "morlet_freq": 203, "tlim": 203, "ttick": 203, "blip": 203, "n_onset": 203, "x_orig": 203, "transition_band": 203, "create_filt": [203, 204, 266, 267, 268, 269, 451, 452, 481, 482, 795, 876, 886], "x_v16": 203, "twice": [203, 266, 267, 268, 269, 448, 449, 451, 452, 481, 482, 807], "filter_dur": 203, "x_v14": 203, "x_v13": 203, "h_eff": 203, "10001": [203, 886], "design_mne_c_filt": 203, "x_mne_c": 203, "hpw": 203, "lpw": 203, "x_min": [203, 315], "cost": [203, 273, 274, 277, 280, 281, 282, 419, 425, 562, 693, 694, 696, 697, 754, 812, 817, 868], "plot_sign": 203, "yscale": [203, 706, 886], "yticklabel": 203, "get_yticklabel": 203, "iirfilt": [203, 448], "iirdesign": [203, 448], "butterworth": [203, 266, 267, 268, 269, 415, 424, 448, 449, 451, 452, 481, 482, 574, 575, 886], "worsen": 203, "filtfilt": [203, 266, 267, 268, 269, 424, 448, 449, 451, 452, 481, 482, 807], "btype": [203, 448], "ftype": [203, 273, 274, 277, 280, 281, 282, 448], "butter": [203, 448], "x_shallow": 203, "sosfiltfilt": 203, "sosfilt": 203, "zpk2so": 203, "polynomi": [203, 266, 267, 268, 269, 481, 482, 521, 868, 886], "iir_param": [203, 208, 266, 267, 268, 269, 415, 424, 448, 449, 451, 452, 481, 482, 574, 575, 886], "filt": [203, 449], "x_steep": 203, "chebychev": [203, 448], "cheby1": [203, 448], "rp": [203, 448], "chebyshev": [203, 448, 886], "substanti": [203, 211, 266, 267, 272, 375, 469, 867, 868, 874], "adjust_ax": 203, "errant": 203, "misappl": 203, "deleteri": 203, "schr\u00f6ger": [203, 246], "uncontrol": 203, "acunzo": [203, 246], "misinterpret": 203, "tanner": [203, 246], "semant": 203, "syntact": 203, "n400": 203, "p600": 203, "5\u00b5v": 203, "sic": 203, "poststimulu": 203, "octav": 203, "energi": [203, 257, 865, 886], "understood": [203, 754], "cos_t": 203, "sig": [203, 232, 237, 238], "iir_lp_30": 203, "iir_hp_p1": 203, "iir_lp_2": 203, "iir_hp_2": 203, "x_lp_30": 203, "padlen": [203, 448], "x_hp_p1": 203, "x_lp_2": 203, "x_hp_2": 203, "x_f": 203, "lp": 203, "_2": [203, 868], "hp": [203, 211, 258], "evolv": 203, "maess": [203, 246, 886], "rebut": 203, "old": [203, 217, 219, 241, 246, 260, 263, 266, 267, 268, 269, 277, 280, 314, 322, 342, 405, 481, 482, 506, 527, 598, 620, 641, 642, 653, 754, 819, 823, 845, 853, 886], "baseline_plot": 203, "all_ax": 203, "ri": [203, 228, 246, 735, 738], "iir_hp": 203, "x_hp": 203, "leak": [203, 224, 867, 868], "n_pre": 203, "sig_pr": 203, "filter_data": [203, 266, 267, 268, 269, 424, 448, 449, 452, 481, 482, 876, 886], "adopt": [203, 843, 845], "reciproc": [203, 266, 267, 268, 269, 343, 415, 424, 434, 449, 451, 452, 481, 482, 573, 583, 594], "decent": 203, "blackman": [203, 266, 267, 268, 269, 424, 449, 451, 452, 481, 482], "fir_window": [203, 266, 267, 268, 269, 415, 424, 449, 451, 452, 481, 482], "fir_desgin": 203, "8197": 203, "outdat": 203, "construct_iir_filt": [203, 266, 267, 268, 269, 415, 424, 449, 451, 452, 481, 482, 574, 575, 876, 886], "transition_bandwidth": 203, "fir_coef": 203, "0545": 203, "0017": 203, "wider": [203, 204], "thoma": [203, 228, 229, 246, 540, 663, 668, 690, 693, 694, 695, 696, 697, 886], "sidnei": [203, 246], "wilei": [203, 246], "82896": [203, 246], "andrea": [203, 246, 299, 886], "erich": [203, 246], "burkhard": [203, 246, 886], "00233": [203, 246], "graham": [203, 246], "mackenzi": [203, 246], "rossum": [203, 246], "darren": [203, 246], "kara": [203, 246], "inappropri": [203, 246, 273, 274, 277, 280, 281, 282], "conclus": [203, 230, 246], "1009": [203, 246], "12437": [203, 246], "1469": [203, 246], "8986": [203, 246], "01009": [203, 246], "commentari": [203, 246], "artefact": [203, 213, 246], "norton": [203, 246], "ermf": [203, 246], "839": [203, 216, 233, 868], "25_background_filt": [203, 216], "mathrm": [204, 211, 228, 722, 732, 734, 736, 737], "raw_highpass": 204, "19821": 204, "9911": [204, 886], "filter_param": 204, "add_arrow": 204, "meg_pick": 204, "raw_notch": 204, "3965": 204, "raw_notch_fit": 204, "spectrum_fit": [204, 452, 481, 482, 886], "notabl": [204, 242, 886], "raw_downsampl": 204, "pitfal": 204, "safe": [204, 217, 246, 266, 267, 322, 379, 380, 381, 384, 385, 386, 388, 393, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 481, 851, 853], "614990234375": [204, 217], "current_sfreq": 204, "desired_sfreq": 204, "obtained_sfreq": 204, "lowpass_freq": 204, "19813025304873463": 204, "80214146205357": 204, "synch": 204, "30_filtering_resampl": [204, 216], "gratton": [205, 246, 561, 609], "croft": [205, 246, 561], "articl": [205, 860], "bleed": [205, 284, 589], "250m": 205, "model_plain": 205, "picks_artifact": [205, 213, 561, 609], "epochs_clean_plain": 205, "redo": 205, "partli": 205, "variat": [205, 225, 413, 861, 886], "prone": 205, "allevi": [205, 868], "epochs_sub": 205, "model_sub": 205, "epochs_clean_sub": 205, "piec": [205, 219, 266, 267, 481, 482, 868], "ongo": [205, 565, 861, 874], "alik": 205, "model_evok": 205, "epochs_clean_evok": 205, "eog_evoked_clean": 205, "raw_kwarg": 205, "cole": [205, 246, 561, 609], "emanuel": [205, 246, 561, 609, 659, 886], "donchin": [205, 246, 561, 609], "ocular": [205, 206, 208, 246, 561, 609], "468": [205, 233, 246, 561, 609], "90135": [205, 246, 561, 609], "s0987": [205, 246, 561], "7053": [205, 246, 561], "00055": [205, 246, 561], "35_artifact_correction_regress": [205, 216], "corrmap": [206, 876, 886], "guidanc": [206, 208, 867], "blind": [206, 246, 562, 592], "microphon": 206, "unmix": [206, 562, 563, 592, 798, 801, 886], "analogi": 206, "unwant": [206, 208, 212, 320, 886], "ic": [206, 276, 562, 577, 797, 799, 801, 886], "n_pca_compon": [206, 562, 798, 886], "smallest": [206, 233, 343, 413, 562, 865, 868], "runica": [206, 562], "mixing_matrix_": [206, 562], "unmixing_matrix_": [206, 562], "tesla": [206, 208, 223, 868], "artifact_pick": [206, 208], "harder": [206, 845], "filt_raw": 206, "huge": [206, 692], "9010": 206, "get_explained_variance_ratio": [206, 562, 886], "explained_var_ratio": 206, "9358001342790973": 206, "7717091491114122": 206, "ratio_perc": 206, "trackpad": [206, 268, 269, 472, 770, 789], "15459": 206, "ica000": [206, 886], "ica001": [206, 276, 562, 797, 799, 801], "anywai": [206, 218, 845, 851, 886], "read_ica": [206, 562, 876], "reconst_raw": 206, "tediou": 206, "reset": [206, 263, 266, 267, 268, 269, 275, 367, 413, 420, 481, 482, 561, 562, 706, 708, 709, 710, 754, 785, 786, 790, 793, 797, 806, 809, 814, 822, 871, 886], "eog_indic": 206, "prefront": 206, "ctp": [206, 562, 886], "ecg_indic": 206, "caught": 206, "ica014": 206, "refit": [206, 886], "new_ica": 206, "neck": [206, 310], "trail": [206, 562, 594, 750], "s001r03": 206, "s002r03": 206, "s003": 206, "s003r03": 206, "lib": [206, 843, 851], "python3": [206, 844, 886], "_fastica": 206, "convergencewarn": 206, "s004": 206, "s004r03": 206, "6250": 206, "6249": 206, "6150": 206, "6149": 206, "ica002": 206, "labels_": [206, 562, 577, 800], "get_compon": [206, 562, 886], "subject_index": 206, "component_index": 206, "template_eog_compon": 206, "33638605": 206, "32708878": 206, "32846765": 206, "32807248": 206, "35916344": 206, "37615216": 206, "42464993": 206, "21789139": 206, "22387812": 206, "22237922": 206, "21342143": 206, "2425263": 206, "26757238": 206, "27806995": 206, "15470616": 206, "1693302": 206, "17711037": 206, "17373137": 206, "19651749": 206, "21091786": 206, "22459439": 206, "68783519": 206, "46717407": 206, "64182737": 206, "34165002": 206, "28991817": 206, "76938995": 206, "0057612": 206, "54311043": 206, "54567127": 206, "63806031": 206, "57058636": 206, "52637437": 206, "51788659": 206, "55774431": 206, "56188149": 206, "69340923": 206, "73333856": 206, "2829121": 206, "39253171": 206, "16120286": 206, "25431324": 206, "06352167": 206, "1647002": 206, "11930156": 206, "1811579": 206, "10112171": 206, "12638332": 206, "13623739": 206, "1301851": 206, "14380943": 206, "15329772": 206, "1715539": 206, "16560352": 206, "13293812": 206, "08175318": 206, "10173655": 206, "10764581": 206, "12707317": 206, "09785876": 206, "07433338": 206, "08470678": 206, "07373196": 206, "03379354": 206, "ecg_ind": 206, "francoi": [206, 246, 562], "cardoso": [206, 246, 562], "precondit": [206, 211, 246, 562, 595, 886], "hessian": [206, 246, 562], "2844203": [206, 246, 562], "iren": [206, 246], "winkler": [206, 246], "deben": [206, 246, 577], "4101": [206, 246], "milan": [206, 246, 886], "7319296": [206, 246], "dammer": [206, 246, 562, 886], "schiek": [206, 246, 562], "boer": [206, 246, 562], "carmen": [206, 246, 391, 562], "silex": [206, 246, 562], "mikhail": [206, 246, 562], "zvyagintsev": [206, 246, 562], "uw": [206, 246, 562], "pietrzyk": [206, 246, 562], "mathiak": [206, 246, 562], "2353": [206, 246, 562], "926677": [206, 246, 562], "filipa": [206, 246, 577], "campo": [206, 246, 577], "viola": [206, 246, 577, 886], "jeremi": [206, 246, 577], "thorn": [206, 246, 577], "edmond": [206, 246, 577], "till": [206, 246, 577], "schneider": [206, 246, 577], "tom": [206, 246, 577, 886], "eichel": [206, 246, 577], "868": [206, 233, 246, 577], "clinph": [206, 246, 562, 570, 577, 735, 738], "40_artifact_correction_ica": [206, 216], "setup_3d_ax": 207, "set_zlabel": 207, "set_ylim": [207, 243], "set_zlim": 207, "geometr": [207, 273, 274, 277, 280, 281, 282, 447, 819, 861, 868], "shadow": [207, 647], "cast": [207, 259, 454, 758, 886], "sun": 207, "xy_projection_matrix": 207, "projected_point": 207, "projected_vector": 207, "arrow_coord": 207, "arrow_length_ratio": 207, "symbol": [207, 258, 705, 866, 868, 886], "expans": [207, 211, 266, 267, 268, 269, 434, 481, 482, 521, 572, 573, 583, 594, 868], "unpack": [207, 233, 767, 851], "lucki": 207, "bother": [207, 217], "trigger_effect": 207, "internet": [207, 867], "algebra": [207, 865, 886], "full_matric": 207, "trigger_projection_matrix": 207, "plot_trisurf": 207, "interchang": [207, 299, 841], "ten": [207, 243, 471, 849, 862], "hyperplan": [207, 416, 423], "synonym": [207, 871], "incident": [207, 268, 269, 472, 770, 789], "phrase": 207, "first_projector": 207, "explained_var": [207, 275, 886], "inact": [207, 211, 266, 267, 268, 269, 481, 482, 867], "compute_proj_raw": [207, 208, 357, 358, 868, 876, 886], "ortho": [207, 562], "write_proj": [207, 632, 876, 886], "forgo": 207, "offecg": 207, "remove_exist": [207, 208, 266, 267, 268, 269, 481, 482, 754], "perman": [207, 843, 861, 886], "mags_ecg": 207, "_projector": 207, "cheaper": 207, "consequenti": 207, "mikko": [207, 208, 246, 868], "uusitalo": [207, 208, 246, 868], "bf02534144": [207, 208, 246, 868], "45_projectors_background": [207, 216], "equip": [208, 868], "system_proj": 208, "empty_room_fil": 208, "empty_room_raw": 208, "empty_room_proj": 208, "distant": [208, 865], "_proj": [208, 886], "no_proj": [208, 574, 575], "picks_trac": [208, 805], "plot_projs_joint": [208, 876, 886], "ecg_l_freq": [208, 258, 574], "ecg_h_freq": [208, 258, 574], "filter_method": [208, 574, 575], "presum": 208, "clutter": 208, "eog_proj": 208, "okai": 208, "eog_projs_bad": 208, "perfectli": [208, 243, 729, 868], "get_titl": [208, 212], "get_ylabel": 208, "set_tick_param": 208, "labelbottom": 208, "50_artifact_correction_ssp": [208, 216], "earlob": 209, "collarbon": 209, "disadvantag": [209, 228], "add_reference_channel": [209, 266, 267, 268, 269, 481, 482, 706, 708, 709, 710, 876, 886], "ref_channel": [209, 266, 267, 268, 269, 283, 481, 482, 651, 706, 708, 709, 710], "raw_new_ref": 209, "raw_avg_ref": 209, "wasn": [209, 886], "infin": [209, 246, 266, 267, 268, 269, 481, 482, 651, 886], "raw_rest": 209, "_raw": [209, 212], "2197": 209, "00413199": 209, "0159844": 209, "05174612": 209, "eeg_bipolar": [209, 648], "transvers": [209, 264], "raw_bip_ref": 209, "36038": [209, 217], "61837": 209, "valueerror": [209, 277, 280, 447, 625, 648, 656, 778], "yao": [209, 246, 266, 267, 268, 269, 481, 482, 651, 666], "711": [209, 210, 233, 246, 266, 267, 268, 269, 481, 482, 651], "0967": [209, 246, 266, 267, 268, 269, 481, 482, 651], "3334": [209, 246, 266, 267, 268, 269, 481, 482, 651], "dezhong": [209, 246], "yun": [209, 246], "qin": [209, 246], "shiang": [209, 246], "hu": [209, 246], "dong": [209, 246, 886], "maria": [209, 246], "bringa": [209, 246], "vega": [209, 246], "pedro": [209, 246], "vald": [209, 246], "\u00e9": [209, 246], "sosa": [209, 246], "00707": [209, 246], "55_setting_eeg_refer": [209, 216], "h\u00f6chenberg": [210, 242, 873, 886], "hoechenberg": [210, 242], "test_move_anon_raw": [210, 211], "v6": [210, 211], "v7": [210, 211, 886], "10800": [210, 211, 886], "31199": [210, 211], "20399": 210, "get_chpi_info": [210, 876, 886], "chpi_freq": 210, "chpi_cod": 210, "chpi_amplitud": [210, 343, 344], "compute_chpi_amplitud": [210, 344, 345, 876, 886], "587": 210, "715": [210, 217, 222, 233], "737": [210, 233], "759": [210, 233], "567": [210, 246], "822": [210, 233], "644": [210, 233, 242, 245], "864": [210, 233, 279], "663": 210, "1010": 210, "786": [210, 233], "1067": 210, "814": [210, 233], "1105": 210, "1147": 210, "1168": 210, "1254": [210, 246, 391], "1272": 210, "949": [210, 233], "1290": 210, "1308": 210, "1328": 210, "973": [210, 233], "1393": 210, "1414": 210, "1435": 210, "1036": 210, "1456": 210, "1047": 210, "1499": 210, "1070": 210, "1083": 210, "1106": 210, "1587": 210, "1116": 210, "1608": 210, "1125": 210, "1649": 210, "1669": 210, "compute_chpi_loc": [210, 211, 343, 345, 346, 876, 886], "541": [210, 230, 233, 246, 434], "559": [210, 233], "568": [210, 233], "573": [210, 233], "789": 210, "805": [210, 233], "823": [210, 233], "848": [210, 233], "886": [210, 233], "926": 210, "1072": 210, "1127": 210, "1261": 210, "1315": 210, "1319": 210, "1381": 210, "1465": 210, "1573": 210, "1580": [210, 266, 267], "1586": 210, "1590": 210, "1599": 210, "1609": 210, "1652": 210, "1682": 210, "write_head_po": [210, 344, 346, 352, 353, 876], "compute_chpi_snr": [210, 343, 777, 876, 886], "plot_chpi_snr": [210, 876, 886], "snr_dict": [210, 777], "482": [210, 228, 233], "59_head_posit": [210, 216], "find_bad_channels_maxwel": [211, 594, 876, 886], "obliqu": 211, "filter_chpi": [211, 594, 876, 886], "crosstalk": 211, "fine_cal_fil": 211, "sss_cal_mgh": 211, "crosstalk_fil": 211, "ct_sparse_mgh": 211, "raw_check": 211, "auto_noisy_ch": 211, "auto_flat_ch": 211, "auto_scor": 211, "cross_talk": [211, 572, 583, 594], "return_scor": [211, 583], "ei": 211, "ch_subset": 211, "scores_noisi": [211, 583], "limits_noisi": [211, 583], "bin_label": 211, "data_to_plot": 211, "cbar_kw": 211, "nanmin": 211, "rect": 211, "nanmax": [211, 231], "appar": [211, 861], "fashion": [211, 373, 886], "min_count": [211, 583], "qualifi": 211, "int_ord": [211, 434, 573, 583, 594, 886], "ext_ord": [211, 343, 345, 349, 434, 572, 573, 583, 594], "thick": [211, 868], "mathtt": [211, 722, 732, 733, 734, 736, 737], "st": [211, 258], "_durat": 211, "penultim": 211, "st_correl": [211, 583, 594, 602], "st_onli": [211, 583, 594, 886], "doublecheck": 211, "get_active_chpi": [211, 876, 886], "chpi_fif_fil": 211, "head_pos_fil": 211, "headpo": [211, 258, 353], "patent": [211, 594, 602], "legal": [211, 778, 867], "commerci": [211, 594], "124905": [211, 246, 434, 573, 594], "1935742": [211, 246, 573, 594], "1759": [211, 246, 594], "1768": [211, 246, 594], "983": [211, 216], "60_maxwell_filtering_sss": [211, 216], "deoxyhaemoglobin": [212, 886], "itertool": 212, "compress": [212, 261, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 388, 481, 482, 579, 580, 706, 709, 851, 886], "novemb": [212, 214, 246, 663, 668], "cw": [212, 373, 841], "set_dur": [212, 260, 886], "mid": [212, 228], "source_detector_dist": [212, 876, 886], "photodetect": 212, "scalp_coupling_index": [212, 876, 886], "beer": 212, "lambert": 212, "law": [212, 867, 886], "raw_haemo": 212, "beer_lambert_law": [212, 876, 886], "haemodynam": 212, "predominantli": 212, "raw_haemo_unfilt": 212, "1291": 212, "s4_d4": 212, "s8_d8": 212, "s3_d3": 212, "s7_d6": 212, "s7_d7": 212, "s6_d8": 212, "oxi": [212, 886], "morphologi": 212, "evoked_dict": 212, "color_dict": 212, "aa3377": [212, 722, 732], "styles_dict": 212, "chroma": 212, "drive": [212, 365, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 522], "tidi": 212, "leg_lin": 212, "get_c": 212, "70_fnirs_process": [212, 216], "technologi": [213, 246, 257, 873], "placement": [213, 268, 269, 791, 841, 886], "opm_data_fold": 213, "ucl_opm_auditori": [213, 862, 876], "opm_fil": 213, "002_se": 213, "aef_run": 213, "001_meg": 213, "540000": 213, "6000": [213, 592], "pt": [213, 485, 514], "amp_scal": 213, "1e12": [213, 372], "data_d": 213, "time_d": 213, "set_kwarg": 213, "ambient": 213, "knowldg": 213, "evironment": [213, 576], "g2": 213, "psd_kwarg": 213, "psd_pre": 213, "psd_post_reg": 213, "9901": [213, 886], "relatiship": 213, "hfc": [213, 576, 886], "homgen": 213, "compute_proj_hfc": [213, 876, 886], "psd_post_hfc": 213, "broadband": 213, "remnant": 213, "motiv": [213, 243], "minimis": 213, "interfec": 213, "39601": 213, "seymour": [213, 246, 576, 862, 886], "stephani": [213, 246, 576, 862], "mellor": [213, 246, 576, 862], "neill": [213, 246, 576, 862, 886], "tim": [213, 246, 576, 862], "tiernei": [213, 246, 576, 862], "eleanor": [213, 246, 576, 862], "maguir": [213, 246, 576, 862], "opportun": [213, 246, 862], "118834": [213, 246, 576, 862], "februari": [213, 246, 302, 862], "785": [213, 216, 233], "80_opm_process": [213, 216], "pupillari": 214, "reflex": 214, "dominik": [214, 243, 886], "welk": [214, 243, 886], "huberti": [214, 886], "mcgill": 214, "ca": 214, "proprietari": [214, 843, 862, 867], "asc": [214, 500, 862, 868], "eyelink": [214, 500, 868, 876], "monocular": [214, 862], "eyelink_fnam": 214, "mono_multi": 214, "block_multi": 214, "gaze": [214, 582, 862], "feed": [214, 577, 868], "shortest_ev": [214, 454], "uint_cast": [214, 259, 454], "categor": 214, "5301": 214, "90_eyetracking_data": [214, 216], "auto_tutorials_preprocess": 216, "166800": 217, "read_raw_": [217, 480, 868, 886], "famili": [217, 695], "seriou": [217, 867], "parenthes": [217, 868], "estimate_rank": [217, 886], "n_time_samp": 217, "time_sec": 217, "n_chan": [217, 686, 733, 734, 816], "000167471573526": 217, "megacq": 217, "acqch001": 217, "110113": 217, "acqch002": 217, "110112": 217, "acqch003": 217, "110111": 217, "acqch004": 217, "110122": 217, "frequent": [217, 843, 845, 863, 866, 886], "12012": 217, "18018": 217, "24024": 217, "underlyingli": [217, 863], "n_timepoint": [217, 691], "pose": [217, 845], "undo": [217, 624, 886], "eeg_and_eog": 217, "raw_temp": 217, "channel_nam": [217, 498, 625, 886], "eog_and_frontal_eeg": 217, "frivol": 217, "eeg_059": 217, "eeg_060": 217, "blink_detector": 217, "makeshift": 217, "eeg_001": 217, "raw_select": 217, "1503": 217, "unspecifi": [217, 223, 778], "500770084699155": 217, "5001290587975622": 217, "raw_selection1": 217, "raw_selection2": 217, "raw_selection3": 217, "5041000049184614": 217, "sampling_freq": [217, 223], "start_stop_second": 217, "channel_index": [217, 767], "85742192e": 217, "64355481e": 217, "89306644e": 217, "99872648": 217, "00039144": 217, "0020564": 217, "9933487": 217, "99501366": 217, "99667862": 217, "data_arrai": 217, "times_arrai": 217, "meg_0712": 217, "meg_1022": 217, "two_meg_chan": 217, "y_offset": 217, "safest": [217, 861], "eeg_channel_indic": 217, "planar1": [217, 263, 266, 267, 268, 269, 413, 420, 481, 482, 559, 560, 561, 562, 577, 706, 708, 709, 710, 786, 793, 797, 809, 814, 816], "planar2": [217, 263, 266, 267, 268, 269, 413, 420, 481, 482, 559, 560, 561, 562, 577, 706, 708, 709, 710, 786, 793, 797, 809, 814, 816], "first_channel_data": [217, 868], "eeg_and_eog_data": 217, "two_meg_chans_data": 217, "my_data": 217, "npy": [217, 218], "afford": 217, "scaling_tim": 217, "start_end_sec": 217, "to_hdf": 217, "999750": 217, "952283e": 217, "001415": 217, "069226e": 217, "003080": 217, "080921e": 217, "004745": 217, "010755e": 217, "006410": 217, "10_raw_overview": [217, 222], "write_ev": [218, 454, 621, 876, 886], "lst": [218, 621, 831], "array_equ": 218, "_eve": 218, "my_experi": 218, "told": 218, "events_no_button": 218, "merged_ev": 218, "ultim": [218, 845], "send": [218, 751], "cumbersom": 218, "20_event_arrai": [218, 222], "datetim": [219, 260, 266, 267, 268, 269, 271, 285, 481, 482, 886], "compris": [219, 223, 266, 267, 694, 708, 709, 710, 868, 874], "posix": [219, 260], "my_annot": 219, "aaa": 219, "bbb": 219, "ccc": 219, "microsecond": [219, 260, 266, 267, 268, 269, 271, 481, 482, 871], "time_of_first_sampl": 219, "95597083": 219, "iso": 219, "8601": 219, "new_orig_tim": 219, "strftime": 219, "later_annot": 219, "ddd": 219, "eee": 219, "fff": 219, "720100": 219, "darker": 219, "spinbox": 219, "safeguard": [219, 271, 886], "interactive_annot": 219, "bad_": [219, 886], "ordereddict": 219, "95597082905339": [219, 260], "tzinfo": 219, "timezon": [219, 266, 267, 268, 269, 481, 482], "descr": 219, "70597082905339": 219, "45597082905339": 219, "20597082905339": 219, "WILL": 219, "NOT": 219, "annot_from_fil": 219, "30_annotate_raw": [219, 222], "versatil": 220, "lengthen": 220, "unmark": 220, "newli": [220, 775], "hover": 220, "thumbnail": 220, "plot_psd_topo": [220, 241, 266, 267, 268, 269, 481, 482], "40_visualize_raw": [220, 222], "auto_tutorials_raw": 222, "synthet": [223, 498, 579, 584, 868, 886], "hertz": [223, 225, 271, 707, 711, 712, 713, 714, 715, 716], "eog001": 223, "meg001": 223, "meg002": 223, "meg003": 223, "meg004": 223, "meg005": 223, "meg006": 223, "meg007": 223, "meg008": 223, "seven": [223, 868, 886], "molar": [223, 868], "amper": [223, 868], "simulated_raw": 223, "show_scalebar": [223, 266, 267, 481, 482, 784, 807, 886], "simulated_epoch": 223, "column_stack": 223, "condition_a": 223, "condition_b": 223, "evoked_arrai": 223, "n_per_seg": [223, 243, 266, 267, 268, 269, 481, 482, 708, 710, 725, 886], "psd_ave": 223, "spectrum_from_arrai": 223, "inst_info": 223, "my_welch": 223, "inst_type_str": 223, "data_typ": 223, "10_array_obj": [223, 227], "simulate_stc": [224, 670, 671, 672, 876, 886], "dt": [224, 434, 718], "17545": 224, "hemi_to_ind": 224, "elig": [224, 867], "surf_vertic": 224, "restrict_vert": 224, "intersect1d": 224, "restrict_vertic": [224, 272, 277], "cent_idx": 224, "elsewher": 224, "distances_to_outsid": [224, 272, 886], "compute_area": [224, 272, 886], "stc_gen": 224, "value_fun": [224, 673], "brain_gen": 224, "evoked_gen": 224, "stc_inv": 224, "brain_inv": 224, "45968308": 224, "57021267": 224, "69354621": 224, "evoked_snr": 224, "70_point_spread": [224, 227], "unit_impuls": 225, "coh_signal_gen": 225, "t_rand": 225, "dev": [225, 550, 652], "base_freq": 225, "cumsum": 225, "signal1": 225, "signal2": 225, "am": [225, 264, 267, 269, 375, 482, 871, 886], "nperseg": 225, "coh": [225, 707, 780], "noverlap": 225, "146374": 225, "33830": 225, "stc_signal": 225, "stc_nois": 225, "pretend": [225, 228], "s_rm": 225, "59828": 225, "89697e": 225, "40489756": 225, "65479053": 225, "61269642": 225, "dampen": [225, 647, 722, 732, 736], "consensu": [225, 867], "csd_signal": 225, "filters_approach1": 225, "filters_approach2": 225, "filters_1": 225, "power_approach1": 225, "power_approach2": 225, "plot_approach": 225, "brain1": 225, "42918831e": 225, "04345299e": 225, "40589757e": 225, "brain2": 225, "mia": [225, 246, 299, 300], "liljestr\u00f6m": [225, 246, 299, 300], "susanna": [225, 246, 299, 300, 886], "aro": [225, 246, 299, 300, 886], "245530": [225, 246, 299, 300], "kensuk": [225, 246, 299, 300], "sekihara": [225, 246, 299, 300], "79369": [225, 246, 299, 300], "79370": [225, 246, 299, 300], "80_dic": [225, 227], "911": [227, 233], "auto_tutorials_simul": 227, "539": [227, 233], "ttest_1samp_no_p": [228, 693, 696, 700, 876, 886], "phenomena": 228, "n_subject": [228, 236, 238, 689], "signal_mean": 228, "signal_sd": 228, "noise_sd": 228, "gaussian_sd": 228, "n_src": [228, 274, 279], "h_0": 228, "colon": [228, 258, 388, 871], "h_1": 228, "neq": [228, 868], "geq": 228, "cdot": [228, 666, 868], "1600": 228, "mcc": 228, "plot_t_p": 228, "p_lim": 228, "t_lim": 228, "mgrid": 228, "plot_surfac": [228, 886], "rstride": 228, "cstride": 228, "ztick": 228, "mappabl": 228, "set_tick": 228, "set_ticklabel": 228, "get_xaxi": 228, "set_label_coord": 228, "set_weight": 228, "use_p": 228, "log_": 228, "t_": [228, 868], "exchang": [228, 886], "verid": 228, "n_": [228, 868], "samp": 228, "gymnast": 228, "declar": [228, 867], "p_type_i": 228, "combat": 228, "familywis": 228, "fwer": 228, "benjamini": [228, 690], "hochberg": [228, 690], "strict": [228, 456, 849], "indistinguish": 228, "mathbf": [228, 573], "perm_": 228, "aforement": 228, "rethink": 228, "thought": [228, 687, 841], "refram": 228, "drawback": 228, "touch": [228, 323], "feature_extract": 228, "grid_to_graph": 228, "e402": 228, "mini_adjac": 228, "toarrai": 228, "find_ch_adjac": [228, 229, 230, 233, 331, 686, 693, 694, 696, 697, 775, 876, 886], "combine_adjac": [228, 230, 233, 236, 320, 331, 693, 694, 696, 697, 876, 886], "get_builtin_ch_adjac": [228, 320, 331, 775, 876], "builtin_ch_adj": 228, "adj_nam": 228, "adj_descript": 228, "bti148": 228, "bti248": 228, "bti248grad": 228, "ctf64": 228, "easycap128ch": 228, "easycap32ch": 228, "easycap64ch": 228, "easycapm1": [228, 886], "easycapm11": 228, "m11": 228, "easycapm14": 228, "m14": 228, "easycapm15": 228, "m15": 228, "ecog256": 228, "256channel": 228, "ecog256bipolar": 228, "eeg1010_neighb": 228, "elec1005": 228, "elec1010": 228, "elec1020": 228, "itab153": 228, "itab": 228, "itab28": 228, "language29ch": 228, "mpi": 228, "mpi_59_channel": 228, "neuromag122cmb": 228, "neuromag122": [228, 886], "neuromag306cmb": 228, "neuromag306": 228, "neuromag306mag": [228, 233], "neuromag306planar": [228, 230], "yokogawa160": 228, "yokogawa440": 228, "read_ch_adjac": [228, 320, 324, 686, 775, 876, 886], "n_space": 228, "t_thresh": [228, 230], "t_clust": 228, "viewabl": 228, "p_clust": 228, "cl": 228, "195527": 228, "120434": 228, "2036": 228, "1953": 228, "1972": 228, "1979": 228, "1986": 228, "stat_fun_hat": 228, "t_hat": 228, "p_hat": 228, "043603": 228, "127369": 228, "4685": 228, "4938": 228, "4480": 228, "4265": 228, "riemann": 228, "threshold_tfc": 228, "t_tfce": 228, "p_tfce": 228, "h_power": [228, 229], "e_pow": [228, 229], "426": 228, "428": 228, "477": [228, 233], "494": [228, 233], "504": [228, 233], "t_tfce_hat": 228, "p_tfce_hat": 228, "433": [228, 233], "483": 228, "jag": 228, "peaki": 228, "broad": [228, 243], "tighten": 228, "broaden": 228, "exhaust": [228, 299], "unbalanc": 228, "statsmodel": [228, 874, 883], "anova_lm": 228, "wrap": [228, 270, 535, 886], "q": [228, 258, 666, 693, 694, 696, 697, 868], "f_onewai": [228, 687, 689, 694, 697, 876], "f_mway_rm": [228, 232, 238, 689, 876, 886], "f_threshold_mway_rm": [228, 232, 238, 687, 876], "unpair": 228, "spatio_temporal_cluster_test": [228, 229, 233, 237, 238, 876, 886], "spatio_temporal_cluster_1samp_test": [228, 236, 693, 876, 886], "gerard": [228, 246, 699, 700], "ridgwai": [228, 246, 699, 700], "flandin": [228, 246, 699, 700], "karl": [228, 246, 257, 699, 700, 873], "friston": [228, 246, 699, 700], "Will": [228, 246, 258, 270, 313, 449, 480, 562, 699, 700, 705, 718, 725, 750, 827, 850], "penni": [228, 246, 699, 700], "haircut": [228, 246, 699, 700], "nichol": [228, 229, 246, 690, 693, 694, 695, 696, 697], "10_background_stat": [228, 235], "confirmatori": 229, "tfce": [229, 693, 694, 696, 697, 874, 886], "ttest_ind": [229, 700], "unsaf": [229, 709], "median_valu": 229, "long_word": 229, "short_word": 229, "time_window": [229, 706], "ntarget": 229, "short_df": 229, "format_dict": 229, "453939": 229, "222424": 229, "518939": 229, "371515": 229, "064": [229, 246, 348, 544, 666], "811667": 229, "250152": 229, "039697": 229, "318030": 229, "163030": 229, "425152": 229, "509": 229, "absent": [229, 367, 871, 886], "amongst": [229, 243], "temor": 229, "cluster_pv": [229, 693, 694, 696, 697], "significant_point": 229, "delaunai": [229, 230, 320, 886], "917298": 229, "1856": 229, "984": [229, 233, 235], "20_erp_stat": [229, 235], "whom": [230, 233, 845], "downstream": [230, 231], "nonparametr": [230, 231, 233, 246, 693, 694, 695, 696, 697], "spectrotempor": [230, 231, 733, 734, 736, 737], "tfr_epoch": 230, "logratio": [230, 242, 289, 545, 546, 706, 709, 814], "epochs_pow": [230, 232, 233], "lattic": [230, 233, 686, 693, 694, 696, 697], "sensor_adjac": 230, "use_idx": 230, "n_ch": 230, "unrol": 230, "degrees_of_freedom": 230, "455144": 230, "265125": 230, "caveat": [230, 233, 246, 562, 868], "anywher": [230, 886], "t_obs_plot": 230, "f_idx": 230, "t_idx": [230, 481, 482], "nanargmax": 230, "40_cluster_1samp_time_freq": [230, 235], "epochs_condition_1": 231, "epochs_condition_2": 231, "comptuat": 231, "tfr_epochs_1": 231, "tfr_epochs_2": 231, "epochs_power_1": 231, "epochs_power_2": 231, "f_ob": [231, 232, 233, 237, 238, 694, 697], "566824": 231, "964": [231, 233], "1001": [231, 871], "1008": 231, "1003": 231, "evoked_power_1": 231, "evoked_power_2": 231, "evoked_power_contrast": 231, "f_obs_plot": [231, 232, 233], "max_f": 231, "evoked_condition_1": 231, "evoked_condition_2": 231, "evoked_contrast": 231, "50_cluster_between_time_freq": [231, 235], "interplai": 232, "perceptu": 232, "56aud_r": 232, "60vis_l": 232, "64vis_r": 232, "forgiv": 232, "zero_mean": [232, 546, 722, 732, 733, 734, 736], "this_tfr": [232, 233], "this_pow": 232, "n_condit": [232, 233, 238, 694, 697], "n_replic": 232, "factor_level": [232, 238, 687, 689], "formula": [232, 238, 299, 300, 356, 662, 666, 719, 720, 868, 886], "a1b1": [232, 687], "a1b2": [232, 687], "a2b1": [232, 687], "b2b2": 232, "fval": 232, "effect_label": 232, "autumn": [232, 233], "overrid": [232, 276, 372, 374, 481, 482, 498, 643, 644, 645, 646, 752, 778, 849, 851, 867], "necessit": [232, 238, 886], "return_pv": [232, 238, 687], "pthresh": [232, 238], "f_thresh": [232, 233, 238], "419588": 232, "good_clust": [232, 236], "f_imag": [232, 233], "f_obs_plot2": 232, "70_cluster_rmanova_time_freq": [232, 235], "differenti": [233, 246, 266, 267, 268, 269, 437, 481, 482, 735, 738, 874], "plot_ch_adjac": [233, 320, 331, 876, 886], "_csr": 233, "csr_matrix": [233, 278, 279, 320, 331, 631], "bind": [233, 238], "stackexchang": 233, "73993": 233, "alpha_cluster_form": 233, "n_observ": [233, 691, 693, 694, 696, 697, 778], "dfn": [233, 694, 697], "dfd": [233, 694, 697], "cluster_stat": 233, "004107": 233, "094418": 233, "514": 233, "517": 233, "526": 233, "556": 233, "571": 233, "582": [233, 246], "594": 233, "596": 233, "599": 233, "612": 233, "618": [233, 246, 688], "624": 233, "632": 233, "634": [233, 246, 562], "637": 233, "646": 233, "653": 233, "664": 233, "681": 233, "708": 233, "767": [233, 246, 861], "773": 233, "782": 233, "788": 233, "808": 233, "811": 233, "826": 233, "842": 233, "845": 233, "854": 233, "857": 233, "865": 233, "871": 233, "876": [233, 279], "882": 233, "889": [233, 279], "916": [233, 243], "922": 233, "928": 233, "939": 233, "953": 233, "971": 233, "974": 233, "977": 233, "987": 233, "p_accept": 233, "good_cluster_ind": [233, 237, 238], "crimson": [233, 754], "steelblu": [233, 481, 482, 807], "i_clu": 233, "clu_idx": 233, "time_ind": 233, "space_ind": 233, "ch_ind": 233, "f_map": 233, "sig_tim": 233, "ax_topo": 233, "f_evok": 233, "ax_colorbar": 233, "ax_sign": 233, "ymin": [233, 238], "get_ylim": 233, "fill_betweenx": [233, 238], "tfr_adjac": 233, "tfr_threshold": 233, "333033": 233, "425": 233, "472": [233, 246, 413], "481": 233, "493": 233, "519": [233, 243], "522": 233, "527": 233, "535": 233, "554": 233, "557": [233, 246, 405], "572": 233, "576": 233, "583": [233, 246, 421], "616": 233, "633": 233, "654": 233, "662": 233, "671": 233, "676": 233, "781": 233, "784": 233, "816": 233, "821": 233, "824": 233, "831": 233, "835": 233, "836": 233, "849": 233, "853": 233, "858": 233, "872": 233, "884": [233, 246], "887": 233, "888": 233, "891": 233, "893": 233, "896": 233, "908": 233, "914": 233, "917": 233, "927": 233, "931": 233, "932": 233, "937": 233, "941": 233, "944": 233, "952": 233, "963": [233, 235], "976": 233, "979": 233, "982": 233, "986": 233, "991": 233, "difficulti": [233, 406, 843, 865], "freq_ind": 233, "ax_spec": 233, "f_obs_plot_sig": 233, "ax_colorbar2": 233, "mari": [233, 246, 693, 694, 696, 697, 886], "dejan": [233, 246, 693, 694, 696, 697], "draschkow": [233, 246, 693, 694, 696, 697], "e13335": [233, 246, 693, 694, 696, 697], "13335": [233, 246, 693, 694, 696, 697], "75_cluster_ftest_spatiotempor": [233, 235], "auto_tutorials_stat": [235, 240], "equalize_epoch_count": [236, 876], "summarize_clusters_stc": [236, 237, 238, 876, 886], "1000e": [236, 238], "sample_vertic": [236, 238], "evoked1": [236, 872], "evoked2": [236, 872], "n_vertices_sampl": [236, 238], "morph_data": [236, 886], "fsave_vertic": [236, 237, 238], "morph_mat": [236, 238, 278], "n_vertices_fsav": [236, 237, 238], "govern": 236, "member": [236, 691, 867, 871, 874], "max_step": [236, 693, 694, 696, 697], "spatial_src_adjac": [236, 237, 238, 876, 886], "p_threshold": [236, 237], "t_threshold": 236, "clu": [236, 237, 238, 698], "563537": 236, "791547": 236, "permutationt": 236, "good_clusters_idx": 236, "stc_all_cluster_vi": [236, 237, 238], "20_cluster_1samp_spatiotempor": [236, 240], "stc_fname": 237, "n_subjects1": 237, "n_subjects2": 237, "x1": [237, 691, 694], "x2": [237, 691, 694], "subjects_k": 237, "f_threshold": [237, 689], "632172": 237, "30_cluster_ftest_spatiotempor": [237, 240], "engemannn": 238, "r_aud": 238, "r_vi": 238, "tini": [238, 300], "1782": 238, "851281": 238, "inds_t": 238, "inds_v": 238, "cluster_ind": 238, "eve_id": 238, "mean_tc": 238, "std_tc": 238, "60_cluster_rmanova_spatiotempor": [238, 240], "v\u00b2": 241, "\u00b2": [241, 242], "t\u00b2": [241, 243], "overridden": [241, 479, 886], "esp": 241, "method_kw": [241, 266, 267, 268, 269, 481, 482, 708, 710], "psd_array_multitap": [241, 266, 267, 268, 269, 418, 481, 482, 708, 710, 734, 737, 876, 886], "irrelev": [241, 258, 845, 868], "epo_spectrum": 241, "npsd": 241, "__getitem__": [241, 259, 260, 261, 263, 264, 266, 267, 271, 275, 279, 290, 304, 481, 482, 528, 707, 708, 709, 710, 741, 886], "evk_spectrum": 241, "61863537e": 241, "13487136e": 241, "88010499e": 241, "89065956e": 241, "24056397e": 241, "91160668e": 241, "56762015e": 241, "65842303e": 241, "39426775e": 241, "38758770e": 241, "03771739e": 241, "98519756e": 241, "agg_fun": [241, 266, 267, 268, 269, 481, 482, 708, 710, 786], "psd_welch": [241, 886], "psd_multitap": [241, 886], "area_mod": [241, 266, 267, 268, 269, 481, 482, 808], "kept": [241, 261, 266, 272, 326, 373, 437, 476, 478, 479, 500, 522, 529, 530, 531, 532, 533, 535, 536, 546, 562, 563, 573, 617, 798, 845, 886], "periodogram": [241, 246, 266, 267, 268, 269, 481, 482, 708, 710, 725], "electroacoust": [241, 246, 266, 267, 268, 269, 481, 482, 708, 710, 725], "1967": [241, 246, 266, 267, 268, 269, 481, 482, 708, 710, 725], "tau": [241, 246, 266, 267, 268, 269, 481, 482, 708, 710, 725], "1161901": [241, 246, 266, 267, 268, 269, 481, 482, 708, 710, 725], "slepian": [241, 246, 266, 267, 268, 269, 481, 482, 708, 710, 718, 724], "bell": [241, 246, 266, 267, 268, 269, 481, 482, 562, 592, 708, 710, 718, 724], "1430": [241, 246, 266, 267, 268, 269, 481, 482, 708, 710, 718, 724], "1978": [241, 246, 266, 267, 268, 269, 481, 482, 708, 710, 718, 724], "1538": [241, 246, 266, 267, 268, 269, 481, 482, 708, 710, 718, 724], "7305": [241, 246, 266, 267, 268, 269, 481, 482, 708, 710, 718, 724], "tb02104": [241, 246, 266, 267, 268, 269, 481, 482, 708, 710, 718, 724], "10_spectrum_class": [241, 245], "72074": 242, "mean_spectrum": 242, "psds_mean": [242, 243], "psds_std": [242, 243], "arithmet": [242, 562, 725, 886], "psds_welch_mean": 242, "freqs_mean": 242, "psds_welch_median": 242, "freqs_median": 242, "epo_idx": 242, "unaggreg": [242, 725, 886], "n_segment": [242, 725], "welch_unagg": 242, "topomap_kw": 242, "fmin_fmax": 242, "timefreq": [242, 706], "20_sensors_time_frequ": [242, 245], "fpv": 243, "steadi": 243, "assr": 243, "norcia": 243, "picton": 243, "wet": [243, 862], "evgenii": [243, 886], "kalenkovich": [243, 886], "ttest_rel": 243, "bids_fnam": 243, "12hz": 243, "15hz": 243, "decai": 243, "stabil": [243, 448, 562, 573, 886], "bach": 243, "meigen": 243, "boxcar": [243, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 453, 481, 482, 865, 886], "n_overlap": [243, 266, 267, 268, 269, 481, 482, 708, 710, 725, 808], "snr_spectrum": 243, "noise_n_neighbor_freq": 243, "noise_skip_neighbor_freq": 243, "n_trial": [243, 429], "n_frequency_bin": 243, "increment": [243, 478, 562], "ON": 243, "averaging_kernel": 243, "mean_nois": 243, "apply_along_axi": 243, "psd_": 243, "edge_width": 243, "pad_width": 243, "constant_valu": 243, "drastic": [243, 278, 886], "reappear": 243, "grand": [243, 470, 868, 886], "floor": [243, 426, 592, 734, 737], "ceil": [243, 729], "psds_plot": 243, "snr_mean": 243, "snr_std": 243, "stim_freq": 243, "i_bin_12hz": 243, "1st": [243, 648], "i_bin_24hz": 243, "i_bin_36hz": 243, "i_bin_15hz": 243, "i_bin_30hz": 243, "i_bin_45hz": 243, "i_trial_12hz": 243, "i_trial_15hz": 243, "roi_vi": 243, "o9": 243, "o10": 243, "picks_roi_vi": 243, "hotel": 243, "snrs_target": 243, "69365541718619": 243, "wait": [243, 261, 266, 845, 853, 886], "snrs_12hz": 243, "snrs_12hz_chaverag": 243, "tstat_roi_vs_scalp": 243, "985902": 243, "693655": 243, "000067": 243, "Such": [243, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 299, 300, 481, 482, 647, 706, 709, 841, 867, 868], "somewher": [243, 481, 482, 807, 850, 869], "unintend": 243, "preregist": 243, "peopl": [243, 845, 856, 867, 886], "detour": 243, "snrs_roi": 243, "freq_plot": 243, "color_plot": 243, "darkblu": [243, 481, 482, 807], "darkgreen": 243, "mediumblu": 243, "seagreen": 243, "xpos_plot": 243, "stim_12hz_tmp": 243, "stim_15hz_tmp": 243, "snr_tmp": 243, "yerr": 243, "stim_12hz_snrs_": 243, "ihz": 243, "stim_15hz_snrs_": 243, "strike": 243, "tstat_12hz_trial_stim": 243, "stim_12hz_snrs_12hz": 243, "stim_12hz_snrs_15hz": 243, "tstat_12hz_trial_1st_harmon": 243, "stim_12hz_snrs_24hz": 243, "stim_12hz_snrs_30hz": 243, "tstat_12hz_trial_2nd_harmon": 243, "stim_12hz_snrs_36hz": 243, "stim_12hz_snrs_45hz": 243, "tstat_15hz_trial_stim": 243, "stim_15hz_snrs_12hz": 243, "stim_15hz_snrs_15hz": 243, "tstat_15hz_trial_1st_harmon": 243, "stim_15hz_snrs_24hz": 243, "stim_15hz_snrs_30hz": 243, "tstat_15hz_trial_2nd_harmon": 243, "stim_15hz_snrs_36hz": 243, "stim_15hz_snrs_45hz": 243, "000037": 243, "000014": 243, "899": 243, "000297": 243, "000024": 243, "006525": 243, "tour": [243, 886], "overli": 243, "stim_bandwidth": 243, "window_length": 243, "window_snr": 243, "i_win": 243, "this_spectrum": 243, "windowed_psd": 243, "windowed_freq": 243, "stimfreq": 243, "bin_width": 243, "skip_neighbor_freq": 243, "n_neighbor_freq": 243, "windowed_snr": 243, "boxplot": 243, "stochast": [243, 246, 562], "window_start": 243, "greyscal": 243, "optimist": 243, "serious": [243, 868], "50_ssvep": [243, 245], "auto_tutorials_tim": 245, "alphabet": [246, 845, 886], "fiorenzo": [246, 562], "artoni": [246, 562], "magazin": [246, 413], "962275": 246, "stephan": [246, 413], "bonnet": [246, 413], "marco": [246, 413], "congedo": [246, 413], "jutten": [246, 413], "riemannian": [246, 413], "multimedia": [246, 413], "mmsp": [246, 413], "5662067": [246, 413], "barber": [246, 356], "51814": [246, 356], "www": [246, 356, 452, 489, 577, 845, 865], "staff": [246, 356, 851], "brml": [246, 356], "becker": [246, 666], "albera": [246, 666], "comon": [246, 666], "gribonv": [246, 666], "fleureau": [246, 666], "guillotel": [246, 666], "merlet": [246, 666], "sissi": [246, 666], "august": [246, 666], "anthoni": [246, 562], "terrenc": [246, 562], "sejnowski": [246, 562, 592], "deconvolut": [246, 562, 592], "1129": [246, 562, 592], "1159": [246, 562, 592], "1995": [246, 405, 562, 592, 868], "neco": [246, 562], "anna": [246, 659, 886], "rita": [246, 659], "bentivoglio": [246, 659], "bressman": [246, 659], "cassetta": [246, 659], "donatella": [246, 659], "carretta": [246, 659], "pietro": [246, 659], "tonali": [246, 659], "alberto": [246, 659], "albanes": [246, 659], "disord": [246, 659], "1028": [246, 659], "870120629": [246, 659], "berg": [246, 868], "scherg": [246, 868], "1994": [246, 529, 868], "90113": [246, 868], "quentin": [246, 886], "anderson": [246, 886], "arindam": 246, "banerje": 246, "kenji": 246, "fukumizu": 246, "24th": 246, "1288": 246, "pmlr": 246, "apr": 246, "mlr": 246, "v130": 246, "bertrand21a": 246, "ryota": [246, 413], "tomioka": [246, 413], "lemm": [246, 413], "motoaki": [246, 413], "kawanab": [246, 413], "msp": [246, 413], "4408441": [246, 413], "fred": 246, "bookstein": 246, "thin": 246, "plate": 246, "24792": 246, "oleg": 246, "burdakov": 246, "bori": 246, "merkulov": 246, "lith": 246, "\u00f6": 246, "ping": 246, "yilun": [246, 356], "chen": [246, 356], "ami": [246, 356], "wiesel": [246, 356], "yonina": [246, 356], "eldar": [246, 356], "alfr": [246, 356, 861], "hero": [246, 356], "shrinkag": [246, 356, 413, 420, 421, 563, 886], "mmse": [246, 356], "5016": [246, 356], "5029": [246, 356], "2053029": [246, 356], "contributor": [246, 849, 852, 864, 865, 867, 874, 886], "readthedoc": 246, "ronald": [246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709], "crochier": [246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709], "lawrenc": [246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 570, 706, 709], "rabin": [246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709], "multir": [246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709], "englewood": [246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709], "cliff": [246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709], "nj": [246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709], "605162": [246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709], "adrian": [246, 272, 277], "guggisberg": 246, "erik": [246, 886], "findlai": 246, "ryan": [246, 576, 886], "canolti": 246, "mitchel": 246, "berger": 246, "barbaro": 246, "heidi": 246, "kirsch": 246, "1686": 246, "sereno": [246, 868], "1006": [246, 690, 868], "nimg": [246, 690, 868], "0395": [246, 868], "arthur": [246, 529, 735, 738], "liu": [246, 529], "buckner": [246, 529], "lewin": [246, 529], "s0896": [246, 529], "6273": [246, 529], "81138": [246, 529], "jocn": 246, "darva": 246, "ermer": 246, "20171": 246, "salat": [246, 868], "andr\u00e9": [246, 868], "kouw": [246, 868], "niko": [246, 868], "makri": [246, 868], "florent": [246, 868], "s\u00e9gonn": [246, 868], "quinn": [246, 868, 886], "s69": [246, 868], "s84": [246, 868], "0396": 246, "tootel": 246, "intersubject": 246, "sici": 246, "1097": 246, "0193": 246, "hbm10": 246, "genoves": [246, 690], "lazar": [246, 413, 690], "1037": [246, 690], "supplementari": [246, 390], "neuroanatom": [246, 390], "esm": [246, 390], "art": [246, 390, 874], "3a10": [246, 390], "2fnature18933": [246, 390], "mediaobject": [246, 390], "41586_2016_bfnature18933_moesm330_esm": [246, 390], "s\u00f3nia": [246, 861], "gon\u00e7alv": [246, 861], "casper": [246, 861], "munck": [246, 861], "jeroen": [246, 861, 886], "verbunt": [246, 861], "fetsj": [246, 861], "bijma": [246, 861], "rob": [246, 861, 886], "heethaar": [246, 861], "vivo": [246, 861], "resist": [246, 861], "eit": [246, 861], "812164": [246, 861], "teon": [246, 860, 886], "lauri": [246, 860], "parkkonen": [246, 860], "\u00e4": [246, 421, 860], "inen": [246, 860], "fnin": [246, 860], "00267": [246, 860], "greischar": [246, 570], "cori": [246, 570], "burghi": [246, 570], "carien": [246, 570], "reekum": [246, 570], "daren": [246, 570], "jackson": [246, 570], "diego": [246, 570], "pizzag": [246, 570], "corrina": [246, 570], "mueller": [246, 570], "davidson": [246, 570], "electroencephalograph": [246, 570], "hne": [246, 421], "597": [246, 421], "073": [246, 421], "gari": [246, 688], "heiman": [246, 688], "houghton": [246, 688], "mifflin": [246, 688], "boston": [246, 257, 688, 873], "17028": [246, 688], "joerg": [246, 299], "hipp": [246, 299], "hawellek": 246, "maurizio": 246, "corbetta": 246, "marku": [246, 299], "siegel": [246, 299], "engel": [246, 299], "spontan": [246, 861], "3101": 246, "percept": [246, 299, 841, 862, 886], "aapo": [246, 562], "hyv\u00e4rinen": [246, 562], "761722": [246, 562], "toga": 246, "mazziotta": 246, "academ": 246, "san": 246, "b978": 246, "012693019": 246, "50012": 246, "bf02512476": [246, 529], "tkk": 246, "a559": 246, "helsinki": 246, "16463": 246, "kevin": [246, 735, 738], "jone": [246, 735, 738], "bernic": [246, 735, 738], "porjesz": [246, 735, 738], "chorlian": [246, 735, 738], "madhavi": [246, 735, 738], "rangaswami": [246, 735, 738], "chella": [246, 735, 738], "kamarajan": [246, 735, 738], "ajayan": [246, 735, 738], "padmanabhapillai": [246, 735, 738], "stimu": [246, 735, 738], "henri": [246, 735, 738], "begleit": [246, 735, 738], "deficit": [246, 735, 738], "diagnos": [246, 735, 738, 886], "alcohol": [246, 735, 738], "2128": [246, 735, 738], "jorg": 246, "jovicich": 246, "silvest": 246, "czanner": 246, "elizabeth": 246, "halei": 246, "andr": [246, 886], "kennedi": 246, "franz": 246, "schmitt": 246, "gregori": 246, "brown": [246, 544, 666], "macfal": 246, "antti": [246, 886], "ahonen": 246, "lain": 246, "claudia": [246, 868], "tesch": [246, 868], "3315": 246, "3320": 246, "281163": 246, "zhou": [246, 413], "1990": [246, 413], "bf01129656": [246, 413], "philipp": 246, "lachaux": 246, "eugenio": 246, "rodriguez": [246, 886], "martineri": 246, "francisco": 246, "varela": 246, "synchroni": 246, "hbm4": 246, "attent": [246, 272, 277, 871], "ledoit": [246, 356], "wolf": [246, 356], "s0047": [246, 356], "259x": [246, 356], "00096": [246, 356], "te": [246, 562, 886], "girolami": [246, 562, 592], "subgaussian": [246, 562, 592, 886], "supergaussian": [246, 562, 592], "089976699300016719": [246, 562], "seok": [246, 861], "lew": [246, 861], "carsten": [246, 861], "wolter": [246, 861], "anwand": [246, 861], "macleod": [246, 861], "compart": [246, 258, 526, 841, 861, 871], "2862": [246, 861], "20714": [246, 861], "witzel": [246, 540, 663, 668], "8945": 246, "8950": 246, "10024": [246, 886], "lowri": [246, 688], "vassarstat": [246, 688], "bernard": [246, 666], "giusiano": [246, 666], "roehri": [246, 666], "b\u00e9nar": [246, 666], "kathryn": [246, 390], "mill": [246, 390], "6084": [246, 390], "m9": [246, 390], "figshar": [246, 390], "3498446": [246, 390], "molin": [246, 544, 666], "quantif": [246, 434, 544, 666, 852], "paul": [246, 868, 886], "748978": [246, 868], "ali": [246, 735, 738], "moukadem": [246, 735, 738], "zi": [246, 735, 738], "bouguila": [246, 735, 738], "djaffar": [246, 735, 738], "ould": [246, 735, 738], "abdeslam": [246, 735, 738], "alain": [246, 735, 738], "dieterlen": [246, 735, 738], "lisbon": [246, 735, 738], "6952743": [246, 735, 738], "mourtazaev": [246, 405], "1093": [246, 405], "suresh": [246, 567], "muthukumaraswami": [246, 567], "00138": [246, 567], "ndiay": 246, "fercoq": 246, "salmon": 246, "sugiyama": 246, "luxburg": 246, "guyon": 246, "garnett": 246, "curran": 246, "inc": [246, 845, 850], "nip": [246, 476], "cc": [246, 476, 867], "6405": 246, "holm": [246, 576, 695], "primer": [246, 695], "ou": 246, "bai": 246, "wheaton": 246, "sherri": 246, "vorbach": 246, "hallett": 246, "2292": 246, "zieh": 246, "aloi": 246, "schl\u00f6gl": 246, "kr\u00e4mer": 246, "brismar": 246, "robustli": 246, "physrevlett": 246, "234101": 246, "hilla": [246, 395], "paananen": [246, 395], "jyrki": [246, 395], "m\u00e4kel\u00e4": [246, 395], "5281": [246, 395], "zenodo": [246, 395, 860], "889234": [246, 395], "reilli": [246, 391, 862, 886], "mayada": [246, 391, 862], "elsabbagh": [246, 391, 862], "infant": [246, 391, 886], "117682": [246, 391, 862], "thom": [246, 861], "oostendorp": [246, 861], "delbek": [246, 861], "dick": [246, 861], "stegeman": [246, 861], "vitro": [246, 861], "1487": [246, 861], "880100": [246, 861], "oppenheim": [246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709], "schafer": [246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709], "buck": [246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709], "prentic": [246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709], "hall": [246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709], "saddl": [246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709], "river": [246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709], "754920": [246, 264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709], "roberto": [246, 529, 868], "pascual": [246, 529, 868], "marqui": [246, 529, 868], "martha": [246, 529, 868], "koukkou": [246, 529, 868], "kieko": [246, 529, 868], "kochi": [246, 529, 868], "bernd": [246, 529, 868], "saletu": [246, 529, 868], "hideaki": [246, 529, 868], "tanaka": [246, 529, 868], "koichi": [246, 529, 868], "hirata": [246, 529, 868], "lesli": [246, 529, 868], "prichep": [246, 529, 868], "rolando": [246, 529, 868], "biscai": [246, 529, 868], "lirio": [246, 529, 868], "toshihiko": [246, 529, 868], "kinoshita": [246, 529, 868], "royal": [246, 356, 529, 868], "1952": [246, 529, 868], "3768": [246, 529, 868], "1098": [246, 529, 868], "rsta": [246, 529, 868], "0081": [246, 529, 868], "donald": 246, "perciv": 246, "walden": 246, "35532": 246, "cbo9780511622762": 246, "dinh": [246, 886], "tuan": 246, "pham": 246, "hermitian": 246, "1136": 246, "1152": 246, "s089547980035689x": 246, "luca": [246, 598], "pollonini": [246, 598], "cristen": [246, 598], "homer": [246, 598], "abaya": [246, 598], "heather": [246, 598], "bortfeld": [246, 598], "beauchamp": [246, 273, 277, 281, 598, 812], "oghalai": [246, 598], "cochlear": [246, 598], "ernesto": 246, "pereda": 246, "ricardo": 246, "bru": 246, "\u00f1": 246, "maest": 246, "\u00fa": 246, "dog": 246, "056011": 246, "2552": 246, "aacfe4": 246, "sanchez": [246, 391], "meek": [246, 391], "wanz": [246, 391], "xie": [246, 391], "1259": [246, 391], "hat": [246, 537, 573, 666, 699, 700, 868, 886], "noam": [246, 578], "pele": [246, 578], "00694": [246, 578], "abraham": [246, 266, 267, 268, 269, 481, 482], "savitzki": [246, 266, 267, 268, 269, 481, 482], "marcel": [246, 266, 267, 268, 269, 481, 482], "golai": [246, 266, 267, 268, 269, 481, 482, 886], "chemistri": [246, 266, 267, 268, 269, 481, 482], "1627": [246, 266, 267, 268, 269, 481, 482], "1639": [246, 266, 267, 268, 269, 481, 482], "1964": [246, 266, 267, 268, 269, 481, 482], "ac60214a047": [246, 266, 267, 268, 269, 481, 482], "nathaniel": [246, 692], "marta": [246, 692], "12320": [246, 692], "corn": 246, "stam": 246, "daffertshof": 246, "diminish": 246, "1178": 246, "1193": 246, "20346": 246, "luigi": [246, 735, 738], "rodino": [246, 735, 738], "bert": [246, 735, 738], "schulz": [246, 735, 738, 886], "wong": [246, 735, 738, 886], "pseudo": [246, 299, 300, 316, 735, 738], "american": [246, 735, 738], "1090": [246, 735, 738], "fic": [246, 735, 738], "2218": [246, 478], "2228": [246, 478], "tmi": [246, 478], "2553445": [246, 478], "evelina": 246, "busa": 246, "glessner": 246, "hybrid": 246, "1060": 246, "1075": 246, "catherin": [246, 722, 732, 733, 736], "tallon": [246, 722, 732, 733, 736], "baudri": [246, 722, 732, 733, 736], "claud": [246, 722, 732, 733, 736], "delpuech": [246, 722, 732, 733, 736], "jneurosci": [246, 722, 732, 733, 735, 736, 738], "00722": [246, 722, 732, 733, 736], "minna": [246, 868], "huotilainen": [246, 868], "oili": [246, 868], "salonen": [246, 868], "00064": [246, 868], "niall": [246, 576], "118484": [246, 576], "nd": [246, 576], "timm": [246, 576], "119338": [246, 576], "bishop": [246, 356], "1467": [246, 356], "9868": [246, 356], "00196": [246, 356], "vinck": 246, "wingerden": 246, "franscesco": 246, "battaglia": 246, "cyriel": 246, "pennartz": 246, "1548": 246, "womelsdorf": 246, "pascal": 246, "fri": 246, "rhythmic": 246, "wehner": [246, 434], "modi": [246, 434], "children": [246, 257, 434, 871, 873], "wheat": [246, 735, 738], "pier": [246, 735, 738], "cornelissen": [246, 735, 738], "frost": [246, 735, 738], "hansen": [246, 735, 738], "phonologi": [246, 735, 738], "5229": [246, 735, 738], "5233": [246, 735, 738], "4448": [246, 735, 738], "whitham": [246, 562], "sean": [246, 562], "fitzgibbon": [246, 562], "clark": [246, 562, 886], "loveless": [246, 562], "marita": [246, 562], "broberg": [246, 562], "angu": [246, 562], "wallac": [246, 562], "lilli": [246, 562], "hardi": [246, 562], "rik": [246, 562], "fronsko": [246, 562], "alyson": [246, 562], "pulbrook": [246, 562], "paralysi": [246, 562], "1877": [246, 562], "1888": [246, 562], "rei": [246, 476], "ram\u00edrez": [246, 476], "jason": [246, 476], "palmer": [246, 476], "bhaskar": [246, 476], "rao": [246, 476], "neuroelectromagnet": [246, 476], "sch\u00f6lkopf": [246, 476], "platt": [246, 476], "hoffman": [246, 476], "1505": [246, 476], "3089": [246, 476], "jun": [246, 666], "juliu": [246, 666, 886], "dewald": [246, 666], "april": [246, 666], "zhi": [246, 868, 886], "multilay": [246, 868], "moritz": [246, 413, 886], "wentrup": [246, 413], "buss": [246, 413], "921154": [246, 413], "jair": [246, 562, 886], "montoya": [246, 562, 886], "mart\u00ednez": [246, 562], "petr": [246, 562], "tichavsk\u00fd": [246, 562], "massoud": [246, 562], "babai": [246, 562], "zadeh": [246, 562], "nad\u00e8g": [246, 562], "thirion": [246, 562], "moreau": [246, 562], "latent": [246, 562, 801], "10169": [246, 562], "lectur": [246, 562, 870], "cham": [246, 562], "53547": [246, 562], "0_27": [246, 562], "pharmacologi": [246, 529, 868], "pubm": [246, 529, 868], "ncbi": [246, 529, 868], "nlm": [246, 529, 868], "nih": [246, 529, 868], "gov": [246, 529, 868], "12575463": [246, 529, 868], "encyclopedia": 246, "php": 246, "international_system_of_unit": 246, "oldid": 246, "982683558": 246, "googl": [247, 257, 819, 874, 886], "scholar": 247, "dec": [247, 752, 844], "1370": 247, "1640": 247, "health": 257, "r01": 257, "eb009048": 257, "eb006385": 257, "hd040712": 257, "ns044319": 257, "ns037462": 257, "ns104585": 257, "p41": 257, "eb015896": 257, "rr014075": 257, "foundat": [257, 867], "0958669": 257, "1042134": 257, "council": 257, "ystg": 257, "263584": 257, "676943": 257, "depart": 257, "fg02": 257, "99er62764": 257, "agenc": 257, "national": 257, "la": [257, 862, 873, 886], "recherch": [257, 873], "neuc": 257, "0002": 257, "idex": 257, "pari": [257, 886], "saclai": 257, "0003": 257, "summer": [257, 874, 886], "year": [257, 271, 405, 860, 867, 874], "amazon": 257, "grant": [257, 268, 269, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 540, 794, 845, 867, 886], "zuckerberg": 257, "eoss2": [257, 874], "eoss4": 257, "employe": [257, 867], "duti": [257, 867], "aalto": [257, 862, 873], "yliopiston": [257, 873], "perustieteiden": [257, 873], "korkeakoulu": [257, 873], "athinoula": [257, 862, 873], "martino": [257, 862, 873], "hospit": [257, 862, 873], "philadelphia": [257, 873], "donder": [257, 873], "behaviour": [257, 260, 510, 512, 873], "radboud": [257, 873], "school": [257, 873], "informatiqu": [257, 873], "automatiqu": [257, 873], "franzen": [257, 873], "universit\u00e4t": [257, 873], "graz": [257, 873], "macquari": [257, 862, 873], "massachusett": [257, 873], "planck": [257, 873], "f\u00fcr": [257, 873], "bildungsforschung": [257, 873], "uniwersytet": [257, 873], "humanistycznospo\u0142eczni": [257, 873], "washington": [257, 873], "aarhu": [257, 873], "universitet": [257, 873], "commissariat": [257, 873], "\u00e0": [257, 873], "\u00e9nergi": [257, 873], "atomiqu": [257, 873], "aux": [257, 873], "forschungszentrum": [257, 873], "j\u00fclich": [257, 873], "du": [257, 873], "cerveau": [257, 873], "moell": [257, 873], "\u00e9pini\u00e8r": [257, 873], "sant\u00e9": [257, 873], "m\u00e9dical": [257, 873], "technisch": [257, 873], "t\u00e9l\u00e9com": [257, 873], "exit": [258, 272, 472, 551, 845], "outfil": 258, "anon": 258, "keep_hi": [258, 266, 267, 268, 269, 481, 482, 483, 886], "n_dai": 258, "daysback": [258, 266, 267, 268, 269, 481, 482, 483], "anonymize_info": [258, 266, 267, 268, 269, 481, 482, 876, 886], "resav": 258, "projoff": [258, 886], "navigaton": 258, "show_opt": [258, 481, 482, 807], "dialog": [258, 266, 267, 268, 269, 481, 482, 807, 810, 851, 886], "allowmaxshield": 258, "filtord": [258, 481, 482, 807, 886], "iir": [258, 266, 267, 268, 269, 415, 424, 448, 449, 451, 452, 481, 482, 574, 575, 598, 660, 670, 719, 795, 807, 875, 886], "clamp": [258, 481, 482, 754, 807], "filterchpi": [258, 886], "head_shap": 258, "out_fnam": 258, "rotation_x": [258, 492], "compensatori": 258, "deg": [258, 582], "ecg_ch": [258, 492], "eog_ch": [258, 492, 886], "e31": [258, 492], "e63": [258, 492], "my_raw": 258, "quiet": [258, 266, 267, 709], "mne_process_raw": [258, 871], "in_raw": 258, "clean_raw": 258, "file_a": 258, "file_b": 258, "test_raw_sss": 258, "filters": 258, "tap": [258, 574, 575, 584, 585, 862], "rej": 258, "rej_grad": 258, "rej_mag": 258, "rej_eeg": 258, "rej_eog": 258, "bad_fnam": 258, "raw_event_fnam": 258, "tstart": [258, 273, 274, 277, 280, 281, 282, 574, 575, 584, 585, 587, 886], "qrsthr": 258, "qrs_threshold": [258, 574, 584, 587], "eog_l_freq": [258, 575], "eog_h_freq": [258, 575], "head_opac": [258, 472], "trackbal": [258, 268, 269, 472, 754, 770, 789], "terrain": [258, 268, 269, 472, 754, 770, 789, 886], "flash30": [258, 305, 868, 886], "noflash30": [258, 868], "flash5": [258, 305, 309, 868, 886], "multiecho": [258, 305, 309], "echo": [258, 305, 844, 850, 851, 868], "noconvert": 258, "deprec": [258, 340, 473, 806, 876, 886], "unwarp": [258, 305, 868], "grad_unwarp": [258, 305, 868], "symlink": [258, 309, 311, 886], "flash_path": 258, "parameter_map": [258, 309, 868], "mef05": 258, "mef30": 258, "mef05_": [258, 305, 886], "mef30_": [258, 305, 886], "spin": [258, 309], "termin": [258, 843, 844, 845, 848, 849, 851, 856, 865, 876, 886], "kt2fiff": 258, "mkheadsurf": [258, 310], "topolog": [258, 310, 367, 412, 432, 463, 614, 643, 645, 834, 861, 886], "_sss": 258, "origin_out": 258, "autobad": 258, "maxst": 258, "buflen": 258, "st_buflen": 258, "st_corr": 258, "mv_tran": 258, "in_fnam": 258, "movecomp": 258, "mv_hp": 258, "hpistep": 258, "mv_hpistep": 258, "hpisubt": 258, "mv_hpisubt": 258, "nohpicon": 258, "linefreq": 258, "nooverwrit": 258, "mx_arg": 258, "sof": 258, "bmin": 258, "bash": [258, 844, 845, 850, 851, 856], "TO": 258, "1280": [258, 412, 519], "brainc": 258, "skullc": 258, "scalpc": 258, "homog": [258, 519, 861], "7mm": 258, "joblib": [258, 266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 284, 356, 357, 359, 361, 416, 423, 426, 429, 430, 456, 469, 471, 481, 482, 521, 524, 525, 535, 536, 545, 546, 567, 574, 575, 649, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 786, 789, 808, 874, 886], "cp": [258, 851, 868, 886], "unicod": [258, 705, 886], "mri_watersh": [258, 311, 865, 868], "gcaatla": [258, 311, 865], "brain_atla": [258, 311], "preflood": [258, 311, 865], "brainmask": [258, 311, 865, 886], "fname2": 258, "parser": [259, 442, 886], "reaverag": 259, "category_nam": 259, "acq_dict": 259, "subav": 259, "subaverag": [259, 871], "__len__": [259, 260, 262, 263, 264, 266, 267, 271, 272, 275, 276, 290, 304, 481, 482, 528, 707, 708, 709, 741], "n_cat": 259, "delayed_lookup": 259, "acqp": 259, "mne_stim_channel_2": [259, 454, 455], "uint16": [259, 454], "sti014": [259, 454, 886], "sti016": [259, 454], "32768": [259, 412, 454], "mne_fix_stim14": [259, 454], "slight": [259, 886], "asynchroni": 259, "conds_data": 259, "n_epochs_out": 259, "n_annot": 260, "iso8601": 260, "delimit": 260, "bad_flux": 260, "bad_nois": 260, "meg0111": [260, 261, 266, 267, 268, 269, 271, 312, 329, 331, 361, 371, 415, 429, 434, 481, 482, 561, 562, 564, 578, 579, 580, 586, 590, 600, 602, 609, 641, 674, 692, 701, 706, 708, 709, 710, 714, 715, 716, 717, 719, 737, 778, 784, 785, 788, 790, 791, 798, 805, 808], "meg2563": 260, "meg1443": 260, "n_blink": 260, "yy": [260, 493], "______________": 260, "_________": 260, "anot": 260, "___________________": 260, "o_________": 260, "________________________": 260, "o______________": 260, "crash": [260, 886], "o________________________": 260, "bad_acq_skip": [260, 266, 267, 268, 269, 481, 482, 502, 583, 594, 886], "__add__": [260, 262, 263, 272, 273, 274, 277, 279, 280, 281, 282, 314, 706], "concatenc": 260, "with_ch_nam": 260, "__iter__": [260, 263, 266, 267, 271, 275, 290, 304, 528, 656, 708, 709, 741], "array_lik": [260, 261, 263, 264, 266, 267, 268, 269, 271, 275, 276, 285, 312, 314, 329, 331, 361, 370, 371, 413, 415, 420, 423, 426, 428, 429, 430, 434, 440, 479, 481, 482, 492, 506, 521, 526, 561, 562, 563, 564, 567, 571, 572, 573, 576, 577, 578, 579, 580, 583, 586, 590, 594, 600, 602, 608, 609, 644, 645, 660, 674, 684, 685, 688, 690, 691, 692, 700, 701, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 722, 732, 736, 737, 754, 759, 770, 771, 778, 784, 785, 786, 788, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 802, 804, 805, 806, 808, 809, 810, 814, 816], "use_orig_tim": [260, 886], "676071": 260, "shortstimulu": 260, "longstimulu": 260, "tabular": [260, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 708, 709, 710], "preload_at_end": 261, "event_rep": [261, 266, 886], "raw_sfreq": [261, 267], "abstract": [261, 874], "meg2623": [261, 266, 267, 268, 269, 271, 312, 329, 331, 361, 371, 415, 429, 434, 481, 482, 561, 562, 564, 578, 579, 580, 586, 590, 600, 602, 609, 674, 692, 701, 706, 708, 709, 710, 714, 715, 716, 717, 719, 737, 778, 784, 785, 788, 790, 791, 798, 805, 808], "ptp": [261, 266, 267, 562, 564, 579], "40e": [261, 266, 267, 361, 562, 579, 580, 692], "zeroth": [261, 266, 886], "unproject": [261, 266, 522, 617], "postpon": [261, 266, 522, 617], "silent": [261, 266, 405, 595, 863, 886], "irrespect": [261, 266, 367, 432, 463, 614, 643, 645, 834, 868], "coincid": [261, 266], "my_epoch": 261, "compensation_grad": [261, 266, 267, 268, 269, 271, 480, 481, 482, 562, 706, 708, 709, 710], "__sub__": [262, 272, 273, 274, 277, 280, 281, 282, 706], "nfree": [263, 264, 871, 886], "eig": [263, 871], "eigvec": [263, 871], "eigenvector": [263, 868, 871], "__contains__": [263, 266, 267, 268, 269, 271, 275, 290, 304, 481, 482, 528, 562, 706, 708, 709, 710, 741], "as_diag": 263, "diagnois": 263, "fromkei": [263, 271, 275, 290, 304, 528, 741], "fig_svd": [263, 779], "1e13": [263, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 356, 360, 361, 413, 420, 422, 481, 482, 785, 788, 790, 792, 793, 815], "1e15": [263, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 356, 360, 361, 413, 420, 422, 481, 482, 785, 788, 790, 792, 793, 815], "pluss": [263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816], "markeredgecolor": [263, 266, 267, 268, 269, 413, 420, 481, 482, 561, 706, 708, 710, 771, 786, 793, 809, 814, 816], "mask_po": [263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816], "cloughtocher2dinterpol": [263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816], "linearndinterpol": [263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816], "encompass": [263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816], "polygon": [263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 820, 886], "hull": [263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 577, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 886], "doc": [263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 652, 706, 708, 710, 722, 732, 771, 786, 793, 797, 806, 809, 814, 816, 845, 865, 874, 886], "rightmost": [263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 706, 708, 710, 786, 793, 797, 806, 809, 814], "mini": [263, 266, 267, 268, 269, 275, 413, 420, 481, 482, 561, 562, 706, 708, 710, 786, 793, 797, 806, 809, 814], "unrepresent": [263, 271, 275, 290, 304, 528, 741], "popitem": [263, 271, 275, 290, 304, 528, 741], "lifo": [263, 271, 275, 290, 304, 528, 741], "setdefault": [263, 271, 275, 290, 304, 528, 741], "khi2": 264, "mne_dipole_fit": [264, 886], "longitudin": 264, "qlong": 264, "qtran": 264, "\u03c7": 264, "dipolefix": [264, 456, 616, 876], "plot_amplitud": 264, "show_al": [264, 782], "highlight_color": [264, 782], "head_sourc": [264, 521, 782, 886], "glyph": [264, 274, 280, 282, 754, 770, 782, 813, 817, 819, 886], "cube": [264, 782, 886], "mri_rot": [264, 782], "figure3d": [264, 268, 269, 273, 274, 276, 277, 279, 280, 281, 282, 763, 770, 782, 789, 812, 813, 817, 824, 845, 863, 876], "600x600": [264, 770, 782], "get_head_surf": [264, 521, 782, 876, 886], "bdip": [264, 616, 886], "use_round": [264, 265, 266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 442, 481, 482, 706, 709], "pos_mni": 264, "n_po": [264, 344, 346, 474, 475, 796], "subdirectori": [264, 465, 754], "aspect_kind": 265, "combine_event_id": [266, 876], "id_numb": 266, "event_id_1": 266, "event_id_2": 266, "new_id_numb": 266, "lost": [266, 267, 268, 269, 443, 444, 445, 446, 481, 482, 843], "no_data": [266, 709], "equalized_count": [266, 709], "membership": [266, 267, 268, 269, 481, 482, 562, 706, 708, 709, 710, 886], "audio_left": [266, 267, 709], "name_1": [266, 267, 709], "name_2": [266, 267, 709], "likewis": [266, 267, 709, 867, 868], "eval": [266, 267, 709], "col_a": [266, 267, 709], "col_b": [266, 267, 709], "add_annotations_to_metadata": [266, 267], "annot_onset": [266, 267], "annot_dur": [266, 267], "annot_descript": [266, 267], "add_list": [266, 267, 268, 269, 481, 482, 706, 708, 709, 710], "force_update_info": [266, 267, 268, 269, 481, 482, 706, 708, 709, 710], "overwritten": [266, 267, 268, 269, 389, 481, 482, 483, 577, 595, 706, 708, 709, 710, 886], "memmap": [266, 267, 268, 269, 481, 482, 649, 706, 708, 709, 710, 886], "resiz": [266, 267, 268, 269, 481, 482, 706, 708, 709, 710, 793, 886], "januari": [266, 267, 268, 269, 481, 482, 483, 871], "1\u02e2\u1d57": [266, 267, 268, 269, 481, 482, 483], "his_id": [266, 267, 268, 269, 271, 481, 482, 483], "birthdai": [266, 267, 268, 269, 271, 481, 482, 483, 886], "revert": [266, 267, 626, 833, 886], "channel_wis": [266, 267, 268, 269, 481, 482, 886], "parallel_backend": [266, 267, 268, 269, 272, 273, 274, 276, 277, 280, 281, 282, 284, 356, 357, 359, 361, 416, 423, 426, 429, 430, 456, 469, 471, 481, 482, 521, 524, 525, 535, 536, 545, 546, 567, 574, 575, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 786, 789, 808, 886], "workload": [266, 267, 268, 269, 481, 482], "x_a": [266, 267, 268, 269, 481, 482], "2u": [266, 267, 268, 269, 481, 482], "enevlop": [266, 267, 268, 269, 481, 482], "hint": [266, 267, 268, 269, 481, 482, 785], "projs_a": [266, 267, 268, 269, 481, 482], "proj_a": [266, 267, 268, 269, 481, 482], "projs_b": [266, 267, 268, 269, 481, 482], "proj_b": [266, 267, 268, 269, 481, 482], "_v": [266, 267, 268, 269, 886], "emphas": [266, 267, 268, 269], "legendr": [266, 267, 268, 269, 481, 482, 521, 571, 868], "by_event_typ": [266, 267, 886], "trim_mean": [266, 267], "low_bia": [266, 267, 268, 269, 418, 481, 482, 535, 536, 708, 710, 713, 716, 718, 724, 786], "undrop": [266, 267], "timeout": [266, 267], "forev": [266, 267, 886], "lenient": [266, 267], "drop_log_stat": [266, 267], "perc": [266, 267], "mintim": [266, 267, 436], "seek": [266, 267, 421, 436], "nonspati": [266, 267], "fmt": [266, 267, 268, 269, 443, 444, 446, 481, 482, 868, 886], "eeglabio": [266, 267, 443, 446, 481, 482, 886], "cart_to_eeglab": [266, 267, 443, 446, 481, 482], "5500m": [266, 267, 268, 269, 415, 424, 449, 451, 452, 481, 482], "cuda": [266, 267, 268, 269, 415, 419, 424, 425, 451, 452, 453, 481, 482, 849, 855, 865, 876, 886], "reflect_limit": [266, 267, 268, 269, 451, 452, 453, 481, 482], "savgol_filt": [266, 267, 268, 269, 481, 482], "get_annotations_per_epoch": [266, 267], "epoch_annot": [266, 267], "only_data_ch": [266, 267, 268, 269, 271, 481, 482, 562, 706, 708, 709, 710], "alia": [266, 267, 268, 269, 279, 481, 482, 601, 752, 770, 807, 845, 886], "unitless": [266, 267, 268, 269, 481, 482, 868], "return_event_id": [266, 267, 621, 708, 709, 886], "respiratori": [266, 267, 268, 269, 481, 482, 559, 706, 708, 709, 710, 886], "excit": [266, 267, 268, 269, 271, 481, 482, 559, 706, 708, 709, 710, 868], "galvan": [266, 267, 268, 269, 481, 482, 559, 706, 708, 709, 710, 868, 886], "epoch_color": [266, 267, 784], "use_opengl": [266, 267, 481, 482, 562, 784, 801, 807, 886], "theme": [266, 267, 481, 482, 562, 754, 784, 801, 807, 886], "overview_mod": [266, 267, 481, 482, 562, 784, 801, 807, 886], "5th": [266, 267, 268, 269, 276, 481, 482, 784, 807], "1e2": [266, 267, 276, 481, 482, 784, 807], "20\u00b5v": [266, 267, 276, 481, 482, 784, 807], "ital": [266, 267, 268, 269, 481, 482, 784, 788, 792, 807, 871], "zen": [266, 267, 481, 482, 562, 784, 801, 807, 886], "selector": [266, 267, 268, 269, 481, 482, 784, 807, 810, 871, 886], "processor": [266, 267, 388, 481, 482, 562, 784, 801, 807], "pyopengl": [266, 267, 481, 482, 562, 784, 801, 807], "stylesheet": [266, 267, 481, 482, 562, 754, 784, 801, 807], "qdarkstyl": [266, 267, 481, 482, 562, 754, 784, 801, 807], "darkdetect": [266, 267, 481, 482, 562, 754, 784, 801, 807], "mne_qt_brows": [266, 267, 481, 482, 562, 784, 801, 807, 886], "mpl": [266, 267, 273, 274, 277, 280, 281, 282, 481, 482, 754, 784, 807, 812, 817], "tkagg": [266, 267, 481, 482, 784, 807], "f11": [266, 267, 481, 482, 784, 807], "set_browser_backend": [266, 267, 481, 482, 562, 784, 801, 807, 826, 876, 886], "magic": [266, 267, 481, 482, 562, 784, 801, 807, 843, 865], "qt5": [266, 267, 481, 482, 562, 784, 801, 807, 849], "n_max_plot": [266, 267, 783], "good_epoch": [266, 267, 785], "area_alpha": [266, 267, 268, 269, 481, 482, 808], "line_alpha": [266, 267, 268, 269, 481, 482, 808], "asd": [266, 267, 268, 269, 481, 482, 808], "idiom": [266, 267, 268, 269, 481, 482, 808, 845], "decibel": [266, 267, 268, 269, 277, 481, 482, 535, 708, 710, 786], "log\u2081\u2080": [266, 267, 268, 269, 481, 482, 691, 708, 710, 786], "ch_group": [266, 267, 268, 269, 481, 482, 810, 886], "to_spher": [266, 267, 268, 269, 481, 482, 810, 886], "n_ch_group": [266, 267, 268, 269, 481, 482], "n_pick": [266, 267, 268, 269, 481, 482, 609], "plot_raw": [266, 267, 268, 269, 481, 482, 810, 823, 876, 886], "downward": [266, 267, 268, 269, 481, 482, 810], "plot_layout": [266, 267, 268, 269, 481, 482, 810, 876, 886], "layout_scal": [266, 267, 268, 269, 706, 767, 792, 815], "fig_background": [266, 267, 268, 269, 706, 792, 815], "canva": [266, 267, 268, 269, 706, 767, 792, 815, 868], "allow_dupl": [266, 267, 268, 269, 314, 342, 481, 482, 642, 886], "eeg061": [266, 267, 268, 269, 314, 342, 481, 482, 642], "eeg161": [266, 267, 268, 269, 314, 342, 481, 482, 642], "anti": [266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 820, 886], "reset_drop_log_select": [266, 267, 886], "meaningless": [266, 267], "split_siz": [266, 267, 481, 482], "2gb": [266, 267, 481, 482, 886], "split_nam": [266, 267, 481, 482, 886], "100mb": [266, 267, 481, 482], "partit": [266, 267, 361, 481, 482, 694, 868, 886], "schema": [266, 267, 481, 482], "fname_split": [266, 267, 481, 482], "bbac101d50176611136b": [266, 267, 268, 269, 481, 482], "setter": [266, 267, 481, 482], "eyetrack_po": [266, 267, 268, 269, 481, 482], "eyetrack_pupil": [266, 267, 268, 269, 481, 482], "set_meas_d": [266, 267, 268, 269, 481, 482, 886], "match_cas": [266, 267, 268, 269, 271, 481, 482, 886], "match_alia": [266, 267, 268, 269, 271, 481, 482, 886], "channel_loc_alias": [266, 267, 268, 269, 271, 481, 482], "std_err": [266, 267], "mechan": [266, 267, 867], "1591": [266, 267], "juli": [266, 267], "rangeindex": [266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 708, 709, 710], "timedeltaindex": [266, 267, 268, 269, 273, 274, 277, 280, 281, 282, 481, 482, 706, 709], "elicit": [268, 481, 502, 624, 862], "__neg__": [268, 269, 273, 274, 277, 280, 281, 282], "negat": [268, 269, 273, 274, 277, 280, 281, 282], "evoked_neg": [268, 269], "prepend": [268, 269], "resum": [268, 269, 867], "mff": [268, 269, 335, 444, 445, 498, 625, 868, 886], "export_evokeds_mff": [268, 269, 444, 876, 886], "merge_grad": [268, 269, 792, 886], "unsort": [268, 269, 788], "weakest": [268, 269, 788, 886], "obscur": [268, 269, 788], "multiax": [268, 269, 788], "t_start": [268, 269, 788], "t_end": [268, 269, 788], "surf_map": [268, 269, 521, 789], "n_contour": [268, 269, 789], "turntabl": [268, 269, 472, 754, 770, 789], "unintent": [268, 269, 472, 770, 789], "mask_cmap": [268, 269, 706, 790], "mask_alpha": [268, 269, 706, 790], "do_mask": [268, 269, 790], "illeg": [268, 269, 791], "01d": [268, 269, 413, 420, 793], "amplif": [268, 269, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 476, 478, 479, 540, 794], "improperli": [268, 269, 299, 300, 356, 360, 361, 371, 372, 373, 413, 420, 456, 457, 473, 476, 478, 479, 540, 794, 886], "logger": [268, 269, 749, 751, 794], "_ave": [268, 269], "source_ori": [270, 871], "fiffv_mne_fixed_ori": [270, 871], "fiffv_mne_free_ori": [270, 871], "n_ori": 270, "source_rr": [270, 871], "n_sourc": [270, 299, 300, 413, 420, 458, 476, 478, 479], "nest": [271, 413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 563, 751, 845], "fiffv_coil_meg": 271, "fiffv_eeg_ch": 271, "3x3": [271, 505, 529], "fiff_unit_t_m": 271, "fiff_unitm_non": 271, "ctfkind": [271, 871], "colcal": 271, "rowcal": 271, "save_calibr": [271, 871], "serial": 271, "fiffv_point_eeg": [271, 871], "fiffc_vers": 271, "machid": [271, 871], "mac": 271, "usec": [271, 871], "he_level_raw": 271, "helium": 271, "helium_level": 271, "orig_file_guid": 271, "mea": 271, "creator": 271, "ncoil": 271, "hpi_coil": 271, "corr_coeff": 271, "coil_freq": 271, "dig_point": 271, "good_limit": 271, "dist_limit": [271, 279, 284, 346, 871, 886], "coord_tran": 271, "event_channel": 271, "mri_id": 271, "block_id": 271, "max_info": 271, "sss_info": 271, "max_st": 271, "sss_ctc": 271, "sss_cal": 271, "smartshield": [271, 886], "last_nam": 271, "first_nam": 271, "middle_nam": 271, "month": 271, "sex": [271, 886], "male": [271, 405], "femal": [271, 405], "handed": 271, "ambidextr": 271, "kilogram": 271, "command_lin": [271, 279], "tilt": [271, 492, 754, 868, 886], "subsystem": [271, 845], "meas_fil": 271, "mri_fil": 271, "roundtrip": [271, 886], "shh": 271, "working_dir": [271, 279], "xplotter": 271, "__setitem__": 271, "conflict": [272, 843, 845, 849, 886], "accuru": [272, 277], "m\u00b2": [272, 841], "versionad": [272, 709, 770], "outside_vertic": 272, "lie": [272, 868], "get_tri": 272, "label_tri": 272, "get_vertices_us": 272, "label_vert": 272, "n_label_vertic": 272, "icosahedr": [272, 362, 412, 468, 469], "morph_label": [272, 629, 876, 886], "div1": [272, 683], "div2": [272, 683], "split_label": [272, 876, 886], "mris_divide_parcel": [272, 683], "n_part": [272, 683], "fring": 272, "sens_data": [273, 274, 277, 280, 281, 282], "volvectorsourceestim": [273, 274, 277, 278, 281, 876, 886], "__div__": [273, 274, 277, 280, 281, 282], "__mul__": [273, 274, 277, 280, 281, 282, 706], "tstop": [273, 274, 277, 280, 281, 282], "bihemilabel": [273, 274, 277, 280, 281, 282, 447, 516, 517, 876], "pane": [273, 277, 281, 754, 812, 851], "n_color": [273, 274, 277, 280, 281, 282, 773, 812, 817, 818], "hot": [273, 274, 277, 280, 281, 282, 812, 817], "diverg": [273, 274, 277, 280, 281, 282, 754, 773, 812, 817, 818, 845], "binar": [273, 274, 277, 280, 281, 282, 662, 664, 665, 754, 812, 817], "colorschem": [273, 274, 277, 280, 281, 282, 812, 817], "high_contrast": [273, 274, 277, 280, 281, 282, 754, 812, 817], "resort": [273, 277, 281, 812, 865], "devot": [273, 274, 277, 280, 281, 282, 812, 817], "occupi": [273, 274, 277, 280, 281, 282, 471, 655, 812, 817], "blend": [273, 274, 277, 280, 281, 282, 754, 773, 812, 817], "mip": [273, 274, 277, 280, 281, 282, 754, 812, 817], "surface_alpha": [273, 274, 277, 280, 281, 282, 754, 812, 817], "enclos": [273, 274, 277, 280, 281, 282, 754, 812, 817, 868, 886], "silhouette_alpha": [273, 274, 277, 280, 281, 282, 754, 812, 817], "silhouette_linewidth": [273, 274, 277, 280, 281, 282, 754, 812, 817], "time_label_s": [273, 274, 277, 280, 281, 282, 754, 812, 817], "freesurferoccipitalflattenedpatch": [273, 277, 281, 812], "openwetwar": [273, 277, 281, 812], "transform_data": [273, 274, 277, 280, 281, 282], "tmin_idx": [273, 274, 277, 280, 281, 282], "tmax_idx": [273, 274, 277, 280, 281, 282], "indicic": [273, 274, 277, 280, 281, 282], "data_t": [273, 274, 277, 280, 281, 282], "direction": [274, 280, 282], "vector_alpha": [274, 280, 282, 754, 817], "sane": [274, 280, 282, 817], "fiffv_proj_item_field": [275, 871], "compute_proj_": 275, "webp": [276, 886], "fidel": 276, "lang": [276, 886], "n_file": 276, "clearer": [276, 886], "add_custom_css": [276, 886], "add_custom_j": [276, 886], "javascript": [276, 886], "topomap_kwarg": [276, 805], "drop_log_ignor": [276, 886], "declutt": 276, "inverseoper": [276, 529, 530, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 811, 876, 886], "inverse_op": 276, "altogeth": 276, "stc_plot_kwarg": 276, "add_sys_info": 276, "sysinfo": 276, "sort_cont": [276, 886], "on_error": 276, "n_time_points_stc": 276, "remove_al": 276, "removed_index": 276, "open_brows": 276, "nanoamper": 277, "log_10": 277, "sum_k": [277, 868], "s_k": [277, 868], "subject_orig": [277, 280], "vertices_to": [278, 362], "pre_affin": 278, "src_data": 278, "vol_morph_mat": 278, "affinemap": 278, "diffeomorphicmap": [278, 591, 742, 743, 744, 886], "stc_from": 278, "mri_spac": [278, 886], "nifti2": [278, 281, 282], "stc_to": 278, "nifti2imag": 278, "src_from": [278, 549], "monolith": 279, "fiffv_mne_surf_left_hemi": [279, 871], "fiffv_mne_surf_right_hemi": [279, 871], "fiffv_mne_surf_unknown": 279, "fiffv_coord_mri": [279, 871], "inus": [279, 871], "subject_his_id": [279, 362], "ntri": [279, 871], "nuse_tri": [279, 871], "pinfo": 279, "155295": 279, "155323": 279, "155330": 279, "patch_ind": 279, "n_src_remain": 279, "essenti": [279, 389, 861, 868, 871], "115407": 279, "nearest_dist": [279, 871], "mri_width": 279, "mri_height": 279, "mri_depth": 279, "neighbor_vert": 279, "mri_ras_t": 279, "fiffv_mne_coord_ra": 279, "src_mri_t": [279, 886], "vox_mri_t": 279, "fiffv_mne_coord_mri_voxel": 279, "mri_volume_nam": 279, "seg_nam": 279, "include_surfac": 279, "include_discret": 279, "dest": [279, 281, 282, 740], "use_lut": [279, 886], "mne_analyz": [279, 671, 769, 851, 862, 874, 886], "subvolum": [281, 282, 886], "upsampl": [281, 282, 447, 453], "trilinear": [281, 282, 447], "ensnur": [281, 282, 447], "bg_img": [281, 282, 818, 886], "initial_po": [281, 282, 818], "nutmeg": [281, 282, 818], "spatialimag": [281, 282, 305, 473, 589, 591, 742, 743, 744, 818], "src_sampl": [281, 282, 818], "stc_vol_sampl": [281, 282, 818], "vl": [281, 634], "save_as_volum": [281, 282, 886], "pick_channels_forward": [286, 287, 876], "evoked_templ": 286, "apply_forward_raw": [286, 876, 886], "zlogratio": [289, 545, 546, 706, 709, 814], "data_sc": 289, "apply_dics_epoch": [291, 292, 294, 876, 886], "meaningfulli": 292, "quadrant": 292, "apply_d": [292, 293, 294, 876, 886], "borgiotti": [299, 300], "kaplan": [299, 300], "\u03b8i": [299, 300], "arguabl": [299, 300], "max_pow": [299, 300], "expon": [299, 300, 457, 476, 478, 479, 540], "compute_depth_prior": [299, 300, 458, 476, 478, 479, 540, 876, 886], "n_weight": 299, "src_type": [299, 300], "is_free_ori": [299, 300], "supplement": 299, "is_ssp": 300, "vec_stc": 300, "rework": [300, 886], "resmat": [301, 538, 539, 541, 544], "n_dipoles_lcmv": 301, "n_dipoles_fwd": 301, "1996": 302, "nov": 302, "acssc": 302, "599135": 302, "mef": [305, 868], "mef05_001": 305, "mef30_001": 305, "flash5_img": [305, 309], "dig_kind": [307, 308, 432, 886], "origin_head": 307, "origin_devic": 307, "exclude_front": [308, 432], "n_pt": 308, "convert_flash_mri": [309, 868, 876, 886], "no_decim": 310, "watersh": [311, 862, 886], "autorecon1": [311, 865, 886], "idx_by_typ": 312, "read_dig_captrak": [314, 327, 330, 334, 335, 336, 337, 338, 339, 868, 876, 886], "read_dig_dat": [314, 330, 333, 335, 336, 337, 338, 339, 493, 868, 876, 886], "read_dig_egi": [314, 327, 330, 333, 334, 336, 337, 338, 339, 868, 876, 886], "read_dig_hpt": [314, 330, 333, 334, 335, 336, 338, 868, 876, 886], "read_dig_localit": [314, 327, 333, 334, 335, 336, 337, 339, 876, 886], "acpc": 314, "ch_po": [314, 327], "remove_fiduci": [314, 886], "circumst": [314, 442, 886], "x_max": 315, "y_min": 315, "y_max": 315, "my_layout": 315, "keep_stim": 316, "combined_inst": 316, "native_head_t": 318, "equalized_inst": [319, 438], "ch_adjac": [320, 331], "use_c": 322, "3022": [322, 481, 868], "sq20483n": [322, 481], "3023": [322, 481, 868], "sq20483": [322, 481], "sq20950n": [322, 481], "upgrad": [322, 481, 886], "ch_indic": 323, "bg_imag": 323, "reserv": [323, 845, 867, 886], "make_grid_layout": [323, 328, 876], "neighbor_nam": 324, "builtin": [324, 325, 754, 845, 886], "heurist": 326, "capit": [326, 886], "periauricular": [327, 868], "n_point": [327, 341, 367, 432, 484, 506, 620], "n_hpi": 327, "compute_dev_head_t": [327, 876, 886], "fs_tal": [327, 514, 741], "ctf_head": [327, 514, 741], "ctf_meg": [327, 514, 741], "viewport": [328, 481, 482, 807], "generate_2d_layout": [328, 329, 755, 876], "n_col": [329, 562, 707, 709, 780, 800, 886], "95mm": 330, "eloc": 332, "sfp": [332, 886], "besa": [332, 622, 886], "bvef": [332, 886], "095m": 332, "weakli": 332, "eg": [332, 886], "captrak": [333, 886], "xml": [333, 335, 445, 625, 868, 886], "bvct": [333, 868, 886], "compumed": [334, 493, 868], "eeg001": 336, "eeg002": 336, "hpt": [337, 868], "filepath": [337, 339, 704, 754], "digitz": 337, "pound": [337, 868], "auricular": [337, 868, 871], "signifi": [337, 562], "6729": 337, "3873": 337, "3671": 337, "6782": 337, "5228": 337, "3127": 337, "2363": 337, "4493": 337, "8450": 337, "3601": 337, "5353": 337, "6828": 337, "8518": 337, "0697": 337, "0829": 337, "3744": 337, "6297": 337, "1376": 337, "4264": 337, "7352": 337, "7756": 337, "8676": 337, "0439": 337, "9297": 337, "6852": 337, "4881": 337, "2969": 337, "4939": 337, "localit": [338, 886], "read_polhemus_fastscan": [339, 876, 886], "on_header_miss": [341, 886], "fastscan": [341, 506, 868], "t_step_min": [343, 344, 345], "t_window": [343, 345, 349, 572], "interf": [343, 345, 349], "_setup_hpi_amplitude_fit": 343, "disambigu": 343, "t_step_max": 344, "too_clos": 344, "adjust_dig": [344, 346], "\u03b4t": 344, "veloc": [344, 566], "chpi_snr": 345, "snr_mag": 345, "power_mag": 345, "resid_mag": 345, "snr_grad": 345, "power_grad": 345, "resid_grad": 345, "gof_limit": 346, "quat": [346, 352, 745, 747], "q1": [346, 481, 482, 745, 747], "q2": [346, 745, 747], "q3": [346, 481, 482, 745, 747], "monitor": [347, 868, 871], "hlc001": 347, "hlc002": 347, "hlc003": 347, "rawkit": [348, 506], "include_lin": 349, "t_step": 349, "allow_line_onli": [349, 886], "hpi_freq": 351, "n_coil": 351, "hpi_pick": 351, "hpi_on": 351, "head_pos_to_trans_rot_t": [353, 354, 657, 658, 659, 671, 876], "all_evok": 355, "keep_sample_mean": 356, "ledoit_wolf": [356, 886], "factor_analysi": 356, "store_precis": 356, "assume_cent": 356, "shrikag": 356, "iter_n_compon": 356, "emprici": 356, "redund": [356, 868, 886], "on_rank_mismatch": [360, 371, 372], "orth": [360, 886], "implicitli": [360, 425, 594, 861, 868], "resultingmorph": 362, "vertices_from": 362, "vert_rh": 362, "vert_lh": 362, "mris_left_right_regist": 362, "epochs_list": [363, 436], "add_offset": 363, "events_list": [365, 886], "event_list": [365, 886], "on_defect": [367, 432, 463, 614, 643, 645, 834, 886], "read_fiduci": [367, 876, 886], "canon": [367, 488, 754, 770, 860, 886], "quantiti": [367, 592, 867, 868], "lpa_weight": 367, "rpa_weight": 367, "hsp_weight": 367, "eeg_weight": 367, "hpi_weight": 367, "set_fid_match": 367, "set_grow_hair": 367, "hair": 367, "set_rot": 367, "rot": [367, 745, 747], "set_scal": 367, "sca": 367, "scale_mod": 367, "set_transl": 367, "tra": 367, "fids_mri": 369, "coordinatesystem": [369, 868], "return_rank": 371, "return_color": [371, 466], "prepare_noise_cov": [371, 876, 886], "n_nonzero": 371, "1e11": 372, "1e5": 372, "fd": [373, 841], "reg_cov": 373, "fs_home": 374, "create_raw": 375, "ignore_config": 377, "env": [377, 461, 843, 845, 849, 853], "device_id": 378, "force_upd": [379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411], "update_path": [379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411], "mne_datasets_brainstorm_data_path": [379, 380, 381], "prompt": [379, 380, 381, 382, 384, 385, 386, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 844, 848, 850, 856, 865], "base_url": [382, 405, 406], "getenv": 382, "foot": 382, "khanetal2018": 387, "dataset_param": 388, "check_vers": 388, "return_vers": 388, "auth": 388, "token": 388, "archive_nam": [388, 394], "folder_nam": [388, 394], "hash": [388, 394, 886], "config_kei": 388, "unzip": [388, 845], "untar": [388, 843], "decompress": 388, "authent": [388, 845], "usernam": [388, 845], "password": [388, 845], "httpdownload": 388, "012345": 388, "has_dataset": [388, 876, 886], "uncompress": 388, "cryptograph": 388, "sha256": 388, "19uheid": 388, "md5": 388, "upodh2io": 388, "dataset_nam": [388, 394, 886], "tar": [388, 843, 851], "12b75d1cb7df9dfb4ad73ed82f61094f": 388, "osf": 388, "86qa2": 388, "webpag": 390, "2wk": 391, "1mo": 391, "2mo": 391, "3mo": 391, "5mo": 391, "9mo": 391, "12mo": 391, "15mo": 391, "18mo": 391, "2yr": 391, "ants4": 391, "5month3t": 391, "subject_dir": 392, "fetch_dataset": [394, 876, 886], "\u00ecnt": 397, "mne_datasets_opml_path": 401, "edfx": [405, 406], "cassett": 405, "physionet_sleep_path": [405, 406], "temazepam": [405, 862, 876, 886], "telemetri": 406, "mild": 406, "asleep": 406, "mne_datasets_spm_data_path": 408, "n_triangl": 412, "quadric": 412, "30001": 412, "20480": 412, "cov_est": 413, "transform_into": [413, 420, 886], "average_pow": [413, 420], "cov_method_param": [413, 420, 421], "component_ord": [413, 886], "mutual_info": [413, 886], "csp_space": [413, 420], "mutual": [413, 498, 744], "simplif": 413, "mean_": [413, 420], "std_": [413, 420], "x_new": [413, 414, 415, 418, 420, 421, 424, 563], "n_features_new": [413, 414, 415, 418, 420, 421, 424, 563], "get_param": [413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 563], "subobject": [413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 563], "name_format": [413, 420], "n_pattern": [413, 420], "set_param": [413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 563], "__": [413, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 563], "classes_": [414, 416], "n_class": [414, 416, 417, 423, 429], "rtepoch": [415, 886], "temporalfilt": [415, 876, 886], "mne_realtim": [415, 878, 886], "base_estim": [416, 423, 886], "score_func": [416, 423, 562], "decision_funct": [416, 417, 423], "nd_featur": [416, 423], "n_slice": 416, "n_features_1": [416, 423], "n_features_2": [416, 423], "n_task": [416, 423], "clone": [416, 423, 843, 845, 853, 886], "n_target": [416, 417, 423, 430], "xt": [416, 423, 426], "283185307179586": 418, "nitim": [418, 718, 724, 786, 886], "n_signal": [418, 729, 731], "fit_intercept": [419, 425], "r2": 419, "edge_correct": [419, 425], "baseestim": [419, 427, 430], "return_filt": 421, "flank": 421, "spectal": 421, "sprectal": 421, "sorter_spec": 421, "x_ssd": 421, "with_mean": 422, "with_std": 422, "estimators_": 423, "filterestim": [424, 876, 886], "unsupervis": 427, "spatialfilt": 428, "_xdawntransform": 428, "features_shape_": 428, "objective_funct": 429, "leaveoneout": 429, "surrogate_tri": 429, "mean_spatial_filt": 429, "pre_dispatch": 430, "n_dimensional_featur": 430, "dispatch": 430, "explos": 430, "spawn": [430, 886], "lightweight": [430, 843], "n_score": 430, "attr": [431, 845], "get_fitting_dig": [432, 876], "extrema": [433, 589, 603], "orig_sfreq": 434, "weight_al": 434, "ignore_ref": [434, 525, 573, 583, 594], "return_map": 434, "mag_scal": [434, 573, 583, 594], "multipolar": [434, 572, 573, 583, 594], "fit_sphere_to_headshap": [434, 572, 573, 583, 594, 876, 886], "magenetomet": [434, 573, 583, 594], "pickup": [434, 573, 583, 594, 868], "0168": [434, 573, 583, 594], "sp": 434, "old_event_id": 435, "new_event_id": 435, "safeti": [435, 853], "collat": 437, "absenc": 437, "ancillari": 437, "union": [437, 454, 562, 595], "myevent": 437, "last_myev": 437, "first_": 437, "event_typ": 437, "respet": 437, "slash": [440, 841, 886], "n_new_ev": 441, "aa": 442, "dd": [442, 493, 886], "ee": 442, "gg": 442, "syncstatu": 442, "99998": 442, "neuroscan": [442, 868, 886], "mffpy": [445, 886], "xml_file": 445, "physical_rang": [446, 481, 482], "add_ch_typ": [446, 481, 482], "vmrk": [446, 481, 482, 612, 862, 886], "edflib": [446, 481, 482, 886], "f_pass": 448, "f_stop": 448, "return_copi": 448, "ellipt": 448, "gpass": 448, "gstop": 448, "weren": 448, "triag": [448, 705], "fs1": 449, "fs2": [449, 452], "fstop": 449, "max_tri": 450, "mt_bandwidth": [452, 481, 482], "centr": [452, 481, 482, 544], "xf": 452, "chronux": 452, "partha": 452, "mitra": 452, "hemant": 452, "bokil": 452, "oxford": [452, 845], "upfirdn": 453, "find_stim_step": [454, 876, 886], "00000101": 454, "0000111": 454, "0100101": 454, "0000101": 454, "0000010": 454, "pad_start": 455, "pad_stop": 455, "whichev": [455, 457, 772], "v_from": 455, "v_to": 455, "min_dist": 456, "rhoend": 456, "fmin_cobyla": 456, "limit_depth_ch": [457, 886], "combine_xyz": 457, "gk": 457, "frobeniu": 457, "depth_prior": 457, "compute_orient_prior": [457, 876], "orient_prior": 458, "fwd_out": [459, 460], "restrict_forward_to_stc": [459, 876, 886], "restrict_forward_to_label": [460, 876, 886], "raise_error": 461, "config_path": 462, "mnemn": 462, "mgz_fname": 466, "atlas_id": [466, 627], "read_freesurfer_lut": [466, 876, 886], "labels_aseg": 467, "spatio_temporal_tris_adjac": [468, 876, 886], "all_inst": 470, "grown": 471, "territori": 471, "invad": 471, "broadcast": 471, "guess_mri_subject": 472, "head_high_r": 472, "scrollabl": 472, "orient_to_surfac": 472, "scale_by_dist": 472, "mark_insid": 472, "advanced_rend": 472, "head_insid": 472, "movabl": 472, "splitter": 472, "qt4": 472, "unnecessari": [472, 489, 496, 504, 861, 863], "wx": 472, "occlud": 472, "coregistrationui": 472, "base_imag": [473, 589, 886], "intracranialelectrodeloc": 473, "unscal": [475, 886], "update_mod": 476, "bay": 476, "mackai": 476, "time_pca": 478, "dgap_freq": [478, 479, 886], "cd": [478, 845, 851, 865, 868, 886], "bcd": [478, 886], "dualiti": [478, 479, 886], "alpha_max": [478, 479], "epsilon": [478, 529], "alpha_spac": [479, 886], "alpha_tim": [479, 886], "raw_extra": 480, "orig_format": [480, 481, 482, 886], "buffer_size_sec": [480, 481, 482, 886], "orig_unit": 480, "unsplit": 480, "orig_nchan": 480, "nv": 480, "my_raw_object": 480, "subclass": 480, "_read_segment_fil": 480, "mult": 480, "time_slic": [481, 482], "rawfif": [481, 482], "crop_by_annot": [481, 482, 886], "data_fram": [481, 482], "quartil": [481, 482], "fix_mag_coil_typ": [481, 876, 886], "mne_fix_mag_coil_typ": 481, "load_bad_channel": [481, 482, 886], "bad_fil": [481, 482], "mne_mark_bad_channel": [481, 482], "europ": [481, 482], "lightgrai": [481, 482, 783, 807], "show_first_samp": [481, 482, 562, 801, 807], "eventloop": [481, 482, 807], "prj": [481, 482, 807], "secondari": [481, 482, 807], "stim_pick": [481, 482, 886], "supersampl": [481, 482], "optimum": [481, 482], "drop_small_buff": [481, 482], "gzip": [481, 482, 886], "projecton": [481, 482], "datetimeindex": [481, 482], "pickl": 484, "mrk_point": 484, "fiffv_coord_": [485, 514], "input_fnam": [488, 489, 493, 496, 497, 498, 504, 506, 508, 618, 620], "pos_fnam": 488, "add_head_tran": 488, "artemis123": [488, 868, 886], "utf8": [489, 496, 886], "bdf": [489, 496, 504, 868, 886], "rawedf": [489, 496, 886], "gdf": [489, 496, 504, 868, 886], "batteri": 489, "trigger_sign": 489, "htm": 489, "cms_bit": 489, "cms_high": 489, "boxi": [490, 868, 886], "rawboxi": 490, "vhdr_fname": 491, "heogl": 491, "heogr": 491, "veogb": 491, "vision": [491, 867, 886], "rawbrainvis": [491, 886], "pdf_fname": 492, "config_fnam": 492, "head_shape_fnam": 492, "sort_by_ch_nam": 492, "e64": 492, "rawbti": 492, "data_format": 493, "date_format": 493, "int16": 493, "int32": [493, 871], "numsampl": 493, "rawcnt": 493, "system_clock": 494, "clean_nam": [494, 886], "rawctf": 494, "curri": [495, 612, 886], "dap": [495, 612], "rs3": 495, "cdt": [495, 612, 886], "dpa": [495, 612], "cef": [495, 612], "rawcurri": 495, "export_raw": [496, 876, 886], "storag": [496, 649], "sao2": 496, "subsecond": 496, "uint16_codec": [497, 612, 618, 886], "montage_unit": [497, 618, 886], "codec": [497, 612, 618, 754], "latin1": [497, 612, 618], "raweeglab": [497, 886], "trev": 498, "e1": [498, 625], "e2": [498, 625], "e3": [498, 625], "rawegi": 498, "nxe": [499, 868], "raweximia": 499, "apply_offset": 500, "find_overlap": 500, "overlap_threshold": 500, "gap_descript": 500, "blink_l": 500, "blink_r": 500, "blink_both": 500, "raweyelink": 500, "data_nam": [501, 619, 623], "ft_datatype_raw": 501, "binfil": 503, "fil": [503, 862, 868, 886], "opmeg": 503, "rawfil": 503, "rawgdf": 504, "hitachi": [505, 886], "probe": [505, 886], "rawhitachi": 505, "3x5": 505, "etg": 505, "7000": 505, "d1": 505, "s2": 505, "d2": 505, "s3": 505, "d3": 505, "s4": 505, "d4": 505, "s5": 505, "d5": 505, "s6": 505, "d6": 505, "s7": 505, "d7": 505, "s8": 505, "ft7": 505, "tp7": 505, "laid": 505, "d8": 505, "s9": 505, "d9": 505, "s10": 505, "3x11": 505, "d10": 505, "s11": 505, "d11": 505, "s12": 505, "d12": 505, "s13": 505, "d13": 505, "s14": 505, "d14": 505, "s16": 505, "d16": 505, "s17": 505, "d17": 505, "s18": 505, "stim_cod": 506, "allow_unknown_format": [506, 620], "ricoh": [506, 620, 886], "laboratori": [506, 620], "neuroelectr": 507, "nedf": [507, 886], "rawnedf": 507, "nicolet": [508, 868, 886], "nihon": 509, "kohden": 509, "rawnihon": 509, "nirx": [510, 868, 886], "nosatflag": 510, "rawnirx": 510, "wlx": 510, "nosatflags_wlx": 510, "persyst": [511, 868, 886], "rawpersyst": 511, "snirf": [512, 886], "jnir": 512, "rawsnirf": 512, "indent": [513, 762], "read_limit": [513, 762], "max_str": [513, 762], "mne_show_fiff": 513, "mri_tal": [514, 741], "grow_outsid": 515, "hoc": [518, 852, 886], "standard_devi": 518, "write_bem_surfac": [519, 520, 613, 614, 861, 876, 886], "write_bem_solut": [520, 613, 614, 861, 876, 886], "relative_radii": 526, "radii": [526, 658], "csf": [526, 868], "replace_ev": [527, 886], "n_events_in": 527, "n_events_out": 527, "1111111111111111": [529, 530, 535, 536, 541, 545, 546], "prepare_inverse_oper": [529, 530, 531, 532, 533, 535, 536, 545, 546, 876, 886], "apply_inverse_tfr_epoch": [529, 530, 531, 532, 876, 886], "force_equ": [529, 886], "time_func": 532, "approx": [532, 868], "inv_split": [535, 536], "snr_est": 537, "unregular": 537, "tild": [537, 868, 886], "lambda_k": [537, 868], "gamma_k": [537, 868], "biggest": 537, "chi": 537, "normalis": [538, 539], "willb": [538, 539], "n_orient_inv": [538, 539, 541], "n_orient_fwd": [538, 539, 541], "pca_var": [538, 539], "mantl": [540, 868], "cog_err": 544, "graviti": 544, "cog": 544, "maxrad_ext": 544, "peak_amp": 544, "sum_amp": 544, "surf_nam": [548, 629], "mne_docs_kind": 550, "mne_docs_vers": 550, "grad_reject": 552, "mag_reject": 552, "eeg_reject": 552, "eog_reject": 552, "explanatori": [561, 609], "info_": 561, "intercept_": 561, "cumul": 562, "999999": [562, 886], "n_components_": [562, 886], "n_iter_": [562, 886], "pseudoinvers": [562, 573, 868, 886], "instabl": 562, "migrat": [562, 886], "debat": 562, "zca": 562, "tol_fastica": 562, "tol_picard": 562, "current_fit": 562, "unfit": 562, "pre_whitener_": 562, "pca_components_": 562, "pca_mean_": 562, "pca_explained_variance_": 562, "scrap": 562, "n_samples_": 562, "on_baselin": [562, 798, 886], "ummix": [562, 563], "reappli": [562, 798, 833, 886], "anymor": [562, 853, 886], "supra": [562, 564], "ecg_idx": 562, "kuiper": 562, "eog_idx": 562, "paralyz": 562, "threefold": 562, "farthest": 562, "msucl": 562, "ref_ica": 562, "ref_idx": 562, "baseraw": [562, 570, 876, 886], "unclean": 562, "pvaf": 562, "usecas": [562, 801], "plot_std": [562, 797, 799], "image_arg": [562, 706, 797, 799], "psd_arg": [562, 797, 799], "plot_ica_compon": [562, 876, 886], "topomap_axi": [562, 799], "image_axi": [562, 799], "erp_axi": [562, 799], "spectrum_axi": [562, 799], "variance_axi": [562, 799], "logarithm": [562, 799], "ass": [562, 800], "n_ica_compon": [562, 800], "sublabel": [562, 800], "score_sourc": [562, 886], "pearsonr": 562, "skew": 562, "correct_overlap": 563, "overlapp_correct": 563, "evokeds_": 563, "event_id_": 563, "correct_overlap_": 563, "n_event_typ": 563, "bad_perc": 564, "bad_peak": 564, "bad_flat": 564, "uncommon": 564, "sole": [565, 862, 867], "rotation_velocity_limit": 566, "translation_velocity_limit": 566, "use_dev_head_tran": [566, 886], "lm_cutoff": 570, "epoch_threshold": 570, "bw_method": 570, "intrins": 570, "hjorth": 570, "gaussian_kd": 570, "n_legendre_term": 571, "lap": [571, 651], "inst_csd": 571, "n_imbal": 572, "multipol": [572, 594], "bad_condit": [573, 583, 594], "extended_proj": [573, 583, 594], "ill": [573, 583, 594], "esss": [573, 583, 594, 874, 886], "n_meg": [573, 583], "n_moment": 573, "n_good_meg": 573, "reg_moment": 573, "n_use_in": 573, "dagger": 573, "phi": 573, "phi_in": 573, "data_meg_good": 573, "raw_ev": [574, 575], "avg_ref": [574, 575], "return_drop_log": [574, 575, 886], "ecg_ev": [574, 584, 587], "0005": [575, 865], "e0g": 575, "magentomet": 576, "quadratur": 576, "corrmapplugin1": 577, "categoris": 577, "preexist": 577, "dry": 577, "template_fig": 577, "labelled_": 577, "mag_pick": 578, "grad_pick": 578, "keep_ecg": [579, 886], "r_peak_events_arrai": 579, "doctest": 579, "interp_thresh": 581, "insts_bad": 581, "formerli": [581, 886], "px": 582, "l_x": 582, "r_pupil": 582, "noisy_ch": 583, "flat_ch": 583, "Their": [583, 845], "scores_flat": 583, "limits_flat": 583, "annotate_amplitud": [583, 594, 876, 886], "st_fix": [583, 594], "d_k": 583, "mu_d": 583, "sigma_d": [583, 868], "textrm": 583, "return_ecg": 584, "ch_ecg": [584, 587], "average_puls": [584, 587], "ecg_sourc": 587, "eog_sourc": 588, "max_peak_dist": 589, "voxels_max": 589, "use_min": 589, "n_neighbor": 590, "l_rate": 592, "w_chang": 592, "anneal_deg": 592, "anneal_step": 592, "n_subgauss": 592, "kurt_siz": 592, "ext_block": 592, "blowup": [592, 671], "blowup_fac": 592, "n_small_angl": 592, "use_bia": 592, "return_n_it": [592, 886], "kurtosi": 592, "unmixing_matrix": 592, "return_max_it": 592, "bad_limit": 593, "forth": 594, "relicens": 594, "permiss": 594, "certifi": 594, "seamless": 594, "vet": [594, 874], "abramowitz": 594, "stegun": 594, "us2006031038": 594, "us6876196": 594, "wo2005067789": 594, "wo2005078467": 594, "wo2006114473": 594, "lawyer": 594, "raw_er": 595, "from_raw": 595, "inject": 595, "raw_er_prepar": 595, "compil": 595, "pathlength": [596, 886], "hemoglobin": [601, 886], "wherev": 601, "realtim": [602, 876, 886], "provision": 602, "x0": [603, 691], "peak_loc": 603, "peak_mag": 603, "nathanael": 603, "yoder": 603, "ncyoder": 603, "purdu": 603, "36900026": 603, "76007351": 603, "imb_cal": 605, "t_raw": 608, "t_other": 608, "realign": [608, 841, 886], "first_ev": 608, "n_picks_ref": 609, "epochs_no_av": 609, "epochs_clean": 609, "n_parcel": 611, "amrk": 612, "ahdr": [612, 886], "patch_stat": [614, 636], "s_id": 614, "eventtyp": 618, "trialinfo_column": 619, "trialinfo": [619, 886], "mne_browse_raw": [621, 871], "avr": [622, 886], "mul": [622, 886], "sidecar": 622, "timelock": 623, "write_labels_to_annot": [628, 629, 835, 876, 886], "annot_fnam": [629, 836], "ascend": [629, 795, 802, 865, 886], "mne_make_morph_map": [631, 871], "morph_map": 631, "left_map": 631, "right_map": 631, "asterisk": 634, "source_morph": 635, "return_dict": 637, "file_format": [637, 839], "voxels": [637, 839], "xra": [637, 839], "yra": [637, 839], "zra": [637, 839], "cra": [637, 839], "n_face": [637, 640, 839], "read_tri": [637, 839, 876], "return_al": 639, "fname_in": 640, "clockwis": [640, 759], "counterclockwis": [640, 871], "spcecifi": 641, "bem_nam": 643, "subjects_from": [643, 646], "ba3a": 644, "cfg": 644, "skip_fiduci": 645, "oserror": 645, "scale_bem": [645, 876, 886], "scale_label": [645, 876], "scale_source_spac": [645, 876], "src_name": 646, "my_source_spac": 646, "mne_sensitivity_map": 647, "ch_info": [648, 886], "drop_ref": [648, 886], "on_bad": 648, "cache_dir": 649, "output_format": 652, "howto": 652, "asctim": 652, "levelnam": 652, "notifi": [652, 845], "return_old_level": 653, "add_fram": [653, 749], "old_level": 653, "single_volum": [655, 886], "ox": 655, "oi": 655, "iii": 655, "get_stim_channel": 656, "stim_data": 656, "add_chpi": [658, 659, 671, 876, 886], "inhomogen": 659, "poisson": 659, "stc_true": [661, 662, 663, 664, 665, 666, 667, 668], "stc_est": [661, 662, 663, 664, 665, 666, 667, 668], "ppe": 663, "dfrac": [663, 668], "sum_i": [663, 668], "s_i": [663, 668], "r_i": [663, 668, 868], "tp": [664, 665], "fn": 665, "2q": 666, "min_": [666, 868], "r_k": 666, "r_l": 666, "mathbb": 666, "dle": 666, "ed": [666, 886], "terminologi": 666, "actual_snr": 670, "sti001": 671, "allow_overlap": 673, "coo_matrix": [676, 677, 678, 679, 680, 681, 682, 686], "additit": 677, "remap_vertic": [679, 682], "reassign": [679, 682], "2n": [680, 681, 682, 868], "pval_correct": [684, 690], "n_bootstrap": 685, "spmatrix": [686, 693, 694, 696, 697], "n_ob": 686, "chan_adj": 686, "5600x5600": 686, "27076": 686, "compliant": [687, 874], "slowest": 687, "a2b2": 687, "greenhous": 687, "geisser": 687, "f_val": 687, "homoscedast": 688, "kruskal": 688, "walli": 688, "pvalu": 689, "yekuti": 690, "negcorr": 690, "n_regressor": 691, "choleski": [692, 868, 886], "n_cond": 692, "bx": 692, "enorm": 692, "overload": 692, "subepoch": 692, "n_predictor": 692, "time_window_length": 692, "t_power": [693, 694, 696, 697], "check_disjoint": [693, 694, 696, 697], "subarrai": 693, "kth": 693, "unconnect": [693, 694, 696, 697], "disjoint": [693, 694, 696, 697], "set_cache_dir": [693, 694, 696, 697, 876], "rv_continu": [693, 694, 696, 697], "untract": 695, "spatial_exclud": [696, 697], "p_thresh": 698, "equal_var": 700, "ball": 701, "volu": 701, "do_neighbor_vert": 703, "do_neighbor_tri": 703, "show_path": 705, "sy": [705, 849, 886], "power_baselin": 706, "frequency_window": 706, "read_tfr": [706, 709, 739, 876, 886], "write_tfr": [706, 709, 728, 876], "csd_array_fouri": [707, 712, 713, 714, 715, 716, 876, 886], "csd_array_multitap": [707, 711, 712, 714, 715, 716, 876, 886], "csd_array_morlet": [707, 711, 713, 714, 715, 716, 876, 886], "as_cov": 707, "pack": 707, "pick_frequ": 707, "read_csd": [707, 876, 886], "getitem_epochspectrum_return": 708, "ci_alpha": [708, 710], "read_spectrum": [708, 710, 876], "latex": [708, 710], "pertin": 709, "12676": 709, "getitem_spectrum_return": 710, "sixth": 710, "subscript": 710, "freq_indic": 710, "half_nbw": 718, "kmax": 718, "sym": [718, 886], "nw": 718, "half_bw": 718, "bw": 718, "f0": 718, "tridiagon": 718, "jw": 719, "jnw": 719, "tx": 721, "n_step": [721, 729, 754], "_cycl": [722, 732, 733, 734, 736, 737], "morlet2": [722, 732], "sp_morlet": [722, 732], "this_fwhm": [722, 732], "wavelet_sp": [722, 732], "half_max": [722, 732], "n_taper": [724, 734], "get_window": [725, 808], "istft": [729, 730, 876, 886], "stftfreq": [729, 876], "epoch_data": [733, 734], "avg_power_itc": [733, 734], "power_": [733, 734], "tfr_array_multitap": [733, 735, 736, 737, 738, 876, 886], "tfr_array_stockwel": [733, 734, 736, 737, 738, 876, 886], "interrel": [733, 734, 736, 737, 852], "strive": [734, 737, 867], "finer": [734, 737, 886], "undermin": [734, 737], "intertri": [735, 738], "st_power": 735, "from_str": 741, "to_str": 741, "reg_img": 742, "trans2": 743, "niter": [744, 886], "affine_registr": 744, "rot_to_quat": [745, 876], "quat_to_rot": [747, 876], "contextlib": 748, "contextmanag": 748, "my_fnam": 748, "decor": [750, 752], "moin": 750, "pythondecoratorlibrari": 750, "sentenc": 750, "futurewarn": [750, 845, 886], "ignore_namespac": 751, "namespac": [751, 845, 876, 886], "travers": 751, "_funct": 752, "filler": 752, "5880": 752, "offscreen": 754, "subject_id": [754, 886], "buggi": 754, "soon": [754, 862, 867, 868], "add_skul": 754, "remove_data": 754, "remove_dipol": [754, 886], "remove_forward": [754, 886], "remove_head": 754, "remove_label": 754, "remove_annot": 754, "remove_sensor": 754, "remove_skul": 754, "remove_text": 754, "remove_volume_label": 754, "timeview": 754, "get_picked_point": 754, "geo": 754, "ctab": 754, "lh_ctab": 754, "rh_ctab": 754, "rbga": 754, "icefir": 754, "rocket": 754, "nvtx": 754, "thrown": [754, 886], "font": [754, 813], "add_scalar_bar": 754, "title_font_s": 754, "hex": [754, 778], "map_surfac": [754, 886], "n_coord": 754, "stereotax": 754, "coord_as_vert": 754, "1cm": 754, "subdir": 754, "reset_camera": [754, 822], "max_dist": 754, "justif": 754, "update_text": 754, "fill_hole_s": [754, 886], "hole": [754, 886], "dilat": 754, "apply_auto_sc": 754, "clear_glyph": 754, "cleanup": [754, 874], "widget": [754, 756, 886], "get_view": [754, 886], "zenith": [754, 822], "plot_time_cours": 754, "vertex_id": 754, "plot_time_lin": 754, "reset_view": 754, "restore_user_sc": 754, "bitrat": 754, "imageio": 754, "mov": 754, "interp1d": 754, "slinear": 754, "quadrat": 754, "n_frame": 754, "separate_canva": 754, "set_data_smooth": 754, "set_playback_spe": 754, "playback": 754, "set_tim": [754, 886], "set_time_interpol": 754, "set_time_point": 754, "time_idx": 754, "setup_time_view": 754, "rear": [754, 841], "time_interpol": 754, "toggle_interfac": 754, "toggle_playback": 754, "update_lut": 754, "imdata": 755, "onclick": 755, "backend_bas": 755, "bg": [755, 757], "set_ratio": 757, "ax_im": 757, "node_nam": 759, "start_between": 759, "group_sep": 759, "n_node_nam": 759, "fname_1": 762, "fname_2": 762, "show_fiff": [762, 876, 886], "smooth_shad": [763, 820], "_render": 763, "undocu": 763, "backend_us": [764, 766], "gen": 767, "ch_dx": 767, "teal": 769, "onselect": [771, 816], "rectangleselector": [771, 816], "show_indic": 772, "show_orient": [772, 886], "colorbarbas": 773, "polarax": 776, "type_snr": 777, "type_pow": 777, "type_resid": 777, "truncate_xaxi": [778, 886], "invert_i": 778, "unweight": 778, "inset": [778, 886], "n_evok": 778, "hexadecim": 778, "equal_spac": 787, "1f77b4": 795, "fscale": [795, 802], "alim": [795, 802], "pointsiz": 810, "bet": 810, "bluish": 811, "brain_color": [813, 886], "fig_numb": 813, "cone": 813, "axesimag": 816, "contourset": 816, "fieldlin": 816, "mixedvectorsourceestim": [817, 876, 886], "backend_nam": [819, 823, 825, 826], "old_backend_nam": [819, 823], "plot_evoked_field": [819, 876, 886], "link_brain": [819, 876, 886], "inlin": [819, 843, 849], "jupyterlab": 819, "colab": 819, "antialia": [820, 843], "depth_peel": 820, "multi_sampl": 820, "plot_epoch": [823, 845, 876, 886], "plot_ica_sourc": [823, 876, 886], "hide_sensor": 824, "dn": 824, "hsv": 836, "table_nam": 836, "colort": 836, "create_stamp": 839, "vocabulari": [841, 869], "textual": [841, 886], "spindl": 841, "acronym": [841, 869], "definion": 841, "mv": [841, 886], "\u00b5m": 841, "od": 841, "dealt": 841, "synapt": 841, "intracellular": 841, "pyramid": [841, 868], "perpendicularli": 841, "erron": [841, 886], "peculiar": 841, "encapsul": [841, 868], "hcpmmp": [841, 886], "gave": [841, 886], "cartoon": 841, "pependicular": 841, "laser": 841, "ga": 841, "rubidium": 841, "superconduct": 841, "quantum": 841, "scaleogram": 841, "uncorrel": 841, "nb_conda_kernel": 843, "anaconda": [843, 845, 849, 850, 856, 886], "forum": [843, 844, 845, 848, 851, 852, 862, 864, 865, 866], "osmesa": 843, "xvfb": 843, "forg": [843, 845, 849, 853], "mesalib": 843, "latest": [843, 845, 853, 865, 886], "git": [843, 852], "miniconda": [843, 845], "miniforg": 843, "pythonpath": 843, "pythonhom": 843, "curl": [843, 845], "githubusercont": [843, 845], "unabl": [843, 867, 886], "nvidia": [843, 865], "driver": 843, "init_cuda": [843, 876], "pytest": [843, 845], "test_filt": 843, "multithread": [843, 865], "swr": 843, "cento": 843, "spyder": [843, 845, 848, 849, 865], "mesa_gl_version_overrid": 843, "rend": 843, "msaa": 843, "antialias": [843, 886], "set_3d_opt": [843, 876, 886], "incomplet": [843, 874, 886], "prebuilt": 843, "xzvf": 843, "mesa_18": 843, "6_centos_lib": 843, "tgz": 843, "libgl_drivers_path": 843, "pwd": 843, "ld_library_path": 843, "went": [843, 844], "glxinfo": 843, "grep": [843, 845, 853], "uninstal": [843, 853], "cach": [843, 853], "gcp": 844, "travi": [844, 886], "virtualenv": 844, "8dfaa4a": 844, "bla": 844, "lapack": 844, "f614064": 844, "qtagg": 844, "post1": 844, "pyside6": 844, "traceback": 844, "modulenotfounderror": 844, "bashrc": [844, 850, 851], "zprofil": [844, 850], "zsh": [844, 850, 851], "troubleshoot": [844, 864, 866], "sustain": [845, 867], "volunt": 845, "welcom": 845, "anyon": [845, 867], "abid": 845, "fastest": [845, 851], "feel": [845, 852, 867, 886], "upstream": 845, "desktop": 845, "appreci": 845, "sudo": [845, 846, 851], "apt": [845, 846], "dmg": [845, 851], "atlassian": 845, "macport": [845, 851], "homebrew": [845, 851], "yourdomain": 845, "sooner": 845, "commit": [845, 867, 874, 886], "emac": 845, "vim": 845, "nano": 845, "subl": 845, "makefil": 845, "newest": 845, "guil": 845, "w32": 845, "ezwinport": 845, "path_to_git": 845, "mingw64": 845, "mnedev": 845, "path_to_anaconda": 845, "team": [845, 867], "yml": 845, "github_usernam": 845, "insert_your_actual_github_username_her": 845, "install_loc": 845, "opt": [845, 849, 850, 851], "site_packag": 845, "requirements_test": 845, "requirements_doc": 845, "graphviz": 845, "graphviz_dot": 845, "conda_prefix": 845, "optipng": 845, "linter": 845, "restructuredtext": 845, "autobuild": 845, "doc8": 845, "url_of_remote_repo": 845, "nickname_of_remot": 845, "repo": [845, 867], "undoubtedli": 845, "checkout": 845, "colleagu": 845, "unstag": 845, "some_fil": 845, "some_new_fil": 845, "entireti": 845, "some_other_fil": 845, "bypass": [845, 886], "enh": 845, "some_testing_fil": 845, "new_tutorial_fil": 845, "stuck": 845, "secur": [845, 851], "secret": 845, "client": [845, 886], "test_evok": 845, "python_refer": 845, "rst": 845, "my_funct": 845, "my_new_funct": 845, "old_param": 845, "new_param": 845, "my_other_funct": 845, "depr_messag": 845, "changeset": 845, "minor": [845, 871, 874, 886], "typo": [845, 864, 886], "subsect": 845, "bugfix": [845, 853], "happi": 845, "credit": 845, "gh": [845, 886], "newcontrib": [845, 886], "firstnam": 845, "lastnam": 845, "_your": 845, "test_topo": 845, "pep": 845, "ruff": 845, "hook": 845, "ins": 845, "camelcas": [845, 876], "snake_cas": 845, "nsampl": 845, "complic": [845, 886], "sphinxcontrib": 845, "bibtex": [845, 860], "citat": [845, 886], "bibliograph": 845, "bib": 845, "singleauthor2019": 845, "authoroneauthortwo2020": 845, "firstauthoretal2021a": 845, "firstauthoretal2021b": 845, "param_nam": 845, "test_docstring_paramet": 845, "mod": 845, "intersphinx": 845, "inventori": 845, "sphobjinv": 845, "dump": 845, "ext": 845, "backtick": [845, 865], "pdb": 845, "debugg": [845, 886], "test_io_evok": 845, "imit": 845, "html_dev": 845, "noplot": 845, "regex_to_select_my_tutori": 845, "unrel": 845, "browse_raw": [845, 886], "mortem": 845, "pm": 845, "everyon": 845, "scientist": [845, 849, 864], "spare": 845, "streamlin": 845, "collabor": [845, 852, 867], "fruit": 845, "road": 845, "someon": 845, "occasion": [845, 862], "cosmet": 845, "backport": [845, 886], "whats_new": 845, "draft": 845, "wip": 845, "mrg": 845, "sty": 845, "azp": 845, "azur": 845, "exemplifi": 845, "tcsh": [846, 850, 851], "ubuntu": [846, 848, 851, 874], "bionic": 848, "beaver": 848, "1_0": 848, "intel": [848, 865], "catalina": [848, 850, 886], "silicon": 848, "studio": [848, 849], "python_1": 848, "0_1": 848, "mamba": 849, "prioriti": 849, "h5io": [849, 865], "h5py": [849, 865], "pymatread": [849, 886], "vscode": 849, "microsoft": 849, "anaconda3": [849, 850], "pyqt5": 849, "pyqt": [849, 886], "pycharm": [849, 865], "paid": 849, "profession": 849, "cmd": 850, "bash_profil": 850, "__conda_setup": 850, "overflow": [850, 886], "leopard": 851, "powerpc": 851, "runtim": 851, "mne_convert_mne_data": 851, "mne_epochs2mat": [851, 871], "mne_raw2mat": 851, "mne_simu": 851, "xcode": 851, "xquartz": 851, "x11": 851, "libxt": 851, "dylib": 851, "bak": 851, "flat_namespac": 851, "netpbm": 851, "brew": 851, "app": 851, "nightli": [851, 886], "path_to_desired_install_loc": 851, "zxvf": 851, "path_to_archive_fil": 851, "pkg": 851, "untrust": 851, "privaci": [851, 867], "mne_root": [851, 868, 871, 886], "matlab_root": 851, "r2018b": 851, "undefin": 851, "mne_setup_sh": 851, "csh": 851, "mne_setup": [851, 871], "path_to_mn": 851, "path_to_matlab": 851, "emul": 851, "zshrc": 851, "cshrc": 851, "tcshrc": 851, "setenv": [851, 856], "mne_opengl_test": 851, "redraw": 851, "spent": 851, "revolut": 851, "interrupt": 851, "glx": 851, "nondirect": 851, "IT": 851, "vnc": 851, "card": [851, 886], "libxp": 851, "libxp6": 851, "debian": [851, 874, 886], "dpkg": 851, "libxp6_1": 851, "1ubuntu1_amd64": 851, "deb": 851, "libgfortran": 851, "libfortran": 851, "gnu": 851, "maxdepth": 851, "interoper": 852, "reimplement": 852, "cpp": [852, 886], "connectom": [852, 874], "compli": [852, 886], "alphacsc": 852, "pactool": 852, "microst": 852, "conpi": 852, "eelbrain": 852, "posthoc": 852, "prep": 852, "pyprep": 852, "sesam": 852, "sesameeg": 852, "invertmeeg": 852, "unix": [852, 886], "name_of_environ": 853, "fool": 853, "proof": 853, "old_mn": 853, "dep": 853, "hm": [856, 862], "pubsw": 856, "subscrib": 856, "modular": 857, "qt3d": 857, "babymeg": 857, "tmsi": 857, "refa": 857, "brainamp": 857, "ant": 857, "eegosport": 857, "gusbamp": 857, "gramfortetal2013a": 860, "gramfortetal2014": 860, "bibliographi": 860, "meg2443": 861, "vanish": 861, "advers": 861, "preliminari": 861, "stamp": 861, "mm2": 861, "ico5": 861, "tessel": [861, 871], "prerequisit": 861, "bulletproof": 861, "feasibl": 861, "sep": 861, "bem_sol": 861, "reestablish": 861, "corregistr": 861, "charg": 861, "photograph": 861, "uninterest": 861, "epilept": 861, "infrequ": 861, "hesit": [862, 865], "siemen": [862, 868], "sonata": 862, "mprage": [862, 865, 868], "interspers": 862, "lv": 862, "audvis_raw": 862, "auvi": 862, "agre": 862, "bst_rest": [862, 876], "khz": 862, "dicom": [862, 871, 886], "richli": 862, "timon": [862, 886], "9999": 862, "msr": 862, "retrospect": 862, "satisfactori": 862, "chin": 862, "respir": [862, 868, 871], "hypnogram": 862, "rechtschaffen": 862, "kale": 862, "erlangen": 862, "germani": 862, "pend": 862, "craft": 862, "lrp": 862, "ern": 862, "neuroscientist": 863, "keystrok": 863, "peak_find": [863, 876, 886], "appnop": 865, "nope": 865, "nsappsleepdis": 865, "tempt": 865, "benfrederickson": 865, "dont": 865, "stackoverflow": 865, "21752259": 865, "write_": 865, "resid": 865, "plot_find_ecg_artifact": 865, "ordinarili": 865, "mkl": 865, "openmp": 865, "omp_num_thread": 865, "openblas_num_thread": 865, "num_cpu": 865, "implic": 865, "simplist": 865, "gpu": [865, 886], "epochs_path": 865, "protrud": 865, "shrunken": 865, "mri_norm": 865, "xopt": 865, "gentl": 865, "listserv": 865, "recon_al": 865, "autorecon2": 865, "autorecon3": 865, "formal": 867, "extraordinari": 867, "clarifi": [867, 886], "profit": 867, "entiti": [867, 871], "openli": 867, "affili": 867, "discours": 867, "behalf": 867, "barrier": 867, "leadership": 867, "neutral": 867, "tradition": [867, 868], "reward": 867, "benevol": 867, "dictat": 867, "defer": 867, "vote": 867, "deadlock": 867, "fork": 867, "disagre": 867, "deleg": 867, "appoint": 867, "successor": 867, "faith": 867, "director": 867, "ceo": [867, 886], "everydai": 867, "peer": 867, "privileg": 867, "servic": [867, 886], "scope": 867, "strateg": 867, "polici": [867, 886], "nomin": 867, "willing": 867, "capac": 867, "infrastructur": [867, 886], "outreach": 867, "deliber": 867, "divers": 867, "viewpoint": 867, "talent": 867, "grace": 867, "retir": 867, "eject": 867, "deem": 867, "harm": 867, "financi": 867, "employ": 867, "disclos": 867, "recus": 867, "themself": 867, "sparingli": 867, "apach": 867, "veto": 867, "rational": 867, "opinion": 867, "anticip": [867, 886], "suffic": 867, "usurp": 867, "countri": 867, "gift": 867, "partnership": 867, "approv": 867, "commenc": 867, "laps": 867, "pursu": 867, "monei": 867, "donor": 867, "umbrella": 867, "trademark": 867, "invit": 867, "waiv": 867, "copyright": 867, "mole": 868, "sensibl": 868, "femtotesla": 868, "typecast": 868, "unread": [868, 886], "electrocardiographi": 868, "electromyographi": 868, "celsiu": 868, "channels_3_and_4": 868, "boldsymbol": 868, "c_0": 868, "g_": 868, "infti": 868, "r_j": 868, "t_d": 868, "underbrac": 868, "b_": 868, "b_n": 868, "dotso": 868, "uc_n": 868, "constitut": 868, "orthonorm": 868, "c_e": 868, "complement": 868, "perp": 868, "uu": 868, "segonn": 868, "_brain_surfac": 868, "_inner_skull_surfac": 868, "_outer_skull_surfac": 868, "_outer_skin_surfac": 868, "availablili": 868, "fov": 868, "dcm2niix": 868, "mne_organize_dicom": 868, "flash05": 868, "fat32": 868, "mri_ms_fitparm": 868, "mri_synthes": 868, "fsl_rigid_regist": 868, "flash5_reg": 868, "cor": 868, "mri_make_bem_surfac": 868, "tringul": 868, "t_x": 868, "ti": 868, "mm3": 868, "mnitalairach": 868, "mni305": 868, "y_2": 868, "z_2": 868, "y_1": 868, "z_1": 868, "x_0": 868, "y_0": 868, "z_0": 868, "x_k": 868, "y_k": 868, "z_k": 868, "jk": 868, "9688": [868, 886], "0485": 868, "9189": 868, "t_1": 868, "s_1": 868, "s_n": 868, "t_2": 868, "filessepar": 868, "t_3": 868, "mghformat": 868, "t_4": 868, "hardcod": 868, "idiosyncrasi": 868, "conceiv": 868, "s_p": 868, "50mm": 868, "r_0": 868, "e_x": 868, "e_i": 868, "e_z": 868, "r_c": 868, "r_d": 868, "0d": 868, "n_k": 868, "w_": 868, "kp": 868, "sixteen": 868, "tm": [868, 871, 886], "centerpoint": 868, "mne_list_coil_def": 868, "3012": 868, "8mm": 868, "3013": 868, "4001": 868, "wh": 868, "3600": 868, "4003": 868, "4004": 868, "4005": 868, "5001": 868, "5002": 868, "5003": 868, "5004": 868, "6001": 868, "nx": 868, "ny": 868, "nz": [868, 886], "r_1": 868, "dotsc": 868, "r_m": 868, "mu_1": 868, "mu_m": 868, "int_": 868, "v_": 868, "ly": 868, "average_forward_solut": [868, 876], "ensu": 868, "posteriori": 868, "viabl": 868, "3p": 868, "unconstrain": 868, "mx": 868, "smoother": [868, 886], "arriv": 868, "bigl": 868, "bigr": 868, "u_c": 868, "lambda_c": 868, "grg": 868, "possess": 868, "varepsilon_k": 868, "sigma_k": 868, "rout": 868, "superscript": 868, "v_k": 868, "w_k": 868, "propto": 868, "dimensionless": 868, "tendenc": 868, "divis": [868, 886], "2_k": 868, "g_i": 868, "u_": 868, "lambda_": 868, "_i": 868, "noiseless": 868, "misfit": 868, "pi_k": 868, "recolor": 868, "eigenfield": 868, "n_d": 868, "a_d": 868, "postsynapt": 868, "microscop": 868, "rigidli": 868, "floc": 868, "thereaft": 868, "vloc": 868, "favor": [868, 886], "1p": 868, "2p": 868, "l_": 868, "eff": 868, "w_i": 868, "x_i": 868, "c_y": 868, "l_i": 868, "w_1": 868, "w_2": 868, "l_1": 868, "l_2": 868, "supposedli": 868, "x_j": 868, "t_j": 868, "biject": 868, "smudg": 868, "n_j": 868, "prod_": 868, "kindli": 869, "function_nam": 869, "w3school": 870, "carpentri": 870, "lesson": 870, "fiff_": 871, "startup": 871, "mne_ex": 871, "fiff_setup_read_raw": 871, "fiff_read_raw_seg": 871, "fiff_find_evok": 871, "fiff_read_bad_channel": 871, "fiff_read_ctf_comp": 871, "fiff_read_evok": 871, "fiff_read_evoked_al": 871, "fiff_read_meas_info": 871, "fiff_read_mri": 871, "fiff_read_proj": 871, "fiff_read_raw_segment_tim": 871, "fiff_pick_channel": 871, "fiff_pick_channels_evok": 871, "fiff_pick_info": 871, "fiff_pick_typ": 871, "fiff_pick_types_evok": 871, "fiff_invert_transform": 871, "fiff_reset_ch_po": 871, "fiff_transform_eeg_ch": 871, "fiff_transform_meg_ch": 871, "fiff_define_const": 871, "fiff_dir_tree_find": 871, "fiff_list_dir_tre": 871, "fiff_make_dir_tre": 871, "fiff_open": 871, "fiff_read_named_matrix": 871, "fiff_read_tag": 871, "fiff_read_tag_info": 871, "fiff_split_name_list": 871, "fiff_end_block": 871, "fiff_end_fil": 871, "fiff_start_block": 871, "fiff_start_fil": 871, "fiff_write_ch_info": 871, "fiff_write_coord_tran": 871, "fiff_write_ctf_comp": 871, "fiff_write_dig_point": 871, "fiff_write_complex": 871, "fiff_write_complex_matrix": 871, "fiff_write_doubl": 871, "fiff_write_double_complex": 871, "fiff_write_double_complex_matrix": 871, "fiff_write_double_matrix": 871, "fiff_write_evok": 871, "repons": 871, "fiff_write_float": 871, "fiff_write_float_matrix": 871, "fiff_write_id": 871, "fiff_write_int": 871, "fiff_write_int_matrix": 871, "fiff_write_name_list": 871, "fiff_write_named_matrix": 871, "fiff_write_proj": 871, "fiff_write_short": 871, "fiff_write_str": 871, "fiff_finish_writing_raw": 871, "fiff_start_writing_raw": 871, "fiff_write_dig_fil": 871, "fiff_write_raw_buff": 871, "mne_add_coil_def": 871, "mne_load_coil_def": 871, "mne_compensate_to": 871, "mne_get_current_comp": 871, "mne_make_compens": 871, "mne_make_projector_info": 871, "mne_make_projector": 871, "mne_set_current_comp": 871, "mne_pick_channels_cov": 871, "mne_pick_channels_forward": 871, "mne_read_bem_surfac": 871, "mne_read_cov": 871, "mne_read_epoch": 871, "mne_read_ev": 871, "mne_read_forward_solut": 871, "mne_read_inverse_oper": 871, "mne_read_morph_map": 871, "mne_read_noise_cov": 871, "mne_read_source_spac": 871, "mne_write_cov": 871, "mne_write_cov_fil": 871, "mne_write_ev": 871, "mne_write_inverse_sol_stc": 871, "mne_write_inverse_sol_w": 871, "mne_read_stc_fil": 871, "mne_read_stc_file1": 871, "mne_read_w_fil": 871, "mne_read_w_file1": 871, "mne_write_stc_fil": 871, "mne_write_stc_file1": 871, "mne_write_w_fil": 871, "mne_write_w_file1": 871, "mne_read_label_fil": 871, "mne_write_label_fil": 871, "mne_label_time_cours": 871, "mne_read_curvatur": 871, "mne_read_surfac": 871, "mne_reduce_surfac": 871, "reducepatch": 871, "mne_write_surfac": 871, "mne_block_diag": 871, "mne_combine_xyz": 871, "mne_file_nam": 871, "mne_find_channel": 871, "mne_find_source_space_hemi": 871, "mne_fread3": 871, "mne_fwrite3": 871, "mne_make_combined_event_fil": 871, "mne_omit_first_lin": 871, "mne_setup_toolbox": 871, "mne_transform_coordin": 871, "mne_collect_transform": 871, "mne_transpose_named_matrix": 871, "mne_transform_source_space_to": 871, "mne_ex_average_epoch": 871, "mne_ex_cancel_nois": 871, "mne_ex_compute_invers": 871, "mne_ex_data_set": 871, "mne_ex_evoked_grad_amp": 871, "mne_ex_read_epoch": 871, "mne_ex_read_evok": 871, "mne_ex_read_raw": 871, "mne_ex_read_write_raw": 871, "mne_copy_processing_histori": 871, "revis": 871, "coil_geometry_inform": 871, "fiffb_meas_info": 871, "mne_compute_raw_invers": 871, "fiffv_meg_ch": 871, "fiffv_ref_meg_ch": 871, "fiffv_eef_ch": 871, "fiffv_mcg_ch": 871, "mcg": 871, "fiffv_stim_ch": 871, "fiffv_eog_ch": 871, "fiffv_emg_ch": 871, "fiffv_ecg_ch": 871, "fiffv_misc_ch": 871, "fiffv_resp_ch": 871, "fiffv_coord_unknown": 871, "fiffv_coord_devic": 871, "fiffv_coord_isotrak": 871, "fiffv_coord_hpi": 871, "fiffv_coord_mri_slic": 871, "fiffv_coord_mri_displai": 871, "fiffv_coord_dicom_devic": 871, "fiffv_coord_imaging_devic": 871, "fiffv_mne_coord_tufts_eeg": 871, "tuft": 871, "fiffv_mne_coord_ctf_devic": 871, "fiffv_mne_coord_ctf_head": 871, "1004": 871, "fiffv_aspect_averag": 871, "fiffv_aspect_std_err": 871, "fiffv_aspect_singl": 871, "fiffv_aspect_subaverag": 871, "fiffv_aspect_altaverag": 871, "fiffv_aspect_sampl": 871, "fiffv_aspect_power_dens": 871, "fiffv_aspect_dipole_wav": 871, "fiffv_bem_surf_id_unknown": 871, "fiffv_bem_surf_id_brain": 871, "fiffv_bem_surf_id_skul": 871, "fiffv_bem_surf_id_head": 871, "fiffv_point_hpi": 871, "fiffv_point_ecg": 871, "fiffv_point_extra": 871, "fiffv_point_lpa": 871, "fiffv_point_rpa": 871, "fiffv_mne_meg": 871, "fiffv_mne_eeg": 871, "fiffv_mne_meg_eeg": 871, "fiffv_mne_unknown_cov": 871, "fiffv_mne_noise_cov": 871, "fiffv_mne_sensor_cov": 871, "fiffv_mne_source_cov": 871, "fiffv_mne_fmri_prior_cov": 871, "fiffv_mne_signal_cov": 871, "fiffv_mne_depth_prior_cov": 871, "fiffv_mne_orient_prior_cov": 871, "fiffv_proj_item_non": 871, "fiffv_proj_item_dip_fix": 871, "fiffv_proj_item_dip_rot": 871, "fiffv_proj_item_homog_grad": 871, "fiffv_proj_item_homog_field": 871, "fiffv_proj_item_eeg_avref": 871, "uint32": 871, "parent_id": 871, "nent": 871, "nchild": 871, "1970": [871, 886], "fiffv_coord": 871, "fiffv_mne_coord": 871, "fiff_point": 871, "num_point": 871, "char": [871, 886], "fv": 871, "struct": 871, "fiff_eeg_ch": 871, "coil_tran": 871, "eeg_loc": 871, "six": 871, "10unit_mul": 871, "fiffv_proj_item": 871, "fiffv_mne_proj_item": 871, "decalibr": 871, "row_cal": 871, "col_cal": 871, "tri_area": 871, "tri_cent": 871, "centroid": 871, "tri_nn": 871, "mne_add_patch_info": 871, "sol_grad": 871, "sing": 871, "eigen_lead": 871, "eigen_field": 871, "source_cov": 871, "cond1": 872, "cond2": 872, "addpath": 872, "pop_fileio": 872, "pop_eegfiltnew": 872, "pop_averef": 872, "pop_select": 872, "pop_runica": 872, "pop_binica": 872, "pop_compprop": 872, "comp_num": 872, "winhandl": 872, "comphead": 872, "pop_selectcomp": 872, "list_of_components_to_exclud": 872, "pop_epoch": 872, "eeg_epoch": 872, "pop_timtopo": 872, "pop_compareerp": 872, "eeg_epochs1": 872, "eeg_epochs2": 872, "pop_saveset": 872, "lfreq": 872, "hfreq": 872, "filtered_raw": 872, "bdfl": 873, "nutmegtrip": 874, "youtub": [874, 886], "cluster_based_statist": 874, "patsi": 874, "dmatric": 874, "4859": 874, "2852": 874, "3585": 874, "openneuro": 874, "6687": 874, "adult": 874, "dcm": 874, "kymata": 874, "watch": 874, "bnci": 874, "horizon": 874, "pde": 874, "swig": 874, "ambit": 874, "useless": 874, "recruit": 874, "8221": 874, "rudimentari": 874, "crossspectrum": 874, "multitaperspectrum": 874, "6290": 874, "7671": 874, "8026": 874, "8724": 874, "9045": 874, "pr": 874, "6609": 874, "6629": 874, "6672": 874, "6673": 874, "8397": 874, "8892": 874, "mnefun": 874, "ptfce": 874, "mayavi": [874, 886], "7162": 874, "cloud": 874, "dask": 874, "czi": 874, "7751": 874, "docker": 874, "underscore_cas": 876, "themat": 876, "read_raw_curri": [876, 886], "read_raw_nedf": [876, 886], "read_mrk": 876, "get_meg_helmet_surf": 876, "get_volume_labels_from_src": [876, 886], "parse_config": 876, "read_evoked_besa": [876, 886], "read_evokeds_mff": [876, 886], "read_morph_map": [876, 886], "read_reject_paramet": 876, "write_label": 876, "export_epoch": [876, 886], "export_evok": [876, 886], "add_background_imag": 876, "compare_fiff": 876, "mne_analyze_colormap": 876, "plot_csd": 876, "plot_epochs_psd_topomap": [876, 886], "plot_evok": [876, 886], "plot_evoked_topomap": [876, 886], "plot_evoked_joint": [876, 886], "plot_ica_properti": [876, 886], "plot_ica_scor": [876, 886], "plot_ica_overlai": [876, 886], "plot_montag": [876, 886], "plot_raw_psd": [876, 886], "plot_regression_weight": [876, 886], "plot_volume_source_estim": [876, 886], "plot_tfr_topomap": [876, 886], "plot_topo_image_epoch": [876, 886], "get_3d_backend": [876, 886], "use_3d_backend": [876, 886], "close_3d_figur": 876, "close_all_3d_figur": 876, "get_browser_backend": [876, 886], "equalize_channel": [876, 886], "annotate_nan": [876, 886], "compute_fine_calibr": [876, 886], "compute_maxwell_basi": [876, 886], "ica_find_ecg_ev": 876, "ica_find_eog_ev": 876, "equalize_bad": [876, 886], "maxwell_filter_prepare_emptyroom": [876, 886], "read_eog_regress": 876, "realign_raw": [876, 886], "regress_artifact": [876, 886], "read_ica_eeglab": [876, 886], "read_fine_calibr": 876, "write_fine_calibr": 876, "short_channel": [876, 886], "estimate_ringing_sampl": 876, "extract_chpi_locs_kit": [876, 886], "concatenate_ev": 876, "count_ev": [876, 886], "match_event_nam": [876, 886], "shift_time_ev": [876, 886], "pick_channels_cov": 876, "compute_whiten": [876, 886], "write_fiduci": 876, "create_default_subject": [876, 886], "head_to_mni": 876, "head_to_mri": [876, 886], "add_source_space_dist": [876, 886], "decimate_surfac": [876, 886], "complete_surface_info": 876, "distance_to_bem": [876, 886], "compute_rank_invers": 876, "read_beamform": [876, 886], "grade_to_tri": 876, "grade_to_vertic": 876, "grow_label": [876, 886], "random_parcel": 876, "transform_surface_to": [876, 886], "get_decimated_surfac": [876, 886], "pick_channels_csd": 876, "dpss_window": [876, 886], "cwt": 876, "ttest_ind_no_p": [876, 886], "spatial_dist_adjac": [876, 886], "spatial_tris_adjac": [876, 886], "spatial_inter_hemi_adjac": [876, 886], "spatio_temporal_src_adjac": [876, 886], "spatio_temporal_dist_adjac": [876, 886], "select_source_in_label": 876, "psdestim": 876, "timefrequ": [876, 886], "open_doc": [876, 886], "set_log_fil": 876, "get_cuda_memori": 876, "set_cuda_devic": [876, 886], "11469": 886, "sawradip": 886, "saha": 886, "11458": 886, "binn": 886, "11465": 886, "hyonyoung": 886, "shin": 886, "11366": 886, "11536": 886, "11470": 886, "ebert": 886, "scheltienn": 886, "11078": 886, "barth\u00e9lemi": 886, "11397": 886, "11401": 886, "11407": 886, "11388": 886, "11556": 886, "11419": 886, "11430": 886, "11440": 886, "11436": 886, "microelectrod": 886, "11567": 886, "transform_point": 886, "11572": 886, "11614": 886, "10554": 886, "11152": 886, "11632": 886, "11479": 886, "stone": 886, "setuptool": 886, "11454": 886, "arn": 886, "pelzer": 886, "sanit": 886, "11399": 886, "splash": 886, "11398": 886, "11402": 886, "11421": 886, "11427": 886, "11441": 886, "11457": 886, "zvi": 886, "baratz": 886, "11489": 886, "inconsist": 886, "11473": 886, "11499": 886, "11409": 886, "11537": 886, "11562": 886, "11563": 886, "11521": 886, "11569": 886, "11502": 886, "gerster": 886, "11607": 886, "11612": 886, "11623": 886, "11616": 886, "11500": 886, "aligned_ct": 886, "warp_montage_volum": 886, "11333": 886, "tooma": 886, "anij\u00e4rv": 886, "11237": 886, "11236": 886, "11241": 886, "jevri": 886, "repr": 886, "11357": 886, "11359": 886, "11096": 886, "11353": 886, "11283": 886, "11329": 886, "11375": 886, "hennei": 886, "11310": 886, "santeri": 886, "ruuskanen": 886, "11289": 886, "mauricio": 886, "cesped": 886, "tenorio": 886, "11235": 886, "hasegan": 886, "11245": 886, "dinara": 886, "issagaliyeva": 886, "jennif": 886, "behnk": 886, "hakimeh": 886, "aslsardroud": 886, "pavel": 886, "navratil": 886, "ear_left": 886, "ear_right": 886, "11255": 886, "11263": 886, "torr": 886, "ortiz": 886, "11351": 886, "enzo": 886, "altamiranda": 886, "reject_": 886, "11244": 886, "11303": 886, "11290": 886, "wrongli": 886, "11258": 886, "erkka": 886, "heinila": 886, "outli": 886, "11298": 886, "11345": 886, "11311": 886, "11300": 886, "11340": 886, "11318": 886, "11346": 886, "11344": 886, "errantli": 886, "11347": 886, "11293": 886, "11322": 886, "11369": 886, "11361": 886, "nowadai": 886, "interp_from": 886, "interp_kind": 886, "11371": 886, "brayet": 886, "luka": 886, "hecker": 886, "omer": 886, "shubi": 886, "merk": 886, "11073": 886, "10656": 886, "10784": 886, "11011": 886, "11006": 886, "6233": 886, "11048": 886, "8639": 886, "11083": 886, "11051": 886, "11020": 886, "11075": 886, "valerii": 886, "chirkov": 886, "electroderm": 886, "11090": 886, "11108": 886, "19080": 886, "11099": 886, "11077": 886, "11094": 886, "11095": 886, "11186": 886, "eduard": 886, "ort": 886, "11116": 886, "11147": 886, "11150": 886, "11154": 886, "11141": 886, "11232": 886, "11196": 886, "gemein": 886, "unlabel": 886, "11074": 886, "sebastiaan": 886, "mathot": 886, "11072": 886, "chetan": 886, "gohil": 886, "11004": 886, "carlstr\u00f6m": 886, "schad": 886, "11190": 886, "wetzel": 886, "11019": 886, "sena": 886, "11049": 886, "11084": 886, "11145": 886, "11182": 886, "11040": 886, "marian": 886, "dovgialo": 886, "11171": 886, "11181": 886, "11193": 886, "11102": 886, "11081": 886, "11191": 886, "6870": 886, "simeon": 886, "11197": 886, "11212": 886, "11203": 886, "11201": 886, "h\u00fcseyin": 886, "orkun": 886, "elma": 886, "deprecationwarn": 886, "11123": 886, "11050": 886, "show_toolbar": 886, "10184": 886, "skirt": 886, "add_channels_epoch": 886, "11180": 886, "11046": 886, "welzel": 886, "luzpaz": 886, "ilia": 886, "machaira": 886, "10942": 886, "tziona": 886, "nessaiv": 886, "10922": 886, "mingjian": 886, "he": 886, "10736": 886, "jordan": 886, "drew": 886, "10632": 886, "courtemanch": 886, "10515": 886, "alessandro": 886, "tonin": 886, "10555": 886, "powel": 886, "10627": 886, "evan": 886, "hathawai": 886, "10615": 886, "10501": 886, "10460": 886, "10544": 886, "10720": 886, "10464": 886, "10699": 886, "10534": 886, "10568": 886, "10567": 886, "10533": 886, "10557": 886, "10591": 886, "10571": 886, "10587": 886, "10125": 886, "benerradi": 886, "10606": 886, "10610": 886, "10614": 886, "10611": 886, "10633": 886, "10661": 886, "10668": 886, "10681": 886, "timeformat": 886, "yyyi": 886, "_convert_tim": 886, "10674": 886, "kern": 886, "10694": 886, "10572": 886, "10373": 886, "10734": 886, "michiru": 886, "kaneda": 886, "10284": 886, "10749": 886, "10788": 886, "10892": 886, "10940": 886, "vref": 886, "10823": 886, "10979": 886, "_project_onto_surfac": 886, "return_nn": 886, "10930": 886, "10927": 886, "reza": 886, "nasri": 886, "hypnodyn": 886, "zmax": 886, "10754": 886, "frederik": 886, "weber": 886, "10718": 886, "t1t2": 886, "10639": 886, "toivonen": 886, "10217": 886, "wang": 886, "10517": 886, "10470": 886, "dold": 886, "10485": 886, "10487": 886, "10500": 886, "10491": 886, "10662": 886, "10866": 886, "10957": 886, "10513": 886, "10493": 886, "10504": 886, "10705": 886, "10521": 886, "10547": 886, "10543": 886, "10912": 886, "10560": 886, "10619": 886, "10618": 886, "shoorangiz": 886, "10638": 886, "10664": 886, "honor": 886, "10686": 886, "10685": 886, "10688": 886, "8754": 886, "10703": 886, "10730": 886, "10753": 886, "10765": 886, "po6": 886, "blender": 886, "10778": 886, "10802": 886, "10471": 886, "10851": 886, "10898": 886, "10990": 886, "10968": 886, "10936": 886, "10963": 886, "10978": 886, "10531": 886, "bilinear": 886, "set_interpol": 886, "10617": 886, "10715": 886, "10950": 886, "10925": 886, "10945": 886, "adelin": 886, "fecker": 886, "ciok": 886, "archit": 886, "singhal": 886, "ashlei": 886, "beaslei": 886, "dominiqu": 886, "makowski": 886, "hamid": 886, "maymandi": 886, "naveen": 886, "srinivasan": 886, "sondr": 886, "foslien": 886, "10396": 886, "10089": 886, "senwen": 886, "deng": 886, "10076": 886, "zerfowski": 886, "10054": 886, "etienn": 886, "montalivet": 886, "10174": 886, "veillett": 886, "10307": 886, "10281": 886, "9952": 886, "10379": 886, "9922": 886, "9978": 886, "9994": 886, "9929": 886, "concis": 886, "__repr__": 886, "10042": 886, "sosulski": 886, "10056": 886, "10077": 886, "10102": 886, "10058": 886, "10109": 886, "10115": 886, "10119": 886, "10114": 886, "10116": 886, "dpi": 886, "10126": 886, "10129": 886, "10135": 886, "10142": 886, "10166": 886, "10175": 886, "10182": 886, "10186": 886, "10185": 886, "9969": 886, "10019": 886, "10200": 886, "10255": 886, "10202": 886, "9972": 886, "10206": 886, "10220": 886, "10230": 886, "10249": 886, "10243": 886, "10212": 886, "ui": 886, "10222": 886, "10183": 886, "10247": 886, "10297": 886, "10299": 886, "10330": 886, "10384": 886, "10417": 886, "10418": 886, "10408": 886, "subsurfac": 886, "10421": 886, "joshua": 886, "teve": 886, "latin": 886, "10429": 886, "eberlein": 886, "10431": 886, "rawmff": 886, "10304": 886, "10361": 886, "shift_jist": 886, "10356": 886, "10093": 886, "adina": 886, "wagner": 886, "loadtxt": 886, "10189": 886, "federico": 886, "zamberlan": 886, "nikolai": 886, "chapochnikov": 886, "9957": 886, "led": 886, "9966": 886, "9998": 886, "9968": 886, "alphanumer": 886, "10002": 886, "9975": 886, "9980": 886, "9990": 886, "suboptim": 886, "9991": 886, "10004": 886, "9970": 886, "10021": 886, "10040": 886, "10358": 886, "10047": 886, "10399": 886, "10073": 886, "10087": 886, "annotate_": 886, "meas_tim": 886, "10067": 886, "10118": 886, "10074": 886, "10082": 886, "10112": 886, "trip": 886, "10177": 886, "10127": 886, "10132": 886, "10095": 886, "10176": 886, "stout": 886, "10210": 886, "10235": 886, "10267": 886, "german": 886, "de_d": 886, "french": 886, "fr_fr": 886, "italian": 886, "it_it": 886, "10277": 886, "10292": 886, "10309": 886, "10265": 886, "10415": 886, "initial_valu": 886, "10289": 886, "10324": 886, "10342": 886, "10347": 886, "10313": 886, "10400": 886, "10335": 886, "mislead": 886, "10393": 886, "10392": 886, "10401": 886, "9960": 886, "10039": 886, "10348": 886, "annotate_flat": 886, "10143": 886, "max_ori_out": 886, "10366": 886, "10323": 886, "tempita": 886, "10211": 886, "julia": 886, "guiomar": 886, "niso": 886, "gal\u00e1n": 886, "steve": 886, "matindi": 886, "hartmann": 886, "julien": 886, "derollepot": 886, "xiaokai": 886, "xia": 886, "bannier": 886, "darin": 886, "erat": 886, "sleiter": 886, "gate": 886, "evgeni": 886, "goldstein": 886, "riessariu": 886, "stargardski": 886, "9801": 886, "9575": 886, "nirsport2": 886, "9348": 886, "9401": 886, "9376": 886, "9430": 886, "9481": 886, "9637": 886, "9872": 886, "9782": 886, "9858": 886, "9640": 886, "6888": 886, "9892": 886, "9725": 886, "ckdtree": 886, "9568": 886, "9643": 886, "9369": 886, "9427": 886, "9391": 886, "9396": 886, "9424": 886, "9403": 886, "9463": 886, "9431": 886, "9443": 886, "9406": 886, "9438": 886, "datablock": 886, "acquist": 886, "9437": 886, "raimondo": 886, "9445": 886, "9419": 886, "9458": 886, "9444": 886, "9503": 886, "9484": 886, "9697": 886, "9468": 886, "9514": 886, "erica": 886, "9541": 886, "9519": 886, "9525": 886, "9529": 886, "9558": 886, "9555": 886, "9553": 886, "insens": 886, "9544": 886, "9556": 886, "9578": 886, "9570": 886, "9545": 886, "9540": 886, "9601": 886, "9605": 886, "abort": 886, "9614": 886, "9516": 886, "9618": 886, "9658": 886, "9585": 886, "9682": 886, "9684": 886, "9789": 886, "9694": 886, "9586": 886, "9742": 886, "9796": 886, "9763": 886, "9784": 886, "9810": 886, "revamp": 886, "9754": 886, "9847": 886, "9860": 886, "9861": 886, "9862": 886, "9863": 886, "9871": 886, "9881": 886, "9891": 886, "9795": 886, "9800": 886, "9613": 886, "9845": 886, "9851": 886, "9869": 886, "9859": 886, "9687": 886, "9708": 886, "9706": 886, "9378": 886, "9381": 886, "9712": 886, "9719": 886, "chronolog": 886, "9765": 886, "9849": 886, "9897": 886, "9920": 886, "9384": 886, "9404": 886, "9435": 886, "9531": 886, "9447": 886, "assertionerror": 886, "9612": 886, "9831": 886, "protect": 886, "9522": 886, "9485": 886, "9513": 886, "9489": 886, "9524": 886, "9603": 886, "9528": 886, "imposs": 886, "9893": 886, "9535": 886, "9564": 886, "9565": 886, "9629": 886, "9771": 886, "9607": 886, "9663": 886, "9630": 886, "9580": 886, "9758": 886, "dollar": 886, "9695": 886, "9746": 886, "9799": 886, "9804": 886, "9777": 886, "9780": 886, "9933": 886, "9864": 886, "9873": 886, "9940": 886, "9867": 886, "9904": 886, "pysurf": 886, "kit2fiff": 886, "mne_kit_gui": 886, "9505": 886, "9596": 886, "prox": 886, "outperform": 886, "9608": 886, "9493": 886, "9685": 886, "has_": 886, "_data": 886, "9781": 886, "add_figs_to_sect": 886, "add_slider_to_sect": 886, "add_images_to_sect": 886, "add_bem_to_sect": 886, "add_htmls_to_sect": 886, "sort_sect": 886, "9815": 886, "center_cmap": 886, "9843": 886, "detect_artifact": 886, "9909": 886, "fede": 886, "gansheng": 886, "banvil": 886, "josh": 886, "koen": 886, "sumalyo": 886, "datta": 886, "pade": 886, "koehler": 886, "rotem": 886, "falach": 886, "sanderson": 886, "enrico": 886, "varano": 886, "judi": 886, "zhu": 886, "matteo": 886, "anelli": 886, "apoorva": 886, "karek": 886, "silvia": 886, "cotroneo": 886, "maggi": 886, "9192": 886, "9285": 886, "9278": 886, "9124": 886, "9203": 886, "9174": 886, "refactor": 886, "9088": 886, "9156": 886, "9043": 886, "9096": 886, "8867": 886, "8739": 886, "9169": 886, "yokogawa": 886, "8813": 886, "8799": 886, "ipyvtk_simpl": 886, "8503": 886, "8346": 886, "8896": 886, "8723": 886, "8738": 886, "8789": 886, "9268": 886, "8790": 886, "8697": 886, "8801": 886, "8829": 886, "8744": 886, "8762": 886, "9037": 886, "8793": 886, "9262": 886, "keypress": 886, "8806": 886, "starstim": 886, "enobio": 886, "8734": 886, "tristan": 886, "stenner": 886, "8760": 886, "8783": 886, "8822": 886, "8771": 886, "8805": 886, "8794": 886, "auto_clos": 886, "8730": 886, "8841": 886, "yu": 886, "luo": 886, "8858": 886, "checker": 886, "pylanc": 886, "8862": 886, "8874": 886, "interobail": 886, "8868": 886, "qt_mac_wants_lay": 886, "8959": 886, "8879": 886, "8834": 886, "9023": 886, "9015": 886, "9087": 886, "9113": 886, "9118": 886, "9103": 886, "9175": 886, "9149": 886, "9166": 886, "bierer": 886, "9210": 886, "9136": 886, "9241": 886, "9261": 886, "9269": 886, "9270": 886, "9141": 886, "9347": 886, "misbehav": 886, "8013": 886, "9207": 886, "9187": 886, "9151": 886, "9162": 886, "9152": 886, "x_label": 886, "9115": 886, "9062": 886, "8989": 886, "spectral_connect": 886, "8839": 886, "8844": 886, "8311": 886, "macosx": 886, "8688": 886, "8983": 886, "superset": 886, "8675": 886, "8713": 886, "8689": 886, "8954": 886, "8884": 886, "num_sampl": 886, "duration_in_sec": 886, "8712": 886, "8780": 886, "8804": 886, "8842": 886, "8857": 886, "9315": 886, "8956": 886, "9284": 886, "9317": 886, "8845": 886, "8811": 886, "bailei": 886, "8736": 886, "8831": 886, "8728": 886, "8731": 886, "8996": 886, "8752": 886, "8759": 886, "8775": 886, "8800": 886, "8817": 886, "8821": 886, "8856": 886, "8965": 886, "8985": 886, "8891": 886, "8963": 886, "9109": 886, "9178": 886, "9252": 886, "9027": 886, "9236": 886, "9246": 886, "9305": 886, "9277": 886, "9099": 886, "plot_sensors_connect": 886, "cbar_label": 886, "9248": 886, "read_select": 886, "8870": 886, "tf_dic": 886, "9122": 886, "9033": 886, "ana": 886, "radanov": 886, "magalvan": 886, "mista": 886, "christina": 886, "zhao": 886, "giorgio": 886, "marinato": 886, "jori": 886, "den": 886, "bossch": 886, "gensollen": 886, "treguer": 886, "austin": 886, "hurst": 886, "aniket": 886, "pradhan": 886, "hongjiang": 886, "kuziek": 886, "qianliang": 886, "tod": 886, "flak": 886, "8354": 886, "7070": 886, "imgag": 886, "7717": 886, "kyle": 886, "mathewson": 886, "8275": 886, "8445": 886, "keith": 886, "doell": 886, "8553": 886, "8351": 886, "8190": 886, "8539": 886, "8379": 886, "8366": 886, "8642": 886, "8447": 886, "8449": 886, "8402": 886, "8460": 886, "8532": 886, "8482": 886, "8608": 886, "8502": 886, "tqdm": 886, "8515": 886, "8622": 886, "8381": 886, "8584": 886, "8442": 886, "8534": 886, "8624": 886, "8519": 886, "8452": 886, "8415": 886, "8395": 886, "8658": 886, "cascad": 886, "8633": 886, "8580": 886, "8400": 886, "test_egi": 886, "mandatorili": 886, "8474": 886, "8339": 886, "8558": 886, "s390x": 886, "8618": 886, "8594": 886, "8610": 886, "8377": 886, "8285": 886, "8344": 886, "8318": 886, "8637": 886, "8306": 886, "8448": 886, "8283": 886, "name_split": 886, "01_meg": 886, "name_meg": 886, "8464": 886, "8326": 886, "8343": 886, "8425": 886, "8317": 886, "8663": 886, "8320": 886, "8303": 886, "8484": 886, "8349": 886, "max_pca_compon": 886, "max_pca_components_": 886, "8321": 886, "everyhwer": 886, "8368": 886, "8393": 886, "8416": 886, "8434": 886, "8486": 886, "8491": 886, "8492": 886, "8545": 886, "8590": 886, "tukei": 886, "8542": 886, "8520": 886, "8589": 886, "8564": 886, "8605": 886, "8374": 886, "8357": 886, "8356": 886, "8389": 886, "justu": 886, "schwabed": 886, "mad": 886, "jensen": 886, "mikolaj": 886, "rahul": 886, "nadkarni": 886, "lau": 886, "m\u00f8ller": 886, "andersen": 886, "sedivi": 886, "donckt": 886, "svea": 886, "meyer": 886, "lx37": 886, "rai": 886, "n_iter_sdr": 886, "immut": 886, "fxaa": 886, "_split": 886, "_part": 886, "read_raw_xxx": 886, "simpler": 886, "permit": 886, "outermost": 886, "setup_forward_model": 886, "conjug": 886, "throw": 886, "spatio_temporal_src_connect": 886, "find_ch_connect": 886, "read_ch_connect": 886, "spatial_dist_connect": 886, "spatial_inter_hemi_connect": 886, "spatial_src_connect": 886, "spatial_tris_connect": 886, "spatio_temporal_dist_connect": 886, "spatio_temporal_tris_connect": 886, "normalize_fwd": 886, "stc_mix": 886, "read_dig_captrack": 886, "spell": 886, "captrack": 886, "mark_flat": 886, "alejandro": 886, "weinstein": 886, "anton": 886, "nikola": 886, "waniek": 886, "harmelen": 886, "sara": 886, "sommariva": 886, "chapochn": 886, "mshader": 886, "sophi": 886, "herbst": 886, "victor": 886, "ferat": 886, "mohammad": 886, "daneshzand": 886, "reppling": 886, "plv": 886, "dmitrii": 886, "altukhov": 886, "epochs_color": 886, "prepare_bem_model": 886, "compromis": 886, "roc_auc_ovo": 886, "roc_auc_ovo_weight": 886, "sebastian": 886, "old_tim": 886, "subprocess": 886, "htp": 886, "insuffici": 886, "demetr": 886, "kosta": 886, "gridsearchcv": 886, "chun": 886, "hui": 886, "henrich": 886, "kolkhorst": 886, "fu": 886, "geoff": 886, "brookshir": 886, "eegmi_url": 886, "ramiro": 886, "gatti": 886, "get_channel_type_const": 886, "bump": 886, "tandem": 886, "point_spread_funct": 886, "cross_talk_funct": 886, "ariel": 886, "rokem": 886, "jos\u00e9": 886, "garc\u00eda": 886, "moham": 886, "sherif": 886, "nataliia": 886, "kozhemiako": 886, "legrand": 886, "f\u00e9rat": 886, "theodor": 886, "papadopoulo": 886, "markerfil": 886, "dirk": 886, "g\u00fctlin": 886, "10x": 886, "jit": 886, "ryb\u00e1\u0159": 886, "abram": 886, "hindl": 886, "eberhard": 886, "eich": 886, "radman": 886, "hidpi": 886, "pycord": 886, "read_montag": 886, "read_dig_montag": 886, "set_dig": 886, "update_ch_nam": 886, "raise_if_subset": 886, "_smsh_": 886, "_smartshield": 886, "max_tick": 886, "show_legend": 886, "biosig": 886, "nathali": 886, "gayraud": 886, "crist\u00f3bal": 886, "mo\u00ebnn": 886, "loccoz": 886, "mixin": 886, "lslclient": 886, "lsl": 886, "chala": 886, "mocklslstream": 886, "roujanski": 886, "fault": 886, "kovrig": 886, "n_pad": 886, "bruno": 886, "nicenboim": 886, "32bit": 886, "edge_": 886, "v0": 886, "retina": 886, "larri": 886, "eisenman": 886, "mishandl": 886, "haslach": 886, "clean_eog_ecg": 886, "jeythekei": 886, "_criterion": 886, "katarina": 886, "slama": 886, "synthesi": 886, "find_edf_ev": 886, "patch_info": 886, "castano": 886, "finder": 886, "rasmu": 886, "zetter": 886, "orgin": 886, "gsoc": 886, "molfes": 886, "sphx_glr_auto_examples_datasets_plot_opm_rest_data": 886, "gutstein": 886, "trig_shift_by_typ": 886, "read_annotations_brainvis": 886, "get_blas_func": 886, "_compute_covariance_auto": 886, "onewai": 886, "marcin": 886, "koculak": 886, "buildup": 886, "incom": 886, "bethard": 886, "dateutil": 886, "jasper": 886, "bosch": 886, "_current": 886, "unit_noise_gain": 886, "buildqa": 886, "read_annotations_eeglab": 886, "annotmap": 886, "runtimeexcept": 886, "morph_precomput": 886, "compute_morph_matrix": 886, "morph_data_precomput": 886, "pycuda": 886, "warn_explicit": 886, "save_stc_as_volum": 886, "stop_receive_thread": 886, "johan": 886, "meer": 886, "kambiz": 886, "tavabi": 886, "lorenz": 886, "esch": 886, "manu": 886, "sutela": 886, "perri": 886, "sergei": 886, "antopolskii": 886, "teekuninga": 886, "jochmann": 886, "dupr\u00e9": 886, "workaround": 886, "trainsform": 886, "dubarri": 886, "tf_mxne_optim": 886, "mxne_optim": 886, "multidictionari": 886, "image_mask": 886, "csd_epoch": 886, "csd_arrai": 886, "oleh": 886, "kozynet": 886, "lcmv_epoch": 886, "lcmv_raw": 886, "braboszcz": 886, "desislava": 886, "petkova": 886, "krzemi\u0144ski": 886, "hornberg": 886, "juergen": 886, "katrin": 886, "leinweb": 886, "yaroslav": 886, "halchenko": 886, "baptist": 886, "schiratti": 886, "utilis": 886, "dgap_l21l1": 886, "ramonapariciog": 886, "get_pos2d": 886, "\u03c7\u00b2": 886, "writabl": 886, "plot_roi_erpimage_by_rt": 886, "ansi": 886, "codepag": 886, "okba": 886, "bekhelifi": 886, "boggess": 886, "duemos": 886, "nielsen": 886, "luk\u00e1\u0161": 886, "hejtm\u00e1nek": 886, "_virtual": 886, "treatment": 886, "megsim": 886, "mrn": 886, "reformat": 886, "timedecod": 886, "generalizationacrosstim": 886, "plot_gat_tim": 886, "plot_gat_matrix": 886, "read_events_eeglab": 886, "plot_tran": 886, "tf_lcmv": 886, "scale_tim": 886, "scalings_tim": 886, "akshay0724": 886, "rudiuk": 886, "dykstra": 886, "laetitia": 886, "grabot": 886, "proulx": 886, "apariciogarcia": 886, "robin": 886, "tibor": 886, "schirrmeist": 886, "rodrigo": 886, "h\u00fcbner": 886, "toddler": 886, "fasttrack": 886, "brovelli": 886, "_plot_topo_onpick": 886, "nikla": 886, "wilm": 886, "rantala": 886, "_bad_drop": 886, "_filenam": 886, "pasler": 886, "predict_mod": 886, "chanloc": 886, "dgap_l21": 886, "band_pass_filt": 886, "band_stop_filt": 886, "low_pass_filt": 886, "high_pass_filt": 886, "eeg_sensor": 886, "typecheck": 886, "leonardo": 886, "barbosa": 886, "superflu": 886, "hermann": 886, "sonntag": 886, "jakub": 886, "kaczmarzyk": 886, "lorenzo": 886, "alfin": 886, "visconti": 886, "nick": 886, "foti": 886, "pop_prop": 886, "maryland": 886, "preview": 886, "raimundo": 886, "hid": 886, "martinez": 886, "pablo": 886, "aria": 886, "duma": 886, "fieldtripcli": 886, "get_data_as_epoch": 886, "unitsposit": 886, "mullin": 886, "bva": 886, "strictest": 886, "hojlund": 886, "niediek": 886, "add_eeg_ref": 886, "csd_compute_epoch": 886, "ev2": 886, "\u00b5": 886, "aru": 886, "unsupport": 886, "config_opt": 886, "epochsvector": 886, "favour": 886, "cwt_morlet": 886, "single_trial_pow": 886, "committ": 886, "camilo": 886, "lamu": 886, "f\u00e9lix": 886, "kraus": 886, "shlomo": 886, "poil": 886, "show_info": 886, "compute_raw_psd": 886, "compute_epochs_psd": 886, "614990234": 886, "00064103": 886, "99897607": 886, "train_tim": 886, "ecg_criterion": 886, "eog_criterion": 886, "natali": 886, "klein": 886, "coordinan": 886, "ware": 886, "score_mod": 886, "stimserv": 886, "ip": 886, "mesh_color": 886, "multitaper_psd": 886, "vertor": 886, "renorm": 886, "drop_bad_epoch": 886, "drop_epoch": 886, "do_forward_solut": 886, "kaichogami": 886, "cl\u00e9ment": 886, "moutard": 886, "martinbab": 886, "sagun": 886, "pai": 886, "sourav": 886, "kambyses": 886, "pbnsilva": 886, "sviter": 886, "zuxfoucault": 886, "nenonen": 886, "add_eeg_average_proj": 886, "n_samp_tot": 886, "emilyps14": 886, "lennyvarghes": 886, "freeview_bem_surfac": 886, "desanti": 886, "_setup_vmin_vmax": 886, "concatenatechannel": 886, "redesign": 886, "rewrot": 886, "plot_image_epoch": 886, "preload_data": 886, "santi": 886, "roan": 886, "laplant": 886, "wakeman": 886, "add_sect": 886, "marmaduk": 886, "woodman": 886, "whiten_evok": 886, "oddbal": 886, "label_1": 886, "label_2": 886, "savitski": 886, "_baseraw": 886, "prof": 886, "decoupl": 886, "read_hsp": 886, "read_elp": 886, "write_hsp": 886, "write_mrk": 886, "label_time_cours": 886, "as_data_fram": 886, "pick_types_evok": 886, "textbox": 886, "iir_filter_raw": 886, "ingoo": 886, "kj": 886, "basil": 886, "pinsard": 886, "hafeza": 886, "anevar": 886, "manoj": 886, "kumar": 886, "tucker": 886, "ward": 886, "radic": 886, "tack": 886, "equalize_channnel": 886, "s\u00e9bastien": 886, "connector": 886, "cathi": 886, "nangini": 886, "succintli": 886, "breuer": 886, "aesthet": 886, "qunxi": 886, "drop_pick": 886, "labels_from_parc": 886, "parc_from_label": 886, "setno": 886, "plot_": 886, "praveen": 886, "sripad": 886, "tanai": 886, "saket": 886, "choudhari": 886, "brad": 886, "buran": 886, "stimclient": 886, "rtclient": 886, "mockrtclient": 886, "trelli": 886, "ki2fiff": 886, "pick_norm": 886, "write_stc": 886, "olivetti": 886, "kornblith": 886, "smarter": 886, "sources_as_epoch": 886, "psi": 886, "mne_compute_proj_eog": 886, "applicationon": 886, "proj_act": 886, "keep_comp": 886, "dest_comp": 886, "speedup": 886, "clike": 886, "l21": 886, "bessel": 886, "time_to_index": 886, "mne_compute_proj_ecg": 886, "mne_maxfilt": 886, "loui": 886, "thibault": 886, "ellen": 886, "ruzich": 886}, "objects": {"": [[876, 0, 0, "-", "mne"]], "mne": [[259, 1, 1, "", "AcqParserFIF"], [260, 1, 1, "", "Annotations"], [261, 1, 1, "", "BaseEpochs"], [262, 1, 1, "", "BiHemiLabel"], [263, 1, 1, "", "Covariance"], [264, 1, 1, "", "Dipole"], [265, 1, 1, "", "DipoleFixed"], [266, 1, 1, "", "Epochs"], [267, 1, 1, "", "EpochsArray"], [268, 1, 1, "", "Evoked"], [269, 1, 1, "", "EvokedArray"], [270, 1, 1, "", "Forward"], [271, 1, 1, "", "Info"], [272, 1, 1, "", "Label"], [273, 1, 1, "", "MixedSourceEstimate"], [274, 1, 1, "", "MixedVectorSourceEstimate"], [275, 1, 1, "", "Projection"], [276, 1, 1, "", "Report"], [277, 1, 1, "", "SourceEstimate"], [278, 1, 1, "", "SourceMorph"], [279, 1, 1, "", "SourceSpaces"], [280, 1, 1, "", "VectorSourceEstimate"], [281, 1, 1, "", "VolSourceEstimate"], [282, 1, 1, "", "VolVectorSourceEstimate"], [283, 4, 1, "", "add_reference_channels"], [284, 4, 1, "", "add_source_space_distances"], [285, 4, 1, "", "annotations_from_events"], [286, 4, 1, "", "apply_forward"], [287, 4, 1, "", "apply_forward_raw"], [288, 4, 1, "", "average_forward_solutions"], [880, 0, 0, "-", "baseline"], [854, 0, 0, "-", "beamformer"], [256, 0, 0, "-", "bem"], [312, 4, 1, "", "channel_indices_by_type"], [313, 4, 1, "", "channel_type"], [875, 0, 0, "-", "channels"], [875, 0, 0, "-", "chpi"], [355, 4, 1, "", "combine_evoked"], [356, 4, 1, "", "compute_covariance"], [357, 4, 1, "", "compute_proj_epochs"], [358, 4, 1, "", "compute_proj_evoked"], [359, 4, 1, "", "compute_proj_raw"], [360, 4, 1, "", "compute_rank"], [361, 4, 1, "", "compute_raw_covariance"], [362, 4, 1, "", "compute_source_morph"], [363, 4, 1, "", "concatenate_epochs"], [364, 4, 1, "", "concatenate_events"], [365, 4, 1, "", "concatenate_raws"], [366, 4, 1, "", "convert_forward_solution"], [370, 4, 1, "", "count_events"], [374, 4, 1, "", "create_default_subject"], [375, 4, 1, "", "create_info"], [855, 0, 0, "-", "cuda"], [251, 0, 0, "-", "datasets"], [412, 4, 1, "", "decimate_surface"], [252, 0, 0, "-", "decoding"], [432, 4, 1, "", "dig_mri_distances"], [854, 0, 0, "-", "dipole"], [253, 0, 0, "-", "epochs"], [438, 4, 1, "", "equalize_channels"], [253, 0, 0, "-", "event"], [442, 4, 1, "", "events_from_annotations"], [254, 0, 0, "-", "export"], [447, 4, 1, "", "extract_label_time_course"], [875, 0, 0, "-", "filter"], [454, 4, 1, "", "find_events"], [455, 4, 1, "", "find_stim_steps"], [456, 4, 1, "", "fit_dipole"], [461, 4, 1, "", "get_config"], [462, 4, 1, "", "get_config_path"], [463, 4, 1, "", "get_head_surf"], [464, 4, 1, "", "get_meg_helmet_surf"], [465, 4, 1, "", "get_montage_volume_labels"], [466, 4, 1, "", "get_volume_labels_from_aseg"], [467, 4, 1, "", "get_volume_labels_from_src"], [468, 4, 1, "", "grade_to_tris"], [469, 4, 1, "", "grade_to_vertices"], [470, 4, 1, "", "grand_average"], [471, 4, 1, "", "grow_labels"], [474, 4, 1, "", "head_to_mni"], [475, 4, 1, "", "head_to_mri"], [854, 0, 0, "-", "inverse_sparse"], [877, 0, 0, "-", "io"], [516, 4, 1, "", "label_sign_flip"], [517, 4, 1, "", "labels_to_stc"], [518, 4, 1, "", "make_ad_hoc_cov"], [519, 4, 1, "", "make_bem_model"], [520, 4, 1, "", "make_bem_solution"], [521, 4, 1, "", "make_field_map"], [522, 4, 1, "", "make_fixed_length_epochs"], [523, 4, 1, "", "make_fixed_length_events"], [524, 4, 1, "", "make_forward_dipole"], [525, 4, 1, "", "make_forward_solution"], [526, 4, 1, "", "make_sphere_model"], [527, 4, 1, "", "merge_events"], [854, 0, 0, "-", "minimum_norm"], [548, 4, 1, "", "morph_labels"], [549, 4, 1, "", "morph_source_spaces"], [550, 4, 1, "", "open_docs"], [551, 4, 1, "", "open_report"], [552, 4, 1, "", "parse_config"], [553, 4, 1, "", "pick_channels"], [554, 4, 1, "", "pick_channels_cov"], [555, 4, 1, "", "pick_channels_forward"], [556, 4, 1, "", "pick_channels_regexp"], [557, 4, 1, "", "pick_events"], [558, 4, 1, "", "pick_info"], [559, 4, 1, "", "pick_types"], [560, 4, 1, "", "pick_types_forward"], [875, 0, 0, "-", "preprocessing"], [611, 4, 1, "", "random_parcellation"], [612, 4, 1, "", "read_annotations"], [613, 4, 1, "", "read_bem_solution"], [614, 4, 1, "", "read_bem_surfaces"], [615, 4, 1, "", "read_cov"], [616, 4, 1, "", "read_dipole"], [617, 4, 1, "", "read_epochs"], [618, 4, 1, "", "read_epochs_eeglab"], [619, 4, 1, "", "read_epochs_fieldtrip"], [620, 4, 1, "", "read_epochs_kit"], [621, 4, 1, "", "read_events"], [622, 4, 1, "", "read_evoked_besa"], [623, 4, 1, "", "read_evoked_fieldtrip"], [624, 4, 1, "", "read_evokeds"], [625, 4, 1, "", "read_evokeds_mff"], [626, 4, 1, "", "read_forward_solution"], [627, 4, 1, "", "read_freesurfer_lut"], [628, 4, 1, "", "read_label"], [629, 4, 1, "", "read_labels_from_annot"], [630, 4, 1, "", "read_lta"], [631, 4, 1, "", "read_morph_map"], [632, 4, 1, "", "read_proj"], [633, 4, 1, "", "read_reject_parameters"], [634, 4, 1, "", "read_source_estimate"], [635, 4, 1, "", "read_source_morph"], [636, 4, 1, "", "read_source_spaces"], [637, 4, 1, "", "read_surface"], [638, 4, 1, "", "read_talxfm"], [639, 4, 1, "", "read_trans"], [640, 4, 1, "", "read_tri"], [641, 4, 1, "", "read_vectorview_selection"], [642, 4, 1, "", "rename_channels"], [643, 4, 1, "", "scale_bem"], [644, 4, 1, "", "scale_labels"], [645, 4, 1, "", "scale_mri"], [646, 4, 1, "", "scale_source_space"], [647, 4, 1, "", "sensitivity_map"], [648, 4, 1, "", "set_bipolar_reference"], [649, 4, 1, "", "set_cache_dir"], [650, 4, 1, "", "set_config"], [651, 4, 1, "", "set_eeg_reference"], [652, 4, 1, "", "set_log_file"], [653, 4, 1, "", "set_log_level"], [654, 4, 1, "", "setup_source_space"], [655, 4, 1, "", "setup_volume_source_space"], [881, 0, 0, "-", "simulation"], [676, 4, 1, "", "spatial_dist_adjacency"], [677, 4, 1, "", "spatial_inter_hemi_adjacency"], [678, 4, 1, "", "spatial_src_adjacency"], [679, 4, 1, "", "spatial_tris_adjacency"], [680, 4, 1, "", "spatio_temporal_dist_adjacency"], [681, 4, 1, "", "spatio_temporal_src_adjacency"], [682, 4, 1, "", "spatio_temporal_tris_adjacency"], [683, 4, 1, "", "split_label"], [883, 0, 0, "-", "stats"], [701, 4, 1, "", "stc_near_sensors"], [702, 4, 1, "", "stc_to_label"], [705, 4, 1, "", "sys_info"], [884, 0, 0, "-", "time_frequency"], [740, 4, 1, "", "transform_surface_to"], [875, 0, 0, "-", "transforms"], [748, 4, 1, "", "use_coil_def"], [749, 1, 1, "", "use_log_level"], [855, 0, 0, "-", "utils"], [752, 4, 1, "", "verbose"], [753, 4, 1, "", "vertex_to_mni"], [885, 0, 0, "-", "viz"], [827, 4, 1, "", "what"], [828, 4, 1, "", "write_bem_solution"], [829, 4, 1, "", "write_bem_surfaces"], [830, 4, 1, "", "write_cov"], [831, 4, 1, "", "write_events"], [832, 4, 1, "", "write_evokeds"], [833, 4, 1, "", "write_forward_solution"], [834, 4, 1, "", "write_head_bem"], [835, 4, 1, "", "write_label"], [836, 4, 1, "", "write_labels_to_annot"], [837, 4, 1, "", "write_proj"], [838, 4, 1, "", "write_source_spaces"], [839, 4, 1, "", "write_surface"], [840, 4, 1, "", "write_trans"]], "mne.AcqParserFIF": [[259, 2, 1, "", "__getitem__"], [259, 2, 1, "", "__len__"], [259, 3, 1, "", "categories"], [259, 3, 1, "", "events"], [259, 2, 1, "", "get_condition"]], "mne.Annotations": [[260, 2, 1, "", "__add__"], [260, 2, 1, "", "__getitem__"], [260, 2, 1, "", "__iter__"], [260, 2, 1, "", "__len__"], [260, 2, 1, "", "append"], [260, 2, 1, "", "copy"], [260, 2, 1, "", "crop"], [260, 2, 1, "", "delete"], [260, 3, 1, "", "orig_time"], [260, 2, 1, "", "rename"], [260, 2, 1, "", "save"], [260, 2, 1, "", "set_durations"], [260, 2, 1, "", "to_data_frame"]], "mne.BiHemiLabel": [[262, 2, 1, "", "__add__"], [262, 2, 1, "", "__len__"], [262, 2, 1, "", "__sub__"]], "mne.Covariance": [[263, 2, 1, "", "__add__"], [263, 2, 1, "", "__contains__"], [263, 2, 1, "", "__getitem__"], [263, 2, 1, "", "__iter__"], [263, 2, 1, "", "__len__"], [263, 2, 1, "", "as_diag"], [263, 3, 1, "", "ch_names"], [263, 2, 1, "", "clear"], [263, 2, 1, "", "copy"], [263, 3, 1, "", "data"], [263, 2, 1, "", "fromkeys"], [263, 2, 1, "", "get"], [263, 2, 1, "", "items"], [263, 2, 1, "", "keys"], [263, 3, 1, "", "nfree"], [263, 2, 1, "", "pick_channels"], [263, 2, 1, "", "plot"], [263, 2, 1, "", "plot_topomap"], [263, 2, 1, "", "pop"], [263, 2, 1, "", "popitem"], [263, 2, 1, "", "save"], [263, 2, 1, "", "setdefault"], [263, 2, 1, "", "update"], [263, 2, 1, "", "values"]], "mne.Dipole": [[264, 2, 1, "", "__getitem__"], [264, 2, 1, "", "__len__"], [264, 2, 1, "", "copy"], [264, 2, 1, "", "crop"], [264, 2, 1, "", "decimate"], [264, 2, 1, "", "plot_amplitudes"], [264, 2, 1, "", "plot_locations"], [264, 2, 1, "", "save"], [264, 2, 1, "", "shift_time"], [264, 2, 1, "", "time_as_index"], [264, 3, 1, "", "times"], [264, 3, 1, "", "tmax"], [264, 3, 1, "", "tmin"], [264, 2, 1, "", "to_mni"], [264, 2, 1, "", "to_mri"], [264, 2, 1, "", "to_volume_labels"]], "mne.DipoleFixed": [[265, 3, 1, "", "ch_names"], [265, 2, 1, "", "copy"], [265, 2, 1, "", "crop"], [265, 2, 1, "", "decimate"], [265, 2, 1, "", "plot"], [265, 2, 1, "", "save"], [265, 2, 1, "", "shift_time"], [265, 2, 1, "", "time_as_index"], [265, 3, 1, "", "times"], [265, 3, 1, "", "tmax"], [265, 3, 1, "", "tmin"]], "mne.Epochs": [[266, 2, 1, "", "__contains__"], [266, 2, 1, "", "__getitem__"], [266, 2, 1, "", "__iter__"], [266, 2, 1, "", "__len__"], [266, 2, 1, "", "add_annotations_to_metadata"], [266, 2, 1, "", "add_channels"], [266, 2, 1, "", "add_proj"], [266, 2, 1, "", "add_reference_channels"], [266, 2, 1, "", "anonymize"], [266, 2, 1, "", "apply_baseline"], [266, 2, 1, "", "apply_function"], [266, 2, 1, "", "apply_hilbert"], [266, 2, 1, "", "apply_proj"], [266, 2, 1, "", "as_type"], [266, 2, 1, "", "average"], [266, 3, 1, "", "ch_names"], [266, 3, 1, "", "compensation_grade"], [266, 2, 1, "", "compute_psd"], [266, 2, 1, "", "copy"], [266, 2, 1, "", "crop"], [266, 2, 1, "", "decimate"], [266, 2, 1, "", "del_proj"], [266, 2, 1, "", "drop"], [266, 2, 1, "", "drop_bad"], [266, 2, 1, "", "drop_channels"], [266, 2, 1, "", "drop_log_stats"], [266, 2, 1, "", "equalize_event_counts"], [266, 2, 1, "", "export"], [266, 3, 1, "", "filename"], [266, 2, 1, "", "filter"], [266, 2, 1, "", "get_annotations_per_epoch"], [266, 2, 1, "", "get_channel_types"], [266, 2, 1, "", "get_data"], [266, 2, 1, "", "get_montage"], [266, 2, 1, "", "interpolate_bads"], [266, 2, 1, "", "iter_evoked"], [266, 2, 1, "", "load_data"], [266, 3, 1, "", "metadata"], [266, 2, 1, "", "next"], [266, 2, 1, "", "pick"], [266, 2, 1, "", "pick_channels"], [266, 2, 1, "", "pick_types"], [266, 2, 1, "", "plot"], [266, 2, 1, "", "plot_drop_log"], [266, 2, 1, "", "plot_image"], [266, 2, 1, "", "plot_projs_topomap"], [266, 2, 1, "", "plot_psd"], [266, 2, 1, "", "plot_psd_topo"], [266, 2, 1, "", "plot_psd_topomap"], [266, 2, 1, "", "plot_sensors"], [266, 2, 1, "", "plot_topo_image"], [266, 3, 1, "", "proj"], [266, 2, 1, "", "rename_channels"], [266, 2, 1, "", "reorder_channels"], [266, 2, 1, "", "resample"], [266, 2, 1, "", "reset_drop_log_selection"], [266, 2, 1, "", "save"], [266, 2, 1, "", "savgol_filter"], [266, 2, 1, "", "set_annotations"], [266, 2, 1, "", "set_channel_types"], [266, 2, 1, "", "set_eeg_reference"], [266, 2, 1, "", "set_meas_date"], [266, 2, 1, "", "set_montage"], [266, 2, 1, "", "shift_time"], [266, 2, 1, "", "standard_error"], [266, 2, 1, "", "subtract_evoked"], [266, 2, 1, "", "time_as_index"], [266, 3, 1, "", "times"], [266, 3, 1, "", "tmax"], [266, 3, 1, "", "tmin"], [266, 2, 1, "", "to_data_frame"]], "mne.EpochsArray": [[267, 2, 1, "", "__contains__"], [267, 2, 1, "", "__getitem__"], [267, 2, 1, "", "__iter__"], [267, 2, 1, "", "__len__"], [267, 2, 1, "", "add_annotations_to_metadata"], [267, 2, 1, "", "add_channels"], [267, 2, 1, "", "add_proj"], [267, 2, 1, "", "add_reference_channels"], [267, 2, 1, "", "anonymize"], [267, 2, 1, "", "apply_baseline"], [267, 2, 1, "", "apply_function"], [267, 2, 1, "", "apply_hilbert"], [267, 2, 1, "", "apply_proj"], [267, 2, 1, "", "as_type"], [267, 2, 1, "", "average"], [267, 3, 1, "", "ch_names"], [267, 3, 1, "", "compensation_grade"], [267, 2, 1, "", "compute_psd"], [267, 2, 1, "", "copy"], [267, 2, 1, "", "crop"], [267, 2, 1, "", "decimate"], [267, 2, 1, "", "del_proj"], [267, 2, 1, "", "drop"], [267, 2, 1, "", "drop_bad"], [267, 2, 1, "", "drop_channels"], [267, 2, 1, "", "drop_log_stats"], [267, 2, 1, "", "equalize_event_counts"], [267, 2, 1, "", "export"], [267, 3, 1, "", "filename"], [267, 2, 1, "", "filter"], [267, 2, 1, "", "get_annotations_per_epoch"], [267, 2, 1, "", "get_channel_types"], [267, 2, 1, "", "get_data"], [267, 2, 1, "", "get_montage"], [267, 2, 1, "", "interpolate_bads"], [267, 2, 1, "", "iter_evoked"], [267, 2, 1, "", "load_data"], [267, 3, 1, "", "metadata"], [267, 2, 1, "", "next"], [267, 2, 1, "", "pick"], [267, 2, 1, "", "pick_channels"], [267, 2, 1, "", "pick_types"], [267, 2, 1, "", "plot"], [267, 2, 1, "", "plot_drop_log"], [267, 2, 1, "", "plot_image"], [267, 2, 1, "", "plot_projs_topomap"], [267, 2, 1, "", "plot_psd"], [267, 2, 1, "", "plot_psd_topo"], [267, 2, 1, "", "plot_psd_topomap"], [267, 2, 1, "", "plot_sensors"], [267, 2, 1, "", "plot_topo_image"], [267, 3, 1, "", "proj"], [267, 2, 1, "", "rename_channels"], [267, 2, 1, "", "reorder_channels"], [267, 2, 1, "", "resample"], [267, 2, 1, "", "reset_drop_log_selection"], [267, 2, 1, "", "save"], [267, 2, 1, "", "savgol_filter"], [267, 2, 1, "", "set_annotations"], [267, 2, 1, "", "set_channel_types"], [267, 2, 1, "", "set_eeg_reference"], [267, 2, 1, "", "set_meas_date"], [267, 2, 1, "", "set_montage"], [267, 2, 1, "", "shift_time"], [267, 2, 1, "", "standard_error"], [267, 2, 1, "", "subtract_evoked"], [267, 2, 1, "", "time_as_index"], [267, 3, 1, "", "times"], [267, 3, 1, "", "tmax"], [267, 3, 1, "", "tmin"], [267, 2, 1, "", "to_data_frame"]], "mne.Evoked": [[268, 2, 1, "", "__contains__"], [268, 2, 1, "", "__neg__"], [268, 2, 1, "", "add_channels"], [268, 2, 1, "", "add_proj"], [268, 2, 1, "", "add_reference_channels"], [268, 2, 1, "", "animate_topomap"], [268, 2, 1, "", "anonymize"], [268, 2, 1, "", "apply_baseline"], [268, 2, 1, "", "apply_function"], [268, 2, 1, "", "apply_hilbert"], [268, 2, 1, "", "apply_proj"], [268, 2, 1, "", "as_type"], [268, 3, 1, "", "ch_names"], [268, 3, 1, "", "compensation_grade"], [268, 2, 1, "", "compute_psd"], [268, 2, 1, "", "copy"], [268, 2, 1, "", "crop"], [268, 3, 1, "", "data"], [268, 2, 1, "", "decimate"], [268, 2, 1, "", "del_proj"], [268, 2, 1, "", "detrend"], [268, 2, 1, "", "drop_channels"], [268, 2, 1, "", "export"], [268, 2, 1, "", "filter"], [268, 2, 1, "", "get_channel_types"], [268, 2, 1, "", "get_data"], [268, 2, 1, "", "get_montage"], [268, 2, 1, "", "get_peak"], [268, 2, 1, "", "interpolate_bads"], [268, 3, 1, "", "kind"], [268, 2, 1, "", "pick"], [268, 2, 1, "", "pick_channels"], [268, 2, 1, "", "pick_types"], [268, 2, 1, "", "plot"], [268, 2, 1, "", "plot_field"], [268, 2, 1, "", "plot_image"], [268, 2, 1, "", "plot_joint"], [268, 2, 1, "", "plot_projs_topomap"], [268, 2, 1, "", "plot_psd"], [268, 2, 1, "", "plot_psd_topo"], [268, 2, 1, "", "plot_psd_topomap"], [268, 2, 1, "", "plot_sensors"], [268, 2, 1, "", "plot_topo"], [268, 2, 1, "", "plot_topomap"], [268, 2, 1, "", "plot_white"], [268, 3, 1, "", "proj"], [268, 2, 1, "", "rename_channels"], [268, 2, 1, "", "reorder_channels"], [268, 2, 1, "", "resample"], [268, 2, 1, "", "save"], [268, 2, 1, "", "savgol_filter"], [268, 2, 1, "", "set_channel_types"], [268, 2, 1, "", "set_eeg_reference"], [268, 2, 1, "", "set_meas_date"], [268, 2, 1, "", "set_montage"], [268, 2, 1, "", "shift_time"], [268, 2, 1, "", "time_as_index"], [268, 3, 1, "", "times"], [268, 3, 1, "", "tmax"], [268, 3, 1, "", "tmin"], [268, 2, 1, "", "to_data_frame"]], "mne.EvokedArray": [[269, 2, 1, "", "__contains__"], [269, 2, 1, "", "__neg__"], [269, 2, 1, "", "add_channels"], [269, 2, 1, "", "add_proj"], [269, 2, 1, "", "add_reference_channels"], [269, 2, 1, "", "animate_topomap"], [269, 2, 1, "", "anonymize"], [269, 2, 1, "", "apply_baseline"], [269, 2, 1, "", "apply_function"], [269, 2, 1, "", "apply_hilbert"], [269, 2, 1, "", "apply_proj"], [269, 2, 1, "", "as_type"], [269, 3, 1, "", "ch_names"], [269, 3, 1, "", "compensation_grade"], [269, 2, 1, "", "compute_psd"], [269, 2, 1, "", "copy"], [269, 2, 1, "", "crop"], [269, 3, 1, "", "data"], [269, 2, 1, "", "decimate"], [269, 2, 1, "", "del_proj"], [269, 2, 1, "", "detrend"], [269, 2, 1, "", "drop_channels"], [269, 2, 1, "", "export"], [269, 2, 1, "", "filter"], [269, 2, 1, "", "get_channel_types"], [269, 2, 1, "", "get_data"], [269, 2, 1, "", "get_montage"], [269, 2, 1, "", "get_peak"], [269, 2, 1, "", "interpolate_bads"], [269, 3, 1, "", "kind"], [269, 2, 1, "", "pick"], [269, 2, 1, "", "pick_channels"], [269, 2, 1, "", "pick_types"], [269, 2, 1, "", "plot"], [269, 2, 1, "", "plot_field"], [269, 2, 1, "", "plot_image"], [269, 2, 1, "", "plot_joint"], [269, 2, 1, "", "plot_projs_topomap"], [269, 2, 1, "", "plot_psd"], [269, 2, 1, "", "plot_psd_topo"], [269, 2, 1, "", "plot_psd_topomap"], [269, 2, 1, "", "plot_sensors"], [269, 2, 1, "", "plot_topo"], [269, 2, 1, "", "plot_topomap"], [269, 2, 1, "", "plot_white"], [269, 3, 1, "", "proj"], [269, 2, 1, "", "rename_channels"], [269, 2, 1, "", "reorder_channels"], [269, 2, 1, "", "resample"], [269, 2, 1, "", "save"], [269, 2, 1, "", "savgol_filter"], [269, 2, 1, "", "set_channel_types"], [269, 2, 1, "", "set_eeg_reference"], [269, 2, 1, "", "set_meas_date"], [269, 2, 1, "", "set_montage"], [269, 2, 1, "", "shift_time"], [269, 2, 1, "", "time_as_index"], [269, 3, 1, "", "times"], [269, 3, 1, "", "tmax"], [269, 3, 1, "", "tmin"], [269, 2, 1, "", "to_data_frame"]], "mne.Forward": [[270, 2, 1, "", "copy"], [270, 2, 1, "", "pick_channels"]], "mne.Info": [[271, 2, 1, "", "__contains__"], [271, 2, 1, "", "__getitem__"], [271, 2, 1, "", "__iter__"], [271, 2, 1, "", "__len__"], [271, 2, 1, "", "clear"], [271, 3, 1, "", "compensation_grade"], [271, 2, 1, "", "copy"], [271, 2, 1, "", "fromkeys"], [271, 2, 1, "", "get"], [271, 2, 1, "", "get_channel_types"], [271, 2, 1, "", "get_montage"], [271, 2, 1, "", "items"], [271, 2, 1, "", "keys"], [271, 2, 1, "", "normalize_proj"], [271, 2, 1, "", "pop"], [271, 2, 1, "", "popitem"], [271, 2, 1, "", "save"], [271, 2, 1, "", "set_montage"], [271, 2, 1, "", "setdefault"], [271, 2, 1, "", "update"], [271, 2, 1, "", "values"]], "mne.Label": [[272, 2, 1, "", "__add__"], [272, 2, 1, "", "__len__"], [272, 2, 1, "", "__sub__"], [272, 2, 1, "", "center_of_mass"], [272, 2, 1, "", "compute_area"], [272, 2, 1, "", "copy"], [272, 2, 1, "", "distances_to_outside"], [272, 2, 1, "", "fill"], [272, 2, 1, "", "get_tris"], [272, 2, 1, "", "get_vertices_used"], [272, 2, 1, "", "morph"], [272, 2, 1, "", "restrict"], [272, 2, 1, "", "save"], [272, 2, 1, "", "smooth"], [272, 2, 1, "", "split"]], "mne.MixedSourceEstimate": [[273, 2, 1, "", "__add__"], [273, 2, 1, "", "__div__"], [273, 2, 1, "", "__mul__"], [273, 2, 1, "", "__neg__"], [273, 2, 1, "", "__sub__"], [273, 2, 1, "", "apply_baseline"], [273, 2, 1, "", "bin"], [273, 2, 1, "", "copy"], [273, 2, 1, "", "crop"], [273, 3, 1, "", "data"], [273, 2, 1, "", "decimate"], [273, 2, 1, "", "extract_label_time_course"], [273, 2, 1, "", "get_peak"], [273, 2, 1, "", "mean"], [273, 2, 1, "", "plot"], [273, 2, 1, "", "resample"], [273, 2, 1, "", "save"], [273, 3, 1, "", "sfreq"], [273, 3, 1, "", "shape"], [273, 2, 1, "", "shift_time"], [273, 2, 1, "", "sqrt"], [273, 2, 1, "", "sum"], [273, 2, 1, "", "surface"], [273, 2, 1, "", "time_as_index"], [273, 3, 1, "", "times"], [273, 3, 1, "", "tmax"], [273, 3, 1, "", "tmin"], [273, 2, 1, "", "to_data_frame"], [273, 2, 1, "", "transform"], [273, 2, 1, "", "transform_data"], [273, 3, 1, "", "tstep"], [273, 2, 1, "", "volume"]], "mne.MixedVectorSourceEstimate": [[274, 2, 1, "", "__add__"], [274, 2, 1, "", "__div__"], [274, 2, 1, "", "__mul__"], [274, 2, 1, "", "__neg__"], [274, 2, 1, "", "__sub__"], [274, 2, 1, "", "apply_baseline"], [274, 2, 1, "", "bin"], [274, 2, 1, "", "copy"], [274, 2, 1, "", "crop"], [274, 3, 1, "", "data"], [274, 2, 1, "", "decimate"], [274, 2, 1, "", "extract_label_time_course"], [274, 2, 1, "", "get_peak"], [274, 2, 1, "", "magnitude"], [274, 2, 1, "", "mean"], [274, 2, 1, "", "plot"], [274, 2, 1, "", "project"], [274, 2, 1, "", "resample"], [274, 2, 1, "", "save"], [274, 3, 1, "", "sfreq"], [274, 3, 1, "", "shape"], [274, 2, 1, "", "shift_time"], [274, 2, 1, "", "sqrt"], [274, 2, 1, "", "sum"], [274, 2, 1, "", "surface"], [274, 2, 1, "", "time_as_index"], [274, 3, 1, "", "times"], [274, 3, 1, "", "tmax"], [274, 3, 1, "", "tmin"], [274, 2, 1, "", "to_data_frame"], [274, 2, 1, "", "transform"], [274, 2, 1, "", "transform_data"], [274, 3, 1, "", "tstep"], [274, 2, 1, "", "volume"]], "mne.Projection": [[275, 2, 1, "", "__contains__"], [275, 2, 1, "", "__getitem__"], [275, 2, 1, "", "__iter__"], [275, 2, 1, "", "__len__"], [275, 2, 1, "", "clear"], [275, 2, 1, "", "copy"], [275, 2, 1, "", "fromkeys"], [275, 2, 1, "", "get"], [275, 2, 1, "", "items"], [275, 2, 1, "", "keys"], [275, 2, 1, "", "plot_topomap"], [275, 2, 1, "", "pop"], [275, 2, 1, "", "popitem"], [275, 2, 1, "", "setdefault"], [275, 2, 1, "", "update"], [275, 2, 1, "", "values"]], "mne.Report": [[276, 2, 1, "", "__len__"], [276, 2, 1, "", "add_bem"], [276, 2, 1, "", "add_code"], [276, 2, 1, "", "add_covariance"], [276, 2, 1, "", "add_custom_css"], [276, 2, 1, "", "add_custom_js"], [276, 2, 1, "", "add_epochs"], [276, 2, 1, "", "add_events"], [276, 2, 1, "", "add_evokeds"], [276, 2, 1, "", "add_figure"], [276, 2, 1, "", "add_forward"], [276, 2, 1, "", "add_html"], [276, 2, 1, "", "add_ica"], [276, 2, 1, "", "add_image"], [276, 2, 1, "", "add_inverse_operator"], [276, 2, 1, "", "add_projs"], [276, 2, 1, "", "add_raw"], [276, 2, 1, "", "add_stc"], [276, 2, 1, "", "add_sys_info"], [276, 2, 1, "", "add_trans"], [276, 3, 1, "", "html"], [276, 2, 1, "", "parse_folder"], [276, 2, 1, "", "remove"], [276, 2, 1, "", "save"], [276, 3, 1, "", "tags"]], "mne.SourceEstimate": [[277, 2, 1, "", "__add__"], [277, 2, 1, "", "__div__"], [277, 2, 1, "", "__mul__"], [277, 2, 1, "", "__neg__"], [277, 2, 1, "", "__sub__"], [277, 2, 1, "", "apply_baseline"], [277, 2, 1, "", "bin"], [277, 2, 1, "", "center_of_mass"], [277, 2, 1, "", "copy"], [277, 2, 1, "", "crop"], [277, 3, 1, "", "data"], [277, 2, 1, "", "decimate"], [277, 2, 1, "", "estimate_snr"], [277, 2, 1, "", "expand"], [277, 2, 1, "", "extract_label_time_course"], [277, 2, 1, "", "get_peak"], [277, 2, 1, "", "in_label"], [277, 3, 1, "", "lh_data"], [277, 3, 1, "", "lh_vertno"], [277, 2, 1, "", "mean"], [277, 2, 1, "", "plot"], [277, 2, 1, "", "resample"], [277, 3, 1, "", "rh_data"], [277, 3, 1, "", "rh_vertno"], [277, 2, 1, "", "save"], [277, 3, 1, "", "sfreq"], [277, 3, 1, "", "shape"], [277, 2, 1, "", "shift_time"], [277, 2, 1, "", "sqrt"], [277, 2, 1, "", "sum"], [277, 2, 1, "", "time_as_index"], [277, 3, 1, "", "times"], [277, 3, 1, "", "tmax"], [277, 3, 1, "", "tmin"], [277, 2, 1, "", "to_data_frame"], [277, 2, 1, "", "to_original_src"], [277, 2, 1, "", "transform"], [277, 2, 1, "", "transform_data"], [277, 3, 1, "", "tstep"]], "mne.SourceMorph": [[278, 2, 1, "", "apply"], [278, 2, 1, "", "compute_vol_morph_mat"], [278, 2, 1, "", "save"]], "mne.SourceSpaces": [[279, 2, 1, "", "__add__"], [279, 2, 1, "", "__getitem__"], [279, 2, 1, "", "copy"], [279, 2, 1, "", "export_volume"], [279, 2, 1, "", "plot"], [279, 2, 1, "", "save"]], "mne.VectorSourceEstimate": [[280, 2, 1, "", "__add__"], [280, 2, 1, "", "__div__"], [280, 2, 1, "", "__mul__"], [280, 2, 1, "", "__neg__"], [280, 2, 1, "", "__sub__"], [280, 2, 1, "", "apply_baseline"], [280, 2, 1, "", "bin"], [280, 2, 1, "", "copy"], [280, 2, 1, "", "crop"], [280, 3, 1, "", "data"], [280, 2, 1, "", "decimate"], [280, 2, 1, "", "expand"], [280, 2, 1, "", "extract_label_time_course"], [280, 2, 1, "", "get_peak"], [280, 2, 1, "", "in_label"], [280, 3, 1, "", "lh_data"], [280, 3, 1, "", "lh_vertno"], [280, 2, 1, "", "magnitude"], [280, 2, 1, "", "mean"], [280, 2, 1, "", "plot"], [280, 2, 1, "", "project"], [280, 2, 1, "", "resample"], [280, 3, 1, "", "rh_data"], [280, 3, 1, "", "rh_vertno"], [280, 2, 1, "", "save"], [280, 3, 1, "", "sfreq"], [280, 3, 1, "", "shape"], [280, 2, 1, "", "shift_time"], [280, 2, 1, "", "sqrt"], [280, 2, 1, "", "sum"], [280, 2, 1, "", "time_as_index"], [280, 3, 1, "", "times"], [280, 3, 1, "", "tmax"], [280, 3, 1, "", "tmin"], [280, 2, 1, "", "to_data_frame"], [280, 2, 1, "", "to_original_src"], [280, 2, 1, "", "transform"], [280, 2, 1, "", "transform_data"], [280, 3, 1, "", "tstep"]], "mne.VolSourceEstimate": [[281, 2, 1, "", "__add__"], [281, 2, 1, "", "__div__"], [281, 2, 1, "", "__mul__"], [281, 2, 1, "", "__neg__"], [281, 2, 1, "", "__sub__"], [281, 2, 1, "", "apply_baseline"], [281, 2, 1, "", "as_volume"], [281, 2, 1, "", "bin"], [281, 2, 1, "", "copy"], [281, 2, 1, "", "crop"], [281, 3, 1, "", "data"], [281, 2, 1, "", "decimate"], [281, 2, 1, "", "extract_label_time_course"], [281, 2, 1, "", "get_peak"], [281, 2, 1, "", "in_label"], [281, 2, 1, "", "mean"], [281, 2, 1, "", "plot"], [281, 2, 1, "", "plot_3d"], [281, 2, 1, "", "resample"], [281, 2, 1, "", "save"], [281, 2, 1, "", "save_as_volume"], [281, 3, 1, "", "sfreq"], [281, 3, 1, "", "shape"], [281, 2, 1, "", "shift_time"], [281, 2, 1, "", "sqrt"], [281, 2, 1, "", "sum"], [281, 2, 1, "", "time_as_index"], [281, 3, 1, "", "times"], [281, 3, 1, "", "tmax"], [281, 3, 1, "", "tmin"], [281, 2, 1, "", "to_data_frame"], [281, 2, 1, "", "transform"], [281, 2, 1, "", "transform_data"], [281, 3, 1, "", "tstep"]], "mne.VolVectorSourceEstimate": [[282, 2, 1, "", "__add__"], [282, 2, 1, "", "__div__"], [282, 2, 1, "", "__mul__"], [282, 2, 1, "", "__neg__"], [282, 2, 1, "", "__sub__"], [282, 2, 1, "", "apply_baseline"], [282, 2, 1, "", "as_volume"], [282, 2, 1, "", "bin"], [282, 2, 1, "", "copy"], [282, 2, 1, "", "crop"], [282, 3, 1, "", "data"], [282, 2, 1, "", "decimate"], [282, 2, 1, "", "extract_label_time_course"], [282, 2, 1, "", "get_peak"], [282, 2, 1, "", "in_label"], [282, 2, 1, "", "magnitude"], [282, 2, 1, "", "mean"], [282, 2, 1, "", "plot"], [282, 2, 1, "", "plot_3d"], [282, 2, 1, "", "project"], [282, 2, 1, "", "resample"], [282, 2, 1, "", "save"], [282, 2, 1, "", "save_as_volume"], [282, 3, 1, "", "sfreq"], [282, 3, 1, "", "shape"], [282, 2, 1, "", "shift_time"], [282, 2, 1, "", "sqrt"], [282, 2, 1, "", "sum"], [282, 2, 1, "", "time_as_index"], [282, 3, 1, "", "times"], [282, 3, 1, "", "tmax"], [282, 3, 1, "", "tmin"], [282, 2, 1, "", "to_data_frame"], [282, 2, 1, "", "transform"], [282, 2, 1, "", "transform_data"], [282, 3, 1, "", "tstep"]], "mne.baseline": [[289, 4, 1, "", "rescale"]], "mne.beamformer": [[290, 1, 1, "", "Beamformer"], [291, 4, 1, "", "apply_dics"], [292, 4, 1, "", "apply_dics_csd"], [293, 4, 1, "", "apply_dics_epochs"], [294, 4, 1, "", "apply_dics_tfr_epochs"], [295, 4, 1, "", "apply_lcmv"], [296, 4, 1, "", "apply_lcmv_cov"], [297, 4, 1, "", "apply_lcmv_epochs"], [298, 4, 1, "", "apply_lcmv_raw"], [299, 4, 1, "", "make_dics"], [300, 4, 1, "", "make_lcmv"], [301, 4, 1, "", "make_lcmv_resolution_matrix"], [302, 4, 1, "", "rap_music"], [303, 4, 1, "", "read_beamformer"]], "mne.beamformer.Beamformer": [[290, 2, 1, "", "__contains__"], [290, 2, 1, "", "__getitem__"], [290, 2, 1, "", "__iter__"], [290, 2, 1, "", "__len__"], [290, 2, 1, "", "clear"], [290, 2, 1, "", "copy"], [290, 2, 1, "", "fromkeys"], [290, 2, 1, "", "get"], [290, 2, 1, "", "items"], [290, 2, 1, "", "keys"], [290, 2, 1, "", "pop"], [290, 2, 1, "", "popitem"], [290, 2, 1, "", "save"], [290, 2, 1, "", "setdefault"], [290, 2, 1, "", "update"], [290, 2, 1, "", "values"]], "mne.bem": [[304, 1, 1, "", "ConductorModel"], [305, 4, 1, "", "convert_flash_mris"], [306, 4, 1, "", "distance_to_bem"], [307, 4, 1, "", "fit_sphere_to_headshape"], [308, 4, 1, "", "get_fitting_dig"], [309, 4, 1, "", "make_flash_bem"], [310, 4, 1, "", "make_scalp_surfaces"], [311, 4, 1, "", "make_watershed_bem"]], "mne.bem.ConductorModel": [[304, 2, 1, "", "__contains__"], [304, 2, 1, "", "__getitem__"], [304, 2, 1, "", "__iter__"], [304, 2, 1, "", "__len__"], [304, 2, 1, "", "clear"], [304, 2, 1, "", "copy"], [304, 2, 1, "", "fromkeys"], [304, 2, 1, "", "get"], [304, 2, 1, "", "items"], [304, 2, 1, "", "keys"], [304, 2, 1, "", "pop"], [304, 2, 1, "", "popitem"], [304, 3, 1, "", "radius"], [304, 2, 1, "", "setdefault"], [304, 2, 1, "", "update"], [304, 2, 1, "", "values"]], "mne.channels": [[314, 1, 1, "", "DigMontage"], [315, 1, 1, "", "Layout"], [316, 4, 1, "", "combine_channels"], [317, 4, 1, "", "compute_dev_head_t"], [318, 4, 1, "", "compute_native_head_t"], [319, 4, 1, "", "equalize_channels"], [320, 4, 1, "", "find_ch_adjacency"], [321, 4, 1, "", "find_layout"], [322, 4, 1, "", "fix_mag_coil_types"], [323, 4, 1, "", "generate_2d_layout"], [324, 4, 1, "", "get_builtin_ch_adjacencies"], [325, 4, 1, "", "get_builtin_montages"], [326, 4, 1, "", "make_1020_channel_selections"], [327, 4, 1, "", "make_dig_montage"], [328, 4, 1, "", "make_eeg_layout"], [329, 4, 1, "", "make_grid_layout"], [330, 4, 1, "", "make_standard_montage"], [331, 4, 1, "", "read_ch_adjacency"], [332, 4, 1, "", "read_custom_montage"], [333, 4, 1, "", "read_dig_captrak"], [334, 4, 1, "", "read_dig_dat"], [335, 4, 1, "", "read_dig_egi"], [336, 4, 1, "", "read_dig_fif"], [337, 4, 1, "", "read_dig_hpts"], [338, 4, 1, "", "read_dig_localite"], [339, 4, 1, "", "read_dig_polhemus_isotrak"], [340, 4, 1, "", "read_layout"], [341, 4, 1, "", "read_polhemus_fastscan"], [342, 4, 1, "", "rename_channels"]], "mne.channels.DigMontage": [[314, 2, 1, "", "__add__"], [314, 2, 1, "", "add_estimated_fiducials"], [314, 2, 1, "", "add_mni_fiducials"], [314, 2, 1, "", "apply_trans"], [314, 2, 1, "", "copy"], [314, 2, 1, "", "get_positions"], [314, 2, 1, "", "plot"], [314, 2, 1, "", "remove_fiducials"], [314, 2, 1, "", "rename_channels"], [314, 2, 1, "", "save"]], "mne.channels.Layout": [[315, 2, 1, "", "plot"], [315, 2, 1, "", "save"]], "mne.chpi": [[343, 4, 1, "", "compute_chpi_amplitudes"], [344, 4, 1, "", "compute_chpi_locs"], [345, 4, 1, "", "compute_chpi_snr"], [346, 4, 1, "", "compute_head_pos"], [347, 4, 1, "", "extract_chpi_locs_ctf"], [348, 4, 1, "", "extract_chpi_locs_kit"], [349, 4, 1, "", "filter_chpi"], [350, 4, 1, "", "get_active_chpi"], [351, 4, 1, "", "get_chpi_info"], [352, 4, 1, "", "head_pos_to_trans_rot_t"], [353, 4, 1, "", "read_head_pos"], [354, 4, 1, "", "write_head_pos"]], "mne.coreg": [[367, 1, 1, "", "Coregistration"], [368, 4, 1, "", "estimate_head_mri_t"], [369, 4, 1, "", "get_mni_fiducials"]], "mne.coreg.Coregistration": [[367, 2, 1, "", "compute_dig_mri_distances"], [367, 2, 1, "", "fit_fiducials"], [367, 2, 1, "", "fit_icp"], [367, 2, 1, "", "omit_head_shape_points"], [367, 2, 1, "", "reset"], [367, 3, 1, "", "scale"], [367, 2, 1, "", "set_fid_match"], [367, 2, 1, "", "set_grow_hair"], [367, 2, 1, "", "set_rotation"], [367, 2, 1, "", "set_scale"], [367, 2, 1, "", "set_scale_mode"], [367, 2, 1, "", "set_translation"], [367, 3, 1, "", "trans"]], "mne.cov": [[371, 4, 1, "", "compute_whitener"], [372, 4, 1, "", "prepare_noise_cov"], [373, 4, 1, "", "regularize"]], "mne.cuda": [[376, 4, 1, "", "get_cuda_memory"], [377, 4, 1, "", "init_cuda"], [378, 4, 1, "", "set_cuda_device"]], "mne.datasets.brainstorm.bst_auditory": [[379, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_raw": [[380, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_resting": [[381, 4, 1, "", "data_path"]], "mne.datasets.eegbci": [[382, 4, 1, "", "load_data"], [383, 4, 1, "", "standardize"]], "mne.datasets.epilepsy_ecog": [[384, 4, 1, "", "data_path"]], "mne.datasets.erp_core": [[385, 4, 1, "", "data_path"]], "mne.datasets.eyelink": [[386, 4, 1, "", "data_path"]], "mne.datasets": [[387, 4, 1, "", "fetch_aparc_sub_parcellation"], [388, 4, 1, "", "fetch_dataset"], [389, 4, 1, "", "fetch_fsaverage"], [390, 4, 1, "", "fetch_hcp_mmp_parcellation"], [391, 4, 1, "", "fetch_infant_template"], [392, 4, 1, "", "fetch_phantom"], [394, 4, 1, "", "has_dataset"]], "mne.datasets.fnirs_motor": [[393, 4, 1, "", "data_path"]], "mne.datasets.hf_sef": [[395, 4, 1, "", "data_path"]], "mne.datasets.kiloword": [[396, 4, 1, "", "data_path"]], "mne.datasets.limo": [[397, 4, 1, "", "load_data"]], "mne.datasets.misc": [[398, 4, 1, "", "data_path"]], "mne.datasets.mtrf": [[399, 4, 1, "", "data_path"]], "mne.datasets.multimodal": [[400, 4, 1, "", "data_path"]], "mne.datasets.opm": [[401, 4, 1, "", "data_path"]], "mne.datasets.phantom_4dbti": [[402, 4, 1, "", "data_path"]], "mne.datasets.refmeg_noise": [[403, 4, 1, "", "data_path"]], "mne.datasets.sample": [[404, 4, 1, "", "data_path"]], "mne.datasets.sleep_physionet.age": [[405, 4, 1, "", "fetch_data"]], "mne.datasets.sleep_physionet.temazepam": [[406, 4, 1, "", "fetch_data"]], "mne.datasets.somato": [[407, 4, 1, "", "data_path"]], "mne.datasets.spm_face": [[408, 4, 1, "", "data_path"]], "mne.datasets.ssvep": [[409, 4, 1, "", "data_path"]], "mne.datasets.ucl_opm_auditory": [[410, 4, 1, "", "data_path"]], "mne.datasets.visual_92_categories": [[411, 4, 1, "", "data_path"]], "mne.decoding": [[413, 1, 1, "", "CSP"], [414, 1, 1, "", "EMS"], [415, 1, 1, "", "FilterEstimator"], [416, 1, 1, "", "GeneralizingEstimator"], [417, 1, 1, "", "LinearModel"], [418, 1, 1, "", "PSDEstimator"], [419, 1, 1, "", "ReceptiveField"], [420, 1, 1, "", "SPoC"], [421, 1, 1, "", "SSD"], [422, 1, 1, "", "Scaler"], [423, 1, 1, "", "SlidingEstimator"], [424, 1, 1, "", "TemporalFilter"], [425, 1, 1, "", "TimeDelayingRidge"], [426, 1, 1, "", "TimeFrequency"], [427, 1, 1, "", "UnsupervisedSpatialFilter"], [428, 1, 1, "", "Vectorizer"], [429, 4, 1, "", "compute_ems"], [430, 4, 1, "", "cross_val_multiscore"], [431, 4, 1, "", "get_coef"]], "mne.decoding.CSP": [[413, 2, 1, "", "fit"], [413, 2, 1, "", "fit_transform"], [413, 2, 1, "", "get_params"], [413, 2, 1, "", "plot_filters"], [413, 2, 1, "", "plot_patterns"], [413, 2, 1, "", "set_params"], [413, 2, 1, "", "transform"]], "mne.decoding.EMS": [[414, 2, 1, "", "fit"], [414, 2, 1, "", "fit_transform"], [414, 2, 1, "", "get_params"], [414, 2, 1, "", "set_params"], [414, 2, 1, "", "transform"]], "mne.decoding.FilterEstimator": [[415, 2, 1, "", "fit"], [415, 2, 1, "", "fit_transform"], [415, 2, 1, "", "transform"]], "mne.decoding.GeneralizingEstimator": [[416, 2, 1, "", "decision_function"], [416, 2, 1, "", "fit"], [416, 2, 1, "", "fit_transform"], [416, 2, 1, "", "get_params"], [416, 2, 1, "", "predict"], [416, 2, 1, "", "predict_proba"], [416, 2, 1, "", "score"], [416, 2, 1, "", "set_params"], [416, 2, 1, "", "transform"]], "mne.decoding.LinearModel": [[417, 2, 1, "", "decision_function"], [417, 2, 1, "", "fit"], [417, 2, 1, "", "fit_transform"], [417, 2, 1, "", "get_params"], [417, 2, 1, "", "predict"], [417, 2, 1, "", "predict_proba"], [417, 2, 1, "", "score"], [417, 2, 1, "", "set_params"], [417, 2, 1, "", "transform"]], "mne.decoding.PSDEstimator": [[418, 2, 1, "", "fit"], [418, 2, 1, "", "fit_transform"], [418, 2, 1, "", "transform"]], "mne.decoding.ReceptiveField": [[419, 2, 1, "", "fit"], [419, 2, 1, "", "get_params"], [419, 2, 1, "", "predict"], [419, 2, 1, "", "score"], [419, 2, 1, "", "set_params"]], "mne.decoding.SPoC": [[420, 2, 1, "", "fit"], [420, 2, 1, "", "fit_transform"], [420, 2, 1, "", "get_params"], [420, 2, 1, "", "plot_filters"], [420, 2, 1, "", "plot_patterns"], [420, 2, 1, "", "set_params"], [420, 2, 1, "", "transform"]], "mne.decoding.SSD": [[421, 2, 1, "", "apply"], [421, 2, 1, "", "fit"], [421, 2, 1, "", "fit_transform"], [421, 2, 1, "", "get_params"], [421, 2, 1, "", "get_spectral_ratio"], [421, 2, 1, "", "inverse_transform"], [421, 2, 1, "", "set_params"], [421, 2, 1, "", "transform"]], "mne.decoding.Scaler": [[422, 2, 1, "", "fit"], [422, 2, 1, "", "fit_transform"], [422, 2, 1, "", "get_params"], [422, 2, 1, "", "inverse_transform"], [422, 2, 1, "", "set_params"], [422, 2, 1, "", "transform"]], "mne.decoding.SlidingEstimator": [[423, 2, 1, "", "decision_function"], [423, 2, 1, "", "fit"], [423, 2, 1, "", "fit_transform"], [423, 2, 1, "", "get_params"], [423, 2, 1, "", "predict"], [423, 2, 1, "", "predict_proba"], [423, 2, 1, "", "score"], [423, 2, 1, "", "set_params"], [423, 2, 1, "", "transform"]], "mne.decoding.TemporalFilter": [[424, 2, 1, "", "fit"], [424, 2, 1, "", "fit_transform"], [424, 2, 1, "", "transform"]], "mne.decoding.TimeDelayingRidge": [[425, 2, 1, "", "fit"], [425, 2, 1, "", "get_params"], [425, 2, 1, "", "predict"], [425, 2, 1, "", "set_params"]], "mne.decoding.TimeFrequency": [[426, 2, 1, "", "fit"], [426, 2, 1, "", "fit_transform"], [426, 2, 1, "", "get_params"], [426, 2, 1, "", "set_params"], [426, 2, 1, "", "transform"]], "mne.decoding.UnsupervisedSpatialFilter": [[427, 2, 1, "", "fit"], [427, 2, 1, "", "fit_transform"], [427, 2, 1, "", "get_params"], [427, 2, 1, "", "inverse_transform"], [427, 2, 1, "", "set_params"], [427, 2, 1, "", "transform"]], "mne.decoding.Vectorizer": [[428, 2, 1, "", "fit"], [428, 2, 1, "", "fit_transform"], [428, 2, 1, "", "inverse_transform"], [428, 2, 1, "", "transform"]], "mne.dipole": [[433, 4, 1, "", "get_phantom_dipoles"]], "mne.epochs": [[434, 4, 1, "", "average_movements"], [435, 4, 1, "", "combine_event_ids"], [436, 4, 1, "", "equalize_epoch_counts"], [437, 4, 1, "", "make_metadata"]], "mne.event": [[439, 4, 1, "", "define_target_events"], [440, 4, 1, "", "match_event_names"], [441, 4, 1, "", "shift_time_events"]], "mne.export": [[443, 4, 1, "", "export_epochs"], [444, 4, 1, "", "export_evokeds"], [445, 4, 1, "", "export_evokeds_mff"], [446, 4, 1, "", "export_raw"]], "mne.filter": [[448, 4, 1, "", "construct_iir_filter"], [449, 4, 1, "", "create_filter"], [450, 4, 1, "", "estimate_ringing_samples"], [451, 4, 1, "", "filter_data"], [452, 4, 1, "", "notch_filter"], [453, 4, 1, "", "resample"]], "mne.forward": [[457, 4, 1, "", "compute_depth_prior"], [458, 4, 1, "", "compute_orient_prior"], [459, 4, 1, "", "restrict_forward_to_label"], [460, 4, 1, "", "restrict_forward_to_stc"]], "mne.gui": [[472, 4, 1, "", "coregistration"], [473, 4, 1, "", "locate_ieeg"]], "mne.inverse_sparse": [[476, 4, 1, "", "gamma_map"], [477, 4, 1, "", "make_stc_from_dipoles"], [478, 4, 1, "", "mixed_norm"], [479, 4, 1, "", "tf_mixed_norm"]], "mne.io": [[480, 1, 1, "", "BaseRaw"], [481, 1, 1, "", "Raw"], [482, 1, 1, "", "RawArray"], [483, 4, 1, "", "anonymize_info"], [877, 0, 0, "-", "kit"], [485, 4, 1, "", "read_fiducials"], [486, 4, 1, "", "read_info"], [487, 4, 1, "", "read_raw"], [488, 4, 1, "", "read_raw_artemis123"], [489, 4, 1, "", "read_raw_bdf"], [490, 4, 1, "", "read_raw_boxy"], [491, 4, 1, "", "read_raw_brainvision"], [492, 4, 1, "", "read_raw_bti"], [493, 4, 1, "", "read_raw_cnt"], [494, 4, 1, "", "read_raw_ctf"], [495, 4, 1, "", "read_raw_curry"], [496, 4, 1, "", "read_raw_edf"], [497, 4, 1, "", "read_raw_eeglab"], [498, 4, 1, "", "read_raw_egi"], [499, 4, 1, "", "read_raw_eximia"], [500, 4, 1, "", "read_raw_eyelink"], [501, 4, 1, "", "read_raw_fieldtrip"], [502, 4, 1, "", "read_raw_fif"], [503, 4, 1, "", "read_raw_fil"], [504, 4, 1, "", "read_raw_gdf"], [505, 4, 1, "", "read_raw_hitachi"], [506, 4, 1, "", "read_raw_kit"], [507, 4, 1, "", "read_raw_nedf"], [508, 4, 1, "", "read_raw_nicolet"], [509, 4, 1, "", "read_raw_nihon"], [510, 4, 1, "", "read_raw_nirx"], [511, 4, 1, "", "read_raw_persyst"], [512, 4, 1, "", "read_raw_snirf"], [513, 4, 1, "", "show_fiff"], [514, 4, 1, "", "write_fiducials"]], "mne.io.Raw": [[481, 2, 1, "", "__contains__"], [481, 2, 1, "", "__getitem__"], [481, 2, 1, "", "__len__"], [481, 3, 1, "", "acqparser"], [481, 2, 1, "", "add_channels"], [481, 2, 1, "", "add_events"], [481, 2, 1, "", "add_proj"], [481, 2, 1, "", "add_reference_channels"], [481, 3, 1, "", "annotations"], [481, 2, 1, "", "anonymize"], [481, 2, 1, "", "append"], [481, 2, 1, "", "apply_function"], [481, 2, 1, "", "apply_gradient_compensation"], [481, 2, 1, "", "apply_hilbert"], [481, 2, 1, "", "apply_proj"], [481, 3, 1, "", "ch_names"], [481, 2, 1, "", "close"], [481, 3, 1, "", "compensation_grade"], [481, 2, 1, "", "compute_psd"], [481, 2, 1, "", "copy"], [481, 2, 1, "", "crop"], [481, 2, 1, "", "crop_by_annotations"], [481, 2, 1, "", "decimate"], [481, 2, 1, "", "del_proj"], [481, 2, 1, "", "describe"], [481, 2, 1, "", "drop_channels"], [481, 2, 1, "", "export"], [481, 3, 1, "", "filenames"], [481, 2, 1, "", "filter"], [481, 3, 1, "", "first_samp"], [481, 3, 1, "", "first_time"], [481, 2, 1, "", "fix_mag_coil_types"], [481, 2, 1, "", "get_channel_types"], [481, 2, 1, "", "get_data"], [481, 2, 1, "", "get_montage"], [481, 2, 1, "", "interpolate_bads"], [481, 3, 1, "", "last_samp"], [481, 2, 1, "", "load_bad_channels"], [481, 2, 1, "", "load_data"], [481, 3, 1, "", "n_times"], [481, 2, 1, "", "notch_filter"], [481, 2, 1, "", "pick"], [481, 2, 1, "", "pick_channels"], [481, 2, 1, "", "pick_types"], [481, 2, 1, "", "plot"], [481, 2, 1, "", "plot_projs_topomap"], [481, 2, 1, "", "plot_psd"], [481, 2, 1, "", "plot_psd_topo"], [481, 2, 1, "", "plot_psd_topomap"], [481, 2, 1, "", "plot_sensors"], [481, 3, 1, "", "proj"], [481, 2, 1, "", "rename_channels"], [481, 2, 1, "", "reorder_channels"], [481, 2, 1, "", "resample"], [481, 2, 1, "", "save"], [481, 2, 1, "", "savgol_filter"], [481, 2, 1, "", "set_annotations"], [481, 2, 1, "", "set_channel_types"], [481, 2, 1, "", "set_eeg_reference"], [481, 2, 1, "", "set_meas_date"], [481, 2, 1, "", "set_montage"], [481, 2, 1, "", "shift_time"], [481, 2, 1, "", "time_as_index"], [481, 3, 1, "", "times"], [481, 3, 1, "", "tmax"], [481, 3, 1, "", "tmin"], [481, 2, 1, "", "to_data_frame"]], "mne.io.RawArray": [[482, 2, 1, "", "__contains__"], [482, 2, 1, "", "__getitem__"], [482, 2, 1, "", "__len__"], [482, 2, 1, "", "add_channels"], [482, 2, 1, "", "add_events"], [482, 2, 1, "", "add_proj"], [482, 2, 1, "", "add_reference_channels"], [482, 3, 1, "", "annotations"], [482, 2, 1, "", "anonymize"], [482, 2, 1, "", "append"], [482, 2, 1, "", "apply_function"], [482, 2, 1, "", "apply_gradient_compensation"], [482, 2, 1, "", "apply_hilbert"], [482, 2, 1, "", "apply_proj"], [482, 3, 1, "", "ch_names"], [482, 2, 1, "", "close"], [482, 3, 1, "", "compensation_grade"], [482, 2, 1, "", "compute_psd"], [482, 2, 1, "", "copy"], [482, 2, 1, "", "crop"], [482, 2, 1, "", "crop_by_annotations"], [482, 2, 1, "", "decimate"], [482, 2, 1, "", "del_proj"], [482, 2, 1, "", "describe"], [482, 2, 1, "", "drop_channels"], [482, 2, 1, "", "export"], [482, 3, 1, "", "filenames"], [482, 2, 1, "", "filter"], [482, 3, 1, "", "first_samp"], [482, 3, 1, "", "first_time"], [482, 2, 1, "", "get_channel_types"], [482, 2, 1, "", "get_data"], [482, 2, 1, "", "get_montage"], [482, 2, 1, "", "interpolate_bads"], [482, 3, 1, "", "last_samp"], [482, 2, 1, "", "load_bad_channels"], [482, 2, 1, "", "load_data"], [482, 3, 1, "", "n_times"], [482, 2, 1, "", "notch_filter"], [482, 2, 1, "", "pick"], [482, 2, 1, "", "pick_channels"], [482, 2, 1, "", "pick_types"], [482, 2, 1, "", "plot"], [482, 2, 1, "", "plot_projs_topomap"], [482, 2, 1, "", "plot_psd"], [482, 2, 1, "", "plot_psd_topo"], [482, 2, 1, "", "plot_psd_topomap"], [482, 2, 1, "", "plot_sensors"], [482, 3, 1, "", "proj"], [482, 2, 1, "", "rename_channels"], [482, 2, 1, "", "reorder_channels"], [482, 2, 1, "", "resample"], [482, 2, 1, "", "save"], [482, 2, 1, "", "savgol_filter"], [482, 2, 1, "", "set_annotations"], [482, 2, 1, "", "set_channel_types"], [482, 2, 1, "", "set_eeg_reference"], [482, 2, 1, "", "set_meas_date"], [482, 2, 1, "", "set_montage"], [482, 2, 1, "", "shift_time"], [482, 2, 1, "", "time_as_index"], [482, 3, 1, "", "times"], [482, 3, 1, "", "tmax"], [482, 3, 1, "", "tmin"], [482, 2, 1, "", "to_data_frame"]], "mne.io.kit": [[484, 4, 1, "", "read_mrk"]], "mne.label": [[515, 4, 1, "", "select_sources"]], "mne.minimum_norm": [[528, 1, 1, "", "InverseOperator"], [529, 4, 1, "", "apply_inverse"], [530, 4, 1, "", "apply_inverse_cov"], [531, 4, 1, "", "apply_inverse_epochs"], [532, 4, 1, "", "apply_inverse_raw"], [533, 4, 1, "", "apply_inverse_tfr_epochs"], [534, 4, 1, "", "compute_rank_inverse"], [535, 4, 1, "", "compute_source_psd"], [536, 4, 1, "", "compute_source_psd_epochs"], [537, 4, 1, "", "estimate_snr"], [538, 4, 1, "", "get_cross_talk"], [539, 4, 1, "", "get_point_spread"], [540, 4, 1, "", "make_inverse_operator"], [541, 4, 1, "", "make_inverse_resolution_matrix"], [542, 4, 1, "", "prepare_inverse_operator"], [543, 4, 1, "", "read_inverse_operator"], [544, 4, 1, "", "resolution_metrics"], [545, 4, 1, "", "source_band_induced_power"], [546, 4, 1, "", "source_induced_power"], [547, 4, 1, "", "write_inverse_operator"]], "mne.minimum_norm.InverseOperator": [[528, 2, 1, "", "__contains__"], [528, 2, 1, "", "__getitem__"], [528, 2, 1, "", "__iter__"], [528, 2, 1, "", "__len__"], [528, 2, 1, "", "clear"], [528, 2, 1, "", "copy"], [528, 2, 1, "", "fromkeys"], [528, 2, 1, "", "get"], [528, 2, 1, "", "items"], [528, 2, 1, "", "keys"], [528, 2, 1, "", "pop"], [528, 2, 1, "", "popitem"], [528, 2, 1, "", "setdefault"], [528, 2, 1, "", "update"], [528, 2, 1, "", "values"]], "mne.preprocessing": [[561, 1, 1, "", "EOGRegression"], [562, 1, 1, "", "ICA"], [563, 1, 1, "", "Xdawn"], [564, 4, 1, "", "annotate_amplitude"], [565, 4, 1, "", "annotate_break"], [566, 4, 1, "", "annotate_movement"], [567, 4, 1, "", "annotate_muscle_zscore"], [568, 4, 1, "", "annotate_nan"], [569, 4, 1, "", "compute_average_dev_head_t"], [570, 4, 1, "", "compute_bridged_electrodes"], [571, 4, 1, "", "compute_current_source_density"], [572, 4, 1, "", "compute_fine_calibration"], [573, 4, 1, "", "compute_maxwell_basis"], [574, 4, 1, "", "compute_proj_ecg"], [575, 4, 1, "", "compute_proj_eog"], [576, 4, 1, "", "compute_proj_hfc"], [577, 4, 1, "", "corrmap"], [578, 4, 1, "", "cortical_signal_suppression"], [579, 4, 1, "", "create_ecg_epochs"], [580, 4, 1, "", "create_eog_epochs"], [581, 4, 1, "", "equalize_bads"], [875, 0, 0, "-", "eyetracking"], [583, 4, 1, "", "find_bad_channels_maxwell"], [584, 4, 1, "", "find_ecg_events"], [585, 4, 1, "", "find_eog_events"], [586, 4, 1, "", "fix_stim_artifact"], [587, 4, 1, "", "ica_find_ecg_events"], [588, 4, 1, "", "ica_find_eog_events"], [875, 0, 0, "-", "ieeg"], [592, 4, 1, "", "infomax"], [593, 4, 1, "", "interpolate_bridged_electrodes"], [594, 4, 1, "", "maxwell_filter"], [595, 4, 1, "", "maxwell_filter_prepare_emptyroom"], [875, 0, 0, "-", "nirs"], [602, 4, 1, "", "oversampled_temporal_projection"], [603, 4, 1, "", "peak_finder"], [604, 4, 1, "", "read_eog_regression"], [605, 4, 1, "", "read_fine_calibration"], [606, 4, 1, "", "read_ica"], [607, 4, 1, "", "read_ica_eeglab"], [608, 4, 1, "", "realign_raw"], [609, 4, 1, "", "regress_artifact"], [610, 4, 1, "", "write_fine_calibration"]], "mne.preprocessing.EOGRegression": [[561, 2, 1, "", "apply"], [561, 2, 1, "", "fit"], [561, 2, 1, "", "plot"], [561, 2, 1, "", "save"]], "mne.preprocessing.ICA": [[562, 2, 1, "", "__contains__"], [562, 2, 1, "", "apply"], [562, 3, 1, "", "compensation_grade"], [562, 2, 1, "", "copy"], [562, 2, 1, "", "find_bads_ecg"], [562, 2, 1, "", "find_bads_eog"], [562, 2, 1, "", "find_bads_muscle"], [562, 2, 1, "", "find_bads_ref"], [562, 2, 1, "", "fit"], [562, 2, 1, "", "get_channel_types"], [562, 2, 1, "", "get_components"], [562, 2, 1, "", "get_explained_variance_ratio"], [562, 2, 1, "", "get_sources"], [562, 2, 1, "", "plot_components"], [562, 2, 1, "", "plot_overlay"], [562, 2, 1, "", "plot_properties"], [562, 2, 1, "", "plot_scores"], [562, 2, 1, "", "plot_sources"], [562, 2, 1, "", "save"], [562, 2, 1, "", "score_sources"]], "mne.preprocessing.Xdawn": [[563, 2, 1, "", "apply"], [563, 2, 1, "", "fit"], [563, 2, 1, "", "fit_transform"], [563, 2, 1, "", "get_params"], [563, 2, 1, "", "inverse_transform"], [563, 2, 1, "", "set_params"], [563, 2, 1, "", "transform"]], "mne.preprocessing.eyetracking": [[582, 4, 1, "", "set_channel_types_eyetrack"]], "mne.preprocessing.ieeg": [[589, 4, 1, "", "make_montage_volume"], [590, 4, 1, "", "project_sensors_onto_brain"], [591, 4, 1, "", "warp_montage"]], "mne.preprocessing.nirs": [[596, 4, 1, "", "beer_lambert_law"], [597, 4, 1, "", "optical_density"], [598, 4, 1, "", "scalp_coupling_index"], [599, 4, 1, "", "short_channels"], [600, 4, 1, "", "source_detector_distances"], [601, 4, 1, "", "temporal_derivative_distribution_repair"]], "mne.simulation": [[656, 1, 1, "", "SourceSimulator"], [657, 4, 1, "", "add_chpi"], [658, 4, 1, "", "add_ecg"], [659, 4, 1, "", "add_eog"], [660, 4, 1, "", "add_noise"], [881, 0, 0, "-", "metrics"], [669, 4, 1, "", "select_source_in_label"], [670, 4, 1, "", "simulate_evoked"], [671, 4, 1, "", "simulate_raw"], [672, 4, 1, "", "simulate_sparse_stc"], [673, 4, 1, "", "simulate_stc"]], "mne.simulation.SourceSimulator": [[656, 2, 1, "", "__iter__"], [656, 2, 1, "", "add_data"], [656, 3, 1, "", "duration"], [656, 2, 1, "", "get_stc"], [656, 2, 1, "", "get_stim_channel"], [656, 3, 1, "", "n_times"]], "mne.simulation.metrics": [[661, 4, 1, "", "cosine_score"], [662, 4, 1, "", "f1_score"], [663, 4, 1, "", "peak_position_error"], [664, 4, 1, "", "precision_score"], [665, 4, 1, "", "recall_score"], [666, 4, 1, "", "region_localization_error"], [667, 4, 1, "", "roc_auc_score"], [668, 4, 1, "", "spatial_deviation_error"]], "mne.source_space": [[674, 4, 1, "", "compute_distance_to_sensors"], [675, 4, 1, "", "get_decimated_surfaces"]], "mne.stats": [[684, 4, 1, "", "bonferroni_correction"], [685, 4, 1, "", "bootstrap_confidence_interval"], [686, 4, 1, "", "combine_adjacency"], [687, 4, 1, "", "f_mway_rm"], [688, 4, 1, "", "f_oneway"], [689, 4, 1, "", "f_threshold_mway_rm"], [690, 4, 1, "", "fdr_correction"], [691, 4, 1, "", "linear_regression"], [692, 4, 1, "", "linear_regression_raw"], [693, 4, 1, "", "permutation_cluster_1samp_test"], [694, 4, 1, "", "permutation_cluster_test"], [695, 4, 1, "", "permutation_t_test"], [696, 4, 1, "", "spatio_temporal_cluster_1samp_test"], [697, 4, 1, "", "spatio_temporal_cluster_test"], [698, 4, 1, "", "summarize_clusters_stc"], [699, 4, 1, "", "ttest_1samp_no_p"], [700, 4, 1, "", "ttest_ind_no_p"]], "mne.surface": [[703, 4, 1, "", "complete_surface_info"], [704, 4, 1, "", "read_curvature"]], "mne.time_frequency": [[706, 1, 1, "", "AverageTFR"], [707, 1, 1, "", "CrossSpectralDensity"], [708, 1, 1, "", "EpochsSpectrum"], [709, 1, 1, "", "EpochsTFR"], [710, 1, 1, "", "Spectrum"], [711, 4, 1, "", "csd_array_fourier"], [712, 4, 1, "", "csd_array_morlet"], [713, 4, 1, "", "csd_array_multitaper"], [714, 4, 1, "", "csd_fourier"], [715, 4, 1, "", "csd_morlet"], [716, 4, 1, "", "csd_multitaper"], [717, 4, 1, "", "csd_tfr"], [718, 4, 1, "", "dpss_windows"], [719, 4, 1, "", "fit_iir_model_raw"], [720, 4, 1, "", "fwhm"], [721, 4, 1, "", "istft"], [722, 4, 1, "", "morlet"], [723, 4, 1, "", "pick_channels_csd"], [724, 4, 1, "", "psd_array_multitaper"], [725, 4, 1, "", "psd_array_welch"], [726, 4, 1, "", "read_csd"], [727, 4, 1, "", "read_spectrum"], [728, 4, 1, "", "read_tfrs"], [729, 4, 1, "", "stft"], [730, 4, 1, "", "stftfreq"], [884, 0, 0, "-", "tfr"], [733, 4, 1, "", "tfr_array_morlet"], [734, 4, 1, "", "tfr_array_multitaper"], [735, 4, 1, "", "tfr_array_stockwell"], [736, 4, 1, "", "tfr_morlet"], [737, 4, 1, "", "tfr_multitaper"], [738, 4, 1, "", "tfr_stockwell"], [739, 4, 1, "", "write_tfrs"]], "mne.time_frequency.AverageTFR": [[706, 2, 1, "", "__add__"], [706, 2, 1, "", "__contains__"], [706, 2, 1, "", "__mul__"], [706, 2, 1, "", "__sub__"], [706, 2, 1, "", "add_channels"], [706, 2, 1, "", "add_reference_channels"], [706, 2, 1, "", "apply_baseline"], [706, 3, 1, "", "ch_names"], [706, 3, 1, "", "compensation_grade"], [706, 2, 1, "", "copy"], [706, 2, 1, "", "crop"], [706, 2, 1, "", "decimate"], [706, 2, 1, "", "drop_channels"], [706, 2, 1, "", "get_channel_types"], [706, 2, 1, "", "pick"], [706, 2, 1, "", "pick_channels"], [706, 2, 1, "", "pick_types"], [706, 2, 1, "", "plot"], [706, 2, 1, "", "plot_joint"], [706, 2, 1, "", "plot_topo"], [706, 2, 1, "", "plot_topomap"], [706, 2, 1, "", "reorder_channels"], [706, 2, 1, "", "save"], [706, 2, 1, "", "shift_time"], [706, 2, 1, "", "time_as_index"], [706, 3, 1, "", "times"], [706, 3, 1, "", "tmax"], [706, 3, 1, "", "tmin"], [706, 2, 1, "", "to_data_frame"]], "mne.time_frequency.CrossSpectralDensity": [[707, 2, 1, "", "__getitem__"], [707, 2, 1, "", "__len__"], [707, 2, 1, "", "copy"], [707, 2, 1, "", "get_data"], [707, 2, 1, "", "mean"], [707, 3, 1, "", "n_channels"], [707, 2, 1, "", "pick_channels"], [707, 2, 1, "", "pick_frequency"], [707, 2, 1, "", "plot"], [707, 2, 1, "", "save"], [707, 2, 1, "", "sum"]], "mne.time_frequency.EpochsSpectrum": [[708, 2, 1, "", "__contains__"], [708, 2, 1, "", "__getitem__"], [708, 2, 1, "", "__iter__"], [708, 2, 1, "", "__len__"], [708, 2, 1, "", "add_channels"], [708, 2, 1, "", "add_reference_channels"], [708, 2, 1, "", "average"], [708, 3, 1, "", "compensation_grade"], [708, 2, 1, "", "copy"], [708, 2, 1, "", "drop_channels"], [708, 2, 1, "", "get_channel_types"], [708, 2, 1, "", "get_data"], [708, 3, 1, "", "metadata"], [708, 2, 1, "", "next"], [708, 2, 1, "", "pick"], [708, 2, 1, "", "pick_channels"], [708, 2, 1, "", "pick_types"], [708, 2, 1, "", "plot"], [708, 2, 1, "", "plot_topo"], [708, 2, 1, "", "plot_topomap"], [708, 2, 1, "", "reorder_channels"], [708, 2, 1, "", "save"], [708, 2, 1, "", "to_data_frame"], [708, 2, 1, "", "units"]], "mne.time_frequency.EpochsTFR": [[709, 2, 1, "", "__contains__"], [709, 2, 1, "", "__getitem__"], [709, 2, 1, "", "__iter__"], [709, 2, 1, "", "__len__"], [709, 2, 1, "", "add_channels"], [709, 2, 1, "", "add_reference_channels"], [709, 2, 1, "", "apply_baseline"], [709, 2, 1, "", "average"], [709, 3, 1, "", "ch_names"], [709, 3, 1, "", "compensation_grade"], [709, 2, 1, "", "copy"], [709, 2, 1, "", "crop"], [709, 2, 1, "", "decimate"], [709, 2, 1, "", "drop_channels"], [709, 2, 1, "", "get_channel_types"], [709, 3, 1, "", "metadata"], [709, 2, 1, "", "next"], [709, 2, 1, "", "pick"], [709, 2, 1, "", "pick_channels"], [709, 2, 1, "", "pick_types"], [709, 2, 1, "", "reorder_channels"], [709, 2, 1, "", "save"], [709, 2, 1, "", "shift_time"], [709, 2, 1, "", "time_as_index"], [709, 3, 1, "", "times"], [709, 3, 1, "", "tmax"], [709, 3, 1, "", "tmin"], [709, 2, 1, "", "to_data_frame"]], "mne.time_frequency.Spectrum": [[710, 2, 1, "", "__contains__"], [710, 2, 1, "", "__getitem__"], [710, 2, 1, "", "add_channels"], [710, 2, 1, "", "add_reference_channels"], [710, 3, 1, "", "compensation_grade"], [710, 2, 1, "", "copy"], [710, 2, 1, "", "drop_channels"], [710, 2, 1, "", "get_channel_types"], [710, 2, 1, "", "get_data"], [710, 2, 1, "", "pick"], [710, 2, 1, "", "pick_channels"], [710, 2, 1, "", "pick_types"], [710, 2, 1, "", "plot"], [710, 2, 1, "", "plot_topo"], [710, 2, 1, "", "plot_topomap"], [710, 2, 1, "", "reorder_channels"], [710, 2, 1, "", "save"], [710, 2, 1, "", "to_data_frame"], [710, 2, 1, "", "units"]], "mne.time_frequency.tfr": [[731, 4, 1, "", "cwt"], [732, 4, 1, "", "morlet"]], "mne.transforms": [[741, 1, 1, "", "Transform"], [742, 4, 1, "", "apply_volume_registration"], [743, 4, 1, "", "apply_volume_registration_points"], [744, 4, 1, "", "compute_volume_registration"], [745, 4, 1, "", "quat_to_rot"], [746, 4, 1, "", "read_ras_mni_t"], [747, 4, 1, "", "rot_to_quat"]], "mne.transforms.Transform": [[741, 2, 1, "", "__contains__"], [741, 2, 1, "", "__getitem__"], [741, 2, 1, "", "__iter__"], [741, 2, 1, "", "__len__"], [741, 2, 1, "", "clear"], [741, 2, 1, "", "copy"], [741, 3, 1, "", "from_str"], [741, 2, 1, "", "fromkeys"], [741, 2, 1, "", "get"], [741, 2, 1, "", "items"], [741, 2, 1, "", "keys"], [741, 2, 1, "", "pop"], [741, 2, 1, "", "popitem"], [741, 2, 1, "", "save"], [741, 2, 1, "", "setdefault"], [741, 3, 1, "", "to_str"], [741, 2, 1, "", "update"], [741, 2, 1, "", "values"]], "mne.utils": [[750, 1, 1, "", "deprecated"], [751, 4, 1, "", "warn"]], "mne.viz": [[754, 1, 1, "", "Brain"], [755, 1, 1, "", "ClickableImage"], [756, 1, 1, "", "Figure3D"], [757, 4, 1, "", "add_background_image"], [758, 4, 1, "", "centers_to_edges"], [759, 4, 1, "", "circular_layout"], [760, 4, 1, "", "close_3d_figure"], [761, 4, 1, "", "close_all_3d_figures"], [762, 4, 1, "", "compare_fiff"], [763, 4, 1, "", "create_3d_figure"], [764, 4, 1, "", "get_3d_backend"], [765, 4, 1, "", "get_brain_class"], [766, 4, 1, "", "get_browser_backend"], [767, 4, 1, "", "iter_topography"], [768, 4, 1, "", "link_brains"], [769, 4, 1, "", "mne_analyze_colormap"], [770, 4, 1, "", "plot_alignment"], [771, 4, 1, "", "plot_arrowmap"], [772, 4, 1, "", "plot_bem"], [773, 4, 1, "", "plot_brain_colorbar"], [774, 4, 1, "", "plot_bridged_electrodes"], [775, 4, 1, "", "plot_ch_adjacency"], [776, 4, 1, "", "plot_channel_labels_circle"], [777, 4, 1, "", "plot_chpi_snr"], [778, 4, 1, "", "plot_compare_evokeds"], [779, 4, 1, "", "plot_cov"], [780, 4, 1, "", "plot_csd"], [781, 4, 1, "", "plot_dipole_amplitudes"], [782, 4, 1, "", "plot_dipole_locations"], [783, 4, 1, "", "plot_drop_log"], [784, 4, 1, "", "plot_epochs"], [785, 4, 1, "", "plot_epochs_image"], [786, 4, 1, "", "plot_epochs_psd_topomap"], [787, 4, 1, "", "plot_events"], [788, 4, 1, "", "plot_evoked"], [789, 4, 1, "", "plot_evoked_field"], [790, 4, 1, "", "plot_evoked_image"], [791, 4, 1, "", "plot_evoked_joint"], [792, 4, 1, "", "plot_evoked_topo"], [793, 4, 1, "", "plot_evoked_topomap"], [794, 4, 1, "", "plot_evoked_white"], [795, 4, 1, "", "plot_filter"], [796, 4, 1, "", "plot_head_positions"], [797, 4, 1, "", "plot_ica_components"], [798, 4, 1, "", "plot_ica_overlay"], [799, 4, 1, "", "plot_ica_properties"], [800, 4, 1, "", "plot_ica_scores"], [801, 4, 1, "", "plot_ica_sources"], [802, 4, 1, "", "plot_ideal_filter"], [803, 4, 1, "", "plot_layout"], [804, 4, 1, "", "plot_montage"], [805, 4, 1, "", "plot_projs_joint"], [806, 4, 1, "", "plot_projs_topomap"], [807, 4, 1, "", "plot_raw"], [808, 4, 1, "", "plot_raw_psd"], [809, 4, 1, "", "plot_regression_weights"], [810, 4, 1, "", "plot_sensors"], [811, 4, 1, "", "plot_snr_estimate"], [812, 4, 1, "", "plot_source_estimates"], [813, 4, 1, "", "plot_sparse_source_estimates"], [814, 4, 1, "", "plot_tfr_topomap"], [815, 4, 1, "", "plot_topo_image_epochs"], [816, 4, 1, "", "plot_topomap"], [817, 4, 1, "", "plot_vector_source_estimates"], [818, 4, 1, "", "plot_volume_source_estimates"], [819, 4, 1, "", "set_3d_backend"], [820, 4, 1, "", "set_3d_options"], [821, 4, 1, "", "set_3d_title"], [822, 4, 1, "", "set_3d_view"], [823, 4, 1, "", "set_browser_backend"], [824, 4, 1, "", "snapshot_brain_montage"], [825, 4, 1, "", "use_3d_backend"], [826, 4, 1, "", "use_browser_backend"]], "mne.viz.Brain": [[754, 2, 1, "", "add_annotation"], [754, 2, 1, "", "add_data"], [754, 2, 1, "", "add_dipole"], [754, 2, 1, "", "add_foci"], [754, 2, 1, "", "add_forward"], [754, 2, 1, "", "add_head"], [754, 2, 1, "", "add_label"], [754, 2, 1, "", "add_sensors"], [754, 2, 1, "", "add_skull"], [754, 2, 1, "", "add_text"], [754, 2, 1, "", "add_volume_labels"], [754, 2, 1, "", "apply_auto_scaling"], [754, 2, 1, "", "clear_glyphs"], [754, 2, 1, "", "close"], [754, 3, 1, "", "data"], [754, 2, 1, "", "get_picked_points"], [754, 2, 1, "", "get_view"], [754, 2, 1, "", "help"], [754, 3, 1, "", "interaction"], [754, 2, 1, "", "plot_time_course"], [754, 2, 1, "", "plot_time_line"], [754, 2, 1, "", "remove_annotations"], [754, 2, 1, "", "remove_data"], [754, 2, 1, "", "remove_dipole"], [754, 2, 1, "", "remove_forward"], [754, 2, 1, "", "remove_head"], [754, 2, 1, "", "remove_labels"], [754, 2, 1, "", "remove_sensors"], [754, 2, 1, "", "remove_skull"], [754, 2, 1, "", "remove_text"], [754, 2, 1, "", "remove_volume_labels"], [754, 2, 1, "", "reset"], [754, 2, 1, "", "reset_view"], [754, 2, 1, "", "restore_user_scaling"], [754, 2, 1, "", "save_image"], [754, 2, 1, "", "save_movie"], [754, 2, 1, "", "screenshot"], [754, 2, 1, "", "set_data_smoothing"], [754, 2, 1, "", "set_playback_speed"], [754, 2, 1, "", "set_time"], [754, 2, 1, "", "set_time_interpolation"], [754, 2, 1, "", "set_time_point"], [754, 2, 1, "", "setup_time_viewer"], [754, 2, 1, "", "show"], [754, 2, 1, "", "show_view"], [754, 3, 1, "", "time_interpolation"], [754, 2, 1, "", "toggle_interface"], [754, 2, 1, "", "toggle_playback"], [754, 2, 1, "", "update_lut"]], "mne.viz.ClickableImage": [[755, 2, 1, "", "onclick"], [755, 2, 1, "", "plot_clicks"], [755, 2, 1, "", "to_layout"]], "mne.viz.Figure3D": [[756, 3, 1, "", "plotter"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"connect": [0, 27, 147, 248, 845], "analysi": [0, 4, 10, 14, 27, 36, 138, 147, 152, 166, 167, 219, 234, 239, 242, 243, 244, 863, 865, 872], "exampl": [0, 3, 27, 98, 105, 147, 157, 176, 197, 206, 207, 208, 258, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 289, 290, 292, 294, 295, 296, 299, 300, 301, 302, 304, 312, 313, 314, 315, 316, 318, 320, 324, 325, 326, 327, 328, 330, 332, 336, 340, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 373, 375, 384, 391, 404, 405, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439, 442, 447, 448, 449, 453, 454, 456, 461, 462, 465, 466, 470, 472, 476, 477, 478, 479, 481, 482, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 500, 502, 503, 504, 506, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 549, 551, 553, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 589, 590, 591, 593, 594, 596, 597, 598, 600, 601, 602, 606, 612, 613, 614, 615, 616, 617, 618, 621, 624, 626, 628, 629, 632, 634, 636, 637, 638, 639, 641, 645, 647, 648, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 670, 671, 672, 673, 674, 678, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 704, 705, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 722, 725, 733, 736, 737, 738, 742, 743, 744, 746, 748, 749, 753, 754, 755, 758, 759, 763, 765, 767, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 781, 782, 785, 787, 790, 792, 794, 795, 796, 802, 805, 806, 811, 812, 813, 816, 817, 819, 821, 822, 824, 826, 834, 839, 862, 871, 874], "brainstorm": [1, 184, 185, 192, 379, 380, 381, 862], "raw": [1, 7, 29, 70, 81, 90, 93, 94, 138, 141, 153, 169, 173, 178, 205, 212, 213, 214, 217, 218, 219, 220, 223, 258, 481, 865, 868, 877], "median": [1, 862], "nerv": [1, 862], "dataset": [1, 2, 3, 4, 7, 27, 70, 83, 184, 185, 186, 192, 217, 243, 251, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 862, 865], "refer": [1, 4, 8, 10, 12, 13, 15, 16, 18, 19, 21, 33, 35, 40, 42, 43, 44, 46, 51, 54, 55, 58, 59, 65, 70, 71, 74, 75, 78, 83, 84, 88, 94, 101, 109, 112, 113, 117, 119, 121, 126, 129, 135, 138, 142, 145, 152, 156, 158, 163, 177, 179, 181, 184, 185, 190, 192, 196, 197, 201, 203, 205, 206, 207, 208, 209, 211, 213, 225, 228, 229, 233, 241, 845, 861, 862, 865, 868, 876], "hf": 2, "sef": [2, 862], "open": [3, 27, 258, 845, 874], "singl": [4, 28, 104, 128, 230, 231, 232], "trial": [4, 128, 212, 218, 230, 231, 232, 242, 243], "linear": [4, 18, 258, 868], "regress": [4, 73, 99, 101, 142, 205, 213], "limo": [4, 397, 862], "about": [4, 171, 172, 200, 868], "data": [4, 5, 7, 8, 11, 13, 15, 18, 19, 21, 27, 29, 30, 41, 42, 49, 51, 57, 63, 65, 71, 73, 75, 80, 81, 86, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 109, 114, 115, 116, 119, 120, 121, 129, 136, 137, 138, 141, 142, 143, 147, 148, 150, 151, 153, 160, 166, 167, 168, 169, 170, 173, 176, 178, 179, 181, 189, 190, 191, 192, 193, 194, 196, 202, 204, 205, 212, 213, 214, 217, 218, 219, 220, 221, 223, 224, 225, 229, 232, 233, 234, 236, 237, 238, 241, 243, 250, 258, 671, 861, 862, 865, 868, 871, 877, 880, 882], "load": [4, 19, 47, 73, 115, 116, 137, 138, 141, 142, 150, 160, 167, 176, 179, 191, 196, 207, 214, 217, 224, 868], "visual": [4, 19, 27, 47, 48, 49, 50, 54, 55, 112, 117, 122, 137, 141, 143, 145, 150, 151, 157, 159, 171, 178, 181, 182, 183, 196, 205, 206, 207, 208, 210, 228, 233, 236, 237, 238, 241, 845, 862, 874, 885], "event": [4, 69, 113, 138, 145, 152, 167, 169, 173, 214, 218, 253, 439, 440, 441], "condit": [4, 13, 132, 152, 231, 232], "erp": [4, 142, 145, 152, 862], "effect": [4, 16, 196, 197, 205, 207, 228, 243, 868], "stimulu": [4, 19, 214], "phase": [4, 107], "coher": [4, 242], "prepar": [4, 5, 145, 205, 238], "defin": [4, 69, 90, 157, 228, 230], "predictor": 4, "variabl": [4, 172, 845], "design": [4, 138, 197, 203, 863], "matrix": [4, 41, 64, 70, 103, 163, 228, 236, 861, 865, 868, 871], "extract": [4, 37, 39, 94, 138, 141, 210, 212, 217, 243], "coeffici": [4, 19], "plot": [4, 18, 34, 41, 42, 43, 44, 47, 48, 50, 60, 69, 70, 81, 82, 84, 116, 118, 119, 120, 123, 124, 125, 126, 127, 128, 133, 137, 142, 143, 151, 153, 163, 171, 212, 214, 218, 220, 224, 230, 231, 242, 243, 843, 865], "model": [4, 19, 23, 27, 45, 111, 158, 159, 164, 166, 167, 178, 181, 196, 198, 209, 256, 258, 861, 867, 868, 874], "result": [4, 43, 44, 54, 243], "optic": [5, 212, 213], "pump": [5, 213], "magnetomet": [5, 213], "opm": [5, 109, 189, 213, 401, 862, 874], "local": [5, 31, 166, 177, 178, 179, 183, 187, 845, 861], "perform": [5, 73, 90, 137, 196], "dipol": [5, 45, 90, 116, 177, 179, 182, 264, 433], "fit": [5, 19, 158, 177, 182, 196, 206], "minimum": [5, 868], "norm": [5, 40, 868], "comput": [6, 16, 20, 21, 25, 28, 29, 30, 32, 33, 34, 35, 39, 40, 41, 42, 45, 46, 47, 49, 51, 54, 55, 56, 58, 59, 66, 70, 85, 90, 91, 94, 102, 103, 104, 106, 107, 108, 109, 110, 112, 130, 137, 140, 149, 155, 159, 160, 163, 165, 171, 175, 178, 180, 181, 188, 195, 199, 203, 205, 206, 207, 210, 216, 222, 227, 230, 231, 233, 235, 236, 237, 238, 240, 245, 249, 258, 861, 868, 874], "time": [6, 9, 13, 20, 25, 27, 32, 37, 39, 46, 56, 59, 66, 69, 70, 72, 85, 86, 91, 94, 102, 105, 106, 114, 130, 137, 140, 141, 143, 145, 146, 149, 155, 165, 166, 167, 175, 182, 188, 195, 197, 199, 206, 216, 217, 222, 227, 230, 231, 233, 235, 240, 242, 243, 244, 245, 845, 874, 884], "from": [7, 8, 15, 19, 37, 38, 43, 44, 61, 90, 104, 129, 138, 141, 143, 145, 150, 169, 170, 189, 190, 191, 193, 205, 208, 212, 214, 217, 218, 219, 220, 223, 224, 250, 258, 872], "dspm": [7, 28, 30, 34, 54, 94, 110, 178, 868], "spm": [7, 862], "face": [7, 862], "motor": [8, 862], "imageri": [8, 862], "decod": [8, 9, 11, 12, 13, 15, 17, 18, 27, 197, 252, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431], "eeg": [8, 15, 22, 55, 58, 65, 67, 70, 71, 78, 118, 125, 152, 160, 167, 183, 189, 190, 209, 229, 243, 861, 868, 874], "us": [8, 9, 14, 18, 26, 32, 33, 34, 35, 39, 47, 57, 63, 67, 71, 84, 94, 138, 144, 147, 150, 156, 157, 158, 161, 162, 172, 181, 196, 206, 209, 211, 232, 258, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 289, 290, 292, 294, 295, 296, 299, 300, 301, 302, 304, 312, 313, 314, 315, 316, 318, 320, 324, 325, 326, 327, 328, 330, 332, 336, 340, 343, 344, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 373, 375, 384, 391, 404, 405, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439, 442, 447, 448, 449, 453, 454, 456, 461, 462, 465, 466, 470, 472, 476, 477, 478, 479, 481, 482, 486, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 499, 500, 502, 503, 504, 506, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 535, 536, 538, 539, 540, 541, 543, 544, 545, 546, 549, 551, 553, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 569, 570, 571, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 589, 590, 591, 593, 594, 596, 597, 598, 600, 601, 602, 606, 612, 613, 614, 615, 616, 617, 618, 621, 624, 626, 628, 629, 632, 634, 636, 637, 638, 639, 641, 645, 647, 648, 650, 651, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 670, 671, 672, 673, 674, 678, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 704, 705, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 722, 725, 733, 736, 737, 738, 742, 743, 744, 746, 748, 749, 753, 754, 755, 758, 759, 763, 765, 767, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 781, 782, 785, 787, 790, 792, 794, 795, 796, 802, 805, 806, 811, 812, 813, 816, 817, 819, 821, 822, 824, 826, 834, 839, 843, 845, 858, 861, 865, 868, 871], "common": [8, 9, 135, 197, 236, 238, 241], "spatial": [8, 9, 16, 21, 54, 55, 181, 197, 224], "pattern": [8, 9, 18, 197], "csp": [8, 9, 413], "frequenc": [9, 27, 32, 46, 59, 105, 113, 114, 137, 166, 167, 191, 200, 203, 210, 230, 231, 233, 241, 242, 243, 244, 862, 874, 884], "space": [9, 11, 13, 18, 24, 26, 30, 41, 54, 58, 101, 104, 107, 110, 147, 159, 160, 164, 166, 179, 197, 207, 208, 211, 218, 224, 236, 238, 258, 861, 868, 871, 880, 882], "represent": [10, 114, 212, 232, 868], "similar": [10, 150], "sourc": [11, 24, 26, 27, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 45, 47, 54, 58, 71, 90, 94, 95, 104, 107, 108, 109, 110, 116, 157, 159, 160, 164, 166, 173, 177, 178, 179, 181, 182, 183, 187, 197, 209, 224, 236, 237, 238, 239, 258, 861, 868, 874, 882], "continu": [12, 81, 99, 101, 147, 148, 166, 167, 191, 196, 210, 217, 219, 220, 221, 868], "target": [12, 69], "spoc": [12, 197, 420], "sensor": [13, 18, 22, 84, 96, 97, 100, 101, 116, 118, 123, 125, 133, 137, 143, 166, 171, 191, 197, 208, 212, 213, 220, 224, 233, 234, 242, 868, 880], "gener": [13, 24, 38, 92, 93, 95, 145, 190, 197, 202, 213, 224, 246, 845, 865, 868], "across": [13, 70, 82, 152, 212], "evok": [14, 30, 34, 41, 51, 69, 86, 90, 92, 94, 119, 120, 121, 127, 132, 150, 151, 152, 153, 154, 166, 167, 173, 178, 205, 213, 223, 268, 861], "respons": [14, 69, 132, 145, 152, 154, 166, 167, 178, 196, 205, 212, 213, 214, 873], "ica": [14, 76, 83, 173, 206, 562, 861], "pca": [14, 47, 258], "reduct": [14, 206, 207, 208], "techniqu": 14, "xdawn": [15, 88, 197, 563], "match": [16, 197, 206], "filter": [16, 18, 21, 49, 80, 114, 152, 181, 197, 203, 204, 206, 211, 213, 448, 449, 450, 451, 452, 453, 868], "em": [16, 414], "machin": [17, 27, 166, 198], "learn": [17, 27, 138, 166, 198], "encod": [17, 27, 671], "mvpa": [17, 27, 197], "classifi": 18, "logisticregress": 18, "recept": [19, 196], "field": [19, 151, 152, 196, 213, 868, 871], "estim": [19, 34, 38, 41, 42, 43, 44, 57, 90, 154, 166, 167, 182, 183, 196, 210, 224, 239, 248, 861, 868], "predict": [19, 868], "public": [19, 127], "creat": [19, 90, 94, 115, 116, 138, 141, 145, 150, 189, 196, 205, 208, 209, 219, 223, 224, 232, 250, 258, 845, 861, 868], "investig": 19, "reconstruct": [19, 90, 94, 156, 161, 181, 208, 861], "spectro": [21, 196], "decomposit": 21, "ssd": [21, 421], "epoch": [21, 28, 42, 94, 104, 114, 117, 138, 141, 143, 144, 145, 146, 147, 148, 150, 152, 153, 166, 167, 173, 202, 205, 206, 212, 223, 233, 236, 238, 266, 434, 435, 436, 437, 861, 868], "displai": 22, "sensit": [22, 131], "map": [22, 35, 112, 120, 131, 143, 150, 151, 218, 225, 868], "meg": [22, 55, 74, 78, 87, 123, 133, 167, 189, 213, 224, 862, 868, 874], "forward": [23, 27, 47, 109, 159, 160, 164, 166, 173, 181, 256, 270, 457, 458, 459, 460, 861, 865, 868], "left": [24, 212], "cerebellum": 24, "volum": [24, 30, 41, 50, 182], "morph": [26, 43, 44, 181, 868], "galleri": 27, "input": [27, 62], "output": [27, 62, 161, 181], "simul": [27, 89, 90, 92, 93, 94, 95, 114, 166, 196, 206, 224, 225, 226, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 881], "preprocess": [27, 77, 109, 137, 142, 166, 167, 212, 213, 215, 219, 243, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 861, 875], "statist": [27, 98, 166, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 243, 868, 874, 883], "invers": [27, 28, 29, 30, 31, 35, 36, 39, 40, 41, 42, 47, 52, 57, 94, 104, 166, 167, 178, 187, 854, 860, 861, 865, 868], "problem": [27, 36, 203], "mne": [28, 30, 41, 42, 54, 60, 76, 116, 124, 156, 161, 162, 167, 172, 173, 178, 180, 189, 201, 203, 206, 207, 211, 214, 217, 223, 228, 247, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842, 845, 847, 848, 849, 851, 852, 853, 857, 860, 864, 865, 868, 871, 879], "solut": [28, 29, 30, 35, 39, 40, 41, 47, 60, 104, 159, 173, 178, 180, 203, 206, 258, 854, 861, 865, 868], "sloreta": [29, 178, 868], "custom": [31, 127, 133, 173, 191], "solver": 31, "level": [32, 96, 129, 871], "timecours": [32, 45, 127], "dic": [32, 33, 34, 225], "beamform": [32, 33, 34, 49, 181, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303], "power": [33, 34, 42, 104, 107, 108, 109, 110, 137, 143, 152, 197, 200, 204, 225, 230, 231, 232, 242, 243], "er": 34, "lcmv": [34, 49, 181], "covari": [34, 42, 49, 64, 121, 163, 173, 178, 181, 224, 249, 263, 861, 865, 868], "spars": [35, 40, 59], "gamma": [35, 137], "empir": 35, "bayesian": 35, "method": [35, 75, 213, 217, 220, 228], "cours": [37, 94, 182], "source_estim": 37, "object": [37, 44, 138, 141, 143, 144, 146, 150, 151, 169, 170, 217, 219, 220, 223, 241, 250, 862, 865], "function": [38, 47, 48, 49, 50, 138, 212, 228, 238, 845, 849, 865, 871], "label": [38, 39, 41, 47, 104, 107, 108, 224, 272, 515, 871], "seri": [39, 70, 143], "activ": [39, 90, 94, 127, 128, 166, 181, 198, 212], "view": [39, 41, 82, 116, 144, 212, 230, 231, 258], "vector": [39, 43, 60, 173, 181, 182, 197, 428], "mix": [40, 41], "mxne": [40, 46, 59], "irmxn": 40, "set": [41, 43, 146, 152, 158, 172, 190, 209, 230, 232, 233, 236, 237, 238, 258, 845, 861, 862], "up": [41, 43, 158, 162, 258, 845, 861], "our": [41, 183], "fwd": [41, 871], "surfac": [41, 43, 159, 161, 162, 171, 182, 183, 212, 258, 703, 704, 861, 868, 871], "process": [41, 168, 181, 845, 859], "project": [42, 84, 115, 131, 171, 173, 197, 207, 258, 275, 867, 868, 871], "empti": [42, 129, 208], "room": [42, 129, 208], "appli": [42, 43, 44, 75, 138, 145, 181, 189, 191, 203, 205, 207, 243, 258], "oper": [42, 47, 52, 94, 114, 159, 160, 162, 219, 861, 863, 868], "sourcemorph": [43, 44, 278], "sourceestim": [43, 173, 176, 277], "read": [43, 44, 47, 52, 53, 64, 65, 138, 166, 169, 171, 190, 194, 218, 219, 233, 236, 238, 865, 871, 877], "write": [43, 44, 64, 218, 219, 871], "disk": [43, 44, 141], "volumetr": [44, 181, 868], "get": [44, 61, 160, 162, 172, 173, 183, 214, 243, 852, 865, 866, 870], "volsourceestim": [44, 281], "convert": [44, 115, 146, 169, 212, 258], "nifti": 44, "an": [45, 52, 53, 57, 70, 117, 143, 144, 146, 158, 160, 162, 169, 170, 173, 181, 183, 206, 209, 213, 243, 861], "xfit": 45, "like": [45, 171], "multi": 45, "iter": [46, 141], "reweight": 46, "tf": 46, "multiscal": 46, "dictionari": 46, "leakag": 47, "among": [47, 150], "circular": 47, "graph": 47, "organis": 47, "cortic": [47, 68, 126, 137, 161, 236, 238, 861, 868], "parcel": [47, 126], "point": [47, 48, 50, 158, 224, 868], "spread": [47, 48, 50, 224], "summari": [47, 70, 168, 176, 200, 201, 203, 217, 886], "all": [47, 135, 181, 201, 232, 236, 238, 845, 849, 853, 865], "evalu": [47, 212], "base": [47, 69, 138, 142, 202, 258, 863, 868], "psf": [47, 48, 50], "correl": 47, "save": [47, 141, 150, 173, 207, 217], "figur": [47, 127, 173], "option": [47, 120, 258, 845, 865], "individu": [47, 871], "cross": [48, 49, 103, 134, 845], "talk": [48, 49], "ctf": [48, 123, 185, 189, 192], "differ": [49, 76, 90, 132, 142, 166, 194, 196, 243], "matric": [49, 163, 181], "resolut": [49, 54, 55, 162, 193, 258], "two": [49, 224], "rap": 51, "music": 51, "stc": [53, 90, 176, 182, 871], "file": [53, 61, 171, 173, 190, 218, 219, 255, 258, 861, 865, 868, 871], "metric": [54, 55, 70, 661, 662, 663, 664, 665, 666, 667, 668], "compar": [55, 70, 76, 90, 132, 151, 152, 196, 212, 213, 228, 258], "eegmeg": 55, "snr": [57, 58, 210, 243], "prior": 59, "full": [60, 233], "valu": [60, 146, 243], "averag": [61, 114, 150, 152, 209, 214, 868], "info": [61, 170, 217, 223, 258, 271, 871], "fif": [61, 189, 258, 865], "how": [63, 115, 161, 163, 201, 208, 219, 860, 865], "neural": [63, 166, 196, 198, 212], "ensembl": 63, "neo": 63, "format": [63, 146, 190, 191, 868], "nois": [64, 121, 129, 178, 200, 204, 207, 208, 224, 243, 861, 862, 868], "xdf": [65, 190], "contralater": 67, "referenc": [67, 193], "signal": [68, 151, 168, 169, 207, 208, 210, 211, 212, 213, 224, 243, 868, 871], "suppress": [68, 861], "css": 68, "remov": [68, 73, 83, 206, 207, 212, 236, 238], "lag": 69, "identifi": 70, "electrod": [70, 79, 115, 135, 137, 183, 190, 868], "bridg": 70, "too": 70, "much": 70, "gel": 70, "electr": 70, "distanc": 70, "examin": [70, 142, 213], "distribut": [70, 75, 179, 843, 874], "topomap": [70, 120], "voltag": 70, "subject": [70, 94, 210, 258, 862], "eegbci": [70, 83, 382, 383, 862], "The": [70, 141, 145, 150, 168, 169, 170, 171, 176, 179, 181, 202, 217, 241, 861, 862, 867, 868, 871], "relationship": [70, 176], "between": [70, 169, 231], "imped": 70, "transform": [71, 114, 138, 157, 161, 197, 236, 238, 741, 742, 743, 744, 745, 746, 747, 868, 871], "current": [71, 116, 177, 257, 868, 873, 886], "densiti": [71, 103, 104, 108, 109, 212, 220, 243], "csd": [71, 103], "show": [72, 129, 258], "eog": [72, 73, 200, 205, 206, 208, 258], "artifact": [72, 73, 74, 75, 81, 82, 200, 204, 205, 206, 208, 258, 861], "reduc": 73, "through": 73, "import": [73, 75, 127, 189, 190, 191, 193, 258, 845], "packag": [73, 853, 868], "befor": [73, 205, 845], "after": [73, 843], "comparison": [73, 134, 228, 232], "find": [74, 224, 233, 236], "channel": [74, 78, 87, 117, 141, 146, 150, 152, 168, 169, 170, 171, 189, 201, 202, 206, 209, 212, 214, 217, 233, 236, 238, 243, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 671, 861, 862, 868, 871], "visualis": [75, 229], "nir": [75, 596, 597, 598, 599, 600, 601], "correct": [75, 97, 142, 145, 213, 228], "add": [75, 116], "artifici": 75, "tempor": [75, 84, 111, 196, 197, 236, 237, 238], "deriv": 75, "repair": [75, 204, 205, 206, 208, 868], "algorithm": [76, 258, 860, 868], "interpol": [78, 120, 201, 868], "bad": [78, 157, 158, 162, 201, 202, 236, 238, 861, 868], "locat": [79, 135, 143, 152, 171, 183, 190, 191, 212, 220, 868], "micro": 79, "scale": [79, 86, 146, 153, 868], "intracrani": [79, 135], "contact": [79, 135], "maxwel": [80, 211, 868], "movement": [80, 81, 210, 211], "compens": [80, 189, 211, 868, 871], "annot": [81, 82, 138, 169, 202, 212, 219, 260, 861], "reestim": 81, "dev_head_t": 81, "head": [81, 116, 157, 159, 161, 162, 183, 190, 193, 210, 258, 861, 868], "posit": [81, 115, 116, 193, 210], "respect": 81, "mean": [81, 152], "record": [81, 82, 166, 190, 194, 208], "muscl": [82, 83], "z": 82, "score": [82, 90], "compon": [83, 145, 181, 206], "let": 83, "": [83, 114, 161, 886], "now": 83, "replic": 83, "thi": [83, 196], "denois": [84, 88, 213], "oversampl": 84, "shift": 86, "remap": 87, "type": [87, 141, 152, 170, 196, 203, 217, 243, 258, 845, 868], "main": 90, "paramet": [90, 168, 202, 230, 232, 233, 236, 237, 238], "true": 90, "correspond": [90, 861], "amplitud": [90, 152, 202], "threshold": [90, 228, 229], "For": [90, 871], "region": [90, 116, 152], "anatomi": 94, "responss": 94, "permut": [96, 100, 232, 233, 236, 237], "f": [96, 99, 233], "test": [96, 97, 100, 138, 228, 232, 233, 236, 237, 844, 845, 851], "1d": 96, "cluster": [96, 228, 230, 231, 232, 233, 236, 237, 238, 874], "fdr": [97, 228, 232], "t": [97, 100, 236, 865], "rer": 99, "p": 99, "analys": [101, 861], "featur": [101, 137, 138], "bin": [101, 189, 865], "spectral": [103, 104, 108, 109, 220, 241, 243], "psd": [104, 108, 109, 243], "lock": [107, 145], "vectorview": [109, 189, 217], "align": [109, 135, 157, 161, 258, 671, 861], "alpha": 109, "beta": 109, "induc": 110, "whiten": [111, 121, 153, 868, 871], "ar": [111, 150, 172, 200, 207, 865, 871], "erd": 112, "explor": [113, 137], "relat": [113, 152, 852, 871], "dynam": 113, "specif": 113, "band": 113, "multitap": 114, "v": [114, 197, 217, 848], "morlet": [114, 722, 732], "stockwel": 114, "hilbert": 114, "calcul": [114, 243, 861, 868], "tfr": [114, 232, 731, 732], "wavelet": 114, "narrow": 114, "bandpass": 114, "without": [114, 157], "over": [114, 117, 141, 197, 212], "arrai": [114, 169, 218, 250, 868], "3d": [115, 151, 171, 181, 843, 865, 868, 874], "2d": [115, 171, 181, 874], "imag": [115, 116, 117, 143, 151, 173, 212, 258, 860, 868, 874], "snapshot": 115, "manual": [115, 171, 206], "viz": [116, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826], "brain": [116, 124, 127, 137, 161, 181, 212, 754], "inform": [116, 170, 172, 179, 203, 212, 258, 861, 868, 871], "modifi": [116, 144, 168, 217, 845], "highlight": 116, "includ": [116, 218, 258], "screenshot": 116, "export": [116, 146, 162, 217, 254, 443, 444, 445, 446], "scalp": [118, 142, 151], "topograph": [119, 120, 151, 153, 212], "arrowmap": 119, "basic": [120, 137, 141, 145, 150, 203, 243, 845, 871], "plot_topomap": [120, 816], "addit": 120, "more": [120, 127, 212, 871], "advanc": [120, 843], "usag": 120, "anim": 120, "layout": [123, 125, 171, 232, 315], "system": [123, 125, 166, 172, 189, 191, 194, 258, 851, 868], "neuromag": [123, 189], "bti": [123, 186, 189, 258, 862], "kit": [123, 189, 258, 484], "artemis123": [123, 189], "helmet": 124, "make": [127, 169, 218, 845, 867], "readi": 127, "montag": [127, 171], "inset": 127, "group": [128, 145, 861], "roi": [128, 243], "sort": 128, "rt": 128, "ssp": [131, 207, 208, 258, 861, 868], "topographi": [133, 142, 151, 243], "hemispher": [134, 258, 861], "t1": 135, "acpc": 135, "freesurf": [135, 156, 161, 258, 846, 861, 868, 871], "recon": 135, "ct": 135, "mr": 135, "mark": [135, 201, 861], "each": [135, 224], "warp": 135, "atla": 135, "work": [136, 137, 144, 166, 171, 173, 192, 201, 214, 218, 221, 843, 865], "seeg": [136, 862, 874], "ecog": [137, 862, 874], "templat": [137, 160, 206, 862], "evolut": 137, "sleep": [138, 862], "stage": 138, "classif": 138, "polysomnographi": 138, "psg": 138, "hypnogram": 138, "30": 138, "found": [138, 865], "same": 138, "step": [138, 156, 848, 865], "bob": 138, "engin": 138, "scikit": 138, "python": [138, 156, 161, 162, 167, 172, 173, 201, 203, 206, 207, 211, 214, 217, 223, 247, 258, 842, 843, 845, 847, 848, 849, 850, 853, 860, 863, 864, 865, 870, 874, 876], "multiclass": 138, "workflow": [138, 845, 861], "further": 138, "exercis": [138, 159, 197, 224, 233, 242, 243], "clinic": [139, 166, 874], "applic": [139, 166], "structur": [141, 150, 169, 170, 176, 189, 217, 223, 868, 871], "discontinu": 141, "subselect": [141, 218], "select": [141, 144, 150, 206, 212, 217, 236, 871], "index": [141, 146, 217, 243], "drop": [141, 150, 170, 217], "reorder": [141, 150, 217], "chang": [141, 209, 217, 845, 886], "name": [141, 152, 189, 217, 845, 871], "domain": [141, 191, 206, 217, 241], "other": [141, 150, 203, 257, 843, 845, 849, 860, 868, 872], "form": [141, 243], "baselin": [142, 203, 224, 289], "tradit": 142, "regressor": 142, "wave": [142, 191], "interact": [142, 143, 219, 220, 863], "term": 142, "pipelin": [143, 874], "script": [143, 173, 863], "projector": [143, 207, 208, 209, 220], "spectrum": [143, 241, 710], "metadata": [144, 145], "restrict": 144, "datafram": [144, 146], "queri": [144, 170, 217], "ad": [144, 145, 173, 207], "auto": 145, "make_metadata": [145, 437], "specifi": [145, 191], "keep": 145, "onli": [145, 849, 853], "first": [145, 156, 845, 848, 874], "new": [145, 845, 886], "column": [145, 169], "describ": [145, 845], "stimul": [145, 243], "side": 145, "knowledg": 145, "ern": 145, "panda": 146, "wide": 146, "versu": [146, 232, 863], "long": [146, 217], "divid": 147, "equal": [147, 218], "characterist": 147, "fix": [147, 162, 179, 180], "length": [147, 203], "case": 147, "segment": [148, 166], "subset": [150, 170, 243], "memori": [150, 189, 868], "core": [150, 849, 862, 865], "combin": [150, 218], "trace": 151, "butterfli": 151, "arrow": 151, "joint": [151, 242], "subplot": 151, "potenti": [152, 872], "global": 152, "gfp": 152, "interest": [152, 233, 867], "grand": 152, "latenc": 152, "measur": [152, 232, 238, 258], "peak": 152, "mri": [156, 157, 160, 161, 173, 181, 183, 258, 859, 862, 868], "anatom": [156, 861], "fsaverag": [156, 160, 181, 862], "coordin": [157, 161, 191, 258, 861, 868, 871], "frame": [157, 161, 861], "understand": [157, 161], "definit": [157, 233, 868, 871], "A": [157, 865], "good": 157, "defac": 157, "tran": [157, 871], "gui": [157, 258, 472, 473], "autom": 158, "approach": [158, 258], "coregistr": [158, 159, 173, 258, 367, 472], "initi": 158, "fiduci": 158, "refin": 158, "icp": 158, "omit": 158, "final": 158, "bem": [159, 162, 173, 258, 304, 305, 306, 307, 308, 309, 310, 311, 861, 865, 868], "adult": 160, "setup": [160, 225, 232, 233, 843, 848, 856], "infant": [160, 862], "surrog": 160, "under": [161, 865], "hood": 161, "ra": [161, 183], "spheric": 161, "decim": [161, 865], "mni": [161, 181], "affin": 161, "inflat": 161, "blender": 162, "edit": [162, 173], "low": [162, 200, 203], "high": [162, 203, 258, 862, 871], "tip": 162, "what": [162, 169, 200, 206, 207, 208, 258, 827, 852, 865, 886], "you": 162, "still": [162, 865], "error": 162, "clean": [162, 258], "dens": 162, "smooth": [162, 868], "topolog": 162, "deal": 162, "topologi": [162, 868], "pymeshfix": 162, "should": [163, 852, 865], "i": [163, 169, 171, 206, 207, 208, 255, 843, 849, 851, 852, 865, 868], "regular": [163, 178, 196, 373, 865, 868], "tutori": [166, 174, 184, 185, 186, 874], "introductori": [166, 174], "overview": [167, 200, 845, 852, 861, 862, 869, 871], "detect": [167, 200, 202, 212], "experiment": 167, "place": [168, 171, 863], "pick": 168, "copi": 168, "pars": 169, "stim": [169, 671], "middl": 169, "embed": 169, "multipl": [169, 228, 232, 865], "per": [169, 861], "obtain": 170, "built": [171, 220], "eeglab": [171, 190, 849, 872], "sphere": [171, 868], "keyword": 171, "avail": 171, "mani": 171, "control": 171, "digit": [171, 868], "render": [171, 181, 843], "configur": [172, 845, 851, 855], "where": 172, "store": 172, "environ": [172, 845], "log": [172, 190, 855], "your": [172, 844, 845], "start": [173, 870], "report": [173, 203, 258, 276, 879], "inverseoper": [173, 528], "code": [173, 241, 845, 848, 862], "e": 173, "g": 173, "tag": [173, 243, 871], "entir": 173, "folder": [173, 258], "html": 173, "descript": [173, 868], "text": 173, "inspect": [176, 242, 868], "sourcespac": [176, 279], "src": 176, "equival": 177, "ecd": 177, "eloreta": [178, 868], "role": 179, "orient": [179, 180, 868], "loos": 179, "limit": 179, "them": 179, "discard": 179, "variou": 180, "free": [180, 228], "introduct": 181, "handl": [181, 201], "depth": [181, 868], "bia": [181, 208], "On": [181, 871], "slice": 181, "orthoview": 181, "glass": 181, "maximum": [181, 228], "voxel": [181, 183], "three": 181, "given": 183, "prerequisit": 183, "coord": 183, "elekta": [184, 189], "phantom": [184, 185, 186], "4d": [186, 258, 862], "neuroimag": [186, 189, 862], "devic": [189, 190, 191, 193, 868], "megin": 189, "triux": 189, "fil": 189, "4": [189, 886], "d": 189, "dir": 189, "polhemu": 189, "softwar": [189, 203, 852, 860, 868, 871, 872], "gradient": [189, 868, 871], "ricoh": 189, "con": 189, "sqd": 189, "fieldtrip": [189, 233], "mat": 189, "arbitrari": [189, 238], "brainvis": 190, "vhdr": 190, "vmrk": 190, "european": 190, "edf": 190, "biosemi": 190, "bdf": 190, "gdf": 190, "neuroscan": 190, "cnt": 190, "egi": 190, "simpl": [190, 865], "binari": 190, "mff": 190, "fdt": 190, "nicolet": 190, "eximia": 190, "nxe": 190, "persyst": 190, "lai": 190, "dat": 190, "nihon": 190, "kohden": 190, "21e": 190, "pnt": 190, "xdfz": 190, "shape": 190, "fnir": [191, 212, 862], "standard": [191, 212, 228, 383, 845], "snirf": 191, "nirx": 191, "directori": [191, 862, 868, 871], "hdr": 191, "hitachi": 191, "csv": 191, "boxi": 191, "txt": 191, "legaci": [191, 241], "tsv": 191, "auditori": [192, 862], "eyetrack": [193, 582], "sr": 193, "research": 193, "eyelink": [193, 386, 862], "asc": 193, "ey": [193, 214], "gaze": 193, "angl": 193, "href": 193, "pupil": [193, 214], "size": [193, 228], "veloc": 193, "strf": 196, "audio": 196, "recov": 196, "philosophi": [197, 863], "class": [197, 241, 843, 851, 858, 874], "scaler": [197, 422], "psdestim": [197, 418], "filterestim": [197, 415], "comodul": 197, "do": [200, 865], "drift": [200, 204, 206], "line": [200, 204, 258, 845, 871], "heartbeat": 200, "ecg": [200, 206, 208, 258], "ocular": 200, "block": 201, "execut": 201, "when": [201, 207, 845], "look": [201, 206, 865], "why": [201, 865, 868], "reject": [202, 861], "span": 202, "break": 202, "reject_by_annot": 202, "programmat": [202, 219], "background": [203, 204, 207, 209, 211, 224], "statement": 203, "fir": 203, "iir": 203, "some": [203, 871], "pitfal": [203, 872], "pass": 203, "default": [203, 868], "c": [203, 851], "cutoff": 203, "order": 203, "transit": 203, "bandwidth": 203, "roll": 203, "off": [203, 843], "passband": 203, "rippl": 203, "stopband": 203, "attenu": 203, "delai": 203, "direct": 203, "resampl": [204, 228, 453, 865], "slow": [204, 206, 865], "best": [204, 207], "practic": [204, 207], "origin": [205, 224], "subtract": 205, "dimension": 206, "ignor": 206, "terminologi": 207, "environment": 208, "affect": [208, 219], "choos": 208, "number": [208, 217, 868], "via": [208, 213, 849, 868, 874], "infinit": 209, "rest": [209, 862], "bipolar": 209, "hpi": 210, "separ": [211, 243], "sss": 211, "spatiotempor": [211, 233], "tsss": 211, "caveat": 211, "infrar": 212, "spectroscopi": 212, "provid": [212, 228], "meaning": 212, "appropri": 212, "intens": 212, "qualiti": 212, "haemoglobin": 212, "heart": 212, "rate": [212, 228], "consist": [212, 223, 845], "tap": 212, "right": 212, "hand": 212, "homogen": 213, "nuisanc": 213, "tracker": 214, "din": 214, "attribut": 217, "sampl": [217, 230, 232, 237, 404, 862], "len": 217, "get_data": 217, "wai": 217, "exclud": 218, "id": [218, 849, 871], "descriptor": 218, "togeth": 218, "brows": [220, 258], "scratch": 223, "unit": [223, 868], "corrupt": 224, "known": 224, "period": 224, "sinusoid": 224, "distant": 224, "center": [224, 856], "vertic": 224, "infer": 228, "hypothesi": 228, "null": 228, "parametr": [228, 230, 231], "hat": 228, "varianc": 228, "adjust": 228, "non": [228, 230, 231], "bonferroni": 228, "fals": 228, "discoveri": 228, "adjac": [228, 230, 233, 236], "enhanc": [228, 886], "tfce": 228, "signific": [229, 236], "1": [230, 886], "mass": 232, "univari": 232, "twowai": 232, "repeat": [232, 238], "anova": [232, 238], "account": 232, "neighbor": 233, "spatio": [236, 237, 238], "one": [236, 238], "2": [237, 886], "contrast": 238, "epochsspectrum": [241, 708], "migrat": [241, 872], "quick": 241, "action": 241, "inter": 242, "itc": 242, "ssvep": [243, 409, 862], "vssr": 243, "ratio": 243, "spectra": 243, "12": [243, 886], "hz": 243, "indic": 243, "check": [243, 258, 868], "15": [243, 886], "debrief": 243, "bonu": 243, "durat": 243, "resolv": 243, "bibliographi": 246, "paper": 247, "cite": [247, 860, 865], "o": [255, 849, 868], "fund": [257, 867], "support": [257, 849, 868, 874], "institut": [257, 867, 873], "partner": [257, 867, 873], "former": [257, 873], "command": [258, 845, 865], "tool": [258, 845, 852], "anonym": 258, "browse_raw": 258, "bti2fiff": 258, "magneswh3600": 258, "note": [258, 871], "clean_eog_ecg": 258, "ie": 258, "compare_fiff": [258, 762], "fiff": [258, 871], "compute_proj_ecg": [258, 574], "compute_proj_eog": [258, 575], "coreg": [258, 367, 368, 369], "flash_bem": 258, "3": [258, 886], "layer": 258, "flash": [258, 868], "freeview_bem_surfac": 258, "freeview": 258, "kit2fiff": 258, "nyu": 258, "make_scalp_surfac": [258, 310], "maxfilt": 258, "prepare_bem_model": 258, "colloc": 258, "setup_forward_model": 258, "setup_source_spac": [258, 654], "bilater": 258, "subsampl": 258, "show_fiff": [258, 513], "content": [258, 862, 874], "show_info": 258, "surf2bem": 258, "sys_info": [258, 705], "watershed_bem": 258, "watersh": [258, 865, 868], "acqparserfif": 259, "baseepoch": 261, "bihemilabel": 262, "dipolefix": 265, "epochsarrai": 267, "evokedarrai": 269, "mixedsourceestim": 273, "mixedvectorsourceestim": 274, "vectorsourceestim": 280, "volvectorsourceestim": 282, "add_reference_channel": 283, "add_source_space_dist": 284, "annotations_from_ev": 285, "apply_forward": 286, "apply_forward_raw": 287, "average_forward_solut": 288, "rescal": 289, "apply_d": 291, "apply_dics_csd": 292, "apply_dics_epoch": 293, "apply_dics_tfr_epoch": 294, "apply_lcmv": 295, "apply_lcmv_cov": 296, "apply_lcmv_epoch": 297, "apply_lcmv_raw": 298, "make_d": 299, "make_lcmv": 300, "make_lcmv_resolution_matrix": 301, "rap_mus": 302, "read_beamform": 303, "conductormodel": 304, "convert_flash_mri": 305, "distance_to_bem": 306, "fit_sphere_to_headshap": 307, "get_fitting_dig": 308, "make_flash_bem": 309, "make_watershed_bem": 311, "channel_indices_by_typ": 312, "channel_typ": 313, "digmontag": 314, "combine_channel": 316, "compute_dev_head_t": 317, "compute_native_head_t": 318, "equalize_channel": [319, 438], "find_ch_adjac": 320, "find_layout": 321, "fix_mag_coil_typ": 322, "generate_2d_layout": 323, "get_builtin_ch_adjac": 324, "get_builtin_montag": 325, "make_1020_channel_select": 326, "make_dig_montag": 327, "make_eeg_layout": 328, "make_grid_layout": 329, "make_standard_montag": 330, "read_ch_adjac": 331, "read_custom_montag": 332, "read_dig_captrak": 333, "read_dig_dat": 334, "read_dig_egi": 335, "read_dig_fif": 336, "read_dig_hpt": 337, "read_dig_localit": 338, "read_dig_polhemus_isotrak": 339, "read_layout": 340, "read_polhemus_fastscan": 341, "rename_channel": [342, 642], "chpi": [343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354], "compute_chpi_amplitud": 343, "compute_chpi_loc": 344, "compute_chpi_snr": 345, "compute_head_po": 346, "extract_chpi_locs_ctf": 347, "extract_chpi_locs_kit": 348, "filter_chpi": 349, "get_active_chpi": 350, "get_chpi_info": 351, "head_pos_to_trans_rot_t": 352, "read_head_po": 353, "write_head_po": 354, "combine_evok": 355, "compute_covari": 356, "compute_proj_epoch": 357, "compute_proj_evok": 358, "compute_proj_raw": 359, "compute_rank": 360, "compute_raw_covari": 361, "compute_source_morph": 362, "concatenate_epoch": 363, "concatenate_ev": 364, "concatenate_raw": 365, "convert_forward_solut": 366, "estimate_head_mri_t": 368, "get_mni_fiduci": 369, "count_ev": 370, "cov": [371, 372, 373, 871], "compute_whiten": 371, "prepare_noise_cov": 372, "create_default_subject": 374, "create_info": 375, "cuda": [376, 377, 378, 843], "get_cuda_memori": 376, "init_cuda": 377, "set_cuda_devic": 378, "bst_auditori": 379, "data_path": [379, 380, 381, 384, 385, 386, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411], "bst_raw": 380, "bst_rest": 381, "load_data": [382, 397], "epilepsy_ecog": 384, "erp_cor": 385, "fetch_aparc_sub_parcel": 387, "fetch_dataset": 388, "fetch_fsaverag": 389, "fetch_hcp_mmp_parcel": 390, "fetch_infant_templ": 391, "fetch_phantom": 392, "fnirs_motor": 393, "has_dataset": 394, "hf_sef": 395, "kiloword": [396, 862], "misc": 398, "mtrf": [399, 862], "multimod": [400, 862], "phantom_4dbti": 402, "refmeg_nois": 403, "sleep_physionet": [405, 406], "ag": 405, "fetch_data": [405, 406], "temazepam": 406, "somato": 407, "spm_face": 408, "ucl_opm_auditori": 410, "visual_92_categori": 411, "decimate_surfac": 412, "generalizingestim": 416, "linearmodel": 417, "receptivefield": 419, "slidingestim": 423, "temporalfilt": 424, "timedelayingridg": 425, "timefrequ": 426, "unsupervisedspatialfilt": 427, "compute_em": 429, "cross_val_multiscor": 430, "get_coef": 431, "dig_mri_dist": 432, "get_phantom_dipol": 433, "average_mov": 434, "combine_event_id": 435, "equalize_epoch_count": 436, "define_target_ev": 439, "match_event_nam": 440, "shift_time_ev": 441, "events_from_annot": 442, "export_epoch": 443, "export_evok": 444, "export_evokeds_mff": 445, "export_raw": 446, "extract_label_time_cours": 447, "construct_iir_filt": 448, "create_filt": 449, "estimate_ringing_sampl": 450, "filter_data": 451, "notch_filt": 452, "find_ev": 454, "find_stim_step": 455, "fit_dipol": 456, "compute_depth_prior": 457, "compute_orient_prior": 458, "restrict_forward_to_label": 459, "restrict_forward_to_stc": 460, "get_config": 461, "get_config_path": 462, "get_head_surf": 463, "get_meg_helmet_surf": 464, "get_montage_volume_label": 465, "get_volume_labels_from_aseg": 466, "get_volume_labels_from_src": 467, "grade_to_tri": 468, "grade_to_vertic": 469, "grand_averag": 470, "grow_label": 471, "locate_ieeg": 473, "head_to_mni": 474, "head_to_mri": 475, "inverse_spars": [476, 477, 478, 479], "gamma_map": 476, "make_stc_from_dipol": 477, "mixed_norm": 478, "tf_mixed_norm": 479, "io": [480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514], "baseraw": 480, "rawarrai": 482, "anonymize_info": 483, "read_mrk": 484, "read_fiduci": 485, "read_info": 486, "read_raw": 487, "read_raw_artemis123": 488, "read_raw_bdf": 489, "read_raw_boxi": 490, "read_raw_brainvis": 491, "read_raw_bti": 492, "read_raw_cnt": 493, "read_raw_ctf": 494, "read_raw_curri": 495, "read_raw_edf": 496, "read_raw_eeglab": 497, "read_raw_egi": 498, "read_raw_eximia": 499, "read_raw_eyelink": 500, "read_raw_fieldtrip": 501, "read_raw_fif": 502, "read_raw_fil": 503, "read_raw_gdf": 504, "read_raw_hitachi": 505, "read_raw_kit": 506, "read_raw_nedf": 507, "read_raw_nicolet": 508, "read_raw_nihon": 509, "read_raw_nirx": 510, "read_raw_persyst": 511, "read_raw_snirf": 512, "write_fiduci": 514, "select_sourc": 515, "label_sign_flip": 516, "labels_to_stc": 517, "make_ad_hoc_cov": 518, "make_bem_model": 519, "make_bem_solut": 520, "make_field_map": 521, "make_fixed_length_epoch": 522, "make_fixed_length_ev": 523, "make_forward_dipol": 524, "make_forward_solut": 525, "make_sphere_model": 526, "merge_ev": 527, "minimum_norm": [528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547], "apply_invers": 529, "apply_inverse_cov": 530, "apply_inverse_epoch": 531, "apply_inverse_raw": 532, "apply_inverse_tfr_epoch": 533, "compute_rank_invers": 534, "compute_source_psd": 535, "compute_source_psd_epoch": 536, "estimate_snr": 537, "get_cross_talk": 538, "get_point_spread": 539, "make_inverse_oper": 540, "make_inverse_resolution_matrix": 541, "prepare_inverse_oper": 542, "read_inverse_oper": 543, "resolution_metr": 544, "source_band_induced_pow": 545, "source_induced_pow": 546, "write_inverse_oper": 547, "morph_label": 548, "morph_source_spac": 549, "open_doc": 550, "open_report": 551, "parse_config": 552, "pick_channel": 553, "pick_channels_cov": 554, "pick_channels_forward": 555, "pick_channels_regexp": 556, "pick_ev": 557, "pick_info": 558, "pick_typ": 559, "pick_types_forward": 560, "eogregress": 561, "annotate_amplitud": 564, "annotate_break": 565, "annotate_mov": 566, "annotate_muscle_zscor": 567, "annotate_nan": 568, "compute_average_dev_head_t": 569, "compute_bridged_electrod": 570, "compute_current_source_dens": 571, "compute_fine_calibr": 572, "compute_maxwell_basi": 573, "compute_proj_hfc": 576, "corrmap": 577, "cortical_signal_suppress": 578, "create_ecg_epoch": 579, "create_eog_epoch": 580, "equalize_bad": 581, "set_channel_types_eyetrack": 582, "find_bad_channels_maxwel": 583, "find_ecg_ev": 584, "find_eog_ev": 585, "fix_stim_artifact": 586, "ica_find_ecg_ev": 587, "ica_find_eog_ev": 588, "ieeg": [589, 590, 591], "make_montage_volum": 589, "project_sensors_onto_brain": 590, "warp_montag": 591, "infomax": 592, "interpolate_bridged_electrod": 593, "maxwell_filt": 594, "maxwell_filter_prepare_emptyroom": 595, "beer_lambert_law": 596, "optical_dens": 597, "scalp_coupling_index": 598, "short_channel": 599, "source_detector_dist": 600, "temporal_derivative_distribution_repair": 601, "oversampled_temporal_project": 602, "peak_find": 603, "read_eog_regress": 604, "read_fine_calibr": 605, "read_ica": 606, "read_ica_eeglab": 607, "realign_raw": 608, "regress_artifact": 609, "write_fine_calibr": 610, "random_parcel": 611, "read_annot": 612, "read_bem_solut": 613, "read_bem_surfac": 614, "read_cov": 615, "read_dipol": 616, "read_epoch": 617, "read_epochs_eeglab": 618, "read_epochs_fieldtrip": 619, "read_epochs_kit": 620, "read_ev": 621, "read_evoked_besa": 622, "read_evoked_fieldtrip": 623, "read_evok": 624, "read_evokeds_mff": 625, "read_forward_solut": 626, "read_freesurfer_lut": 627, "read_label": 628, "read_labels_from_annot": 629, "read_lta": 630, "read_morph_map": 631, "read_proj": 632, "read_reject_paramet": 633, "read_source_estim": 634, "read_source_morph": 635, "read_source_spac": 636, "read_surfac": 637, "read_talxfm": 638, "read_tran": 639, "read_tri": 640, "read_vectorview_select": 641, "scale_bem": 643, "scale_label": 644, "scale_mri": 645, "scale_source_spac": 646, "sensitivity_map": 647, "set_bipolar_refer": 648, "set_cache_dir": 649, "set_config": 650, "set_eeg_refer": 651, "set_log_fil": 652, "set_log_level": 653, "setup_volume_source_spac": 655, "sourcesimul": 656, "add_chpi": 657, "add_ecg": 658, "add_eog": 659, "add_nois": 660, "cosine_scor": 661, "f1_score": 662, "peak_position_error": 663, "precision_scor": 664, "recall_scor": 665, "region_localization_error": 666, "roc_auc_scor": 667, "spatial_deviation_error": 668, "select_source_in_label": 669, "simulate_evok": 670, "simulate_raw": 671, "simulate_sparse_stc": 672, "simulate_stc": 673, "source_spac": [674, 675], "compute_distance_to_sensor": 674, "get_decimated_surfac": 675, "spatial_dist_adjac": 676, "spatial_inter_hemi_adjac": 677, "spatial_src_adjac": 678, "spatial_tris_adjac": 679, "spatio_temporal_dist_adjac": 680, "spatio_temporal_src_adjac": 681, "spatio_temporal_tris_adjac": 682, "split_label": 683, "stat": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700], "bonferroni_correct": 684, "bootstrap_confidence_interv": 685, "combine_adjac": 686, "f_mway_rm": 687, "f_onewai": 688, "f_threshold_mway_rm": 689, "fdr_correct": 690, "linear_regress": 691, "linear_regression_raw": 692, "permutation_cluster_1samp_test": 693, "permutation_cluster_test": 694, "permutation_t_test": 695, "spatio_temporal_cluster_1samp_test": 696, "spatio_temporal_cluster_test": 697, "summarize_clusters_stc": 698, "ttest_1samp_no_p": 699, "ttest_ind_no_p": 700, "stc_near_sensor": 701, "stc_to_label": 702, "complete_surface_info": 703, "read_curvatur": 704, "time_frequ": [706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739], "averagetfr": 706, "crossspectraldens": 707, "epochstfr": 709, "csd_array_fouri": 711, "csd_array_morlet": 712, "csd_array_multitap": 713, "csd_fourier": 714, "csd_morlet": 715, "csd_multitap": 716, "csd_tfr": 717, "dpss_window": 718, "fit_iir_model_raw": 719, "fwhm": 720, "istft": 721, "pick_channels_csd": 723, "psd_array_multitap": 724, "psd_array_welch": 725, "read_csd": 726, "read_spectrum": 727, "read_tfr": 728, "stft": 729, "stftfreq": 730, "cwt": 731, "tfr_array_morlet": 733, "tfr_array_multitap": 734, "tfr_array_stockwel": 735, "tfr_morlet": 736, "tfr_multitap": 737, "tfr_stockwel": 738, "write_tfr": 739, "transform_surface_to": 740, "apply_volume_registr": 742, "apply_volume_registration_point": 743, "compute_volume_registr": 744, "quat_to_rot": 745, "read_ras_mni_t": 746, "rot_to_quat": 747, "use_coil_def": 748, "use_log_level": 749, "util": [750, 751, 871], "deprec": [750, 845], "warn": [751, 845], "verbos": 752, "vertex_to_mni": 753, "clickableimag": 755, "figure3d": 756, "add_background_imag": 757, "centers_to_edg": 758, "circular_layout": 759, "close_3d_figur": 760, "close_all_3d_figur": 761, "create_3d_figur": 763, "get_3d_backend": 764, "get_brain_class": 765, "get_browser_backend": 766, "iter_topographi": 767, "link_brain": 768, "mne_analyze_colormap": 769, "plot_align": 770, "plot_arrowmap": 771, "plot_bem": 772, "plot_brain_colorbar": 773, "plot_bridged_electrod": 774, "plot_ch_adjac": 775, "plot_channel_labels_circl": 776, "plot_chpi_snr": 777, "plot_compare_evok": 778, "plot_cov": 779, "plot_csd": 780, "plot_dipole_amplitud": 781, "plot_dipole_loc": 782, "plot_drop_log": 783, "plot_epoch": 784, "plot_epochs_imag": 785, "plot_epochs_psd_topomap": 786, "plot_ev": 787, "plot_evok": 788, "plot_evoked_field": 789, "plot_evoked_imag": 790, "plot_evoked_joint": 791, "plot_evoked_topo": 792, "plot_evoked_topomap": 793, "plot_evoked_whit": 794, "plot_filt": 795, "plot_head_posit": 796, "plot_ica_compon": 797, "plot_ica_overlai": 798, "plot_ica_properti": 799, "plot_ica_scor": 800, "plot_ica_sourc": 801, "plot_ideal_filt": 802, "plot_layout": 803, "plot_montag": 804, "plot_projs_joint": 805, "plot_projs_topomap": 806, "plot_raw": 807, "plot_raw_psd": 808, "plot_regression_weight": 809, "plot_sensor": 810, "plot_snr_estim": 811, "plot_source_estim": 812, "plot_sparse_source_estim": 813, "plot_tfr_topomap": 814, "plot_topo_image_epoch": 815, "plot_vector_source_estim": 817, "plot_volume_source_estim": 818, "set_3d_backend": 819, "set_3d_opt": 820, "set_3d_titl": 821, "set_3d_view": 822, "set_browser_backend": 823, "snapshot_brain_montag": 824, "use_3d_backend": 825, "use_browser_backend": 826, "write_bem_solut": 828, "write_bem_surfac": 829, "write_cov": 830, "write_ev": 831, "write_evok": 832, "write_forward_solut": 833, "write_head_bem": 834, "write_label": 835, "write_labels_to_annot": 836, "write_proj": 837, "write_source_spac": 838, "write_surfac": 839, "write_tran": 840, "glossari": 841, "homepag": 842, "jupyt": 843, "notebook": 843, "jupyterlab": 843, "fa": [843, 851], "brand": [843, 851], "window": [843, 865], "instal": [843, 844, 846, 847, 848, 849, 850, 851, 852], "headless": 843, "linux": 843, "server": 843, "develop": [843, 845, 853, 864], "version": [843, 853, 886], "gpu": 843, "acceler": 843, "screen": 843, "mesa": 843, "troubleshoot": [843, 851], "troubl": 843, "upgrad": [843, 853], "maco": [843, 851, 865], "contribut": 845, "guid": 845, "git": 845, "gnu": 845, "fork": 845, "repositori": 845, "virtual": 845, "github": 845, "ssh": 845, "convent": 845, "requir": [845, 851], "must": 845, "have": [845, 861, 865], "coverag": 845, "document": [845, 867, 869, 871, 873, 874], "avoid": 845, "api": [845, 863, 874, 876, 886], "possibl": 845, "decor": 845, "changelog": [845, 886], "contributor": 845, "recur": 845, "pull": 845, "request": 845, "pr": 845, "fast": 845, "thorough": 845, "style": 845, "adher": 845, "guidelin": [845, 873], "we": 845, "mostli": [845, 863], "follow": 845, "numpi": [845, 868], "docstr": 845, "everywher": 845, "guidanc": 845, "organ": [845, 863, 868], "return": 845, "run": [845, 865], "suit": [845, 852], "build": 845, "pip": 849, "conda": 849, "depend": [849, 886], "minim": 849, "scenario": 849, "appl": 851, "download": [851, 865], "help": [852, 865, 866], "updat": [853, 874], "martino": 856, "cpp": 857, "most": 858, "typic": 861, "m": [861, 865], "recommend": 861, "subdivis": 861, "icosahedron": 861, "octahedron": 861, "creation": 861, "approxim": 861, "area": 861, "been": 861, "assum": 861, "1000": 861, "cm2": 861, "mesh": [861, 865, 868], "triangul": 861, "boundari": [861, 868], "element": [861, 868], "trigger": 862, "ucl": 862, "state": 862, "somatosensori": 862, "92": 862, "categori": 862, "polysomnograph": 862, "databas": [862, 874], "miscellan": 862, "integr": [863, 874], "scientif": 863, "stack": 863, "submodul": 863, "unifi": 863, "In": [863, 874], "frequent": 865, "ask": 865, "question": 865, "faq": 865, "issu": 865, "can": 865, "pyvista": 865, "extrem": 865, "even": 865, "sure": 865, "x": 865, "my": 865, "y": 865, "think": 865, "bug": [865, 886], "danger": 865, "pickl": 865, "later": 865, "onc": 865, "again": 865, "cpu": 865, "though": 865, "didn": 865, "tell": 865, "mysteri": 865, "take": 865, "forev": 865, "incorrect": 865, "govern": 867, "bdfl": 867, "steer": [867, 873], "council": [867, 873], "membership": 867, "conflict": 867, "privat": 867, "commun": [867, 873], "decis": 867, "histori": [867, 873], "acknowledg": 867, "licens": 867, "implement": 868, "detail": [868, 871], "intern": 868, "float": 868, "precis": 868, "effici": [868, 874], "preload": 868, "explicitli": 868, "access": [868, 874], "concept": 868, "subspac": 868, "tessel": 868, "discret": 868, "geometri": [868, 871], "coil": [868, 871], "magnet": 868, "normal": 868, "accur": 868, "accuraci": 868, "purpos": 868, "patch": 868, "constraint": 868, "weight": 868, "matlab": 871, "routin": 871, "w": 871, "demonstr": 871, "toolbox": 871, "constant": 871, "taginfo": 871, "dig": 871, "coildef": 871, "see": 871, "ch": 871, "proj": 871, "comp": 871, "mea": 871, "surf": 871, "inv": 871, "reginv": 871, "noisenorm": 871, "fill": 871, "mne_prepare_inverse_oper": 871, "benevol": 873, "dictat": 873, "life": 873, "particip": 873, "lead": 873, "roadmap": 874, "page": 874, "openmeeg": 874, "improv": 874, "bind": 874, "progress": 874, "divers": 874, "equiti": 874, "inclus": 874, "dei": 874, "deep": 874, "better": 874, "db": 874, "pediatr": 874, "complet": 874, "overhaul": 874, "realtim": 878, "dev0": 886, "2023": 886, "02": 886, "23": 886, "0": 886, "2022": 886, "21": 886, "author": 886, "10": 886, "11": 886, "08": 886, "03": 886, "behavior": 886, "24": 886, "2021": 886, "04": 886, "27": 886, "22": 886, "2020": 886, "17": 886, "09": 886, "20": 886, "19": 886, "2019": 886, "18": 886, "05": 886, "2018": 886, "16": 886, "01": 886, "2017": 886, "14": 886, "13": 886, "2016": 886, "2015": 886, "26": 886, "9": 886, "8": 886, "2014": 886, "06": 886, "25": 886, "7": 886, "2013": 886, "6": 886, "5": 886, "2012": 886, "2011": 886}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Connectivity Analysis Examples": [[0, "connectivity-analysis-examples"], [27, "connectivity-analysis-examples"]], "Brainstorm raw (median nerve) dataset": [[1, "brainstorm-raw-median-nerve-dataset"]], "References": [[1, "references"], [4, "references"], [8, "references"], [10, "references"], [12, "references"], [13, "references"], [15, "references"], [16, "references"], [18, "references"], [19, "references"], [21, "references"], [33, "references"], [35, "references"], [40, "references"], [42, "references"], [43, "references"], [44, "references"], [46, "references"], [51, "references"], [54, "references"], [55, "references"], [58, "references"], [59, "references"], [65, "references"], [70, "references"], [71, "references"], [74, "references"], [75, "references"], [78, "references"], [83, "references"], [84, "references"], [88, "references"], [94, "references"], [101, "references"], [109, "references"], [112, "references"], [113, "references"], [117, "references"], [119, "references"], [121, "references"], [126, "references"], [129, "references"], [135, "references"], [138, "references"], [142, "references"], [145, "references"], [152, "references"], [156, "references"], [158, "references"], [163, "references"], [177, "references"], [179, "references"], [181, "references"], [184, "references"], [185, "references"], [192, "references"], [196, "references"], [197, "references"], [201, "references"], [203, "references"], [205, "references"], [206, "references"], [207, "references"], [208, "references"], [209, "references"], [211, "references"], [213, "references"], [225, "references"], [228, "references"], [229, "references"], [233, "references"], [241, "references"], [861, "references"], [862, "references"], [865, "references"], [868, "references"]], "HF-SEF dataset": [[2, "hf-sef-dataset"]], "Examples on open datasets": [[3, "examples-on-open-datasets"], [27, "examples-on-open-datasets"]], "Single trial linear regression analysis with the LIMO dataset": [[4, "single-trial-linear-regression-analysis-with-the-limo-dataset"]], "About the data": [[4, "about-the-data"]], "Load the data": [[4, "load-the-data"], [138, "load-the-data"], [142, "load-the-data"], [160, "load-the-data"]], "Visualize events": [[4, "visualize-events"]], "Visualize condition ERPs": [[4, "visualize-condition-erps"]], "Visualize effect of stimulus phase-coherence": [[4, "visualize-effect-of-stimulus-phase-coherence"]], "Prepare data for linear regression analysis": [[4, "prepare-data-for-linear-regression-analysis"]], "Define predictor variables and design matrix": [[4, "define-predictor-variables-and-design-matrix"]], "Extract regression coefficients": [[4, "extract-regression-coefficients"]], "Plot model results": [[4, "plot-model-results"]], "Optically pumped magnetometer (OPM) data": [[5, "optically-pumped-magnetometer-opm-data"]], "Prepare data for localization": [[5, "prepare-data-for-localization"]], "Perform dipole fitting": [[5, "perform-dipole-fitting"]], "Perform minimum-norm localization": [[5, "perform-minimum-norm-localization"]], "Computation times": [[6, "computation-times"], [20, "computation-times"], [25, "computation-times"], [56, "computation-times"], [66, "computation-times"], [85, "computation-times"], [91, "computation-times"], [102, "computation-times"], [106, "computation-times"], [130, "computation-times"], [140, "computation-times"], [149, "computation-times"], [155, "computation-times"], [165, "computation-times"], [175, "computation-times"], [188, "computation-times"], [195, "computation-times"], [199, "computation-times"], [216, "computation-times"], [222, "computation-times"], [227, "computation-times"], [235, "computation-times"], [240, "computation-times"], [245, "computation-times"]], "From raw data to dSPM on SPM Faces dataset": [[7, "from-raw-data-to-dspm-on-spm-faces-dataset"]], "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)": [[8, "motor-imagery-decoding-from-eeg-data-using-the-common-spatial-pattern-csp"]], "Decoding in time-frequency space using Common Spatial Patterns (CSP)": [[9, "decoding-in-time-frequency-space-using-common-spatial-patterns-csp"]], "Representational Similarity Analysis": [[10, "representational-similarity-analysis"]], "Decoding source space data": [[11, "decoding-source-space-data"]], "Continuous Target Decoding with SPoC": [[12, "continuous-target-decoding-with-spoc"]], "Decoding sensor space data with generalization across time and conditions": [[13, "decoding-sensor-space-data-with-generalization-across-time-and-conditions"]], "Analysis of evoked response using ICA and PCA reduction techniques": [[14, "analysis-of-evoked-response-using-ica-and-pca-reduction-techniques"]], "XDAWN Decoding From EEG data": [[15, "xdawn-decoding-from-eeg-data"]], "Compute effect-matched-spatial filtering (EMS)": [[16, "compute-effect-matched-spatial-filtering-ems"]], "Machine Learning (Decoding, Encoding, and MVPA)": [[17, "machine-learning-decoding-encoding-and-mvpa"], [27, "machine-learning-decoding-encoding-and-mvpa"]], "Linear classifier on sensor data with plot patterns and filters": [[18, "linear-classifier-on-sensor-data-with-plot-patterns-and-filters"]], "Decoding in sensor space using a LogisticRegression classifier": [[18, "decoding-in-sensor-space-using-a-logisticregression-classifier"]], "Receptive Field Estimation and Prediction": [[19, "receptive-field-estimation-and-prediction"]], "Load the data from the publication": [[19, "load-the-data-from-the-publication"]], "Create and fit a receptive field model": [[19, "create-and-fit-a-receptive-field-model"]], "Investigate model coefficients": [[19, "investigate-model-coefficients"], [19, "id5"]], "Create and fit a stimulus reconstruction model": [[19, "create-and-fit-a-stimulus-reconstruction-model"]], "Visualize stimulus reconstruction": [[19, "visualize-stimulus-reconstruction"]], "Compute Spectro-Spatial Decomposition (SSD) spatial filters": [[21, "compute-spectro-spatial-decomposition-ssd-spatial-filters"]], "Epoched data": [[21, "epoched-data"]], "Display sensitivity maps for EEG and MEG sensors": [[22, "display-sensitivity-maps-for-eeg-and-meg-sensors"]], "Forward modeling": [[23, "forward-modeling"], [27, "forward-modeling"]], "Generate a left cerebellum volume source space": [[24, "generate-a-left-cerebellum-volume-source-space"]], "Use source space morphing": [[26, "use-source-space-morphing"]], "Examples Gallery": [[27, "examples-gallery"]], "Input/Output": [[27, "input-output"], [62, "input-output"]], "Data Simulation": [[27, "data-simulation"], [89, "data-simulation"]], "Preprocessing": [[27, "preprocessing"], [77, "preprocessing"], [109, "preprocessing"], [142, "preprocessing"], [166, "preprocessing"], [167, "preprocessing"], [215, "preprocessing"], [861, "preprocessing"], [875, "preprocessing"]], "Visualization": [[27, "visualization"], [55, "visualization"], [122, "visualization"], [178, "visualization"], [845, "visualization"], [885, "visualization"]], "Time-Frequency Examples": [[27, "time-frequency-examples"], [105, "time-frequency-examples"]], "Statistics Examples": [[27, "statistics-examples"], [98, "statistics-examples"]], "Inverse problem and source analysis": [[27, "inverse-problem-and-source-analysis"], [36, "inverse-problem-and-source-analysis"]], "Compute MNE-dSPM inverse solution on single epochs": [[28, "compute-mne-dspm-inverse-solution-on-single-epochs"]], "Compute sLORETA inverse solution on raw data": [[29, "compute-sloreta-inverse-solution-on-raw-data"]], "Compute MNE-dSPM inverse solution on evoked data in volume source space": [[30, "compute-mne-dspm-inverse-solution-on-evoked-data-in-volume-source-space"]], "Source localization with a custom inverse solver": [[31, "source-localization-with-a-custom-inverse-solver"]], "Compute source level time-frequency timecourses using a DICS beamformer": [[32, "compute-source-level-time-frequency-timecourses-using-a-dics-beamformer"]], "Compute source power using DICS beamformer": [[33, "compute-source-power-using-dics-beamformer"]], "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM": [[34, "compute-evoked-ers-source-power-using-dics-lcmv-beamformer-and-dspm"]], "Compute covariances": [[34, "compute-covariances"]], "Plot source estimates": [[34, "plot-source-estimates"]], "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method": [[35, "compute-a-sparse-inverse-solution-using-the-gamma-map-empirical-bayesian-method"]], "Extracting time course from source_estimate object": [[37, "extracting-time-course-from-source-estimate-object"]], "Generate a functional label from source estimates": [[38, "generate-a-functional-label-from-source-estimates"]], "Extracting the time series of activations in a label": [[39, "extracting-the-time-series-of-activations-in-a-label"]], "Compute inverse solution": [[39, "compute-inverse-solution"], [41, "compute-inverse-solution"], [178, "compute-inverse-solution"]], "View source activations": [[39, "view-source-activations"]], "Using vector solutions": [[39, "using-vector-solutions"]], "Compute sparse inverse solution with mixed norm: MxNE and irMxNE": [[40, "compute-sparse-inverse-solution-with-mixed-norm-mxne-and-irmxne"]], "Compute MNE inverse solution on evoked data with a mixed source space": [[41, "compute-mne-inverse-solution-on-evoked-data-with-a-mixed-source-space"]], "Set up our source space": [[41, "set-up-our-source-space"]], "View the source space": [[41, "view-the-source-space"]], "Compute the fwd matrix": [[41, "compute-the-fwd-matrix"]], "Plot the mixed source estimate": [[41, "plot-the-mixed-source-estimate"]], "Plot the surface": [[41, "plot-the-surface"]], "Plot the volume": [[41, "plot-the-volume"]], "Process labels": [[41, "process-labels"]], "Compute source power estimate by projecting the covariance with MNE": [[42, "compute-source-power-estimate-by-projecting-the-covariance-with-mne"]], "Compute empty-room covariance": [[42, "compute-empty-room-covariance"]], "Epoch the data": [[42, "epoch-the-data"]], "Compute and plot covariances": [[42, "compute-and-plot-covariances"]], "Apply inverse operator to covariance": [[42, "apply-inverse-operator-to-covariance"]], "Morph surface source estimate": [[43, "morph-surface-source-estimate"]], "Setting up SourceMorph for SourceEstimate": [[43, "setting-up-sourcemorph-for-sourceestimate"]], "Apply morph to (Vector) SourceEstimate": [[43, "apply-morph-to-vector-sourceestimate"]], "Plot results": [[43, "plot-results"], [44, "plot-results"]], "Reading and writing SourceMorph from and to disk": [[43, "reading-and-writing-sourcemorph-from-and-to-disk"], [44, "reading-and-writing-sourcemorph-from-and-to-disk"]], "Morph volumetric source estimate": [[44, "morph-volumetric-source-estimate"]], "Get a SourceMorph object for VolSourceEstimate": [[44, "get-a-sourcemorph-object-for-volsourceestimate"]], "Apply morph to VolSourceEstimate": [[44, "apply-morph-to-volsourceestimate"]], "Convert morphed VolSourceEstimate into NIfTI": [[44, "convert-morphed-volsourceestimate-into-nifti"]], "Computing source timecourses with an XFit-like multi-dipole model": [[45, "computing-source-timecourses-with-an-xfit-like-multi-dipole-model"]], "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary": [[46, "compute-iterative-reweighted-tf-mxne-with-multiscale-time-frequency-dictionary"]], "Visualize source leakage among labels using a circular graph": [[47, "visualize-source-leakage-among-labels-using-a-circular-graph"]], "Load forward solution and inverse operator": [[47, "load-forward-solution-and-inverse-operator"]], "Read and organise labels for cortical parcellation": [[47, "read-and-organise-labels-for-cortical-parcellation"]], "Compute point-spread function summaries (PCA) for all labels": [[47, "compute-point-spread-function-summaries-pca-for-all-labels"]], "Evaluate leakage based on label-to-label PSF correlations": [[47, "evaluate-leakage-based-on-label-to-label-psf-correlations"]], "Save the figure (optional)": [[47, "save-the-figure-optional"]], "Plot PSFs for individual labels": [[47, "plot-psfs-for-individual-labels"]], "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)": [[48, "plot-point-spread-functions-psfs-and-cross-talk-functions-ctfs"]], "Visualize": [[48, "visualize"], [49, "visualize"], [50, "visualize"]], "Compute cross-talk functions for LCMV beamformers": [[49, "compute-cross-talk-functions-for-lcmv-beamformers"]], "Compute LCMV filters with different data covariance matrices": [[49, "compute-lcmv-filters-with-different-data-covariance-matrices"]], "Compute resolution matrices for the two LCMV beamformers": [[49, "compute-resolution-matrices-for-the-two-lcmv-beamformers"]], "Plot point-spread functions (PSFs) for a volume": [[50, "plot-point-spread-functions-psfs-for-a-volume"]], "Compute Rap-Music on evoked data": [[51, "compute-rap-music-on-evoked-data"]], "Reading an inverse operator": [[52, "reading-an-inverse-operator"]], "Reading an STC file": [[53, "reading-an-stc-file"]], "Compute spatial resolution metrics in source space": [[54, "compute-spatial-resolution-metrics-in-source-space"]], "MNE": [[54, "mne"]], "dSPM": [[54, "dspm"], [868, "dspm"]], "Visualize results": [[54, "visualize-results"]], "Compute spatial resolution metrics to compare MEG with EEG+MEG": [[55, "compute-spatial-resolution-metrics-to-compare-meg-with-eeg-meg"]], "EEGMEG": [[55, "eegmeg"]], "MEG": [[55, "meg"]], "Estimate data SNR using an inverse": [[57, "estimate-data-snr-using-an-inverse"]], "Computing source space SNR": [[58, "computing-source-space-snr"]], "EEG": [[58, "eeg"]], "Compute MxNE with time-frequency sparse prior": [[59, "compute-mxne-with-time-frequency-sparse-prior"]], "Plotting the full vector-valued MNE solution": [[60, "plotting-the-full-vector-valued-mne-solution"]], "Getting averaging info from .fif files": [[61, "getting-averaging-info-from-fif-files"]], "How to use data in neural ensemble (NEO) format": [[63, "how-to-use-data-in-neural-ensemble-neo-format"]], "Reading/Writing a noise covariance matrix": [[64, "reading-writing-a-noise-covariance-matrix"]], "Reading XDF EEG data": [[65, "reading-xdf-eeg-data"]], "Using contralateral referencing for EEG": [[67, "using-contralateral-referencing-for-eeg"]], "Cortical Signal Suppression (CSS) for removal of cortical signals": [[68, "cortical-signal-suppression-css-for-removal-of-cortical-signals"]], "Define target events based on time lag, plot evoked response": [[69, "define-target-events-based-on-time-lag-plot-evoked-response"]], "Identify EEG Electrodes Bridged by too much Gel": [[70, "ex-eeg-bridging"]], "Compute Electrical Distance Metric": [[70, "compute-electrical-distance-metric"]], "Examine an Electrical Distance Matrix": [[70, "examine-an-electrical-distance-matrix"]], "Examine the Distribution of Electrical Distances": [[70, "examine-the-distribution-of-electrical-distances"]], "Plot Electrical Distances on a Topomap": [[70, "plot-electrical-distances-on-a-topomap"]], "Plot the Raw Voltage Time Series for Bridged Electrodes": [[70, "plot-the-raw-voltage-time-series-for-bridged-electrodes"]], "Compare Bridging Across Subjects in the EEGBCI Dataset": [[70, "compare-bridging-across-subjects-in-the-eegbci-dataset"]], "The Relationship Between Bridging and Impedances": [[70, "the-relationship-between-bridging-and-impedances"]], "Summary": [[70, "summary"], [168, "summary"], [176, "summary"], [200, "summary"], [201, "summary"], [203, "summary"]], "Transform EEG data using current source density (CSD)": [[71, "transform-eeg-data-using-current-source-density-csd"]], "Show EOG artifact timing": [[72, "show-eog-artifact-timing"]], "Reduce EOG artifacts through regression": [[73, "reduce-eog-artifacts-through-regression"]], "Import packages and load data": [[73, "import-packages-and-load-data"]], "Perform regression and remove EOG": [[73, "perform-regression-and-remove-eog"]], "Before/after comparison": [[73, "before-after-comparison"]], "Find MEG reference channel artifacts": [[74, "find-meg-reference-channel-artifacts"]], "Visualise NIRS artifact correction methods": [[75, "visualise-nirs-artifact-correction-methods"]], "Import data": [[75, "import-data"]], "Add artificial artifacts to data": [[75, "add-artificial-artifacts-to-data"]], "Apply temporal derivative distribution repair": [[75, "apply-temporal-derivative-distribution-repair"]], "Compare the different ICA algorithms in MNE": [[76, "compare-the-different-ica-algorithms-in-mne"]], "Interpolate bad channels for MEG/EEG channels": [[78, "interpolate-bad-channels-for-meg-eeg-channels"]], "Locating micro-scale intracranial electrode contacts": [[79, "locating-micro-scale-intracranial-electrode-contacts"]], "Maxwell filter data with movement compensation": [[80, "maxwell-filter-data-with-movement-compensation"]], "Annotate movement artifacts and reestimate dev_head_t": [[81, "annotate-movement-artifacts-and-reestimate-dev-head-t"]], "Plot continuous head position with respect to the mean recording position": [[81, "plot-continuous-head-position-with-respect-to-the-mean-recording-position"]], "Plot raw data with annotated movement": [[81, "plot-raw-data-with-annotated-movement"]], "Annotate muscle artifacts": [[82, "annotate-muscle-artifacts"]], "Plot muscle z-scores across recording": [[82, "plot-muscle-z-scores-across-recording"]], "View the annotations": [[82, "view-the-annotations"]], "Removing muscle ICA components": [[83, "removing-muscle-ica-components"]], "Let\u2019s now replicate this on the EEGBCI dataset": [[83, "let-s-now-replicate-this-on-the-eegbci-dataset"]], "Plot sensor denoising using oversampled temporal projection": [[84, "plot-sensor-denoising-using-oversampled-temporal-projection"]], "Shifting time-scale in evoked data": [[86, "shifting-time-scale-in-evoked-data"]], "Remap MEG channel types": [[87, "remap-meg-channel-types"]], "XDAWN Denoising": [[88, "xdawn-denoising"]], "Compare simulated and estimated source activity": [[90, "compare-simulated-and-estimated-source-activity"]], "Define main parameters of sources": [[90, "define-main-parameters-of-sources"]], "Create simulated source activity": [[90, "create-simulated-source-activity"], [94, "create-simulated-source-activity"]], "Simulate raw data": [[90, "simulate-raw-data"], [94, "simulate-raw-data"]], "Compute evoked from raw data": [[90, "compute-evoked-from-raw-data"]], "Create true stcs corresponding to evoked": [[90, "create-true-stcs-corresponding-to-evoked"]], "Reconstruct simulated sources": [[90, "reconstruct-simulated-sources"]], "Compute performance scores for different source amplitude thresholds": [[90, "compute-performance-scores-for-different-source-amplitude-thresholds"]], "For region": [[90, "for-region"]], "For Dipoles": [[90, "for-dipoles"]], "Generate simulated evoked data": [[92, "generate-simulated-evoked-data"]], "Generate simulated raw data": [[93, "generate-simulated-raw-data"]], "Simulate raw data using subject anatomy": [[94, "simulate-raw-data-using-subject-anatomy"]], "Extract epochs and compute evoked responsses": [[94, "extract-epochs-and-compute-evoked-responsses"]], "Reconstruct simulated source time courses using dSPM inverse operator": [[94, "reconstruct-simulated-source-time-courses-using-dspm-inverse-operator"]], "Generate simulated source data": [[95, "generate-simulated-source-data"]], "Permutation F-test on sensor data with 1D cluster level": [[96, "permutation-f-test-on-sensor-data-with-1d-cluster-level"]], "FDR correction on T-test on sensor data": [[97, "fdr-correction-on-t-test-on-sensor-data"]], "Regression on continuous data (rER[P/F])": [[99, "regression-on-continuous-data-rer-p-f"]], "Permutation T-test on sensor data": [[100, "permutation-t-test-on-sensor-data"]], "Analysing continuous features with binning and regression in sensor space": [[101, "analysing-continuous-features-with-binning-and-regression-in-sensor-space"]], "Compute a cross-spectral density (CSD) matrix": [[103, "compute-a-cross-spectral-density-csd-matrix"]], "Compute Power Spectral Density of inverse solution from single epochs": [[104, "compute-power-spectral-density-of-inverse-solution-from-single-epochs"]], "Compute source space PSD in label": [[104, "compute-source-space-psd-in-label"]], "Compute power and phase lock in label of the source space": [[107, "compute-power-and-phase-lock-in-label-of-the-source-space"]], "Compute source power spectral density (PSD) in a label": [[108, "compute-source-power-spectral-density-psd-in-a-label"]], "Compute source power spectral density (PSD) of VectorView and OPM data": [[109, "compute-source-power-spectral-density-psd-of-vectorview-and-opm-data"]], "Alignment and forward": [[109, "alignment-and-forward"]], "Alpha": [[109, "alpha"]], "Beta": [[109, "beta"]], "Compute induced power in the source space with dSPM": [[110, "compute-induced-power-in-the-source-space-with-dspm"]], "Temporal whitening with AR model": [[111, "temporal-whitening-with-ar-model"]], "Compute and visualize ERDS maps": [[112, "compute-and-visualize-erds-maps"]], "Explore event-related dynamics for specific frequency bands": [[113, "explore-event-related-dynamics-for-specific-frequency-bands"]], "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)": [[114, "time-frequency-on-simulated-data-multitaper-vs-morlet-vs-stockwell-vs-hilbert"]], "Simulate data": [[114, "simulate-data"]], "Calculate a time-frequency representation (TFR)": [[114, "calculate-a-time-frequency-representation-tfr"]], "Multitaper transform": [[114, "multitaper-transform"]], "Stockwell (S) transform": [[114, "stockwell-s-transform"]], "Morlet Wavelets": [[114, "morlet-wavelets"]], "Narrow-bandpass Filter and Hilbert Transform": [[114, "narrow-bandpass-filter-and-hilbert-transform"]], "Calculating a TFR without averaging over epochs": [[114, "calculating-a-tfr-without-averaging-over-epochs"]], "Operating on arrays": [[114, "operating-on-arrays"]], "How to convert 3D electrode positions to a 2D image": [[115, "how-to-convert-3d-electrode-positions-to-a-2d-image"]], "Load data": [[115, "load-data"], [116, "load-data"], [179, "load-data"]], "Project 3D electrodes to a 2D snapshot": [[115, "project-3d-electrodes-to-a-2d-snapshot"]], "Manually creating 2D electrode positions": [[115, "manually-creating-2d-electrode-positions"]], "Plotting with mne.viz.Brain": [[116, "plotting-with-mne-viz-brain"]], "Add source information": [[116, "add-source-information"]], "Modify the view of the brain": [[116, "modify-the-view-of-the-brain"]], "Highlight a region on the brain": [[116, "highlight-a-region-on-the-brain"]], "Include the head in the image": [[116, "include-the-head-in-the-image"]], "Add sensors positions": [[116, "add-sensors-positions"]], "Add current dipoles": [[116, "add-current-dipoles"]], "Create a screenshot for exporting the brain image": [[116, "create-a-screenshot-for-exporting-the-brain-image"]], "Visualize channel over epochs as an image": [[117, "visualize-channel-over-epochs-as-an-image"]], "Plotting EEG sensors on the scalp": [[118, "plotting-eeg-sensors-on-the-scalp"]], "Plotting topographic arrowmaps of evoked data": [[119, "plotting-topographic-arrowmaps-of-evoked-data"]], "Plotting topographic maps of evoked data": [[120, "plotting-topographic-maps-of-evoked-data"]], "Basic plot_topomap() options": [[120, "basic-plot-topomap-options"]], "Additional plot_topomap() options": [[120, "additional-plot-topomap-options"]], "More advanced usage": [[120, "more-advanced-usage"]], "Interpolating topomaps": [[120, "interpolating-topomaps"]], "Animating the topomap": [[120, "animating-the-topomap"]], "Whitening evoked data with a noise covariance": [[121, "whitening-evoked-data-with-a-noise-covariance"]], "Plotting sensor layouts of MEG systems": [[123, "plotting-sensor-layouts-of-meg-systems"]], "Neuromag": [[123, "neuromag"]], "CTF": [[123, "ctf"]], "BTi": [[123, "bti"]], "KIT": [[123, "kit"]], "Artemis123": [[123, "artemis123"]], "Plot the MNE brain and helmet": [[124, "plot-the-mne-brain-and-helmet"]], "Plotting sensor layouts of EEG systems": [[125, "plotting-sensor-layouts-of-eeg-systems"]], "Plot a cortical parcellation": [[126, "plot-a-cortical-parcellation"]], "Make figures more publication ready": [[127, "make-figures-more-publication-ready"]], "Imports": [[127, "imports"]], "Evoked plot with brain activation": [[127, "evoked-plot-with-brain-activation"]], "Custom timecourse with montage inset": [[127, "custom-timecourse-with-montage-inset"]], "Plot single trial activity, grouped by ROI and sorted by RT": [[128, "plot-single-trial-activity-grouped-by-roi-and-sorted-by-rt"]], "Show noise levels from empty room data": [[129, "show-noise-levels-from-empty-room-data"]], "Sensitivity map of SSP projections": [[131, "sensitivity-map-of-ssp-projections"]], "Compare evoked responses for different conditions": [[132, "compare-evoked-responses-for-different-conditions"]], "Plot custom topographies for MEG sensors": [[133, "plot-custom-topographies-for-meg-sensors"]], "Cross-hemisphere comparison": [[134, "cross-hemisphere-comparison"]], "Locating intracranial electrode contacts": [[135, "locating-intracranial-electrode-contacts"]], "Aligning the T1 to ACPC": [[135, "aligning-the-t1-to-acpc"]], "Freesurfer recon-all": [[135, "freesurfer-recon-all"]], "Aligning the CT to the MR": [[135, "aligning-the-ct-to-the-mr"]], "Marking the Location of Each Electrode Contact": [[135, "marking-the-location-of-each-electrode-contact"]], "Warping to a Common Atlas": [[135, "warping-to-a-common-atlas"]], "Working with sEEG data": [[136, "working-with-seeg-data"]], "Working with ECoG data": [[137, "working-with-ecog-data"]], "Load in data and perform basic preprocessing": [[137, "load-in-data-and-perform-basic-preprocessing"]], "Explore the electrodes on a template brain": [[137, "explore-the-electrodes-on-a-template-brain"]], "Compute frequency features of the data": [[137, "compute-frequency-features-of-the-data"]], "Plot Gamma Power on cortical sensors": [[137, "plot-gamma-power-on-cortical-sensors"]], "Visualize the time-evolution of the gamma power on the brain": [[137, "visualize-the-time-evolution-of-the-gamma-power-on-the-brain"]], "Sleep stage classification from polysomnography (PSG) data": [[138, "sleep-stage-classification-from-polysomnography-psg-data"]], "Read the PSG data and Hypnograms to create a raw object": [[138, "read-the-psg-data-and-hypnograms-to-create-a-raw-object"]], "Extract 30s events from annotations": [[138, "extract-30s-events-from-annotations"]], "Create Epochs from the data based on the events found in the annotations": [[138, "create-epochs-from-the-data-based-on-the-events-found-in-the-annotations"]], "Applying the same steps to the test data from Bob": [[138, "applying-the-same-steps-to-the-test-data-from-bob"]], "Feature Engineering": [[138, "feature-engineering"]], "Design a scikit-learn transformer from a Python function": [[138, "design-a-scikit-learn-transformer-from-a-python-function"]], "Multiclass classification workflow using scikit-learn": [[138, "multiclass-classification-workflow-using-scikit-learn"]], "Further analysis of the data": [[138, "further-analysis-of-the-data"]], "Exercise": [[138, "exercise"], [159, "exercise"], [197, "exercise"], [242, "exercise"]], "Clinical applications": [[139, "clinical-applications"], [166, "clinical-applications"]], "The Epochs data structure: discontinuous data": [[141, "the-epochs-data-structure-discontinuous-data"]], "Creating Epoched data from a Raw object": [[141, "creating-epoched-data-from-a-raw-object"]], "Basic visualization of Epochs objects": [[141, "basic-visualization-of-epochs-objects"]], "Subselecting epochs": [[141, "subselecting-epochs"]], "Selecting epochs by index": [[141, "selecting-epochs-by-index"]], "Selecting, dropping, and reordering channels": [[141, "selecting-dropping-and-reordering-channels"], [150, "selecting-dropping-and-reordering-channels"], [217, "selecting-dropping-and-reordering-channels"]], "Changing channel name and type": [[141, "changing-channel-name-and-type"], [217, "changing-channel-name-and-type"]], "Selection in the time domain": [[141, "selection-in-the-time-domain"], [217, "selection-in-the-time-domain"]], "Extracting data in other forms": [[141, "extracting-data-in-other-forms"]], "Loading and saving Epochs objects to disk": [[141, "loading-and-saving-epochs-objects-to-disk"]], "Iterating over Epochs": [[141, "iterating-over-epochs"]], "Regression-based baseline correction": [[142, "regression-based-baseline-correction"]], "Traditional baselining": [[142, "traditional-baselining"]], "Regression-based baselining": [[142, "regression-based-baselining"]], "Plot the baseline regressor": [[142, "plot-the-baseline-regressor"]], "Plot the ERPs": [[142, "plot-the-erps"]], "Plot the scalp topographies and difference waves": [[142, "plot-the-scalp-topographies-and-difference-waves"]], "Examine the interaction term": [[142, "examine-the-interaction-term"]], "Visualizing epoched data": [[143, "visualizing-epoched-data"]], "Plotting Epochs as time series": [[143, "plotting-epochs-as-time-series"]], "Interactivity in pipelines and scripts": [[143, null]], "Plotting projectors from an Epochs object": [[143, "plotting-projectors-from-an-epochs-object"]], "Plotting sensor locations": [[143, "plotting-sensor-locations"]], "Plotting the power spectrum of Epochs": [[143, "plotting-the-power-spectrum-of-epochs"]], "Plotting Epochs as an image map": [[143, "plotting-epochs-as-an-image-map"]], "Working with Epoch metadata": [[144, "working-with-epoch-metadata"]], "Viewing Epochs metadata": [[144, "viewing-epochs-metadata"]], "Restrictions on metadata DataFrames": [[144, null]], "Modifying the metadata": [[144, "modifying-the-metadata"]], "Selecting epochs using metadata queries": [[144, "selecting-epochs-using-metadata-queries"]], "Adding metadata to an Epochs object": [[144, "adding-metadata-to-an-epochs-object"]], "Auto-generating Epochs metadata": [[145, "auto-generating-epochs-metadata"]], "Preparation": [[145, "preparation"]], "Creating metadata from events": [[145, "creating-metadata-from-events"]], "The basics of make_metadata": [[145, "the-basics-of-make-metadata"]], "Specifying time-locked events": [[145, "specifying-time-locked-events"]], "Keeping only the first events of a group": [[145, "keeping-only-the-first-events-of-a-group"]], "Adding new columns to describe stimulation side and response correctness": [[145, "adding-new-columns-to-describe-stimulation-side-and-response-correctness"]], "Creating Epochs with metadata, and visualizing ERPs": [[145, "creating-epochs-with-metadata-and-visualizing-erps"]], "Applying the knowledge: visualizing the ERN component": [[145, "applying-the-knowledge-visualizing-the-ern-component"]], "Exporting Epochs to Pandas DataFrames": [[146, "exporting-epochs-to-pandas-dataframes"]], "Converting an Epochs object to a DataFrame": [[146, "converting-an-epochs-object-to-a-dataframe"]], "Scaling time and channel values": [[146, "scaling-time-and-channel-values"]], "Setting the index": [[146, "setting-the-index"]], "Wide- versus long-format DataFrames": [[146, "wide-versus-long-format-dataframes"]], "Divide continuous data into equally-spaced epochs": [[147, "divide-continuous-data-into-equally-spaced-epochs"]], "Characteristics of Fixed Length Epochs": [[147, "characteristics-of-fixed-length-epochs"]], "Example Use Case for Fixed Length Epochs: Connectivity Analysis": [[147, "example-use-case-for-fixed-length-epochs-connectivity-analysis"]], "Segmenting continuous data into epochs": [[148, "segmenting-continuous-data-into-epochs"], [166, "segmenting-continuous-data-into-epochs"]], "The Evoked data structure: evoked/averaged data": [[150, "the-evoked-data-structure-evoked-averaged-data"]], "Creating Evoked objects from Epochs": [[150, "creating-evoked-objects-from-epochs"]], "Basic visualization of Evoked objects": [[150, "basic-visualization-of-evoked-objects"]], "Subsetting Evoked data": [[150, "subsetting-evoked-data"]], "Evokeds are not memory-mapped": [[150, null]], "Similarities among the core data structures": [[150, "similarities-among-the-core-data-structures"]], "Loading and saving Evoked data": [[150, "loading-and-saving-evoked-data"]], "Combining Evoked objects": [[150, "combining-evoked-objects"]], "Other uses of Evoked objects": [[150, "other-uses-of-evoked-objects"]], "Visualizing Evoked data": [[151, "visualizing-evoked-data"]], "Plotting signal traces": [[151, "plotting-signal-traces"]], "Butterfly plots": [[151, null]], "Plotting scalp topographies": [[151, "plotting-scalp-topographies"]], "Arrow maps": [[151, "arrow-maps"]], "Joint plots": [[151, "joint-plots"]], "Comparing Evoked objects": [[151, "comparing-evoked-objects"]], "Image plots": [[151, "image-plots"]], "Topographical subplots": [[151, "topographical-subplots"]], "3D Field Maps": [[151, "d-field-maps"]], "EEG analysis - Event-Related Potentials (ERPs)": [[152, "eeg-analysis-event-related-potentials-erps"]], "Channel names and types": [[152, "channel-names-and-types"]], "Channel locations": [[152, "channel-locations"]], "Setting the EEG reference": [[152, "setting-the-eeg-reference"], [209, "setting-the-eeg-reference"]], "Filtering": [[152, "filtering"]], "Evoked responses: epoching and averaging": [[152, "evoked-responses-epoching-and-averaging"]], "Global field power (GFP)": [[152, "global-field-power-gfp"]], "Averaging across channels with regions of interest": [[152, "averaging-across-channels-with-regions-of-interest"]], "Comparing conditions": [[152, "comparing-conditions"]], "Grand averages": [[152, "grand-averages"]], "Amplitude and latency measures": [[152, "amplitude-and-latency-measures"]], "Peak latency and amplitude": [[152, "peak-latency-and-amplitude"]], "Mean Amplitude": [[152, "mean-amplitude"]], "Plotting whitened data": [[153, "plotting-whitened-data"]], "Raw data with whitening": [[153, "raw-data-with-whitening"]], "Epochs with whitening": [[153, "epochs-with-whitening"]], "Evoked data with whitening": [[153, "evoked-data-with-whitening"]], "Evoked data with scaled whitening": [[153, "evoked-data-with-scaled-whitening"]], "Topographic plot with whitening": [[153, "topographic-plot-with-whitening"]], "Estimating evoked responses": [[154, "estimating-evoked-responses"], [166, "estimating-evoked-responses"], [167, "estimating-evoked-responses"]], "FreeSurfer MRI reconstruction": [[156, "freesurfer-mri-reconstruction"]], "First steps": [[156, "first-steps"], [848, "first-steps"]], "Anatomical reconstruction": [[156, "anatomical-reconstruction"]], "Use with MNE-Python": [[156, "use-with-mne-python"]], "\u2018fsaverage\u2019": [[156, "fsaverage"]], "Source alignment and coordinate frames": [[157, "source-alignment-and-coordinate-frames"]], "Understanding coordinate frames": [[157, "understanding-coordinate-frames"]], "Coordinate frame definitions": [[157, "coordinate-frame-definitions"]], "A bad example": [[157, "a-bad-example"]], "A good example": [[157, "a-good-example"]], "Visualizing the transformations": [[157, "visualizing-the-transformations"]], "Example: MRI defacing": [[157, "example-mri-defacing"]], "Defining the head\u2194MRI trans using the GUI": [[157, "defining-the-headmri-trans-using-the-gui"]], "Alignment without MRI": [[157, "alignment-without-mri"]], "Using an automated approach to coregistration": [[158, "using-an-automated-approach-to-coregistration"]], "Set up the coregistration model": [[158, "set-up-the-coregistration-model"]], "Initial fit with fiducials": [[158, "initial-fit-with-fiducials"]], "Refining with ICP": [[158, "refining-with-icp"]], "Omitting bad points": [[158, "omitting-bad-points"]], "Final coregistration fit": [[158, "final-coregistration-fit"]], "Head model and forward computation": [[159, "head-model-and-forward-computation"]], "Computing the forward operator": [[159, "computing-the-forward-operator"]], "Compute and visualize BEM surfaces": [[159, "compute-and-visualize-bem-surfaces"]], "Visualizing the coregistration": [[159, "visualizing-the-coregistration"]], "Compute Source Space": [[159, "compute-source-space"]], "Compute forward solution": [[159, "compute-forward-solution"]], "EEG forward operator with a template MRI": [[160, "eeg-forward-operator-with-a-template-mri"]], "Adult template MRI (fsaverage)": [[160, "adult-template-mri-fsaverage"]], "Setup source space and compute forward": [[160, "setup-source-space-and-compute-forward"]], "Infant MRI surrogates": [[160, "infant-mri-surrogates"]], "Get an infant MRI template": [[160, "get-an-infant-mri-template"]], "How MNE uses FreeSurfer\u2019s outputs": [[161, "how-mne-uses-freesurfer-s-outputs"]], "MRI coordinate frames": [[161, "mri-coordinate-frames"]], "Under the hood": [[161, null]], "\u201cMRI coordinates\u201d in MNE-Python: FreeSurfer surface RAS": [[161, "mri-coordinates-in-mne-python-freesurfer-surface-ras"]], "Head coordinate frame": [[161, null]], "Using FreeSurfer\u2019s surface reconstructions": [[161, "using-freesurfer-s-surface-reconstructions"]], "Cortical alignment (spherical)": [[161, "cortical-alignment-spherical"]], "Surface decimation": [[161, "surface-decimation"]], "FreeSurfer\u2019s MNI affine transformation": [[161, "freesurfer-s-mni-affine-transformation"]], "Understanding the inflated brain": [[161, "understanding-the-inflated-brain"]], "Fixing BEM and head surfaces": [[162, "fixing-bem-and-head-surfaces"]], "Exporting surfaces to Blender": [[162, "exporting-surfaces-to-blender"]], "Editing in Blender": [[162, "editing-in-blender"]], "Using the fixed surfaces in MNE-Python": [[162, "using-the-fixed-surfaces-in-mne-python"]], "Editing the head surfaces": [[162, "editing-the-head-surfaces"]], "Low-resolution head": [[162, "low-resolution-head"]], "High-resolution head": [[162, "high-resolution-head"]], "Blender editing tips": [[162, "blender-editing-tips"]], "What if you still get an error?": [[162, "what-if-you-still-get-an-error"]], "Blender operations": [[162, "blender-operations"]], "Cleaning up a bad dense head surface by smoothing": [[162, "cleaning-up-a-bad-dense-head-surface-by-smoothing"]], "Topological errors": [[162, "topological-errors"]], "Dealing with topology in blender": [[162, "dealing-with-topology-in-blender"]], "Dealing with topology using pymeshfix": [[162, "dealing-with-topology-using-pymeshfix"]], "Computing a covariance matrix": [[163, "computing-a-covariance-matrix"]], "Plot the covariance matrices": [[163, "plot-the-covariance-matrices"]], "How should I regularize the covariance matrix?": [[163, "how-should-i-regularize-the-covariance-matrix"], [865, "how-should-i-regularize-the-covariance-matrix"]], "Forward models and source spaces": [[164, "forward-models-and-source-spaces"], [166, "forward-models-and-source-spaces"]], "Tutorials": [[166, "tutorials"]], "Introductory tutorials": [[166, "introductory-tutorials"], [174, "introductory-tutorials"]], "Reading data for different recording systems": [[166, "reading-data-for-different-recording-systems"], [194, "reading-data-for-different-recording-systems"]], "Working with continuous data": [[166, "working-with-continuous-data"], [221, "working-with-continuous-data"]], "Time-frequency analysis": [[166, "time-frequency-analysis"], [167, "time-frequency-analysis"], [244, "time-frequency-analysis"]], "Source localization and inverses": [[166, "source-localization-and-inverses"], [187, "source-localization-and-inverses"]], "Statistical analysis of sensor data": [[166, "statistical-analysis-of-sensor-data"], [234, "statistical-analysis-of-sensor-data"]], "Statistical analysis of source estimates": [[166, "statistical-analysis-of-source-estimates"], [239, "statistical-analysis-of-source-estimates"]], "Machine learning models of neural activity": [[166, "machine-learning-models-of-neural-activity"], [198, "machine-learning-models-of-neural-activity"]], "Simulation": [[166, "simulation"], [226, "simulation"], [881, "simulation"]], "Overview of MEG/EEG analysis with MNE-Python": [[167, "overview-of-meg-eeg-analysis-with-mne-python"]], "Loading data": [[167, "loading-data"]], "Detecting experimental events": [[167, "detecting-experimental-events"]], "Epoching continuous data": [[167, "epoching-continuous-data"]], "Inverse modeling": [[167, "inverse-modeling"]], "Modifying data in-place": [[168, "modifying-data-in-place"]], "Signal processing": [[168, "signal-processing"]], "Channel picking": [[168, "channel-picking"]], "The copy parameter": [[168, "the-copy-parameter"]], "Parsing events from raw data": [[169, "parsing-events-from-raw-data"]], "The Events and Annotations data structures": [[169, "the-events-and-annotations-data-structures"]], "What is a STIM channel?": [[169, "what-is-a-stim-channel"]], "Converting a STIM channel signal to an Events array": [[169, "converting-a-stim-channel-signal-to-an-events-array"]], "The middle column of the Events array": [[169, null]], "Reading embedded events as Annotations": [[169, "reading-embedded-events-as-annotations"]], "Converting between Events arrays and Annotations objects": [[169, "converting-between-events-arrays-and-annotations-objects"]], "Making multiple events per annotation": [[169, "making-multiple-events-per-annotation"]], "The Info data structure": [[170, "the-info-data-structure"]], "Querying the Info object": [[170, "querying-the-info-object"]], "Obtaining subsets of channels": [[170, "obtaining-subsets-of-channels"]], "Obtaining channel type information": [[170, "obtaining-channel-type-information"]], "Dropping channels from an Info object": [[170, "dropping-channels-from-an-info-object"]], "Working with sensor locations": [[171, "working-with-sensor-locations"]], "About montages and layouts": [[171, "about-montages-and-layouts"]], "Working with built-in montages": [[171, "working-with-built-in-montages"]], "Computing sensor locations": [[171, null]], "Plotting 2D sensor locations like EEGLAB": [[171, "plotting-2d-sensor-locations-like-eeglab"]], "The sphere keyword is available in many places!": [[171, null]], "Manually controlling 2D channel projection": [[171, "manually-controlling-2d-channel-projection"]], "Reading sensor digitization files": [[171, "reading-sensor-digitization-files"]], "Visualizing sensors in 3D surface renderings": [[171, "visualizing-sensors-in-3d-surface-renderings"]], "Working with layout files": [[171, "working-with-layout-files"]], "Configuring MNE-Python": [[172, "configuring-mne-python"]], "Getting and setting configuration variables": [[172, "getting-and-setting-configuration-variables"]], "Where configurations are stored": [[172, "where-configurations-are-stored"]], "Using environment variables": [[172, "using-environment-variables"]], "Logging": [[172, "logging"]], "Getting information about your system": [[172, "getting-information-about-your-system"]], "Getting started with mne.Report": [[173, "getting-started-with-mne-report"]], "Adding Raw data": [[173, "adding-raw-data"]], "Adding events": [[173, "adding-events"]], "Adding Epochs": [[173, "adding-epochs"]], "Adding Evoked": [[173, "adding-evoked"]], "Adding Covariance": [[173, "adding-covariance"]], "Adding Projection vectors": [[173, "adding-projection-vectors"]], "Adding ICA": [[173, "adding-ica"]], "Adding MRI with BEM": [[173, "adding-mri-with-bem"]], "Adding coregistration": [[173, "adding-coregistration"]], "Adding a Forward solution": [[173, "adding-a-forward-solution"]], "Adding an InverseOperator": [[173, "adding-an-inverseoperator"]], "Adding a SourceEstimate": [[173, "adding-a-sourceestimate"]], "Adding source code (e.g., a Python script)": [[173, "adding-source-code-e-g-a-python-script"]], "Adding custom figures": [[173, "adding-custom-figures"]], "Adding image files": [[173, "adding-image-files"]], "Working with tags": [[173, "working-with-tags"]], "Editing a saved report": [[173, "editing-a-saved-report"]], "Adding an entire folder of files": [[173, "adding-an-entire-folder-of-files"]], "Adding custom HTML (e.g., a description text)": [[173, "adding-custom-html-e-g-a-description-text"]], "The SourceEstimate data structure": [[176, "the-sourceestimate-data-structure"]], "Load and inspect example data": [[176, "load-and-inspect-example-data"]], "SourceEstimate (stc)": [[176, "sourceestimate-stc"]], "Relationship to SourceSpaces (src)": [[176, "relationship-to-sourcespaces-src"]], "Source localization with equivalent current dipole (ECD) fit": [[177, "source-localization-with-equivalent-current-dipole-ecd-fit"]], "Source localization with MNE, dSPM, sLORETA, and eLORETA": [[178, "source-localization-with-mne-dspm-sloreta-and-eloreta"]], "Compute regularized noise covariance": [[178, "compute-regularized-noise-covariance"]], "Compute the evoked response": [[178, "compute-the-evoked-response"]], "Inverse modeling: MNE/dSPM on evoked and raw data": [[178, "inverse-modeling-mne-dspm-on-evoked-and-raw-data"]], "The role of dipole orientations in distributed source localization": [[179, "the-role-of-dipole-orientations-in-distributed-source-localization"]], "The source space": [[179, "the-source-space"]], "Fixed dipole orientations": [[179, "fixed-dipole-orientations"]], "Loose dipole orientations": [[179, "loose-dipole-orientations"]], "Limiting orientations, but not fixing them": [[179, "limiting-orientations-but-not-fixing-them"]], "Discarding dipole orientation information": [[179, "discarding-dipole-orientation-information"]], "Computing various MNE solutions": [[180, "computing-various-mne-solutions"]], "Fixed orientation": [[180, "fixed-orientation"]], "Free orientation": [[180, "free-orientation"]], "Source reconstruction using an LCMV beamformer": [[181, "source-reconstruction-using-an-lcmv-beamformer"]], "Introduction to beamformers": [[181, "introduction-to-beamformers"]], "Data processing": [[181, "data-processing"]], "Computing the covariance matrices": [[181, "computing-the-covariance-matrices"]], "The forward model": [[181, "the-forward-model"]], "Handling depth bias": [[181, "handling-depth-bias"]], "Compute the spatial filter": [[181, "compute-the-spatial-filter"]], "Apply the spatial filter": [[181, "apply-the-spatial-filter"]], "Visualize the reconstructed source activity": [[181, "visualize-the-reconstructed-source-activity"]], "On MRI slices (orthoview; 2D)": [[181, "on-mri-slices-orthoview-2d"]], "On MNI glass brain (orthoview; 2D)": [[181, "on-mni-glass-brain-orthoview-2d"]], "Volumetric rendering (3D) with vectors": [[181, "volumetric-rendering-3d-with-vectors"]], "Visualize the activity of the maximum voxel with all three components": [[181, "visualize-the-activity-of-the-maximum-voxel-with-all-three-components"]], "Morph the output to fsaverage": [[181, "morph-the-output-to-fsaverage"]], "Visualize source time courses (stcs)": [[182, "visualize-source-time-courses-stcs"]], "Surface Source Estimates": [[182, "surface-source-estimates"]], "Volume Source Estimates": [[182, "volume-source-estimates"]], "Vector Source Estimates": [[182, "vector-source-estimates"]], "Dipole fits": [[182, "dipole-fits"]], "EEG source localization given electrode locations on an MRI": [[183, "eeg-source-localization-given-electrode-locations-on-an-mri"]], "Prerequisites": [[183, "prerequisites"]], "Visualizing the MRI": [[183, "visualizing-the-mri"]], "Getting our MRI voxel EEG locations to head (and MRI surface RAS) coords": [[183, "getting-our-mri-voxel-eeg-locations-to-head-and-mri-surface-ras-coords"]], "Getting a source estimate": [[183, "getting-a-source-estimate"]], "Brainstorm Elekta phantom dataset tutorial": [[184, "brainstorm-elekta-phantom-dataset-tutorial"]], "Brainstorm CTF phantom dataset tutorial": [[185, "brainstorm-ctf-phantom-dataset-tutorial"]], "4D Neuroimaging/BTi phantom dataset tutorial": [[186, "d-neuroimaging-bti-phantom-dataset-tutorial"]], "Importing data from MEG devices": [[189, "importing-data-from-meg-devices"]], "MEGIN/Elekta Neuromag VectorView and TRIUX (.fif)": [[189, "megin-elekta-neuromag-vectorview-and-triux-fif"]], "FIL OPM (.bin)": [[189, "fil-opm-bin"]], "Artemis123 (.bin)": [[189, "artemis123-bin"]], "4-D Neuroimaging / BTI data (dir)": [[189, "d-neuroimaging-bti-data-dir"]], "CTF data (dir)": [[189, "ctf-data-dir"]], "CTF Polhemus data": [[189, "ctf-polhemus-data"]], "Applying software gradient compensation": [[189, "applying-software-gradient-compensation"]], "Ricoh/KIT MEG system data (.con/.sqd)": [[189, "ricoh-kit-meg-system-data-con-sqd"]], "Channel naming": [[189, null]], "FieldTrip MEG/EEG data (.mat)": [[189, "fieldtrip-meg-eeg-data-mat"]], "Creating MNE data structures from arbitrary data (from memory)": [[189, "creating-mne-data-structures-from-arbitrary-data-from-memory"]], "Importing data from EEG devices": [[190, "importing-data-from-eeg-devices"]], "BrainVision (.vhdr, .vmrk, .eeg)": [[190, "brainvision-vhdr-vmrk-eeg"]], "European data format (.edf)": [[190, "european-data-format-edf"]], "BioSemi data format (.bdf)": [[190, "biosemi-data-format-bdf"]], "General data format (.gdf)": [[190, "general-data-format-gdf"]], "Neuroscan CNT (.cnt)": [[190, "neuroscan-cnt-cnt"]], "EGI simple binary (.egi)": [[190, "egi-simple-binary-egi"]], "EGI MFF (.mff)": [[190, "egi-mff-mff"]], "EEGLAB files (.set, .fdt)": [[190, "eeglab-files-set-fdt"]], "Nicolet (.data)": [[190, "nicolet-data"]], "eXimia EEG data (.nxe)": [[190, "eximia-eeg-data-nxe"]], "Persyst EEG data (.lay, .dat)": [[190, "persyst-eeg-data-lay-dat"]], "Nihon Kohden EEG data (.eeg, .21e, .pnt, .log)": [[190, "nihon-kohden-eeg-data-eeg-21e-pnt-log"]], "XDF data (.xdf, .xdfz)": [[190, "xdf-data-xdf-xdfz"]], "Setting EEG references": [[190, "setting-eeg-references"]], "Reading electrode locations and head shapes for EEG recordings": [[190, "reading-electrode-locations-and-head-shapes-for-eeg-recordings"]], "Importing data from fNIRS devices": [[191, "importing-data-from-fnirs-devices"]], "Standardized data": [[191, "standardized-data"]], "SNIRF (.snirf)": [[191, "snirf-snirf"]], "Specifying the coordinate system": [[191, "specifying-the-coordinate-system"]], "Continuous Wave Devices": [[191, "continuous-wave-devices"]], "NIRx (directory or hdr)": [[191, "nirx-directory-or-hdr"]], "Hitachi (.csv)": [[191, "hitachi-csv"]], "Frequency Domain Devices": [[191, "frequency-domain-devices"]], "BOXY (.txt)": [[191, "boxy-txt"]], "Custom Data Import": [[191, "custom-data-import"]], "Loading legacy data in CSV or TSV format": [[191, "loading-legacy-data-in-csv-or-tsv-format"]], "Applying standard sensor locations to imported data": [[191, "applying-standard-sensor-locations-to-imported-data"]], "Working with CTF data: the Brainstorm auditory dataset": [[192, "working-with-ctf-data-the-brainstorm-auditory-dataset"]], "Importing Data from Eyetracking devices": [[193, "importing-data-from-eyetracking-devices"]], "SR Research (Eyelink) (.asc)": [[193, "sr-research-eyelink-asc"]], "Eye Position Data": [[193, "eye-position-data"]], "Gaze": [[193, "gaze"]], "Head-Referenced Eye Angle (HREF)": [[193, "head-referenced-eye-angle-href"]], "Pupil Position": [[193, "pupil-position"]], "Pupil Size Data": [[193, "pupil-size-data"]], "Velocity, resolution, and head position data": [[193, "velocity-resolution-and-head-position-data"]], "Spectro-temporal receptive field (STRF) estimation on continuous data": [[196, "spectro-temporal-receptive-field-strf-estimation-on-continuous-data"]], "Load audio data": [[196, "load-audio-data"]], "Create a receptive field": [[196, "create-a-receptive-field"]], "Simulate a neural response": [[196, "simulate-a-neural-response"]], "Fit a model to recover this receptive field": [[196, "fit-a-model-to-recover-this-receptive-field"]], "Visualize the effects of regularization": [[196, "visualize-the-effects-of-regularization"]], "Using different regularization types": [[196, "using-different-regularization-types"]], "Compare model performance": [[196, "compare-model-performance"]], "Decoding (MVPA)": [[197, "decoding-mvpa"]], "Design philosophy": [[197, "design-philosophy"], [863, "design-philosophy"]], "Transformation classes": [[197, "transformation-classes"]], "Scaler": [[197, "scaler"]], "Vectorizer": [[197, "vectorizer"]], "PSDEstimator": [[197, "psdestimator"]], "FilterEstimator": [[197, "filterestimator"]], "Spatial filters": [[197, "spatial-filters"]], "Common spatial pattern": [[197, "common-spatial-pattern"]], "Examples": [[197, null], [197, null], [197, null], [197, null], [197, null], [258, "examples"], [258, "id4"], [258, "id7"], [258, "id10"], [258, "id13"], [258, "id16"], [258, "id19"], [258, "id22"], [258, "id25"], [258, "id29"], [258, "id32"], [258, "id35"], [258, "id38"], [258, "id41"], [258, "id44"], [258, "id47"], [258, "id50"], [258, "id53"], [258, "id56"], [258, "id59"], [258, "id62"], [258, "id65"], [258, "id68"], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null]], "Source power comodulation (SPoC)": [[197, "source-power-comodulation-spoc"]], "xDAWN": [[197, "xdawn"]], "Effect-matched spatial filtering": [[197, "effect-matched-spatial-filtering"]], "Patterns vs. filters": [[197, "patterns-vs-filters"]], "Decoding over time": [[197, "decoding-over-time"]], "Temporal decoding": [[197, "temporal-decoding"]], "Temporal generalization": [[197, "temporal-generalization"]], "Projecting sensor-space patterns to source space": [[197, "projecting-sensor-space-patterns-to-source-space"]], "Source-space decoding": [[197, "source-space-decoding"]], "Overview of artifact detection": [[200, "overview-of-artifact-detection"]], "What are artifacts?": [[200, "what-are-artifacts"]], "What to do about artifacts": [[200, "what-to-do-about-artifacts"]], "Artifact detection": [[200, "artifact-detection"]], "Low-frequency drifts": [[200, "low-frequency-drifts"]], "Power line noise": [[200, "power-line-noise"], [204, "power-line-noise"]], "Heartbeat artifacts (ECG)": [[200, "heartbeat-artifacts-ecg"]], "Ocular artifacts (EOG)": [[200, "ocular-artifacts-eog"]], "Handling bad channels": [[201, "handling-bad-channels"]], "Marking bad channels": [[201, "marking-bad-channels"], [861, "marking-bad-channels"]], "Blocking execution": [[201, null]], "When to look for bad channels": [[201, "when-to-look-for-bad-channels"]], "Why mark bad channels at all?": [[201, "why-mark-bad-channels-at-all"]], "Interpolating bad channels": [[201, "interpolating-bad-channels"]], "How interpolation works": [[201, "how-interpolation-works"]], "Interpolation in MNE-Python": [[201, "interpolation-in-mne-python"]], "Rejecting bad data spans and breaks": [[202, "rejecting-bad-data-spans-and-breaks"]], "Annotating bad spans of data": [[202, "annotating-bad-spans-of-data"]], "The reject_by_annotation parameter": [[202, "the-reject-by-annotation-parameter"]], "Generating annotations programmatically": [[202, "generating-annotations-programmatically"]], "Detecting and annotating breaks": [[202, "detecting-and-annotating-breaks"]], "Rejecting Epochs based on channel amplitude": [[202, "rejecting-epochs-based-on-channel-amplitude"]], "Background information on filtering": [[203, "background-information-on-filtering"]], "Problem statement": [[203, "problem-statement"]], "Filtering basics": [[203, "filtering-basics"]], "FIR Filters": [[203, "fir-filters"]], "Designing FIR filters": [[203, "designing-fir-filters"]], "Applying FIR filters": [[203, "applying-fir-filters"]], "IIR filters": [[203, "iir-filters"]], "Designing IIR filters": [[203, "designing-iir-filters"]], "Applying IIR filters": [[203, "applying-iir-filters"]], "Some pitfalls of filtering": [[203, "some-pitfalls-of-filtering"]], "Low-pass problems": [[203, "low-pass-problems"]], "High-pass problems": [[203, "high-pass-problems"]], "Baseline problems (or solutions?)": [[203, "baseline-problems-or-solutions"]], "Filtering defaults": [[203, "filtering-defaults"]], "Defaults in MNE-Python": [[203, "defaults-in-mne-python"]], "Defaults in MNE-C": [[203, "defaults-in-mne-c"]], "Defaults in other software": [[203, "defaults-in-other-software"]], "Reporting Filters": [[203, "reporting-filters"]], "Filter type": [[203, "filter-type"]], "Cutoff frequency": [[203, "cutoff-frequency"]], "Filter length (order) and transition bandwidth (roll-off)": [[203, "filter-length-order-and-transition-bandwidth-roll-off"]], "Passband ripple and stopband attenuation": [[203, "passband-ripple-and-stopband-attenuation"]], "Filter delay and direction of computation": [[203, "filter-delay-and-direction-of-computation"]], "Filtering and resampling data": [[204, "filtering-and-resampling-data"]], "Background on filtering": [[204, "background-on-filtering"]], "Repairing artifacts by filtering": [[204, "repairing-artifacts-by-filtering"]], "Slow drifts": [[204, "slow-drifts"]], "Resampling": [[204, "resampling"]], "Best practices": [[204, "best-practices"], [207, "best-practices"]], "Repairing artifacts with regression": [[205, "repairing-artifacts-with-regression"]], "Prepare the data": [[205, "prepare-the-data"]], "Visualize the original data": [[205, "visualize-the-original-data"]], "Compute and apply EOG regression": [[205, "compute-and-apply-eog-regression"]], "Subtract the evoked response from the epoch data before regression": [[205, "subtract-the-evoked-response-from-the-epoch-data-before-regression"]], "Create EOG evoked before regression": [[205, "create-eog-evoked-before-regression"]], "Visualize the effect on raw data": [[205, "visualize-the-effect-on-raw-data"]], "Repairing artifacts with ICA": [[206, "repairing-artifacts-with-ica"]], "What is ICA?": [[206, "what-is-ica"]], "ICA in MNE-Python": [[206, "ica-in-mne-python"]], "ICA and dimensionality reduction": [[206, null]], "Example: EOG and ECG artifact repair": [[206, "example-eog-and-ecg-artifact-repair"], [208, "example-eog-and-ecg-artifact-repair"]], "Visualizing the artifacts": [[206, "visualizing-the-artifacts"], [208, "visualizing-the-artifacts"]], "Filtering to remove slow drifts": [[206, "filtering-to-remove-slow-drifts"]], "Fitting ICA": [[206, "fitting-ica"]], "Ignoring the time domain": [[206, null]], "Looking at the ICA solution": [[206, "looking-at-the-ica-solution"]], "Selecting ICA components manually": [[206, "selecting-ica-components-manually"]], "Using an EOG channel to select ICA components": [[206, "using-an-eog-channel-to-select-ica-components"]], "Using a simulated channel to select ICA components": [[206, "using-a-simulated-channel-to-select-ica-components"]], "Selecting ICA components using template matching": [[206, "selecting-ica-components-using-template-matching"]], "Compute ICA components on Epochs": [[206, "compute-ica-components-on-epochs"]], "Background on projectors and projections": [[207, "background-on-projectors-and-projections"]], "What is a projection?": [[207, "what-is-a-projection"]], "Example: projection as noise reduction": [[207, "example-projection-as-noise-reduction"]], "Terminology": [[207, null]], "Signal-space projection (SSP)": [[207, "signal-space-projection-ssp"]], "Projectors in MNE-Python": [[207, "projectors-in-mne-python"]], "Computing projectors": [[207, "computing-projectors"]], "Visualizing the effect of projectors": [[207, "visualizing-the-effect-of-projectors"]], "Loading and saving projectors": [[207, "loading-and-saving-projectors"]], "Adding and removing projectors": [[207, "adding-and-removing-projectors"]], "When are projectors \u201capplied\u201d?": [[207, "when-are-projectors-applied"]], "Repairing artifacts with SSP": [[208, "repairing-artifacts-with-ssp"]], "What is SSP?": [[208, "what-is-ssp"]], "Example: Environmental noise reduction from empty-room recordings": [[208, "example-environmental-noise-reduction-from-empty-room-recordings"]], "Visualizing the empty-room noise": [[208, "visualizing-the-empty-room-noise"]], "Creating the empty-room projectors": [[208, "creating-the-empty-room-projectors"]], "Visualizing how projectors affect the signal": [[208, "visualizing-how-projectors-affect-the-signal"]], "Repairing ECG artifacts with SSP": [[208, "repairing-ecg-artifacts-with-ssp"]], "Repairing EOG artifacts with SSP": [[208, "repairing-eog-artifacts-with-ssp"]], "Choosing the number of projectors": [[208, "choosing-the-number-of-projectors"]], "Visualizing SSP sensor-space bias via signal reconstruction": [[208, "visualizing-ssp-sensor-space-bias-via-signal-reconstruction"]], "SSP reconstruction": [[208, null]], "Background": [[209, "background"]], "Setting or changing the reference channel": [[209, "setting-or-changing-the-reference-channel"]], "Setting average reference": [[209, "setting-average-reference"]], "Creating the average reference as a projector": [[209, "creating-the-average-reference-as-a-projector"]], "Using an infinite reference (REST)": [[209, "using-an-infinite-reference-rest"]], "Using a bipolar reference": [[209, "using-a-bipolar-reference"]], "EEG reference and source modeling": [[209, "eeg-reference-and-source-modeling"]], "Extracting and visualizing subject head movement": [[210, "extracting-and-visualizing-subject-head-movement"]], "HPI frequencies": [[210, "hpi-frequencies"]], "Estimating continuous head position": [[210, "estimating-continuous-head-position"]], "Visualizing continuous head position": [[210, "visualizing-continuous-head-position"]], "Computing SNR of the HPI signal": [[210, "computing-snr-of-the-hpi-signal"]], "Signal-space separation (SSS) and Maxwell filtering": [[211, "signal-space-separation-sss-and-maxwell-filtering"]], "Background on SSS and Maxwell filtering": [[211, "background-on-sss-and-maxwell-filtering"]], "Using SSS and Maxwell filtering in MNE-Python": [[211, "using-sss-and-maxwell-filtering-in-mne-python"]], "Spatiotemporal SSS (tSSS)": [[211, "spatiotemporal-sss-tsss"]], "Movement compensation": [[211, "movement-compensation"]], "Caveats to using SSS / Maxwell filtering": [[211, "caveats-to-using-sss-maxwell-filtering"]], "Preprocessing functional near-infrared spectroscopy (fNIRS) data": [[212, "preprocessing-functional-near-infrared-spectroscopy-fnirs-data"]], "Providing more meaningful annotation information": [[212, "providing-more-meaningful-annotation-information"]], "Viewing location of sensors over brain surface": [[212, "viewing-location-of-sensors-over-brain-surface"]], "Selecting channels appropriate for detecting neural responses": [[212, "selecting-channels-appropriate-for-detecting-neural-responses"]], "Converting from raw intensity to optical density": [[212, "converting-from-raw-intensity-to-optical-density"]], "Evaluating the quality of the data": [[212, "evaluating-the-quality-of-the-data"]], "Converting from optical density to haemoglobin": [[212, "converting-from-optical-density-to-haemoglobin"]], "Removing heart rate from signal": [[212, "removing-heart-rate-from-signal"]], "Extract epochs": [[212, "extract-epochs"]], "View consistency of responses across trials": [[212, "view-consistency-of-responses-across-trials"]], "View consistency of responses across channels": [[212, "view-consistency-of-responses-across-channels"]], "Plot standard fNIRS response image": [[212, "plot-standard-fnirs-response-image"]], "View topographic representation of activity": [[212, "view-topographic-representation-of-activity"]], "Compare tapping of left and right hands": [[212, "compare-tapping-of-left-and-right-hands"]], "Preprocessing optically pumped magnetometer (OPM) MEG data": [[213, "preprocessing-optically-pumped-magnetometer-opm-meg-data"]], "Examining raw data": [[213, "examining-raw-data"]], "Denoising: Regressing via reference sensors": [[213, "denoising-regressing-via-reference-sensors"]], "Denoising: Regressing via homogeneous field correction": [[213, "denoising-regressing-via-homogeneous-field-correction"]], "Comparing denoising methods": [[213, "comparing-denoising-methods"]], "Filtering nuisance signals": [[213, "filtering-nuisance-signals"]], "Generating an evoked response": [[213, "generating-an-evoked-response"]], "Working with eye tracker data in MNE-Python": [[214, "working-with-eye-tracker-data-in-mne-python"]], "Data loading": [[214, "data-loading"]], "Get stimulus events from DIN channel": [[214, "get-stimulus-events-from-din-channel"]], "Plot raw data": [[214, "plot-raw-data"]], "Plot average pupil response": [[214, "plot-average-pupil-response"]], "The Raw data structure: continuous data": [[217, "the-raw-data-structure-continuous-data"]], "Loading continuous data": [[217, "loading-continuous-data"]], "Datasets in MNE-Python": [[217, null]], "Querying the Raw object": [[217, "querying-the-raw-object"]], "Attributes vs. Methods": [[217, null]], "The Raw.info attribute": [[217, "the-raw-info-attribute"]], "Time, sample number, and sample index": [[217, "time-sample-number-and-sample-index"]], "Sample numbering in VectorView data": [[217, null]], "Modifying Raw objects": [[217, "modifying-raw-objects"]], "len(raw)": [[217, null]], "Long channel names": [[217, null]], "Extracting data from Raw objects": [[217, "extracting-data-from-raw-objects"]], "Extracting data by index": [[217, "extracting-data-by-index"]], "Extracting channels by name": [[217, "extracting-channels-by-name"]], "Extracting channels by type": [[217, "extracting-channels-by-type"]], "The Raw.get_data() method": [[217, "the-raw-get-data-method"]], "Summary of ways to extract data from Raw objects": [[217, "summary-of-ways-to-extract-data-from-raw-objects"]], "Exporting and saving Raw objects": [[217, "exporting-and-saving-raw-objects"]], "Working with events": [[218, "working-with-events"]], "Reading and writing events from/to a file": [[218, "reading-and-writing-events-from-to-a-file"]], "Subselecting and combining events": [[218, "subselecting-and-combining-events"]], "Including/excluding events": [[218, null]], "Mapping Event IDs to trial descriptors": [[218, "mapping-event-ids-to-trial-descriptors"]], "Plotting events": [[218, "plotting-events"]], "Plotting events and raw data together": [[218, "plotting-events-and-raw-data-together"]], "Making equally-spaced Events arrays": [[218, "making-equally-spaced-events-arrays"]], "Annotating continuous data": [[219, "annotating-continuous-data"]], "Creating annotations programmatically": [[219, "creating-annotations-programmatically"]], "Annotating Raw objects interactively": [[219, "annotating-raw-objects-interactively"]], "How annotations affect preprocessing and analysis": [[219, "how-annotations-affect-preprocessing-and-analysis"]], "Operations on Annotations objects": [[219, "operations-on-annotations-objects"]], "Reading and writing Annotations to/from a file": [[219, "reading-and-writing-annotations-to-from-a-file"]], "Built-in plotting methods for Raw objects": [[220, "built-in-plotting-methods-for-raw-objects"]], "Interactive data browsing with Raw.plot()": [[220, "interactive-data-browsing-with-raw-plot"]], "Plotting spectral density of continuous data": [[220, "plotting-spectral-density-of-continuous-data"]], "Plotting sensor locations from Raw objects": [[220, "plotting-sensor-locations-from-raw-objects"]], "Plotting projectors from Raw objects": [[220, "plotting-projectors-from-raw-objects"]], "Creating MNE-Python data structures from scratch": [[223, "creating-mne-python-data-structures-from-scratch"]], "Creating Info objects": [[223, "creating-info-objects"]], "Info objects": [[223, null]], "Info consistency": [[223, null]], "Creating Raw objects": [[223, "creating-raw-objects"]], "Units": [[223, null]], "Creating Epochs objects": [[223, "creating-epochs-objects"]], "Creating Evoked Objects": [[223, "creating-evoked-objects"]], "Corrupt known signal with point spread": [[224, "corrupt-known-signal-with-point-spread"]], "Load the MEG data": [[224, "load-the-meg-data"]], "Estimate the background noise covariance from the baseline period": [[224, "estimate-the-background-noise-covariance-from-the-baseline-period"]], "Generate sinusoids in two spatially distant labels": [[224, "generate-sinusoids-in-two-spatially-distant-labels"]], "Find the center vertices in source space of each label": [[224, "find-the-center-vertices-in-source-space-of-each-label"]], "Create source-space data with known signals": [[224, "create-source-space-data-with-known-signals"]], "Plot original signals": [[224, "plot-original-signals"]], "Simulate sensor-space signals": [[224, "simulate-sensor-space-signals"]], "Plot the point-spread of corrupted signal": [[224, "plot-the-point-spread-of-corrupted-signal"]], "Exercises": [[224, "exercises"], [233, "exercises"]], "DICS for power mapping": [[225, "dics-for-power-mapping"]], "Setup": [[225, "setup"]], "Data simulation": [[225, "data-simulation"]], "Power mapping": [[225, "power-mapping"]], "Statistical inference": [[228, "statistical-inference"]], "Hypothesis testing": [[228, "hypothesis-testing"]], "Null hypothesis": [[228, "null-hypothesis"]], "Parametric tests": [[228, "parametric-tests"]], "\u201cHat\u201d variance adjustment": [[228, "hat-variance-adjustment"], [228, "id3"]], "Non-parametric tests": [[228, "non-parametric-tests"]], "Multiple comparisons": [[228, "multiple-comparisons"]], "Bonferroni correction": [[228, "bonferroni-correction"]], "False discovery rate (FDR) correction": [[228, "false-discovery-rate-fdr-correction"]], "Non-parametric resampling test with a maximum statistic": [[228, "non-parametric-resampling-test-with-a-maximum-statistic"]], "Clustering": [[228, "clustering"]], "Effect size": [[228, null]], "Defining the adjacency matrix": [[228, "defining-the-adjacency-matrix"]], "Standard clustering": [[228, "standard-clustering"]], "Threshold-free cluster enhancement (TFCE)": [[228, "threshold-free-cluster-enhancement-tfce"]], "Visualize and compare methods": [[228, "visualize-and-compare-methods"]], "Statistical functions in MNE": [[228, "statistical-functions-in-mne"]], "Parametric methods provided by MNE": [[228, "parametric-methods-provided-by-mne"]], "Non-parametric methods": [[228, "non-parametric-methods"]], "Visualising statistical significance thresholds on EEG data": [[229, "visualising-statistical-significance-thresholds-on-eeg-data"]], "Non-parametric 1 sample cluster statistic on single trial power": [[230, "non-parametric-1-sample-cluster-statistic-on-single-trial-power"]], "Set parameters": [[230, "set-parameters"], [232, "set-parameters"], [233, "set-parameters"], [236, "set-parameters"], [237, "set-parameters"], [238, "set-parameters"]], "Define adjacency for statistics": [[230, "define-adjacency-for-statistics"]], "Compute statistic": [[230, "compute-statistic"], [231, "compute-statistic"], [236, "compute-statistic"], [237, "compute-statistic"]], "View time-frequency plots": [[230, "view-time-frequency-plots"], [231, "view-time-frequency-plots"]], "Non-parametric between conditions cluster statistic on single trial power": [[231, "non-parametric-between-conditions-cluster-statistic-on-single-trial-power"]], "Mass-univariate twoway repeated measures ANOVA on single trial power": [[232, "mass-univariate-twoway-repeated-measures-anova-on-single-trial-power"]], "Create TFR representations for all conditions": [[232, "create-tfr-representations-for-all-conditions"]], "Setup repeated measures ANOVA": [[232, "setup-repeated-measures-anova"]], "Sample data layout": [[232, "id1"]], "Account for multiple comparisons using FDR versus permutation clustering test": [[232, "account-for-multiple-comparisons-using-fdr-versus-permutation-clustering-test"]], "Spatiotemporal permutation F-test on full sensor data": [[233, "spatiotemporal-permutation-f-test-on-full-sensor-data"]], "Read epochs for the channel of interest": [[233, "read-epochs-for-the-channel-of-interest"]], "Find the FieldTrip neighbor definition to setup sensor adjacency": [[233, "find-the-fieldtrip-neighbor-definition-to-setup-sensor-adjacency"]], "Compute permutation statistic": [[233, "compute-permutation-statistic"]], "Visualize clusters": [[233, "visualize-clusters"]], "Permutation statistic for time-frequencies": [[233, "permutation-statistic-for-time-frequencies"]], "Permutation t-test on source data with spatio-temporal clustering": [[236, "permutation-t-test-on-source-data-with-spatio-temporal-clustering"]], "Read epochs for all channels, removing a bad one": [[236, "read-epochs-for-all-channels-removing-a-bad-one"], [238, "read-epochs-for-all-channels-removing-a-bad-one"]], "Transform to source space": [[236, "transform-to-source-space"], [238, "transform-to-source-space"]], "Transform to common cortical space": [[236, "transform-to-common-cortical-space"], [238, "transform-to-common-cortical-space"]], "Find adjacency matrix": [[236, "find-adjacency-matrix"]], "Selecting \u201csignificant\u201d clusters": [[236, "selecting-significant-clusters"]], "Visualize the clusters": [[236, "visualize-the-clusters"], [237, "visualize-the-clusters"], [238, "visualize-the-clusters"]], "2 samples permutation test on source data with spatio-temporal clustering": [[237, "samples-permutation-test-on-source-data-with-spatio-temporal-clustering"]], "Repeated measures ANOVA on source data with spatio-temporal clustering": [[238, "repeated-measures-anova-on-source-data-with-spatio-temporal-clustering"]], "Prepare function for arbitrary contrast": [[238, "prepare-function-for-arbitrary-contrast"]], "Compute clustering statistic": [[238, "compute-clustering-statistic"]], "The Spectrum and EpochsSpectrum classes: frequency-domain data": [[241, "the-spectrum-and-epochsspectrum-classes-frequency-domain-data"]], "Visualizing Spectrum objects": [[241, "visualizing-spectrum-objects"]], "Migrating legacy code": [[241, "migrating-legacy-code"]], "Quick reference for common Spectral class actions": [[241, "id4"]], "Frequency and time-frequency sensor analysis": [[242, "frequency-and-time-frequency-sensor-analysis"]], "Frequency analysis": [[242, "frequency-analysis"], [243, "frequency-analysis"]], "Time-frequency analysis: power and inter-trial coherence": [[242, "time-frequency-analysis-power-and-inter-trial-coherence"]], "Inspect power": [[242, "inspect-power"]], "Joint Plot": [[242, "joint-plot"]], "Inspect ITC": [[242, "inspect-itc"]], "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset": [[243, "frequency-tagging-basic-analysis-of-an-ssvep-vssr-dataset"]], "Data preprocessing": [[243, "data-preprocessing"]], "Calculate power spectral density (PSD)": [[243, "calculate-power-spectral-density-psd"]], "Calculate signal to noise ratio (SNR)": [[243, "calculate-signal-to-noise-ratio-snr"]], "Plot PSD and SNR spectra": [[243, "plot-psd-and-snr-spectra"]], "Extract SNR values at the stimulation frequency": [[243, "extract-snr-values-at-the-stimulation-frequency"]], "Get index for the stimulation frequency (12 Hz)": [[243, "get-index-for-the-stimulation-frequency-12-hz"]], "Get indices for the different trial types": [[243, "get-indices-for-the-different-trial-types"]], "Get indices of EEG channels forming the ROI": [[243, "get-indices-of-eeg-channels-forming-the-roi"]], "Apply the subset, and check the result": [[243, "apply-the-subset-and-check-the-result"]], "Topography of the vSSR": [[243, "topography-of-the-vssr"]], "Statistical separation of 12 Hz and 15 Hz vSSR": [[243, "statistical-separation-of-12-hz-and-15-hz-vssr"]], "Debriefing": [[243, "debriefing"]], "Bonus exercises": [[243, "bonus-exercises"]], "Effect of trial duration on SNR": [[243, "effect-of-trial-duration-on-snr"]], "Time resolved SNR": [[243, "time-resolved-snr"]], "General bibliography": [[246, "general-bibliography"]], "Papers citing MNE-Python": [[247, "papers-citing-mne-python"]], "Connectivity Estimation": [[248, "connectivity-estimation"]], "Covariance computation": [[249, "covariance-computation"]], "Creating data objects from arrays": [[250, "creating-data-objects-from-arrays"]], "Datasets": [[251, "datasets"]], "Decoding": [[252, "decoding"]], "Events": [[253, "events"]], "Exporting": [[254, "exporting"]], "File I/O": [[255, "file-i-o"]], "Forward Modeling": [[256, "forward-modeling"]], "Funding and other support": [[257, "funding-and-other-support"]], "Institutional partners": [[257, "institutional-partners"]], "Current partners": [[257, "current-partners"], [873, "current-partners"]], "Former partners": [[257, "former-partners"], [873, "former-partners"]], "Command line tools using Python": [[258, "command-line-tools-using-python"]], "mne anonymize": [[258, "mne-anonymize"]], "Anonymize raw fif file.": [[258, "anonymize-raw-fif-file"]], "Options": [[258, "options"], [258, "id3"], [258, "id6"], [258, "id9"], [258, "id12"], [258, "id15"], [258, "id18"], [258, "id21"], [258, "id24"], [258, "id28"], [258, "id31"], [258, "id34"], [258, "id37"], [258, "id40"], [258, "id43"], [258, "id46"], [258, "id49"], [258, "id52"], [258, "id55"], [258, "id58"], [258, "id61"], [258, "id64"], [258, "id67"]], "mne browse_raw": [[258, "mne-browse-raw"]], "Browse raw data.": [[258, "browse-raw-data"]], "mne bti2fiff": [[258, "mne-bti2fiff"]], "Import BTi / 4D MagnesWH3600 data to fif file.": [[258, "import-bti-4d-magneswh3600-data-to-fif-file"]], "Notes": [[258, "notes"], [258, "id26"]], "mne clean_eog_ecg": [[258, "mne-clean-eog-ecg"]], "Clean a raw file from EOG and ECG artifacts with PCA (ie SSP).": [[258, "clean-a-raw-file-from-eog-and-ecg-artifacts-with-pca-ie-ssp"]], "mne compare_fiff": [[258, "mne-compare-fiff"]], "Compare FIFF files.": [[258, "compare-fiff-files"]], "mne compute_proj_ecg": [[258, "mne-compute-proj-ecg"]], "Compute SSP/PCA projections for ECG artifacts.": [[258, "compute-ssp-pca-projections-for-ecg-artifacts"]], "mne compute_proj_eog": [[258, "mne-compute-proj-eog"]], "Compute SSP/PCA projections for EOG artifacts.": [[258, "compute-ssp-pca-projections-for-eog-artifacts"]], "mne coreg": [[258, "mne-coreg"]], "Open the coregistration GUI.": [[258, "open-the-coregistration-gui"]], "mne flash_bem": [[258, "mne-flash-bem"]], "Create 3-layer BEM model from Flash MRI images.": [[258, "create-3-layer-bem-model-from-flash-mri-images"]], "mne freeview_bem_surfaces": [[258, "mne-freeview-bem-surfaces"]], "View the 3-Layers BEM model using Freeview.": [[258, "view-the-3-layers-bem-model-using-freeview"]], "mne kit2fiff": [[258, "mne-kit2fiff"]], "Import KIT / NYU data to fif file.": [[258, "import-kit-nyu-data-to-fif-file"]], "mne make_scalp_surfaces": [[258, "mne-make-scalp-surfaces"]], "Create high-resolution head surfaces for coordinate alignment.": [[258, "create-high-resolution-head-surfaces-for-coordinate-alignment"]], "mne maxfilter": [[258, "mne-maxfilter"]], "Apply MaxFilter.": [[258, "apply-maxfilter"]], "mne prepare_bem_model": [[258, "mne-prepare-bem-model"]], "Create a BEM solution using the linear collocation approach.": [[258, "create-a-bem-solution-using-the-linear-collocation-approach"]], "mne report": [[258, "mne-report"]], "Create mne report for a folder.": [[258, "create-mne-report-for-a-folder"]], "mne setup_forward_model": [[258, "mne-setup-forward-model"]], "Create a BEM model for a subject.": [[258, "create-a-bem-model-for-a-subject"]], "mne setup_source_space": [[258, "mne-setup-source-space"]], "Set up bilateral hemisphere surface-based source space with subsampling.": [[258, "set-up-bilateral-hemisphere-surface-based-source-space-with-subsampling"]], "mne show_fiff": [[258, "mne-show-fiff"]], "Show the contents of a FIFF file.": [[258, "show-the-contents-of-a-fiff-file"]], "mne show_info": [[258, "mne-show-info"]], "Show measurement info from .fif file.": [[258, "show-measurement-info-from-fif-file"]], "mne surf2bem": [[258, "mne-surf2bem"]], "Convert surface to BEM FIF file.": [[258, "convert-surface-to-bem-fif-file"]], "mne sys_info": [[258, "mne-sys-info"]], "Show system information.": [[258, "show-system-information"]], "mne watershed_bem": [[258, "mne-watershed-bem"]], "Create BEM surfaces using the watershed algorithm included with FreeSurfer.": [[258, "create-bem-surfaces-using-the-watershed-algorithm-included-with-freesurfer"]], "mne what": [[258, "mne-what"]], "Check type of FIF file.": [[258, "check-type-of-fif-file"]], "mne.AcqParserFIF": [[259, "mne-acqparserfif"]], "mne.Annotations": [[260, "mne-annotations"]], "Examples using mne.Annotations": [[260, "examples-using-mne-annotations"]], "mne.BaseEpochs": [[261, "mne-baseepochs"]], "mne.BiHemiLabel": [[262, "mne-bihemilabel"]], "mne.Covariance": [[263, "mne-covariance"]], "Examples using mne.Covariance": [[263, "examples-using-mne-covariance"]], "mne.Dipole": [[264, "mne-dipole"]], "Examples using mne.Dipole": [[264, "examples-using-mne-dipole"]], "mne.DipoleFixed": [[265, "mne-dipolefixed"]], "Examples using mne.DipoleFixed": [[265, "examples-using-mne-dipolefixed"]], "mne.Epochs": [[266, "mne-epochs"]], "Examples using mne.Epochs": [[266, "examples-using-mne-epochs"]], "mne.EpochsArray": [[267, "mne-epochsarray"]], "Examples using mne.EpochsArray": [[267, "examples-using-mne-epochsarray"]], "mne.Evoked": [[268, "mne-evoked"]], "Examples using mne.Evoked": [[268, "examples-using-mne-evoked"]], "mne.EvokedArray": [[269, "mne-evokedarray"]], "Examples using mne.EvokedArray": [[269, "examples-using-mne-evokedarray"]], "mne.Forward": [[270, "mne-forward"]], "Examples using mne.Forward": [[270, "examples-using-mne-forward"]], "mne.Info": [[271, "mne-info"]], "Examples using mne.Info": [[271, "examples-using-mne-info"]], "mne.Label": [[272, "mne-label"]], "Examples using mne.Label": [[272, "examples-using-mne-label"]], "mne.MixedSourceEstimate": [[273, "mne-mixedsourceestimate"]], "Examples using mne.MixedSourceEstimate": [[273, "examples-using-mne-mixedsourceestimate"]], "mne.MixedVectorSourceEstimate": [[274, "mne-mixedvectorsourceestimate"]], "Examples using mne.MixedVectorSourceEstimate": [[274, "examples-using-mne-mixedvectorsourceestimate"]], "mne.Projection": [[275, "mne-projection"]], "Examples using mne.Projection": [[275, "examples-using-mne-projection"]], "mne.Report": [[276, "mne-report"]], "Examples using mne.Report": [[276, "examples-using-mne-report"]], "mne.SourceEstimate": [[277, "mne-sourceestimate"]], "Examples using mne.SourceEstimate": [[277, "examples-using-mne-sourceestimate"]], "mne.SourceMorph": [[278, "mne-sourcemorph"]], "Examples using mne.SourceMorph": [[278, "examples-using-mne-sourcemorph"]], "mne.SourceSpaces": [[279, "mne-sourcespaces"]], "Examples using mne.SourceSpaces": [[279, "examples-using-mne-sourcespaces"]], "mne.VectorSourceEstimate": [[280, "mne-vectorsourceestimate"]], "Examples using mne.VectorSourceEstimate": [[280, "examples-using-mne-vectorsourceestimate"]], "mne.VolSourceEstimate": [[281, "mne-volsourceestimate"]], "Examples using mne.VolSourceEstimate": [[281, "examples-using-mne-volsourceestimate"]], "mne.VolVectorSourceEstimate": [[282, "mne-volvectorsourceestimate"]], "mne.add_reference_channels": [[283, "mne-add-reference-channels"]], "Examples using mne.add_reference_channels": [[283, "examples-using-mne-add-reference-channels"]], "mne.add_source_space_distances": [[284, "mne-add-source-space-distances"]], "mne.annotations_from_events": [[285, "mne-annotations-from-events"]], "Examples using mne.annotations_from_events": [[285, "examples-using-mne-annotations-from-events"]], "mne.apply_forward": [[286, "mne-apply-forward"]], "mne.apply_forward_raw": [[287, "mne-apply-forward-raw"]], "mne.average_forward_solutions": [[288, "mne-average-forward-solutions"]], "mne.baseline.rescale": [[289, "mne-baseline-rescale"]], "Examples using mne.baseline.rescale": [[289, "examples-using-mne-baseline-rescale"]], "mne.beamformer.Beamformer": [[290, "mne-beamformer-beamformer"]], "Examples using mne.beamformer.Beamformer": [[290, "examples-using-mne-beamformer-beamformer"]], "mne.beamformer.apply_dics": [[291, "mne-beamformer-apply-dics"]], "mne.beamformer.apply_dics_csd": [[292, "mne-beamformer-apply-dics-csd"]], "Examples using mne.beamformer.apply_dics_csd": [[292, "examples-using-mne-beamformer-apply-dics-csd"]], "mne.beamformer.apply_dics_epochs": [[293, "mne-beamformer-apply-dics-epochs"]], "mne.beamformer.apply_dics_tfr_epochs": [[294, "mne-beamformer-apply-dics-tfr-epochs"]], "Examples using mne.beamformer.apply_dics_tfr_epochs": [[294, "examples-using-mne-beamformer-apply-dics-tfr-epochs"]], "mne.beamformer.apply_lcmv": [[295, "mne-beamformer-apply-lcmv"]], "Examples using mne.beamformer.apply_lcmv": [[295, "examples-using-mne-beamformer-apply-lcmv"]], "mne.beamformer.apply_lcmv_cov": [[296, "mne-beamformer-apply-lcmv-cov"]], "Examples using mne.beamformer.apply_lcmv_cov": [[296, "examples-using-mne-beamformer-apply-lcmv-cov"]], "mne.beamformer.apply_lcmv_epochs": [[297, "mne-beamformer-apply-lcmv-epochs"]], "mne.beamformer.apply_lcmv_raw": [[298, "mne-beamformer-apply-lcmv-raw"]], "mne.beamformer.make_dics": [[299, "mne-beamformer-make-dics"]], "Examples using mne.beamformer.make_dics": [[299, "examples-using-mne-beamformer-make-dics"]], "mne.beamformer.make_lcmv": [[300, "mne-beamformer-make-lcmv"]], "Examples using mne.beamformer.make_lcmv": [[300, "examples-using-mne-beamformer-make-lcmv"]], "mne.beamformer.make_lcmv_resolution_matrix": [[301, "mne-beamformer-make-lcmv-resolution-matrix"]], "Examples using mne.beamformer.make_lcmv_resolution_matrix": [[301, "examples-using-mne-beamformer-make-lcmv-resolution-matrix"]], "mne.beamformer.rap_music": [[302, "mne-beamformer-rap-music"]], "Examples using mne.beamformer.rap_music": [[302, "examples-using-mne-beamformer-rap-music"]], "mne.beamformer.read_beamformer": [[303, "mne-beamformer-read-beamformer"]], "mne.bem.ConductorModel": [[304, "mne-bem-conductormodel"]], "Examples using mne.bem.ConductorModel": [[304, "examples-using-mne-bem-conductormodel"]], "mne.bem.convert_flash_mris": [[305, "mne-bem-convert-flash-mris"]], "mne.bem.distance_to_bem": [[306, "mne-bem-distance-to-bem"]], "mne.bem.fit_sphere_to_headshape": [[307, "mne-bem-fit-sphere-to-headshape"]], "mne.bem.get_fitting_dig": [[308, "mne-bem-get-fitting-dig"]], "mne.bem.make_flash_bem": [[309, "mne-bem-make-flash-bem"]], "mne.bem.make_scalp_surfaces": [[310, "mne-bem-make-scalp-surfaces"]], "mne.bem.make_watershed_bem": [[311, "mne-bem-make-watershed-bem"]], "mne.channel_indices_by_type": [[312, "mne-channel-indices-by-type"]], "Examples using mne.channel_indices_by_type": [[312, "examples-using-mne-channel-indices-by-type"]], "mne.channel_type": [[313, "mne-channel-type"]], "Examples using mne.channel_type": [[313, "examples-using-mne-channel-type"]], "mne.channels.DigMontage": [[314, "mne-channels-digmontage"]], "Examples using mne.channels.DigMontage": [[314, "examples-using-mne-channels-digmontage"]], "mne.channels.Layout": [[315, "mne-channels-layout"]], "Examples using mne.channels.Layout": [[315, "examples-using-mne-channels-layout"]], "mne.channels.combine_channels": [[316, "mne-channels-combine-channels"]], "Examples using mne.channels.combine_channels": [[316, "examples-using-mne-channels-combine-channels"]], "mne.channels.compute_dev_head_t": [[317, "mne-channels-compute-dev-head-t"]], "mne.channels.compute_native_head_t": [[318, "mne-channels-compute-native-head-t"]], "Examples using mne.channels.compute_native_head_t": [[318, "examples-using-mne-channels-compute-native-head-t"]], "mne.channels.equalize_channels": [[319, "mne-channels-equalize-channels"]], "mne.channels.find_ch_adjacency": [[320, "mne-channels-find-ch-adjacency"]], "Examples using mne.channels.find_ch_adjacency": [[320, "examples-using-mne-channels-find-ch-adjacency"]], "mne.channels.find_layout": [[321, "mne-channels-find-layout"]], "mne.channels.fix_mag_coil_types": [[322, "mne-channels-fix-mag-coil-types"]], "mne.channels.generate_2d_layout": [[323, "mne-channels-generate-2d-layout"]], "mne.channels.get_builtin_ch_adjacencies": [[324, "mne-channels-get-builtin-ch-adjacencies"]], "Examples using mne.channels.get_builtin_ch_adjacencies": [[324, "examples-using-mne-channels-get-builtin-ch-adjacencies"]], "mne.channels.get_builtin_montages": [[325, "mne-channels-get-builtin-montages"]], "Examples using mne.channels.get_builtin_montages": [[325, "examples-using-mne-channels-get-builtin-montages"]], "mne.channels.make_1020_channel_selections": [[326, "mne-channels-make-1020-channel-selections"]], "Examples using mne.channels.make_1020_channel_selections": [[326, "examples-using-mne-channels-make-1020-channel-selections"]], "mne.channels.make_dig_montage": [[327, "mne-channels-make-dig-montage"]], "Examples using mne.channels.make_dig_montage": [[327, "examples-using-mne-channels-make-dig-montage"]], "mne.channels.make_eeg_layout": [[328, "mne-channels-make-eeg-layout"]], "Examples using mne.channels.make_eeg_layout": [[328, "examples-using-mne-channels-make-eeg-layout"]], "mne.channels.make_grid_layout": [[329, "mne-channels-make-grid-layout"]], "mne.channels.make_standard_montage": [[330, "mne-channels-make-standard-montage"]], "Examples using mne.channels.make_standard_montage": [[330, "examples-using-mne-channels-make-standard-montage"]], "mne.channels.read_ch_adjacency": [[331, "mne-channels-read-ch-adjacency"]], "mne.channels.read_custom_montage": [[332, "mne-channels-read-custom-montage"]], "Examples using mne.channels.read_custom_montage": [[332, "examples-using-mne-channels-read-custom-montage"]], "mne.channels.read_dig_captrak": [[333, "mne-channels-read-dig-captrak"]], "mne.channels.read_dig_dat": [[334, "mne-channels-read-dig-dat"]], "mne.channels.read_dig_egi": [[335, "mne-channels-read-dig-egi"]], "mne.channels.read_dig_fif": [[336, "mne-channels-read-dig-fif"]], "Examples using mne.channels.read_dig_fif": [[336, "examples-using-mne-channels-read-dig-fif"]], "mne.channels.read_dig_hpts": [[337, "mne-channels-read-dig-hpts"]], "mne.channels.read_dig_localite": [[338, "mne-channels-read-dig-localite"]], "mne.channels.read_dig_polhemus_isotrak": [[339, "mne-channels-read-dig-polhemus-isotrak"]], "mne.channels.read_layout": [[340, "mne-channels-read-layout"]], "Examples using mne.channels.read_layout": [[340, "examples-using-mne-channels-read-layout"]], "mne.channels.read_polhemus_fastscan": [[341, "mne-channels-read-polhemus-fastscan"]], "mne.channels.rename_channels": [[342, "mne-channels-rename-channels"]], "mne.chpi.compute_chpi_amplitudes": [[343, "mne-chpi-compute-chpi-amplitudes"]], "Examples using mne.chpi.compute_chpi_amplitudes": [[343, "examples-using-mne-chpi-compute-chpi-amplitudes"]], "mne.chpi.compute_chpi_locs": [[344, "mne-chpi-compute-chpi-locs"]], "Examples using mne.chpi.compute_chpi_locs": [[344, "examples-using-mne-chpi-compute-chpi-locs"]], "mne.chpi.compute_chpi_snr": [[345, "mne-chpi-compute-chpi-snr"]], "Examples using mne.chpi.compute_chpi_snr": [[345, "examples-using-mne-chpi-compute-chpi-snr"]], "mne.chpi.compute_head_pos": [[346, "mne-chpi-compute-head-pos"]], "Examples using mne.chpi.compute_head_pos": [[346, "examples-using-mne-chpi-compute-head-pos"]], "mne.chpi.extract_chpi_locs_ctf": [[347, "mne-chpi-extract-chpi-locs-ctf"]], "Examples using mne.chpi.extract_chpi_locs_ctf": [[347, "examples-using-mne-chpi-extract-chpi-locs-ctf"]], "mne.chpi.extract_chpi_locs_kit": [[348, "mne-chpi-extract-chpi-locs-kit"]], "mne.chpi.filter_chpi": [[349, "mne-chpi-filter-chpi"]], "Examples using mne.chpi.filter_chpi": [[349, "examples-using-mne-chpi-filter-chpi"]], "mne.chpi.get_active_chpi": [[350, "mne-chpi-get-active-chpi"]], "Examples using mne.chpi.get_active_chpi": [[350, "examples-using-mne-chpi-get-active-chpi"]], "mne.chpi.get_chpi_info": [[351, "mne-chpi-get-chpi-info"]], "Examples using mne.chpi.get_chpi_info": [[351, "examples-using-mne-chpi-get-chpi-info"]], "mne.chpi.head_pos_to_trans_rot_t": [[352, "mne-chpi-head-pos-to-trans-rot-t"]], "mne.chpi.read_head_pos": [[353, "mne-chpi-read-head-pos"]], "Examples using mne.chpi.read_head_pos": [[353, "examples-using-mne-chpi-read-head-pos"]], "mne.chpi.write_head_pos": [[354, "mne-chpi-write-head-pos"]], "Examples using mne.chpi.write_head_pos": [[354, "examples-using-mne-chpi-write-head-pos"]], "mne.combine_evoked": [[355, "mne-combine-evoked"]], "Examples using mne.combine_evoked": [[355, "examples-using-mne-combine-evoked"]], "mne.compute_covariance": [[356, "mne-compute-covariance"]], "Examples using mne.compute_covariance": [[356, "examples-using-mne-compute-covariance"]], "mne.compute_proj_epochs": [[357, "mne-compute-proj-epochs"]], "Examples using mne.compute_proj_epochs": [[357, "examples-using-mne-compute-proj-epochs"]], "mne.compute_proj_evoked": [[358, "mne-compute-proj-evoked"]], "Examples using mne.compute_proj_evoked": [[358, "examples-using-mne-compute-proj-evoked"]], "mne.compute_proj_raw": [[359, "mne-compute-proj-raw"]], "Examples using mne.compute_proj_raw": [[359, "examples-using-mne-compute-proj-raw"]], "mne.compute_rank": [[360, "mne-compute-rank"]], "Examples using mne.compute_rank": [[360, "examples-using-mne-compute-rank"]], "mne.compute_raw_covariance": [[361, "mne-compute-raw-covariance"]], "Examples using mne.compute_raw_covariance": [[361, "examples-using-mne-compute-raw-covariance"]], "mne.compute_source_morph": [[362, "mne-compute-source-morph"]], "Examples using mne.compute_source_morph": [[362, "examples-using-mne-compute-source-morph"]], "mne.concatenate_epochs": [[363, "mne-concatenate-epochs"]], "Examples using mne.concatenate_epochs": [[363, "examples-using-mne-concatenate-epochs"]], "mne.concatenate_events": [[364, "mne-concatenate-events"]], "mne.concatenate_raws": [[365, "mne-concatenate-raws"]], "Examples using mne.concatenate_raws": [[365, "examples-using-mne-concatenate-raws"]], "mne.convert_forward_solution": [[366, "mne-convert-forward-solution"]], "Examples using mne.convert_forward_solution": [[366, "examples-using-mne-convert-forward-solution"]], "mne.coreg.Coregistration": [[367, "mne-coreg-coregistration"]], "Examples using mne.coreg.Coregistration": [[367, "examples-using-mne-coreg-coregistration"]], "mne.coreg.estimate_head_mri_t": [[368, "mne-coreg-estimate-head-mri-t"]], "Examples using mne.coreg.estimate_head_mri_t": [[368, "examples-using-mne-coreg-estimate-head-mri-t"]], "mne.coreg.get_mni_fiducials": [[369, "mne-coreg-get-mni-fiducials"]], "Examples using mne.coreg.get_mni_fiducials": [[369, "examples-using-mne-coreg-get-mni-fiducials"]], "mne.count_events": [[370, "mne-count-events"]], "mne.cov.compute_whitener": [[371, "mne-cov-compute-whitener"]], "mne.cov.prepare_noise_cov": [[372, "mne-cov-prepare-noise-cov"]], "mne.cov.regularize": [[373, "mne-cov-regularize"]], "Examples using mne.cov.regularize": [[373, "examples-using-mne-cov-regularize"]], "mne.create_default_subject": [[374, "mne-create-default-subject"]], "mne.create_info": [[375, "mne-create-info"]], "Examples using mne.create_info": [[375, "examples-using-mne-create-info"]], "mne.cuda.get_cuda_memory": [[376, "mne-cuda-get-cuda-memory"]], "mne.cuda.init_cuda": [[377, "mne-cuda-init-cuda"]], "mne.cuda.set_cuda_device": [[378, "mne-cuda-set-cuda-device"]], "mne.datasets.brainstorm.bst_auditory.data_path": [[379, "mne-datasets-brainstorm-bst-auditory-data-path"]], "mne.datasets.brainstorm.bst_raw.data_path": [[380, "mne-datasets-brainstorm-bst-raw-data-path"]], "mne.datasets.brainstorm.bst_resting.data_path": [[381, "mne-datasets-brainstorm-bst-resting-data-path"]], "mne.datasets.eegbci.load_data": [[382, "mne-datasets-eegbci-load-data"]], "mne.datasets.eegbci.standardize": [[383, "mne-datasets-eegbci-standardize"]], "mne.datasets.epilepsy_ecog.data_path": [[384, "mne-datasets-epilepsy-ecog-data-path"]], "Examples using mne.datasets.epilepsy_ecog.data_path": [[384, "examples-using-mne-datasets-epilepsy-ecog-data-path"]], "mne.datasets.erp_core.data_path": [[385, "mne-datasets-erp-core-data-path"]], "mne.datasets.eyelink.data_path": [[386, "mne-datasets-eyelink-data-path"]], "mne.datasets.fetch_aparc_sub_parcellation": [[387, "mne-datasets-fetch-aparc-sub-parcellation"]], "mne.datasets.fetch_dataset": [[388, "mne-datasets-fetch-dataset"]], "mne.datasets.fetch_fsaverage": [[389, "mne-datasets-fetch-fsaverage"]], "mne.datasets.fetch_hcp_mmp_parcellation": [[390, "mne-datasets-fetch-hcp-mmp-parcellation"]], "mne.datasets.fetch_infant_template": [[391, "mne-datasets-fetch-infant-template"]], "Examples using mne.datasets.fetch_infant_template": [[391, "examples-using-mne-datasets-fetch-infant-template"]], "mne.datasets.fetch_phantom": [[392, "mne-datasets-fetch-phantom"]], "mne.datasets.fnirs_motor.data_path": [[393, "mne-datasets-fnirs-motor-data-path"]], "mne.datasets.has_dataset": [[394, "mne-datasets-has-dataset"]], "mne.datasets.hf_sef.data_path": [[395, "mne-datasets-hf-sef-data-path"]], "mne.datasets.kiloword.data_path": [[396, "mne-datasets-kiloword-data-path"]], "mne.datasets.limo.load_data": [[397, "mne-datasets-limo-load-data"]], "mne.datasets.misc.data_path": [[398, "mne-datasets-misc-data-path"]], "mne.datasets.mtrf.data_path": [[399, "mne-datasets-mtrf-data-path"]], "mne.datasets.multimodal.data_path": [[400, "mne-datasets-multimodal-data-path"]], "mne.datasets.opm.data_path": [[401, "mne-datasets-opm-data-path"]], "mne.datasets.phantom_4dbti.data_path": [[402, "mne-datasets-phantom-4dbti-data-path"]], "mne.datasets.refmeg_noise.data_path": [[403, "mne-datasets-refmeg-noise-data-path"]], "mne.datasets.sample.data_path": [[404, "mne-datasets-sample-data-path"]], "Examples using mne.datasets.sample.data_path": [[404, "examples-using-mne-datasets-sample-data-path"]], "mne.datasets.sleep_physionet.age.fetch_data": [[405, "mne-datasets-sleep-physionet-age-fetch-data"]], "Examples using mne.datasets.sleep_physionet.age.fetch_data": [[405, "examples-using-mne-datasets-sleep-physionet-age-fetch-data"]], "mne.datasets.sleep_physionet.temazepam.fetch_data": [[406, "mne-datasets-sleep-physionet-temazepam-fetch-data"]], "mne.datasets.somato.data_path": [[407, "mne-datasets-somato-data-path"]], "mne.datasets.spm_face.data_path": [[408, "mne-datasets-spm-face-data-path"]], "mne.datasets.ssvep.data_path": [[409, "mne-datasets-ssvep-data-path"]], "mne.datasets.ucl_opm_auditory.data_path": [[410, "mne-datasets-ucl-opm-auditory-data-path"]], "mne.datasets.visual_92_categories.data_path": [[411, "mne-datasets-visual-92-categories-data-path"]], "mne.decimate_surface": [[412, "mne-decimate-surface"]], "mne.decoding.CSP": [[413, "mne-decoding-csp"]], "Examples using mne.decoding.CSP": [[413, "examples-using-mne-decoding-csp"]], "mne.decoding.EMS": [[414, "mne-decoding-ems"]], "Examples using mne.decoding.EMS": [[414, "examples-using-mne-decoding-ems"]], "mne.decoding.FilterEstimator": [[415, "mne-decoding-filterestimator"]], "mne.decoding.GeneralizingEstimator": [[416, "mne-decoding-generalizingestimator"]], "Examples using mne.decoding.GeneralizingEstimator": [[416, "examples-using-mne-decoding-generalizingestimator"]], "mne.decoding.LinearModel": [[417, "mne-decoding-linearmodel"]], "Examples using mne.decoding.LinearModel": [[417, "examples-using-mne-decoding-linearmodel"]], "mne.decoding.PSDEstimator": [[418, "mne-decoding-psdestimator"]], "mne.decoding.ReceptiveField": [[419, "mne-decoding-receptivefield"]], "Examples using mne.decoding.ReceptiveField": [[419, "examples-using-mne-decoding-receptivefield"]], "mne.decoding.SPoC": [[420, "mne-decoding-spoc"]], "Examples using mne.decoding.SPoC": [[420, "examples-using-mne-decoding-spoc"]], "mne.decoding.SSD": [[421, "mne-decoding-ssd"]], "Examples using mne.decoding.SSD": [[421, "examples-using-mne-decoding-ssd"]], "mne.decoding.Scaler": [[422, "mne-decoding-scaler"]], "Examples using mne.decoding.Scaler": [[422, "examples-using-mne-decoding-scaler"]], "mne.decoding.SlidingEstimator": [[423, "mne-decoding-slidingestimator"]], "Examples using mne.decoding.SlidingEstimator": [[423, "examples-using-mne-decoding-slidingestimator"]], "mne.decoding.TemporalFilter": [[424, "mne-decoding-temporalfilter"]], "mne.decoding.TimeDelayingRidge": [[425, "mne-decoding-timedelayingridge"]], "Examples using mne.decoding.TimeDelayingRidge": [[425, "examples-using-mne-decoding-timedelayingridge"]], "mne.decoding.TimeFrequency": [[426, "mne-decoding-timefrequency"]], "mne.decoding.UnsupervisedSpatialFilter": [[427, "mne-decoding-unsupervisedspatialfilter"]], "Examples using mne.decoding.UnsupervisedSpatialFilter": [[427, "examples-using-mne-decoding-unsupervisedspatialfilter"]], "mne.decoding.Vectorizer": [[428, "mne-decoding-vectorizer"]], "Examples using mne.decoding.Vectorizer": [[428, "examples-using-mne-decoding-vectorizer"]], "mne.decoding.compute_ems": [[429, "mne-decoding-compute-ems"]], "Examples using mne.decoding.compute_ems": [[429, "examples-using-mne-decoding-compute-ems"]], "mne.decoding.cross_val_multiscore": [[430, "mne-decoding-cross-val-multiscore"]], "Examples using mne.decoding.cross_val_multiscore": [[430, "examples-using-mne-decoding-cross-val-multiscore"]], "mne.decoding.get_coef": [[431, "mne-decoding-get-coef"]], "Examples using mne.decoding.get_coef": [[431, "examples-using-mne-decoding-get-coef"]], "mne.dig_mri_distances": [[432, "mne-dig-mri-distances"]], "Examples using mne.dig_mri_distances": [[432, "examples-using-mne-dig-mri-distances"]], "mne.dipole.get_phantom_dipoles": [[433, "mne-dipole-get-phantom-dipoles"]], "Examples using mne.dipole.get_phantom_dipoles": [[433, "examples-using-mne-dipole-get-phantom-dipoles"]], "mne.epochs.average_movements": [[434, "mne-epochs-average-movements"]], "Examples using mne.epochs.average_movements": [[434, "examples-using-mne-epochs-average-movements"]], "mne.epochs.combine_event_ids": [[435, "mne-epochs-combine-event-ids"]], "mne.epochs.equalize_epoch_counts": [[436, "mne-epochs-equalize-epoch-counts"]], "Examples using mne.epochs.equalize_epoch_counts": [[436, "examples-using-mne-epochs-equalize-epoch-counts"]], "mne.epochs.make_metadata": [[437, "mne-epochs-make-metadata"]], "Examples using mne.epochs.make_metadata": [[437, "examples-using-mne-epochs-make-metadata"]], "mne.equalize_channels": [[438, "mne-equalize-channels"]], "mne.event.define_target_events": [[439, "mne-event-define-target-events"]], "Examples using mne.event.define_target_events": [[439, "examples-using-mne-event-define-target-events"]], "mne.event.match_event_names": [[440, "mne-event-match-event-names"]], "mne.event.shift_time_events": [[441, "mne-event-shift-time-events"]], "mne.events_from_annotations": [[442, "mne-events-from-annotations"]], "Examples using mne.events_from_annotations": [[442, "examples-using-mne-events-from-annotations"]], "mne.export.export_epochs": [[443, "mne-export-export-epochs"]], "mne.export.export_evokeds": [[444, "mne-export-export-evokeds"]], "mne.export.export_evokeds_mff": [[445, "mne-export-export-evokeds-mff"]], "mne.export.export_raw": [[446, "mne-export-export-raw"]], "mne.extract_label_time_course": [[447, "mne-extract-label-time-course"]], "Examples using mne.extract_label_time_course": [[447, "examples-using-mne-extract-label-time-course"]], "mne.filter.construct_iir_filter": [[448, "mne-filter-construct-iir-filter"]], "Examples using mne.filter.construct_iir_filter": [[448, "examples-using-mne-filter-construct-iir-filter"]], "mne.filter.create_filter": [[449, "mne-filter-create-filter"]], "Examples using mne.filter.create_filter": [[449, "examples-using-mne-filter-create-filter"]], "mne.filter.estimate_ringing_samples": [[450, "mne-filter-estimate-ringing-samples"]], "mne.filter.filter_data": [[451, "mne-filter-filter-data"]], "mne.filter.notch_filter": [[452, "mne-filter-notch-filter"]], "mne.filter.resample": [[453, "mne-filter-resample"]], "Examples using mne.filter.resample": [[453, "examples-using-mne-filter-resample"]], "mne.find_events": [[454, "mne-find-events"]], "Examples using mne.find_events": [[454, "examples-using-mne-find-events"]], "mne.find_stim_steps": [[455, "mne-find-stim-steps"]], "mne.fit_dipole": [[456, "mne-fit-dipole"]], "Examples using mne.fit_dipole": [[456, "examples-using-mne-fit-dipole"]], "mne.forward.compute_depth_prior": [[457, "mne-forward-compute-depth-prior"]], "mne.forward.compute_orient_prior": [[458, "mne-forward-compute-orient-prior"]], "mne.forward.restrict_forward_to_label": [[459, "mne-forward-restrict-forward-to-label"]], "mne.forward.restrict_forward_to_stc": [[460, "mne-forward-restrict-forward-to-stc"]], "mne.get_config": [[461, "mne-get-config"]], "Examples using mne.get_config": [[461, "examples-using-mne-get-config"]], "mne.get_config_path": [[462, "mne-get-config-path"]], "Examples using mne.get_config_path": [[462, "examples-using-mne-get-config-path"]], "mne.get_head_surf": [[463, "mne-get-head-surf"]], "mne.get_meg_helmet_surf": [[464, "mne-get-meg-helmet-surf"]], "mne.get_montage_volume_labels": [[465, "mne-get-montage-volume-labels"]], "Examples using mne.get_montage_volume_labels": [[465, "examples-using-mne-get-montage-volume-labels"]], "mne.get_volume_labels_from_aseg": [[466, "mne-get-volume-labels-from-aseg"]], "Examples using mne.get_volume_labels_from_aseg": [[466, "examples-using-mne-get-volume-labels-from-aseg"]], "mne.get_volume_labels_from_src": [[467, "mne-get-volume-labels-from-src"]], "mne.grade_to_tris": [[468, "mne-grade-to-tris"]], "mne.grade_to_vertices": [[469, "mne-grade-to-vertices"]], "mne.grand_average": [[470, "mne-grand-average"]], "Examples using mne.grand_average": [[470, "examples-using-mne-grand-average"]], "mne.grow_labels": [[471, "mne-grow-labels"]], "mne.gui.coregistration": [[472, "mne-gui-coregistration"]], "Examples using mne.gui.coregistration": [[472, "examples-using-mne-gui-coregistration"]], "mne.gui.locate_ieeg": [[473, "mne-gui-locate-ieeg"]], "mne.head_to_mni": [[474, "mne-head-to-mni"]], "mne.head_to_mri": [[475, "mne-head-to-mri"]], "mne.inverse_sparse.gamma_map": [[476, "mne-inverse-sparse-gamma-map"]], "Examples using mne.inverse_sparse.gamma_map": [[476, "examples-using-mne-inverse-sparse-gamma-map"]], "mne.inverse_sparse.make_stc_from_dipoles": [[477, "mne-inverse-sparse-make-stc-from-dipoles"]], "Examples using mne.inverse_sparse.make_stc_from_dipoles": [[477, "examples-using-mne-inverse-sparse-make-stc-from-dipoles"]], "mne.inverse_sparse.mixed_norm": [[478, "mne-inverse-sparse-mixed-norm"]], "Examples using mne.inverse_sparse.mixed_norm": [[478, "examples-using-mne-inverse-sparse-mixed-norm"]], "mne.inverse_sparse.tf_mixed_norm": [[479, "mne-inverse-sparse-tf-mixed-norm"]], "Examples using mne.inverse_sparse.tf_mixed_norm": [[479, "examples-using-mne-inverse-sparse-tf-mixed-norm"]], "mne.io.BaseRaw": [[480, "mne-io-baseraw"]], "mne.io.Raw": [[481, "mne-io-raw"]], "Examples using mne.io.Raw": [[481, "examples-using-mne-io-raw"]], "mne.io.RawArray": [[482, "mne-io-rawarray"]], "Examples using mne.io.RawArray": [[482, "examples-using-mne-io-rawarray"]], "mne.io.anonymize_info": [[483, "mne-io-anonymize-info"]], "mne.io.kit.read_mrk": [[484, "mne-io-kit-read-mrk"]], "mne.io.read_fiducials": [[485, "mne-io-read-fiducials"]], "mne.io.read_info": [[486, "mne-io-read-info"]], "Examples using mne.io.read_info": [[486, "examples-using-mne-io-read-info"]], "mne.io.read_raw": [[487, "mne-io-read-raw"]], "Examples using mne.io.read_raw": [[487, "examples-using-mne-io-read-raw"]], "mne.io.read_raw_artemis123": [[488, "mne-io-read-raw-artemis123"]], "Examples using mne.io.read_raw_artemis123": [[488, "examples-using-mne-io-read-raw-artemis123"]], "mne.io.read_raw_bdf": [[489, "mne-io-read-raw-bdf"]], "Examples using mne.io.read_raw_bdf": [[489, "examples-using-mne-io-read-raw-bdf"]], "mne.io.read_raw_boxy": [[490, "mne-io-read-raw-boxy"]], "mne.io.read_raw_brainvision": [[491, "mne-io-read-raw-brainvision"]], "Examples using mne.io.read_raw_brainvision": [[491, "examples-using-mne-io-read-raw-brainvision"]], "mne.io.read_raw_bti": [[492, "mne-io-read-raw-bti"]], "Examples using mne.io.read_raw_bti": [[492, "examples-using-mne-io-read-raw-bti"]], "mne.io.read_raw_cnt": [[493, "mne-io-read-raw-cnt"]], "Examples using mne.io.read_raw_cnt": [[493, "examples-using-mne-io-read-raw-cnt"]], "mne.io.read_raw_ctf": [[494, "mne-io-read-raw-ctf"]], "Examples using mne.io.read_raw_ctf": [[494, "examples-using-mne-io-read-raw-ctf"]], "mne.io.read_raw_curry": [[495, "mne-io-read-raw-curry"]], "mne.io.read_raw_edf": [[496, "mne-io-read-raw-edf"]], "Examples using mne.io.read_raw_edf": [[496, "examples-using-mne-io-read-raw-edf"]], "mne.io.read_raw_eeglab": [[497, "mne-io-read-raw-eeglab"]], "Examples using mne.io.read_raw_eeglab": [[497, "examples-using-mne-io-read-raw-eeglab"]], "mne.io.read_raw_egi": [[498, "mne-io-read-raw-egi"]], "Examples using mne.io.read_raw_egi": [[498, "examples-using-mne-io-read-raw-egi"]], "mne.io.read_raw_eximia": [[499, "mne-io-read-raw-eximia"]], "Examples using mne.io.read_raw_eximia": [[499, "examples-using-mne-io-read-raw-eximia"]], "mne.io.read_raw_eyelink": [[500, "mne-io-read-raw-eyelink"]], "Examples using mne.io.read_raw_eyelink": [[500, "examples-using-mne-io-read-raw-eyelink"]], "mne.io.read_raw_fieldtrip": [[501, "mne-io-read-raw-fieldtrip"]], "mne.io.read_raw_fif": [[502, "mne-io-read-raw-fif"]], "Examples using mne.io.read_raw_fif": [[502, "examples-using-mne-io-read-raw-fif"]], "mne.io.read_raw_fil": [[503, "mne-io-read-raw-fil"]], "Examples using mne.io.read_raw_fil": [[503, "examples-using-mne-io-read-raw-fil"]], "mne.io.read_raw_gdf": [[504, "mne-io-read-raw-gdf"]], "Examples using mne.io.read_raw_gdf": [[504, "examples-using-mne-io-read-raw-gdf"]], "mne.io.read_raw_hitachi": [[505, "mne-io-read-raw-hitachi"]], "mne.io.read_raw_kit": [[506, "mne-io-read-raw-kit"]], "Examples using mne.io.read_raw_kit": [[506, "examples-using-mne-io-read-raw-kit"]], "mne.io.read_raw_nedf": [[507, "mne-io-read-raw-nedf"]], "mne.io.read_raw_nicolet": [[508, "mne-io-read-raw-nicolet"]], "Examples using mne.io.read_raw_nicolet": [[508, "examples-using-mne-io-read-raw-nicolet"]], "mne.io.read_raw_nihon": [[509, "mne-io-read-raw-nihon"]], "Examples using mne.io.read_raw_nihon": [[509, "examples-using-mne-io-read-raw-nihon"]], "mne.io.read_raw_nirx": [[510, "mne-io-read-raw-nirx"]], "Examples using mne.io.read_raw_nirx": [[510, "examples-using-mne-io-read-raw-nirx"]], "mne.io.read_raw_persyst": [[511, "mne-io-read-raw-persyst"]], "Examples using mne.io.read_raw_persyst": [[511, "examples-using-mne-io-read-raw-persyst"]], "mne.io.read_raw_snirf": [[512, "mne-io-read-raw-snirf"]], "Examples using mne.io.read_raw_snirf": [[512, "examples-using-mne-io-read-raw-snirf"]], "mne.io.show_fiff": [[513, "mne-io-show-fiff"]], "mne.io.write_fiducials": [[514, "mne-io-write-fiducials"]], "mne.label.select_sources": [[515, "mne-label-select-sources"]], "Examples using mne.label.select_sources": [[515, "examples-using-mne-label-select-sources"]], "mne.label_sign_flip": [[516, "mne-label-sign-flip"]], "Examples using mne.label_sign_flip": [[516, "examples-using-mne-label-sign-flip"]], "mne.labels_to_stc": [[517, "mne-labels-to-stc"]], "Examples using mne.labels_to_stc": [[517, "examples-using-mne-labels-to-stc"]], "mne.make_ad_hoc_cov": [[518, "mne-make-ad-hoc-cov"]], "Examples using mne.make_ad_hoc_cov": [[518, "examples-using-mne-make-ad-hoc-cov"]], "mne.make_bem_model": [[519, "mne-make-bem-model"]], "Examples using mne.make_bem_model": [[519, "examples-using-mne-make-bem-model"]], "mne.make_bem_solution": [[520, "mne-make-bem-solution"]], "Examples using mne.make_bem_solution": [[520, "examples-using-mne-make-bem-solution"]], "mne.make_field_map": [[521, "mne-make-field-map"]], "Examples using mne.make_field_map": [[521, "examples-using-mne-make-field-map"]], "mne.make_fixed_length_epochs": [[522, "mne-make-fixed-length-epochs"]], "Examples using mne.make_fixed_length_epochs": [[522, "examples-using-mne-make-fixed-length-epochs"]], "mne.make_fixed_length_events": [[523, "mne-make-fixed-length-events"]], "Examples using mne.make_fixed_length_events": [[523, "examples-using-mne-make-fixed-length-events"]], "mne.make_forward_dipole": [[524, "mne-make-forward-dipole"]], "Examples using mne.make_forward_dipole": [[524, "examples-using-mne-make-forward-dipole"]], "mne.make_forward_solution": [[525, "mne-make-forward-solution"]], "Examples using mne.make_forward_solution": [[525, "examples-using-mne-make-forward-solution"]], "mne.make_sphere_model": [[526, "mne-make-sphere-model"]], "Examples using mne.make_sphere_model": [[526, "examples-using-mne-make-sphere-model"]], "mne.merge_events": [[527, "mne-merge-events"]], "Examples using mne.merge_events": [[527, "examples-using-mne-merge-events"]], "mne.minimum_norm.InverseOperator": [[528, "mne-minimum-norm-inverseoperator"]], "Examples using mne.minimum_norm.InverseOperator": [[528, "examples-using-mne-minimum-norm-inverseoperator"]], "mne.minimum_norm.apply_inverse": [[529, "mne-minimum-norm-apply-inverse"]], "Examples using mne.minimum_norm.apply_inverse": [[529, "examples-using-mne-minimum-norm-apply-inverse"]], "mne.minimum_norm.apply_inverse_cov": [[530, "mne-minimum-norm-apply-inverse-cov"]], "Examples using mne.minimum_norm.apply_inverse_cov": [[530, "examples-using-mne-minimum-norm-apply-inverse-cov"]], "mne.minimum_norm.apply_inverse_epochs": [[531, "mne-minimum-norm-apply-inverse-epochs"]], "Examples using mne.minimum_norm.apply_inverse_epochs": [[531, "examples-using-mne-minimum-norm-apply-inverse-epochs"]], "mne.minimum_norm.apply_inverse_raw": [[532, "mne-minimum-norm-apply-inverse-raw"]], "Examples using mne.minimum_norm.apply_inverse_raw": [[532, "examples-using-mne-minimum-norm-apply-inverse-raw"]], "mne.minimum_norm.apply_inverse_tfr_epochs": [[533, "mne-minimum-norm-apply-inverse-tfr-epochs"]], "mne.minimum_norm.compute_rank_inverse": [[534, "mne-minimum-norm-compute-rank-inverse"]], "mne.minimum_norm.compute_source_psd": [[535, "mne-minimum-norm-compute-source-psd"]], "Examples using mne.minimum_norm.compute_source_psd": [[535, "examples-using-mne-minimum-norm-compute-source-psd"]], "mne.minimum_norm.compute_source_psd_epochs": [[536, "mne-minimum-norm-compute-source-psd-epochs"]], "Examples using mne.minimum_norm.compute_source_psd_epochs": [[536, "examples-using-mne-minimum-norm-compute-source-psd-epochs"]], "mne.minimum_norm.estimate_snr": [[537, "mne-minimum-norm-estimate-snr"]], "mne.minimum_norm.get_cross_talk": [[538, "mne-minimum-norm-get-cross-talk"]], "Examples using mne.minimum_norm.get_cross_talk": [[538, "examples-using-mne-minimum-norm-get-cross-talk"]], "mne.minimum_norm.get_point_spread": [[539, "mne-minimum-norm-get-point-spread"]], "Examples using mne.minimum_norm.get_point_spread": [[539, "examples-using-mne-minimum-norm-get-point-spread"]], "mne.minimum_norm.make_inverse_operator": [[540, "mne-minimum-norm-make-inverse-operator"]], "Examples using mne.minimum_norm.make_inverse_operator": [[540, "examples-using-mne-minimum-norm-make-inverse-operator"]], "mne.minimum_norm.make_inverse_resolution_matrix": [[541, "mne-minimum-norm-make-inverse-resolution-matrix"]], "Examples using mne.minimum_norm.make_inverse_resolution_matrix": [[541, "examples-using-mne-minimum-norm-make-inverse-resolution-matrix"]], "mne.minimum_norm.prepare_inverse_operator": [[542, "mne-minimum-norm-prepare-inverse-operator"]], "mne.minimum_norm.read_inverse_operator": [[543, "mne-minimum-norm-read-inverse-operator"]], "Examples using mne.minimum_norm.read_inverse_operator": [[543, "examples-using-mne-minimum-norm-read-inverse-operator"]], "mne.minimum_norm.resolution_metrics": [[544, "mne-minimum-norm-resolution-metrics"]], "Examples using mne.minimum_norm.resolution_metrics": [[544, "examples-using-mne-minimum-norm-resolution-metrics"]], "mne.minimum_norm.source_band_induced_power": [[545, "mne-minimum-norm-source-band-induced-power"]], "Examples using mne.minimum_norm.source_band_induced_power": [[545, "examples-using-mne-minimum-norm-source-band-induced-power"]], "mne.minimum_norm.source_induced_power": [[546, "mne-minimum-norm-source-induced-power"]], "Examples using mne.minimum_norm.source_induced_power": [[546, "examples-using-mne-minimum-norm-source-induced-power"]], "mne.minimum_norm.write_inverse_operator": [[547, "mne-minimum-norm-write-inverse-operator"]], "mne.morph_labels": [[548, "mne-morph-labels"]], "mne.morph_source_spaces": [[549, "mne-morph-source-spaces"]], "Examples using mne.morph_source_spaces": [[549, "examples-using-mne-morph-source-spaces"]], "mne.open_docs": [[550, "mne-open-docs"]], "mne.open_report": [[551, "mne-open-report"]], "Examples using mne.open_report": [[551, "examples-using-mne-open-report"]], "mne.parse_config": [[552, "mne-parse-config"]], "mne.pick_channels": [[553, "mne-pick-channels"]], "Examples using mne.pick_channels": [[553, "examples-using-mne-pick-channels"]], "mne.pick_channels_cov": [[554, "mne-pick-channels-cov"]], "mne.pick_channels_forward": [[555, "mne-pick-channels-forward"]], "mne.pick_channels_regexp": [[556, "mne-pick-channels-regexp"]], "Examples using mne.pick_channels_regexp": [[556, "examples-using-mne-pick-channels-regexp"]], "mne.pick_events": [[557, "mne-pick-events"]], "Examples using mne.pick_events": [[557, "examples-using-mne-pick-events"]], "mne.pick_info": [[558, "mne-pick-info"]], "Examples using mne.pick_info": [[558, "examples-using-mne-pick-info"]], "mne.pick_types": [[559, "mne-pick-types"]], "Examples using mne.pick_types": [[559, "examples-using-mne-pick-types"]], "mne.pick_types_forward": [[560, "mne-pick-types-forward"]], "Examples using mne.pick_types_forward": [[560, "examples-using-mne-pick-types-forward"]], "mne.preprocessing.EOGRegression": [[561, "mne-preprocessing-eogregression"]], "Examples using mne.preprocessing.EOGRegression": [[561, "examples-using-mne-preprocessing-eogregression"]], "mne.preprocessing.ICA": [[562, "mne-preprocessing-ica"]], "Examples using mne.preprocessing.ICA": [[562, "examples-using-mne-preprocessing-ica"]], "mne.preprocessing.Xdawn": [[563, "mne-preprocessing-xdawn"]], "Examples using mne.preprocessing.Xdawn": [[563, "examples-using-mne-preprocessing-xdawn"]], "mne.preprocessing.annotate_amplitude": [[564, "mne-preprocessing-annotate-amplitude"]], "mne.preprocessing.annotate_break": [[565, "mne-preprocessing-annotate-break"]], "Examples using mne.preprocessing.annotate_break": [[565, "examples-using-mne-preprocessing-annotate-break"]], "mne.preprocessing.annotate_movement": [[566, "mne-preprocessing-annotate-movement"]], "Examples using mne.preprocessing.annotate_movement": [[566, "examples-using-mne-preprocessing-annotate-movement"]], "mne.preprocessing.annotate_muscle_zscore": [[567, "mne-preprocessing-annotate-muscle-zscore"]], "Examples using mne.preprocessing.annotate_muscle_zscore": [[567, "examples-using-mne-preprocessing-annotate-muscle-zscore"]], "mne.preprocessing.annotate_nan": [[568, "mne-preprocessing-annotate-nan"]], "mne.preprocessing.compute_average_dev_head_t": [[569, "mne-preprocessing-compute-average-dev-head-t"]], "Examples using mne.preprocessing.compute_average_dev_head_t": [[569, "examples-using-mne-preprocessing-compute-average-dev-head-t"]], "mne.preprocessing.compute_bridged_electrodes": [[570, "mne-preprocessing-compute-bridged-electrodes"]], "Examples using mne.preprocessing.compute_bridged_electrodes": [[570, "examples-using-mne-preprocessing-compute-bridged-electrodes"]], "mne.preprocessing.compute_current_source_density": [[571, "mne-preprocessing-compute-current-source-density"]], "Examples using mne.preprocessing.compute_current_source_density": [[571, "examples-using-mne-preprocessing-compute-current-source-density"]], "mne.preprocessing.compute_fine_calibration": [[572, "mne-preprocessing-compute-fine-calibration"]], "mne.preprocessing.compute_maxwell_basis": [[573, "mne-preprocessing-compute-maxwell-basis"]], "mne.preprocessing.compute_proj_ecg": [[574, "mne-preprocessing-compute-proj-ecg"]], "Examples using mne.preprocessing.compute_proj_ecg": [[574, "examples-using-mne-preprocessing-compute-proj-ecg"]], "mne.preprocessing.compute_proj_eog": [[575, "mne-preprocessing-compute-proj-eog"]], "Examples using mne.preprocessing.compute_proj_eog": [[575, "examples-using-mne-preprocessing-compute-proj-eog"]], "mne.preprocessing.compute_proj_hfc": [[576, "mne-preprocessing-compute-proj-hfc"]], "Examples using mne.preprocessing.compute_proj_hfc": [[576, "examples-using-mne-preprocessing-compute-proj-hfc"]], "mne.preprocessing.corrmap": [[577, "mne-preprocessing-corrmap"]], "Examples using mne.preprocessing.corrmap": [[577, "examples-using-mne-preprocessing-corrmap"]], "mne.preprocessing.cortical_signal_suppression": [[578, "mne-preprocessing-cortical-signal-suppression"]], "Examples using mne.preprocessing.cortical_signal_suppression": [[578, "examples-using-mne-preprocessing-cortical-signal-suppression"]], "mne.preprocessing.create_ecg_epochs": [[579, "mne-preprocessing-create-ecg-epochs"]], "Examples using mne.preprocessing.create_ecg_epochs": [[579, "examples-using-mne-preprocessing-create-ecg-epochs"]], "mne.preprocessing.create_eog_epochs": [[580, "mne-preprocessing-create-eog-epochs"]], "Examples using mne.preprocessing.create_eog_epochs": [[580, "examples-using-mne-preprocessing-create-eog-epochs"]], "mne.preprocessing.equalize_bads": [[581, "mne-preprocessing-equalize-bads"]], "mne.preprocessing.eyetracking.set_channel_types_eyetrack": [[582, "mne-preprocessing-eyetracking-set-channel-types-eyetrack"]], "Examples using mne.preprocessing.eyetracking.set_channel_types_eyetrack": [[582, "examples-using-mne-preprocessing-eyetracking-set-channel-types-eyetrack"]], "mne.preprocessing.find_bad_channels_maxwell": [[583, "mne-preprocessing-find-bad-channels-maxwell"]], "Examples using mne.preprocessing.find_bad_channels_maxwell": [[583, "examples-using-mne-preprocessing-find-bad-channels-maxwell"]], "mne.preprocessing.find_ecg_events": [[584, "mne-preprocessing-find-ecg-events"]], "Examples using mne.preprocessing.find_ecg_events": [[584, "examples-using-mne-preprocessing-find-ecg-events"]], "mne.preprocessing.find_eog_events": [[585, "mne-preprocessing-find-eog-events"]], "Examples using mne.preprocessing.find_eog_events": [[585, "examples-using-mne-preprocessing-find-eog-events"]], "mne.preprocessing.fix_stim_artifact": [[586, "mne-preprocessing-fix-stim-artifact"]], "Examples using mne.preprocessing.fix_stim_artifact": [[586, "examples-using-mne-preprocessing-fix-stim-artifact"]], "mne.preprocessing.ica_find_ecg_events": [[587, "mne-preprocessing-ica-find-ecg-events"]], "mne.preprocessing.ica_find_eog_events": [[588, "mne-preprocessing-ica-find-eog-events"]], "mne.preprocessing.ieeg.make_montage_volume": [[589, "mne-preprocessing-ieeg-make-montage-volume"]], "Examples using mne.preprocessing.ieeg.make_montage_volume": [[589, "examples-using-mne-preprocessing-ieeg-make-montage-volume"]], "mne.preprocessing.ieeg.project_sensors_onto_brain": [[590, "mne-preprocessing-ieeg-project-sensors-onto-brain"]], "Examples using mne.preprocessing.ieeg.project_sensors_onto_brain": [[590, "examples-using-mne-preprocessing-ieeg-project-sensors-onto-brain"]], "mne.preprocessing.ieeg.warp_montage": [[591, "mne-preprocessing-ieeg-warp-montage"]], "Examples using mne.preprocessing.ieeg.warp_montage": [[591, "examples-using-mne-preprocessing-ieeg-warp-montage"]], "mne.preprocessing.infomax": [[592, "mne-preprocessing-infomax"]], "mne.preprocessing.interpolate_bridged_electrodes": [[593, "mne-preprocessing-interpolate-bridged-electrodes"]], "Examples using mne.preprocessing.interpolate_bridged_electrodes": [[593, "examples-using-mne-preprocessing-interpolate-bridged-electrodes"]], "mne.preprocessing.maxwell_filter": [[594, "mne-preprocessing-maxwell-filter"]], "Examples using mne.preprocessing.maxwell_filter": [[594, "examples-using-mne-preprocessing-maxwell-filter"]], "mne.preprocessing.maxwell_filter_prepare_emptyroom": [[595, "mne-preprocessing-maxwell-filter-prepare-emptyroom"]], "mne.preprocessing.nirs.beer_lambert_law": [[596, "mne-preprocessing-nirs-beer-lambert-law"]], "Examples using mne.preprocessing.nirs.beer_lambert_law": [[596, "examples-using-mne-preprocessing-nirs-beer-lambert-law"]], "mne.preprocessing.nirs.optical_density": [[597, "mne-preprocessing-nirs-optical-density"]], "Examples using mne.preprocessing.nirs.optical_density": [[597, "examples-using-mne-preprocessing-nirs-optical-density"]], "mne.preprocessing.nirs.scalp_coupling_index": [[598, "mne-preprocessing-nirs-scalp-coupling-index"]], "Examples using mne.preprocessing.nirs.scalp_coupling_index": [[598, "examples-using-mne-preprocessing-nirs-scalp-coupling-index"]], "mne.preprocessing.nirs.short_channels": [[599, "mne-preprocessing-nirs-short-channels"]], "mne.preprocessing.nirs.source_detector_distances": [[600, "mne-preprocessing-nirs-source-detector-distances"]], "Examples using mne.preprocessing.nirs.source_detector_distances": [[600, "examples-using-mne-preprocessing-nirs-source-detector-distances"]], "mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[601, "mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "Examples using mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[601, "examples-using-mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "mne.preprocessing.oversampled_temporal_projection": [[602, "mne-preprocessing-oversampled-temporal-projection"]], "Examples using mne.preprocessing.oversampled_temporal_projection": [[602, "examples-using-mne-preprocessing-oversampled-temporal-projection"]], "mne.preprocessing.peak_finder": [[603, "mne-preprocessing-peak-finder"]], "mne.preprocessing.read_eog_regression": [[604, "mne-preprocessing-read-eog-regression"]], "mne.preprocessing.read_fine_calibration": [[605, "mne-preprocessing-read-fine-calibration"]], "mne.preprocessing.read_ica": [[606, "mne-preprocessing-read-ica"]], "Examples using mne.preprocessing.read_ica": [[606, "examples-using-mne-preprocessing-read-ica"]], "mne.preprocessing.read_ica_eeglab": [[607, "mne-preprocessing-read-ica-eeglab"]], "mne.preprocessing.realign_raw": [[608, "mne-preprocessing-realign-raw"]], "mne.preprocessing.regress_artifact": [[609, "mne-preprocessing-regress-artifact"]], "mne.preprocessing.write_fine_calibration": [[610, "mne-preprocessing-write-fine-calibration"]], "mne.random_parcellation": [[611, "mne-random-parcellation"]], "mne.read_annotations": [[612, "mne-read-annotations"]], "Examples using mne.read_annotations": [[612, "examples-using-mne-read-annotations"]], "mne.read_bem_solution": [[613, "mne-read-bem-solution"]], "Examples using mne.read_bem_solution": [[613, "examples-using-mne-read-bem-solution"]], "mne.read_bem_surfaces": [[614, "mne-read-bem-surfaces"]], "Examples using mne.read_bem_surfaces": [[614, "examples-using-mne-read-bem-surfaces"]], "mne.read_cov": [[615, "mne-read-cov"]], "Examples using mne.read_cov": [[615, "examples-using-mne-read-cov"]], "mne.read_dipole": [[616, "mne-read-dipole"]], "Examples using mne.read_dipole": [[616, "examples-using-mne-read-dipole"]], "mne.read_epochs": [[617, "mne-read-epochs"]], "Examples using mne.read_epochs": [[617, "examples-using-mne-read-epochs"]], "mne.read_epochs_eeglab": [[618, "mne-read-epochs-eeglab"]], "Examples using mne.read_epochs_eeglab": [[618, "examples-using-mne-read-epochs-eeglab"]], "mne.read_epochs_fieldtrip": [[619, "mne-read-epochs-fieldtrip"]], "mne.read_epochs_kit": [[620, "mne-read-epochs-kit"]], "mne.read_events": [[621, "mne-read-events"]], "Examples using mne.read_events": [[621, "examples-using-mne-read-events"]], "mne.read_evoked_besa": [[622, "mne-read-evoked-besa"]], "mne.read_evoked_fieldtrip": [[623, "mne-read-evoked-fieldtrip"]], "mne.read_evokeds": [[624, "mne-read-evokeds"]], "Examples using mne.read_evokeds": [[624, "examples-using-mne-read-evokeds"]], "mne.read_evokeds_mff": [[625, "mne-read-evokeds-mff"]], "mne.read_forward_solution": [[626, "mne-read-forward-solution"]], "Examples using mne.read_forward_solution": [[626, "examples-using-mne-read-forward-solution"]], "mne.read_freesurfer_lut": [[627, "mne-read-freesurfer-lut"]], "mne.read_label": [[628, "mne-read-label"]], "Examples using mne.read_label": [[628, "examples-using-mne-read-label"]], "mne.read_labels_from_annot": [[629, "mne-read-labels-from-annot"]], "Examples using mne.read_labels_from_annot": [[629, "examples-using-mne-read-labels-from-annot"]], "mne.read_lta": [[630, "mne-read-lta"]], "mne.read_morph_map": [[631, "mne-read-morph-map"]], "mne.read_proj": [[632, "mne-read-proj"]], "Examples using mne.read_proj": [[632, "examples-using-mne-read-proj"]], "mne.read_reject_parameters": [[633, "mne-read-reject-parameters"]], "mne.read_source_estimate": [[634, "mne-read-source-estimate"]], "Examples using mne.read_source_estimate": [[634, "examples-using-mne-read-source-estimate"]], "mne.read_source_morph": [[635, "mne-read-source-morph"]], "mne.read_source_spaces": [[636, "mne-read-source-spaces"]], "Examples using mne.read_source_spaces": [[636, "examples-using-mne-read-source-spaces"]], "mne.read_surface": [[637, "mne-read-surface"]], "Examples using mne.read_surface": [[637, "examples-using-mne-read-surface"]], "mne.read_talxfm": [[638, "mne-read-talxfm"]], "Examples using mne.read_talxfm": [[638, "examples-using-mne-read-talxfm"]], "mne.read_trans": [[639, "mne-read-trans"]], "Examples using mne.read_trans": [[639, "examples-using-mne-read-trans"]], "mne.read_tri": [[640, "mne-read-tri"]], "mne.read_vectorview_selection": [[641, "mne-read-vectorview-selection"]], "Examples using mne.read_vectorview_selection": [[641, "examples-using-mne-read-vectorview-selection"]], "mne.rename_channels": [[642, "mne-rename-channels"]], "mne.scale_bem": [[643, "mne-scale-bem"]], "mne.scale_labels": [[644, "mne-scale-labels"]], "mne.scale_mri": [[645, "mne-scale-mri"]], "Examples using mne.scale_mri": [[645, "examples-using-mne-scale-mri"]], "mne.scale_source_space": [[646, "mne-scale-source-space"]], "mne.sensitivity_map": [[647, "mne-sensitivity-map"]], "Examples using mne.sensitivity_map": [[647, "examples-using-mne-sensitivity-map"]], "mne.set_bipolar_reference": [[648, "mne-set-bipolar-reference"]], "Examples using mne.set_bipolar_reference": [[648, "examples-using-mne-set-bipolar-reference"]], "mne.set_cache_dir": [[649, "mne-set-cache-dir"]], "mne.set_config": [[650, "mne-set-config"]], "Examples using mne.set_config": [[650, "examples-using-mne-set-config"]], "mne.set_eeg_reference": [[651, "mne-set-eeg-reference"]], "Examples using mne.set_eeg_reference": [[651, "examples-using-mne-set-eeg-reference"]], "mne.set_log_file": [[652, "mne-set-log-file"]], "mne.set_log_level": [[653, "mne-set-log-level"]], "mne.setup_source_space": [[654, "mne-setup-source-space"]], "Examples using mne.setup_source_space": [[654, "examples-using-mne-setup-source-space"]], "mne.setup_volume_source_space": [[655, "mne-setup-volume-source-space"]], "Examples using mne.setup_volume_source_space": [[655, "examples-using-mne-setup-volume-source-space"]], "mne.simulation.SourceSimulator": [[656, "mne-simulation-sourcesimulator"]], "Examples using mne.simulation.SourceSimulator": [[656, "examples-using-mne-simulation-sourcesimulator"]], "mne.simulation.add_chpi": [[657, "mne-simulation-add-chpi"]], "mne.simulation.add_ecg": [[658, "mne-simulation-add-ecg"]], "Examples using mne.simulation.add_ecg": [[658, "examples-using-mne-simulation-add-ecg"]], "mne.simulation.add_eog": [[659, "mne-simulation-add-eog"]], "Examples using mne.simulation.add_eog": [[659, "examples-using-mne-simulation-add-eog"]], "mne.simulation.add_noise": [[660, "mne-simulation-add-noise"]], "Examples using mne.simulation.add_noise": [[660, "examples-using-mne-simulation-add-noise"]], "mne.simulation.metrics.cosine_score": [[661, "mne-simulation-metrics-cosine-score"]], "Examples using mne.simulation.metrics.cosine_score": [[661, "examples-using-mne-simulation-metrics-cosine-score"]], "mne.simulation.metrics.f1_score": [[662, "mne-simulation-metrics-f1-score"]], "Examples using mne.simulation.metrics.f1_score": [[662, "examples-using-mne-simulation-metrics-f1-score"]], "mne.simulation.metrics.peak_position_error": [[663, "mne-simulation-metrics-peak-position-error"]], "Examples using mne.simulation.metrics.peak_position_error": [[663, "examples-using-mne-simulation-metrics-peak-position-error"]], "mne.simulation.metrics.precision_score": [[664, "mne-simulation-metrics-precision-score"]], "Examples using mne.simulation.metrics.precision_score": [[664, "examples-using-mne-simulation-metrics-precision-score"]], "mne.simulation.metrics.recall_score": [[665, "mne-simulation-metrics-recall-score"]], "Examples using mne.simulation.metrics.recall_score": [[665, "examples-using-mne-simulation-metrics-recall-score"]], "mne.simulation.metrics.region_localization_error": [[666, "mne-simulation-metrics-region-localization-error"]], "Examples using mne.simulation.metrics.region_localization_error": [[666, "examples-using-mne-simulation-metrics-region-localization-error"]], "mne.simulation.metrics.roc_auc_score": [[667, "mne-simulation-metrics-roc-auc-score"]], "mne.simulation.metrics.spatial_deviation_error": [[668, "mne-simulation-metrics-spatial-deviation-error"]], "Examples using mne.simulation.metrics.spatial_deviation_error": [[668, "examples-using-mne-simulation-metrics-spatial-deviation-error"]], "mne.simulation.select_source_in_label": [[669, "mne-simulation-select-source-in-label"]], "mne.simulation.simulate_evoked": [[670, "mne-simulation-simulate-evoked"]], "Examples using mne.simulation.simulate_evoked": [[670, "examples-using-mne-simulation-simulate-evoked"]], "mne.simulation.simulate_raw": [[671, "mne-simulation-simulate-raw"]], "Data alignment and stim channel encoding": [[671, "id3"]], "Examples using mne.simulation.simulate_raw": [[671, "examples-using-mne-simulation-simulate-raw"]], "mne.simulation.simulate_sparse_stc": [[672, "mne-simulation-simulate-sparse-stc"]], "Examples using mne.simulation.simulate_sparse_stc": [[672, "examples-using-mne-simulation-simulate-sparse-stc"]], "mne.simulation.simulate_stc": [[673, "mne-simulation-simulate-stc"]], "Examples using mne.simulation.simulate_stc": [[673, "examples-using-mne-simulation-simulate-stc"]], "mne.source_space.compute_distance_to_sensors": [[674, "mne-source-space-compute-distance-to-sensors"]], "Examples using mne.source_space.compute_distance_to_sensors": [[674, "examples-using-mne-source-space-compute-distance-to-sensors"]], "mne.source_space.get_decimated_surfaces": [[675, "mne-source-space-get-decimated-surfaces"]], "mne.spatial_dist_adjacency": [[676, "mne-spatial-dist-adjacency"]], "mne.spatial_inter_hemi_adjacency": [[677, "mne-spatial-inter-hemi-adjacency"]], "mne.spatial_src_adjacency": [[678, "mne-spatial-src-adjacency"]], "Examples using mne.spatial_src_adjacency": [[678, "examples-using-mne-spatial-src-adjacency"]], "mne.spatial_tris_adjacency": [[679, "mne-spatial-tris-adjacency"]], "mne.spatio_temporal_dist_adjacency": [[680, "mne-spatio-temporal-dist-adjacency"]], "mne.spatio_temporal_src_adjacency": [[681, "mne-spatio-temporal-src-adjacency"]], "mne.spatio_temporal_tris_adjacency": [[682, "mne-spatio-temporal-tris-adjacency"]], "mne.split_label": [[683, "mne-split-label"]], "mne.stats.bonferroni_correction": [[684, "mne-stats-bonferroni-correction"]], "Examples using mne.stats.bonferroni_correction": [[684, "examples-using-mne-stats-bonferroni-correction"]], "mne.stats.bootstrap_confidence_interval": [[685, "mne-stats-bootstrap-confidence-interval"]], "Examples using mne.stats.bootstrap_confidence_interval": [[685, "examples-using-mne-stats-bootstrap-confidence-interval"]], "mne.stats.combine_adjacency": [[686, "mne-stats-combine-adjacency"]], "Examples using mne.stats.combine_adjacency": [[686, "examples-using-mne-stats-combine-adjacency"]], "mne.stats.f_mway_rm": [[687, "mne-stats-f-mway-rm"]], "Examples using mne.stats.f_mway_rm": [[687, "examples-using-mne-stats-f-mway-rm"]], "mne.stats.f_oneway": [[688, "mne-stats-f-oneway"]], "mne.stats.f_threshold_mway_rm": [[689, "mne-stats-f-threshold-mway-rm"]], "Examples using mne.stats.f_threshold_mway_rm": [[689, "examples-using-mne-stats-f-threshold-mway-rm"]], "mne.stats.fdr_correction": [[690, "mne-stats-fdr-correction"]], "Examples using mne.stats.fdr_correction": [[690, "examples-using-mne-stats-fdr-correction"]], "mne.stats.linear_regression": [[691, "mne-stats-linear-regression"]], "Examples using mne.stats.linear_regression": [[691, "examples-using-mne-stats-linear-regression"]], "mne.stats.linear_regression_raw": [[692, "mne-stats-linear-regression-raw"]], "Examples using mne.stats.linear_regression_raw": [[692, "examples-using-mne-stats-linear-regression-raw"]], "mne.stats.permutation_cluster_1samp_test": [[693, "mne-stats-permutation-cluster-1samp-test"]], "Examples using mne.stats.permutation_cluster_1samp_test": [[693, "examples-using-mne-stats-permutation-cluster-1samp-test"]], "mne.stats.permutation_cluster_test": [[694, "mne-stats-permutation-cluster-test"]], "Examples using mne.stats.permutation_cluster_test": [[694, "examples-using-mne-stats-permutation-cluster-test"]], "mne.stats.permutation_t_test": [[695, "mne-stats-permutation-t-test"]], "Examples using mne.stats.permutation_t_test": [[695, "examples-using-mne-stats-permutation-t-test"]], "mne.stats.spatio_temporal_cluster_1samp_test": [[696, "mne-stats-spatio-temporal-cluster-1samp-test"]], "Examples using mne.stats.spatio_temporal_cluster_1samp_test": [[696, "examples-using-mne-stats-spatio-temporal-cluster-1samp-test"]], "mne.stats.spatio_temporal_cluster_test": [[697, "mne-stats-spatio-temporal-cluster-test"]], "Examples using mne.stats.spatio_temporal_cluster_test": [[697, "examples-using-mne-stats-spatio-temporal-cluster-test"]], "mne.stats.summarize_clusters_stc": [[698, "mne-stats-summarize-clusters-stc"]], "Examples using mne.stats.summarize_clusters_stc": [[698, "examples-using-mne-stats-summarize-clusters-stc"]], "mne.stats.ttest_1samp_no_p": [[699, "mne-stats-ttest-1samp-no-p"]], "Examples using mne.stats.ttest_1samp_no_p": [[699, "examples-using-mne-stats-ttest-1samp-no-p"]], "mne.stats.ttest_ind_no_p": [[700, "mne-stats-ttest-ind-no-p"]], "mne.stc_near_sensors": [[701, "mne-stc-near-sensors"]], "Examples using mne.stc_near_sensors": [[701, "examples-using-mne-stc-near-sensors"]], "mne.stc_to_label": [[702, "mne-stc-to-label"]], "Examples using mne.stc_to_label": [[702, "examples-using-mne-stc-to-label"]], "mne.surface.complete_surface_info": [[703, "mne-surface-complete-surface-info"]], "mne.surface.read_curvature": [[704, "mne-surface-read-curvature"]], "Examples using mne.surface.read_curvature": [[704, "examples-using-mne-surface-read-curvature"]], "mne.sys_info": [[705, "mne-sys-info"]], "Examples using mne.sys_info": [[705, "examples-using-mne-sys-info"]], "mne.time_frequency.AverageTFR": [[706, "mne-time-frequency-averagetfr"]], "Examples using mne.time_frequency.AverageTFR": [[706, "examples-using-mne-time-frequency-averagetfr"]], "mne.time_frequency.CrossSpectralDensity": [[707, "mne-time-frequency-crossspectraldensity"]], "Examples using mne.time_frequency.CrossSpectralDensity": [[707, "examples-using-mne-time-frequency-crossspectraldensity"]], "mne.time_frequency.EpochsSpectrum": [[708, "mne-time-frequency-epochsspectrum"]], "Examples using mne.time_frequency.EpochsSpectrum": [[708, "examples-using-mne-time-frequency-epochsspectrum"]], "mne.time_frequency.EpochsTFR": [[709, "mne-time-frequency-epochstfr"]], "Examples using mne.time_frequency.EpochsTFR": [[709, "examples-using-mne-time-frequency-epochstfr"]], "mne.time_frequency.Spectrum": [[710, "mne-time-frequency-spectrum"]], "Examples using mne.time_frequency.Spectrum": [[710, "examples-using-mne-time-frequency-spectrum"]], "mne.time_frequency.csd_array_fourier": [[711, "mne-time-frequency-csd-array-fourier"]], "mne.time_frequency.csd_array_morlet": [[712, "mne-time-frequency-csd-array-morlet"]], "mne.time_frequency.csd_array_multitaper": [[713, "mne-time-frequency-csd-array-multitaper"]], "mne.time_frequency.csd_fourier": [[714, "mne-time-frequency-csd-fourier"]], "Examples using mne.time_frequency.csd_fourier": [[714, "examples-using-mne-time-frequency-csd-fourier"]], "mne.time_frequency.csd_morlet": [[715, "mne-time-frequency-csd-morlet"]], "Examples using mne.time_frequency.csd_morlet": [[715, "examples-using-mne-time-frequency-csd-morlet"]], "mne.time_frequency.csd_multitaper": [[716, "mne-time-frequency-csd-multitaper"]], "Examples using mne.time_frequency.csd_multitaper": [[716, "examples-using-mne-time-frequency-csd-multitaper"]], "mne.time_frequency.csd_tfr": [[717, "mne-time-frequency-csd-tfr"]], "Examples using mne.time_frequency.csd_tfr": [[717, "examples-using-mne-time-frequency-csd-tfr"]], "mne.time_frequency.dpss_windows": [[718, "mne-time-frequency-dpss-windows"]], "mne.time_frequency.fit_iir_model_raw": [[719, "mne-time-frequency-fit-iir-model-raw"]], "Examples using mne.time_frequency.fit_iir_model_raw": [[719, "examples-using-mne-time-frequency-fit-iir-model-raw"]], "mne.time_frequency.fwhm": [[720, "mne-time-frequency-fwhm"]], "mne.time_frequency.istft": [[721, "mne-time-frequency-istft"]], "mne.time_frequency.morlet": [[722, "mne-time-frequency-morlet"]], "Examples using mne.time_frequency.morlet": [[722, "examples-using-mne-time-frequency-morlet"]], "mne.time_frequency.pick_channels_csd": [[723, "mne-time-frequency-pick-channels-csd"]], "mne.time_frequency.psd_array_multitaper": [[724, "mne-time-frequency-psd-array-multitaper"]], "mne.time_frequency.psd_array_welch": [[725, "mne-time-frequency-psd-array-welch"]], "Examples using mne.time_frequency.psd_array_welch": [[725, "examples-using-mne-time-frequency-psd-array-welch"]], "mne.time_frequency.read_csd": [[726, "mne-time-frequency-read-csd"]], "mne.time_frequency.read_spectrum": [[727, "mne-time-frequency-read-spectrum"]], "mne.time_frequency.read_tfrs": [[728, "mne-time-frequency-read-tfrs"]], "mne.time_frequency.stft": [[729, "mne-time-frequency-stft"]], "mne.time_frequency.stftfreq": [[730, "mne-time-frequency-stftfreq"]], "mne.time_frequency.tfr.cwt": [[731, "mne-time-frequency-tfr-cwt"]], "mne.time_frequency.tfr.morlet": [[732, "mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_array_morlet": [[733, "mne-time-frequency-tfr-array-morlet"]], "Examples using mne.time_frequency.tfr_array_morlet": [[733, "examples-using-mne-time-frequency-tfr-array-morlet"]], "mne.time_frequency.tfr_array_multitaper": [[734, "mne-time-frequency-tfr-array-multitaper"]], "mne.time_frequency.tfr_array_stockwell": [[735, "mne-time-frequency-tfr-array-stockwell"]], "mne.time_frequency.tfr_morlet": [[736, "mne-time-frequency-tfr-morlet"]], "Examples using mne.time_frequency.tfr_morlet": [[736, "examples-using-mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_multitaper": [[737, "mne-time-frequency-tfr-multitaper"]], "Examples using mne.time_frequency.tfr_multitaper": [[737, "examples-using-mne-time-frequency-tfr-multitaper"]], "mne.time_frequency.tfr_stockwell": [[738, "mne-time-frequency-tfr-stockwell"]], "Examples using mne.time_frequency.tfr_stockwell": [[738, "examples-using-mne-time-frequency-tfr-stockwell"]], "mne.time_frequency.write_tfrs": [[739, "mne-time-frequency-write-tfrs"]], "mne.transform_surface_to": [[740, "mne-transform-surface-to"]], "mne.transforms.Transform": [[741, "mne-transforms-transform"]], "mne.transforms.apply_volume_registration": [[742, "mne-transforms-apply-volume-registration"]], "Examples using mne.transforms.apply_volume_registration": [[742, "examples-using-mne-transforms-apply-volume-registration"]], "mne.transforms.apply_volume_registration_points": [[743, "mne-transforms-apply-volume-registration-points"]], "Examples using mne.transforms.apply_volume_registration_points": [[743, "examples-using-mne-transforms-apply-volume-registration-points"]], "mne.transforms.compute_volume_registration": [[744, "mne-transforms-compute-volume-registration"]], "Examples using mne.transforms.compute_volume_registration": [[744, "examples-using-mne-transforms-compute-volume-registration"]], "mne.transforms.quat_to_rot": [[745, "mne-transforms-quat-to-rot"]], "mne.transforms.read_ras_mni_t": [[746, "mne-transforms-read-ras-mni-t"]], "Examples using mne.transforms.read_ras_mni_t": [[746, "examples-using-mne-transforms-read-ras-mni-t"]], "mne.transforms.rot_to_quat": [[747, "mne-transforms-rot-to-quat"]], "mne.use_coil_def": [[748, "mne-use-coil-def"]], "Examples using mne.use_coil_def": [[748, "examples-using-mne-use-coil-def"]], "mne.use_log_level": [[749, "mne-use-log-level"]], "Examples using mne.use_log_level": [[749, "examples-using-mne-use-log-level"]], "mne.utils.deprecated": [[750, "mne-utils-deprecated"]], "mne.utils.warn": [[751, "mne-utils-warn"]], "mne.verbose": [[752, "mne-verbose"]], "mne.vertex_to_mni": [[753, "mne-vertex-to-mni"]], "Examples using mne.vertex_to_mni": [[753, "examples-using-mne-vertex-to-mni"]], "mne.viz.Brain": [[754, "mne-viz-brain"]], "Examples using mne.viz.Brain": [[754, "examples-using-mne-viz-brain"]], "mne.viz.ClickableImage": [[755, "mne-viz-clickableimage"]], "Examples using mne.viz.ClickableImage": [[755, "examples-using-mne-viz-clickableimage"]], "mne.viz.Figure3D": [[756, "mne-viz-figure3d"]], "mne.viz.add_background_image": [[757, "mne-viz-add-background-image"]], "mne.viz.centers_to_edges": [[758, "mne-viz-centers-to-edges"]], "Examples using mne.viz.centers_to_edges": [[758, "examples-using-mne-viz-centers-to-edges"]], "mne.viz.circular_layout": [[759, "mne-viz-circular-layout"]], "Examples using mne.viz.circular_layout": [[759, "examples-using-mne-viz-circular-layout"]], "mne.viz.close_3d_figure": [[760, "mne-viz-close-3d-figure"]], "mne.viz.close_all_3d_figures": [[761, "mne-viz-close-all-3d-figures"]], "mne.viz.compare_fiff": [[762, "mne-viz-compare-fiff"]], "mne.viz.create_3d_figure": [[763, "mne-viz-create-3d-figure"]], "Examples using mne.viz.create_3d_figure": [[763, "examples-using-mne-viz-create-3d-figure"]], "mne.viz.get_3d_backend": [[764, "mne-viz-get-3d-backend"]], "mne.viz.get_brain_class": [[765, "mne-viz-get-brain-class"]], "Examples using mne.viz.get_brain_class": [[765, "examples-using-mne-viz-get-brain-class"]], "mne.viz.get_browser_backend": [[766, "mne-viz-get-browser-backend"]], "mne.viz.iter_topography": [[767, "mne-viz-iter-topography"]], "Examples using mne.viz.iter_topography": [[767, "examples-using-mne-viz-iter-topography"]], "mne.viz.link_brains": [[768, "mne-viz-link-brains"]], "mne.viz.mne_analyze_colormap": [[769, "mne-viz-mne-analyze-colormap"]], "mne.viz.plot_alignment": [[770, "mne-viz-plot-alignment"]], "Examples using mne.viz.plot_alignment": [[770, "examples-using-mne-viz-plot-alignment"]], "mne.viz.plot_arrowmap": [[771, "mne-viz-plot-arrowmap"]], "Examples using mne.viz.plot_arrowmap": [[771, "examples-using-mne-viz-plot-arrowmap"]], "mne.viz.plot_bem": [[772, "mne-viz-plot-bem"]], "Examples using mne.viz.plot_bem": [[772, "examples-using-mne-viz-plot-bem"]], "mne.viz.plot_brain_colorbar": [[773, "mne-viz-plot-brain-colorbar"]], "Examples using mne.viz.plot_brain_colorbar": [[773, "examples-using-mne-viz-plot-brain-colorbar"]], "mne.viz.plot_bridged_electrodes": [[774, "mne-viz-plot-bridged-electrodes"]], "Examples using mne.viz.plot_bridged_electrodes": [[774, "examples-using-mne-viz-plot-bridged-electrodes"]], "mne.viz.plot_ch_adjacency": [[775, "mne-viz-plot-ch-adjacency"]], "Examples using mne.viz.plot_ch_adjacency": [[775, "examples-using-mne-viz-plot-ch-adjacency"]], "mne.viz.plot_channel_labels_circle": [[776, "mne-viz-plot-channel-labels-circle"]], "Examples using mne.viz.plot_channel_labels_circle": [[776, "examples-using-mne-viz-plot-channel-labels-circle"]], "mne.viz.plot_chpi_snr": [[777, "mne-viz-plot-chpi-snr"]], "Examples using mne.viz.plot_chpi_snr": [[777, "examples-using-mne-viz-plot-chpi-snr"]], "mne.viz.plot_compare_evokeds": [[778, "mne-viz-plot-compare-evokeds"]], "Examples using mne.viz.plot_compare_evokeds": [[778, "examples-using-mne-viz-plot-compare-evokeds"]], "mne.viz.plot_cov": [[779, "mne-viz-plot-cov"]], "Examples using mne.viz.plot_cov": [[779, "examples-using-mne-viz-plot-cov"]], "mne.viz.plot_csd": [[780, "mne-viz-plot-csd"]], "mne.viz.plot_dipole_amplitudes": [[781, "mne-viz-plot-dipole-amplitudes"]], "Examples using mne.viz.plot_dipole_amplitudes": [[781, "examples-using-mne-viz-plot-dipole-amplitudes"]], "mne.viz.plot_dipole_locations": [[782, "mne-viz-plot-dipole-locations"]], "Examples using mne.viz.plot_dipole_locations": [[782, "examples-using-mne-viz-plot-dipole-locations"]], "mne.viz.plot_drop_log": [[783, "mne-viz-plot-drop-log"]], "mne.viz.plot_epochs": [[784, "mne-viz-plot-epochs"]], "mne.viz.plot_epochs_image": [[785, "mne-viz-plot-epochs-image"]], "Examples using mne.viz.plot_epochs_image": [[785, "examples-using-mne-viz-plot-epochs-image"]], "mne.viz.plot_epochs_psd_topomap": [[786, "mne-viz-plot-epochs-psd-topomap"]], "mne.viz.plot_events": [[787, "mne-viz-plot-events"]], "Examples using mne.viz.plot_events": [[787, "examples-using-mne-viz-plot-events"]], "mne.viz.plot_evoked": [[788, "mne-viz-plot-evoked"]], "mne.viz.plot_evoked_field": [[789, "mne-viz-plot-evoked-field"]], "mne.viz.plot_evoked_image": [[790, "mne-viz-plot-evoked-image"]], "Examples using mne.viz.plot_evoked_image": [[790, "examples-using-mne-viz-plot-evoked-image"]], "mne.viz.plot_evoked_joint": [[791, "mne-viz-plot-evoked-joint"]], "mne.viz.plot_evoked_topo": [[792, "mne-viz-plot-evoked-topo"]], "Examples using mne.viz.plot_evoked_topo": [[792, "examples-using-mne-viz-plot-evoked-topo"]], "mne.viz.plot_evoked_topomap": [[793, "mne-viz-plot-evoked-topomap"]], "mne.viz.plot_evoked_white": [[794, "mne-viz-plot-evoked-white"]], "Examples using mne.viz.plot_evoked_white": [[794, "examples-using-mne-viz-plot-evoked-white"]], "mne.viz.plot_filter": [[795, "mne-viz-plot-filter"]], "Examples using mne.viz.plot_filter": [[795, "examples-using-mne-viz-plot-filter"]], "mne.viz.plot_head_positions": [[796, "mne-viz-plot-head-positions"]], "Examples using mne.viz.plot_head_positions": [[796, "examples-using-mne-viz-plot-head-positions"]], "mne.viz.plot_ica_components": [[797, "mne-viz-plot-ica-components"]], "mne.viz.plot_ica_overlay": [[798, "mne-viz-plot-ica-overlay"]], "mne.viz.plot_ica_properties": [[799, "mne-viz-plot-ica-properties"]], "mne.viz.plot_ica_scores": [[800, "mne-viz-plot-ica-scores"]], "mne.viz.plot_ica_sources": [[801, "mne-viz-plot-ica-sources"]], "mne.viz.plot_ideal_filter": [[802, "mne-viz-plot-ideal-filter"]], "Examples using mne.viz.plot_ideal_filter": [[802, "examples-using-mne-viz-plot-ideal-filter"]], "mne.viz.plot_layout": [[803, "mne-viz-plot-layout"]], "mne.viz.plot_montage": [[804, "mne-viz-plot-montage"]], "mne.viz.plot_projs_joint": [[805, "mne-viz-plot-projs-joint"]], "Examples using mne.viz.plot_projs_joint": [[805, "examples-using-mne-viz-plot-projs-joint"]], "mne.viz.plot_projs_topomap": [[806, "mne-viz-plot-projs-topomap"]], "Examples using mne.viz.plot_projs_topomap": [[806, "examples-using-mne-viz-plot-projs-topomap"]], "mne.viz.plot_raw": [[807, "mne-viz-plot-raw"]], "mne.viz.plot_raw_psd": [[808, "mne-viz-plot-raw-psd"]], "mne.viz.plot_regression_weights": [[809, "mne-viz-plot-regression-weights"]], "mne.viz.plot_sensors": [[810, "mne-viz-plot-sensors"]], "mne.viz.plot_snr_estimate": [[811, "mne-viz-plot-snr-estimate"]], "Examples using mne.viz.plot_snr_estimate": [[811, "examples-using-mne-viz-plot-snr-estimate"]], "mne.viz.plot_source_estimates": [[812, "mne-viz-plot-source-estimates"]], "Examples using mne.viz.plot_source_estimates": [[812, "examples-using-mne-viz-plot-source-estimates"]], "mne.viz.plot_sparse_source_estimates": [[813, "mne-viz-plot-sparse-source-estimates"]], "Examples using mne.viz.plot_sparse_source_estimates": [[813, "examples-using-mne-viz-plot-sparse-source-estimates"]], "mne.viz.plot_tfr_topomap": [[814, "mne-viz-plot-tfr-topomap"]], "mne.viz.plot_topo_image_epochs": [[815, "mne-viz-plot-topo-image-epochs"]], "mne.viz.plot_topomap": [[816, "mne-viz-plot-topomap"]], "Examples using mne.viz.plot_topomap": [[816, "examples-using-mne-viz-plot-topomap"]], "mne.viz.plot_vector_source_estimates": [[817, "mne-viz-plot-vector-source-estimates"]], "Examples using mne.viz.plot_vector_source_estimates": [[817, "examples-using-mne-viz-plot-vector-source-estimates"]], "mne.viz.plot_volume_source_estimates": [[818, "mne-viz-plot-volume-source-estimates"]], "mne.viz.set_3d_backend": [[819, "mne-viz-set-3d-backend"]], "Examples using mne.viz.set_3d_backend": [[819, "examples-using-mne-viz-set-3d-backend"]], "mne.viz.set_3d_options": [[820, "mne-viz-set-3d-options"]], "mne.viz.set_3d_title": [[821, "mne-viz-set-3d-title"]], "Examples using mne.viz.set_3d_title": [[821, "examples-using-mne-viz-set-3d-title"]], "mne.viz.set_3d_view": [[822, "mne-viz-set-3d-view"]], "Examples using mne.viz.set_3d_view": [[822, "examples-using-mne-viz-set-3d-view"]], "mne.viz.set_browser_backend": [[823, "mne-viz-set-browser-backend"]], "mne.viz.snapshot_brain_montage": [[824, "mne-viz-snapshot-brain-montage"]], "Examples using mne.viz.snapshot_brain_montage": [[824, "examples-using-mne-viz-snapshot-brain-montage"]], "mne.viz.use_3d_backend": [[825, "mne-viz-use-3d-backend"]], "mne.viz.use_browser_backend": [[826, "mne-viz-use-browser-backend"]], "Examples using mne.viz.use_browser_backend": [[826, "examples-using-mne-viz-use-browser-backend"]], "mne.what": [[827, "mne-what"]], "mne.write_bem_solution": [[828, "mne-write-bem-solution"]], "mne.write_bem_surfaces": [[829, "mne-write-bem-surfaces"]], "mne.write_cov": [[830, "mne-write-cov"]], "mne.write_events": [[831, "mne-write-events"]], "mne.write_evokeds": [[832, "mne-write-evokeds"]], "mne.write_forward_solution": [[833, "mne-write-forward-solution"]], "mne.write_head_bem": [[834, "mne-write-head-bem"]], "Examples using mne.write_head_bem": [[834, "examples-using-mne-write-head-bem"]], "mne.write_label": [[835, "mne-write-label"]], "mne.write_labels_to_annot": [[836, "mne-write-labels-to-annot"]], "mne.write_proj": [[837, "mne-write-proj"]], "mne.write_source_spaces": [[838, "mne-write-source-spaces"]], "mne.write_surface": [[839, "mne-write-surface"]], "Examples using mne.write_surface": [[839, "examples-using-mne-write-surface"]], "mne.write_trans": [[840, "mne-write-trans"]], "Glossary": [[841, "glossary"]], "MNE-Python Homepage": [[842, "mne-python-homepage"]], "Advanced setup": [[843, "advanced-setup"]], "Working with Jupyter Notebooks and JupyterLab": [[843, "working-with-jupyter-notebooks-and-jupyterlab"]], "<i class=\"fa-brands fa-windows\"></i> Windows": [[843, null]], "Installing to a headless Linux server": [[843, "installing-to-a-headless-linux-server"]], "Using the development version": [[843, "using-the-development-version"]], "Other Python distributions": [[843, "other-python-distributions"]], "GPU acceleration with CUDA": [[843, "gpu-acceleration-with-cuda"]], "Off-screen rendering with MESA": [[843, "off-screen-rendering-with-mesa"]], "Troubleshooting 3D plots": [[843, "troubleshooting-3d-plots"]], "3D plotting trouble after upgrade on macOS": [[843, "d-plotting-trouble-after-upgrade-on-macos"]], "Testing your installation": [[844, "testing-your-installation"]], "Contributing guide": [[845, "contributing-guide"]], "Overview of contribution process": [[845, "overview-of-contribution-process"]], "Setting up your local development environment": [[845, "setting-up-your-local-development-environment"]], "Configuring git": [[845, "configuring-git"]], "GNU Make": [[845, "gnu-make"]], "Forking the MNE-Python repository": [[845, "forking-the-mne-python-repository"]], "Creating the virtual environment": [[845, "creating-the-virtual-environment"]], "Basic git commands": [[845, "basic-git-commands"]], "Connecting to GitHub with SSH (optional)": [[845, "connecting-to-github-with-ssh-optional"]], "MNE-Python coding conventions": [[845, "mne-python-coding-conventions"]], "General requirements": [[845, "general-requirements"]], "All new functionality must have test coverage": [[845, "all-new-functionality-must-have-test-coverage"]], "All new functionality must be documented": [[845, "all-new-functionality-must-be-documented"]], "Avoid API changes when possible": [[845, "avoid-api-changes-when-possible"]], "Deprecate with a decorator or a warning": [[845, "deprecate-with-a-decorator-or-a-warning"]], "Describe your changes in the changelog": [[845, "describe-your-changes-in-the-changelog"]], "First-time contributors": [[845, "first-time-contributors"]], "Recurring contributors": [[845, "recurring-contributors"]], "Test locally before opening pull requests (PRs)": [[845, "test-locally-before-opening-pull-requests-prs"]], "Make tests fast and thorough": [[845, "make-tests-fast-and-thorough"]], "Code style": [[845, "code-style"]], "Adhere to standard Python style guidelines": [[845, "adhere-to-standard-python-style-guidelines"]], "Use consistent variable naming": [[845, "use-consistent-variable-naming"]], "We (mostly) follow NumPy style for docstrings": [[845, "we-mostly-follow-numpy-style-for-docstrings"]], "Cross-reference everywhere": [[845, "cross-reference-everywhere"]], "Other style guidance": [[845, "other-style-guidance"]], "Code organization": [[845, "code-organization"]], "Importing": [[845, "importing"]], "Return types": [[845, "return-types"]], "Running the test suite": [[845, "running-the-test-suite"]], "Building the documentation": [[845, "building-the-documentation"]], "Modifying command-line tools": [[845, "modifying-command-line-tools"]], "GitHub workflow": [[845, "github-workflow"]], "Installing FreeSurfer": [[846, "installing-freesurfer"]], "Installing MNE-Python": [[847, "installing-mne-python"]], "MNE-Python installers": [[848, "mne-python-installers"]], "VS Code Setup": [[848, "vs-code-setup"]], "Install via pip or conda": [[849, "install-via-pip-or-conda"]], "Installing MNE-Python with all dependencies": [[849, "installing-mne-python-with-all-dependencies"]], "Installing a minimal MNE-Python with core functionality only": [[849, "installing-a-minimal-mne-python-with-core-functionality-only"]], "Installing a minimal MNE-Python with EEGLAB I/O support": [[849, "installing-a-minimal-mne-python-with-eeglab-i-o-support"]], "Installing MNE-Python for other scenarios": [[849, "installing-mne-python-for-other-scenarios"]], "Python IDEs": [[849, "python-ides"]], "Installing Python": [[850, "installing-python"]], "Installing MNE-C": [[851, "installing-mne-c"]], "System requirements": [[851, "system-requirements"]], "<i class=\"fa-brands fa-apple\"></i> macOS": [[851, null]], "Downloading and Installing MNE-C": [[851, "downloading-and-installing-mne-c"]], "Configuring MNE-C": [[851, "configuring-mne-c"]], "Testing MNE-C installation": [[851, "testing-mne-c-installation"]], "Troubleshooting MNE-C installation": [[851, "troubleshooting-mne-c-installation"]], "Overview of the MNE tools suite": [[852, "overview-of-the-mne-tools-suite"]], "Related software": [[852, "related-software"]], "What should I install?": [[852, "what-should-i-install"]], "Getting help": [[852, "getting-help"], [866, "getting-help"]], "Updating MNE-Python": [[853, "updating-mne-python"]], "Upgrading MNE-Python only": [[853, "upgrading-mne-python-only"]], "Upgrading all packages": [[853, "upgrading-all-packages"]], "Upgrading to the development version": [[853, "upgrading-to-the-development-version"]], "Inverse Solutions": [[854, "inverse-solutions"]], "Logging and Configuration": [[855, "logging-and-configuration"]], "Martinos Center setup": [[856, "martinos-center-setup"]], "MNE with CPP": [[857, "mne-with-cpp"]], "Most-used classes": [[858, "most-used-classes"]], "MRI Processing": [[859, "mri-processing"]], "How to cite MNE-Python": [[860, "how-to-cite-mne-python"]], "Citing the software": [[860, "citing-the-software"]], "Citing the inverse imaging algorithms": [[860, "citing-the-inverse-imaging-algorithms"]], "Citing other algorithms": [[860, "citing-other-algorithms"]], "The typical M/EEG workflow": [[861, "the-typical-m-eeg-workflow"]], "Overview": [[861, "overview"], [871, "overview"]], "Artifact suppression": [[861, "artifact-suppression"]], "SSP": [[861, "ssp"]], "ICA": [[861, "ica"]], "Epoching and evoked data": [[861, "epoching-and-evoked-data"]], "Rejection using annotations": [[861, "rejection-using-annotations"]], "Source localization": [[861, "source-localization"]], "Anatomical information": [[861, "anatomical-information"]], "Cortical surface reconstruction with FreeSurfer": [[861, "cortical-surface-reconstruction-with-freesurfer"]], "Setting up the source space": [[861, "setting-up-the-source-space"]], "Recommended subdivisions of an icosahedron and an octahedron for\n       the creation of source spaces. The approximate source spacing and\n       corresponding surface area have been calculated assuming a\n       1000-cm2 surface area per hemisphere.": [[861, "id9"]], "Creating the BEM model meshes": [[861, "creating-the-bem-model-meshes"]], "Setting up the head surface triangulation files": [[861, "setting-up-the-head-surface-triangulation-files"]], "Setting up the boundary-element model": [[861, "setting-up-the-boundary-element-model"]], "Aligning coordinate frames": [[861, "aligning-coordinate-frames"]], "Computing the forward solution": [[861, "computing-the-forward-solution"], [868, "computing-the-forward-solution"]], "Computing the noise-covariance matrix": [[861, "computing-the-noise-covariance-matrix"]], "Calculating the inverse operator": [[861, "calculating-the-inverse-operator"]], "Creating source estimates": [[861, "creating-source-estimates"]], "Group analyses": [[861, "group-analyses"]], "Datasets Overview": [[862, "datasets-overview"]], "Sample": [[862, "sample"]], "Trigger codes for the sample data set.": [[862, "id20"]], "Contents of the data set": [[862, "contents-of-the-data-set"]], "Contents of the MEG/sample directory.": [[862, "id21"]], "Overview of the contents of the subjects/sample directory.": [[862, "id22"]], "UCL OPM Auditory": [[862, "ucl-opm-auditory"]], "Brainstorm": [[862, "brainstorm"]], "Auditory": [[862, "auditory"]], "Resting state": [[862, "resting-state"]], "Median nerve": [[862, "median-nerve"]], "SPM faces": [[862, "spm-faces"]], "EEGBCI motor imagery": [[862, "eegbci-motor-imagery"]], "Somatosensory": [[862, "somatosensory"]], "Multimodal": [[862, "multimodal"]], "fNIRS motor": [[862, "fnirs-motor"]], "High frequency SEF": [[862, "high-frequency-sef"]], "Visual 92 object categories": [[862, "visual-92-object-categories"]], "mTRF Dataset": [[862, "mtrf-dataset"]], "Kiloword dataset": [[862, "kiloword-dataset"]], "4D Neuroimaging / BTi dataset": [[862, "d-neuroimaging-bti-dataset"]], "OPM": [[862, "opm"]], "The Sleep PolySomnoGraphic Database": [[862, "the-sleep-polysomnographic-database"]], "Reference channel noise MEG data set": [[862, "reference-channel-noise-meg-data-set"]], "Miscellaneous Datasets": [[862, "miscellaneous-datasets"]], "fsaverage": [[862, "fsaverage"]], "Infant template MRIs": [[862, "infant-template-mris"]], "ECoG Dataset": [[862, "ecog-dataset"]], "sEEG Dataset": [[862, "seeg-dataset"]], "LIMO Dataset": [[862, "limo-dataset"]], "ERP CORE Dataset": [[862, "erp-core-dataset"]], "SSVEP": [[862, "ssvep"]], "EYELINK": [[862, "eyelink"]], "Interactive versus scripted analysis": [[863, "interactive-versus-scripted-analysis"]], "Integration with the scientific python stack": [[863, "integration-with-the-scientific-python-stack"]], "Submodule-based organization": [[863, "submodule-based-organization"]], "(Mostly) unified API": [[863, "mostly-unified-api"]], "In-place operation": [[863, "in-place-operation"]], "MNE-Python Development": [[864, "mne-python-development"]], "Frequently Asked Questions (FAQ)": [[865, "frequently-asked-questions-faq"]], "General MNE-Python issues": [[865, "general-mne-python-issues"]], "Help! I can\u2019t get Python and MNE-Python working!": [[865, "help-i-can-t-get-python-and-mne-python-working"]], "I still can\u2019t get it to work!": [[865, "i-still-can-t-get-it-to-work"]], "I can\u2019t get PyVista/3D plotting to work under Windows": [[865, "i-can-t-get-pyvista-3d-plotting-to-work-under-windows"]], "Python runs on macOS extremely slow even on simple commands!": [[865, "python-runs-on-macos-extremely-slow-even-on-simple-commands"]], "How do I cite MNE?": [[865, "how-do-i-cite-mne"]], "I\u2019m not sure how to do X analysis step with my Y data\u2026": [[865, "i-m-not-sure-how-to-do-x-analysis-step-with-my-y-data"]], "I think I found a bug, what do I do?": [[865, "i-think-i-found-a-bug-what-do-i-do"]], "Why is it dangerous to \u201cpickle\u201d my MNE-Python objects and data for later use?": [[865, "why-is-it-dangerous-to-pickle-my-mne-python-objects-and-data-for-later-use"]], "I downloaded a dataset once, but MNE-Python is asking to download it again. Why?": [[865, "i-downloaded-a-dataset-once-but-mne-python-is-asking-to-download-it-again-why"]], "A function uses multiple CPU cores even though I didn\u2019t tell it to. Why?": [[865, "a-function-uses-multiple-cpu-cores-even-though-i-didn-t-tell-it-to-why"]], "I have a mystery FIF file, how do I read it?": [[865, "i-have-a-mystery-fif-file-how-do-i-read-it"]], "Resampling and decimating data": [[865, "resampling-and-decimating-data"]], "What are all these options for resampling, decimating, and binning data?": [[865, "what-are-all-these-options-for-resampling-decimating-and-binning-data"]], "Resampling raw data is taking forever! What do I do?": [[865, "resampling-raw-data-is-taking-forever-what-do-i-do"]], "Forward and Inverse Solution": [[865, "forward-and-inverse-solution"]], "My watershed BEM meshes look incorrect": [[865, "my-watershed-bem-meshes-look-incorrect"]], "Project Governance": [[867, "project-governance"]], "The Project": [[867, "the-project"]], "Governance model": [[867, "governance-model"]], "BDFL": [[867, "bdfl"]], "Steering Council": [[867, "steering-council"], [873, "steering-council"]], "Council membership": [[867, "council-membership"]], "Conflict of interest": [[867, "conflict-of-interest"]], "Private communications of the Council": [[867, "private-communications-of-the-council"]], "Council decision making": [[867, "council-decision-making"]], "Institutional Partners and funding": [[867, "institutional-partners-and-funding"]], "Document history": [[867, "document-history"], [873, "document-history"]], "Acknowledgements": [[867, "acknowledgements"]], "License": [[867, "license"]], "Algorithms and other implementation details": [[868, "algorithms-and-other-implementation-details"]], "Internal representation (units)": [[868, "internal-representation-units"]], "Floating-point precision": [[868, "floating-point-precision"]], "Supported channel types": [[868, "supported-channel-types"]], "Supported data formats": [[868, "supported-data-formats"]], "Supported formats for digitized 3D locations": [[868, "supported-formats-for-digitized-3d-locations"]], "Memory-efficient I/O": [[868, "memory-efficient-i-o"]], "Preloading continuous (raw) data": [[868, "preloading-continuous-raw-data"]], "Preloading epoched data": [[868, "preloading-epoched-data"]], "Loading data explicitly": [[868, "loading-data-explicitly"]], "Accessing data as NumPy arrays": [[868, "accessing-data-as-numpy-arrays"]], "Bad channel repair via interpolation": [[868, "bad-channel-repair-via-interpolation"]], "Maxwell filtering": [[868, "maxwell-filtering"]], "Signal-Space Projection (SSP)": [[868, "signal-space-projection-ssp"]], "General concepts": [[868, "general-concepts"]], "Estimation of the noise subspace": [[868, "estimation-of-the-noise-subspace"]], "EEG average electrode reference": [[868, "eeg-average-electrode-reference"]], "The Boundary Element Model (BEM)": [[868, "the-boundary-element-model-bem"]], "Using the watershed algorithm": [[868, "using-the-watershed-algorithm"]], "Using FLASH images": [[868, "using-flash-images"]], "Organizing MRI data into directories": [[868, "organizing-mri-data-into-directories"]], "Creating the surface tessellations": [[868, "creating-the-surface-tessellations"]], "Inspecting the meshes": [[868, "inspecting-the-meshes"]], "The forward solution": [[868, "the-forward-solution"]], "MEG/EEG and MRI coordinate systems": [[868, "meg-eeg-and-mri-coordinate-systems"]], "Coordinate transformations in FreeSurfer and MNE software packages.": [[868, "id18"]], "The head and device coordinate systems": [[868, "the-head-and-device-coordinate-systems"]], "Creating a surface-based source space": [[868, "creating-a-surface-based-source-space"]], "Creating a volumetric or discrete source space": [[868, "creating-a-volumetric-or-discrete-source-space"]], "Creating the BEM meshes": [[868, "creating-the-bem-meshes"]], "Topology checks": [[868, "topology-checks"]], "Computing the BEM geometry data": [[868, "computing-the-bem-geometry-data"]], "Coil geometry information": [[868, "coil-geometry-information"]], "The sensor coordinate system": [[868, "the-sensor-coordinate-system"]], "Calculation of the magnetic field": [[868, "calculation-of-the-magnetic-field"]], "Implemented coil geometries": [[868, "implemented-coil-geometries"]], "Normal coil descriptions.": [[868, "id20"]], "Accurate coil descriptions": [[868, "id21"]], "The coil definition file": [[868, "the-coil-definition-file"]], "Coil representation accuracies.": [[868, "id22"]], "Purpose": [[868, "purpose"]], "Implementation of software gradient compensation": [[868, "implementation-of-software-gradient-compensation"]], "The EEG sphere model definition file": [[868, "the-eeg-sphere-model-definition-file"]], "Structure of the default EEG model": [[868, "id23"]], "EEG forward solution in the sphere model": [[868, "eeg-forward-solution-in-the-sphere-model"]], "Averaging forward solutions": [[868, "averaging-forward-solutions"]], "The minimum-norm current estimates": [[868, "the-minimum-norm-current-estimates"]], "The linear inverse operator": [[868, "the-linear-inverse-operator"]], "Regularization": [[868, "regularization"]], "Whitening and scaling": [[868, "whitening-and-scaling"]], "Regularization of the noise-covariance matrix": [[868, "regularization-of-the-noise-covariance-matrix"]], "Computation of the solution": [[868, "computation-of-the-solution"]], "Noise normalization": [[868, "noise-normalization"]], "sLORETA": [[868, "sloreta"]], "eLORETA": [[868, "eloreta"]], "Predicted data": [[868, "predicted-data"]], "Cortical patch statistics": [[868, "cortical-patch-statistics"]], "Orientation constraints": [[868, "orientation-constraints"]], "Depth weighting": [[868, "depth-weighting"]], "Effective number of averages": [[868, "effective-number-of-averages"]], "Morphing and averaging source estimates": [[868, "morphing-and-averaging-source-estimates"]], "Why morphing?": [[868, "why-morphing"]], "The morphing maps": [[868, "the-morphing-maps"]], "About smoothing": [[868, "about-smoothing"]], "Documentation overview": [[869, "documentation-overview"]], "Getting started with Python": [[870, "getting-started-with-python"]], "MNE-MATLAB documentation": [[871, "mne-matlab-documentation"]], "High-level reading routines.": [[871, "id2"]], "Channel selection utilities.": [[871, "id3"]], "Coordinate transformation utilities.": [[871, "id4"]], "Basic reading routines.": [[871, "id5"]], "Writing routines.": [[871, "id6"]], "High-level data writing routines.": [[871, "id7"]], "Coil definition utilities.": [[871, "id8"]], "Routines for software gradient compensation and signal-space projection.": [[871, "id9"]], "High-level routines for reading MNE data files.": [[871, "id10"]], "High-level routines for writing MNE data files.": [[871, "id11"]], "Routines related to stc, w, and label files.": [[871, "id12"]], "Routines for reading FreeSurfer surfaces.": [[871, "id13"]], "Utility functions.": [[871, "id14"]], "Examples demonstrating the use of the toolbox.": [[871, "id15"]], "Some data structures": [[871, "some-data-structures"]], "FIFF constants.": [[871, "id16"]], "The tag structure.": [[871, "id17"]], "The taginfo structure.": [[871, "id18"]], "The directory structure.": [[871, "id19"]], "The id structure.": [[871, "id20"]], "The named matrix structure.": [[871, "id21"]], "The trans structure.": [[871, "id22"]], "The dig structure.": [[871, "id23"]], "The coildef structure. For more detailed information, see Coil geometry information.": [[871, "id24"]], "The ch structure.": [[871, "id25"]], "The proj structure.": [[871, "id26"]], "The comp structure.": [[871, "id27"]], "The meas info structure.": [[871, "id28"]], "The surf structure.": [[871, "id29"]], "The cov structure.": [[871, "id30"]], "The fwd structure.": [[871, "id31"]], "The inv structure. Note: The fields proj, whitener, reginv, and noisenorm are filled in by the routine mne_prepare_inverse_operator.": [[871, "id32"]], "On-line documentation for individual routines": [[871, "on-line-documentation-for-individual-routines"]], "Migrating from other analysis software": [[872, "migrating-from-other-analysis-software"]], "EEGLAB": [[872, "eeglab"]], "Potential pitfalls": [[872, "potential-pitfalls"]], "Current steering council and institutional partners": [[873, "current-steering-council-and-institutional-partners"]], "Benevolent Dictator for Life": [[873, "benevolent-dictator-for-life"]], "Community Participation Guidelines Response Leads": [[873, "community-participation-guidelines-response-leads"]], "Institutional Partners": [[873, "institutional-partners"]], "Roadmap": [[874, "roadmap"]], "Page contents": [[874, "page-contents"]], "Open": [[874, "open"]], "Time-frequency visualization": [[874, "time-frequency-visualization"]], "Clustering statistics API": [[874, "clustering-statistics-api"]], "Access to open EEG/MEG databases": [[874, "access-to-open-eeg-meg-databases"]], "Integrate OpenMEEG via improved Python bindings": [[874, "integrate-openmeeg-via-improved-python-bindings"]], "In progress": [[874, "in-progress"]], "Diversity, Equity, and Inclusion (DEI)": [[874, "diversity-equity-and-inclusion-dei"]], "First-class OPM support": [[874, "first-class-opm-support"]], "Deep source modeling": [[874, "deep-source-modeling"]], "Better sEEG/ECoG/DBS support": [[874, "better-seeg-ecog-dbs-support"]], "Time-frequency classes": [[874, "time-frequency-classes"]], "Pediatric and clinical MEG pipelines": [[874, "pediatric-and-clinical-meg-pipelines"]], "Statistics efficiency": [[874, "statistics-efficiency"]], "3D visualization": [[874, "d-visualization"]], "Documentation updates": [[874, "documentation-updates"]], "Completed": [[874, "completed"]], "Distributed computing support": [[874, "distributed-computing-support"]], "2D visualization": [[874, "id3"]], "Tutorial / example overhaul": [[874, "tutorial-example-overhaul"]], "Cluster computing images": [[874, "cluster-computing-images"]], "Python API Reference": [[876, "python-api-reference"]], "Reading raw data": [[877, "reading-raw-data"]], "Realtime": [[878, "realtime"]], "MNE-Report": [[879, "mne-report"]], "Sensor Space Data": [[880, "sensor-space-data"]], "Source Space Data": [[882, "source-space-data"]], "Statistics": [[883, "statistics"]], "Time-Frequency": [[884, "time-frequency"]], "What\u2019s new": [[886, "what-s-new"]], "Current (1.4.dev0)": [[886, "current-1-4-dev0"]], "Enhancements": [[886, "enhancements"], [886, "id3"], [886, "id6"], [886, "id10"], [886, "id13"], [886, "id17"], [886, "id21"], [886, "id25"], [886, "id29"]], "Bugs": [[886, "bugs"], [886, "id2"], [886, "id4"], [886, "id7"], [886, "id11"], [886, "id14"], [886, "id18"], [886, "id22"], [886, "id26"], [886, "id30"]], "API changes": [[886, "api-changes"], [886, "id5"], [886, "id8"], [886, "id15"], [886, "id19"], [886, "id23"], [886, "id27"], [886, "id31"]], "Version 1.3.1 (2023-02-23)": [[886, "version-1-3-1-2023-02-23"]], "Version 1.3.0 (2022-12-21)": [[886, "version-1-3-0-2022-12-21"]], "Authors": [[886, "authors"], [886, "id9"], [886, "id12"], [886, "id16"], [886, "id20"], [886, "id24"], [886, "id28"], [886, "id32"], [886, "id33"], [886, "id43"], [886, "id47"], [886, "id51"], [886, "id55"], [886, "id59"], [886, "id63"], [886, "id67"], [886, "id71"], [886, "id75"], [886, "id79"], [886, "id82"], [886, "id85"], [886, "id88"], [886, "id90"], [886, "id92"], [886, "id94"], [886, "id95"]], "Version 1.2.0 (2022-10-11)": [[886, "version-1-2-0-2022-10-11"]], "Version 1.1.0 (2022-08-03)": [[886, "version-1-1-0-2022-08-03"]], "API and behavior changes": [[886, "api-and-behavior-changes"]], "Version 1.0.0 (2022-03-21)": [[886, "version-1-0-0-2022-03-21"]], "Dependencies": [[886, "dependencies"]], "Version 0.24.0 (2021-11-03)": [[886, "version-0-24-0-2021-11-03"]], "Version 0.23.0 (2021-04-27)": [[886, "version-0-23-0-2021-04-27"]], "Version 0.22.0 (2020-12-17)": [[886, "version-0-22-0-2020-12-17"]], "Version 0.21 (2020-09-21)": [[886, "version-0-21-2020-09-21"]], "Version 0.20 (2020-03-27)": [[886, "version-0-20-2020-03-27"]], "Changelog": [[886, "changelog"], [886, "id34"], [886, "id37"], [886, "id40"], [886, "id44"], [886, "id48"], [886, "id52"], [886, "id56"], [886, "id60"], [886, "id64"], [886, "id68"], [886, "id72"], [886, "id76"], [886, "id80"], [886, "id83"], [886, "id86"], [886, "id89"], [886, "id91"], [886, "id93"]], "Bug": [[886, "bug"], [886, "id35"], [886, "id38"], [886, "id41"], [886, "id45"]], "API": [[886, "api"], [886, "id36"], [886, "id39"], [886, "id42"], [886, "id46"], [886, "id50"], [886, "id54"], [886, "id58"], [886, "id62"], [886, "id66"], [886, "id70"], [886, "id74"], [886, "id78"], [886, "id81"], [886, "id84"], [886, "id87"]], "Version 0.19 (2019-09-24)": [[886, "version-0-19-2019-09-24"]], "Version 0.18 (2019-05-19)": [[886, "version-0-18-2019-05-19"]], "Version 0.17 (2018-11-19)": [[886, "version-0-17-2018-11-19"]], "Version 0.16 (2018-05-01)": [[886, "version-0-16-2018-05-01"]], "Version 0.15 (2017-10-20)": [[886, "version-0-15-2017-10-20"]], "BUG": [[886, "id49"], [886, "id53"], [886, "id57"], [886, "id61"], [886, "id65"], [886, "id69"], [886, "id73"], [886, "id77"]], "Version 0.14 (2017-03-24)": [[886, "version-0-14-2017-03-24"]], "Version 0.13 (2016-09-27)": [[886, "version-0-13-2016-09-27"]], "Version 0.12 (2016-05-10)": [[886, "version-0-12-2016-05-10"]], "Version 0.11 (2015-12-24)": [[886, "version-0-11-2015-12-24"]], "Version 0.10 (2015-10-26)": [[886, "version-0-10-2015-10-26"]], "Version 0.9 (2015-05-22)": [[886, "version-0-9-2015-05-22"]], "Version 0.8 (2014-06-25)": [[886, "version-0-8-2014-06-25"]], "Version 0.7 (2013-11-26)": [[886, "version-0-7-2013-11-26"]], "Version 0.6 (2013-06-15)": [[886, "version-0-6-2013-06-15"]], "Version 0.5 (2012-12-27)": [[886, "version-0-5-2012-12-27"]], "Version 0.4 (2012-08-24)": [[886, "version-0-4-2012-08-24"]], "Version 0.3 (2012-03-23)": [[886, "version-0-3-2012-03-23"]], "Version 0.2 (2011-11-08)": [[886, "version-0-2-2011-11-08"]], "API changes summary": [[886, "api-changes-summary"]], "Version 0.1 (2011-09-23)": [[886, "version-0-1-2011-09-23"]]}, "indexentries": {"mne.datasets": [[251, "module-mne.datasets"]], "module": [[251, "module-mne.datasets"], [252, "module-mne.decoding"], [253, "module-mne.epochs"], [253, "module-mne.event"], [254, "module-mne.export"], [256, "module-mne.bem"], [854, "module-mne.beamformer"], [854, "module-mne.dipole"], [854, "module-mne.inverse_sparse"], [854, "module-mne.minimum_norm"], [855, "module-mne.cuda"], [855, "module-mne.utils"], [875, "module-mne.channels"], [875, "module-mne.chpi"], [875, "module-mne.filter"], [875, "module-mne.preprocessing"], [875, "module-mne.preprocessing.eyetracking"], [875, "module-mne.preprocessing.ieeg"], [875, "module-mne.preprocessing.nirs"], [875, "module-mne.transforms"], [876, "module-mne"], [877, "module-mne.io"], [877, "module-mne.io.kit"], [880, "module-mne.baseline"], [881, "module-mne.simulation"], [881, "module-mne.simulation.metrics"], [883, "module-mne.stats"], [884, "module-mne.time_frequency"], [884, "module-mne.time_frequency.tfr"], [885, "module-mne.viz"]], "mne.decoding": [[252, "module-mne.decoding"]], "mne.epochs": [[253, "module-mne.epochs"]], "mne.event": [[253, "module-mne.event"]], "mne.export": [[254, "module-mne.export"]], "mne.bem": [[256, "module-mne.bem"]], "acqparserfif (class in mne)": [[259, "mne.AcqParserFIF"]], "__getitem__() (mne.acqparserfif method)": [[259, "mne.AcqParserFIF.__getitem__"]], "__len__() (mne.acqparserfif method)": [[259, "mne.AcqParserFIF.__len__"]], "categories (mne.acqparserfif property)": [[259, "mne.AcqParserFIF.categories"]], "events (mne.acqparserfif property)": [[259, "mne.AcqParserFIF.events"]], "get_condition() (mne.acqparserfif method)": [[259, "mne.AcqParserFIF.get_condition"]], "annotations (class in mne)": [[260, "mne.Annotations"]], "__add__() (mne.annotations method)": [[260, "mne.Annotations.__add__"]], "__getitem__() (mne.annotations method)": [[260, "mne.Annotations.__getitem__"]], "__iter__() (mne.annotations method)": [[260, "mne.Annotations.__iter__"]], "__len__() (mne.annotations method)": [[260, "mne.Annotations.__len__"]], "append() (mne.annotations method)": [[260, "mne.Annotations.append"]], "copy() (mne.annotations method)": [[260, "mne.Annotations.copy"]], "crop() (mne.annotations method)": [[260, "mne.Annotations.crop"]], "delete() (mne.annotations method)": [[260, "mne.Annotations.delete"]], "orig_time (mne.annotations property)": [[260, "mne.Annotations.orig_time"]], "rename() (mne.annotations method)": [[260, "mne.Annotations.rename"]], "save() (mne.annotations method)": [[260, "mne.Annotations.save"]], "set_durations() (mne.annotations method)": [[260, "mne.Annotations.set_durations"]], "to_data_frame() (mne.annotations method)": [[260, "mne.Annotations.to_data_frame"]], "baseepochs (class in mne)": [[261, "mne.BaseEpochs"]], "bihemilabel (class in mne)": [[262, "mne.BiHemiLabel"]], "__add__() (mne.bihemilabel method)": [[262, "mne.BiHemiLabel.__add__"]], "__len__() (mne.bihemilabel method)": [[262, "mne.BiHemiLabel.__len__"]], "__sub__() (mne.bihemilabel method)": [[262, "mne.BiHemiLabel.__sub__"]], "covariance (class in mne)": [[263, "mne.Covariance"]], "__add__() (mne.covariance method)": [[263, "mne.Covariance.__add__"]], "__contains__() (mne.covariance method)": [[263, "mne.Covariance.__contains__"]], "__getitem__() (mne.covariance method)": [[263, "mne.Covariance.__getitem__"]], "__iter__() (mne.covariance method)": [[263, "mne.Covariance.__iter__"]], "__len__() (mne.covariance method)": [[263, "mne.Covariance.__len__"]], "as_diag() (mne.covariance method)": [[263, "mne.Covariance.as_diag"]], "ch_names (mne.covariance property)": [[263, "mne.Covariance.ch_names"]], "clear() (mne.covariance method)": [[263, "mne.Covariance.clear"]], "copy() (mne.covariance method)": [[263, "mne.Covariance.copy"]], "data (mne.covariance property)": [[263, "mne.Covariance.data"]], "fromkeys() (mne.covariance method)": [[263, "mne.Covariance.fromkeys"]], "get() (mne.covariance method)": [[263, "mne.Covariance.get"]], "items() (mne.covariance method)": [[263, "mne.Covariance.items"]], "keys() (mne.covariance method)": [[263, "mne.Covariance.keys"]], "nfree (mne.covariance property)": [[263, "mne.Covariance.nfree"]], "pick_channels() (mne.covariance method)": [[263, "mne.Covariance.pick_channels"]], "plot() (mne.covariance method)": [[263, "mne.Covariance.plot"]], "plot_topomap() (mne.covariance method)": [[263, "mne.Covariance.plot_topomap"]], "pop() (mne.covariance method)": [[263, "mne.Covariance.pop"]], "popitem() (mne.covariance method)": [[263, "mne.Covariance.popitem"]], "save() (mne.covariance method)": [[263, "mne.Covariance.save"]], "setdefault() (mne.covariance method)": [[263, "mne.Covariance.setdefault"]], "update() (mne.covariance method)": [[263, "mne.Covariance.update"]], "values() (mne.covariance method)": [[263, "mne.Covariance.values"]], "dipole (class in mne)": [[264, "mne.Dipole"]], "__getitem__() (mne.dipole method)": [[264, "mne.Dipole.__getitem__"]], "__len__() (mne.dipole method)": [[264, "mne.Dipole.__len__"]], "copy() (mne.dipole method)": [[264, "mne.Dipole.copy"]], "crop() (mne.dipole method)": [[264, "mne.Dipole.crop"]], "decimate() (mne.dipole method)": [[264, "mne.Dipole.decimate"]], "plot_amplitudes() (mne.dipole method)": [[264, "mne.Dipole.plot_amplitudes"]], "plot_locations() (mne.dipole method)": [[264, "mne.Dipole.plot_locations"]], "save() (mne.dipole method)": [[264, "mne.Dipole.save"]], "shift_time() (mne.dipole method)": [[264, "mne.Dipole.shift_time"]], "time_as_index() (mne.dipole method)": [[264, "mne.Dipole.time_as_index"]], "times (mne.dipole property)": [[264, "mne.Dipole.times"]], "tmax (mne.dipole property)": [[264, "mne.Dipole.tmax"]], "tmin (mne.dipole property)": [[264, "mne.Dipole.tmin"]], "to_mni() (mne.dipole method)": [[264, "mne.Dipole.to_mni"]], "to_mri() (mne.dipole method)": [[264, "mne.Dipole.to_mri"]], "to_volume_labels() (mne.dipole method)": [[264, "mne.Dipole.to_volume_labels"]], "dipolefixed (class in mne)": [[265, "mne.DipoleFixed"]], "ch_names (mne.dipolefixed property)": [[265, "mne.DipoleFixed.ch_names"]], "copy() (mne.dipolefixed method)": [[265, "mne.DipoleFixed.copy"]], "crop() (mne.dipolefixed method)": [[265, "mne.DipoleFixed.crop"]], "decimate() (mne.dipolefixed method)": [[265, "mne.DipoleFixed.decimate"]], "plot() (mne.dipolefixed method)": [[265, "mne.DipoleFixed.plot"]], "save() (mne.dipolefixed method)": [[265, "mne.DipoleFixed.save"]], "shift_time() (mne.dipolefixed method)": [[265, "mne.DipoleFixed.shift_time"]], "time_as_index() (mne.dipolefixed method)": [[265, "mne.DipoleFixed.time_as_index"]], "times (mne.dipolefixed property)": [[265, "mne.DipoleFixed.times"]], "tmax (mne.dipolefixed property)": [[265, "mne.DipoleFixed.tmax"]], "tmin (mne.dipolefixed property)": [[265, "mne.DipoleFixed.tmin"]], "epochs (class in mne)": [[266, "mne.Epochs"]], "__contains__() (mne.epochs method)": [[266, "mne.Epochs.__contains__"]], "__getitem__() (mne.epochs method)": [[266, "mne.Epochs.__getitem__"]], "__iter__() (mne.epochs method)": [[266, "mne.Epochs.__iter__"]], "__len__() (mne.epochs method)": [[266, "mne.Epochs.__len__"]], "add_annotations_to_metadata() (mne.epochs method)": [[266, "mne.Epochs.add_annotations_to_metadata"]], "add_channels() (mne.epochs method)": [[266, "mne.Epochs.add_channels"]], "add_proj() (mne.epochs method)": [[266, "mne.Epochs.add_proj"]], "add_reference_channels() (mne.epochs method)": [[266, "mne.Epochs.add_reference_channels"]], "anonymize() (mne.epochs method)": [[266, "mne.Epochs.anonymize"]], "apply_baseline() (mne.epochs method)": [[266, "mne.Epochs.apply_baseline"]], "apply_function() (mne.epochs method)": [[266, "mne.Epochs.apply_function"]], "apply_hilbert() (mne.epochs method)": [[266, "mne.Epochs.apply_hilbert"]], "apply_proj() (mne.epochs method)": [[266, "mne.Epochs.apply_proj"]], "as_type() (mne.epochs method)": [[266, "mne.Epochs.as_type"]], "average() (mne.epochs method)": [[266, "mne.Epochs.average"]], "ch_names (mne.epochs property)": [[266, "mne.Epochs.ch_names"]], "compensation_grade (mne.epochs property)": [[266, "mne.Epochs.compensation_grade"]], "compute_psd() (mne.epochs method)": [[266, "mne.Epochs.compute_psd"]], "copy() (mne.epochs method)": [[266, "mne.Epochs.copy"]], "crop() (mne.epochs method)": [[266, "mne.Epochs.crop"]], "decimate() (mne.epochs method)": [[266, "mne.Epochs.decimate"]], "del_proj() (mne.epochs method)": [[266, "mne.Epochs.del_proj"]], "drop() (mne.epochs method)": [[266, "mne.Epochs.drop"]], "drop_bad() (mne.epochs method)": [[266, "mne.Epochs.drop_bad"]], "drop_channels() (mne.epochs method)": [[266, "mne.Epochs.drop_channels"]], "drop_log_stats() (mne.epochs method)": [[266, "mne.Epochs.drop_log_stats"]], "equalize_event_counts() (mne.epochs method)": [[266, "mne.Epochs.equalize_event_counts"]], "export() (mne.epochs method)": [[266, "mne.Epochs.export"]], "filename (mne.epochs property)": [[266, "mne.Epochs.filename"]], "filter() (mne.epochs method)": [[266, "mne.Epochs.filter"]], "get_annotations_per_epoch() (mne.epochs method)": [[266, "mne.Epochs.get_annotations_per_epoch"]], "get_channel_types() (mne.epochs method)": [[266, "mne.Epochs.get_channel_types"]], "get_data() (mne.epochs method)": [[266, "mne.Epochs.get_data"]], "get_montage() (mne.epochs method)": [[266, "mne.Epochs.get_montage"]], "interpolate_bads() (mne.epochs method)": [[266, "mne.Epochs.interpolate_bads"]], "iter_evoked() (mne.epochs method)": [[266, "mne.Epochs.iter_evoked"]], "load_data() (mne.epochs method)": [[266, "mne.Epochs.load_data"]], "metadata (mne.epochs property)": [[266, "mne.Epochs.metadata"]], "next() (mne.epochs method)": [[266, "mne.Epochs.next"]], "pick() (mne.epochs method)": [[266, "mne.Epochs.pick"]], "pick_channels() (mne.epochs method)": [[266, "mne.Epochs.pick_channels"]], "pick_types() (mne.epochs method)": [[266, "mne.Epochs.pick_types"]], "plot() (mne.epochs method)": [[266, "mne.Epochs.plot"]], "plot_drop_log() (mne.epochs method)": [[266, "mne.Epochs.plot_drop_log"]], "plot_image() (mne.epochs method)": [[266, "mne.Epochs.plot_image"]], "plot_projs_topomap() (mne.epochs method)": [[266, "mne.Epochs.plot_projs_topomap"]], "plot_psd() (mne.epochs method)": [[266, "mne.Epochs.plot_psd"]], "plot_psd_topo() (mne.epochs method)": [[266, "mne.Epochs.plot_psd_topo"]], "plot_psd_topomap() (mne.epochs method)": [[266, "mne.Epochs.plot_psd_topomap"]], "plot_sensors() (mne.epochs method)": [[266, "mne.Epochs.plot_sensors"]], "plot_topo_image() (mne.epochs method)": [[266, "mne.Epochs.plot_topo_image"]], "proj (mne.epochs property)": [[266, "mne.Epochs.proj"]], "rename_channels() (mne.epochs method)": [[266, "mne.Epochs.rename_channels"]], "reorder_channels() (mne.epochs method)": [[266, "mne.Epochs.reorder_channels"]], "resample() (mne.epochs method)": [[266, "mne.Epochs.resample"]], "reset_drop_log_selection() (mne.epochs method)": [[266, "mne.Epochs.reset_drop_log_selection"]], "save() (mne.epochs method)": [[266, "mne.Epochs.save"]], "savgol_filter() (mne.epochs method)": [[266, "mne.Epochs.savgol_filter"]], "set_annotations() (mne.epochs method)": [[266, "mne.Epochs.set_annotations"]], "set_channel_types() (mne.epochs method)": [[266, "mne.Epochs.set_channel_types"]], "set_eeg_reference() (mne.epochs method)": [[266, "mne.Epochs.set_eeg_reference"]], "set_meas_date() (mne.epochs method)": [[266, "mne.Epochs.set_meas_date"]], "set_montage() (mne.epochs method)": [[266, "mne.Epochs.set_montage"]], "shift_time() (mne.epochs method)": [[266, "mne.Epochs.shift_time"]], "standard_error() (mne.epochs method)": [[266, "mne.Epochs.standard_error"]], "subtract_evoked() (mne.epochs method)": [[266, "mne.Epochs.subtract_evoked"]], "time_as_index() (mne.epochs method)": [[266, "mne.Epochs.time_as_index"]], "times (mne.epochs property)": [[266, "mne.Epochs.times"]], "tmax (mne.epochs property)": [[266, "mne.Epochs.tmax"]], "tmin (mne.epochs property)": [[266, "mne.Epochs.tmin"]], "to_data_frame() (mne.epochs method)": [[266, "mne.Epochs.to_data_frame"]], "epochsarray (class in mne)": [[267, "mne.EpochsArray"]], "__contains__() (mne.epochsarray method)": [[267, "mne.EpochsArray.__contains__"]], "__getitem__() (mne.epochsarray method)": [[267, "mne.EpochsArray.__getitem__"]], "__iter__() (mne.epochsarray method)": [[267, "mne.EpochsArray.__iter__"]], "__len__() (mne.epochsarray method)": [[267, "mne.EpochsArray.__len__"]], "add_annotations_to_metadata() (mne.epochsarray method)": [[267, "mne.EpochsArray.add_annotations_to_metadata"]], "add_channels() (mne.epochsarray method)": [[267, "mne.EpochsArray.add_channels"]], "add_proj() (mne.epochsarray method)": [[267, "mne.EpochsArray.add_proj"]], "add_reference_channels() (mne.epochsarray method)": [[267, "mne.EpochsArray.add_reference_channels"]], "anonymize() (mne.epochsarray method)": [[267, "mne.EpochsArray.anonymize"]], "apply_baseline() (mne.epochsarray method)": [[267, "mne.EpochsArray.apply_baseline"]], "apply_function() (mne.epochsarray method)": [[267, "mne.EpochsArray.apply_function"]], "apply_hilbert() (mne.epochsarray method)": [[267, "mne.EpochsArray.apply_hilbert"]], "apply_proj() (mne.epochsarray method)": [[267, "mne.EpochsArray.apply_proj"]], "as_type() (mne.epochsarray method)": [[267, "mne.EpochsArray.as_type"]], "average() (mne.epochsarray method)": [[267, "mne.EpochsArray.average"]], "ch_names (mne.epochsarray property)": [[267, "mne.EpochsArray.ch_names"]], "compensation_grade (mne.epochsarray property)": [[267, "mne.EpochsArray.compensation_grade"]], "compute_psd() (mne.epochsarray method)": [[267, "mne.EpochsArray.compute_psd"]], "copy() (mne.epochsarray method)": [[267, "mne.EpochsArray.copy"]], "crop() (mne.epochsarray method)": [[267, "mne.EpochsArray.crop"]], "decimate() (mne.epochsarray method)": [[267, "mne.EpochsArray.decimate"]], "del_proj() (mne.epochsarray method)": [[267, "mne.EpochsArray.del_proj"]], "drop() (mne.epochsarray method)": [[267, "mne.EpochsArray.drop"]], "drop_bad() (mne.epochsarray method)": [[267, "mne.EpochsArray.drop_bad"]], "drop_channels() (mne.epochsarray method)": [[267, "mne.EpochsArray.drop_channels"]], "drop_log_stats() (mne.epochsarray method)": [[267, "mne.EpochsArray.drop_log_stats"]], "equalize_event_counts() (mne.epochsarray method)": [[267, "mne.EpochsArray.equalize_event_counts"]], "export() (mne.epochsarray method)": [[267, "mne.EpochsArray.export"]], "filename (mne.epochsarray property)": [[267, "mne.EpochsArray.filename"]], "filter() (mne.epochsarray method)": [[267, "mne.EpochsArray.filter"]], "get_annotations_per_epoch() (mne.epochsarray method)": [[267, "mne.EpochsArray.get_annotations_per_epoch"]], "get_channel_types() (mne.epochsarray method)": [[267, "mne.EpochsArray.get_channel_types"]], "get_data() (mne.epochsarray method)": [[267, "mne.EpochsArray.get_data"]], "get_montage() (mne.epochsarray method)": [[267, "mne.EpochsArray.get_montage"]], "interpolate_bads() (mne.epochsarray method)": [[267, "mne.EpochsArray.interpolate_bads"]], "iter_evoked() (mne.epochsarray method)": [[267, "mne.EpochsArray.iter_evoked"]], "load_data() (mne.epochsarray method)": [[267, "mne.EpochsArray.load_data"]], "metadata (mne.epochsarray property)": [[267, "mne.EpochsArray.metadata"]], "next() (mne.epochsarray method)": [[267, "mne.EpochsArray.next"]], "pick() (mne.epochsarray method)": [[267, "mne.EpochsArray.pick"]], "pick_channels() (mne.epochsarray method)": [[267, "mne.EpochsArray.pick_channels"]], "pick_types() (mne.epochsarray method)": [[267, "mne.EpochsArray.pick_types"]], "plot() (mne.epochsarray method)": [[267, "mne.EpochsArray.plot"]], "plot_drop_log() (mne.epochsarray method)": [[267, "mne.EpochsArray.plot_drop_log"]], "plot_image() (mne.epochsarray method)": [[267, "mne.EpochsArray.plot_image"]], "plot_projs_topomap() (mne.epochsarray method)": [[267, "mne.EpochsArray.plot_projs_topomap"]], "plot_psd() (mne.epochsarray method)": [[267, "mne.EpochsArray.plot_psd"]], "plot_psd_topo() (mne.epochsarray method)": [[267, "mne.EpochsArray.plot_psd_topo"]], "plot_psd_topomap() (mne.epochsarray method)": [[267, "mne.EpochsArray.plot_psd_topomap"]], "plot_sensors() (mne.epochsarray method)": [[267, "mne.EpochsArray.plot_sensors"]], "plot_topo_image() (mne.epochsarray method)": [[267, "mne.EpochsArray.plot_topo_image"]], "proj (mne.epochsarray property)": [[267, "mne.EpochsArray.proj"]], "rename_channels() (mne.epochsarray method)": [[267, "mne.EpochsArray.rename_channels"]], "reorder_channels() (mne.epochsarray method)": [[267, "mne.EpochsArray.reorder_channels"]], "resample() (mne.epochsarray method)": [[267, "mne.EpochsArray.resample"]], "reset_drop_log_selection() (mne.epochsarray method)": [[267, "mne.EpochsArray.reset_drop_log_selection"]], "save() (mne.epochsarray method)": [[267, "mne.EpochsArray.save"]], "savgol_filter() (mne.epochsarray method)": [[267, "mne.EpochsArray.savgol_filter"]], "set_annotations() (mne.epochsarray method)": [[267, "mne.EpochsArray.set_annotations"]], "set_channel_types() (mne.epochsarray method)": [[267, "mne.EpochsArray.set_channel_types"]], "set_eeg_reference() (mne.epochsarray method)": [[267, "mne.EpochsArray.set_eeg_reference"]], "set_meas_date() (mne.epochsarray method)": [[267, "mne.EpochsArray.set_meas_date"]], "set_montage() (mne.epochsarray method)": [[267, "mne.EpochsArray.set_montage"]], "shift_time() (mne.epochsarray method)": [[267, "mne.EpochsArray.shift_time"]], "standard_error() (mne.epochsarray method)": [[267, "mne.EpochsArray.standard_error"]], "subtract_evoked() (mne.epochsarray method)": [[267, "mne.EpochsArray.subtract_evoked"]], "time_as_index() (mne.epochsarray method)": [[267, "mne.EpochsArray.time_as_index"]], "times (mne.epochsarray property)": [[267, "mne.EpochsArray.times"]], "tmax (mne.epochsarray property)": [[267, "mne.EpochsArray.tmax"]], "tmin (mne.epochsarray property)": [[267, "mne.EpochsArray.tmin"]], "to_data_frame() (mne.epochsarray method)": [[267, "mne.EpochsArray.to_data_frame"]], "evoked (class in mne)": [[268, "mne.Evoked"]], "__contains__() (mne.evoked method)": [[268, "mne.Evoked.__contains__"]], "__neg__() (mne.evoked method)": [[268, "mne.Evoked.__neg__"]], "add_channels() (mne.evoked method)": [[268, "mne.Evoked.add_channels"]], "add_proj() (mne.evoked method)": [[268, "mne.Evoked.add_proj"]], "add_reference_channels() (mne.evoked method)": [[268, "mne.Evoked.add_reference_channels"]], "animate_topomap() (mne.evoked method)": [[268, "mne.Evoked.animate_topomap"]], "anonymize() (mne.evoked method)": [[268, "mne.Evoked.anonymize"]], "apply_baseline() (mne.evoked method)": [[268, "mne.Evoked.apply_baseline"]], "apply_function() (mne.evoked method)": [[268, "mne.Evoked.apply_function"]], "apply_hilbert() (mne.evoked method)": [[268, "mne.Evoked.apply_hilbert"]], "apply_proj() (mne.evoked method)": [[268, "mne.Evoked.apply_proj"]], "as_type() (mne.evoked method)": [[268, "mne.Evoked.as_type"]], "ch_names (mne.evoked property)": [[268, "mne.Evoked.ch_names"]], "compensation_grade (mne.evoked property)": [[268, "mne.Evoked.compensation_grade"]], "compute_psd() (mne.evoked method)": [[268, "mne.Evoked.compute_psd"]], "copy() (mne.evoked method)": [[268, "mne.Evoked.copy"]], "crop() (mne.evoked method)": [[268, "mne.Evoked.crop"]], "data (mne.evoked property)": [[268, "mne.Evoked.data"]], "decimate() (mne.evoked method)": [[268, "mne.Evoked.decimate"]], "del_proj() (mne.evoked method)": [[268, "mne.Evoked.del_proj"]], "detrend() (mne.evoked method)": [[268, "mne.Evoked.detrend"]], "drop_channels() (mne.evoked method)": [[268, "mne.Evoked.drop_channels"]], "export() (mne.evoked method)": [[268, "mne.Evoked.export"]], "filter() (mne.evoked method)": [[268, "mne.Evoked.filter"]], "get_channel_types() (mne.evoked method)": [[268, "mne.Evoked.get_channel_types"]], "get_data() (mne.evoked method)": [[268, "mne.Evoked.get_data"]], "get_montage() (mne.evoked method)": [[268, "mne.Evoked.get_montage"]], "get_peak() (mne.evoked method)": [[268, "mne.Evoked.get_peak"]], "interpolate_bads() (mne.evoked method)": [[268, "mne.Evoked.interpolate_bads"]], "kind (mne.evoked property)": [[268, "mne.Evoked.kind"]], "pick() (mne.evoked method)": [[268, "mne.Evoked.pick"]], "pick_channels() (mne.evoked method)": [[268, "mne.Evoked.pick_channels"]], "pick_types() (mne.evoked method)": [[268, "mne.Evoked.pick_types"]], "plot() (mne.evoked method)": [[268, "mne.Evoked.plot"]], "plot_field() (mne.evoked method)": [[268, "mne.Evoked.plot_field"]], "plot_image() (mne.evoked method)": [[268, "mne.Evoked.plot_image"]], "plot_joint() (mne.evoked method)": [[268, "mne.Evoked.plot_joint"]], "plot_projs_topomap() (mne.evoked method)": [[268, "mne.Evoked.plot_projs_topomap"]], "plot_psd() (mne.evoked method)": [[268, "mne.Evoked.plot_psd"]], "plot_psd_topo() (mne.evoked method)": [[268, "mne.Evoked.plot_psd_topo"]], "plot_psd_topomap() (mne.evoked method)": [[268, "mne.Evoked.plot_psd_topomap"]], "plot_sensors() (mne.evoked method)": [[268, "mne.Evoked.plot_sensors"]], "plot_topo() (mne.evoked method)": [[268, "mne.Evoked.plot_topo"]], "plot_topomap() (mne.evoked method)": [[268, "mne.Evoked.plot_topomap"]], "plot_white() (mne.evoked method)": [[268, "mne.Evoked.plot_white"]], "proj (mne.evoked property)": [[268, "mne.Evoked.proj"]], "rename_channels() (mne.evoked method)": [[268, "mne.Evoked.rename_channels"]], "reorder_channels() (mne.evoked method)": [[268, "mne.Evoked.reorder_channels"]], "resample() (mne.evoked method)": [[268, "mne.Evoked.resample"]], "save() (mne.evoked method)": [[268, "mne.Evoked.save"]], "savgol_filter() (mne.evoked method)": [[268, "mne.Evoked.savgol_filter"]], "set_channel_types() (mne.evoked method)": [[268, "mne.Evoked.set_channel_types"]], "set_eeg_reference() (mne.evoked method)": [[268, "mne.Evoked.set_eeg_reference"]], "set_meas_date() (mne.evoked method)": [[268, "mne.Evoked.set_meas_date"]], "set_montage() (mne.evoked method)": [[268, "mne.Evoked.set_montage"]], "shift_time() (mne.evoked method)": [[268, "mne.Evoked.shift_time"]], "time_as_index() (mne.evoked method)": [[268, "mne.Evoked.time_as_index"]], "times (mne.evoked property)": [[268, "mne.Evoked.times"]], "tmax (mne.evoked property)": [[268, "mne.Evoked.tmax"]], "tmin (mne.evoked property)": [[268, "mne.Evoked.tmin"]], "to_data_frame() (mne.evoked method)": [[268, "mne.Evoked.to_data_frame"]], "evokedarray (class in mne)": [[269, "mne.EvokedArray"]], "__contains__() (mne.evokedarray method)": [[269, "mne.EvokedArray.__contains__"]], "__neg__() (mne.evokedarray method)": [[269, "mne.EvokedArray.__neg__"]], "add_channels() (mne.evokedarray method)": [[269, "mne.EvokedArray.add_channels"]], "add_proj() (mne.evokedarray method)": [[269, "mne.EvokedArray.add_proj"]], "add_reference_channels() (mne.evokedarray method)": [[269, "mne.EvokedArray.add_reference_channels"]], "animate_topomap() (mne.evokedarray method)": [[269, "mne.EvokedArray.animate_topomap"]], "anonymize() (mne.evokedarray method)": [[269, "mne.EvokedArray.anonymize"]], "apply_baseline() (mne.evokedarray method)": [[269, "mne.EvokedArray.apply_baseline"]], "apply_function() (mne.evokedarray method)": [[269, "mne.EvokedArray.apply_function"]], "apply_hilbert() (mne.evokedarray method)": [[269, "mne.EvokedArray.apply_hilbert"]], "apply_proj() (mne.evokedarray method)": [[269, "mne.EvokedArray.apply_proj"]], "as_type() (mne.evokedarray method)": [[269, "mne.EvokedArray.as_type"]], "ch_names (mne.evokedarray property)": [[269, "mne.EvokedArray.ch_names"]], "compensation_grade (mne.evokedarray property)": [[269, "mne.EvokedArray.compensation_grade"]], "compute_psd() (mne.evokedarray method)": [[269, "mne.EvokedArray.compute_psd"]], "copy() (mne.evokedarray method)": [[269, "mne.EvokedArray.copy"]], "crop() (mne.evokedarray method)": [[269, "mne.EvokedArray.crop"]], "data (mne.evokedarray property)": [[269, "mne.EvokedArray.data"]], "decimate() (mne.evokedarray method)": [[269, "mne.EvokedArray.decimate"]], "del_proj() (mne.evokedarray method)": [[269, "mne.EvokedArray.del_proj"]], "detrend() (mne.evokedarray method)": [[269, "mne.EvokedArray.detrend"]], "drop_channels() (mne.evokedarray method)": [[269, "mne.EvokedArray.drop_channels"]], "export() (mne.evokedarray method)": [[269, "mne.EvokedArray.export"]], "filter() (mne.evokedarray method)": [[269, "mne.EvokedArray.filter"]], "get_channel_types() (mne.evokedarray method)": [[269, "mne.EvokedArray.get_channel_types"]], "get_data() (mne.evokedarray method)": [[269, "mne.EvokedArray.get_data"]], "get_montage() (mne.evokedarray method)": [[269, "mne.EvokedArray.get_montage"]], "get_peak() (mne.evokedarray method)": [[269, "mne.EvokedArray.get_peak"]], "interpolate_bads() (mne.evokedarray method)": [[269, "mne.EvokedArray.interpolate_bads"]], "kind (mne.evokedarray property)": [[269, "mne.EvokedArray.kind"]], "pick() (mne.evokedarray method)": [[269, "mne.EvokedArray.pick"]], "pick_channels() (mne.evokedarray method)": [[269, "mne.EvokedArray.pick_channels"]], "pick_types() (mne.evokedarray method)": [[269, "mne.EvokedArray.pick_types"]], "plot() (mne.evokedarray method)": [[269, "mne.EvokedArray.plot"]], "plot_field() (mne.evokedarray method)": [[269, "mne.EvokedArray.plot_field"]], "plot_image() (mne.evokedarray method)": [[269, "mne.EvokedArray.plot_image"]], "plot_joint() (mne.evokedarray method)": [[269, "mne.EvokedArray.plot_joint"]], "plot_projs_topomap() (mne.evokedarray method)": [[269, "mne.EvokedArray.plot_projs_topomap"]], "plot_psd() (mne.evokedarray method)": [[269, "mne.EvokedArray.plot_psd"]], "plot_psd_topo() (mne.evokedarray method)": [[269, "mne.EvokedArray.plot_psd_topo"]], "plot_psd_topomap() (mne.evokedarray method)": [[269, "mne.EvokedArray.plot_psd_topomap"]], "plot_sensors() (mne.evokedarray method)": [[269, "mne.EvokedArray.plot_sensors"]], "plot_topo() (mne.evokedarray method)": [[269, "mne.EvokedArray.plot_topo"]], "plot_topomap() (mne.evokedarray method)": [[269, "mne.EvokedArray.plot_topomap"]], "plot_white() (mne.evokedarray method)": [[269, "mne.EvokedArray.plot_white"]], "proj (mne.evokedarray property)": [[269, "mne.EvokedArray.proj"]], "rename_channels() (mne.evokedarray method)": [[269, "mne.EvokedArray.rename_channels"]], "reorder_channels() (mne.evokedarray method)": [[269, "mne.EvokedArray.reorder_channels"]], "resample() (mne.evokedarray method)": [[269, "mne.EvokedArray.resample"]], "save() (mne.evokedarray method)": [[269, "mne.EvokedArray.save"]], "savgol_filter() (mne.evokedarray method)": [[269, "mne.EvokedArray.savgol_filter"]], "set_channel_types() (mne.evokedarray method)": [[269, "mne.EvokedArray.set_channel_types"]], "set_eeg_reference() (mne.evokedarray method)": [[269, "mne.EvokedArray.set_eeg_reference"]], "set_meas_date() (mne.evokedarray method)": [[269, "mne.EvokedArray.set_meas_date"]], "set_montage() (mne.evokedarray method)": [[269, "mne.EvokedArray.set_montage"]], "shift_time() (mne.evokedarray method)": [[269, "mne.EvokedArray.shift_time"]], "time_as_index() (mne.evokedarray method)": [[269, "mne.EvokedArray.time_as_index"]], "times (mne.evokedarray property)": [[269, "mne.EvokedArray.times"]], "tmax (mne.evokedarray property)": [[269, "mne.EvokedArray.tmax"]], "tmin (mne.evokedarray property)": [[269, "mne.EvokedArray.tmin"]], "to_data_frame() (mne.evokedarray method)": [[269, "mne.EvokedArray.to_data_frame"]], "forward (class in mne)": [[270, "mne.Forward"]], "copy() (mne.forward method)": [[270, "mne.Forward.copy"]], "pick_channels() (mne.forward method)": [[270, "mne.Forward.pick_channels"]], "info (class in mne)": [[271, "mne.Info"]], "__contains__() (mne.info method)": [[271, "mne.Info.__contains__"]], "__getitem__() (mne.info method)": [[271, "mne.Info.__getitem__"]], "__iter__() (mne.info method)": [[271, "mne.Info.__iter__"]], "__len__() (mne.info method)": [[271, "mne.Info.__len__"]], "clear() (mne.info method)": [[271, "mne.Info.clear"]], "compensation_grade (mne.info property)": [[271, "mne.Info.compensation_grade"]], "copy() (mne.info method)": [[271, "mne.Info.copy"]], "fromkeys() (mne.info method)": [[271, "mne.Info.fromkeys"]], "get() (mne.info method)": [[271, "mne.Info.get"]], "get_channel_types() (mne.info method)": [[271, "mne.Info.get_channel_types"]], "get_montage() (mne.info method)": [[271, "mne.Info.get_montage"]], "items() (mne.info method)": [[271, "mne.Info.items"]], "keys() (mne.info method)": [[271, "mne.Info.keys"]], "normalize_proj() (mne.info method)": [[271, "mne.Info.normalize_proj"]], "pop() (mne.info method)": [[271, "mne.Info.pop"]], "popitem() (mne.info method)": [[271, "mne.Info.popitem"]], "save() (mne.info method)": [[271, "mne.Info.save"]], "set_montage() (mne.info method)": [[271, "mne.Info.set_montage"]], "setdefault() (mne.info method)": [[271, "mne.Info.setdefault"]], "update() (mne.info method)": [[271, "mne.Info.update"]], "values() (mne.info method)": [[271, "mne.Info.values"]], "label (class in mne)": [[272, "mne.Label"]], "__add__() (mne.label method)": [[272, "mne.Label.__add__"]], "__len__() (mne.label method)": [[272, "mne.Label.__len__"]], "__sub__() (mne.label method)": [[272, "mne.Label.__sub__"]], "center_of_mass() (mne.label method)": [[272, "mne.Label.center_of_mass"]], "compute_area() (mne.label method)": [[272, "mne.Label.compute_area"]], "copy() (mne.label method)": [[272, "mne.Label.copy"]], "distances_to_outside() (mne.label method)": [[272, "mne.Label.distances_to_outside"]], "fill() (mne.label method)": [[272, "mne.Label.fill"]], "get_tris() (mne.label method)": [[272, "mne.Label.get_tris"]], "get_vertices_used() (mne.label method)": [[272, "mne.Label.get_vertices_used"]], "morph() (mne.label method)": [[272, "mne.Label.morph"]], "restrict() (mne.label method)": [[272, "mne.Label.restrict"]], "save() (mne.label method)": [[272, "mne.Label.save"]], "smooth() (mne.label method)": [[272, "mne.Label.smooth"]], "split() (mne.label method)": [[272, "mne.Label.split"]], "mixedsourceestimate (class in mne)": [[273, "mne.MixedSourceEstimate"]], "__add__() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.__add__"]], "__div__() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.__div__"]], "__mul__() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.__mul__"]], "__neg__() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.__neg__"]], "__sub__() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.apply_baseline"]], "bin() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.bin"]], "copy() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.copy"]], "crop() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.crop"]], "data (mne.mixedsourceestimate property)": [[273, "mne.MixedSourceEstimate.data"]], "decimate() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.decimate"]], "extract_label_time_course() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.get_peak"]], "mean() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.mean"]], "plot() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.plot"]], "resample() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.resample"]], "save() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.save"]], "sfreq (mne.mixedsourceestimate property)": [[273, "mne.MixedSourceEstimate.sfreq"]], "shape (mne.mixedsourceestimate property)": [[273, "mne.MixedSourceEstimate.shape"]], "shift_time() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.shift_time"]], "sqrt() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.sqrt"]], "sum() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.sum"]], "surface() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.surface"]], "time_as_index() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.time_as_index"]], "times (mne.mixedsourceestimate property)": [[273, "mne.MixedSourceEstimate.times"]], "tmax (mne.mixedsourceestimate property)": [[273, "mne.MixedSourceEstimate.tmax"]], "tmin (mne.mixedsourceestimate property)": [[273, "mne.MixedSourceEstimate.tmin"]], "to_data_frame() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.to_data_frame"]], "transform() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.transform"]], "transform_data() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.transform_data"]], "tstep (mne.mixedsourceestimate property)": [[273, "mne.MixedSourceEstimate.tstep"]], "volume() (mne.mixedsourceestimate method)": [[273, "mne.MixedSourceEstimate.volume"]], "mixedvectorsourceestimate (class in mne)": [[274, "mne.MixedVectorSourceEstimate"]], "__add__() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.__add__"]], "__div__() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.__div__"]], "__mul__() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.__mul__"]], "__neg__() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.__neg__"]], "__sub__() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.apply_baseline"]], "bin() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.bin"]], "copy() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.copy"]], "crop() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.crop"]], "data (mne.mixedvectorsourceestimate property)": [[274, "mne.MixedVectorSourceEstimate.data"]], "decimate() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.decimate"]], "extract_label_time_course() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.get_peak"]], "magnitude() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.magnitude"]], "mean() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.mean"]], "plot() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.plot"]], "project() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.project"]], "resample() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.resample"]], "save() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.save"]], "sfreq (mne.mixedvectorsourceestimate property)": [[274, "mne.MixedVectorSourceEstimate.sfreq"]], "shape (mne.mixedvectorsourceestimate property)": [[274, "mne.MixedVectorSourceEstimate.shape"]], "shift_time() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.shift_time"]], "sqrt() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.sqrt"]], "sum() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.sum"]], "surface() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.surface"]], "time_as_index() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.time_as_index"]], "times (mne.mixedvectorsourceestimate property)": [[274, "mne.MixedVectorSourceEstimate.times"]], "tmax (mne.mixedvectorsourceestimate property)": [[274, "mne.MixedVectorSourceEstimate.tmax"]], "tmin (mne.mixedvectorsourceestimate property)": [[274, "mne.MixedVectorSourceEstimate.tmin"]], "to_data_frame() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.to_data_frame"]], "transform() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.transform"]], "transform_data() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.transform_data"]], "tstep (mne.mixedvectorsourceestimate property)": [[274, "mne.MixedVectorSourceEstimate.tstep"]], "volume() (mne.mixedvectorsourceestimate method)": [[274, "mne.MixedVectorSourceEstimate.volume"]], "projection (class in mne)": [[275, "mne.Projection"]], "__contains__() (mne.projection method)": [[275, "mne.Projection.__contains__"]], "__getitem__() (mne.projection method)": [[275, "mne.Projection.__getitem__"]], "__iter__() (mne.projection method)": [[275, "mne.Projection.__iter__"]], "__len__() (mne.projection method)": [[275, "mne.Projection.__len__"]], "clear() (mne.projection method)": [[275, "mne.Projection.clear"]], "copy() (mne.projection method)": [[275, "mne.Projection.copy"]], "fromkeys() (mne.projection method)": [[275, "mne.Projection.fromkeys"]], "get() (mne.projection method)": [[275, "mne.Projection.get"]], "items() (mne.projection method)": [[275, "mne.Projection.items"]], "keys() (mne.projection method)": [[275, "mne.Projection.keys"]], "plot_topomap() (mne.projection method)": [[275, "mne.Projection.plot_topomap"]], "pop() (mne.projection method)": [[275, "mne.Projection.pop"]], "popitem() (mne.projection method)": [[275, "mne.Projection.popitem"]], "setdefault() (mne.projection method)": [[275, "mne.Projection.setdefault"]], "update() (mne.projection method)": [[275, "mne.Projection.update"]], "values() (mne.projection method)": [[275, "mne.Projection.values"]], "report (class in mne)": [[276, "mne.Report"]], "__len__() (mne.report method)": [[276, "mne.Report.__len__"]], "add_bem() (mne.report method)": [[276, "mne.Report.add_bem"]], "add_code() (mne.report method)": [[276, "mne.Report.add_code"]], "add_covariance() (mne.report method)": [[276, "mne.Report.add_covariance"]], "add_custom_css() (mne.report method)": [[276, "mne.Report.add_custom_css"]], "add_custom_js() (mne.report method)": [[276, "mne.Report.add_custom_js"]], "add_epochs() (mne.report method)": [[276, "mne.Report.add_epochs"]], "add_events() (mne.report method)": [[276, "mne.Report.add_events"]], "add_evokeds() (mne.report method)": [[276, "mne.Report.add_evokeds"]], "add_figure() (mne.report method)": [[276, "mne.Report.add_figure"]], "add_forward() (mne.report method)": [[276, "mne.Report.add_forward"]], "add_html() (mne.report method)": [[276, "mne.Report.add_html"]], "add_ica() (mne.report method)": [[276, "mne.Report.add_ica"]], "add_image() (mne.report method)": [[276, "mne.Report.add_image"]], "add_inverse_operator() (mne.report method)": [[276, "mne.Report.add_inverse_operator"]], "add_projs() (mne.report method)": [[276, "mne.Report.add_projs"]], "add_raw() (mne.report method)": [[276, "mne.Report.add_raw"]], "add_stc() (mne.report method)": [[276, "mne.Report.add_stc"]], "add_sys_info() (mne.report method)": [[276, "mne.Report.add_sys_info"]], "add_trans() (mne.report method)": [[276, "mne.Report.add_trans"]], "html (mne.report property)": [[276, "mne.Report.html"]], "parse_folder() (mne.report method)": [[276, "mne.Report.parse_folder"]], "remove() (mne.report method)": [[276, "mne.Report.remove"]], "save() (mne.report method)": [[276, "mne.Report.save"]], "tags (mne.report property)": [[276, "mne.Report.tags"]], "sourceestimate (class in mne)": [[277, "mne.SourceEstimate"]], "__add__() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.__add__"]], "__div__() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.__div__"]], "__mul__() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.__mul__"]], "__neg__() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.__neg__"]], "__sub__() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.__sub__"]], "apply_baseline() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.apply_baseline"]], "bin() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.bin"]], "center_of_mass() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.center_of_mass"]], "copy() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.copy"]], "crop() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.crop"]], "data (mne.sourceestimate property)": [[277, "mne.SourceEstimate.data"]], "decimate() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.decimate"]], "estimate_snr() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.estimate_snr"]], "expand() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.expand"]], "extract_label_time_course() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.extract_label_time_course"]], "get_peak() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.get_peak"]], "in_label() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.in_label"]], "lh_data (mne.sourceestimate property)": [[277, "mne.SourceEstimate.lh_data"]], "lh_vertno (mne.sourceestimate property)": [[277, "mne.SourceEstimate.lh_vertno"]], "mean() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.mean"]], "plot() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.plot"]], "resample() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.resample"]], "rh_data (mne.sourceestimate property)": [[277, "mne.SourceEstimate.rh_data"]], "rh_vertno (mne.sourceestimate property)": [[277, "mne.SourceEstimate.rh_vertno"]], "save() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.save"]], "sfreq (mne.sourceestimate property)": [[277, "mne.SourceEstimate.sfreq"]], "shape (mne.sourceestimate property)": [[277, "mne.SourceEstimate.shape"]], "shift_time() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.shift_time"]], "sqrt() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.sqrt"]], "sum() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.sum"]], "time_as_index() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.time_as_index"]], "times (mne.sourceestimate property)": [[277, "mne.SourceEstimate.times"]], "tmax (mne.sourceestimate property)": [[277, "mne.SourceEstimate.tmax"]], "tmin (mne.sourceestimate property)": [[277, "mne.SourceEstimate.tmin"]], "to_data_frame() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.to_data_frame"]], "to_original_src() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.to_original_src"]], "transform() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.transform"]], "transform_data() (mne.sourceestimate method)": [[277, "mne.SourceEstimate.transform_data"]], "tstep (mne.sourceestimate property)": [[277, "mne.SourceEstimate.tstep"]], "sourcemorph (class in mne)": [[278, "mne.SourceMorph"]], "apply() (mne.sourcemorph method)": [[278, "mne.SourceMorph.apply"]], "compute_vol_morph_mat() (mne.sourcemorph method)": [[278, "mne.SourceMorph.compute_vol_morph_mat"]], "save() (mne.sourcemorph method)": [[278, "mne.SourceMorph.save"]], "sourcespaces (class in mne)": [[279, "mne.SourceSpaces"]], "__add__() (mne.sourcespaces method)": [[279, "mne.SourceSpaces.__add__"]], "__getitem__() (mne.sourcespaces method)": [[279, "mne.SourceSpaces.__getitem__"]], "copy() (mne.sourcespaces method)": [[279, "mne.SourceSpaces.copy"]], "export_volume() (mne.sourcespaces method)": [[279, "mne.SourceSpaces.export_volume"]], "plot() (mne.sourcespaces method)": [[279, "mne.SourceSpaces.plot"]], "save() (mne.sourcespaces method)": [[279, "mne.SourceSpaces.save"]], "vectorsourceestimate (class in mne)": [[280, "mne.VectorSourceEstimate"]], "__add__() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.__add__"]], "__div__() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.__div__"]], "__mul__() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.__mul__"]], "__neg__() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.__neg__"]], "__sub__() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.__sub__"]], "apply_baseline() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.apply_baseline"]], "bin() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.bin"]], "copy() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.copy"]], "crop() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.crop"]], "data (mne.vectorsourceestimate property)": [[280, "mne.VectorSourceEstimate.data"]], "decimate() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.decimate"]], "expand() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.expand"]], "extract_label_time_course() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.get_peak"]], "in_label() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.in_label"]], "lh_data (mne.vectorsourceestimate property)": [[280, "mne.VectorSourceEstimate.lh_data"]], "lh_vertno (mne.vectorsourceestimate property)": [[280, "mne.VectorSourceEstimate.lh_vertno"]], "magnitude() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.magnitude"]], "mean() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.mean"]], "plot() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.plot"]], "project() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.project"]], "resample() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.resample"]], "rh_data (mne.vectorsourceestimate property)": [[280, "mne.VectorSourceEstimate.rh_data"]], "rh_vertno (mne.vectorsourceestimate property)": [[280, "mne.VectorSourceEstimate.rh_vertno"]], "save() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.save"]], "sfreq (mne.vectorsourceestimate property)": [[280, "mne.VectorSourceEstimate.sfreq"]], "shape (mne.vectorsourceestimate property)": [[280, "mne.VectorSourceEstimate.shape"]], "shift_time() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.shift_time"]], "sqrt() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.sqrt"]], "sum() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.sum"]], "time_as_index() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.time_as_index"]], "times (mne.vectorsourceestimate property)": [[280, "mne.VectorSourceEstimate.times"]], "tmax (mne.vectorsourceestimate property)": [[280, "mne.VectorSourceEstimate.tmax"]], "tmin (mne.vectorsourceestimate property)": [[280, "mne.VectorSourceEstimate.tmin"]], "to_data_frame() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.to_data_frame"]], "to_original_src() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.to_original_src"]], "transform() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.transform"]], "transform_data() (mne.vectorsourceestimate method)": [[280, "mne.VectorSourceEstimate.transform_data"]], "tstep (mne.vectorsourceestimate property)": [[280, "mne.VectorSourceEstimate.tstep"]], "volsourceestimate (class in mne)": [[281, "mne.VolSourceEstimate"]], "__add__() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.__add__"]], "__div__() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.__div__"]], "__mul__() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.__mul__"]], "__neg__() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.__neg__"]], "__sub__() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.__sub__"]], "apply_baseline() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.apply_baseline"]], "as_volume() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.as_volume"]], "bin() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.bin"]], "copy() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.copy"]], "crop() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.crop"]], "data (mne.volsourceestimate property)": [[281, "mne.VolSourceEstimate.data"]], "decimate() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.decimate"]], "extract_label_time_course() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.get_peak"]], "in_label() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.in_label"]], "mean() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.mean"]], "plot() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.plot"]], "plot_3d() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.plot_3d"]], "resample() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.resample"]], "save() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.save"]], "save_as_volume() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.save_as_volume"]], "sfreq (mne.volsourceestimate property)": [[281, "mne.VolSourceEstimate.sfreq"]], "shape (mne.volsourceestimate property)": [[281, "mne.VolSourceEstimate.shape"]], "shift_time() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.shift_time"]], "sqrt() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.sqrt"]], "sum() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.sum"]], "time_as_index() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.time_as_index"]], "times (mne.volsourceestimate property)": [[281, "mne.VolSourceEstimate.times"]], "tmax (mne.volsourceestimate property)": [[281, "mne.VolSourceEstimate.tmax"]], "tmin (mne.volsourceestimate property)": [[281, "mne.VolSourceEstimate.tmin"]], "to_data_frame() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.to_data_frame"]], "transform() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.transform"]], "transform_data() (mne.volsourceestimate method)": [[281, "mne.VolSourceEstimate.transform_data"]], "tstep (mne.volsourceestimate property)": [[281, "mne.VolSourceEstimate.tstep"]], "volvectorsourceestimate (class in mne)": [[282, "mne.VolVectorSourceEstimate"]], "__add__() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.__add__"]], "__div__() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.__div__"]], "__mul__() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.__mul__"]], "__neg__() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.__neg__"]], "__sub__() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.apply_baseline"]], "as_volume() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.as_volume"]], "bin() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.bin"]], "copy() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.copy"]], "crop() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.crop"]], "data (mne.volvectorsourceestimate property)": [[282, "mne.VolVectorSourceEstimate.data"]], "decimate() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.decimate"]], "extract_label_time_course() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.get_peak"]], "in_label() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.in_label"]], "magnitude() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.magnitude"]], "mean() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.mean"]], "plot() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.plot"]], "plot_3d() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.plot_3d"]], "project() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.project"]], "resample() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.resample"]], "save() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.save"]], "save_as_volume() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.save_as_volume"]], "sfreq (mne.volvectorsourceestimate property)": [[282, "mne.VolVectorSourceEstimate.sfreq"]], "shape (mne.volvectorsourceestimate property)": [[282, "mne.VolVectorSourceEstimate.shape"]], "shift_time() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.shift_time"]], "sqrt() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.sqrt"]], "sum() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.sum"]], "time_as_index() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.time_as_index"]], "times (mne.volvectorsourceestimate property)": [[282, "mne.VolVectorSourceEstimate.times"]], "tmax (mne.volvectorsourceestimate property)": [[282, "mne.VolVectorSourceEstimate.tmax"]], "tmin (mne.volvectorsourceestimate property)": [[282, "mne.VolVectorSourceEstimate.tmin"]], "to_data_frame() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.to_data_frame"]], "transform() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.transform"]], "transform_data() (mne.volvectorsourceestimate method)": [[282, "mne.VolVectorSourceEstimate.transform_data"]], "tstep (mne.volvectorsourceestimate property)": [[282, "mne.VolVectorSourceEstimate.tstep"]], "add_reference_channels() (in module mne)": [[283, "mne.add_reference_channels"]], "add_source_space_distances() (in module mne)": [[284, "mne.add_source_space_distances"]], "annotations_from_events() (in module mne)": [[285, "mne.annotations_from_events"]], "apply_forward() (in module mne)": [[286, "mne.apply_forward"]], "apply_forward_raw() (in module mne)": [[287, "mne.apply_forward_raw"]], "average_forward_solutions() (in module mne)": [[288, "mne.average_forward_solutions"]], "rescale() (in module mne.baseline)": [[289, "mne.baseline.rescale"]], "beamformer (class in mne.beamformer)": [[290, "mne.beamformer.Beamformer"]], "__contains__() (mne.beamformer.beamformer method)": [[290, "mne.beamformer.Beamformer.__contains__"]], "__getitem__() (mne.beamformer.beamformer method)": [[290, "mne.beamformer.Beamformer.__getitem__"]], "__iter__() (mne.beamformer.beamformer method)": [[290, "mne.beamformer.Beamformer.__iter__"]], "__len__() (mne.beamformer.beamformer method)": [[290, "mne.beamformer.Beamformer.__len__"]], "clear() (mne.beamformer.beamformer method)": [[290, "mne.beamformer.Beamformer.clear"]], "copy() (mne.beamformer.beamformer method)": [[290, "mne.beamformer.Beamformer.copy"]], "fromkeys() (mne.beamformer.beamformer method)": [[290, "mne.beamformer.Beamformer.fromkeys"]], "get() (mne.beamformer.beamformer method)": [[290, "mne.beamformer.Beamformer.get"]], "items() (mne.beamformer.beamformer method)": [[290, "mne.beamformer.Beamformer.items"]], "keys() (mne.beamformer.beamformer method)": [[290, "mne.beamformer.Beamformer.keys"]], "pop() (mne.beamformer.beamformer method)": [[290, "mne.beamformer.Beamformer.pop"]], "popitem() (mne.beamformer.beamformer method)": [[290, "mne.beamformer.Beamformer.popitem"]], "save() (mne.beamformer.beamformer method)": [[290, "mne.beamformer.Beamformer.save"]], "setdefault() (mne.beamformer.beamformer method)": [[290, "mne.beamformer.Beamformer.setdefault"]], "update() (mne.beamformer.beamformer method)": [[290, "mne.beamformer.Beamformer.update"]], "values() (mne.beamformer.beamformer method)": [[290, "mne.beamformer.Beamformer.values"]], "apply_dics() (in module mne.beamformer)": [[291, "mne.beamformer.apply_dics"]], "apply_dics_csd() (in module mne.beamformer)": [[292, "mne.beamformer.apply_dics_csd"]], "apply_dics_epochs() (in module mne.beamformer)": [[293, "mne.beamformer.apply_dics_epochs"]], "apply_dics_tfr_epochs() (in module mne.beamformer)": [[294, "mne.beamformer.apply_dics_tfr_epochs"]], "apply_lcmv() (in module mne.beamformer)": [[295, "mne.beamformer.apply_lcmv"]], "apply_lcmv_cov() (in module mne.beamformer)": [[296, "mne.beamformer.apply_lcmv_cov"]], "apply_lcmv_epochs() (in module mne.beamformer)": [[297, "mne.beamformer.apply_lcmv_epochs"]], "apply_lcmv_raw() (in module mne.beamformer)": [[298, "mne.beamformer.apply_lcmv_raw"]], "make_dics() (in module mne.beamformer)": [[299, "mne.beamformer.make_dics"]], "make_lcmv() (in module mne.beamformer)": [[300, "mne.beamformer.make_lcmv"]], "make_lcmv_resolution_matrix() (in module mne.beamformer)": [[301, "mne.beamformer.make_lcmv_resolution_matrix"]], "rap_music() (in module mne.beamformer)": [[302, "mne.beamformer.rap_music"]], "read_beamformer() (in module mne.beamformer)": [[303, "mne.beamformer.read_beamformer"]], "conductormodel (class in mne.bem)": [[304, "mne.bem.ConductorModel"]], "__contains__() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.__contains__"]], "__getitem__() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.__getitem__"]], "__iter__() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.__iter__"]], "__len__() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.__len__"]], "clear() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.clear"]], "copy() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.copy"]], "fromkeys() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.fromkeys"]], "get() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.get"]], "items() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.items"]], "keys() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.keys"]], "pop() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.pop"]], "popitem() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.popitem"]], "radius (mne.bem.conductormodel property)": [[304, "mne.bem.ConductorModel.radius"]], "setdefault() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.setdefault"]], "update() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.update"]], "values() (mne.bem.conductormodel method)": [[304, "mne.bem.ConductorModel.values"]], "convert_flash_mris() (in module mne.bem)": [[305, "mne.bem.convert_flash_mris"]], "distance_to_bem() (in module mne.bem)": [[306, "mne.bem.distance_to_bem"]], "fit_sphere_to_headshape() (in module mne.bem)": [[307, "mne.bem.fit_sphere_to_headshape"]], "get_fitting_dig() (in module mne.bem)": [[308, "mne.bem.get_fitting_dig"]], "make_flash_bem() (in module mne.bem)": [[309, "mne.bem.make_flash_bem"]], "make_scalp_surfaces() (in module mne.bem)": [[310, "mne.bem.make_scalp_surfaces"]], "make_watershed_bem() (in module mne.bem)": [[311, "mne.bem.make_watershed_bem"]], "channel_indices_by_type() (in module mne)": [[312, "mne.channel_indices_by_type"]], "channel_type() (in module mne)": [[313, "mne.channel_type"]], "digmontage (class in mne.channels)": [[314, "mne.channels.DigMontage"]], "__add__() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.__add__"]], "add_estimated_fiducials() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.add_estimated_fiducials"]], "add_mni_fiducials() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.add_mni_fiducials"]], "apply_trans() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.apply_trans"]], "copy() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.copy"]], "get_positions() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.get_positions"]], "plot() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.plot"]], "remove_fiducials() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.remove_fiducials"]], "rename_channels() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.rename_channels"]], "save() (mne.channels.digmontage method)": [[314, "mne.channels.DigMontage.save"]], "layout (class in mne.channels)": [[315, "mne.channels.Layout"]], "plot() (mne.channels.layout method)": [[315, "mne.channels.Layout.plot"]], "save() (mne.channels.layout method)": [[315, "mne.channels.Layout.save"]], "combine_channels() (in module mne.channels)": [[316, "mne.channels.combine_channels"]], "compute_dev_head_t() (in module mne.channels)": [[317, "mne.channels.compute_dev_head_t"]], "compute_native_head_t() (in module mne.channels)": [[318, "mne.channels.compute_native_head_t"]], "equalize_channels() (in module mne.channels)": [[319, "mne.channels.equalize_channels"]], "find_ch_adjacency() (in module mne.channels)": [[320, "mne.channels.find_ch_adjacency"]], "find_layout() (in module mne.channels)": [[321, "mne.channels.find_layout"]], "fix_mag_coil_types() (in module mne.channels)": [[322, "mne.channels.fix_mag_coil_types"]], "generate_2d_layout() (in module mne.channels)": [[323, "mne.channels.generate_2d_layout"]], "get_builtin_ch_adjacencies() (in module mne.channels)": [[324, "mne.channels.get_builtin_ch_adjacencies"]], "get_builtin_montages() (in module mne.channels)": [[325, "mne.channels.get_builtin_montages"]], "make_1020_channel_selections() (in module mne.channels)": [[326, "mne.channels.make_1020_channel_selections"]], "make_dig_montage() (in module mne.channels)": [[327, "mne.channels.make_dig_montage"]], "make_eeg_layout() (in module mne.channels)": [[328, "mne.channels.make_eeg_layout"]], "make_grid_layout() (in module mne.channels)": [[329, "mne.channels.make_grid_layout"]], "make_standard_montage() (in module mne.channels)": [[330, "mne.channels.make_standard_montage"]], "read_ch_adjacency() (in module mne.channels)": [[331, "mne.channels.read_ch_adjacency"]], "read_custom_montage() (in module mne.channels)": [[332, "mne.channels.read_custom_montage"]], "read_dig_captrak() (in module mne.channels)": [[333, "mne.channels.read_dig_captrak"]], "read_dig_dat() (in module mne.channels)": [[334, "mne.channels.read_dig_dat"]], "read_dig_egi() (in module mne.channels)": [[335, "mne.channels.read_dig_egi"]], "read_dig_fif() (in module mne.channels)": [[336, "mne.channels.read_dig_fif"]], "read_dig_hpts() (in module mne.channels)": [[337, "mne.channels.read_dig_hpts"]], "read_dig_localite() (in module mne.channels)": [[338, "mne.channels.read_dig_localite"]], "read_dig_polhemus_isotrak() (in module mne.channels)": [[339, "mne.channels.read_dig_polhemus_isotrak"]], "read_layout() (in module mne.channels)": [[340, "mne.channels.read_layout"]], "read_polhemus_fastscan() (in module mne.channels)": [[341, "mne.channels.read_polhemus_fastscan"]], "rename_channels() (in module mne.channels)": [[342, "mne.channels.rename_channels"]], "compute_chpi_amplitudes() (in module mne.chpi)": [[343, "mne.chpi.compute_chpi_amplitudes"]], "compute_chpi_locs() (in module mne.chpi)": [[344, "mne.chpi.compute_chpi_locs"]], "compute_chpi_snr() (in module mne.chpi)": [[345, "mne.chpi.compute_chpi_snr"]], "compute_head_pos() (in module mne.chpi)": [[346, "mne.chpi.compute_head_pos"]], "extract_chpi_locs_ctf() (in module mne.chpi)": [[347, "mne.chpi.extract_chpi_locs_ctf"]], "extract_chpi_locs_kit() (in module mne.chpi)": [[348, "mne.chpi.extract_chpi_locs_kit"]], "filter_chpi() (in module mne.chpi)": [[349, "mne.chpi.filter_chpi"]], "get_active_chpi() (in module mne.chpi)": [[350, "mne.chpi.get_active_chpi"]], "get_chpi_info() (in module mne.chpi)": [[351, "mne.chpi.get_chpi_info"]], "head_pos_to_trans_rot_t() (in module mne.chpi)": [[352, "mne.chpi.head_pos_to_trans_rot_t"]], "read_head_pos() (in module mne.chpi)": [[353, "mne.chpi.read_head_pos"]], "write_head_pos() (in module mne.chpi)": [[354, "mne.chpi.write_head_pos"]], "combine_evoked() (in module mne)": [[355, "mne.combine_evoked"]], "compute_covariance() (in module mne)": [[356, "mne.compute_covariance"]], "compute_proj_epochs() (in module mne)": [[357, "mne.compute_proj_epochs"]], "compute_proj_evoked() (in module mne)": [[358, "mne.compute_proj_evoked"]], "compute_proj_raw() (in module mne)": [[359, "mne.compute_proj_raw"]], "compute_rank() (in module mne)": [[360, "mne.compute_rank"]], "compute_raw_covariance() (in module mne)": [[361, "mne.compute_raw_covariance"]], "compute_source_morph() (in module mne)": [[362, "mne.compute_source_morph"]], "concatenate_epochs() (in module mne)": [[363, "mne.concatenate_epochs"]], "concatenate_events() (in module mne)": [[364, "mne.concatenate_events"]], "concatenate_raws() (in module mne)": [[365, "mne.concatenate_raws"]], "convert_forward_solution() (in module mne)": [[366, "mne.convert_forward_solution"]], "coregistration (class in mne.coreg)": [[367, "mne.coreg.Coregistration"]], "compute_dig_mri_distances() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.compute_dig_mri_distances"]], "fit_fiducials() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.fit_fiducials"]], "fit_icp() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.fit_icp"]], "omit_head_shape_points() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.omit_head_shape_points"]], "reset() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.reset"]], "scale (mne.coreg.coregistration property)": [[367, "mne.coreg.Coregistration.scale"]], "set_fid_match() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.set_fid_match"]], "set_grow_hair() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.set_grow_hair"]], "set_rotation() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.set_rotation"]], "set_scale() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.set_scale"]], "set_scale_mode() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.set_scale_mode"]], "set_translation() (mne.coreg.coregistration method)": [[367, "mne.coreg.Coregistration.set_translation"]], "trans (mne.coreg.coregistration property)": [[367, "mne.coreg.Coregistration.trans"]], "estimate_head_mri_t() (in module mne.coreg)": [[368, "mne.coreg.estimate_head_mri_t"]], "get_mni_fiducials() (in module mne.coreg)": [[369, "mne.coreg.get_mni_fiducials"]], "count_events() (in module mne)": [[370, "mne.count_events"]], "compute_whitener() (in module mne.cov)": [[371, "mne.cov.compute_whitener"]], "prepare_noise_cov() (in module mne.cov)": [[372, "mne.cov.prepare_noise_cov"]], "regularize() (in module mne.cov)": [[373, "mne.cov.regularize"]], "create_default_subject() (in module mne)": [[374, "mne.create_default_subject"]], "create_info() (in module mne)": [[375, "mne.create_info"]], "get_cuda_memory() (in module mne.cuda)": [[376, "mne.cuda.get_cuda_memory"]], "init_cuda() (in module mne.cuda)": [[377, "mne.cuda.init_cuda"]], "set_cuda_device() (in module mne.cuda)": [[378, "mne.cuda.set_cuda_device"]], "data_path() (in module mne.datasets.brainstorm.bst_auditory)": [[379, "mne.datasets.brainstorm.bst_auditory.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_raw)": [[380, "mne.datasets.brainstorm.bst_raw.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_resting)": [[381, "mne.datasets.brainstorm.bst_resting.data_path"]], "load_data() (in module mne.datasets.eegbci)": [[382, "mne.datasets.eegbci.load_data"]], "standardize() (in module mne.datasets.eegbci)": [[383, "mne.datasets.eegbci.standardize"]], "data_path() (in module mne.datasets.epilepsy_ecog)": [[384, "mne.datasets.epilepsy_ecog.data_path"]], "data_path() (in module mne.datasets.erp_core)": [[385, "mne.datasets.erp_core.data_path"]], "data_path() (in module mne.datasets.eyelink)": [[386, "mne.datasets.eyelink.data_path"]], "fetch_aparc_sub_parcellation() (in module mne.datasets)": [[387, "mne.datasets.fetch_aparc_sub_parcellation"]], "fetch_dataset() (in module mne.datasets)": [[388, "mne.datasets.fetch_dataset"]], "fetch_fsaverage() (in module mne.datasets)": [[389, "mne.datasets.fetch_fsaverage"]], "fetch_hcp_mmp_parcellation() (in module mne.datasets)": [[390, "mne.datasets.fetch_hcp_mmp_parcellation"]], "fetch_infant_template() (in module mne.datasets)": [[391, "mne.datasets.fetch_infant_template"]], "fetch_phantom() (in module mne.datasets)": [[392, "mne.datasets.fetch_phantom"]], "data_path() (in module mne.datasets.fnirs_motor)": [[393, "mne.datasets.fnirs_motor.data_path"]], "has_dataset() (in module mne.datasets)": [[394, "mne.datasets.has_dataset"]], "data_path() (in module mne.datasets.hf_sef)": [[395, "mne.datasets.hf_sef.data_path"]], "data_path() (in module mne.datasets.kiloword)": [[396, "mne.datasets.kiloword.data_path"]], "load_data() (in module mne.datasets.limo)": [[397, "mne.datasets.limo.load_data"]], "data_path() (in module mne.datasets.misc)": [[398, "mne.datasets.misc.data_path"]], "data_path() (in module mne.datasets.mtrf)": [[399, "mne.datasets.mtrf.data_path"]], "data_path() (in module mne.datasets.multimodal)": [[400, "mne.datasets.multimodal.data_path"]], "data_path() (in module mne.datasets.opm)": [[401, "mne.datasets.opm.data_path"]], "data_path() (in module mne.datasets.phantom_4dbti)": [[402, "mne.datasets.phantom_4dbti.data_path"]], "data_path() (in module mne.datasets.refmeg_noise)": [[403, "mne.datasets.refmeg_noise.data_path"]], "data_path() (in module mne.datasets.sample)": [[404, "mne.datasets.sample.data_path"]], "fetch_data() (in module mne.datasets.sleep_physionet.age)": [[405, "mne.datasets.sleep_physionet.age.fetch_data"]], "fetch_data() (in module mne.datasets.sleep_physionet.temazepam)": [[406, "mne.datasets.sleep_physionet.temazepam.fetch_data"]], "data_path() (in module mne.datasets.somato)": [[407, "mne.datasets.somato.data_path"]], "data_path() (in module mne.datasets.spm_face)": [[408, "mne.datasets.spm_face.data_path"]], "data_path() (in module mne.datasets.ssvep)": [[409, "mne.datasets.ssvep.data_path"]], "data_path() (in module mne.datasets.ucl_opm_auditory)": [[410, "mne.datasets.ucl_opm_auditory.data_path"]], "data_path() (in module mne.datasets.visual_92_categories)": [[411, "mne.datasets.visual_92_categories.data_path"]], "decimate_surface() (in module mne)": [[412, "mne.decimate_surface"]], "csp (class in mne.decoding)": [[413, "mne.decoding.CSP"]], "fit() (mne.decoding.csp method)": [[413, "mne.decoding.CSP.fit"]], "fit_transform() (mne.decoding.csp method)": [[413, "mne.decoding.CSP.fit_transform"]], "get_params() (mne.decoding.csp method)": [[413, "mne.decoding.CSP.get_params"]], "plot_filters() (mne.decoding.csp method)": [[413, "mne.decoding.CSP.plot_filters"]], "plot_patterns() (mne.decoding.csp method)": [[413, "mne.decoding.CSP.plot_patterns"]], "set_params() (mne.decoding.csp method)": [[413, "mne.decoding.CSP.set_params"]], "transform() (mne.decoding.csp method)": [[413, "mne.decoding.CSP.transform"]], "ems (class in mne.decoding)": [[414, "mne.decoding.EMS"]], "fit() (mne.decoding.ems method)": [[414, "mne.decoding.EMS.fit"]], "fit_transform() (mne.decoding.ems method)": [[414, "mne.decoding.EMS.fit_transform"]], "get_params() (mne.decoding.ems method)": [[414, "mne.decoding.EMS.get_params"]], "set_params() (mne.decoding.ems method)": [[414, "mne.decoding.EMS.set_params"]], "transform() (mne.decoding.ems method)": [[414, "mne.decoding.EMS.transform"]], "filterestimator (class in mne.decoding)": [[415, "mne.decoding.FilterEstimator"]], "fit() (mne.decoding.filterestimator method)": [[415, "mne.decoding.FilterEstimator.fit"]], "fit_transform() (mne.decoding.filterestimator method)": [[415, "mne.decoding.FilterEstimator.fit_transform"]], "transform() (mne.decoding.filterestimator method)": [[415, "mne.decoding.FilterEstimator.transform"]], "generalizingestimator (class in mne.decoding)": [[416, "mne.decoding.GeneralizingEstimator"]], "decision_function() (mne.decoding.generalizingestimator method)": [[416, "mne.decoding.GeneralizingEstimator.decision_function"]], "fit() (mne.decoding.generalizingestimator method)": [[416, "mne.decoding.GeneralizingEstimator.fit"]], "fit_transform() (mne.decoding.generalizingestimator method)": [[416, "mne.decoding.GeneralizingEstimator.fit_transform"]], "get_params() (mne.decoding.generalizingestimator method)": [[416, "mne.decoding.GeneralizingEstimator.get_params"]], "predict() (mne.decoding.generalizingestimator method)": [[416, "mne.decoding.GeneralizingEstimator.predict"]], "predict_proba() (mne.decoding.generalizingestimator method)": [[416, "mne.decoding.GeneralizingEstimator.predict_proba"]], "score() (mne.decoding.generalizingestimator method)": [[416, "mne.decoding.GeneralizingEstimator.score"]], "set_params() (mne.decoding.generalizingestimator method)": [[416, "mne.decoding.GeneralizingEstimator.set_params"]], "transform() (mne.decoding.generalizingestimator method)": [[416, "mne.decoding.GeneralizingEstimator.transform"]], "linearmodel (class in mne.decoding)": [[417, "mne.decoding.LinearModel"]], "decision_function() (mne.decoding.linearmodel method)": [[417, "mne.decoding.LinearModel.decision_function"]], "fit() (mne.decoding.linearmodel method)": [[417, "mne.decoding.LinearModel.fit"]], "fit_transform() (mne.decoding.linearmodel method)": [[417, "mne.decoding.LinearModel.fit_transform"]], "get_params() (mne.decoding.linearmodel method)": [[417, "mne.decoding.LinearModel.get_params"]], "predict() (mne.decoding.linearmodel method)": [[417, "mne.decoding.LinearModel.predict"]], "predict_proba() (mne.decoding.linearmodel method)": [[417, "mne.decoding.LinearModel.predict_proba"]], "score() (mne.decoding.linearmodel method)": [[417, "mne.decoding.LinearModel.score"]], "set_params() (mne.decoding.linearmodel method)": [[417, "mne.decoding.LinearModel.set_params"]], "transform() (mne.decoding.linearmodel method)": [[417, "mne.decoding.LinearModel.transform"]], "psdestimator (class in mne.decoding)": [[418, "mne.decoding.PSDEstimator"]], "fit() (mne.decoding.psdestimator method)": [[418, "mne.decoding.PSDEstimator.fit"]], "fit_transform() (mne.decoding.psdestimator method)": [[418, "mne.decoding.PSDEstimator.fit_transform"]], "transform() (mne.decoding.psdestimator method)": [[418, "mne.decoding.PSDEstimator.transform"]], "receptivefield (class in mne.decoding)": [[419, "mne.decoding.ReceptiveField"]], "fit() (mne.decoding.receptivefield method)": [[419, "mne.decoding.ReceptiveField.fit"]], "get_params() (mne.decoding.receptivefield method)": [[419, "mne.decoding.ReceptiveField.get_params"]], "predict() (mne.decoding.receptivefield method)": [[419, "mne.decoding.ReceptiveField.predict"]], "score() (mne.decoding.receptivefield method)": [[419, "mne.decoding.ReceptiveField.score"]], "set_params() (mne.decoding.receptivefield method)": [[419, "mne.decoding.ReceptiveField.set_params"]], "spoc (class in mne.decoding)": [[420, "mne.decoding.SPoC"]], "fit() (mne.decoding.spoc method)": [[420, "mne.decoding.SPoC.fit"]], "fit_transform() (mne.decoding.spoc method)": [[420, "mne.decoding.SPoC.fit_transform"]], "get_params() (mne.decoding.spoc method)": [[420, "mne.decoding.SPoC.get_params"]], "plot_filters() (mne.decoding.spoc method)": [[420, "mne.decoding.SPoC.plot_filters"]], "plot_patterns() (mne.decoding.spoc method)": [[420, "mne.decoding.SPoC.plot_patterns"]], "set_params() (mne.decoding.spoc method)": [[420, "mne.decoding.SPoC.set_params"]], "transform() (mne.decoding.spoc method)": [[420, "mne.decoding.SPoC.transform"]], "ssd (class in mne.decoding)": [[421, "mne.decoding.SSD"]], "apply() (mne.decoding.ssd method)": [[421, "mne.decoding.SSD.apply"]], "fit() (mne.decoding.ssd method)": [[421, "mne.decoding.SSD.fit"]], "fit_transform() (mne.decoding.ssd method)": [[421, "mne.decoding.SSD.fit_transform"]], "get_params() (mne.decoding.ssd method)": [[421, "mne.decoding.SSD.get_params"]], "get_spectral_ratio() (mne.decoding.ssd method)": [[421, "mne.decoding.SSD.get_spectral_ratio"]], "inverse_transform() (mne.decoding.ssd method)": [[421, "mne.decoding.SSD.inverse_transform"]], "set_params() (mne.decoding.ssd method)": [[421, "mne.decoding.SSD.set_params"]], "transform() (mne.decoding.ssd method)": [[421, "mne.decoding.SSD.transform"]], "scaler (class in mne.decoding)": [[422, "mne.decoding.Scaler"]], "fit() (mne.decoding.scaler method)": [[422, "mne.decoding.Scaler.fit"]], "fit_transform() (mne.decoding.scaler method)": [[422, "mne.decoding.Scaler.fit_transform"]], "get_params() (mne.decoding.scaler method)": [[422, "mne.decoding.Scaler.get_params"]], "inverse_transform() (mne.decoding.scaler method)": [[422, "mne.decoding.Scaler.inverse_transform"]], "set_params() (mne.decoding.scaler method)": [[422, "mne.decoding.Scaler.set_params"]], "transform() (mne.decoding.scaler method)": [[422, "mne.decoding.Scaler.transform"]], "slidingestimator (class in mne.decoding)": [[423, "mne.decoding.SlidingEstimator"]], "decision_function() (mne.decoding.slidingestimator method)": [[423, "mne.decoding.SlidingEstimator.decision_function"]], "fit() (mne.decoding.slidingestimator method)": [[423, "mne.decoding.SlidingEstimator.fit"]], "fit_transform() (mne.decoding.slidingestimator method)": [[423, "mne.decoding.SlidingEstimator.fit_transform"]], "get_params() (mne.decoding.slidingestimator method)": [[423, "mne.decoding.SlidingEstimator.get_params"]], "predict() (mne.decoding.slidingestimator method)": [[423, "mne.decoding.SlidingEstimator.predict"]], "predict_proba() (mne.decoding.slidingestimator method)": [[423, "mne.decoding.SlidingEstimator.predict_proba"]], "score() (mne.decoding.slidingestimator method)": [[423, "mne.decoding.SlidingEstimator.score"]], "set_params() (mne.decoding.slidingestimator method)": [[423, "mne.decoding.SlidingEstimator.set_params"]], "transform() (mne.decoding.slidingestimator method)": [[423, "mne.decoding.SlidingEstimator.transform"]], "temporalfilter (class in mne.decoding)": [[424, "mne.decoding.TemporalFilter"]], "fit() (mne.decoding.temporalfilter method)": [[424, "mne.decoding.TemporalFilter.fit"]], "fit_transform() (mne.decoding.temporalfilter method)": [[424, "mne.decoding.TemporalFilter.fit_transform"]], "transform() (mne.decoding.temporalfilter method)": [[424, "mne.decoding.TemporalFilter.transform"]], "timedelayingridge (class in mne.decoding)": [[425, "mne.decoding.TimeDelayingRidge"]], "fit() (mne.decoding.timedelayingridge method)": [[425, "mne.decoding.TimeDelayingRidge.fit"]], "get_params() (mne.decoding.timedelayingridge method)": [[425, "mne.decoding.TimeDelayingRidge.get_params"]], "predict() (mne.decoding.timedelayingridge method)": [[425, "mne.decoding.TimeDelayingRidge.predict"]], "set_params() (mne.decoding.timedelayingridge method)": [[425, "mne.decoding.TimeDelayingRidge.set_params"]], "timefrequency (class in mne.decoding)": [[426, "mne.decoding.TimeFrequency"]], "fit() (mne.decoding.timefrequency method)": [[426, "mne.decoding.TimeFrequency.fit"]], "fit_transform() (mne.decoding.timefrequency method)": [[426, "mne.decoding.TimeFrequency.fit_transform"]], "get_params() (mne.decoding.timefrequency method)": [[426, "mne.decoding.TimeFrequency.get_params"]], "set_params() (mne.decoding.timefrequency method)": [[426, "mne.decoding.TimeFrequency.set_params"]], "transform() (mne.decoding.timefrequency method)": [[426, "mne.decoding.TimeFrequency.transform"]], "unsupervisedspatialfilter (class in mne.decoding)": [[427, "mne.decoding.UnsupervisedSpatialFilter"]], "fit() (mne.decoding.unsupervisedspatialfilter method)": [[427, "mne.decoding.UnsupervisedSpatialFilter.fit"]], "fit_transform() (mne.decoding.unsupervisedspatialfilter method)": [[427, "mne.decoding.UnsupervisedSpatialFilter.fit_transform"]], "get_params() (mne.decoding.unsupervisedspatialfilter method)": [[427, "mne.decoding.UnsupervisedSpatialFilter.get_params"]], "inverse_transform() (mne.decoding.unsupervisedspatialfilter method)": [[427, "mne.decoding.UnsupervisedSpatialFilter.inverse_transform"]], "set_params() (mne.decoding.unsupervisedspatialfilter method)": [[427, "mne.decoding.UnsupervisedSpatialFilter.set_params"]], "transform() (mne.decoding.unsupervisedspatialfilter method)": [[427, "mne.decoding.UnsupervisedSpatialFilter.transform"]], "vectorizer (class in mne.decoding)": [[428, "mne.decoding.Vectorizer"]], "fit() (mne.decoding.vectorizer method)": [[428, "mne.decoding.Vectorizer.fit"]], "fit_transform() (mne.decoding.vectorizer method)": [[428, "mne.decoding.Vectorizer.fit_transform"]], "inverse_transform() (mne.decoding.vectorizer method)": [[428, "mne.decoding.Vectorizer.inverse_transform"]], "transform() (mne.decoding.vectorizer method)": [[428, "mne.decoding.Vectorizer.transform"]], "compute_ems() (in module mne.decoding)": [[429, "mne.decoding.compute_ems"]], "cross_val_multiscore() (in module mne.decoding)": [[430, "mne.decoding.cross_val_multiscore"]], "get_coef() (in module mne.decoding)": [[431, "mne.decoding.get_coef"]], "dig_mri_distances() (in module mne)": [[432, "mne.dig_mri_distances"]], "get_phantom_dipoles() (in module mne.dipole)": [[433, "mne.dipole.get_phantom_dipoles"]], "average_movements() (in module mne.epochs)": [[434, "mne.epochs.average_movements"]], "combine_event_ids() (in module mne.epochs)": [[435, "mne.epochs.combine_event_ids"]], "equalize_epoch_counts() (in module mne.epochs)": [[436, "mne.epochs.equalize_epoch_counts"]], "make_metadata() (in module mne.epochs)": [[437, "mne.epochs.make_metadata"]], "equalize_channels() (in module mne)": [[438, "mne.equalize_channels"]], "define_target_events() (in module mne.event)": [[439, "mne.event.define_target_events"]], "match_event_names() (in module mne.event)": [[440, "mne.event.match_event_names"]], "shift_time_events() (in module mne.event)": [[441, "mne.event.shift_time_events"]], "events_from_annotations() (in module mne)": [[442, "mne.events_from_annotations"]], "export_epochs() (in module mne.export)": [[443, "mne.export.export_epochs"]], "export_evokeds() (in module mne.export)": [[444, "mne.export.export_evokeds"]], "export_evokeds_mff() (in module mne.export)": [[445, "mne.export.export_evokeds_mff"]], "export_raw() (in module mne.export)": [[446, "mne.export.export_raw"]], "extract_label_time_course() (in module mne)": [[447, "mne.extract_label_time_course"]], "construct_iir_filter() (in module mne.filter)": [[448, "mne.filter.construct_iir_filter"]], "create_filter() (in module mne.filter)": [[449, "mne.filter.create_filter"]], "estimate_ringing_samples() (in module mne.filter)": [[450, "mne.filter.estimate_ringing_samples"]], "filter_data() (in module mne.filter)": [[451, "mne.filter.filter_data"]], "notch_filter() (in module mne.filter)": [[452, "mne.filter.notch_filter"]], "resample() (in module mne.filter)": [[453, "mne.filter.resample"]], "find_events() (in module mne)": [[454, "mne.find_events"]], "find_stim_steps() (in module mne)": [[455, "mne.find_stim_steps"]], "fit_dipole() (in module mne)": [[456, "mne.fit_dipole"]], "compute_depth_prior() (in module mne.forward)": [[457, "mne.forward.compute_depth_prior"]], "compute_orient_prior() (in module mne.forward)": [[458, "mne.forward.compute_orient_prior"]], "restrict_forward_to_label() (in module mne.forward)": [[459, "mne.forward.restrict_forward_to_label"]], "restrict_forward_to_stc() (in module mne.forward)": [[460, "mne.forward.restrict_forward_to_stc"]], "get_config() (in module mne)": [[461, "mne.get_config"]], "get_config_path() (in module mne)": [[462, "mne.get_config_path"]], "get_head_surf() (in module mne)": [[463, "mne.get_head_surf"]], "get_meg_helmet_surf() (in module mne)": [[464, "mne.get_meg_helmet_surf"]], "get_montage_volume_labels() (in module mne)": [[465, "mne.get_montage_volume_labels"]], "get_volume_labels_from_aseg() (in module mne)": [[466, "mne.get_volume_labels_from_aseg"]], "get_volume_labels_from_src() (in module mne)": [[467, "mne.get_volume_labels_from_src"]], "grade_to_tris() (in module mne)": [[468, "mne.grade_to_tris"]], "grade_to_vertices() (in module mne)": [[469, "mne.grade_to_vertices"]], "grand_average() (in module mne)": [[470, "mne.grand_average"]], "grow_labels() (in module mne)": [[471, "mne.grow_labels"]], "coregistration() (in module mne.gui)": [[472, "mne.gui.coregistration"]], "locate_ieeg() (in module mne.gui)": [[473, "mne.gui.locate_ieeg"]], "head_to_mni() (in module mne)": [[474, "mne.head_to_mni"]], "head_to_mri() (in module mne)": [[475, "mne.head_to_mri"]], "gamma_map() (in module mne.inverse_sparse)": [[476, "mne.inverse_sparse.gamma_map"]], "make_stc_from_dipoles() (in module mne.inverse_sparse)": [[477, "mne.inverse_sparse.make_stc_from_dipoles"]], "mixed_norm() (in module mne.inverse_sparse)": [[478, "mne.inverse_sparse.mixed_norm"]], "tf_mixed_norm() (in module mne.inverse_sparse)": [[479, "mne.inverse_sparse.tf_mixed_norm"]], "baseraw (class in mne.io)": [[480, "mne.io.BaseRaw"]], "raw (class in mne.io)": [[481, "mne.io.Raw"]], "__contains__() (mne.io.raw method)": [[481, "mne.io.Raw.__contains__"]], "__getitem__() (mne.io.raw method)": [[481, "mne.io.Raw.__getitem__"]], "__len__() (mne.io.raw method)": [[481, "mne.io.Raw.__len__"]], "acqparser (mne.io.raw property)": [[481, "mne.io.Raw.acqparser"]], "add_channels() (mne.io.raw method)": [[481, "mne.io.Raw.add_channels"]], "add_events() (mne.io.raw method)": [[481, "mne.io.Raw.add_events"]], "add_proj() (mne.io.raw method)": [[481, "mne.io.Raw.add_proj"]], "add_reference_channels() (mne.io.raw method)": [[481, "mne.io.Raw.add_reference_channels"]], "annotations (mne.io.raw property)": [[481, "mne.io.Raw.annotations"]], "anonymize() (mne.io.raw method)": [[481, "mne.io.Raw.anonymize"]], "append() (mne.io.raw method)": [[481, "mne.io.Raw.append"]], "apply_function() (mne.io.raw method)": [[481, "mne.io.Raw.apply_function"]], "apply_gradient_compensation() (mne.io.raw method)": [[481, "mne.io.Raw.apply_gradient_compensation"]], "apply_hilbert() (mne.io.raw method)": [[481, "mne.io.Raw.apply_hilbert"]], "apply_proj() (mne.io.raw method)": [[481, "mne.io.Raw.apply_proj"]], "ch_names (mne.io.raw property)": [[481, "mne.io.Raw.ch_names"]], "close() (mne.io.raw method)": [[481, "mne.io.Raw.close"]], "compensation_grade (mne.io.raw property)": [[481, "mne.io.Raw.compensation_grade"]], "compute_psd() (mne.io.raw method)": [[481, "mne.io.Raw.compute_psd"]], "copy() (mne.io.raw method)": [[481, "mne.io.Raw.copy"]], "crop() (mne.io.raw method)": [[481, "mne.io.Raw.crop"]], "crop_by_annotations() (mne.io.raw method)": [[481, "mne.io.Raw.crop_by_annotations"]], "decimate() (mne.io.raw method)": [[481, "mne.io.Raw.decimate"]], "del_proj() (mne.io.raw method)": [[481, "mne.io.Raw.del_proj"]], "describe() (mne.io.raw method)": [[481, "mne.io.Raw.describe"]], "drop_channels() (mne.io.raw method)": [[481, "mne.io.Raw.drop_channels"]], "export() (mne.io.raw method)": [[481, "mne.io.Raw.export"]], "filenames (mne.io.raw property)": [[481, "mne.io.Raw.filenames"]], "filter() (mne.io.raw method)": [[481, "mne.io.Raw.filter"]], "first_samp (mne.io.raw property)": [[481, "mne.io.Raw.first_samp"]], "first_time (mne.io.raw property)": [[481, "mne.io.Raw.first_time"]], "fix_mag_coil_types() (mne.io.raw method)": [[481, "mne.io.Raw.fix_mag_coil_types"]], "get_channel_types() (mne.io.raw method)": [[481, "mne.io.Raw.get_channel_types"]], "get_data() (mne.io.raw method)": [[481, "mne.io.Raw.get_data"]], "get_montage() (mne.io.raw method)": [[481, "mne.io.Raw.get_montage"]], "interpolate_bads() (mne.io.raw method)": [[481, "mne.io.Raw.interpolate_bads"]], "last_samp (mne.io.raw property)": [[481, "mne.io.Raw.last_samp"]], "load_bad_channels() (mne.io.raw method)": [[481, "mne.io.Raw.load_bad_channels"]], "load_data() (mne.io.raw method)": [[481, "mne.io.Raw.load_data"]], "n_times (mne.io.raw property)": [[481, "mne.io.Raw.n_times"]], "notch_filter() (mne.io.raw method)": [[481, "mne.io.Raw.notch_filter"]], "pick() (mne.io.raw method)": [[481, "mne.io.Raw.pick"]], "pick_channels() (mne.io.raw method)": [[481, "mne.io.Raw.pick_channels"]], "pick_types() (mne.io.raw method)": [[481, "mne.io.Raw.pick_types"]], "plot() (mne.io.raw method)": [[481, "mne.io.Raw.plot"]], "plot_projs_topomap() (mne.io.raw method)": [[481, "mne.io.Raw.plot_projs_topomap"]], "plot_psd() (mne.io.raw method)": [[481, "mne.io.Raw.plot_psd"]], "plot_psd_topo() (mne.io.raw method)": [[481, "mne.io.Raw.plot_psd_topo"]], "plot_psd_topomap() (mne.io.raw method)": [[481, "mne.io.Raw.plot_psd_topomap"]], "plot_sensors() (mne.io.raw method)": [[481, "mne.io.Raw.plot_sensors"]], "proj (mne.io.raw property)": [[481, "mne.io.Raw.proj"]], "rename_channels() (mne.io.raw method)": [[481, "mne.io.Raw.rename_channels"]], "reorder_channels() (mne.io.raw method)": [[481, "mne.io.Raw.reorder_channels"]], "resample() (mne.io.raw method)": [[481, "mne.io.Raw.resample"]], "save() (mne.io.raw method)": [[481, "mne.io.Raw.save"]], "savgol_filter() (mne.io.raw method)": [[481, "mne.io.Raw.savgol_filter"]], "set_annotations() (mne.io.raw method)": [[481, "mne.io.Raw.set_annotations"]], "set_channel_types() (mne.io.raw method)": [[481, "mne.io.Raw.set_channel_types"]], "set_eeg_reference() (mne.io.raw method)": [[481, "mne.io.Raw.set_eeg_reference"]], "set_meas_date() (mne.io.raw method)": [[481, "mne.io.Raw.set_meas_date"]], "set_montage() (mne.io.raw method)": [[481, "mne.io.Raw.set_montage"]], "shift_time() (mne.io.raw method)": [[481, "mne.io.Raw.shift_time"]], "time_as_index() (mne.io.raw method)": [[481, "mne.io.Raw.time_as_index"]], "times (mne.io.raw property)": [[481, "mne.io.Raw.times"]], "tmax (mne.io.raw property)": [[481, "mne.io.Raw.tmax"]], "tmin (mne.io.raw property)": [[481, "mne.io.Raw.tmin"]], "to_data_frame() (mne.io.raw method)": [[481, "mne.io.Raw.to_data_frame"]], "rawarray (class in mne.io)": [[482, "mne.io.RawArray"]], "__contains__() (mne.io.rawarray method)": [[482, "mne.io.RawArray.__contains__"]], "__getitem__() (mne.io.rawarray method)": [[482, "mne.io.RawArray.__getitem__"]], "__len__() (mne.io.rawarray method)": [[482, "mne.io.RawArray.__len__"]], "add_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.add_channels"]], "add_events() (mne.io.rawarray method)": [[482, "mne.io.RawArray.add_events"]], "add_proj() (mne.io.rawarray method)": [[482, "mne.io.RawArray.add_proj"]], "add_reference_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.add_reference_channels"]], "annotations (mne.io.rawarray property)": [[482, "mne.io.RawArray.annotations"]], "anonymize() (mne.io.rawarray method)": [[482, "mne.io.RawArray.anonymize"]], "append() (mne.io.rawarray method)": [[482, "mne.io.RawArray.append"]], "apply_function() (mne.io.rawarray method)": [[482, "mne.io.RawArray.apply_function"]], "apply_gradient_compensation() (mne.io.rawarray method)": [[482, "mne.io.RawArray.apply_gradient_compensation"]], "apply_hilbert() (mne.io.rawarray method)": [[482, "mne.io.RawArray.apply_hilbert"]], "apply_proj() (mne.io.rawarray method)": [[482, "mne.io.RawArray.apply_proj"]], "ch_names (mne.io.rawarray property)": [[482, "mne.io.RawArray.ch_names"]], "close() (mne.io.rawarray method)": [[482, "mne.io.RawArray.close"]], "compensation_grade (mne.io.rawarray property)": [[482, "mne.io.RawArray.compensation_grade"]], "compute_psd() (mne.io.rawarray method)": [[482, "mne.io.RawArray.compute_psd"]], "copy() (mne.io.rawarray method)": [[482, "mne.io.RawArray.copy"]], "crop() (mne.io.rawarray method)": [[482, "mne.io.RawArray.crop"]], "crop_by_annotations() (mne.io.rawarray method)": [[482, "mne.io.RawArray.crop_by_annotations"]], "decimate() (mne.io.rawarray method)": [[482, "mne.io.RawArray.decimate"]], "del_proj() (mne.io.rawarray method)": [[482, "mne.io.RawArray.del_proj"]], "describe() (mne.io.rawarray method)": [[482, "mne.io.RawArray.describe"]], "drop_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.drop_channels"]], "export() (mne.io.rawarray method)": [[482, "mne.io.RawArray.export"]], "filenames (mne.io.rawarray property)": [[482, "mne.io.RawArray.filenames"]], "filter() (mne.io.rawarray method)": [[482, "mne.io.RawArray.filter"]], "first_samp (mne.io.rawarray property)": [[482, "mne.io.RawArray.first_samp"]], "first_time (mne.io.rawarray property)": [[482, "mne.io.RawArray.first_time"]], "get_channel_types() (mne.io.rawarray method)": [[482, "mne.io.RawArray.get_channel_types"]], "get_data() (mne.io.rawarray method)": [[482, "mne.io.RawArray.get_data"]], "get_montage() (mne.io.rawarray method)": [[482, "mne.io.RawArray.get_montage"]], "interpolate_bads() (mne.io.rawarray method)": [[482, "mne.io.RawArray.interpolate_bads"]], "last_samp (mne.io.rawarray property)": [[482, "mne.io.RawArray.last_samp"]], "load_bad_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.load_bad_channels"]], "load_data() (mne.io.rawarray method)": [[482, "mne.io.RawArray.load_data"]], "n_times (mne.io.rawarray property)": [[482, "mne.io.RawArray.n_times"]], "notch_filter() (mne.io.rawarray method)": [[482, "mne.io.RawArray.notch_filter"]], "pick() (mne.io.rawarray method)": [[482, "mne.io.RawArray.pick"]], "pick_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.pick_channels"]], "pick_types() (mne.io.rawarray method)": [[482, "mne.io.RawArray.pick_types"]], "plot() (mne.io.rawarray method)": [[482, "mne.io.RawArray.plot"]], "plot_projs_topomap() (mne.io.rawarray method)": [[482, "mne.io.RawArray.plot_projs_topomap"]], "plot_psd() (mne.io.rawarray method)": [[482, "mne.io.RawArray.plot_psd"]], "plot_psd_topo() (mne.io.rawarray method)": [[482, "mne.io.RawArray.plot_psd_topo"]], "plot_psd_topomap() (mne.io.rawarray method)": [[482, "mne.io.RawArray.plot_psd_topomap"]], "plot_sensors() (mne.io.rawarray method)": [[482, "mne.io.RawArray.plot_sensors"]], "proj (mne.io.rawarray property)": [[482, "mne.io.RawArray.proj"]], "rename_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.rename_channels"]], "reorder_channels() (mne.io.rawarray method)": [[482, "mne.io.RawArray.reorder_channels"]], "resample() (mne.io.rawarray method)": [[482, "mne.io.RawArray.resample"]], "save() (mne.io.rawarray method)": [[482, "mne.io.RawArray.save"]], "savgol_filter() (mne.io.rawarray method)": [[482, "mne.io.RawArray.savgol_filter"]], "set_annotations() (mne.io.rawarray method)": [[482, "mne.io.RawArray.set_annotations"]], "set_channel_types() (mne.io.rawarray method)": [[482, "mne.io.RawArray.set_channel_types"]], "set_eeg_reference() (mne.io.rawarray method)": [[482, "mne.io.RawArray.set_eeg_reference"]], "set_meas_date() (mne.io.rawarray method)": [[482, "mne.io.RawArray.set_meas_date"]], "set_montage() (mne.io.rawarray method)": [[482, "mne.io.RawArray.set_montage"]], "shift_time() (mne.io.rawarray method)": [[482, "mne.io.RawArray.shift_time"]], "time_as_index() (mne.io.rawarray method)": [[482, "mne.io.RawArray.time_as_index"]], "times (mne.io.rawarray property)": [[482, "mne.io.RawArray.times"]], "tmax (mne.io.rawarray property)": [[482, "mne.io.RawArray.tmax"]], "tmin (mne.io.rawarray property)": [[482, "mne.io.RawArray.tmin"]], "to_data_frame() (mne.io.rawarray method)": [[482, "mne.io.RawArray.to_data_frame"]], "anonymize_info() (in module mne.io)": [[483, "mne.io.anonymize_info"]], "read_mrk() (in module mne.io.kit)": [[484, "mne.io.kit.read_mrk"]], "read_fiducials() (in module mne.io)": [[485, "mne.io.read_fiducials"]], "read_info() (in module mne.io)": [[486, "mne.io.read_info"]], "read_raw() (in module mne.io)": [[487, "mne.io.read_raw"]], "read_raw_artemis123() (in module mne.io)": [[488, "mne.io.read_raw_artemis123"]], "read_raw_bdf() (in module mne.io)": [[489, "mne.io.read_raw_bdf"]], "read_raw_boxy() (in module mne.io)": [[490, "mne.io.read_raw_boxy"]], "read_raw_brainvision() (in module mne.io)": [[491, "mne.io.read_raw_brainvision"]], "read_raw_bti() (in module mne.io)": [[492, "mne.io.read_raw_bti"]], "read_raw_cnt() (in module mne.io)": [[493, "mne.io.read_raw_cnt"]], "read_raw_ctf() (in module mne.io)": [[494, "mne.io.read_raw_ctf"]], "read_raw_curry() (in module mne.io)": [[495, "mne.io.read_raw_curry"]], "read_raw_edf() (in module mne.io)": [[496, "mne.io.read_raw_edf"]], "read_raw_eeglab() (in module mne.io)": [[497, "mne.io.read_raw_eeglab"]], "read_raw_egi() (in module mne.io)": [[498, "mne.io.read_raw_egi"]], "read_raw_eximia() (in module mne.io)": [[499, "mne.io.read_raw_eximia"]], "read_raw_eyelink() (in module mne.io)": [[500, "mne.io.read_raw_eyelink"]], "read_raw_fieldtrip() (in module mne.io)": [[501, "mne.io.read_raw_fieldtrip"]], "read_raw_fif() (in module mne.io)": [[502, "mne.io.read_raw_fif"]], "read_raw_fil() (in module mne.io)": [[503, "mne.io.read_raw_fil"]], "read_raw_gdf() (in module mne.io)": [[504, "mne.io.read_raw_gdf"]], "read_raw_hitachi() (in module mne.io)": [[505, "mne.io.read_raw_hitachi"]], "read_raw_kit() (in module mne.io)": [[506, "mne.io.read_raw_kit"]], "read_raw_nedf() (in module mne.io)": [[507, "mne.io.read_raw_nedf"]], "read_raw_nicolet() (in module mne.io)": [[508, "mne.io.read_raw_nicolet"]], "read_raw_nihon() (in module mne.io)": [[509, "mne.io.read_raw_nihon"]], "read_raw_nirx() (in module mne.io)": [[510, "mne.io.read_raw_nirx"]], "read_raw_persyst() (in module mne.io)": [[511, "mne.io.read_raw_persyst"]], "read_raw_snirf() (in module mne.io)": [[512, "mne.io.read_raw_snirf"]], "show_fiff() (in module mne.io)": [[513, "mne.io.show_fiff"]], "write_fiducials() (in module mne.io)": [[514, "mne.io.write_fiducials"]], "select_sources() (in module mne.label)": [[515, "mne.label.select_sources"]], "label_sign_flip() (in module mne)": [[516, "mne.label_sign_flip"]], "labels_to_stc() (in module mne)": [[517, "mne.labels_to_stc"]], "make_ad_hoc_cov() (in module mne)": [[518, "mne.make_ad_hoc_cov"]], "make_bem_model() (in module mne)": [[519, "mne.make_bem_model"]], "make_bem_solution() (in module mne)": [[520, "mne.make_bem_solution"]], "make_field_map() (in module mne)": [[521, "mne.make_field_map"]], "make_fixed_length_epochs() (in module mne)": [[522, "mne.make_fixed_length_epochs"]], "make_fixed_length_events() (in module mne)": [[523, "mne.make_fixed_length_events"]], "make_forward_dipole() (in module mne)": [[524, "mne.make_forward_dipole"]], "make_forward_solution() (in module mne)": [[525, "mne.make_forward_solution"]], "make_sphere_model() (in module mne)": [[526, "mne.make_sphere_model"]], "merge_events() (in module mne)": [[527, "mne.merge_events"]], "inverseoperator (class in mne.minimum_norm)": [[528, "mne.minimum_norm.InverseOperator"]], "__contains__() (mne.minimum_norm.inverseoperator method)": [[528, "mne.minimum_norm.InverseOperator.__contains__"]], "__getitem__() (mne.minimum_norm.inverseoperator method)": [[528, "mne.minimum_norm.InverseOperator.__getitem__"]], "__iter__() (mne.minimum_norm.inverseoperator method)": [[528, "mne.minimum_norm.InverseOperator.__iter__"]], "__len__() (mne.minimum_norm.inverseoperator method)": [[528, "mne.minimum_norm.InverseOperator.__len__"]], "clear() (mne.minimum_norm.inverseoperator method)": [[528, "mne.minimum_norm.InverseOperator.clear"]], "copy() (mne.minimum_norm.inverseoperator method)": [[528, "mne.minimum_norm.InverseOperator.copy"]], "fromkeys() (mne.minimum_norm.inverseoperator method)": [[528, "mne.minimum_norm.InverseOperator.fromkeys"]], "get() (mne.minimum_norm.inverseoperator method)": [[528, "mne.minimum_norm.InverseOperator.get"]], "items() (mne.minimum_norm.inverseoperator method)": [[528, "mne.minimum_norm.InverseOperator.items"]], "keys() (mne.minimum_norm.inverseoperator method)": [[528, "mne.minimum_norm.InverseOperator.keys"]], "pop() (mne.minimum_norm.inverseoperator method)": [[528, "mne.minimum_norm.InverseOperator.pop"]], "popitem() (mne.minimum_norm.inverseoperator method)": [[528, "mne.minimum_norm.InverseOperator.popitem"]], "setdefault() (mne.minimum_norm.inverseoperator method)": [[528, "mne.minimum_norm.InverseOperator.setdefault"]], "update() (mne.minimum_norm.inverseoperator method)": [[528, "mne.minimum_norm.InverseOperator.update"]], "values() (mne.minimum_norm.inverseoperator method)": [[528, "mne.minimum_norm.InverseOperator.values"]], "apply_inverse() (in module mne.minimum_norm)": [[529, "mne.minimum_norm.apply_inverse"]], "apply_inverse_cov() (in module mne.minimum_norm)": [[530, "mne.minimum_norm.apply_inverse_cov"]], "apply_inverse_epochs() (in module mne.minimum_norm)": [[531, "mne.minimum_norm.apply_inverse_epochs"]], "apply_inverse_raw() (in module mne.minimum_norm)": [[532, "mne.minimum_norm.apply_inverse_raw"]], "apply_inverse_tfr_epochs() (in module mne.minimum_norm)": [[533, "mne.minimum_norm.apply_inverse_tfr_epochs"]], "compute_rank_inverse() (in module mne.minimum_norm)": [[534, "mne.minimum_norm.compute_rank_inverse"]], "compute_source_psd() (in module mne.minimum_norm)": [[535, "mne.minimum_norm.compute_source_psd"]], "compute_source_psd_epochs() (in module mne.minimum_norm)": [[536, "mne.minimum_norm.compute_source_psd_epochs"]], "estimate_snr() (in module mne.minimum_norm)": [[537, "mne.minimum_norm.estimate_snr"]], "get_cross_talk() (in module mne.minimum_norm)": [[538, "mne.minimum_norm.get_cross_talk"]], "get_point_spread() (in module mne.minimum_norm)": [[539, "mne.minimum_norm.get_point_spread"]], "make_inverse_operator() (in module mne.minimum_norm)": [[540, "mne.minimum_norm.make_inverse_operator"]], "make_inverse_resolution_matrix() (in module mne.minimum_norm)": [[541, "mne.minimum_norm.make_inverse_resolution_matrix"]], "prepare_inverse_operator() (in module mne.minimum_norm)": [[542, "mne.minimum_norm.prepare_inverse_operator"]], "read_inverse_operator() (in module mne.minimum_norm)": [[543, "mne.minimum_norm.read_inverse_operator"]], "resolution_metrics() (in module mne.minimum_norm)": [[544, "mne.minimum_norm.resolution_metrics"]], "source_band_induced_power() (in module mne.minimum_norm)": [[545, "mne.minimum_norm.source_band_induced_power"]], "source_induced_power() (in module mne.minimum_norm)": [[546, "mne.minimum_norm.source_induced_power"]], "write_inverse_operator() (in module mne.minimum_norm)": [[547, "mne.minimum_norm.write_inverse_operator"]], "morph_labels() (in module mne)": [[548, "mne.morph_labels"]], "morph_source_spaces() (in module mne)": [[549, "mne.morph_source_spaces"]], "open_docs() (in module mne)": [[550, "mne.open_docs"]], "open_report() (in module mne)": [[551, "mne.open_report"]], "parse_config() (in module mne)": [[552, "mne.parse_config"]], "pick_channels() (in module mne)": [[553, "mne.pick_channels"]], "pick_channels_cov() (in module mne)": [[554, "mne.pick_channels_cov"]], "pick_channels_forward() (in module mne)": [[555, "mne.pick_channels_forward"]], "pick_channels_regexp() (in module mne)": [[556, "mne.pick_channels_regexp"]], "pick_events() (in module mne)": [[557, "mne.pick_events"]], "pick_info() (in module mne)": [[558, "mne.pick_info"]], "pick_types() (in module mne)": [[559, "mne.pick_types"]], "pick_types_forward() (in module mne)": [[560, "mne.pick_types_forward"]], "eogregression (class in mne.preprocessing)": [[561, "mne.preprocessing.EOGRegression"]], "apply() (mne.preprocessing.eogregression method)": [[561, "mne.preprocessing.EOGRegression.apply"]], "fit() (mne.preprocessing.eogregression method)": [[561, "mne.preprocessing.EOGRegression.fit"]], "plot() (mne.preprocessing.eogregression method)": [[561, "mne.preprocessing.EOGRegression.plot"]], "save() (mne.preprocessing.eogregression method)": [[561, "mne.preprocessing.EOGRegression.save"]], "ica (class in mne.preprocessing)": [[562, "mne.preprocessing.ICA"]], "__contains__() (mne.preprocessing.ica method)": [[562, "mne.preprocessing.ICA.__contains__"]], "apply() (mne.preprocessing.ica method)": [[562, "mne.preprocessing.ICA.apply"]], "compensation_grade (mne.preprocessing.ica property)": [[562, "mne.preprocessing.ICA.compensation_grade"]], "copy() (mne.preprocessing.ica method)": [[562, "mne.preprocessing.ICA.copy"]], "find_bads_ecg() (mne.preprocessing.ica method)": [[562, "mne.preprocessing.ICA.find_bads_ecg"]], "find_bads_eog() (mne.preprocessing.ica method)": [[562, "mne.preprocessing.ICA.find_bads_eog"]], "find_bads_muscle() (mne.preprocessing.ica method)": [[562, "mne.preprocessing.ICA.find_bads_muscle"]], "find_bads_ref() (mne.preprocessing.ica method)": [[562, "mne.preprocessing.ICA.find_bads_ref"]], "fit() (mne.preprocessing.ica method)": [[562, "mne.preprocessing.ICA.fit"]], "get_channel_types() (mne.preprocessing.ica method)": [[562, "mne.preprocessing.ICA.get_channel_types"]], "get_components() (mne.preprocessing.ica method)": [[562, "mne.preprocessing.ICA.get_components"]], "get_explained_variance_ratio() (mne.preprocessing.ica method)": [[562, "mne.preprocessing.ICA.get_explained_variance_ratio"]], "get_sources() (mne.preprocessing.ica method)": [[562, "mne.preprocessing.ICA.get_sources"]], "plot_components() (mne.preprocessing.ica method)": [[562, "mne.preprocessing.ICA.plot_components"]], "plot_overlay() (mne.preprocessing.ica method)": [[562, "mne.preprocessing.ICA.plot_overlay"]], "plot_properties() (mne.preprocessing.ica method)": [[562, "mne.preprocessing.ICA.plot_properties"]], "plot_scores() (mne.preprocessing.ica method)": [[562, "mne.preprocessing.ICA.plot_scores"]], "plot_sources() (mne.preprocessing.ica method)": [[562, "mne.preprocessing.ICA.plot_sources"]], "save() (mne.preprocessing.ica method)": [[562, "mne.preprocessing.ICA.save"]], "score_sources() (mne.preprocessing.ica method)": [[562, "mne.preprocessing.ICA.score_sources"]], "xdawn (class in mne.preprocessing)": [[563, "mne.preprocessing.Xdawn"]], "apply() (mne.preprocessing.xdawn method)": [[563, "mne.preprocessing.Xdawn.apply"]], "fit() (mne.preprocessing.xdawn method)": [[563, "mne.preprocessing.Xdawn.fit"]], "fit_transform() (mne.preprocessing.xdawn method)": [[563, "mne.preprocessing.Xdawn.fit_transform"]], "get_params() (mne.preprocessing.xdawn method)": [[563, "mne.preprocessing.Xdawn.get_params"]], "inverse_transform() (mne.preprocessing.xdawn method)": [[563, "mne.preprocessing.Xdawn.inverse_transform"]], "set_params() (mne.preprocessing.xdawn method)": [[563, "mne.preprocessing.Xdawn.set_params"]], "transform() (mne.preprocessing.xdawn method)": [[563, "mne.preprocessing.Xdawn.transform"]], "annotate_amplitude() (in module mne.preprocessing)": [[564, "mne.preprocessing.annotate_amplitude"]], "annotate_break() (in module mne.preprocessing)": [[565, "mne.preprocessing.annotate_break"]], "annotate_movement() (in module mne.preprocessing)": [[566, "mne.preprocessing.annotate_movement"]], "annotate_muscle_zscore() (in module mne.preprocessing)": [[567, "mne.preprocessing.annotate_muscle_zscore"]], "annotate_nan() (in module mne.preprocessing)": [[568, "mne.preprocessing.annotate_nan"]], "compute_average_dev_head_t() (in module mne.preprocessing)": [[569, "mne.preprocessing.compute_average_dev_head_t"]], "compute_bridged_electrodes() (in module mne.preprocessing)": [[570, "mne.preprocessing.compute_bridged_electrodes"]], "compute_current_source_density() (in module mne.preprocessing)": [[571, "mne.preprocessing.compute_current_source_density"]], "compute_fine_calibration() (in module mne.preprocessing)": [[572, "mne.preprocessing.compute_fine_calibration"]], "compute_maxwell_basis() (in module mne.preprocessing)": [[573, "mne.preprocessing.compute_maxwell_basis"]], "compute_proj_ecg() (in module mne.preprocessing)": [[574, "mne.preprocessing.compute_proj_ecg"]], "compute_proj_eog() (in module mne.preprocessing)": [[575, "mne.preprocessing.compute_proj_eog"]], "compute_proj_hfc() (in module mne.preprocessing)": [[576, "mne.preprocessing.compute_proj_hfc"]], "corrmap() (in module mne.preprocessing)": [[577, "mne.preprocessing.corrmap"]], "cortical_signal_suppression() (in module mne.preprocessing)": [[578, "mne.preprocessing.cortical_signal_suppression"]], "create_ecg_epochs() (in module mne.preprocessing)": [[579, "mne.preprocessing.create_ecg_epochs"]], "create_eog_epochs() (in module mne.preprocessing)": [[580, "mne.preprocessing.create_eog_epochs"]], "equalize_bads() (in module mne.preprocessing)": [[581, "mne.preprocessing.equalize_bads"]], "set_channel_types_eyetrack() (in module mne.preprocessing.eyetracking)": [[582, "mne.preprocessing.eyetracking.set_channel_types_eyetrack"]], "find_bad_channels_maxwell() (in module mne.preprocessing)": [[583, "mne.preprocessing.find_bad_channels_maxwell"]], "find_ecg_events() (in module mne.preprocessing)": [[584, "mne.preprocessing.find_ecg_events"]], "find_eog_events() (in module mne.preprocessing)": [[585, "mne.preprocessing.find_eog_events"]], "fix_stim_artifact() (in module mne.preprocessing)": [[586, "mne.preprocessing.fix_stim_artifact"]], "ica_find_ecg_events() (in module mne.preprocessing)": [[587, "mne.preprocessing.ica_find_ecg_events"]], "ica_find_eog_events() (in module mne.preprocessing)": [[588, "mne.preprocessing.ica_find_eog_events"]], "make_montage_volume() (in module mne.preprocessing.ieeg)": [[589, "mne.preprocessing.ieeg.make_montage_volume"]], "project_sensors_onto_brain() (in module mne.preprocessing.ieeg)": [[590, "mne.preprocessing.ieeg.project_sensors_onto_brain"]], "warp_montage() (in module mne.preprocessing.ieeg)": [[591, "mne.preprocessing.ieeg.warp_montage"]], "infomax() (in module mne.preprocessing)": [[592, "mne.preprocessing.infomax"]], "interpolate_bridged_electrodes() (in module mne.preprocessing)": [[593, "mne.preprocessing.interpolate_bridged_electrodes"]], "maxwell_filter() (in module mne.preprocessing)": [[594, "mne.preprocessing.maxwell_filter"]], "maxwell_filter_prepare_emptyroom() (in module mne.preprocessing)": [[595, "mne.preprocessing.maxwell_filter_prepare_emptyroom"]], "beer_lambert_law() (in module mne.preprocessing.nirs)": [[596, "mne.preprocessing.nirs.beer_lambert_law"]], "optical_density() (in module mne.preprocessing.nirs)": [[597, "mne.preprocessing.nirs.optical_density"]], "scalp_coupling_index() (in module mne.preprocessing.nirs)": [[598, "mne.preprocessing.nirs.scalp_coupling_index"]], "short_channels() (in module mne.preprocessing.nirs)": [[599, "mne.preprocessing.nirs.short_channels"]], "source_detector_distances() (in module mne.preprocessing.nirs)": [[600, "mne.preprocessing.nirs.source_detector_distances"]], "temporal_derivative_distribution_repair() (in module mne.preprocessing.nirs)": [[601, "mne.preprocessing.nirs.temporal_derivative_distribution_repair"]], "oversampled_temporal_projection() (in module mne.preprocessing)": [[602, "mne.preprocessing.oversampled_temporal_projection"]], "peak_finder() (in module mne.preprocessing)": [[603, "mne.preprocessing.peak_finder"]], "read_eog_regression() (in module mne.preprocessing)": [[604, "mne.preprocessing.read_eog_regression"]], "read_fine_calibration() (in module mne.preprocessing)": [[605, "mne.preprocessing.read_fine_calibration"]], "read_ica() (in module mne.preprocessing)": [[606, "mne.preprocessing.read_ica"]], "read_ica_eeglab() (in module mne.preprocessing)": [[607, "mne.preprocessing.read_ica_eeglab"]], "realign_raw() (in module mne.preprocessing)": [[608, "mne.preprocessing.realign_raw"]], "regress_artifact() (in module mne.preprocessing)": [[609, "mne.preprocessing.regress_artifact"]], "write_fine_calibration() (in module mne.preprocessing)": [[610, "mne.preprocessing.write_fine_calibration"]], "random_parcellation() (in module mne)": [[611, "mne.random_parcellation"]], "read_annotations() (in module mne)": [[612, "mne.read_annotations"]], "read_bem_solution() (in module mne)": [[613, "mne.read_bem_solution"]], "read_bem_surfaces() (in module mne)": [[614, "mne.read_bem_surfaces"]], "read_cov() (in module mne)": [[615, "mne.read_cov"]], "read_dipole() (in module mne)": [[616, "mne.read_dipole"]], "read_epochs() (in module mne)": [[617, "mne.read_epochs"]], "read_epochs_eeglab() (in module mne)": [[618, "mne.read_epochs_eeglab"]], "read_epochs_fieldtrip() (in module mne)": [[619, "mne.read_epochs_fieldtrip"]], "read_epochs_kit() (in module mne)": [[620, "mne.read_epochs_kit"]], "read_events() (in module mne)": [[621, "mne.read_events"]], "read_evoked_besa() (in module mne)": [[622, "mne.read_evoked_besa"]], "read_evoked_fieldtrip() (in module mne)": [[623, "mne.read_evoked_fieldtrip"]], "read_evokeds() (in module mne)": [[624, "mne.read_evokeds"]], "read_evokeds_mff() (in module mne)": [[625, "mne.read_evokeds_mff"]], "read_forward_solution() (in module mne)": [[626, "mne.read_forward_solution"]], "read_freesurfer_lut() (in module mne)": [[627, "mne.read_freesurfer_lut"]], "read_label() (in module mne)": [[628, "mne.read_label"]], "read_labels_from_annot() (in module mne)": [[629, "mne.read_labels_from_annot"]], "read_lta() (in module mne)": [[630, "mne.read_lta"]], "read_morph_map() (in module mne)": [[631, "mne.read_morph_map"]], "read_proj() (in module mne)": [[632, "mne.read_proj"]], "read_reject_parameters() (in module mne)": [[633, "mne.read_reject_parameters"]], "read_source_estimate() (in module mne)": [[634, "mne.read_source_estimate"]], "read_source_morph() (in module mne)": [[635, "mne.read_source_morph"]], "read_source_spaces() (in module mne)": [[636, "mne.read_source_spaces"]], "read_surface() (in module mne)": [[637, "mne.read_surface"]], "read_talxfm() (in module mne)": [[638, "mne.read_talxfm"]], "read_trans() (in module mne)": [[639, "mne.read_trans"]], "read_tri() (in module mne)": [[640, "mne.read_tri"]], "read_vectorview_selection() (in module mne)": [[641, "mne.read_vectorview_selection"]], "rename_channels() (in module mne)": [[642, "mne.rename_channels"]], "scale_bem() (in module mne)": [[643, "mne.scale_bem"]], "scale_labels() (in module mne)": [[644, "mne.scale_labels"]], "scale_mri() (in module mne)": [[645, "mne.scale_mri"]], "scale_source_space() (in module mne)": [[646, "mne.scale_source_space"]], "sensitivity_map() (in module mne)": [[647, "mne.sensitivity_map"]], "set_bipolar_reference() (in module mne)": [[648, "mne.set_bipolar_reference"]], "set_cache_dir() (in module mne)": [[649, "mne.set_cache_dir"]], "set_config() (in module mne)": [[650, "mne.set_config"]], "set_eeg_reference() (in module mne)": [[651, "mne.set_eeg_reference"]], "set_log_file() (in module mne)": [[652, "mne.set_log_file"]], "set_log_level() (in module mne)": [[653, "mne.set_log_level"]], "setup_source_space() (in module mne)": [[654, "mne.setup_source_space"]], "setup_volume_source_space() (in module mne)": [[655, "mne.setup_volume_source_space"]], "sourcesimulator (class in mne.simulation)": [[656, "mne.simulation.SourceSimulator"]], "__iter__() (mne.simulation.sourcesimulator method)": [[656, "mne.simulation.SourceSimulator.__iter__"]], "add_data() (mne.simulation.sourcesimulator method)": [[656, "mne.simulation.SourceSimulator.add_data"]], "duration (mne.simulation.sourcesimulator property)": [[656, "mne.simulation.SourceSimulator.duration"]], "get_stc() (mne.simulation.sourcesimulator method)": [[656, "mne.simulation.SourceSimulator.get_stc"]], "get_stim_channel() (mne.simulation.sourcesimulator method)": [[656, "mne.simulation.SourceSimulator.get_stim_channel"]], "n_times (mne.simulation.sourcesimulator property)": [[656, "mne.simulation.SourceSimulator.n_times"]], "add_chpi() (in module mne.simulation)": [[657, "mne.simulation.add_chpi"]], "add_ecg() (in module mne.simulation)": [[658, "mne.simulation.add_ecg"]], "add_eog() (in module mne.simulation)": [[659, "mne.simulation.add_eog"]], "add_noise() (in module mne.simulation)": [[660, "mne.simulation.add_noise"]], "cosine_score() (in module mne.simulation.metrics)": [[661, "mne.simulation.metrics.cosine_score"]], "f1_score() (in module mne.simulation.metrics)": [[662, "mne.simulation.metrics.f1_score"]], "peak_position_error() (in module mne.simulation.metrics)": [[663, "mne.simulation.metrics.peak_position_error"]], "precision_score() (in module mne.simulation.metrics)": [[664, "mne.simulation.metrics.precision_score"]], "recall_score() (in module mne.simulation.metrics)": [[665, "mne.simulation.metrics.recall_score"]], "region_localization_error() (in module mne.simulation.metrics)": [[666, "mne.simulation.metrics.region_localization_error"]], "roc_auc_score() (in module mne.simulation.metrics)": [[667, "mne.simulation.metrics.roc_auc_score"]], "spatial_deviation_error() (in module mne.simulation.metrics)": [[668, "mne.simulation.metrics.spatial_deviation_error"]], "select_source_in_label() (in module mne.simulation)": [[669, "mne.simulation.select_source_in_label"]], "simulate_evoked() (in module mne.simulation)": [[670, "mne.simulation.simulate_evoked"]], "simulate_raw() (in module mne.simulation)": [[671, "mne.simulation.simulate_raw"]], "simulate_sparse_stc() (in module mne.simulation)": [[672, "mne.simulation.simulate_sparse_stc"]], "simulate_stc() (in module mne.simulation)": [[673, "mne.simulation.simulate_stc"]], "compute_distance_to_sensors() (in module mne.source_space)": [[674, "mne.source_space.compute_distance_to_sensors"]], "get_decimated_surfaces() (in module mne.source_space)": [[675, "mne.source_space.get_decimated_surfaces"]], "spatial_dist_adjacency() (in module mne)": [[676, "mne.spatial_dist_adjacency"]], "spatial_inter_hemi_adjacency() (in module mne)": [[677, "mne.spatial_inter_hemi_adjacency"]], "spatial_src_adjacency() (in module mne)": [[678, "mne.spatial_src_adjacency"]], "spatial_tris_adjacency() (in module mne)": [[679, "mne.spatial_tris_adjacency"]], "spatio_temporal_dist_adjacency() (in module mne)": [[680, "mne.spatio_temporal_dist_adjacency"]], "spatio_temporal_src_adjacency() (in module mne)": [[681, "mne.spatio_temporal_src_adjacency"]], "spatio_temporal_tris_adjacency() (in module mne)": [[682, "mne.spatio_temporal_tris_adjacency"]], "split_label() (in module mne)": [[683, "mne.split_label"]], "bonferroni_correction() (in module mne.stats)": [[684, "mne.stats.bonferroni_correction"]], "bootstrap_confidence_interval() (in module mne.stats)": [[685, "mne.stats.bootstrap_confidence_interval"]], "combine_adjacency() (in module mne.stats)": [[686, "mne.stats.combine_adjacency"]], "f_mway_rm() (in module mne.stats)": [[687, "mne.stats.f_mway_rm"]], "f_oneway() (in module mne.stats)": [[688, "mne.stats.f_oneway"]], "f_threshold_mway_rm() (in module mne.stats)": [[689, "mne.stats.f_threshold_mway_rm"]], "fdr_correction() (in module mne.stats)": [[690, "mne.stats.fdr_correction"]], "linear_regression() (in module mne.stats)": [[691, "mne.stats.linear_regression"]], "linear_regression_raw() (in module mne.stats)": [[692, "mne.stats.linear_regression_raw"]], "permutation_cluster_1samp_test() (in module mne.stats)": [[693, "mne.stats.permutation_cluster_1samp_test"]], "permutation_cluster_test() (in module mne.stats)": [[694, "mne.stats.permutation_cluster_test"]], "permutation_t_test() (in module mne.stats)": [[695, "mne.stats.permutation_t_test"]], "spatio_temporal_cluster_1samp_test() (in module mne.stats)": [[696, "mne.stats.spatio_temporal_cluster_1samp_test"]], "spatio_temporal_cluster_test() (in module mne.stats)": [[697, "mne.stats.spatio_temporal_cluster_test"]], "summarize_clusters_stc() (in module mne.stats)": [[698, "mne.stats.summarize_clusters_stc"]], "ttest_1samp_no_p() (in module mne.stats)": [[699, "mne.stats.ttest_1samp_no_p"]], "ttest_ind_no_p() (in module mne.stats)": [[700, "mne.stats.ttest_ind_no_p"]], "stc_near_sensors() (in module mne)": [[701, "mne.stc_near_sensors"]], "stc_to_label() (in module mne)": [[702, "mne.stc_to_label"]], "complete_surface_info() (in module mne.surface)": [[703, "mne.surface.complete_surface_info"]], "read_curvature() (in module mne.surface)": [[704, "mne.surface.read_curvature"]], "sys_info() (in module mne)": [[705, "mne.sys_info"]], "averagetfr (class in mne.time_frequency)": [[706, "mne.time_frequency.AverageTFR"]], "__add__() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.__add__"]], "__contains__() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.__contains__"]], "__mul__() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.__mul__"]], "__sub__() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.__sub__"]], "add_channels() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.apply_baseline"]], "ch_names (mne.time_frequency.averagetfr property)": [[706, "mne.time_frequency.AverageTFR.ch_names"]], "compensation_grade (mne.time_frequency.averagetfr property)": [[706, "mne.time_frequency.AverageTFR.compensation_grade"]], "copy() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.copy"]], "crop() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.crop"]], "decimate() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.decimate"]], "drop_channels() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.get_channel_types"]], "pick() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.pick"]], "pick_channels() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.pick_channels"]], "pick_types() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.pick_types"]], "plot() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.plot"]], "plot_joint() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.plot_joint"]], "plot_topo() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.plot_topo"]], "plot_topomap() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.plot_topomap"]], "reorder_channels() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.reorder_channels"]], "save() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.save"]], "shift_time() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.shift_time"]], "time_as_index() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.time_as_index"]], "times (mne.time_frequency.averagetfr property)": [[706, "mne.time_frequency.AverageTFR.times"]], "tmax (mne.time_frequency.averagetfr property)": [[706, "mne.time_frequency.AverageTFR.tmax"]], "tmin (mne.time_frequency.averagetfr property)": [[706, "mne.time_frequency.AverageTFR.tmin"]], "to_data_frame() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.to_data_frame"]], "crossspectraldensity (class in mne.time_frequency)": [[707, "mne.time_frequency.CrossSpectralDensity"]], "__getitem__() (mne.time_frequency.crossspectraldensity method)": [[707, "mne.time_frequency.CrossSpectralDensity.__getitem__"]], "__len__() (mne.time_frequency.crossspectraldensity method)": [[707, "mne.time_frequency.CrossSpectralDensity.__len__"]], "copy() (mne.time_frequency.crossspectraldensity method)": [[707, "mne.time_frequency.CrossSpectralDensity.copy"]], "get_data() (mne.time_frequency.crossspectraldensity method)": [[707, "mne.time_frequency.CrossSpectralDensity.get_data"]], "mean() (mne.time_frequency.crossspectraldensity method)": [[707, "mne.time_frequency.CrossSpectralDensity.mean"]], "n_channels (mne.time_frequency.crossspectraldensity property)": [[707, "mne.time_frequency.CrossSpectralDensity.n_channels"]], "pick_channels() (mne.time_frequency.crossspectraldensity method)": [[707, "mne.time_frequency.CrossSpectralDensity.pick_channels"]], "pick_frequency() (mne.time_frequency.crossspectraldensity method)": [[707, "mne.time_frequency.CrossSpectralDensity.pick_frequency"]], "plot() (mne.time_frequency.crossspectraldensity method)": [[707, "mne.time_frequency.CrossSpectralDensity.plot"]], "save() (mne.time_frequency.crossspectraldensity method)": [[707, "mne.time_frequency.CrossSpectralDensity.save"]], "sum() (mne.time_frequency.crossspectraldensity method)": [[707, "mne.time_frequency.CrossSpectralDensity.sum"]], "epochsspectrum (class in mne.time_frequency)": [[708, "mne.time_frequency.EpochsSpectrum"]], "__contains__() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.__contains__"]], "__getitem__() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.__getitem__"]], "__iter__() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.__iter__"]], "__len__() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.__len__"]], "add_channels() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.add_reference_channels"]], "average() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.average"]], "compensation_grade (mne.time_frequency.epochsspectrum property)": [[708, "mne.time_frequency.EpochsSpectrum.compensation_grade"]], "copy() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.copy"]], "drop_channels() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.get_channel_types"]], "get_data() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.get_data"]], "metadata (mne.time_frequency.epochsspectrum property)": [[708, "mne.time_frequency.EpochsSpectrum.metadata"]], "next() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.next"]], "pick() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.pick"]], "pick_channels() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.pick_channels"]], "pick_types() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.pick_types"]], "plot() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.plot"]], "plot_topo() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.reorder_channels"]], "save() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.save"]], "to_data_frame() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.to_data_frame"]], "units() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.units"]], "epochstfr (class in mne.time_frequency)": [[709, "mne.time_frequency.EpochsTFR"]], "__contains__() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.__contains__"]], "__getitem__() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.__getitem__"]], "__iter__() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.__iter__"]], "__len__() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.__len__"]], "add_channels() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.apply_baseline"]], "average() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.average"]], "ch_names (mne.time_frequency.epochstfr property)": [[709, "mne.time_frequency.EpochsTFR.ch_names"]], "compensation_grade (mne.time_frequency.epochstfr property)": [[709, "mne.time_frequency.EpochsTFR.compensation_grade"]], "copy() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.copy"]], "crop() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.crop"]], "decimate() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.decimate"]], "drop_channels() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.get_channel_types"]], "metadata (mne.time_frequency.epochstfr property)": [[709, "mne.time_frequency.EpochsTFR.metadata"]], "next() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.next"]], "pick() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.pick"]], "pick_channels() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.pick_channels"]], "pick_types() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.pick_types"]], "reorder_channels() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.reorder_channels"]], "save() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.save"]], "shift_time() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.shift_time"]], "time_as_index() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.time_as_index"]], "times (mne.time_frequency.epochstfr property)": [[709, "mne.time_frequency.EpochsTFR.times"]], "tmax (mne.time_frequency.epochstfr property)": [[709, "mne.time_frequency.EpochsTFR.tmax"]], "tmin (mne.time_frequency.epochstfr property)": [[709, "mne.time_frequency.EpochsTFR.tmin"]], "to_data_frame() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.to_data_frame"]], "spectrum (class in mne.time_frequency)": [[710, "mne.time_frequency.Spectrum"]], "__contains__() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.__contains__"]], "__getitem__() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.__getitem__"]], "add_channels() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.add_reference_channels"]], "compensation_grade (mne.time_frequency.spectrum property)": [[710, "mne.time_frequency.Spectrum.compensation_grade"]], "copy() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.copy"]], "drop_channels() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.get_channel_types"]], "get_data() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.get_data"]], "pick() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.pick"]], "pick_channels() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.pick_channels"]], "pick_types() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.pick_types"]], "plot() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.plot"]], "plot_topo() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.reorder_channels"]], "save() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.save"]], "to_data_frame() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.to_data_frame"]], "units() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.units"]], "csd_array_fourier() (in module mne.time_frequency)": [[711, "mne.time_frequency.csd_array_fourier"]], "csd_array_morlet() (in module mne.time_frequency)": [[712, "mne.time_frequency.csd_array_morlet"]], "csd_array_multitaper() (in module mne.time_frequency)": [[713, "mne.time_frequency.csd_array_multitaper"]], "csd_fourier() (in module mne.time_frequency)": [[714, "mne.time_frequency.csd_fourier"]], "csd_morlet() (in module mne.time_frequency)": [[715, "mne.time_frequency.csd_morlet"]], "csd_multitaper() (in module mne.time_frequency)": [[716, "mne.time_frequency.csd_multitaper"]], "csd_tfr() (in module mne.time_frequency)": [[717, "mne.time_frequency.csd_tfr"]], "dpss_windows() (in module mne.time_frequency)": [[718, "mne.time_frequency.dpss_windows"]], "fit_iir_model_raw() (in module mne.time_frequency)": [[719, "mne.time_frequency.fit_iir_model_raw"]], "fwhm() (in module mne.time_frequency)": [[720, "mne.time_frequency.fwhm"]], "istft() (in module mne.time_frequency)": [[721, "mne.time_frequency.istft"]], "morlet() (in module mne.time_frequency)": [[722, "mne.time_frequency.morlet"]], "pick_channels_csd() (in module mne.time_frequency)": [[723, "mne.time_frequency.pick_channels_csd"]], "psd_array_multitaper() (in module mne.time_frequency)": [[724, "mne.time_frequency.psd_array_multitaper"]], "psd_array_welch() (in module mne.time_frequency)": [[725, "mne.time_frequency.psd_array_welch"]], "read_csd() (in module mne.time_frequency)": [[726, "mne.time_frequency.read_csd"]], "read_spectrum() (in module mne.time_frequency)": [[727, "mne.time_frequency.read_spectrum"]], "read_tfrs() (in module mne.time_frequency)": [[728, "mne.time_frequency.read_tfrs"]], "stft() (in module mne.time_frequency)": [[729, "mne.time_frequency.stft"]], "stftfreq() (in module mne.time_frequency)": [[730, "mne.time_frequency.stftfreq"]], "cwt() (in module mne.time_frequency.tfr)": [[731, "mne.time_frequency.tfr.cwt"]], "morlet() (in module mne.time_frequency.tfr)": [[732, "mne.time_frequency.tfr.morlet"]], "tfr_array_morlet() (in module mne.time_frequency)": [[733, "mne.time_frequency.tfr_array_morlet"]], "tfr_array_multitaper() (in module mne.time_frequency)": [[734, "mne.time_frequency.tfr_array_multitaper"]], "tfr_array_stockwell() (in module mne.time_frequency)": [[735, "mne.time_frequency.tfr_array_stockwell"]], "tfr_morlet() (in module mne.time_frequency)": [[736, "mne.time_frequency.tfr_morlet"]], "tfr_multitaper() (in module mne.time_frequency)": [[737, "mne.time_frequency.tfr_multitaper"]], "tfr_stockwell() (in module mne.time_frequency)": [[738, "mne.time_frequency.tfr_stockwell"]], "write_tfrs() (in module mne.time_frequency)": [[739, "mne.time_frequency.write_tfrs"]], "transform_surface_to() (in module mne)": [[740, "mne.transform_surface_to"]], "transform (class in mne.transforms)": [[741, "mne.transforms.Transform"]], "__contains__() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.__contains__"]], "__getitem__() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.__getitem__"]], "__iter__() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.__iter__"]], "__len__() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.__len__"]], "clear() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.clear"]], "copy() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.copy"]], "from_str (mne.transforms.transform property)": [[741, "mne.transforms.Transform.from_str"]], "fromkeys() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.fromkeys"]], "get() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.get"]], "items() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.items"]], "keys() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.keys"]], "pop() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.pop"]], "popitem() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.popitem"]], "save() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.save"]], "setdefault() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.setdefault"]], "to_str (mne.transforms.transform property)": [[741, "mne.transforms.Transform.to_str"]], "update() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.update"]], "values() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.values"]], "apply_volume_registration() (in module mne.transforms)": [[742, "mne.transforms.apply_volume_registration"]], "apply_volume_registration_points() (in module mne.transforms)": [[743, "mne.transforms.apply_volume_registration_points"]], "compute_volume_registration() (in module mne.transforms)": [[744, "mne.transforms.compute_volume_registration"]], "quat_to_rot() (in module mne.transforms)": [[745, "mne.transforms.quat_to_rot"]], "read_ras_mni_t() (in module mne.transforms)": [[746, "mne.transforms.read_ras_mni_t"]], "rot_to_quat() (in module mne.transforms)": [[747, "mne.transforms.rot_to_quat"]], "use_coil_def() (in module mne)": [[748, "mne.use_coil_def"]], "use_log_level (class in mne)": [[749, "mne.use_log_level"]], "deprecated (class in mne.utils)": [[750, "mne.utils.deprecated"]], "warn() (in module mne.utils)": [[751, "mne.utils.warn"]], "verbose() (in module mne)": [[752, "mne.verbose"]], "vertex_to_mni() (in module mne)": [[753, "mne.vertex_to_mni"]], "brain (class in mne.viz)": [[754, "mne.viz.Brain"]], "add_annotation() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_annotation"]], "add_data() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_data"]], "add_dipole() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_dipole"]], "add_foci() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_foci"]], "add_forward() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_forward"]], "add_head() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_head"]], "add_label() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_label"]], "add_sensors() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_sensors"]], "add_skull() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_skull"]], "add_text() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_text"]], "add_volume_labels() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_volume_labels"]], "apply_auto_scaling() (mne.viz.brain method)": [[754, "mne.viz.Brain.apply_auto_scaling"]], "clear_glyphs() (mne.viz.brain method)": [[754, "mne.viz.Brain.clear_glyphs"]], "close() (mne.viz.brain method)": [[754, "mne.viz.Brain.close"]], "data (mne.viz.brain property)": [[754, "mne.viz.Brain.data"]], "get_picked_points() (mne.viz.brain method)": [[754, "mne.viz.Brain.get_picked_points"]], "get_view() (mne.viz.brain method)": [[754, "mne.viz.Brain.get_view"]], "help() (mne.viz.brain method)": [[754, "mne.viz.Brain.help"]], "interaction (mne.viz.brain property)": [[754, "mne.viz.Brain.interaction"]], "plot_time_course() (mne.viz.brain method)": [[754, "mne.viz.Brain.plot_time_course"]], "plot_time_line() (mne.viz.brain method)": [[754, "mne.viz.Brain.plot_time_line"]], "remove_annotations() (mne.viz.brain method)": [[754, "mne.viz.Brain.remove_annotations"]], "remove_data() (mne.viz.brain method)": [[754, "mne.viz.Brain.remove_data"]], "remove_dipole() (mne.viz.brain method)": [[754, "mne.viz.Brain.remove_dipole"]], "remove_forward() (mne.viz.brain method)": [[754, "mne.viz.Brain.remove_forward"]], "remove_head() (mne.viz.brain method)": [[754, "mne.viz.Brain.remove_head"]], "remove_labels() (mne.viz.brain method)": [[754, "mne.viz.Brain.remove_labels"]], "remove_sensors() (mne.viz.brain method)": [[754, "mne.viz.Brain.remove_sensors"]], "remove_skull() (mne.viz.brain method)": [[754, "mne.viz.Brain.remove_skull"]], "remove_text() (mne.viz.brain method)": [[754, "mne.viz.Brain.remove_text"]], "remove_volume_labels() (mne.viz.brain method)": [[754, "mne.viz.Brain.remove_volume_labels"]], "reset() (mne.viz.brain method)": [[754, "mne.viz.Brain.reset"]], "reset_view() (mne.viz.brain method)": [[754, "mne.viz.Brain.reset_view"]], "restore_user_scaling() (mne.viz.brain method)": [[754, "mne.viz.Brain.restore_user_scaling"]], "save_image() (mne.viz.brain method)": [[754, "mne.viz.Brain.save_image"]], "save_movie() (mne.viz.brain method)": [[754, "mne.viz.Brain.save_movie"]], "screenshot() (mne.viz.brain method)": [[754, "mne.viz.Brain.screenshot"]], "set_data_smoothing() (mne.viz.brain method)": [[754, "mne.viz.Brain.set_data_smoothing"]], "set_playback_speed() (mne.viz.brain method)": [[754, "mne.viz.Brain.set_playback_speed"]], "set_time() (mne.viz.brain method)": [[754, "mne.viz.Brain.set_time"]], "set_time_interpolation() (mne.viz.brain method)": [[754, "mne.viz.Brain.set_time_interpolation"]], "set_time_point() (mne.viz.brain method)": [[754, "mne.viz.Brain.set_time_point"]], "setup_time_viewer() (mne.viz.brain method)": [[754, "mne.viz.Brain.setup_time_viewer"]], "show() (mne.viz.brain method)": [[754, "mne.viz.Brain.show"]], "show_view() (mne.viz.brain method)": [[754, "mne.viz.Brain.show_view"]], "time_interpolation (mne.viz.brain property)": [[754, "mne.viz.Brain.time_interpolation"]], "toggle_interface() (mne.viz.brain method)": [[754, "mne.viz.Brain.toggle_interface"]], "toggle_playback() (mne.viz.brain method)": [[754, "mne.viz.Brain.toggle_playback"]], "update_lut() (mne.viz.brain method)": [[754, "mne.viz.Brain.update_lut"]], "clickableimage (class in mne.viz)": [[755, "mne.viz.ClickableImage"]], "onclick() (mne.viz.clickableimage method)": [[755, "mne.viz.ClickableImage.onclick"]], "plot_clicks() (mne.viz.clickableimage method)": [[755, "mne.viz.ClickableImage.plot_clicks"]], "to_layout() (mne.viz.clickableimage method)": [[755, "mne.viz.ClickableImage.to_layout"]], "figure3d (class in mne.viz)": [[756, "mne.viz.Figure3D"]], "plotter (mne.viz.figure3d property)": [[756, "mne.viz.Figure3D.plotter"]], "add_background_image() (in module mne.viz)": [[757, "mne.viz.add_background_image"]], "centers_to_edges() (in module mne.viz)": [[758, "mne.viz.centers_to_edges"]], "circular_layout() (in module mne.viz)": [[759, "mne.viz.circular_layout"]], "close_3d_figure() (in module mne.viz)": [[760, "mne.viz.close_3d_figure"]], "close_all_3d_figures() (in module mne.viz)": [[761, "mne.viz.close_all_3d_figures"]], "compare_fiff() (in module mne.viz)": [[762, "mne.viz.compare_fiff"]], "create_3d_figure() (in module mne.viz)": [[763, "mne.viz.create_3d_figure"]], "get_3d_backend() (in module mne.viz)": [[764, "mne.viz.get_3d_backend"]], "get_brain_class() (in module mne.viz)": [[765, "mne.viz.get_brain_class"]], "get_browser_backend() (in module mne.viz)": [[766, "mne.viz.get_browser_backend"]], "iter_topography() (in module mne.viz)": [[767, "mne.viz.iter_topography"]], "link_brains() (in module mne.viz)": [[768, "mne.viz.link_brains"]], "mne_analyze_colormap() (in module mne.viz)": [[769, "mne.viz.mne_analyze_colormap"]], "plot_alignment() (in module mne.viz)": [[770, "mne.viz.plot_alignment"]], "plot_arrowmap() (in module mne.viz)": [[771, "mne.viz.plot_arrowmap"]], "plot_bem() (in module mne.viz)": [[772, "mne.viz.plot_bem"]], "plot_brain_colorbar() (in module mne.viz)": [[773, "mne.viz.plot_brain_colorbar"]], "plot_bridged_electrodes() (in module mne.viz)": [[774, "mne.viz.plot_bridged_electrodes"]], "plot_ch_adjacency() (in module mne.viz)": [[775, "mne.viz.plot_ch_adjacency"]], "plot_channel_labels_circle() (in module mne.viz)": [[776, "mne.viz.plot_channel_labels_circle"]], "plot_chpi_snr() (in module mne.viz)": [[777, "mne.viz.plot_chpi_snr"]], "plot_compare_evokeds() (in module mne.viz)": [[778, "mne.viz.plot_compare_evokeds"]], "plot_cov() (in module mne.viz)": [[779, "mne.viz.plot_cov"]], "plot_csd() (in module mne.viz)": [[780, "mne.viz.plot_csd"]], "plot_dipole_amplitudes() (in module mne.viz)": [[781, "mne.viz.plot_dipole_amplitudes"]], "plot_dipole_locations() (in module mne.viz)": [[782, "mne.viz.plot_dipole_locations"]], "plot_drop_log() (in module mne.viz)": [[783, "mne.viz.plot_drop_log"]], "plot_epochs() (in module mne.viz)": [[784, "mne.viz.plot_epochs"]], "plot_epochs_image() (in module mne.viz)": [[785, "mne.viz.plot_epochs_image"]], "plot_epochs_psd_topomap() (in module mne.viz)": [[786, "mne.viz.plot_epochs_psd_topomap"]], "plot_events() (in module mne.viz)": [[787, "mne.viz.plot_events"]], "plot_evoked() (in module mne.viz)": [[788, "mne.viz.plot_evoked"]], "plot_evoked_field() (in module mne.viz)": [[789, "mne.viz.plot_evoked_field"]], "plot_evoked_image() (in module mne.viz)": [[790, "mne.viz.plot_evoked_image"]], "plot_evoked_joint() (in module mne.viz)": [[791, "mne.viz.plot_evoked_joint"]], "plot_evoked_topo() (in module mne.viz)": [[792, "mne.viz.plot_evoked_topo"]], "plot_evoked_topomap() (in module mne.viz)": [[793, "mne.viz.plot_evoked_topomap"]], "plot_evoked_white() (in module mne.viz)": [[794, "mne.viz.plot_evoked_white"]], "plot_filter() (in module mne.viz)": [[795, "mne.viz.plot_filter"]], "plot_head_positions() (in module mne.viz)": [[796, "mne.viz.plot_head_positions"]], "plot_ica_components() (in module mne.viz)": [[797, "mne.viz.plot_ica_components"]], "plot_ica_overlay() (in module mne.viz)": [[798, "mne.viz.plot_ica_overlay"]], "plot_ica_properties() (in module mne.viz)": [[799, "mne.viz.plot_ica_properties"]], "plot_ica_scores() (in module mne.viz)": [[800, "mne.viz.plot_ica_scores"]], "plot_ica_sources() (in module mne.viz)": [[801, "mne.viz.plot_ica_sources"]], "plot_ideal_filter() (in module mne.viz)": [[802, "mne.viz.plot_ideal_filter"]], "plot_layout() (in module mne.viz)": [[803, "mne.viz.plot_layout"]], "plot_montage() (in module mne.viz)": [[804, "mne.viz.plot_montage"]], "plot_projs_joint() (in module mne.viz)": [[805, "mne.viz.plot_projs_joint"]], "plot_projs_topomap() (in module mne.viz)": [[806, "mne.viz.plot_projs_topomap"]], "plot_raw() (in module mne.viz)": [[807, "mne.viz.plot_raw"]], "plot_raw_psd() (in module mne.viz)": [[808, "mne.viz.plot_raw_psd"]], "plot_regression_weights() (in module mne.viz)": [[809, "mne.viz.plot_regression_weights"]], "plot_sensors() (in module mne.viz)": [[810, "mne.viz.plot_sensors"]], "plot_snr_estimate() (in module mne.viz)": [[811, "mne.viz.plot_snr_estimate"]], "plot_source_estimates() (in module mne.viz)": [[812, "mne.viz.plot_source_estimates"]], "plot_sparse_source_estimates() (in module mne.viz)": [[813, "mne.viz.plot_sparse_source_estimates"]], "plot_tfr_topomap() (in module mne.viz)": [[814, "mne.viz.plot_tfr_topomap"]], "plot_topo_image_epochs() (in module mne.viz)": [[815, "mne.viz.plot_topo_image_epochs"]], "plot_topomap() (in module mne.viz)": [[816, "mne.viz.plot_topomap"]], "plot_vector_source_estimates() (in module mne.viz)": [[817, "mne.viz.plot_vector_source_estimates"]], "plot_volume_source_estimates() (in module mne.viz)": [[818, "mne.viz.plot_volume_source_estimates"]], "set_3d_backend() (in module mne.viz)": [[819, "mne.viz.set_3d_backend"]], "set_3d_options() (in module mne.viz)": [[820, "mne.viz.set_3d_options"]], "set_3d_title() (in module mne.viz)": [[821, "mne.viz.set_3d_title"]], "set_3d_view() (in module mne.viz)": [[822, "mne.viz.set_3d_view"]], "set_browser_backend() (in module mne.viz)": [[823, "mne.viz.set_browser_backend"]], "snapshot_brain_montage() (in module mne.viz)": [[824, "mne.viz.snapshot_brain_montage"]], "use_3d_backend() (in module mne.viz)": [[825, "mne.viz.use_3d_backend"]], "use_browser_backend() (in module mne.viz)": [[826, "mne.viz.use_browser_backend"]], "what() (in module mne)": [[827, "mne.what"]], "write_bem_solution() (in module mne)": [[828, "mne.write_bem_solution"]], "write_bem_surfaces() (in module mne)": [[829, "mne.write_bem_surfaces"]], "write_cov() (in module mne)": [[830, "mne.write_cov"]], "write_events() (in module mne)": [[831, "mne.write_events"]], "write_evokeds() (in module mne)": [[832, "mne.write_evokeds"]], "write_forward_solution() (in module mne)": [[833, "mne.write_forward_solution"]], "write_head_bem() (in module mne)": [[834, "mne.write_head_bem"]], "write_label() (in module mne)": [[835, "mne.write_label"]], "write_labels_to_annot() (in module mne)": [[836, "mne.write_labels_to_annot"]], "write_proj() (in module mne)": [[837, "mne.write_proj"]], "write_source_spaces() (in module mne)": [[838, "mne.write_source_spaces"]], "write_surface() (in module mne)": [[839, "mne.write_surface"]], "write_trans() (in module mne)": [[840, "mne.write_trans"]], "bem": [[841, "term-BEM"]], "dc": [[841, "term-DC"]], "dics": [[841, "term-DICS"]], "ecd": [[841, "term-ECD"]], "freesurfer lut": [[841, "term-FreeSurfer-LUT"]], "gfp": [[841, "term-GFP"]], "hed": [[841, "term-HED"]], "hpi": [[841, "term-HPI"]], "lcmv": [[841, "term-LCMV"]], "lcmv beamformer": [[841, "term-LCMV-beamformer"]], "lut": [[841, "term-LUT"]], "mne": [[841, "term-MNE"], [876, "module-mne"]], "opm": [[841, "term-OPM"]], "ras": [[841, "term-RAS"]], "roi": [[841, "term-ROI"]], "squid": [[841, "term-SQUID"]], "ssp": [[841, "term-SSP"]], "stc": [[841, "term-STC"]], "anatomical landmark": [[841, "term-anatomical-landmark"]], "annotations": [[841, "term-annotations"]], "beamformer": [[841, "term-beamformer"]], "boundary element method": [[841, "term-boundary-element-method"]], "boundary element model": [[841, "term-boundary-element-model"]], "chpi": [[841, "term-cHPI"]], "channels": [[841, "term-channels"]], "dspm": [[841, "term-dSPM"]], "data channels": [[841, "term-data-channels"]], "digitization": [[841, "term-digitization"]], "dipole": [[841, "term-dipole"]], "direct current": [[841, "term-direct-current"]], "dynamic imaging of coherent sources": [[841, "term-dynamic-imaging-of-coherent-sources"]], "dynamic statistical parametric mapping": [[841, "term-dynamic-statistical-parametric-mapping"]], "eloreta": [[841, "term-eLORETA"]], "epochs": [[841, "term-epochs"]], "equivalent current dipole": [[841, "term-equivalent-current-dipole"]], "events": [[841, "term-events"]], "evoked": [[841, "term-evoked"]], "fiducial": [[841, "term-fiducial"]], "fiducial point": [[841, "term-fiducial-point"]], "first_samp": [[841, "term-first_samp"]], "forward": [[841, "term-forward"]], "forward solution": [[841, "term-forward-solution"]], "global field power": [[841, "term-global-field-power"]], "head position indicator": [[841, "term-head-position-indicator"]], "hierarchical event descriptors": [[841, "term-hierarchical-event-descriptors"]], "info": [[841, "term-info"]], "inverse": [[841, "term-inverse"]], "inverse operator": [[841, "term-inverse-operator"]], "label": [[841, "term-label"]], "last_samp": [[841, "term-last_samp"]], "layout": [[841, "term-layout"]], "maximum intensity projection": [[841, "term-maximum-intensity-projection"]], "measurement info": [[841, "term-measurement-info"]], "minimum-norm estimate": [[841, "term-minimum-norm-estimate"]], "minimum-norm estimation": [[841, "term-minimum-norm-estimation"]], "montage": [[841, "term-montage"]], "morphing": [[841, "term-morphing"]], "noise covariance": [[841, "term-noise-covariance"]], "optically pumped magnetometer": [[841, "term-optically-pumped-magnetometer"]], "path-like": [[841, "term-path-like"]], "pick": [[841, "term-pick"]], "projector": [[841, "term-projector"]], "raw": [[841, "term-raw"]], "region of interest": [[841, "term-region-of-interest"]], "sloreta": [[841, "term-sLORETA"]], "selection": [[841, "term-selection"]], "source estimate": [[841, "term-source-estimate"]], "source space": [[841, "term-source-space"]], "source time course": [[841, "term-source-time-course"]], "stim channel": [[841, "term-stim-channel"]], "superconducting quantum interference device": [[841, "term-superconducting-quantum-interference-device"]], "template montage": [[841, "term-template-montage"]], "tfr": [[841, "term-tfr"]], "trans": [[841, "term-trans"]], "trigger channel": [[841, "term-trigger-channel"]], "whitening": [[841, "term-whitening"]], "mne.beamformer": [[854, "module-mne.beamformer"]], "mne.dipole": [[854, "module-mne.dipole"]], "mne.inverse_sparse": [[854, "module-mne.inverse_sparse"]], "mne.minimum_norm": [[854, "module-mne.minimum_norm"]], "mne.cuda": [[855, "module-mne.cuda"]], "mne.utils": [[855, "module-mne.utils"]], "mne.channels": [[875, "module-mne.channels"]], "mne.chpi": [[875, "module-mne.chpi"]], "mne.filter": [[875, "module-mne.filter"]], "mne.preprocessing": [[875, "module-mne.preprocessing"]], "mne.preprocessing.eyetracking": [[875, "module-mne.preprocessing.eyetracking"]], "mne.preprocessing.ieeg": [[875, "module-mne.preprocessing.ieeg"]], "mne.preprocessing.nirs": [[875, "module-mne.preprocessing.nirs"]], "mne.transforms": [[875, "module-mne.transforms"]], "mne.io": [[877, "module-mne.io"]], "mne.io.kit": [[877, "module-mne.io.kit"]], "mne.baseline": [[880, "module-mne.baseline"]], "mne.simulation": [[881, "module-mne.simulation"]], "mne.simulation.metrics": [[881, "module-mne.simulation.metrics"]], "mne.stats": [[883, "module-mne.stats"]], "mne.time_frequency": [[884, "module-mne.time_frequency"]], "mne.time_frequency.tfr": [[884, "module-mne.time_frequency.tfr"]], "mne.viz": [[885, "module-mne.viz"]]}})