Search.setIndex({"docnames": ["auto_examples/connectivity/index", "auto_examples/datasets/brainstorm_data", "auto_examples/datasets/hf_sef_data", "auto_examples/datasets/index", "auto_examples/datasets/limo_data", "auto_examples/datasets/opm_data", "auto_examples/datasets/sg_execution_times", "auto_examples/datasets/spm_faces_dataset_sgskip", "auto_examples/decoding/decoding_csp_eeg", "auto_examples/decoding/decoding_csp_timefreq", "auto_examples/decoding/decoding_rsa_sgskip", "auto_examples/decoding/decoding_spatio_temporal_source", "auto_examples/decoding/decoding_spoc_CMC", "auto_examples/decoding/decoding_time_generalization_conditions", "auto_examples/decoding/decoding_unsupervised_spatial_filter", "auto_examples/decoding/decoding_xdawn_eeg", "auto_examples/decoding/ems_filtering", "auto_examples/decoding/index", "auto_examples/decoding/linear_model_patterns", "auto_examples/decoding/receptive_field_mtrf", "auto_examples/decoding/sg_execution_times", "auto_examples/decoding/ssd_spatial_filters", "auto_examples/forward/forward_sensitivity_maps", "auto_examples/forward/index", "auto_examples/forward/left_cerebellum_volume_source", "auto_examples/forward/sg_execution_times", "auto_examples/forward/source_space_morphing", "auto_examples/index", "auto_examples/inverse/compute_mne_inverse_epochs_in_label", "auto_examples/inverse/compute_mne_inverse_raw_in_label", "auto_examples/inverse/compute_mne_inverse_volume", "auto_examples/inverse/custom_inverse_solver", "auto_examples/inverse/dics_epochs", "auto_examples/inverse/dics_source_power", "auto_examples/inverse/evoked_ers_source_power", "auto_examples/inverse/gamma_map_inverse", "auto_examples/inverse/index", "auto_examples/inverse/label_activation_from_stc", "auto_examples/inverse/label_from_stc", "auto_examples/inverse/label_source_activations", "auto_examples/inverse/mixed_norm_inverse", "auto_examples/inverse/mixed_source_space_inverse", "auto_examples/inverse/mne_cov_power", "auto_examples/inverse/morph_surface_stc", "auto_examples/inverse/morph_volume_stc", "auto_examples/inverse/multi_dipole_model", "auto_examples/inverse/multidict_reweighted_tfmxne", "auto_examples/inverse/psf_ctf_label_leakage", "auto_examples/inverse/psf_ctf_vertices", "auto_examples/inverse/psf_ctf_vertices_lcmv", "auto_examples/inverse/psf_volume", "auto_examples/inverse/rap_music", "auto_examples/inverse/read_inverse", "auto_examples/inverse/read_stc", "auto_examples/inverse/resolution_metrics", "auto_examples/inverse/resolution_metrics_eegmeg", "auto_examples/inverse/sg_execution_times", "auto_examples/inverse/snr_estimate", "auto_examples/inverse/source_space_snr", "auto_examples/inverse/time_frequency_mixed_norm_inverse", "auto_examples/inverse/vector_mne_solution", "auto_examples/io/elekta_epochs", "auto_examples/io/index", "auto_examples/io/read_neo_format", "auto_examples/io/read_noise_covariance_matrix", "auto_examples/io/read_xdf", "auto_examples/io/sg_execution_times", "auto_examples/preprocessing/contralateral_referencing", "auto_examples/preprocessing/css", "auto_examples/preprocessing/define_target_events", "auto_examples/preprocessing/eeg_bridging", "auto_examples/preprocessing/eeg_csd", "auto_examples/preprocessing/eog_artifact_histogram", "auto_examples/preprocessing/eog_regression", "auto_examples/preprocessing/find_ref_artifacts", "auto_examples/preprocessing/fnirs_artifact_removal", "auto_examples/preprocessing/ica_comparison", "auto_examples/preprocessing/index", "auto_examples/preprocessing/interpolate_bad_channels", "auto_examples/preprocessing/movement_compensation", "auto_examples/preprocessing/movement_detection", "auto_examples/preprocessing/muscle_detection", "auto_examples/preprocessing/muscle_ica", "auto_examples/preprocessing/otp", "auto_examples/preprocessing/sg_execution_times", "auto_examples/preprocessing/shift_evoked", "auto_examples/preprocessing/virtual_evoked", "auto_examples/preprocessing/xdawn_denoising", "auto_examples/simulation/index", "auto_examples/simulation/plot_stc_metrics", "auto_examples/simulation/sg_execution_times", "auto_examples/simulation/simulate_evoked_data", "auto_examples/simulation/simulate_raw_data", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy", "auto_examples/simulation/source_simulator", "auto_examples/stats/cluster_stats_evoked", "auto_examples/stats/fdr_stats_evoked", "auto_examples/stats/index", "auto_examples/stats/linear_regression_raw", "auto_examples/stats/sensor_permutation_test", "auto_examples/stats/sensor_regression", "auto_examples/stats/sg_execution_times", "auto_examples/time_frequency/compute_csd", "auto_examples/time_frequency/compute_source_psd_epochs", "auto_examples/time_frequency/index", "auto_examples/time_frequency/sg_execution_times", "auto_examples/time_frequency/source_label_time_frequency", "auto_examples/time_frequency/source_power_spectrum", "auto_examples/time_frequency/source_power_spectrum_opm", "auto_examples/time_frequency/source_space_time_frequency", "auto_examples/time_frequency/temporal_whitening", "auto_examples/time_frequency/time_frequency_erds", "auto_examples/time_frequency/time_frequency_global_field_power", "auto_examples/time_frequency/time_frequency_simulated", "auto_examples/visualization/3d_to_2d", "auto_examples/visualization/brain", "auto_examples/visualization/channel_epochs_image", "auto_examples/visualization/eeg_on_scalp", "auto_examples/visualization/evoked_arrowmap", "auto_examples/visualization/evoked_topomap", "auto_examples/visualization/evoked_whitening", "auto_examples/visualization/index", "auto_examples/visualization/meg_sensors", "auto_examples/visualization/mne_helmet", "auto_examples/visualization/montage_sgskip", "auto_examples/visualization/parcellation", "auto_examples/visualization/publication_figure", "auto_examples/visualization/roi_erpimage_by_rt", "auto_examples/visualization/sensor_noise_level", "auto_examples/visualization/sg_execution_times", "auto_examples/visualization/ssp_projs_sensitivity_map", "auto_examples/visualization/topo_compare_conditions", "auto_examples/visualization/topo_customized", "auto_examples/visualization/xhemi", "auto_tutorials/clinical/20_seeg", "auto_tutorials/clinical/30_ecog", "auto_tutorials/clinical/60_sleep", "auto_tutorials/clinical/index", "auto_tutorials/clinical/sg_execution_times", "auto_tutorials/epochs/10_epochs_overview", "auto_tutorials/epochs/15_baseline_regression", "auto_tutorials/epochs/20_visualize_epochs", "auto_tutorials/epochs/30_epochs_metadata", "auto_tutorials/epochs/40_autogenerate_metadata", "auto_tutorials/epochs/50_epochs_to_data_frame", "auto_tutorials/epochs/60_make_fixed_length_epochs", "auto_tutorials/epochs/index", "auto_tutorials/epochs/sg_execution_times", "auto_tutorials/evoked/10_evoked_overview", "auto_tutorials/evoked/20_visualize_evoked", "auto_tutorials/evoked/30_eeg_erp", "auto_tutorials/evoked/40_whitened", "auto_tutorials/evoked/index", "auto_tutorials/evoked/sg_execution_times", "auto_tutorials/forward/10_background_freesurfer", "auto_tutorials/forward/20_source_alignment", "auto_tutorials/forward/25_automated_coreg", "auto_tutorials/forward/30_forward", "auto_tutorials/forward/35_eeg_no_mri", "auto_tutorials/forward/50_background_freesurfer_mne", "auto_tutorials/forward/80_fix_bem_in_blender", "auto_tutorials/forward/90_compute_covariance", "auto_tutorials/forward/index", "auto_tutorials/forward/sg_execution_times", "auto_tutorials/index", "auto_tutorials/intro/10_overview", "auto_tutorials/intro/15_inplace", "auto_tutorials/intro/20_events_from_raw", "auto_tutorials/intro/30_info", "auto_tutorials/intro/40_sensor_locations", "auto_tutorials/intro/50_configure_mne", "auto_tutorials/intro/70_report", "auto_tutorials/intro/index", "auto_tutorials/intro/sg_execution_times", "auto_tutorials/inverse/10_stc_class", "auto_tutorials/inverse/20_dipole_fit", "auto_tutorials/inverse/30_mne_dspm_loreta", "auto_tutorials/inverse/35_dipole_orientations", "auto_tutorials/inverse/40_mne_fixed_free", "auto_tutorials/inverse/50_beamformer_lcmv", "auto_tutorials/inverse/60_visualize_stc", "auto_tutorials/inverse/70_eeg_mri_coords", "auto_tutorials/inverse/80_brainstorm_phantom_elekta", "auto_tutorials/inverse/85_brainstorm_phantom_ctf", "auto_tutorials/inverse/90_phantom_4DBTi", "auto_tutorials/inverse/index", "auto_tutorials/inverse/sg_execution_times", "auto_tutorials/io/10_reading_meg_data", "auto_tutorials/io/20_reading_eeg_data", "auto_tutorials/io/30_reading_fnirs_data", "auto_tutorials/io/60_ctf_bst_auditory", "auto_tutorials/io/70_reading_eyetracking_data", "auto_tutorials/io/index", "auto_tutorials/io/sg_execution_times", "auto_tutorials/machine-learning/30_strf", "auto_tutorials/machine-learning/50_decoding", "auto_tutorials/machine-learning/index", "auto_tutorials/machine-learning/sg_execution_times", "auto_tutorials/preprocessing/10_preprocessing_overview", "auto_tutorials/preprocessing/15_handling_bad_channels", "auto_tutorials/preprocessing/20_rejecting_bad_data", "auto_tutorials/preprocessing/25_background_filtering", "auto_tutorials/preprocessing/30_filtering_resampling", "auto_tutorials/preprocessing/35_artifact_correction_regression", "auto_tutorials/preprocessing/40_artifact_correction_ica", "auto_tutorials/preprocessing/45_projectors_background", "auto_tutorials/preprocessing/50_artifact_correction_ssp", "auto_tutorials/preprocessing/55_setting_eeg_reference", "auto_tutorials/preprocessing/59_head_positions", "auto_tutorials/preprocessing/60_maxwell_filtering_sss", "auto_tutorials/preprocessing/70_fnirs_processing", "auto_tutorials/preprocessing/80_opm_processing", "auto_tutorials/preprocessing/90_eyetracking_data", "auto_tutorials/preprocessing/index", "auto_tutorials/preprocessing/sg_execution_times", "auto_tutorials/raw/10_raw_overview", "auto_tutorials/raw/20_event_arrays", "auto_tutorials/raw/30_annotate_raw", "auto_tutorials/raw/40_visualize_raw", "auto_tutorials/raw/index", "auto_tutorials/raw/sg_execution_times", "auto_tutorials/simulation/10_array_objs", "auto_tutorials/simulation/70_point_spread", "auto_tutorials/simulation/80_dics", "auto_tutorials/simulation/index", "auto_tutorials/simulation/sg_execution_times", "auto_tutorials/stats-sensor-space/10_background_stats", "auto_tutorials/stats-sensor-space/20_erp_stats", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal", "auto_tutorials/stats-sensor-space/index", "auto_tutorials/stats-sensor-space/sg_execution_times", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal", "auto_tutorials/stats-source-space/index", "auto_tutorials/stats-source-space/sg_execution_times", "auto_tutorials/time-freq/10_spectrum_class", "auto_tutorials/time-freq/20_sensors_time_frequency", "auto_tutorials/time-freq/50_ssvep", "auto_tutorials/time-freq/index", "auto_tutorials/time-freq/sg_execution_times", "bibliography", "cited", "connectivity", "covariance", "creating_from_arrays", "datasets", "decoding", "events", "export", "file_io", "forward", "funding", "generated/commands", "generated/mne.AcqParserFIF", "generated/mne.Annotations", "generated/mne.BaseEpochs", "generated/mne.BiHemiLabel", "generated/mne.Covariance", "generated/mne.Dipole", "generated/mne.DipoleFixed", "generated/mne.Epochs", "generated/mne.EpochsArray", "generated/mne.Evoked", "generated/mne.EvokedArray", "generated/mne.Forward", "generated/mne.Info", "generated/mne.Label", "generated/mne.MixedSourceEstimate", "generated/mne.MixedVectorSourceEstimate", "generated/mne.Projection", "generated/mne.Report", "generated/mne.SourceEstimate", "generated/mne.SourceMorph", "generated/mne.SourceSpaces", "generated/mne.VectorSourceEstimate", "generated/mne.VolSourceEstimate", "generated/mne.VolVectorSourceEstimate", "generated/mne.add_reference_channels", "generated/mne.add_source_space_distances", "generated/mne.annotations_from_events", "generated/mne.apply_forward", "generated/mne.apply_forward_raw", "generated/mne.average_forward_solutions", "generated/mne.baseline.rescale", "generated/mne.beamformer.Beamformer", "generated/mne.beamformer.apply_dics", "generated/mne.beamformer.apply_dics_csd", "generated/mne.beamformer.apply_dics_epochs", "generated/mne.beamformer.apply_dics_tfr_epochs", "generated/mne.beamformer.apply_lcmv", "generated/mne.beamformer.apply_lcmv_cov", "generated/mne.beamformer.apply_lcmv_epochs", "generated/mne.beamformer.apply_lcmv_raw", "generated/mne.beamformer.make_dics", "generated/mne.beamformer.make_lcmv", "generated/mne.beamformer.make_lcmv_resolution_matrix", "generated/mne.beamformer.rap_music", "generated/mne.beamformer.read_beamformer", "generated/mne.bem.ConductorModel", "generated/mne.bem.convert_flash_mris", "generated/mne.bem.distance_to_bem", "generated/mne.bem.fit_sphere_to_headshape", "generated/mne.bem.get_fitting_dig", "generated/mne.bem.make_flash_bem", "generated/mne.bem.make_scalp_surfaces", "generated/mne.bem.make_watershed_bem", "generated/mne.channel_indices_by_type", "generated/mne.channel_type", "generated/mne.channels.DigMontage", "generated/mne.channels.Layout", "generated/mne.channels.combine_channels", "generated/mne.channels.compute_dev_head_t", "generated/mne.channels.compute_native_head_t", "generated/mne.channels.equalize_channels", "generated/mne.channels.find_ch_adjacency", "generated/mne.channels.find_layout", "generated/mne.channels.fix_mag_coil_types", "generated/mne.channels.generate_2d_layout", "generated/mne.channels.get_builtin_ch_adjacencies", "generated/mne.channels.get_builtin_montages", "generated/mne.channels.make_1020_channel_selections", "generated/mne.channels.make_dig_montage", "generated/mne.channels.make_eeg_layout", "generated/mne.channels.make_grid_layout", "generated/mne.channels.make_standard_montage", "generated/mne.channels.read_ch_adjacency", "generated/mne.channels.read_custom_montage", "generated/mne.channels.read_dig_captrak", "generated/mne.channels.read_dig_dat", "generated/mne.channels.read_dig_egi", "generated/mne.channels.read_dig_fif", "generated/mne.channels.read_dig_hpts", "generated/mne.channels.read_dig_localite", "generated/mne.channels.read_dig_polhemus_isotrak", "generated/mne.channels.read_layout", "generated/mne.channels.read_polhemus_fastscan", "generated/mne.channels.rename_channels", "generated/mne.chpi.compute_chpi_amplitudes", "generated/mne.chpi.compute_chpi_locs", "generated/mne.chpi.compute_chpi_snr", "generated/mne.chpi.compute_head_pos", "generated/mne.chpi.extract_chpi_locs_ctf", "generated/mne.chpi.extract_chpi_locs_kit", "generated/mne.chpi.filter_chpi", "generated/mne.chpi.get_active_chpi", "generated/mne.chpi.get_chpi_info", "generated/mne.chpi.head_pos_to_trans_rot_t", "generated/mne.chpi.read_head_pos", "generated/mne.chpi.write_head_pos", "generated/mne.combine_evoked", "generated/mne.compute_covariance", "generated/mne.compute_proj_epochs", "generated/mne.compute_proj_evoked", "generated/mne.compute_proj_raw", "generated/mne.compute_rank", "generated/mne.compute_raw_covariance", "generated/mne.compute_source_morph", "generated/mne.concatenate_epochs", "generated/mne.concatenate_events", "generated/mne.concatenate_raws", "generated/mne.convert_forward_solution", "generated/mne.coreg.Coregistration", "generated/mne.coreg.estimate_head_mri_t", "generated/mne.coreg.get_mni_fiducials", "generated/mne.count_events", "generated/mne.cov.compute_whitener", "generated/mne.cov.prepare_noise_cov", "generated/mne.cov.regularize", "generated/mne.create_default_subject", "generated/mne.create_info", "generated/mne.cuda.get_cuda_memory", "generated/mne.cuda.init_cuda", "generated/mne.cuda.set_cuda_device", "generated/mne.datasets.brainstorm.bst_auditory.data_path", "generated/mne.datasets.brainstorm.bst_raw.data_path", "generated/mne.datasets.brainstorm.bst_resting.data_path", "generated/mne.datasets.eegbci.load_data", "generated/mne.datasets.eegbci.standardize", "generated/mne.datasets.epilepsy_ecog.data_path", "generated/mne.datasets.erp_core.data_path", "generated/mne.datasets.eyelink.data_path", "generated/mne.datasets.fetch_aparc_sub_parcellation", "generated/mne.datasets.fetch_dataset", "generated/mne.datasets.fetch_fsaverage", "generated/mne.datasets.fetch_hcp_mmp_parcellation", "generated/mne.datasets.fetch_infant_template", "generated/mne.datasets.fetch_phantom", "generated/mne.datasets.fnirs_motor.data_path", "generated/mne.datasets.has_dataset", "generated/mne.datasets.hf_sef.data_path", "generated/mne.datasets.kiloword.data_path", "generated/mne.datasets.limo.load_data", "generated/mne.datasets.misc.data_path", "generated/mne.datasets.mtrf.data_path", "generated/mne.datasets.multimodal.data_path", "generated/mne.datasets.opm.data_path", "generated/mne.datasets.phantom_4dbti.data_path", "generated/mne.datasets.refmeg_noise.data_path", "generated/mne.datasets.sample.data_path", "generated/mne.datasets.sleep_physionet.age.fetch_data", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data", "generated/mne.datasets.somato.data_path", "generated/mne.datasets.spm_face.data_path", "generated/mne.datasets.ssvep.data_path", "generated/mne.datasets.ucl_opm_auditory.data_path", "generated/mne.datasets.visual_92_categories.data_path", "generated/mne.decimate_surface", "generated/mne.decoding.CSP", "generated/mne.decoding.EMS", "generated/mne.decoding.FilterEstimator", "generated/mne.decoding.GeneralizingEstimator", "generated/mne.decoding.LinearModel", "generated/mne.decoding.PSDEstimator", "generated/mne.decoding.ReceptiveField", "generated/mne.decoding.SPoC", "generated/mne.decoding.SSD", "generated/mne.decoding.Scaler", "generated/mne.decoding.SlidingEstimator", "generated/mne.decoding.TemporalFilter", "generated/mne.decoding.TimeDelayingRidge", "generated/mne.decoding.TimeFrequency", "generated/mne.decoding.UnsupervisedSpatialFilter", "generated/mne.decoding.Vectorizer", "generated/mne.decoding.compute_ems", "generated/mne.decoding.cross_val_multiscore", "generated/mne.decoding.get_coef", "generated/mne.dig_mri_distances", "generated/mne.dipole.get_phantom_dipoles", "generated/mne.epochs.average_movements", "generated/mne.epochs.combine_event_ids", "generated/mne.epochs.equalize_epoch_counts", "generated/mne.epochs.make_metadata", "generated/mne.equalize_channels", "generated/mne.event.define_target_events", "generated/mne.event.match_event_names", "generated/mne.event.shift_time_events", "generated/mne.events_from_annotations", "generated/mne.export.export_epochs", "generated/mne.export.export_evokeds", "generated/mne.export.export_evokeds_mff", "generated/mne.export.export_raw", "generated/mne.extract_label_time_course", "generated/mne.filter.construct_iir_filter", "generated/mne.filter.create_filter", "generated/mne.filter.estimate_ringing_samples", "generated/mne.filter.filter_data", "generated/mne.filter.notch_filter", "generated/mne.filter.resample", "generated/mne.find_events", "generated/mne.find_stim_steps", "generated/mne.fit_dipole", "generated/mne.forward.compute_depth_prior", "generated/mne.forward.compute_orient_prior", "generated/mne.forward.restrict_forward_to_label", "generated/mne.forward.restrict_forward_to_stc", "generated/mne.get_config", "generated/mne.get_config_path", "generated/mne.get_head_surf", "generated/mne.get_meg_helmet_surf", "generated/mne.get_montage_volume_labels", "generated/mne.get_volume_labels_from_aseg", "generated/mne.get_volume_labels_from_src", "generated/mne.grade_to_tris", "generated/mne.grade_to_vertices", "generated/mne.grand_average", "generated/mne.grow_labels", "generated/mne.gui.coregistration", "generated/mne.gui.locate_ieeg", "generated/mne.head_to_mni", "generated/mne.head_to_mri", "generated/mne.inverse_sparse.gamma_map", "generated/mne.inverse_sparse.make_stc_from_dipoles", "generated/mne.inverse_sparse.mixed_norm", "generated/mne.inverse_sparse.tf_mixed_norm", "generated/mne.io.BaseRaw", "generated/mne.io.Raw", "generated/mne.io.RawArray", "generated/mne.io.anonymize_info", "generated/mne.io.kit.read_mrk", "generated/mne.io.read_fiducials", "generated/mne.io.read_info", "generated/mne.io.read_raw", "generated/mne.io.read_raw_artemis123", "generated/mne.io.read_raw_bdf", "generated/mne.io.read_raw_boxy", "generated/mne.io.read_raw_brainvision", "generated/mne.io.read_raw_bti", "generated/mne.io.read_raw_cnt", "generated/mne.io.read_raw_ctf", "generated/mne.io.read_raw_curry", "generated/mne.io.read_raw_edf", "generated/mne.io.read_raw_eeglab", "generated/mne.io.read_raw_egi", "generated/mne.io.read_raw_eximia", "generated/mne.io.read_raw_eyelink", "generated/mne.io.read_raw_fieldtrip", "generated/mne.io.read_raw_fif", "generated/mne.io.read_raw_fil", "generated/mne.io.read_raw_gdf", "generated/mne.io.read_raw_hitachi", "generated/mne.io.read_raw_kit", "generated/mne.io.read_raw_nedf", "generated/mne.io.read_raw_nicolet", "generated/mne.io.read_raw_nihon", "generated/mne.io.read_raw_nirx", "generated/mne.io.read_raw_persyst", "generated/mne.io.read_raw_snirf", "generated/mne.io.show_fiff", "generated/mne.io.write_fiducials", "generated/mne.label.select_sources", "generated/mne.label_sign_flip", "generated/mne.labels_to_stc", "generated/mne.make_ad_hoc_cov", "generated/mne.make_bem_model", "generated/mne.make_bem_solution", "generated/mne.make_field_map", "generated/mne.make_fixed_length_epochs", "generated/mne.make_fixed_length_events", "generated/mne.make_forward_dipole", "generated/mne.make_forward_solution", "generated/mne.make_sphere_model", "generated/mne.match_channel_orders", "generated/mne.merge_events", "generated/mne.minimum_norm.InverseOperator", "generated/mne.minimum_norm.apply_inverse", "generated/mne.minimum_norm.apply_inverse_cov", "generated/mne.minimum_norm.apply_inverse_epochs", "generated/mne.minimum_norm.apply_inverse_raw", "generated/mne.minimum_norm.apply_inverse_tfr_epochs", "generated/mne.minimum_norm.compute_rank_inverse", "generated/mne.minimum_norm.compute_source_psd", "generated/mne.minimum_norm.compute_source_psd_epochs", "generated/mne.minimum_norm.estimate_snr", "generated/mne.minimum_norm.get_cross_talk", "generated/mne.minimum_norm.get_point_spread", "generated/mne.minimum_norm.make_inverse_operator", "generated/mne.minimum_norm.make_inverse_resolution_matrix", "generated/mne.minimum_norm.prepare_inverse_operator", "generated/mne.minimum_norm.read_inverse_operator", "generated/mne.minimum_norm.resolution_metrics", "generated/mne.minimum_norm.source_band_induced_power", "generated/mne.minimum_norm.source_induced_power", "generated/mne.minimum_norm.write_inverse_operator", "generated/mne.morph_labels", "generated/mne.morph_source_spaces", "generated/mne.open_docs", "generated/mne.open_report", "generated/mne.parse_config", "generated/mne.pick_channels", "generated/mne.pick_channels_cov", "generated/mne.pick_channels_forward", "generated/mne.pick_channels_regexp", "generated/mne.pick_events", "generated/mne.pick_info", "generated/mne.pick_types", "generated/mne.pick_types_forward", "generated/mne.preprocessing.EOGRegression", "generated/mne.preprocessing.ICA", "generated/mne.preprocessing.Xdawn", "generated/mne.preprocessing.annotate_amplitude", "generated/mne.preprocessing.annotate_break", "generated/mne.preprocessing.annotate_movement", "generated/mne.preprocessing.annotate_muscle_zscore", "generated/mne.preprocessing.annotate_nan", "generated/mne.preprocessing.compute_average_dev_head_t", "generated/mne.preprocessing.compute_bridged_electrodes", "generated/mne.preprocessing.compute_current_source_density", "generated/mne.preprocessing.compute_fine_calibration", "generated/mne.preprocessing.compute_maxwell_basis", "generated/mne.preprocessing.compute_proj_ecg", "generated/mne.preprocessing.compute_proj_eog", "generated/mne.preprocessing.compute_proj_hfc", "generated/mne.preprocessing.corrmap", "generated/mne.preprocessing.cortical_signal_suppression", "generated/mne.preprocessing.create_ecg_epochs", "generated/mne.preprocessing.create_eog_epochs", "generated/mne.preprocessing.equalize_bads", "generated/mne.preprocessing.eyetracking.set_channel_types_eyetrack", "generated/mne.preprocessing.find_bad_channels_maxwell", "generated/mne.preprocessing.find_ecg_events", "generated/mne.preprocessing.find_eog_events", "generated/mne.preprocessing.fix_stim_artifact", "generated/mne.preprocessing.ica_find_ecg_events", "generated/mne.preprocessing.ica_find_eog_events", "generated/mne.preprocessing.ieeg.make_montage_volume", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain", "generated/mne.preprocessing.ieeg.warp_montage", "generated/mne.preprocessing.infomax", "generated/mne.preprocessing.interpolate_bridged_electrodes", "generated/mne.preprocessing.maxwell_filter", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom", "generated/mne.preprocessing.nirs.beer_lambert_law", "generated/mne.preprocessing.nirs.optical_density", "generated/mne.preprocessing.nirs.scalp_coupling_index", "generated/mne.preprocessing.nirs.short_channels", "generated/mne.preprocessing.nirs.source_detector_distances", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair", "generated/mne.preprocessing.oversampled_temporal_projection", "generated/mne.preprocessing.peak_finder", "generated/mne.preprocessing.read_eog_regression", "generated/mne.preprocessing.read_fine_calibration", "generated/mne.preprocessing.read_ica", "generated/mne.preprocessing.read_ica_eeglab", "generated/mne.preprocessing.realign_raw", "generated/mne.preprocessing.regress_artifact", "generated/mne.preprocessing.write_fine_calibration", "generated/mne.random_parcellation", "generated/mne.read_annotations", "generated/mne.read_bem_solution", "generated/mne.read_bem_surfaces", "generated/mne.read_cov", "generated/mne.read_dipole", "generated/mne.read_epochs", "generated/mne.read_epochs_eeglab", "generated/mne.read_epochs_fieldtrip", "generated/mne.read_epochs_kit", "generated/mne.read_events", "generated/mne.read_evoked_besa", "generated/mne.read_evoked_fieldtrip", "generated/mne.read_evokeds", "generated/mne.read_evokeds_mff", "generated/mne.read_forward_solution", "generated/mne.read_freesurfer_lut", "generated/mne.read_label", "generated/mne.read_labels_from_annot", "generated/mne.read_lta", "generated/mne.read_morph_map", "generated/mne.read_proj", "generated/mne.read_reject_parameters", "generated/mne.read_source_estimate", "generated/mne.read_source_morph", "generated/mne.read_source_spaces", "generated/mne.read_surface", "generated/mne.read_talxfm", "generated/mne.read_trans", "generated/mne.read_tri", "generated/mne.read_vectorview_selection", "generated/mne.rename_channels", "generated/mne.scale_bem", "generated/mne.scale_labels", "generated/mne.scale_mri", "generated/mne.scale_source_space", "generated/mne.sensitivity_map", "generated/mne.set_bipolar_reference", "generated/mne.set_cache_dir", "generated/mne.set_config", "generated/mne.set_eeg_reference", "generated/mne.set_log_file", "generated/mne.set_log_level", "generated/mne.set_memmap_min_size", "generated/mne.setup_source_space", "generated/mne.setup_volume_source_space", "generated/mne.simulation.SourceSimulator", "generated/mne.simulation.add_chpi", "generated/mne.simulation.add_ecg", "generated/mne.simulation.add_eog", "generated/mne.simulation.add_noise", "generated/mne.simulation.metrics.cosine_score", "generated/mne.simulation.metrics.f1_score", "generated/mne.simulation.metrics.peak_position_error", "generated/mne.simulation.metrics.precision_score", "generated/mne.simulation.metrics.recall_score", "generated/mne.simulation.metrics.region_localization_error", "generated/mne.simulation.metrics.roc_auc_score", "generated/mne.simulation.metrics.spatial_deviation_error", "generated/mne.simulation.select_source_in_label", "generated/mne.simulation.simulate_evoked", "generated/mne.simulation.simulate_raw", "generated/mne.simulation.simulate_sparse_stc", "generated/mne.simulation.simulate_stc", "generated/mne.source_space.compute_distance_to_sensors", "generated/mne.source_space.get_decimated_surfaces", "generated/mne.spatial_dist_adjacency", "generated/mne.spatial_inter_hemi_adjacency", "generated/mne.spatial_src_adjacency", "generated/mne.spatial_tris_adjacency", "generated/mne.spatio_temporal_dist_adjacency", "generated/mne.spatio_temporal_src_adjacency", "generated/mne.spatio_temporal_tris_adjacency", "generated/mne.split_label", "generated/mne.stats.bonferroni_correction", "generated/mne.stats.bootstrap_confidence_interval", "generated/mne.stats.combine_adjacency", "generated/mne.stats.f_mway_rm", "generated/mne.stats.f_oneway", "generated/mne.stats.f_threshold_mway_rm", "generated/mne.stats.fdr_correction", "generated/mne.stats.linear_regression", "generated/mne.stats.linear_regression_raw", "generated/mne.stats.permutation_cluster_1samp_test", "generated/mne.stats.permutation_cluster_test", "generated/mne.stats.permutation_t_test", "generated/mne.stats.spatio_temporal_cluster_1samp_test", "generated/mne.stats.spatio_temporal_cluster_test", "generated/mne.stats.summarize_clusters_stc", "generated/mne.stats.ttest_1samp_no_p", "generated/mne.stats.ttest_ind_no_p", "generated/mne.stc_near_sensors", "generated/mne.stc_to_label", "generated/mne.surface.complete_surface_info", "generated/mne.surface.read_curvature", "generated/mne.sys_info", "generated/mne.time_frequency.AverageTFR", "generated/mne.time_frequency.CrossSpectralDensity", "generated/mne.time_frequency.EpochsSpectrum", "generated/mne.time_frequency.EpochsTFR", "generated/mne.time_frequency.Spectrum", "generated/mne.time_frequency.csd_array_fourier", "generated/mne.time_frequency.csd_array_morlet", "generated/mne.time_frequency.csd_array_multitaper", "generated/mne.time_frequency.csd_fourier", "generated/mne.time_frequency.csd_morlet", "generated/mne.time_frequency.csd_multitaper", "generated/mne.time_frequency.csd_tfr", "generated/mne.time_frequency.dpss_windows", "generated/mne.time_frequency.fit_iir_model_raw", "generated/mne.time_frequency.fwhm", "generated/mne.time_frequency.istft", "generated/mne.time_frequency.morlet", "generated/mne.time_frequency.pick_channels_csd", "generated/mne.time_frequency.psd_array_multitaper", "generated/mne.time_frequency.psd_array_welch", "generated/mne.time_frequency.read_csd", "generated/mne.time_frequency.read_spectrum", "generated/mne.time_frequency.read_tfrs", "generated/mne.time_frequency.stft", "generated/mne.time_frequency.stftfreq", "generated/mne.time_frequency.tfr.cwt", "generated/mne.time_frequency.tfr.morlet", "generated/mne.time_frequency.tfr_array_morlet", "generated/mne.time_frequency.tfr_array_multitaper", "generated/mne.time_frequency.tfr_array_stockwell", "generated/mne.time_frequency.tfr_morlet", "generated/mne.time_frequency.tfr_multitaper", "generated/mne.time_frequency.tfr_stockwell", "generated/mne.time_frequency.write_tfrs", "generated/mne.transform_surface_to", "generated/mne.transforms.Transform", "generated/mne.transforms.apply_volume_registration", "generated/mne.transforms.apply_volume_registration_points", "generated/mne.transforms.compute_volume_registration", "generated/mne.transforms.quat_to_rot", "generated/mne.transforms.read_ras_mni_t", "generated/mne.transforms.rot_to_quat", "generated/mne.use_coil_def", "generated/mne.use_log_level", "generated/mne.utils.deprecated", "generated/mne.utils.warn", "generated/mne.verbose", "generated/mne.vertex_to_mni", "generated/mne.viz.Brain", "generated/mne.viz.ClickableImage", "generated/mne.viz.Figure3D", "generated/mne.viz.add_background_image", "generated/mne.viz.centers_to_edges", "generated/mne.viz.circular_layout", "generated/mne.viz.close_3d_figure", "generated/mne.viz.close_all_3d_figures", "generated/mne.viz.compare_fiff", "generated/mne.viz.create_3d_figure", "generated/mne.viz.get_3d_backend", "generated/mne.viz.get_brain_class", "generated/mne.viz.get_browser_backend", "generated/mne.viz.iter_topography", "generated/mne.viz.link_brains", "generated/mne.viz.mne_analyze_colormap", "generated/mne.viz.plot_alignment", "generated/mne.viz.plot_arrowmap", "generated/mne.viz.plot_bem", "generated/mne.viz.plot_brain_colorbar", "generated/mne.viz.plot_bridged_electrodes", "generated/mne.viz.plot_ch_adjacency", "generated/mne.viz.plot_channel_labels_circle", "generated/mne.viz.plot_chpi_snr", "generated/mne.viz.plot_compare_evokeds", "generated/mne.viz.plot_cov", "generated/mne.viz.plot_csd", "generated/mne.viz.plot_dipole_amplitudes", "generated/mne.viz.plot_dipole_locations", "generated/mne.viz.plot_drop_log", "generated/mne.viz.plot_epochs", "generated/mne.viz.plot_epochs_image", "generated/mne.viz.plot_epochs_psd_topomap", "generated/mne.viz.plot_events", "generated/mne.viz.plot_evoked", "generated/mne.viz.plot_evoked_field", "generated/mne.viz.plot_evoked_image", "generated/mne.viz.plot_evoked_joint", "generated/mne.viz.plot_evoked_topo", "generated/mne.viz.plot_evoked_topomap", "generated/mne.viz.plot_evoked_white", "generated/mne.viz.plot_filter", "generated/mne.viz.plot_head_positions", "generated/mne.viz.plot_ica_components", "generated/mne.viz.plot_ica_overlay", "generated/mne.viz.plot_ica_properties", "generated/mne.viz.plot_ica_scores", "generated/mne.viz.plot_ica_sources", "generated/mne.viz.plot_ideal_filter", "generated/mne.viz.plot_layout", "generated/mne.viz.plot_montage", "generated/mne.viz.plot_projs_joint", "generated/mne.viz.plot_projs_topomap", "generated/mne.viz.plot_raw", "generated/mne.viz.plot_raw_psd", "generated/mne.viz.plot_regression_weights", "generated/mne.viz.plot_sensors", "generated/mne.viz.plot_snr_estimate", "generated/mne.viz.plot_source_estimates", "generated/mne.viz.plot_sparse_source_estimates", "generated/mne.viz.plot_tfr_topomap", "generated/mne.viz.plot_topo_image_epochs", "generated/mne.viz.plot_topomap", "generated/mne.viz.plot_vector_source_estimates", "generated/mne.viz.plot_volume_source_estimates", "generated/mne.viz.set_3d_backend", "generated/mne.viz.set_3d_options", "generated/mne.viz.set_3d_title", "generated/mne.viz.set_3d_view", "generated/mne.viz.set_browser_backend", "generated/mne.viz.snapshot_brain_montage", "generated/mne.viz.use_3d_backend", "generated/mne.viz.use_browser_backend", "generated/mne.what", "generated/mne.write_bem_solution", "generated/mne.write_bem_surfaces", "generated/mne.write_cov", "generated/mne.write_events", "generated/mne.write_evokeds", "generated/mne.write_forward_solution", "generated/mne.write_head_bem", "generated/mne.write_label", "generated/mne.write_labels_to_annot", "generated/mne.write_proj", "generated/mne.write_source_spaces", "generated/mne.write_surface", "generated/mne.write_trans", "glossary", "index", "install/advanced", "install/check_installation", "install/contributing", "install/freesurfer", "install/index", "install/installers", "install/manual_install", "install/manual_install_python", "install/mne_c", "install/mne_tools_suite", "install/updating", "inverse", "logging", "martinos", "mne_cpp", "most_used_classes", "mri", "overview/cite", "overview/cookbook", "overview/datasets_index", "overview/design_philosophy", "overview/development", "overview/faq", "overview/get_help", "overview/governance", "overview/implementation", "overview/index", "overview/learn_python", "overview/matlab", "overview/migrating", "overview/people", "overview/roadmap", "preprocessing", "python_reference", "reading_raw_data", "realtime", "report", "sensor_space", "simulation", "source_space", "statistics", "time_frequency", "visualization", "whats_new"], "filenames": ["auto_examples/connectivity/index.rst", "auto_examples/datasets/brainstorm_data.rst", "auto_examples/datasets/hf_sef_data.rst", "auto_examples/datasets/index.rst", "auto_examples/datasets/limo_data.rst", "auto_examples/datasets/opm_data.rst", "auto_examples/datasets/sg_execution_times.rst", "auto_examples/datasets/spm_faces_dataset_sgskip.rst", "auto_examples/decoding/decoding_csp_eeg.rst", "auto_examples/decoding/decoding_csp_timefreq.rst", "auto_examples/decoding/decoding_rsa_sgskip.rst", "auto_examples/decoding/decoding_spatio_temporal_source.rst", "auto_examples/decoding/decoding_spoc_CMC.rst", "auto_examples/decoding/decoding_time_generalization_conditions.rst", "auto_examples/decoding/decoding_unsupervised_spatial_filter.rst", "auto_examples/decoding/decoding_xdawn_eeg.rst", "auto_examples/decoding/ems_filtering.rst", "auto_examples/decoding/index.rst", "auto_examples/decoding/linear_model_patterns.rst", "auto_examples/decoding/receptive_field_mtrf.rst", "auto_examples/decoding/sg_execution_times.rst", "auto_examples/decoding/ssd_spatial_filters.rst", "auto_examples/forward/forward_sensitivity_maps.rst", "auto_examples/forward/index.rst", "auto_examples/forward/left_cerebellum_volume_source.rst", "auto_examples/forward/sg_execution_times.rst", "auto_examples/forward/source_space_morphing.rst", "auto_examples/index.rst", "auto_examples/inverse/compute_mne_inverse_epochs_in_label.rst", "auto_examples/inverse/compute_mne_inverse_raw_in_label.rst", "auto_examples/inverse/compute_mne_inverse_volume.rst", "auto_examples/inverse/custom_inverse_solver.rst", "auto_examples/inverse/dics_epochs.rst", "auto_examples/inverse/dics_source_power.rst", "auto_examples/inverse/evoked_ers_source_power.rst", "auto_examples/inverse/gamma_map_inverse.rst", "auto_examples/inverse/index.rst", "auto_examples/inverse/label_activation_from_stc.rst", "auto_examples/inverse/label_from_stc.rst", "auto_examples/inverse/label_source_activations.rst", "auto_examples/inverse/mixed_norm_inverse.rst", "auto_examples/inverse/mixed_source_space_inverse.rst", "auto_examples/inverse/mne_cov_power.rst", "auto_examples/inverse/morph_surface_stc.rst", "auto_examples/inverse/morph_volume_stc.rst", "auto_examples/inverse/multi_dipole_model.rst", "auto_examples/inverse/multidict_reweighted_tfmxne.rst", "auto_examples/inverse/psf_ctf_label_leakage.rst", "auto_examples/inverse/psf_ctf_vertices.rst", "auto_examples/inverse/psf_ctf_vertices_lcmv.rst", "auto_examples/inverse/psf_volume.rst", "auto_examples/inverse/rap_music.rst", "auto_examples/inverse/read_inverse.rst", "auto_examples/inverse/read_stc.rst", "auto_examples/inverse/resolution_metrics.rst", "auto_examples/inverse/resolution_metrics_eegmeg.rst", "auto_examples/inverse/sg_execution_times.rst", "auto_examples/inverse/snr_estimate.rst", "auto_examples/inverse/source_space_snr.rst", "auto_examples/inverse/time_frequency_mixed_norm_inverse.rst", "auto_examples/inverse/vector_mne_solution.rst", "auto_examples/io/elekta_epochs.rst", "auto_examples/io/index.rst", "auto_examples/io/read_neo_format.rst", "auto_examples/io/read_noise_covariance_matrix.rst", "auto_examples/io/read_xdf.rst", "auto_examples/io/sg_execution_times.rst", "auto_examples/preprocessing/contralateral_referencing.rst", "auto_examples/preprocessing/css.rst", "auto_examples/preprocessing/define_target_events.rst", "auto_examples/preprocessing/eeg_bridging.rst", "auto_examples/preprocessing/eeg_csd.rst", "auto_examples/preprocessing/eog_artifact_histogram.rst", "auto_examples/preprocessing/eog_regression.rst", "auto_examples/preprocessing/find_ref_artifacts.rst", "auto_examples/preprocessing/fnirs_artifact_removal.rst", "auto_examples/preprocessing/ica_comparison.rst", "auto_examples/preprocessing/index.rst", "auto_examples/preprocessing/interpolate_bad_channels.rst", "auto_examples/preprocessing/movement_compensation.rst", "auto_examples/preprocessing/movement_detection.rst", "auto_examples/preprocessing/muscle_detection.rst", "auto_examples/preprocessing/muscle_ica.rst", "auto_examples/preprocessing/otp.rst", "auto_examples/preprocessing/sg_execution_times.rst", "auto_examples/preprocessing/shift_evoked.rst", "auto_examples/preprocessing/virtual_evoked.rst", "auto_examples/preprocessing/xdawn_denoising.rst", "auto_examples/simulation/index.rst", "auto_examples/simulation/plot_stc_metrics.rst", "auto_examples/simulation/sg_execution_times.rst", "auto_examples/simulation/simulate_evoked_data.rst", "auto_examples/simulation/simulate_raw_data.rst", "auto_examples/simulation/simulated_raw_data_using_subject_anatomy.rst", "auto_examples/simulation/source_simulator.rst", "auto_examples/stats/cluster_stats_evoked.rst", "auto_examples/stats/fdr_stats_evoked.rst", "auto_examples/stats/index.rst", "auto_examples/stats/linear_regression_raw.rst", "auto_examples/stats/sensor_permutation_test.rst", "auto_examples/stats/sensor_regression.rst", "auto_examples/stats/sg_execution_times.rst", "auto_examples/time_frequency/compute_csd.rst", "auto_examples/time_frequency/compute_source_psd_epochs.rst", "auto_examples/time_frequency/index.rst", "auto_examples/time_frequency/sg_execution_times.rst", "auto_examples/time_frequency/source_label_time_frequency.rst", "auto_examples/time_frequency/source_power_spectrum.rst", "auto_examples/time_frequency/source_power_spectrum_opm.rst", "auto_examples/time_frequency/source_space_time_frequency.rst", "auto_examples/time_frequency/temporal_whitening.rst", "auto_examples/time_frequency/time_frequency_erds.rst", "auto_examples/time_frequency/time_frequency_global_field_power.rst", "auto_examples/time_frequency/time_frequency_simulated.rst", "auto_examples/visualization/3d_to_2d.rst", "auto_examples/visualization/brain.rst", "auto_examples/visualization/channel_epochs_image.rst", "auto_examples/visualization/eeg_on_scalp.rst", "auto_examples/visualization/evoked_arrowmap.rst", "auto_examples/visualization/evoked_topomap.rst", "auto_examples/visualization/evoked_whitening.rst", "auto_examples/visualization/index.rst", "auto_examples/visualization/meg_sensors.rst", "auto_examples/visualization/mne_helmet.rst", "auto_examples/visualization/montage_sgskip.rst", "auto_examples/visualization/parcellation.rst", "auto_examples/visualization/publication_figure.rst", "auto_examples/visualization/roi_erpimage_by_rt.rst", "auto_examples/visualization/sensor_noise_level.rst", "auto_examples/visualization/sg_execution_times.rst", "auto_examples/visualization/ssp_projs_sensitivity_map.rst", "auto_examples/visualization/topo_compare_conditions.rst", "auto_examples/visualization/topo_customized.rst", "auto_examples/visualization/xhemi.rst", "auto_tutorials/clinical/20_seeg.rst", "auto_tutorials/clinical/30_ecog.rst", "auto_tutorials/clinical/60_sleep.rst", "auto_tutorials/clinical/index.rst", "auto_tutorials/clinical/sg_execution_times.rst", "auto_tutorials/epochs/10_epochs_overview.rst", "auto_tutorials/epochs/15_baseline_regression.rst", "auto_tutorials/epochs/20_visualize_epochs.rst", "auto_tutorials/epochs/30_epochs_metadata.rst", "auto_tutorials/epochs/40_autogenerate_metadata.rst", "auto_tutorials/epochs/50_epochs_to_data_frame.rst", "auto_tutorials/epochs/60_make_fixed_length_epochs.rst", "auto_tutorials/epochs/index.rst", "auto_tutorials/epochs/sg_execution_times.rst", "auto_tutorials/evoked/10_evoked_overview.rst", "auto_tutorials/evoked/20_visualize_evoked.rst", "auto_tutorials/evoked/30_eeg_erp.rst", "auto_tutorials/evoked/40_whitened.rst", "auto_tutorials/evoked/index.rst", "auto_tutorials/evoked/sg_execution_times.rst", "auto_tutorials/forward/10_background_freesurfer.rst", "auto_tutorials/forward/20_source_alignment.rst", "auto_tutorials/forward/25_automated_coreg.rst", "auto_tutorials/forward/30_forward.rst", "auto_tutorials/forward/35_eeg_no_mri.rst", "auto_tutorials/forward/50_background_freesurfer_mne.rst", "auto_tutorials/forward/80_fix_bem_in_blender.rst", "auto_tutorials/forward/90_compute_covariance.rst", "auto_tutorials/forward/index.rst", "auto_tutorials/forward/sg_execution_times.rst", "auto_tutorials/index.rst", "auto_tutorials/intro/10_overview.rst", "auto_tutorials/intro/15_inplace.rst", "auto_tutorials/intro/20_events_from_raw.rst", "auto_tutorials/intro/30_info.rst", "auto_tutorials/intro/40_sensor_locations.rst", "auto_tutorials/intro/50_configure_mne.rst", "auto_tutorials/intro/70_report.rst", "auto_tutorials/intro/index.rst", "auto_tutorials/intro/sg_execution_times.rst", "auto_tutorials/inverse/10_stc_class.rst", "auto_tutorials/inverse/20_dipole_fit.rst", "auto_tutorials/inverse/30_mne_dspm_loreta.rst", "auto_tutorials/inverse/35_dipole_orientations.rst", "auto_tutorials/inverse/40_mne_fixed_free.rst", "auto_tutorials/inverse/50_beamformer_lcmv.rst", "auto_tutorials/inverse/60_visualize_stc.rst", "auto_tutorials/inverse/70_eeg_mri_coords.rst", "auto_tutorials/inverse/80_brainstorm_phantom_elekta.rst", "auto_tutorials/inverse/85_brainstorm_phantom_ctf.rst", "auto_tutorials/inverse/90_phantom_4DBTi.rst", "auto_tutorials/inverse/index.rst", "auto_tutorials/inverse/sg_execution_times.rst", "auto_tutorials/io/10_reading_meg_data.rst", "auto_tutorials/io/20_reading_eeg_data.rst", "auto_tutorials/io/30_reading_fnirs_data.rst", "auto_tutorials/io/60_ctf_bst_auditory.rst", "auto_tutorials/io/70_reading_eyetracking_data.rst", "auto_tutorials/io/index.rst", "auto_tutorials/io/sg_execution_times.rst", "auto_tutorials/machine-learning/30_strf.rst", "auto_tutorials/machine-learning/50_decoding.rst", "auto_tutorials/machine-learning/index.rst", "auto_tutorials/machine-learning/sg_execution_times.rst", "auto_tutorials/preprocessing/10_preprocessing_overview.rst", "auto_tutorials/preprocessing/15_handling_bad_channels.rst", "auto_tutorials/preprocessing/20_rejecting_bad_data.rst", "auto_tutorials/preprocessing/25_background_filtering.rst", "auto_tutorials/preprocessing/30_filtering_resampling.rst", "auto_tutorials/preprocessing/35_artifact_correction_regression.rst", "auto_tutorials/preprocessing/40_artifact_correction_ica.rst", "auto_tutorials/preprocessing/45_projectors_background.rst", "auto_tutorials/preprocessing/50_artifact_correction_ssp.rst", "auto_tutorials/preprocessing/55_setting_eeg_reference.rst", "auto_tutorials/preprocessing/59_head_positions.rst", "auto_tutorials/preprocessing/60_maxwell_filtering_sss.rst", "auto_tutorials/preprocessing/70_fnirs_processing.rst", "auto_tutorials/preprocessing/80_opm_processing.rst", "auto_tutorials/preprocessing/90_eyetracking_data.rst", "auto_tutorials/preprocessing/index.rst", "auto_tutorials/preprocessing/sg_execution_times.rst", "auto_tutorials/raw/10_raw_overview.rst", "auto_tutorials/raw/20_event_arrays.rst", "auto_tutorials/raw/30_annotate_raw.rst", "auto_tutorials/raw/40_visualize_raw.rst", "auto_tutorials/raw/index.rst", "auto_tutorials/raw/sg_execution_times.rst", "auto_tutorials/simulation/10_array_objs.rst", "auto_tutorials/simulation/70_point_spread.rst", "auto_tutorials/simulation/80_dics.rst", "auto_tutorials/simulation/index.rst", "auto_tutorials/simulation/sg_execution_times.rst", "auto_tutorials/stats-sensor-space/10_background_stats.rst", "auto_tutorials/stats-sensor-space/20_erp_stats.rst", "auto_tutorials/stats-sensor-space/40_cluster_1samp_time_freq.rst", "auto_tutorials/stats-sensor-space/50_cluster_between_time_freq.rst", "auto_tutorials/stats-sensor-space/70_cluster_rmANOVA_time_freq.rst", "auto_tutorials/stats-sensor-space/75_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-sensor-space/index.rst", "auto_tutorials/stats-sensor-space/sg_execution_times.rst", "auto_tutorials/stats-source-space/20_cluster_1samp_spatiotemporal.rst", "auto_tutorials/stats-source-space/30_cluster_ftest_spatiotemporal.rst", "auto_tutorials/stats-source-space/60_cluster_rmANOVA_spatiotemporal.rst", "auto_tutorials/stats-source-space/index.rst", "auto_tutorials/stats-source-space/sg_execution_times.rst", "auto_tutorials/time-freq/10_spectrum_class.rst", "auto_tutorials/time-freq/20_sensors_time_frequency.rst", "auto_tutorials/time-freq/50_ssvep.rst", "auto_tutorials/time-freq/index.rst", "auto_tutorials/time-freq/sg_execution_times.rst", "bibliography.rst", "cited.rst", "connectivity.rst", "covariance.rst", "creating_from_arrays.rst", "datasets.rst", "decoding.rst", "events.rst", "export.rst", "file_io.rst", "forward.rst", "funding.rst", "generated/commands.rst", "generated/mne.AcqParserFIF.rst", "generated/mne.Annotations.rst", "generated/mne.BaseEpochs.rst", "generated/mne.BiHemiLabel.rst", "generated/mne.Covariance.rst", "generated/mne.Dipole.rst", "generated/mne.DipoleFixed.rst", "generated/mne.Epochs.rst", "generated/mne.EpochsArray.rst", "generated/mne.Evoked.rst", "generated/mne.EvokedArray.rst", "generated/mne.Forward.rst", "generated/mne.Info.rst", "generated/mne.Label.rst", "generated/mne.MixedSourceEstimate.rst", "generated/mne.MixedVectorSourceEstimate.rst", "generated/mne.Projection.rst", "generated/mne.Report.rst", "generated/mne.SourceEstimate.rst", "generated/mne.SourceMorph.rst", "generated/mne.SourceSpaces.rst", "generated/mne.VectorSourceEstimate.rst", "generated/mne.VolSourceEstimate.rst", "generated/mne.VolVectorSourceEstimate.rst", "generated/mne.add_reference_channels.rst", "generated/mne.add_source_space_distances.rst", "generated/mne.annotations_from_events.rst", "generated/mne.apply_forward.rst", "generated/mne.apply_forward_raw.rst", "generated/mne.average_forward_solutions.rst", "generated/mne.baseline.rescale.rst", "generated/mne.beamformer.Beamformer.rst", "generated/mne.beamformer.apply_dics.rst", "generated/mne.beamformer.apply_dics_csd.rst", "generated/mne.beamformer.apply_dics_epochs.rst", "generated/mne.beamformer.apply_dics_tfr_epochs.rst", "generated/mne.beamformer.apply_lcmv.rst", "generated/mne.beamformer.apply_lcmv_cov.rst", "generated/mne.beamformer.apply_lcmv_epochs.rst", "generated/mne.beamformer.apply_lcmv_raw.rst", "generated/mne.beamformer.make_dics.rst", "generated/mne.beamformer.make_lcmv.rst", "generated/mne.beamformer.make_lcmv_resolution_matrix.rst", "generated/mne.beamformer.rap_music.rst", "generated/mne.beamformer.read_beamformer.rst", "generated/mne.bem.ConductorModel.rst", "generated/mne.bem.convert_flash_mris.rst", "generated/mne.bem.distance_to_bem.rst", "generated/mne.bem.fit_sphere_to_headshape.rst", "generated/mne.bem.get_fitting_dig.rst", "generated/mne.bem.make_flash_bem.rst", "generated/mne.bem.make_scalp_surfaces.rst", "generated/mne.bem.make_watershed_bem.rst", "generated/mne.channel_indices_by_type.rst", "generated/mne.channel_type.rst", "generated/mne.channels.DigMontage.rst", "generated/mne.channels.Layout.rst", "generated/mne.channels.combine_channels.rst", "generated/mne.channels.compute_dev_head_t.rst", "generated/mne.channels.compute_native_head_t.rst", "generated/mne.channels.equalize_channels.rst", "generated/mne.channels.find_ch_adjacency.rst", "generated/mne.channels.find_layout.rst", "generated/mne.channels.fix_mag_coil_types.rst", "generated/mne.channels.generate_2d_layout.rst", "generated/mne.channels.get_builtin_ch_adjacencies.rst", "generated/mne.channels.get_builtin_montages.rst", "generated/mne.channels.make_1020_channel_selections.rst", "generated/mne.channels.make_dig_montage.rst", "generated/mne.channels.make_eeg_layout.rst", "generated/mne.channels.make_grid_layout.rst", "generated/mne.channels.make_standard_montage.rst", "generated/mne.channels.read_ch_adjacency.rst", "generated/mne.channels.read_custom_montage.rst", "generated/mne.channels.read_dig_captrak.rst", "generated/mne.channels.read_dig_dat.rst", "generated/mne.channels.read_dig_egi.rst", "generated/mne.channels.read_dig_fif.rst", "generated/mne.channels.read_dig_hpts.rst", "generated/mne.channels.read_dig_localite.rst", "generated/mne.channels.read_dig_polhemus_isotrak.rst", "generated/mne.channels.read_layout.rst", "generated/mne.channels.read_polhemus_fastscan.rst", "generated/mne.channels.rename_channels.rst", "generated/mne.chpi.compute_chpi_amplitudes.rst", "generated/mne.chpi.compute_chpi_locs.rst", "generated/mne.chpi.compute_chpi_snr.rst", "generated/mne.chpi.compute_head_pos.rst", "generated/mne.chpi.extract_chpi_locs_ctf.rst", "generated/mne.chpi.extract_chpi_locs_kit.rst", "generated/mne.chpi.filter_chpi.rst", "generated/mne.chpi.get_active_chpi.rst", "generated/mne.chpi.get_chpi_info.rst", "generated/mne.chpi.head_pos_to_trans_rot_t.rst", "generated/mne.chpi.read_head_pos.rst", "generated/mne.chpi.write_head_pos.rst", "generated/mne.combine_evoked.rst", "generated/mne.compute_covariance.rst", "generated/mne.compute_proj_epochs.rst", "generated/mne.compute_proj_evoked.rst", "generated/mne.compute_proj_raw.rst", "generated/mne.compute_rank.rst", "generated/mne.compute_raw_covariance.rst", "generated/mne.compute_source_morph.rst", "generated/mne.concatenate_epochs.rst", "generated/mne.concatenate_events.rst", "generated/mne.concatenate_raws.rst", "generated/mne.convert_forward_solution.rst", "generated/mne.coreg.Coregistration.rst", "generated/mne.coreg.estimate_head_mri_t.rst", "generated/mne.coreg.get_mni_fiducials.rst", "generated/mne.count_events.rst", "generated/mne.cov.compute_whitener.rst", "generated/mne.cov.prepare_noise_cov.rst", "generated/mne.cov.regularize.rst", "generated/mne.create_default_subject.rst", "generated/mne.create_info.rst", "generated/mne.cuda.get_cuda_memory.rst", "generated/mne.cuda.init_cuda.rst", "generated/mne.cuda.set_cuda_device.rst", "generated/mne.datasets.brainstorm.bst_auditory.data_path.rst", "generated/mne.datasets.brainstorm.bst_raw.data_path.rst", "generated/mne.datasets.brainstorm.bst_resting.data_path.rst", "generated/mne.datasets.eegbci.load_data.rst", "generated/mne.datasets.eegbci.standardize.rst", "generated/mne.datasets.epilepsy_ecog.data_path.rst", "generated/mne.datasets.erp_core.data_path.rst", "generated/mne.datasets.eyelink.data_path.rst", "generated/mne.datasets.fetch_aparc_sub_parcellation.rst", "generated/mne.datasets.fetch_dataset.rst", "generated/mne.datasets.fetch_fsaverage.rst", "generated/mne.datasets.fetch_hcp_mmp_parcellation.rst", "generated/mne.datasets.fetch_infant_template.rst", "generated/mne.datasets.fetch_phantom.rst", "generated/mne.datasets.fnirs_motor.data_path.rst", "generated/mne.datasets.has_dataset.rst", "generated/mne.datasets.hf_sef.data_path.rst", "generated/mne.datasets.kiloword.data_path.rst", "generated/mne.datasets.limo.load_data.rst", "generated/mne.datasets.misc.data_path.rst", "generated/mne.datasets.mtrf.data_path.rst", "generated/mne.datasets.multimodal.data_path.rst", "generated/mne.datasets.opm.data_path.rst", "generated/mne.datasets.phantom_4dbti.data_path.rst", "generated/mne.datasets.refmeg_noise.data_path.rst", "generated/mne.datasets.sample.data_path.rst", "generated/mne.datasets.sleep_physionet.age.fetch_data.rst", "generated/mne.datasets.sleep_physionet.temazepam.fetch_data.rst", "generated/mne.datasets.somato.data_path.rst", "generated/mne.datasets.spm_face.data_path.rst", "generated/mne.datasets.ssvep.data_path.rst", "generated/mne.datasets.ucl_opm_auditory.data_path.rst", "generated/mne.datasets.visual_92_categories.data_path.rst", "generated/mne.decimate_surface.rst", "generated/mne.decoding.CSP.rst", "generated/mne.decoding.EMS.rst", "generated/mne.decoding.FilterEstimator.rst", "generated/mne.decoding.GeneralizingEstimator.rst", "generated/mne.decoding.LinearModel.rst", "generated/mne.decoding.PSDEstimator.rst", "generated/mne.decoding.ReceptiveField.rst", "generated/mne.decoding.SPoC.rst", "generated/mne.decoding.SSD.rst", "generated/mne.decoding.Scaler.rst", "generated/mne.decoding.SlidingEstimator.rst", "generated/mne.decoding.TemporalFilter.rst", "generated/mne.decoding.TimeDelayingRidge.rst", "generated/mne.decoding.TimeFrequency.rst", "generated/mne.decoding.UnsupervisedSpatialFilter.rst", "generated/mne.decoding.Vectorizer.rst", "generated/mne.decoding.compute_ems.rst", "generated/mne.decoding.cross_val_multiscore.rst", "generated/mne.decoding.get_coef.rst", "generated/mne.dig_mri_distances.rst", "generated/mne.dipole.get_phantom_dipoles.rst", "generated/mne.epochs.average_movements.rst", "generated/mne.epochs.combine_event_ids.rst", "generated/mne.epochs.equalize_epoch_counts.rst", "generated/mne.epochs.make_metadata.rst", "generated/mne.equalize_channels.rst", "generated/mne.event.define_target_events.rst", "generated/mne.event.match_event_names.rst", "generated/mne.event.shift_time_events.rst", "generated/mne.events_from_annotations.rst", "generated/mne.export.export_epochs.rst", "generated/mne.export.export_evokeds.rst", "generated/mne.export.export_evokeds_mff.rst", "generated/mne.export.export_raw.rst", "generated/mne.extract_label_time_course.rst", "generated/mne.filter.construct_iir_filter.rst", "generated/mne.filter.create_filter.rst", "generated/mne.filter.estimate_ringing_samples.rst", "generated/mne.filter.filter_data.rst", "generated/mne.filter.notch_filter.rst", "generated/mne.filter.resample.rst", "generated/mne.find_events.rst", "generated/mne.find_stim_steps.rst", "generated/mne.fit_dipole.rst", "generated/mne.forward.compute_depth_prior.rst", "generated/mne.forward.compute_orient_prior.rst", "generated/mne.forward.restrict_forward_to_label.rst", "generated/mne.forward.restrict_forward_to_stc.rst", "generated/mne.get_config.rst", "generated/mne.get_config_path.rst", "generated/mne.get_head_surf.rst", "generated/mne.get_meg_helmet_surf.rst", "generated/mne.get_montage_volume_labels.rst", "generated/mne.get_volume_labels_from_aseg.rst", "generated/mne.get_volume_labels_from_src.rst", "generated/mne.grade_to_tris.rst", "generated/mne.grade_to_vertices.rst", "generated/mne.grand_average.rst", "generated/mne.grow_labels.rst", "generated/mne.gui.coregistration.rst", "generated/mne.gui.locate_ieeg.rst", "generated/mne.head_to_mni.rst", "generated/mne.head_to_mri.rst", "generated/mne.inverse_sparse.gamma_map.rst", "generated/mne.inverse_sparse.make_stc_from_dipoles.rst", "generated/mne.inverse_sparse.mixed_norm.rst", "generated/mne.inverse_sparse.tf_mixed_norm.rst", "generated/mne.io.BaseRaw.rst", "generated/mne.io.Raw.rst", "generated/mne.io.RawArray.rst", "generated/mne.io.anonymize_info.rst", "generated/mne.io.kit.read_mrk.rst", "generated/mne.io.read_fiducials.rst", "generated/mne.io.read_info.rst", "generated/mne.io.read_raw.rst", "generated/mne.io.read_raw_artemis123.rst", "generated/mne.io.read_raw_bdf.rst", "generated/mne.io.read_raw_boxy.rst", "generated/mne.io.read_raw_brainvision.rst", "generated/mne.io.read_raw_bti.rst", "generated/mne.io.read_raw_cnt.rst", "generated/mne.io.read_raw_ctf.rst", "generated/mne.io.read_raw_curry.rst", "generated/mne.io.read_raw_edf.rst", "generated/mne.io.read_raw_eeglab.rst", "generated/mne.io.read_raw_egi.rst", "generated/mne.io.read_raw_eximia.rst", "generated/mne.io.read_raw_eyelink.rst", "generated/mne.io.read_raw_fieldtrip.rst", "generated/mne.io.read_raw_fif.rst", "generated/mne.io.read_raw_fil.rst", "generated/mne.io.read_raw_gdf.rst", "generated/mne.io.read_raw_hitachi.rst", "generated/mne.io.read_raw_kit.rst", "generated/mne.io.read_raw_nedf.rst", "generated/mne.io.read_raw_nicolet.rst", "generated/mne.io.read_raw_nihon.rst", "generated/mne.io.read_raw_nirx.rst", "generated/mne.io.read_raw_persyst.rst", "generated/mne.io.read_raw_snirf.rst", "generated/mne.io.show_fiff.rst", "generated/mne.io.write_fiducials.rst", "generated/mne.label.select_sources.rst", "generated/mne.label_sign_flip.rst", "generated/mne.labels_to_stc.rst", "generated/mne.make_ad_hoc_cov.rst", "generated/mne.make_bem_model.rst", "generated/mne.make_bem_solution.rst", "generated/mne.make_field_map.rst", "generated/mne.make_fixed_length_epochs.rst", "generated/mne.make_fixed_length_events.rst", "generated/mne.make_forward_dipole.rst", "generated/mne.make_forward_solution.rst", "generated/mne.make_sphere_model.rst", "generated/mne.match_channel_orders.rst", "generated/mne.merge_events.rst", "generated/mne.minimum_norm.InverseOperator.rst", "generated/mne.minimum_norm.apply_inverse.rst", "generated/mne.minimum_norm.apply_inverse_cov.rst", "generated/mne.minimum_norm.apply_inverse_epochs.rst", "generated/mne.minimum_norm.apply_inverse_raw.rst", "generated/mne.minimum_norm.apply_inverse_tfr_epochs.rst", "generated/mne.minimum_norm.compute_rank_inverse.rst", "generated/mne.minimum_norm.compute_source_psd.rst", "generated/mne.minimum_norm.compute_source_psd_epochs.rst", "generated/mne.minimum_norm.estimate_snr.rst", "generated/mne.minimum_norm.get_cross_talk.rst", "generated/mne.minimum_norm.get_point_spread.rst", "generated/mne.minimum_norm.make_inverse_operator.rst", "generated/mne.minimum_norm.make_inverse_resolution_matrix.rst", "generated/mne.minimum_norm.prepare_inverse_operator.rst", "generated/mne.minimum_norm.read_inverse_operator.rst", "generated/mne.minimum_norm.resolution_metrics.rst", "generated/mne.minimum_norm.source_band_induced_power.rst", "generated/mne.minimum_norm.source_induced_power.rst", "generated/mne.minimum_norm.write_inverse_operator.rst", "generated/mne.morph_labels.rst", "generated/mne.morph_source_spaces.rst", "generated/mne.open_docs.rst", "generated/mne.open_report.rst", "generated/mne.parse_config.rst", "generated/mne.pick_channels.rst", "generated/mne.pick_channels_cov.rst", "generated/mne.pick_channels_forward.rst", "generated/mne.pick_channels_regexp.rst", "generated/mne.pick_events.rst", "generated/mne.pick_info.rst", "generated/mne.pick_types.rst", "generated/mne.pick_types_forward.rst", "generated/mne.preprocessing.EOGRegression.rst", "generated/mne.preprocessing.ICA.rst", "generated/mne.preprocessing.Xdawn.rst", "generated/mne.preprocessing.annotate_amplitude.rst", "generated/mne.preprocessing.annotate_break.rst", "generated/mne.preprocessing.annotate_movement.rst", "generated/mne.preprocessing.annotate_muscle_zscore.rst", "generated/mne.preprocessing.annotate_nan.rst", "generated/mne.preprocessing.compute_average_dev_head_t.rst", "generated/mne.preprocessing.compute_bridged_electrodes.rst", "generated/mne.preprocessing.compute_current_source_density.rst", "generated/mne.preprocessing.compute_fine_calibration.rst", "generated/mne.preprocessing.compute_maxwell_basis.rst", "generated/mne.preprocessing.compute_proj_ecg.rst", "generated/mne.preprocessing.compute_proj_eog.rst", "generated/mne.preprocessing.compute_proj_hfc.rst", "generated/mne.preprocessing.corrmap.rst", "generated/mne.preprocessing.cortical_signal_suppression.rst", "generated/mne.preprocessing.create_ecg_epochs.rst", "generated/mne.preprocessing.create_eog_epochs.rst", "generated/mne.preprocessing.equalize_bads.rst", "generated/mne.preprocessing.eyetracking.set_channel_types_eyetrack.rst", "generated/mne.preprocessing.find_bad_channels_maxwell.rst", "generated/mne.preprocessing.find_ecg_events.rst", "generated/mne.preprocessing.find_eog_events.rst", "generated/mne.preprocessing.fix_stim_artifact.rst", "generated/mne.preprocessing.ica_find_ecg_events.rst", "generated/mne.preprocessing.ica_find_eog_events.rst", "generated/mne.preprocessing.ieeg.make_montage_volume.rst", "generated/mne.preprocessing.ieeg.project_sensors_onto_brain.rst", "generated/mne.preprocessing.ieeg.warp_montage.rst", "generated/mne.preprocessing.infomax.rst", "generated/mne.preprocessing.interpolate_bridged_electrodes.rst", "generated/mne.preprocessing.maxwell_filter.rst", "generated/mne.preprocessing.maxwell_filter_prepare_emptyroom.rst", "generated/mne.preprocessing.nirs.beer_lambert_law.rst", "generated/mne.preprocessing.nirs.optical_density.rst", "generated/mne.preprocessing.nirs.scalp_coupling_index.rst", "generated/mne.preprocessing.nirs.short_channels.rst", "generated/mne.preprocessing.nirs.source_detector_distances.rst", "generated/mne.preprocessing.nirs.temporal_derivative_distribution_repair.rst", "generated/mne.preprocessing.oversampled_temporal_projection.rst", "generated/mne.preprocessing.peak_finder.rst", "generated/mne.preprocessing.read_eog_regression.rst", "generated/mne.preprocessing.read_fine_calibration.rst", "generated/mne.preprocessing.read_ica.rst", "generated/mne.preprocessing.read_ica_eeglab.rst", "generated/mne.preprocessing.realign_raw.rst", "generated/mne.preprocessing.regress_artifact.rst", "generated/mne.preprocessing.write_fine_calibration.rst", "generated/mne.random_parcellation.rst", "generated/mne.read_annotations.rst", "generated/mne.read_bem_solution.rst", "generated/mne.read_bem_surfaces.rst", "generated/mne.read_cov.rst", "generated/mne.read_dipole.rst", "generated/mne.read_epochs.rst", "generated/mne.read_epochs_eeglab.rst", "generated/mne.read_epochs_fieldtrip.rst", "generated/mne.read_epochs_kit.rst", "generated/mne.read_events.rst", "generated/mne.read_evoked_besa.rst", "generated/mne.read_evoked_fieldtrip.rst", "generated/mne.read_evokeds.rst", "generated/mne.read_evokeds_mff.rst", "generated/mne.read_forward_solution.rst", "generated/mne.read_freesurfer_lut.rst", "generated/mne.read_label.rst", "generated/mne.read_labels_from_annot.rst", "generated/mne.read_lta.rst", "generated/mne.read_morph_map.rst", "generated/mne.read_proj.rst", "generated/mne.read_reject_parameters.rst", "generated/mne.read_source_estimate.rst", "generated/mne.read_source_morph.rst", "generated/mne.read_source_spaces.rst", "generated/mne.read_surface.rst", "generated/mne.read_talxfm.rst", "generated/mne.read_trans.rst", "generated/mne.read_tri.rst", "generated/mne.read_vectorview_selection.rst", "generated/mne.rename_channels.rst", "generated/mne.scale_bem.rst", "generated/mne.scale_labels.rst", "generated/mne.scale_mri.rst", "generated/mne.scale_source_space.rst", "generated/mne.sensitivity_map.rst", "generated/mne.set_bipolar_reference.rst", "generated/mne.set_cache_dir.rst", "generated/mne.set_config.rst", "generated/mne.set_eeg_reference.rst", "generated/mne.set_log_file.rst", "generated/mne.set_log_level.rst", "generated/mne.set_memmap_min_size.rst", "generated/mne.setup_source_space.rst", "generated/mne.setup_volume_source_space.rst", "generated/mne.simulation.SourceSimulator.rst", "generated/mne.simulation.add_chpi.rst", "generated/mne.simulation.add_ecg.rst", "generated/mne.simulation.add_eog.rst", "generated/mne.simulation.add_noise.rst", "generated/mne.simulation.metrics.cosine_score.rst", "generated/mne.simulation.metrics.f1_score.rst", "generated/mne.simulation.metrics.peak_position_error.rst", "generated/mne.simulation.metrics.precision_score.rst", "generated/mne.simulation.metrics.recall_score.rst", "generated/mne.simulation.metrics.region_localization_error.rst", "generated/mne.simulation.metrics.roc_auc_score.rst", "generated/mne.simulation.metrics.spatial_deviation_error.rst", "generated/mne.simulation.select_source_in_label.rst", "generated/mne.simulation.simulate_evoked.rst", "generated/mne.simulation.simulate_raw.rst", "generated/mne.simulation.simulate_sparse_stc.rst", "generated/mne.simulation.simulate_stc.rst", "generated/mne.source_space.compute_distance_to_sensors.rst", "generated/mne.source_space.get_decimated_surfaces.rst", "generated/mne.spatial_dist_adjacency.rst", "generated/mne.spatial_inter_hemi_adjacency.rst", "generated/mne.spatial_src_adjacency.rst", "generated/mne.spatial_tris_adjacency.rst", "generated/mne.spatio_temporal_dist_adjacency.rst", "generated/mne.spatio_temporal_src_adjacency.rst", "generated/mne.spatio_temporal_tris_adjacency.rst", "generated/mne.split_label.rst", "generated/mne.stats.bonferroni_correction.rst", "generated/mne.stats.bootstrap_confidence_interval.rst", "generated/mne.stats.combine_adjacency.rst", "generated/mne.stats.f_mway_rm.rst", "generated/mne.stats.f_oneway.rst", "generated/mne.stats.f_threshold_mway_rm.rst", "generated/mne.stats.fdr_correction.rst", "generated/mne.stats.linear_regression.rst", "generated/mne.stats.linear_regression_raw.rst", "generated/mne.stats.permutation_cluster_1samp_test.rst", "generated/mne.stats.permutation_cluster_test.rst", "generated/mne.stats.permutation_t_test.rst", "generated/mne.stats.spatio_temporal_cluster_1samp_test.rst", "generated/mne.stats.spatio_temporal_cluster_test.rst", "generated/mne.stats.summarize_clusters_stc.rst", "generated/mne.stats.ttest_1samp_no_p.rst", "generated/mne.stats.ttest_ind_no_p.rst", "generated/mne.stc_near_sensors.rst", "generated/mne.stc_to_label.rst", "generated/mne.surface.complete_surface_info.rst", "generated/mne.surface.read_curvature.rst", "generated/mne.sys_info.rst", "generated/mne.time_frequency.AverageTFR.rst", "generated/mne.time_frequency.CrossSpectralDensity.rst", "generated/mne.time_frequency.EpochsSpectrum.rst", "generated/mne.time_frequency.EpochsTFR.rst", "generated/mne.time_frequency.Spectrum.rst", "generated/mne.time_frequency.csd_array_fourier.rst", "generated/mne.time_frequency.csd_array_morlet.rst", "generated/mne.time_frequency.csd_array_multitaper.rst", "generated/mne.time_frequency.csd_fourier.rst", "generated/mne.time_frequency.csd_morlet.rst", "generated/mne.time_frequency.csd_multitaper.rst", "generated/mne.time_frequency.csd_tfr.rst", "generated/mne.time_frequency.dpss_windows.rst", "generated/mne.time_frequency.fit_iir_model_raw.rst", "generated/mne.time_frequency.fwhm.rst", "generated/mne.time_frequency.istft.rst", "generated/mne.time_frequency.morlet.rst", "generated/mne.time_frequency.pick_channels_csd.rst", "generated/mne.time_frequency.psd_array_multitaper.rst", "generated/mne.time_frequency.psd_array_welch.rst", "generated/mne.time_frequency.read_csd.rst", "generated/mne.time_frequency.read_spectrum.rst", "generated/mne.time_frequency.read_tfrs.rst", "generated/mne.time_frequency.stft.rst", "generated/mne.time_frequency.stftfreq.rst", "generated/mne.time_frequency.tfr.cwt.rst", "generated/mne.time_frequency.tfr.morlet.rst", "generated/mne.time_frequency.tfr_array_morlet.rst", "generated/mne.time_frequency.tfr_array_multitaper.rst", "generated/mne.time_frequency.tfr_array_stockwell.rst", "generated/mne.time_frequency.tfr_morlet.rst", "generated/mne.time_frequency.tfr_multitaper.rst", "generated/mne.time_frequency.tfr_stockwell.rst", "generated/mne.time_frequency.write_tfrs.rst", "generated/mne.transform_surface_to.rst", "generated/mne.transforms.Transform.rst", "generated/mne.transforms.apply_volume_registration.rst", "generated/mne.transforms.apply_volume_registration_points.rst", "generated/mne.transforms.compute_volume_registration.rst", "generated/mne.transforms.quat_to_rot.rst", "generated/mne.transforms.read_ras_mni_t.rst", "generated/mne.transforms.rot_to_quat.rst", "generated/mne.use_coil_def.rst", "generated/mne.use_log_level.rst", "generated/mne.utils.deprecated.rst", "generated/mne.utils.warn.rst", "generated/mne.verbose.rst", "generated/mne.vertex_to_mni.rst", "generated/mne.viz.Brain.rst", "generated/mne.viz.ClickableImage.rst", "generated/mne.viz.Figure3D.rst", "generated/mne.viz.add_background_image.rst", "generated/mne.viz.centers_to_edges.rst", "generated/mne.viz.circular_layout.rst", "generated/mne.viz.close_3d_figure.rst", "generated/mne.viz.close_all_3d_figures.rst", "generated/mne.viz.compare_fiff.rst", "generated/mne.viz.create_3d_figure.rst", "generated/mne.viz.get_3d_backend.rst", "generated/mne.viz.get_brain_class.rst", "generated/mne.viz.get_browser_backend.rst", "generated/mne.viz.iter_topography.rst", "generated/mne.viz.link_brains.rst", "generated/mne.viz.mne_analyze_colormap.rst", "generated/mne.viz.plot_alignment.rst", "generated/mne.viz.plot_arrowmap.rst", "generated/mne.viz.plot_bem.rst", "generated/mne.viz.plot_brain_colorbar.rst", "generated/mne.viz.plot_bridged_electrodes.rst", "generated/mne.viz.plot_ch_adjacency.rst", "generated/mne.viz.plot_channel_labels_circle.rst", "generated/mne.viz.plot_chpi_snr.rst", "generated/mne.viz.plot_compare_evokeds.rst", "generated/mne.viz.plot_cov.rst", "generated/mne.viz.plot_csd.rst", "generated/mne.viz.plot_dipole_amplitudes.rst", "generated/mne.viz.plot_dipole_locations.rst", "generated/mne.viz.plot_drop_log.rst", "generated/mne.viz.plot_epochs.rst", "generated/mne.viz.plot_epochs_image.rst", "generated/mne.viz.plot_epochs_psd_topomap.rst", "generated/mne.viz.plot_events.rst", "generated/mne.viz.plot_evoked.rst", "generated/mne.viz.plot_evoked_field.rst", "generated/mne.viz.plot_evoked_image.rst", "generated/mne.viz.plot_evoked_joint.rst", "generated/mne.viz.plot_evoked_topo.rst", "generated/mne.viz.plot_evoked_topomap.rst", "generated/mne.viz.plot_evoked_white.rst", "generated/mne.viz.plot_filter.rst", "generated/mne.viz.plot_head_positions.rst", "generated/mne.viz.plot_ica_components.rst", "generated/mne.viz.plot_ica_overlay.rst", "generated/mne.viz.plot_ica_properties.rst", "generated/mne.viz.plot_ica_scores.rst", "generated/mne.viz.plot_ica_sources.rst", "generated/mne.viz.plot_ideal_filter.rst", "generated/mne.viz.plot_layout.rst", "generated/mne.viz.plot_montage.rst", "generated/mne.viz.plot_projs_joint.rst", "generated/mne.viz.plot_projs_topomap.rst", "generated/mne.viz.plot_raw.rst", "generated/mne.viz.plot_raw_psd.rst", "generated/mne.viz.plot_regression_weights.rst", "generated/mne.viz.plot_sensors.rst", "generated/mne.viz.plot_snr_estimate.rst", "generated/mne.viz.plot_source_estimates.rst", "generated/mne.viz.plot_sparse_source_estimates.rst", "generated/mne.viz.plot_tfr_topomap.rst", "generated/mne.viz.plot_topo_image_epochs.rst", "generated/mne.viz.plot_topomap.rst", "generated/mne.viz.plot_vector_source_estimates.rst", "generated/mne.viz.plot_volume_source_estimates.rst", "generated/mne.viz.set_3d_backend.rst", "generated/mne.viz.set_3d_options.rst", "generated/mne.viz.set_3d_title.rst", "generated/mne.viz.set_3d_view.rst", "generated/mne.viz.set_browser_backend.rst", "generated/mne.viz.snapshot_brain_montage.rst", "generated/mne.viz.use_3d_backend.rst", "generated/mne.viz.use_browser_backend.rst", "generated/mne.what.rst", "generated/mne.write_bem_solution.rst", "generated/mne.write_bem_surfaces.rst", "generated/mne.write_cov.rst", "generated/mne.write_events.rst", "generated/mne.write_evokeds.rst", "generated/mne.write_forward_solution.rst", "generated/mne.write_head_bem.rst", "generated/mne.write_label.rst", "generated/mne.write_labels_to_annot.rst", "generated/mne.write_proj.rst", "generated/mne.write_source_spaces.rst", "generated/mne.write_surface.rst", "generated/mne.write_trans.rst", "glossary.rst", "index.rst", "install/advanced.rst", "install/check_installation.rst", "install/contributing.rst", "install/freesurfer.rst", "install/index.rst", "install/installers.rst", "install/manual_install.rst", "install/manual_install_python.rst", "install/mne_c.rst", "install/mne_tools_suite.rst", "install/updating.rst", "inverse.rst", "logging.rst", "martinos.rst", "mne_cpp.rst", "most_used_classes.rst", "mri.rst", "overview/cite.rst", "overview/cookbook.rst", "overview/datasets_index.rst", "overview/design_philosophy.rst", "overview/development.rst", "overview/faq.rst", "overview/get_help.rst", "overview/governance.rst", "overview/implementation.rst", "overview/index.rst", "overview/learn_python.rst", "overview/matlab.rst", "overview/migrating.rst", "overview/people.rst", "overview/roadmap.rst", "preprocessing.rst", "python_reference.rst", "reading_raw_data.rst", "realtime.rst", "report.rst", "sensor_space.rst", "simulation.rst", "source_space.rst", "statistics.rst", "time_frequency.rst", "visualization.rst", "whats_new.rst"], "titles": ["Connectivity Analysis Examples", "Brainstorm raw (median nerve) dataset", "HF-SEF dataset", "Examples on open datasets", "Single trial linear regression analysis with the LIMO dataset", "Optically pumped magnetometer (OPM) data", "Computation times", "From raw data to dSPM on SPM Faces dataset", "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)", "Decoding in time-frequency space using Common Spatial Patterns (CSP)", "Representational Similarity Analysis", "Decoding source space data", "Continuous Target Decoding with SPoC", "Decoding sensor space data with generalization across time and conditions", "Analysis of evoked response using ICA and PCA reduction techniques", "XDAWN Decoding From EEG data", "Compute effect-matched-spatial filtering (EMS)", "Machine Learning (Decoding, Encoding, and MVPA)", "Linear classifier on sensor data with plot patterns and filters", "Receptive Field Estimation and Prediction", "Computation times", "Compute Spectro-Spatial Decomposition (SSD) spatial filters", "Display sensitivity maps for EEG and MEG sensors", "Forward modeling", "Generate a left cerebellum volume source space", "Computation times", "Use source space morphing", "Examples Gallery", "Compute MNE-dSPM inverse solution on single epochs", "Compute sLORETA inverse solution on raw data", "Compute MNE-dSPM inverse solution on evoked data in volume source space", "Source localization with a custom inverse solver", "Compute source level time-frequency timecourses using a DICS beamformer", "Compute source power using DICS beamformer", "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM", "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method", "Inverse problem and source analysis", "Extracting time course from source_estimate object", "Generate a functional label from source estimates", "Extracting the time series of activations in a label", "Compute sparse inverse solution with mixed norm: MxNE and irMxNE", "Compute MNE inverse solution on evoked data with a mixed source space", "Compute source power estimate by projecting the covariance with MNE", "Morph surface source estimate", "Morph volumetric source estimate", "Computing source timecourses with an XFit-like multi-dipole model", "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary", "Visualize source leakage among labels using a circular graph", "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)", "Compute cross-talk functions for LCMV beamformers", "Plot point-spread functions (PSFs) for a volume", "Compute Rap-Music on evoked data", "Reading an inverse operator", "Reading an STC file", "Compute spatial resolution metrics in source space", "Compute spatial resolution metrics to compare MEG with EEG+MEG", "Computation times", "Estimate data SNR using an inverse", "Computing source space SNR", "Compute MxNE with time-frequency sparse prior", "Plotting the full vector-valued MNE solution", "Getting averaging info from .fif files", "Input/Output", "How to use data in neural ensemble (NEO) format", "Reading/Writing a noise covariance matrix", "Reading XDF EEG data", "Computation times", "Using contralateral referencing for EEG", "Cortical Signal Suppression (CSS) for removal of cortical signals", "Define target events based on time lag, plot evoked response", "Identify EEG Electrodes Bridged by too much Gel", "Transform EEG data using current source density (CSD)", "Show EOG artifact timing", "Reduce EOG artifacts through regression", "Find MEG reference channel artifacts", "Visualise NIRS artifact correction methods", "Compare the different ICA algorithms in MNE", "Preprocessing", "Interpolate bad channels for MEG/EEG channels", "Maxwell filter data with movement compensation", "Annotate movement artifacts and reestimate dev_head_t", "Annotate muscle artifacts", "Removing muscle ICA components", "Plot sensor denoising using oversampled temporal projection", "Computation times", "Shifting time-scale in evoked data", "Remap MEG channel types", "XDAWN Denoising", "Data Simulation", "Compare simulated and estimated source activity", "Computation times", "Generate simulated evoked data", "Generate simulated raw data", "Simulate raw data using subject anatomy", "Generate simulated source data", "Permutation F-test on sensor data with 1D cluster level", "FDR correction on T-test on sensor data", "Statistics Examples", "Regression on continuous data (rER[P/F])", "Permutation T-test on sensor data", "Analysing continuous features with binning and regression in sensor space", "Computation times", "Compute a cross-spectral density (CSD) matrix", "Compute Power Spectral Density of inverse solution from single epochs", "Time-Frequency Examples", "Computation times", "Compute power and phase lock in label of the source space", "Compute source power spectral density (PSD) in a label", "Compute source power spectral density (PSD) of VectorView and OPM data", "Compute induced power in the source space with dSPM", "Temporal whitening with AR model", "Compute and visualize ERDS maps", "Explore event-related dynamics for specific frequency bands", "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)", "How to convert 3D electrode positions to a 2D image", "Plotting with <code class=\"docutils literal notranslate\"><span class=\"pre\">mne.viz.Brain</span></code>", "Visualize channel over epochs as an image", "Plotting EEG sensors on the scalp", "Plotting topographic arrowmaps of evoked data", "Plotting topographic maps of evoked data", "Whitening evoked data with a noise covariance", "Visualization", "Plotting sensor layouts of MEG systems", "Plot the MNE brain and helmet", "Plotting sensor layouts of EEG systems", "Plot a cortical parcellation", "Make figures more publication ready", "Plot single trial activity, grouped by ROI and sorted by RT", "Show noise levels from empty room data", "Computation times", "Sensitivity map of SSP projections", "Compare evoked responses for different conditions", "Plot custom topographies for MEG sensors", "Cross-hemisphere comparison", "Working with sEEG data", "Working with ECoG data", "Sleep stage classification from polysomnography (PSG) data", "Clinical applications", "Computation times", "The Epochs data structure: discontinuous data", "Regression-based baseline correction", "Visualizing epoched data", "Working with Epoch metadata", "Auto-generating Epochs metadata", "Exporting Epochs to Pandas DataFrames", "Divide continuous data into equally-spaced epochs", "Segmenting continuous data into epochs", "Computation times", "The Evoked data structure: evoked/averaged data", "Visualizing Evoked data", "EEG analysis - Event-Related Potentials (ERPs)", "Plotting whitened data", "Estimating evoked responses", "Computation times", "FreeSurfer MRI reconstruction", "Source alignment and coordinate frames", "Using an automated approach to coregistration", "Head model and forward computation", "EEG forward operator with a template MRI", "How MNE uses FreeSurfer\u2019s outputs", "Fixing BEM and head surfaces", "Computing a covariance matrix", "Forward models and source spaces", "Computation times", "Tutorials", "Overview of MEG/EEG analysis with MNE-Python", "Modifying data in-place", "Parsing events from raw data", "The Info data structure", "Working with sensor locations", "Configuring MNE-Python", "Getting started with mne.Report", "Introductory tutorials", "Computation times", "The SourceEstimate data structure", "Source localization with equivalent current dipole (ECD) fit", "Source localization with MNE, dSPM, sLORETA, and eLORETA", "The role of dipole orientations in distributed source localization", "Computing various MNE solutions", "Source reconstruction using an LCMV beamformer", "Visualize source time courses (stcs)", "EEG source localization given electrode locations on an MRI", "Brainstorm Elekta phantom dataset tutorial", "Brainstorm CTF phantom dataset tutorial", "4D Neuroimaging/BTi phantom dataset tutorial", "Source localization and inverses", "Computation times", "Importing data from MEG devices", "Importing data from EEG devices", "Importing data from fNIRS devices", "Working with CTF data: the Brainstorm auditory dataset", "Importing Data from Eyetracking devices", "Reading data for different recording systems", "Computation times", "Spectro-temporal receptive field (STRF) estimation on continuous data", "Decoding (MVPA)", "Machine learning models of neural activity", "Computation times", "Overview of artifact detection", "Handling bad channels", "Rejecting bad data spans and breaks", "Background information on filtering", "Filtering and resampling data", "Repairing artifacts with regression", "Repairing artifacts with ICA", "Background on projectors and projections", "Repairing artifacts with SSP", "Setting the EEG reference", "Extracting and visualizing subject head movement", "Signal-space separation (SSS) and Maxwell filtering", "Preprocessing functional near-infrared spectroscopy (fNIRS) data", "Preprocessing optically pumped magnetometer (OPM) MEG data", "Working with eye tracker data in MNE-Python", "Preprocessing", "Computation times", "The Raw data structure: continuous data", "Working with events", "Annotating continuous data", "Built-in plotting methods for Raw objects", "Working with continuous data", "Computation times", "Creating MNE-Python data structures from scratch", "Corrupt known signal with point spread", "DICS for power mapping", "Simulation", "Computation times", "Statistical inference", "Visualising statistical significance thresholds on EEG data", "Non-parametric 1 sample cluster statistic on single trial power", "Non-parametric between conditions cluster statistic on single trial power", "Mass-univariate twoway repeated measures ANOVA on single trial power", "Spatiotemporal permutation F-test on full sensor data", "Statistical analysis of sensor data", "Computation times", "Permutation t-test on source data with spatio-temporal clustering", "2 samples permutation test on source data with spatio-temporal clustering", "Repeated measures ANOVA on source data with spatio-temporal clustering", "Statistical analysis of source estimates", "Computation times", "The Spectrum and EpochsSpectrum classes: frequency-domain data", "Frequency and time-frequency sensor analysis", "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset", "Time-frequency analysis", "Computation times", "General bibliography", "Papers citing MNE-Python", "Connectivity Estimation", "Covariance computation", "Creating data objects from arrays", "Datasets", "Decoding", "Events", "Exporting", "File I/O", "Forward Modeling", "Funding and other support", "Command line tools using Python", "mne.AcqParserFIF", "mne.Annotations", "mne.BaseEpochs", "mne.BiHemiLabel", "mne.Covariance", "mne.Dipole", "mne.DipoleFixed", "mne.Epochs", "mne.EpochsArray", "mne.Evoked", "mne.EvokedArray", "mne.Forward", "mne.Info", "mne.Label", "mne.MixedSourceEstimate", "mne.MixedVectorSourceEstimate", "mne.Projection", "mne.Report", "mne.SourceEstimate", "mne.SourceMorph", "mne.SourceSpaces", "mne.VectorSourceEstimate", "mne.VolSourceEstimate", "mne.VolVectorSourceEstimate", "mne.add_reference_channels", "mne.add_source_space_distances", "mne.annotations_from_events", "mne.apply_forward", "mne.apply_forward_raw", "mne.average_forward_solutions", "mne.baseline.rescale", "mne.beamformer.Beamformer", "mne.beamformer.apply_dics", "mne.beamformer.apply_dics_csd", "mne.beamformer.apply_dics_epochs", "mne.beamformer.apply_dics_tfr_epochs", "mne.beamformer.apply_lcmv", "mne.beamformer.apply_lcmv_cov", "mne.beamformer.apply_lcmv_epochs", "mne.beamformer.apply_lcmv_raw", "mne.beamformer.make_dics", "mne.beamformer.make_lcmv", "mne.beamformer.make_lcmv_resolution_matrix", "mne.beamformer.rap_music", "mne.beamformer.read_beamformer", "mne.bem.ConductorModel", "mne.bem.convert_flash_mris", "mne.bem.distance_to_bem", "mne.bem.fit_sphere_to_headshape", "mne.bem.get_fitting_dig", "mne.bem.make_flash_bem", "mne.bem.make_scalp_surfaces", "mne.bem.make_watershed_bem", "mne.channel_indices_by_type", "mne.channel_type", "mne.channels.DigMontage", "mne.channels.Layout", "mne.channels.combine_channels", "mne.channels.compute_dev_head_t", "mne.channels.compute_native_head_t", "mne.channels.equalize_channels", "mne.channels.find_ch_adjacency", "mne.channels.find_layout", "mne.channels.fix_mag_coil_types", "mne.channels.generate_2d_layout", "mne.channels.get_builtin_ch_adjacencies", "mne.channels.get_builtin_montages", "mne.channels.make_1020_channel_selections", "mne.channels.make_dig_montage", "mne.channels.make_eeg_layout", "mne.channels.make_grid_layout", "mne.channels.make_standard_montage", "mne.channels.read_ch_adjacency", "mne.channels.read_custom_montage", "mne.channels.read_dig_captrak", "mne.channels.read_dig_dat", "mne.channels.read_dig_egi", "mne.channels.read_dig_fif", "mne.channels.read_dig_hpts", "mne.channels.read_dig_localite", "mne.channels.read_dig_polhemus_isotrak", "mne.channels.read_layout", "mne.channels.read_polhemus_fastscan", "mne.channels.rename_channels", "mne.chpi.compute_chpi_amplitudes", "mne.chpi.compute_chpi_locs", "mne.chpi.compute_chpi_snr", "mne.chpi.compute_head_pos", "mne.chpi.extract_chpi_locs_ctf", "mne.chpi.extract_chpi_locs_kit", "mne.chpi.filter_chpi", "mne.chpi.get_active_chpi", "mne.chpi.get_chpi_info", "mne.chpi.head_pos_to_trans_rot_t", "mne.chpi.read_head_pos", "mne.chpi.write_head_pos", "mne.combine_evoked", "mne.compute_covariance", "mne.compute_proj_epochs", "mne.compute_proj_evoked", "mne.compute_proj_raw", "mne.compute_rank", "mne.compute_raw_covariance", "mne.compute_source_morph", "mne.concatenate_epochs", "mne.concatenate_events", "mne.concatenate_raws", "mne.convert_forward_solution", "mne.coreg.Coregistration", "mne.coreg.estimate_head_mri_t", "mne.coreg.get_mni_fiducials", "mne.count_events", "mne.cov.compute_whitener", "mne.cov.prepare_noise_cov", "mne.cov.regularize", "mne.create_default_subject", "mne.create_info", "mne.cuda.get_cuda_memory", "mne.cuda.init_cuda", "mne.cuda.set_cuda_device", "mne.datasets.brainstorm.bst_auditory.data_path", "mne.datasets.brainstorm.bst_raw.data_path", "mne.datasets.brainstorm.bst_resting.data_path", "mne.datasets.eegbci.load_data", "mne.datasets.eegbci.standardize", "mne.datasets.epilepsy_ecog.data_path", "mne.datasets.erp_core.data_path", "mne.datasets.eyelink.data_path", "mne.datasets.fetch_aparc_sub_parcellation", "mne.datasets.fetch_dataset", "mne.datasets.fetch_fsaverage", "mne.datasets.fetch_hcp_mmp_parcellation", "mne.datasets.fetch_infant_template", "mne.datasets.fetch_phantom", "mne.datasets.fnirs_motor.data_path", "mne.datasets.has_dataset", "mne.datasets.hf_sef.data_path", "mne.datasets.kiloword.data_path", "mne.datasets.limo.load_data", "mne.datasets.misc.data_path", "mne.datasets.mtrf.data_path", "mne.datasets.multimodal.data_path", "mne.datasets.opm.data_path", "mne.datasets.phantom_4dbti.data_path", "mne.datasets.refmeg_noise.data_path", "mne.datasets.sample.data_path", "mne.datasets.sleep_physionet.age.fetch_data", "mne.datasets.sleep_physionet.temazepam.fetch_data", "mne.datasets.somato.data_path", "mne.datasets.spm_face.data_path", "mne.datasets.ssvep.data_path", "mne.datasets.ucl_opm_auditory.data_path", "mne.datasets.visual_92_categories.data_path", "mne.decimate_surface", "mne.decoding.CSP", "mne.decoding.EMS", "mne.decoding.FilterEstimator", "mne.decoding.GeneralizingEstimator", "mne.decoding.LinearModel", "mne.decoding.PSDEstimator", "mne.decoding.ReceptiveField", "mne.decoding.SPoC", "mne.decoding.SSD", "mne.decoding.Scaler", "mne.decoding.SlidingEstimator", "mne.decoding.TemporalFilter", "mne.decoding.TimeDelayingRidge", "mne.decoding.TimeFrequency", "mne.decoding.UnsupervisedSpatialFilter", "mne.decoding.Vectorizer", "mne.decoding.compute_ems", "mne.decoding.cross_val_multiscore", "mne.decoding.get_coef", "mne.dig_mri_distances", "mne.dipole.get_phantom_dipoles", "mne.epochs.average_movements", "mne.epochs.combine_event_ids", "mne.epochs.equalize_epoch_counts", "mne.epochs.make_metadata", "mne.equalize_channels", "mne.event.define_target_events", "mne.event.match_event_names", "mne.event.shift_time_events", "mne.events_from_annotations", "mne.export.export_epochs", "mne.export.export_evokeds", "mne.export.export_evokeds_mff", "mne.export.export_raw", "mne.extract_label_time_course", "mne.filter.construct_iir_filter", "mne.filter.create_filter", "mne.filter.estimate_ringing_samples", "mne.filter.filter_data", "mne.filter.notch_filter", "mne.filter.resample", "mne.find_events", "mne.find_stim_steps", "mne.fit_dipole", "mne.forward.compute_depth_prior", "mne.forward.compute_orient_prior", "mne.forward.restrict_forward_to_label", "mne.forward.restrict_forward_to_stc", "mne.get_config", "mne.get_config_path", "mne.get_head_surf", "mne.get_meg_helmet_surf", "mne.get_montage_volume_labels", "mne.get_volume_labels_from_aseg", "mne.get_volume_labels_from_src", "mne.grade_to_tris", "mne.grade_to_vertices", "mne.grand_average", "mne.grow_labels", "mne.gui.coregistration", "mne.gui.locate_ieeg", "mne.head_to_mni", "mne.head_to_mri", "mne.inverse_sparse.gamma_map", "mne.inverse_sparse.make_stc_from_dipoles", "mne.inverse_sparse.mixed_norm", "mne.inverse_sparse.tf_mixed_norm", "mne.io.BaseRaw", "mne.io.Raw", "mne.io.RawArray", "mne.io.anonymize_info", "mne.io.kit.read_mrk", "mne.io.read_fiducials", "mne.io.read_info", "mne.io.read_raw", "mne.io.read_raw_artemis123", "mne.io.read_raw_bdf", "mne.io.read_raw_boxy", "mne.io.read_raw_brainvision", "mne.io.read_raw_bti", "mne.io.read_raw_cnt", "mne.io.read_raw_ctf", "mne.io.read_raw_curry", "mne.io.read_raw_edf", "mne.io.read_raw_eeglab", "mne.io.read_raw_egi", "mne.io.read_raw_eximia", "mne.io.read_raw_eyelink", "mne.io.read_raw_fieldtrip", "mne.io.read_raw_fif", "mne.io.read_raw_fil", "mne.io.read_raw_gdf", "mne.io.read_raw_hitachi", "mne.io.read_raw_kit", "mne.io.read_raw_nedf", "mne.io.read_raw_nicolet", "mne.io.read_raw_nihon", "mne.io.read_raw_nirx", "mne.io.read_raw_persyst", "mne.io.read_raw_snirf", "mne.io.show_fiff", "mne.io.write_fiducials", "mne.label.select_sources", "mne.label_sign_flip", "mne.labels_to_stc", "mne.make_ad_hoc_cov", "mne.make_bem_model", "mne.make_bem_solution", "mne.make_field_map", "mne.make_fixed_length_epochs", "mne.make_fixed_length_events", "mne.make_forward_dipole", "mne.make_forward_solution", "mne.make_sphere_model", "mne.match_channel_orders", "mne.merge_events", "mne.minimum_norm.InverseOperator", "mne.minimum_norm.apply_inverse", "mne.minimum_norm.apply_inverse_cov", "mne.minimum_norm.apply_inverse_epochs", "mne.minimum_norm.apply_inverse_raw", "mne.minimum_norm.apply_inverse_tfr_epochs", "mne.minimum_norm.compute_rank_inverse", "mne.minimum_norm.compute_source_psd", "mne.minimum_norm.compute_source_psd_epochs", "mne.minimum_norm.estimate_snr", "mne.minimum_norm.get_cross_talk", "mne.minimum_norm.get_point_spread", "mne.minimum_norm.make_inverse_operator", "mne.minimum_norm.make_inverse_resolution_matrix", "mne.minimum_norm.prepare_inverse_operator", "mne.minimum_norm.read_inverse_operator", "mne.minimum_norm.resolution_metrics", "mne.minimum_norm.source_band_induced_power", "mne.minimum_norm.source_induced_power", "mne.minimum_norm.write_inverse_operator", "mne.morph_labels", "mne.morph_source_spaces", "mne.open_docs", "mne.open_report", "mne.parse_config", "mne.pick_channels", "mne.pick_channels_cov", "mne.pick_channels_forward", "mne.pick_channels_regexp", "mne.pick_events", "mne.pick_info", "mne.pick_types", "mne.pick_types_forward", "mne.preprocessing.EOGRegression", "mne.preprocessing.ICA", "mne.preprocessing.Xdawn", "mne.preprocessing.annotate_amplitude", "mne.preprocessing.annotate_break", "mne.preprocessing.annotate_movement", "mne.preprocessing.annotate_muscle_zscore", "mne.preprocessing.annotate_nan", "mne.preprocessing.compute_average_dev_head_t", "mne.preprocessing.compute_bridged_electrodes", "mne.preprocessing.compute_current_source_density", "mne.preprocessing.compute_fine_calibration", "mne.preprocessing.compute_maxwell_basis", "mne.preprocessing.compute_proj_ecg", "mne.preprocessing.compute_proj_eog", "mne.preprocessing.compute_proj_hfc", "mne.preprocessing.corrmap", "mne.preprocessing.cortical_signal_suppression", "mne.preprocessing.create_ecg_epochs", "mne.preprocessing.create_eog_epochs", "mne.preprocessing.equalize_bads", "mne.preprocessing.eyetracking.set_channel_types_eyetrack", "mne.preprocessing.find_bad_channels_maxwell", "mne.preprocessing.find_ecg_events", "mne.preprocessing.find_eog_events", "mne.preprocessing.fix_stim_artifact", "mne.preprocessing.ica_find_ecg_events", "mne.preprocessing.ica_find_eog_events", "mne.preprocessing.ieeg.make_montage_volume", "mne.preprocessing.ieeg.project_sensors_onto_brain", "mne.preprocessing.ieeg.warp_montage", "mne.preprocessing.infomax", "mne.preprocessing.interpolate_bridged_electrodes", "mne.preprocessing.maxwell_filter", "mne.preprocessing.maxwell_filter_prepare_emptyroom", "mne.preprocessing.nirs.beer_lambert_law", "mne.preprocessing.nirs.optical_density", "mne.preprocessing.nirs.scalp_coupling_index", "mne.preprocessing.nirs.short_channels", "mne.preprocessing.nirs.source_detector_distances", "mne.preprocessing.nirs.temporal_derivative_distribution_repair", "mne.preprocessing.oversampled_temporal_projection", "mne.preprocessing.peak_finder", "mne.preprocessing.read_eog_regression", "mne.preprocessing.read_fine_calibration", "mne.preprocessing.read_ica", "mne.preprocessing.read_ica_eeglab", "mne.preprocessing.realign_raw", "mne.preprocessing.regress_artifact", "mne.preprocessing.write_fine_calibration", "mne.random_parcellation", "mne.read_annotations", "mne.read_bem_solution", "mne.read_bem_surfaces", "mne.read_cov", "mne.read_dipole", "mne.read_epochs", "mne.read_epochs_eeglab", "mne.read_epochs_fieldtrip", "mne.read_epochs_kit", "mne.read_events", "mne.read_evoked_besa", "mne.read_evoked_fieldtrip", "mne.read_evokeds", "mne.read_evokeds_mff", "mne.read_forward_solution", "mne.read_freesurfer_lut", "mne.read_label", "mne.read_labels_from_annot", "mne.read_lta", "mne.read_morph_map", "mne.read_proj", "mne.read_reject_parameters", "mne.read_source_estimate", "mne.read_source_morph", "mne.read_source_spaces", "mne.read_surface", "mne.read_talxfm", "mne.read_trans", "mne.read_tri", "mne.read_vectorview_selection", "mne.rename_channels", "mne.scale_bem", "mne.scale_labels", "mne.scale_mri", "mne.scale_source_space", "mne.sensitivity_map", "mne.set_bipolar_reference", "mne.set_cache_dir", "mne.set_config", "mne.set_eeg_reference", "mne.set_log_file", "mne.set_log_level", "mne.set_memmap_min_size", "mne.setup_source_space", "mne.setup_volume_source_space", "mne.simulation.SourceSimulator", "mne.simulation.add_chpi", "mne.simulation.add_ecg", "mne.simulation.add_eog", "mne.simulation.add_noise", "mne.simulation.metrics.cosine_score", "mne.simulation.metrics.f1_score", "mne.simulation.metrics.peak_position_error", "mne.simulation.metrics.precision_score", "mne.simulation.metrics.recall_score", "mne.simulation.metrics.region_localization_error", "mne.simulation.metrics.roc_auc_score", "mne.simulation.metrics.spatial_deviation_error", "mne.simulation.select_source_in_label", "mne.simulation.simulate_evoked", "mne.simulation.simulate_raw", "mne.simulation.simulate_sparse_stc", "mne.simulation.simulate_stc", "mne.source_space.compute_distance_to_sensors", "mne.source_space.get_decimated_surfaces", "mne.spatial_dist_adjacency", "mne.spatial_inter_hemi_adjacency", "mne.spatial_src_adjacency", "mne.spatial_tris_adjacency", "mne.spatio_temporal_dist_adjacency", "mne.spatio_temporal_src_adjacency", "mne.spatio_temporal_tris_adjacency", "mne.split_label", "mne.stats.bonferroni_correction", "mne.stats.bootstrap_confidence_interval", "mne.stats.combine_adjacency", "mne.stats.f_mway_rm", "mne.stats.f_oneway", "mne.stats.f_threshold_mway_rm", "mne.stats.fdr_correction", "mne.stats.linear_regression", "mne.stats.linear_regression_raw", "mne.stats.permutation_cluster_1samp_test", "mne.stats.permutation_cluster_test", "mne.stats.permutation_t_test", "mne.stats.spatio_temporal_cluster_1samp_test", "mne.stats.spatio_temporal_cluster_test", "mne.stats.summarize_clusters_stc", "mne.stats.ttest_1samp_no_p", "mne.stats.ttest_ind_no_p", "mne.stc_near_sensors", "mne.stc_to_label", "mne.surface.complete_surface_info", "mne.surface.read_curvature", "mne.sys_info", "mne.time_frequency.AverageTFR", "mne.time_frequency.CrossSpectralDensity", "mne.time_frequency.EpochsSpectrum", "mne.time_frequency.EpochsTFR", "mne.time_frequency.Spectrum", "mne.time_frequency.csd_array_fourier", "mne.time_frequency.csd_array_morlet", "mne.time_frequency.csd_array_multitaper", "mne.time_frequency.csd_fourier", "mne.time_frequency.csd_morlet", "mne.time_frequency.csd_multitaper", "mne.time_frequency.csd_tfr", "mne.time_frequency.dpss_windows", "mne.time_frequency.fit_iir_model_raw", "mne.time_frequency.fwhm", "mne.time_frequency.istft", "mne.time_frequency.morlet", "mne.time_frequency.pick_channels_csd", "mne.time_frequency.psd_array_multitaper", "mne.time_frequency.psd_array_welch", "mne.time_frequency.read_csd", "mne.time_frequency.read_spectrum", "mne.time_frequency.read_tfrs", "mne.time_frequency.stft", "mne.time_frequency.stftfreq", "mne.time_frequency.tfr.cwt", "mne.time_frequency.tfr.morlet", "mne.time_frequency.tfr_array_morlet", "mne.time_frequency.tfr_array_multitaper", "mne.time_frequency.tfr_array_stockwell", "mne.time_frequency.tfr_morlet", "mne.time_frequency.tfr_multitaper", "mne.time_frequency.tfr_stockwell", "mne.time_frequency.write_tfrs", "mne.transform_surface_to", "mne.transforms.Transform", "mne.transforms.apply_volume_registration", "mne.transforms.apply_volume_registration_points", "mne.transforms.compute_volume_registration", "mne.transforms.quat_to_rot", "mne.transforms.read_ras_mni_t", "mne.transforms.rot_to_quat", "mne.use_coil_def", "mne.use_log_level", "mne.utils.deprecated", "mne.utils.warn", "mne.verbose", "mne.vertex_to_mni", "mne.viz.Brain", "mne.viz.ClickableImage", "mne.viz.Figure3D", "mne.viz.add_background_image", "mne.viz.centers_to_edges", "mne.viz.circular_layout", "mne.viz.close_3d_figure", "mne.viz.close_all_3d_figures", "mne.viz.compare_fiff", "mne.viz.create_3d_figure", "mne.viz.get_3d_backend", "mne.viz.get_brain_class", "mne.viz.get_browser_backend", "mne.viz.iter_topography", "mne.viz.link_brains", "mne.viz.mne_analyze_colormap", "mne.viz.plot_alignment", "mne.viz.plot_arrowmap", "mne.viz.plot_bem", "mne.viz.plot_brain_colorbar", "mne.viz.plot_bridged_electrodes", "mne.viz.plot_ch_adjacency", "mne.viz.plot_channel_labels_circle", "mne.viz.plot_chpi_snr", "mne.viz.plot_compare_evokeds", "mne.viz.plot_cov", "mne.viz.plot_csd", "mne.viz.plot_dipole_amplitudes", "mne.viz.plot_dipole_locations", "mne.viz.plot_drop_log", "mne.viz.plot_epochs", "mne.viz.plot_epochs_image", "mne.viz.plot_epochs_psd_topomap", "mne.viz.plot_events", "mne.viz.plot_evoked", "mne.viz.plot_evoked_field", "mne.viz.plot_evoked_image", "mne.viz.plot_evoked_joint", "mne.viz.plot_evoked_topo", "mne.viz.plot_evoked_topomap", "mne.viz.plot_evoked_white", "mne.viz.plot_filter", "mne.viz.plot_head_positions", "mne.viz.plot_ica_components", "mne.viz.plot_ica_overlay", "mne.viz.plot_ica_properties", "mne.viz.plot_ica_scores", "mne.viz.plot_ica_sources", "mne.viz.plot_ideal_filter", "mne.viz.plot_layout", "mne.viz.plot_montage", "mne.viz.plot_projs_joint", "mne.viz.plot_projs_topomap", "mne.viz.plot_raw", "mne.viz.plot_raw_psd", "mne.viz.plot_regression_weights", "mne.viz.plot_sensors", "mne.viz.plot_snr_estimate", "mne.viz.plot_source_estimates", "mne.viz.plot_sparse_source_estimates", "mne.viz.plot_tfr_topomap", "mne.viz.plot_topo_image_epochs", "mne.viz.plot_topomap", "mne.viz.plot_vector_source_estimates", "mne.viz.plot_volume_source_estimates", "mne.viz.set_3d_backend", "mne.viz.set_3d_options", "mne.viz.set_3d_title", "mne.viz.set_3d_view", "mne.viz.set_browser_backend", "mne.viz.snapshot_brain_montage", "mne.viz.use_3d_backend", "mne.viz.use_browser_backend", "mne.what", "mne.write_bem_solution", "mne.write_bem_surfaces", "mne.write_cov", "mne.write_events", "mne.write_evokeds", "mne.write_forward_solution", "mne.write_head_bem", "mne.write_label", "mne.write_labels_to_annot", "mne.write_proj", "mne.write_source_spaces", "mne.write_surface", "mne.write_trans", "Glossary", "MNE", "Advanced setup", "Testing your installation", "Contributing guide", "Installing FreeSurfer", "Installing MNE-Python", "MNE-Python installers", "Install via <code class=\"code docutils literal notranslate\"><span class=\"pre\">pip</span></code> or <code class=\"code docutils literal notranslate\"><span class=\"pre\">conda</span></code>", "Installing Python", "Installing MNE-C", "Overview of the MNE tools suite", "Updating MNE-Python", "Inverse Solutions", "Logging and Configuration", "Martinos Center setup", "MNE with CPP", "Most-used classes", "MRI Processing", "How to cite MNE-Python", "The typical M/EEG workflow", "Datasets Overview", "Design philosophy", "MNE-Python Development", "Frequently Asked Questions (FAQ)", "Getting help", "Project Governance", "Algorithms and other implementation details", "Documentation overview", "Getting started with Python", "MNE-MATLAB documentation", "Migrating from other analysis software", "Current steering council and institutional partners", "Roadmap", "Preprocessing", "Python API Reference", "Reading raw data", "Realtime", "MNE-Report", "Sensor Space Data", "Simulation", "Source Space Data", "Statistics", "Time-Frequency", "Visualization", "What\u2019s new"], "terms": {"3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885], "8": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885], "demonstr": [0, 5, 19, 27, 33, 41, 43, 44, 45, 63, 67, 70, 71, 73, 79, 83, 98, 102, 113, 116, 144, 145, 150, 151, 160, 167, 169, 170, 171, 189, 191, 194, 198, 200, 201, 203, 204, 207, 209, 215, 222, 223, 226, 234, 239, 578, 853, 862, 865, 868, 869, 886], "sensor": [0, 4, 5, 11, 15, 16, 17, 20, 23, 25, 27, 28, 32, 34, 41, 42, 45, 49, 68, 70, 71, 77, 78, 79, 84, 87, 89, 91, 93, 94, 97, 101, 102, 108, 118, 119, 121, 123, 126, 129, 131, 134, 143, 145, 149, 150, 155, 156, 157, 158, 161, 165, 167, 168, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 187, 190, 198, 199, 201, 203, 204, 205, 207, 208, 209, 215, 223, 226, 227, 228, 233, 239, 242, 243, 244, 257, 259, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 284, 285, 297, 298, 299, 305, 306, 310, 311, 312, 313, 318, 319, 320, 321, 323, 324, 326, 327, 328, 329, 338, 340, 342, 344, 349, 354, 355, 356, 357, 358, 364, 369, 370, 371, 373, 411, 412, 413, 414, 415, 418, 419, 420, 421, 426, 427, 429, 430, 431, 452, 454, 455, 462, 471, 478, 479, 480, 481, 484, 486, 489, 490, 492, 504, 516, 522, 523, 524, 529, 531, 534, 535, 539, 552, 557, 558, 560, 561, 562, 566, 572, 575, 576, 581, 588, 589, 593, 598, 599, 601, 604, 616, 619, 620, 625, 638, 640, 641, 646, 658, 659, 670, 671, 674, 684, 686, 690, 691, 693, 694, 695, 696, 697, 701, 706, 707, 708, 709, 710, 736, 743, 754, 767, 770, 771, 774, 775, 777, 778, 779, 780, 784, 786, 788, 789, 790, 792, 793, 794, 796, 797, 803, 804, 806, 807, 809, 810, 814, 815, 816, 821, 822, 824, 841, 846, 852, 861, 862, 863, 865, 871, 874, 875, 876, 886], "sourc": [0, 1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 29, 35, 37, 40, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 95, 96, 98, 99, 100, 102, 104, 105, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 156, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 174, 178, 182, 183, 184, 186, 187, 188, 189, 190, 191, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 227, 228, 229, 230, 231, 238, 239, 240, 241, 244, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 849, 851, 852, 854, 857, 862, 865, 866, 867, 871, 876, 886], "space": [0, 5, 10, 17, 20, 22, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 60, 68, 74, 82, 87, 89, 91, 92, 93, 94, 97, 101, 104, 105, 107, 108, 112, 114, 118, 119, 123, 126, 130, 133, 134, 135, 139, 146, 147, 150, 154, 155, 159, 161, 165, 167, 169, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 190, 194, 198, 204, 207, 213, 214, 215, 218, 221, 223, 226, 227, 231, 233, 235, 238, 239, 240, 244, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 284, 285, 297, 298, 312, 316, 325, 330, 347, 348, 351, 355, 356, 357, 359, 360, 363, 364, 367, 369, 373, 411, 414, 415, 418, 419, 421, 425, 428, 429, 432, 440, 445, 452, 456, 465, 467, 469, 473, 474, 475, 476, 477, 479, 480, 482, 484, 487, 494, 504, 514, 515, 520, 522, 523, 527, 528, 529, 530, 531, 532, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 548, 557, 558, 560, 561, 571, 572, 573, 574, 582, 588, 593, 614, 616, 620, 623, 625, 627, 628, 635, 637, 640, 642, 644, 645, 646, 654, 655, 656, 663, 666, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 690, 691, 693, 694, 696, 697, 698, 701, 702, 706, 708, 710, 718, 740, 754, 770, 772, 778, 784, 785, 786, 787, 790, 791, 793, 796, 797, 801, 806, 807, 809, 812, 813, 814, 817, 818, 822, 838, 841, 851, 862, 865, 874, 876, 886], "function": [0, 1, 4, 5, 8, 9, 12, 16, 18, 19, 21, 27, 28, 31, 35, 36, 40, 42, 44, 45, 46, 51, 54, 55, 56, 57, 58, 59, 61, 69, 70, 71, 73, 76, 79, 81, 82, 89, 92, 93, 94, 98, 100, 102, 106, 111, 112, 113, 114, 115, 118, 120, 126, 131, 132, 134, 135, 139, 140, 142, 143, 145, 148, 149, 150, 151, 154, 155, 156, 157, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 227, 228, 229, 230, 231, 234, 239, 240, 241, 244, 246, 249, 250, 256, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 291, 297, 298, 299, 303, 305, 307, 312, 317, 318, 320, 321, 324, 329, 330, 332, 340, 341, 342, 347, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 371, 373, 375, 387, 390, 411, 414, 415, 416, 417, 418, 420, 421, 428, 430, 432, 435, 436, 437, 438, 440, 442, 443, 444, 445, 446, 450, 451, 452, 454, 468, 469, 472, 473, 477, 478, 479, 480, 485, 487, 488, 490, 491, 494, 496, 499, 500, 502, 504, 508, 510, 511, 513, 515, 523, 527, 528, 531, 534, 535, 536, 537, 538, 539, 540, 542, 543, 550, 556, 558, 560, 561, 563, 564, 565, 570, 571, 572, 573, 574, 576, 578, 579, 581, 582, 585, 591, 593, 594, 595, 596, 597, 599, 600, 607, 610, 611, 614, 617, 618, 619, 620, 621, 622, 623, 625, 628, 633, 641, 644, 647, 650, 655, 656, 658, 659, 660, 669, 670, 672, 673, 690, 692, 693, 694, 695, 696, 697, 701, 702, 705, 706, 707, 708, 709, 710, 713, 716, 718, 724, 725, 734, 736, 737, 744, 748, 749, 750, 751, 752, 754, 764, 767, 769, 770, 771, 778, 780, 784, 786, 787, 792, 793, 794, 797, 800, 805, 806, 808, 809, 810, 812, 814, 816, 817, 818, 819, 823, 841, 843, 852, 853, 854, 860, 861, 862, 863, 868, 869, 872, 874, 875, 876, 878, 880, 883, 884, 886], "ha": [0, 1, 5, 9, 10, 27, 32, 42, 45, 49, 54, 70, 71, 74, 78, 82, 83, 92, 93, 102, 108, 113, 125, 126, 135, 139, 141, 143, 144, 145, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 179, 180, 181, 182, 184, 187, 188, 189, 191, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 215, 216, 218, 221, 223, 226, 227, 231, 239, 241, 246, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 284, 285, 288, 289, 290, 291, 297, 298, 302, 303, 308, 354, 358, 359, 360, 369, 370, 371, 377, 378, 379, 382, 383, 384, 386, 390, 391, 392, 394, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 411, 417, 418, 432, 446, 447, 449, 450, 452, 454, 455, 458, 474, 476, 477, 479, 480, 481, 487, 488, 500, 508, 524, 527, 528, 529, 531, 539, 560, 561, 562, 564, 576, 589, 593, 600, 623, 624, 642, 645, 687, 688, 693, 694, 696, 697, 706, 707, 708, 709, 710, 713, 722, 724, 732, 733, 734, 736, 737, 741, 764, 778, 786, 788, 790, 791, 792, 793, 794, 797, 799, 801, 806, 807, 808, 809, 810, 812, 814, 816, 841, 843, 845, 849, 851, 852, 853, 861, 862, 863, 864, 865, 866, 867, 868, 871, 874, 878, 886], "move": [0, 27, 60, 75, 79, 80, 115, 139, 144, 155, 160, 176, 191, 201, 204, 205, 208, 211, 234, 241, 246, 256, 261, 264, 265, 266, 267, 273, 279, 280, 365, 411, 418, 446, 479, 480, 560, 561, 565, 590, 706, 708, 710, 742, 743, 744, 785, 786, 790, 793, 797, 806, 809, 814, 818, 865, 867, 868, 878, 886], "mne_connect": [0, 27, 47, 145, 246, 776], "packag": [0, 27, 137, 145, 159, 164, 165, 188, 195, 199, 200, 201, 204, 223, 226, 246, 256, 258, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 372, 373, 414, 421, 424, 427, 428, 454, 467, 469, 471, 479, 480, 518, 519, 522, 523, 534, 535, 544, 545, 566, 573, 574, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 786, 789, 808, 841, 842, 843, 845, 846, 848, 849, 850, 851, 852, 856, 862, 863, 874, 886], "can": [0, 4, 5, 7, 12, 13, 15, 16, 19, 21, 22, 24, 26, 27, 31, 32, 40, 41, 42, 43, 44, 45, 46, 47, 58, 59, 60, 61, 70, 71, 74, 75, 78, 79, 81, 82, 83, 87, 93, 94, 98, 100, 102, 108, 111, 112, 113, 114, 115, 118, 119, 120, 125, 126, 128, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 227, 228, 229, 231, 234, 235, 236, 239, 240, 241, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 287, 290, 297, 298, 303, 304, 305, 306, 309, 310, 312, 314, 316, 317, 320, 321, 322, 323, 327, 328, 329, 330, 332, 335, 339, 340, 341, 342, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 366, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 382, 383, 384, 386, 389, 390, 391, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 430, 432, 435, 436, 437, 438, 440, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 458, 461, 462, 463, 464, 467, 469, 470, 471, 473, 474, 476, 477, 479, 480, 487, 491, 494, 495, 499, 500, 502, 504, 508, 510, 511, 513, 515, 518, 519, 520, 522, 523, 526, 528, 534, 535, 537, 538, 539, 541, 545, 547, 548, 549, 550, 558, 559, 560, 561, 563, 564, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 592, 593, 594, 597, 599, 600, 601, 607, 608, 611, 613, 616, 617, 618, 619, 622, 623, 624, 626, 628, 630, 636, 640, 641, 642, 644, 645, 647, 650, 652, 654, 655, 662, 669, 670, 671, 672, 674, 676, 678, 680, 681, 685, 686, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 705, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 722, 729, 732, 734, 736, 737, 740, 742, 743, 744, 749, 751, 752, 754, 755, 759, 762, 767, 770, 771, 772, 773, 774, 775, 776, 777, 778, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 804, 805, 806, 807, 808, 809, 810, 812, 814, 816, 817, 818, 820, 828, 829, 832, 834, 839, 841, 843, 844, 845, 849, 850, 851, 852, 853, 857, 860, 861, 862, 863, 867, 868, 869, 871, 874, 875, 876, 886], "found": [0, 1, 2, 4, 5, 8, 9, 11, 12, 16, 18, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 123, 126, 127, 128, 131, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 157, 158, 160, 161, 165, 167, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 195, 198, 199, 200, 201, 202, 203, 204, 206, 209, 210, 211, 212, 216, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 256, 257, 259, 261, 264, 265, 266, 267, 269, 273, 288, 302, 318, 319, 329, 348, 349, 365, 377, 378, 379, 380, 382, 383, 384, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 430, 438, 452, 453, 459, 460, 461, 470, 479, 480, 486, 506, 527, 561, 564, 573, 578, 579, 583, 584, 586, 587, 602, 613, 636, 642, 644, 649, 650, 655, 693, 741, 754, 764, 766, 770, 784, 801, 807, 834, 841, 844, 845, 850, 862, 866, 868, 874, 876, 886], "go": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 277, 357, 461, 479, 480, 561, 655, 845, 856, 865, 866, 867, 868], "end": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 287, 288, 312, 317, 324, 340, 341, 343, 354, 357, 359, 411, 417, 418, 423, 429, 434, 435, 436, 451, 452, 479, 480, 492, 500, 501, 506, 521, 534, 542, 544, 545, 546, 560, 561, 564, 578, 579, 585, 603, 605, 607, 614, 616, 623, 624, 625, 631, 635, 639, 641, 662, 663, 664, 665, 666, 668, 671, 683, 706, 707, 709, 711, 712, 713, 714, 715, 716, 717, 719, 728, 739, 741, 754, 784, 793, 798, 801, 807, 814, 827, 828, 829, 830, 832, 833, 837, 838, 839, 840, 841, 843, 845, 865, 867, 868, 871, 886], "download": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 843, 845, 846, 847, 848, 852, 853, 862, 886], "full": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 239, 240, 241, 264, 265, 266, 267, 269, 271, 272, 275, 277, 278, 280, 297, 298, 300, 318, 319, 354, 358, 359, 360, 369, 370, 371, 411, 416, 418, 419, 424, 441, 444, 454, 455, 474, 476, 477, 479, 480, 527, 528, 539, 542, 558, 561, 620, 623, 686, 692, 693, 695, 697, 709, 720, 722, 724, 731, 732, 734, 736, 737, 744, 754, 770, 772, 775, 778, 784, 786, 794, 801, 807, 812, 817, 819, 820, 823, 843, 845, 851, 857, 861, 862, 867, 886], "exampl": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 154, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 194, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 259, 280, 309, 335, 362, 368, 369, 370, 380, 386, 394, 404, 410, 433, 438, 455, 478, 503, 549, 571, 580, 602, 619, 642, 651, 732, 734, 744, 752, 784, 786, 793, 797, 799, 807, 809, 814, 818, 841, 843, 845, 848, 852, 861, 863, 865, 866, 868, 869, 886], "code": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 241, 244, 255, 259, 264, 265, 266, 267, 274, 283, 349, 438, 440, 450, 452, 455, 478, 479, 480, 487, 496, 504, 529, 593, 602, 618, 692, 706, 708, 709, 710, 722, 732, 735, 736, 738, 754, 786, 788, 808, 841, 849, 861, 864, 865, 867, 868, 869, 872, 874, 881, 884, 886], "here": [1, 4, 5, 7, 9, 10, 11, 12, 15, 18, 19, 21, 28, 31, 33, 34, 38, 41, 42, 43, 45, 65, 67, 70, 71, 74, 75, 81, 82, 83, 89, 93, 94, 99, 100, 103, 108, 110, 111, 113, 115, 116, 119, 120, 126, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 155, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 176, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 227, 228, 230, 231, 234, 235, 236, 240, 241, 270, 274, 275, 277, 279, 280, 334, 360, 386, 392, 417, 428, 435, 451, 478, 513, 523, 526, 536, 561, 578, 591, 594, 608, 610, 623, 655, 658, 659, 660, 669, 670, 672, 693, 694, 695, 696, 697, 701, 787, 818, 843, 845, 852, 853, 862, 865, 868, 869, 870, 872, 886], "we": [1, 4, 5, 7, 9, 10, 11, 13, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 54, 58, 59, 65, 67, 68, 69, 70, 71, 73, 74, 75, 82, 83, 86, 87, 89, 93, 94, 100, 102, 108, 110, 111, 112, 113, 114, 115, 116, 119, 120, 125, 126, 128, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 261, 264, 265, 266, 267, 271, 274, 275, 277, 279, 282, 307, 330, 419, 421, 441, 442, 443, 444, 451, 461, 479, 480, 481, 510, 536, 561, 578, 592, 600, 666, 709, 754, 755, 770, 779, 794, 812, 843, 849, 850, 853, 856, 860, 861, 862, 863, 865, 867, 868, 872, 874, 886], "comput": [1, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 17, 19, 22, 23, 24, 26, 27, 31, 36, 38, 43, 44, 48, 50, 52, 57, 60, 68, 71, 72, 76, 78, 80, 86, 87, 91, 92, 94, 95, 96, 97, 99, 104, 112, 113, 114, 118, 119, 120, 122, 123, 130, 133, 134, 140, 141, 144, 145, 148, 149, 150, 151, 154, 155, 156, 159, 162, 164, 165, 166, 167, 170, 171, 174, 175, 177, 180, 181, 182, 183, 184, 185, 188, 190, 194, 195, 199, 200, 202, 206, 207, 209, 211, 215, 218, 221, 222, 223, 226, 227, 230, 239, 240, 241, 244, 257, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 284, 285, 288, 289, 290, 291, 292, 294, 297, 298, 299, 300, 302, 304, 315, 316, 318, 320, 325, 329, 341, 342, 343, 344, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 369, 370, 371, 380, 411, 412, 415, 416, 417, 418, 419, 423, 427, 430, 440, 445, 450, 452, 454, 455, 456, 461, 467, 469, 474, 475, 476, 477, 479, 480, 484, 486, 491, 492, 494, 514, 517, 518, 519, 521, 522, 523, 524, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 558, 559, 561, 562, 565, 568, 569, 571, 572, 573, 574, 575, 578, 582, 589, 591, 610, 612, 613, 614, 615, 620, 623, 624, 625, 627, 628, 635, 637, 640, 642, 644, 646, 648, 650, 654, 655, 656, 661, 662, 663, 664, 665, 666, 667, 668, 671, 674, 676, 677, 678, 679, 680, 681, 682, 687, 688, 689, 692, 693, 694, 696, 697, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 724, 725, 730, 731, 732, 733, 734, 735, 736, 737, 738, 742, 743, 748, 754, 770, 771, 772, 778, 779, 781, 782, 784, 785, 786, 793, 794, 801, 806, 807, 813, 822, 834, 841, 845, 846, 848, 851, 852, 857, 862, 865, 871, 876, 881, 883, 886], "evok": [1, 2, 4, 5, 7, 8, 15, 16, 17, 18, 20, 27, 28, 31, 35, 36, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 68, 71, 73, 77, 78, 79, 83, 84, 86, 87, 88, 90, 92, 94, 95, 96, 98, 99, 100, 106, 112, 115, 116, 121, 123, 129, 134, 135, 140, 142, 143, 153, 161, 166, 168, 169, 175, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 195, 198, 199, 200, 201, 202, 204, 205, 206, 209, 212, 222, 223, 227, 228, 229, 230, 231, 234, 236, 239, 241, 244, 256, 259, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 274, 275, 277, 278, 279, 280, 281, 284, 285, 289, 290, 293, 294, 297, 298, 300, 314, 317, 353, 354, 356, 358, 373, 393, 416, 425, 432, 436, 437, 442, 443, 445, 452, 454, 468, 470, 474, 476, 477, 479, 480, 484, 492, 519, 520, 523, 527, 528, 529, 530, 531, 532, 536, 539, 542, 552, 557, 558, 559, 560, 561, 562, 569, 570, 573, 574, 577, 580, 581, 585, 592, 593, 608, 614, 616, 620, 621, 622, 623, 624, 625, 627, 628, 631, 647, 650, 654, 655, 660, 670, 672, 692, 701, 706, 708, 709, 710, 715, 719, 724, 734, 736, 737, 738, 754, 771, 778, 781, 782, 784, 785, 788, 789, 790, 791, 792, 793, 794, 798, 801, 805, 807, 808, 811, 813, 816, 821, 832, 841, 845, 862, 863, 865, 868, 871, 872, 876, 886], "from": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 142, 144, 145, 146, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 211, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 307, 309, 312, 313, 315, 318, 321, 324, 325, 326, 328, 330, 331, 332, 333, 334, 337, 338, 339, 342, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 369, 370, 371, 372, 373, 380, 386, 394, 395, 403, 404, 411, 415, 417, 418, 419, 420, 426, 429, 433, 434, 435, 437, 440, 441, 442, 443, 444, 445, 450, 452, 453, 454, 455, 456, 459, 461, 463, 464, 468, 469, 470, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 518, 519, 520, 521, 522, 523, 524, 527, 528, 529, 534, 535, 536, 537, 538, 539, 541, 542, 543, 547, 548, 552, 553, 554, 558, 559, 560, 561, 562, 563, 564, 565, 568, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 602, 603, 604, 605, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 622, 623, 624, 625, 626, 627, 628, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 645, 647, 650, 655, 656, 657, 658, 659, 660, 666, 669, 670, 671, 672, 673, 675, 676, 678, 679, 680, 681, 682, 683, 685, 686, 688, 692, 693, 694, 695, 696, 697, 698, 701, 702, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 732, 734, 735, 736, 737, 738, 741, 742, 743, 744, 746, 749, 750, 753, 754, 762, 767, 770, 771, 778, 782, 783, 784, 786, 787, 788, 790, 791, 792, 793, 794, 795, 797, 798, 799, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 814, 816, 822, 824, 832, 833, 836, 839, 841, 843, 845, 848, 849, 850, 851, 852, 853, 857, 861, 862, 863, 865, 867, 868, 870, 871, 874, 876, 884, 886], "tutori": [1, 27, 32, 62, 70, 73, 83, 108, 123, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 179, 180, 181, 185, 186, 189, 190, 192, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 228, 231, 232, 234, 236, 237, 239, 241, 242, 244, 261, 262, 264, 265, 266, 267, 269, 297, 302, 354, 359, 411, 431, 446, 449, 452, 454, 479, 480, 490, 492, 524, 549, 593, 733, 734, 736, 737, 770, 782, 794, 822, 841, 845, 862, 865, 868, 869, 870, 886], "For": [1, 4, 15, 19, 34, 43, 44, 47, 50, 55, 63, 67, 69, 70, 79, 94, 100, 102, 108, 112, 114, 119, 120, 122, 126, 133, 134, 135, 139, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 211, 215, 216, 218, 221, 226, 228, 230, 231, 234, 236, 239, 240, 241, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 283, 297, 298, 314, 325, 335, 354, 358, 359, 360, 367, 369, 370, 371, 380, 386, 403, 404, 410, 411, 413, 414, 417, 418, 419, 421, 423, 424, 428, 432, 433, 434, 435, 437, 440, 441, 442, 444, 446, 447, 449, 450, 452, 453, 454, 455, 468, 469, 470, 473, 474, 476, 477, 478, 479, 480, 485, 487, 494, 500, 503, 504, 526, 534, 539, 543, 548, 560, 561, 562, 563, 572, 577, 580, 582, 593, 597, 604, 611, 620, 636, 640, 642, 647, 650, 652, 655, 686, 691, 692, 693, 694, 696, 697, 701, 706, 707, 708, 709, 710, 724, 726, 733, 734, 736, 737, 744, 754, 769, 770, 772, 778, 779, 784, 785, 786, 788, 790, 793, 794, 795, 797, 798, 799, 801, 807, 809, 810, 814, 816, 818, 841, 843, 845, 847, 851, 856, 857, 861, 862, 863, 864, 865, 868, 872, 886], "comparison": [1, 27, 31, 38, 82, 95, 96, 100, 111, 121, 129, 150, 154, 156, 166, 175, 182, 183, 190, 201, 206, 210, 231, 234, 235, 236, 240, 241, 244, 275, 276, 360, 561, 564, 594, 633, 690, 694, 695, 853, 861, 868, 883, 886], "see": [1, 4, 7, 8, 10, 19, 21, 22, 26, 27, 32, 34, 35, 39, 43, 44, 62, 63, 70, 71, 73, 75, 79, 81, 82, 83, 100, 112, 114, 118, 119, 120, 126, 128, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 228, 229, 231, 234, 239, 241, 249, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418, 419, 421, 422, 424, 427, 428, 430, 432, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 461, 462, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 522, 523, 524, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 555, 557, 560, 561, 562, 563, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 584, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 600, 601, 602, 605, 606, 607, 608, 610, 612, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 650, 651, 654, 655, 657, 658, 659, 660, 669, 670, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 724, 725, 728, 729, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 749, 753, 754, 759, 762, 769, 770, 771, 778, 779, 782, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 796, 797, 798, 799, 801, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 844, 845, 849, 850, 851, 852, 861, 862, 863, 865, 867, 868, 869, 872, 873, 874, 876, 883, 886], "1": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 221, 222, 223, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 243, 244, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 290, 297, 298, 299, 304, 307, 308, 309, 312, 314, 316, 318, 321, 322, 323, 324, 335, 338, 341, 342, 343, 347, 348, 353, 354, 355, 357, 359, 360, 365, 368, 371, 380, 387, 388, 389, 393, 394, 395, 403, 404, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 435, 438, 440, 441, 442, 443, 444, 446, 447, 449, 450, 451, 452, 454, 455, 456, 461, 467, 469, 470, 471, 473, 474, 476, 477, 478, 479, 480, 487, 489, 494, 495, 496, 503, 504, 505, 512, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 526, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 552, 553, 554, 555, 558, 560, 561, 562, 563, 566, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 591, 592, 593, 594, 597, 600, 601, 602, 603, 608, 615, 617, 619, 625, 627, 640, 642, 644, 646, 650, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 673, 675, 680, 681, 682, 685, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 729, 731, 732, 733, 734, 735, 736, 737, 738, 742, 743, 744, 749, 754, 758, 763, 767, 770, 771, 775, 778, 782, 783, 784, 785, 786, 788, 789, 790, 793, 794, 795, 797, 798, 799, 801, 802, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 820, 830, 832, 837, 841, 843, 844, 845, 848, 850, 851, 853, 860, 861, 862, 865, 867, 868, 871, 874], "http": [1, 8, 15, 43, 70, 87, 112, 150, 154, 159, 170, 183, 195, 231, 244, 264, 265, 266, 267, 271, 275, 279, 300, 354, 367, 380, 386, 388, 403, 404, 419, 474, 479, 480, 487, 528, 562, 651, 688, 690, 735, 738, 750, 812, 843, 845, 853, 860, 865, 868, 886], "neuroimag": [1, 10, 12, 18, 19, 21, 35, 42, 46, 59, 75, 93, 100, 112, 120, 125, 143, 154, 161, 164, 179, 183, 185, 186, 195, 211, 226, 227, 244, 261, 262, 264, 265, 266, 267, 269, 270, 275, 302, 354, 389, 415, 417, 418, 419, 429, 432, 452, 454, 474, 477, 490, 524, 529, 539, 543, 561, 575, 600, 663, 666, 668, 690, 693, 694, 695, 696, 697, 699, 700, 720, 722, 732, 736, 770, 782, 794, 841, 852, 860, 863, 865, 868, 869, 874], "usc": [1, 183], "edu": [1, 9, 24, 35, 37, 43, 47, 58, 68, 70, 100, 103, 112, 113, 114, 119, 133, 150, 154, 183, 244, 271, 275, 279, 367, 602, 812, 868], "mediannervectf": 1, "author": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 184, 190, 194, 201, 208, 212, 223, 226, 228, 229, 230, 231, 234, 235, 236, 240, 241, 244, 600, 722, 732, 736, 845, 860, 867], "mainak": [1, 46, 78, 85, 86, 190, 244, 477, 860, 873, 886], "ja": [1, 46, 78, 85, 86, 190, 244, 477, 860, 873, 886], "telecom": [1, 78, 86, 190], "paristech": [1, 78, 86, 190, 255, 873], "fr": [1, 7, 9, 10, 11, 13, 18, 19, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 78, 86, 91, 95, 96, 99, 106, 107, 109, 110, 116, 120, 124, 130, 131, 136, 158, 184, 190, 195, 228, 229, 230, 234, 235, 236, 240, 244, 886], "licens": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 184, 190, 194, 208, 212, 223, 226, 228, 229, 230, 231, 234, 235, 236, 240, 241, 377, 378, 379, 386, 388, 862, 886], "bsd": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 184, 190, 194, 208, 212, 223, 226, 228, 229, 230, 231, 234, 235, 236, 240, 241, 593, 867], "claus": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 184, 190, 194, 208, 212, 223, 226, 228, 229, 230, 231, 234, 235, 236, 240, 241], "import": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 258, 264, 265, 266, 267, 269, 312, 328, 373, 380, 403, 404, 451, 479, 480, 487, 489, 491, 494, 495, 496, 497, 498, 499, 500, 502, 506, 507, 509, 510, 561, 581, 602, 617, 618, 622, 636, 650, 671, 686, 688, 706, 708, 709, 710, 722, 732, 749, 752, 754, 802, 839, 843, 844, 849, 852, 853, 856, 861, 862, 863, 865, 867, 868, 872, 874, 886], "numpi": [1, 4, 5, 8, 9, 10, 11, 14, 15, 16, 19, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 47, 50, 58, 59, 60, 63, 68, 70, 71, 72, 74, 81, 83, 89, 91, 92, 93, 94, 96, 99, 106, 110, 111, 112, 113, 114, 116, 118, 119, 124, 126, 132, 134, 135, 136, 139, 140, 142, 145, 148, 149, 150, 155, 156, 157, 158, 159, 165, 167, 169, 170, 171, 175, 176, 177, 180, 181, 182, 183, 184, 189, 190, 191, 194, 195, 198, 199, 201, 202, 203, 204, 205, 206, 209, 210, 211, 215, 216, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 258, 261, 264, 265, 266, 267, 271, 272, 273, 274, 275, 278, 279, 280, 411, 417, 418, 419, 449, 450, 451, 476, 477, 478, 479, 480, 513, 561, 576, 591, 602, 610, 658, 659, 660, 669, 670, 672, 686, 691, 693, 694, 695, 696, 697, 706, 707, 708, 709, 710, 711, 713, 714, 716, 722, 732, 733, 734, 735, 736, 737, 738, 754, 786, 788, 793, 806, 841, 844, 863, 867, 870, 886], "np": [1, 4, 5, 8, 9, 10, 11, 14, 15, 16, 19, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 43, 45, 47, 50, 58, 59, 60, 68, 70, 71, 72, 74, 81, 83, 89, 91, 92, 93, 94, 96, 99, 106, 110, 111, 112, 113, 114, 116, 118, 119, 124, 126, 132, 134, 135, 136, 140, 142, 145, 149, 150, 155, 156, 157, 158, 159, 165, 167, 169, 171, 175, 176, 177, 180, 181, 182, 183, 184, 189, 190, 194, 195, 198, 199, 201, 202, 203, 205, 206, 209, 210, 211, 215, 216, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 258, 264, 265, 266, 267, 270, 271, 272, 275, 277, 278, 279, 280, 282, 314, 354, 368, 445, 446, 450, 467, 479, 480, 496, 511, 561, 576, 582, 591, 602, 672, 686, 698, 706, 708, 709, 710, 722, 724, 732, 733, 734, 736, 737, 754, 762, 768, 773, 778, 785, 808, 812, 814, 817, 818, 845, 868, 871, 884, 886], "mne": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 198, 200, 202, 203, 206, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 222, 223, 224, 225, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 249, 250, 251, 252, 254, 255, 841, 843, 844, 846, 850, 854, 855, 856, 861, 862, 863, 866, 867, 869, 872, 873, 874, 875, 876, 877, 880, 881, 883, 884, 885, 886], "bst_raw": [1, 118, 862, 876], "io": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 26, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 122, 126, 127, 128, 131, 132, 134, 136, 139, 140, 141, 143, 144, 145, 148, 150, 151, 155, 156, 157, 158, 159, 161, 165, 166, 167, 168, 169, 170, 171, 176, 179, 181, 182, 183, 184, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 228, 229, 230, 231, 234, 236, 239, 240, 241, 244, 251, 256, 257, 258, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 283, 296, 365, 386, 416, 444, 446, 449, 523, 561, 569, 573, 574, 575, 582, 593, 706, 708, 709, 710, 724, 754, 799, 843, 845, 849, 861, 862, 863, 865, 868, 872, 876, 877, 886], "read_raw_ctf": [1, 7, 12, 21, 80, 81, 118, 122, 183, 187, 190, 485, 868, 876, 886], "print": [1, 2, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 22, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 69, 70, 71, 72, 73, 74, 76, 78, 79, 82, 83, 85, 86, 87, 91, 92, 93, 94, 95, 96, 99, 100, 102, 103, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 126, 127, 130, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 149, 150, 155, 156, 157, 158, 159, 165, 166, 167, 168, 169, 170, 174, 175, 178, 180, 181, 182, 183, 184, 190, 195, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 215, 216, 217, 221, 222, 223, 226, 227, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 256, 264, 265, 266, 267, 273, 354, 394, 446, 452, 479, 480, 511, 651, 652, 705, 708, 709, 749, 762, 778, 789, 791, 794, 849, 851, 862, 865, 886], "__doc__": [1, 2, 4, 7, 8, 10, 11, 13, 14, 15, 16, 18, 22, 24, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 69, 70, 71, 72, 73, 74, 76, 78, 79, 83, 85, 86, 87, 91, 92, 93, 94, 95, 96, 99, 102, 103, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 122, 127, 130, 131, 132, 135, 174, 178, 182, 183, 190, 229, 230, 235, 236], "tmin": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 46, 49, 51, 59, 60, 69, 71, 72, 73, 82, 83, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 109, 110, 111, 112, 113, 116, 120, 127, 131, 132, 135, 136, 139, 140, 141, 143, 144, 148, 150, 161, 165, 171, 176, 179, 180, 182, 183, 184, 190, 194, 195, 199, 200, 204, 208, 210, 211, 212, 215, 221, 222, 223, 227, 228, 229, 230, 231, 234, 236, 239, 240, 241, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 341, 343, 354, 355, 356, 359, 417, 423, 435, 437, 478, 479, 480, 515, 534, 551, 573, 574, 578, 579, 585, 673, 692, 698, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 754, 786, 808, 814, 861, 868, 872, 886], "tmax": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 31, 32, 33, 34, 35, 38, 40, 42, 45, 46, 49, 51, 59, 60, 69, 71, 72, 73, 82, 83, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 109, 110, 111, 112, 113, 116, 120, 127, 128, 131, 132, 135, 136, 139, 140, 141, 143, 144, 145, 148, 150, 151, 161, 165, 166, 167, 171, 176, 179, 180, 181, 182, 183, 184, 190, 194, 195, 198, 199, 200, 204, 205, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 227, 228, 229, 230, 231, 234, 236, 239, 240, 241, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 341, 343, 354, 355, 356, 359, 417, 423, 435, 437, 478, 479, 480, 534, 551, 573, 574, 578, 579, 585, 692, 695, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 754, 786, 795, 808, 814, 861, 865, 868, 872, 886], "event_id": [1, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 28, 32, 33, 34, 42, 45, 46, 49, 69, 71, 72, 73, 87, 93, 95, 96, 98, 99, 102, 103, 106, 109, 111, 112, 116, 120, 127, 131, 134, 135, 136, 139, 140, 141, 143, 148, 150, 151, 161, 165, 167, 171, 176, 179, 182, 183, 184, 190, 195, 203, 204, 206, 210, 212, 216, 221, 222, 223, 228, 229, 230, 231, 234, 236, 239, 240, 241, 256, 257, 258, 259, 264, 265, 274, 283, 355, 427, 433, 435, 438, 440, 479, 480, 496, 526, 562, 573, 574, 578, 579, 583, 584, 585, 586, 587, 617, 619, 620, 692, 708, 709, 784, 787, 807, 861, 868, 872, 886], "0": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 244, 246, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 293, 297, 298, 300, 304, 305, 306, 307, 309, 312, 313, 314, 317, 318, 321, 324, 326, 328, 330, 335, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 368, 369, 370, 371, 380, 387, 388, 389, 390, 403, 404, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 430, 431, 432, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 461, 464, 467, 468, 469, 470, 471, 474, 476, 477, 478, 479, 480, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 500, 503, 508, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 528, 529, 530, 531, 534, 535, 536, 539, 540, 541, 543, 544, 545, 546, 547, 548, 552, 553, 554, 555, 560, 561, 562, 563, 564, 566, 569, 570, 571, 572, 573, 574, 576, 578, 579, 580, 582, 583, 584, 585, 586, 588, 591, 593, 595, 597, 598, 601, 602, 607, 613, 615, 617, 618, 619, 620, 623, 624, 625, 627, 628, 636, 638, 639, 641, 642, 644, 647, 650, 652, 654, 655, 656, 657, 658, 659, 660, 662, 664, 665, 669, 670, 671, 672, 673, 675, 684, 685, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 718, 719, 722, 723, 724, 725, 728, 730, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 749, 751, 754, 755, 757, 758, 759, 763, 764, 770, 771, 772, 773, 777, 778, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 823, 827, 830, 832, 836, 837, 839, 841, 843, 844, 845, 848, 851, 861, 862, 865, 867, 868, 871], "2": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 118, 119, 120, 122, 123, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 234, 236, 237, 238, 239, 240, 241, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 287, 288, 290, 297, 298, 300, 302, 314, 316, 321, 335, 341, 343, 347, 348, 354, 355, 356, 357, 359, 360, 368, 380, 388, 389, 403, 404, 411, 413, 414, 417, 418, 419, 421, 422, 423, 427, 428, 430, 432, 433, 434, 440, 444, 446, 447, 449, 450, 452, 456, 463, 466, 473, 474, 476, 477, 479, 480, 487, 494, 503, 508, 516, 518, 523, 526, 527, 528, 534, 536, 537, 538, 539, 541, 543, 544, 545, 555, 560, 561, 562, 566, 569, 570, 571, 573, 574, 575, 576, 578, 579, 582, 589, 591, 592, 593, 597, 603, 608, 610, 623, 624, 627, 630, 633, 635, 646, 650, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 678, 680, 681, 682, 683, 685, 687, 688, 689, 692, 693, 694, 695, 696, 697, 698, 706, 707, 708, 709, 710, 718, 719, 721, 722, 724, 725, 729, 732, 733, 734, 735, 736, 737, 738, 741, 744, 754, 755, 758, 759, 771, 778, 785, 786, 788, 790, 793, 794, 795, 796, 797, 798, 799, 806, 808, 809, 810, 812, 813, 814, 816, 817, 824, 843, 844, 845, 850, 851, 853, 860, 861, 862, 863, 865, 868, 871], "take": [1, 4, 5, 7, 10, 16, 19, 26, 31, 38, 41, 43, 44, 45, 47, 50, 70, 71, 74, 76, 79, 82, 93, 95, 96, 100, 108, 109, 112, 114, 118, 122, 126, 130, 132, 134, 136, 139, 140, 141, 143, 144, 148, 149, 151, 154, 157, 158, 159, 161, 165, 166, 167, 168, 170, 171, 175, 178, 180, 181, 182, 184, 188, 191, 194, 195, 200, 201, 204, 205, 206, 207, 209, 215, 221, 223, 226, 234, 235, 236, 240, 241, 256, 258, 261, 264, 265, 266, 267, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 283, 287, 297, 298, 309, 312, 330, 340, 342, 354, 358, 359, 360, 367, 369, 370, 371, 411, 418, 435, 440, 444, 452, 454, 455, 468, 470, 474, 476, 477, 479, 480, 506, 528, 529, 530, 531, 532, 534, 535, 539, 544, 545, 561, 564, 566, 569, 641, 647, 654, 656, 667, 672, 692, 701, 706, 708, 709, 710, 751, 754, 755, 771, 778, 784, 786, 788, 793, 794, 797, 806, 814, 824, 841, 845, 848, 849, 853, 867, 868, 869, 871, 886], "right": [1, 5, 8, 10, 11, 13, 15, 39, 40, 41, 43, 45, 47, 51, 52, 57, 61, 67, 70, 71, 73, 79, 82, 93, 108, 111, 112, 113, 115, 119, 126, 127, 131, 133, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 157, 159, 160, 165, 167, 171, 174, 175, 177, 178, 179, 180, 190, 191, 194, 200, 201, 203, 204, 205, 206, 209, 215, 216, 217, 218, 222, 223, 228, 230, 231, 234, 235, 236, 239, 240, 260, 261, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 278, 279, 280, 312, 314, 324, 325, 335, 336, 360, 380, 411, 418, 433, 435, 438, 445, 469, 477, 479, 480, 498, 503, 513, 526, 560, 561, 581, 640, 669, 706, 708, 709, 710, 722, 732, 754, 767, 777, 778, 784, 785, 786, 790, 792, 793, 797, 805, 806, 807, 809, 814, 818, 841, 843, 845, 848, 862, 865, 867, 868, 871, 886], "hand": [1, 5, 8, 9, 111, 155, 159, 199, 204, 205, 206, 241, 269, 380, 561, 868, 886], "somato": [1, 32, 33, 34, 46, 61, 112, 170, 240, 862, 876, 886], "reject": [1, 5, 7, 11, 13, 16, 27, 28, 32, 42, 45, 46, 61, 69, 76, 77, 82, 95, 96, 98, 99, 100, 102, 103, 106, 109, 112, 113, 116, 120, 131, 139, 140, 141, 143, 144, 145, 150, 151, 164, 165, 171, 176, 179, 188, 190, 195, 199, 204, 205, 206, 209, 210, 213, 214, 217, 226, 228, 229, 230, 231, 234, 236, 240, 244, 256, 257, 258, 259, 264, 265, 266, 269, 274, 357, 359, 479, 480, 520, 558, 561, 563, 564, 573, 574, 575, 578, 579, 583, 584, 593, 616, 620, 632, 684, 690, 692, 784, 797, 798, 799, 800, 868, 886], "dict": [1, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 18, 21, 22, 26, 28, 32, 35, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 54, 55, 58, 59, 61, 65, 67, 69, 70, 74, 76, 78, 79, 85, 87, 92, 93, 95, 96, 98, 99, 100, 102, 103, 106, 108, 109, 111, 112, 113, 114, 115, 116, 119, 120, 122, 126, 127, 130, 131, 134, 135, 136, 139, 140, 141, 142, 144, 149, 150, 151, 156, 157, 158, 159, 165, 167, 168, 169, 170, 171, 174, 175, 176, 178, 179, 180, 183, 190, 191, 194, 195, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 241, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 286, 288, 297, 298, 302, 304, 310, 312, 314, 324, 325, 340, 341, 342, 343, 344, 345, 346, 354, 357, 358, 359, 365, 366, 367, 368, 369, 370, 371, 386, 392, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 433, 435, 438, 440, 443, 445, 446, 447, 449, 450, 454, 455, 456, 457, 459, 461, 462, 463, 464, 471, 474, 476, 477, 478, 479, 480, 483, 487, 494, 499, 503, 512, 515, 516, 517, 518, 519, 522, 523, 527, 528, 529, 530, 531, 532, 534, 535, 539, 541, 544, 545, 546, 551, 553, 554, 557, 559, 560, 561, 562, 563, 571, 573, 574, 576, 578, 579, 581, 582, 589, 604, 609, 613, 617, 618, 619, 620, 622, 626, 632, 636, 638, 641, 647, 655, 657, 658, 659, 669, 671, 674, 675, 691, 692, 693, 694, 696, 697, 701, 703, 706, 708, 709, 710, 722, 732, 740, 741, 743, 744, 754, 755, 770, 771, 773, 774, 776, 777, 778, 782, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 797, 799, 805, 806, 807, 809, 812, 813, 814, 815, 816, 817, 818, 824, 829, 839, 840, 845, 861, 868, 872, 886], "mag": [1, 5, 7, 8, 9, 12, 13, 21, 22, 26, 28, 31, 32, 33, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 69, 74, 76, 79, 80, 81, 86, 92, 93, 103, 106, 108, 115, 118, 119, 120, 122, 123, 131, 139, 141, 144, 145, 149, 151, 155, 156, 157, 161, 165, 168, 169, 171, 175, 176, 177, 178, 179, 180, 182, 183, 184, 190, 195, 198, 200, 202, 204, 205, 206, 208, 209, 215, 221, 222, 231, 234, 236, 239, 256, 259, 261, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 297, 298, 311, 318, 319, 338, 354, 358, 359, 369, 370, 371, 373, 411, 418, 420, 454, 455, 474, 476, 477, 479, 480, 516, 539, 558, 559, 560, 561, 566, 571, 573, 574, 576, 578, 579, 582, 646, 692, 706, 708, 709, 710, 777, 778, 784, 785, 786, 788, 790, 792, 793, 794, 797, 807, 809, 810, 814, 815, 816, 841, 861, 868, 886], "4e": [1, 9, 28, 31, 42, 45, 69, 78, 81, 92, 103, 106, 120, 131, 151, 161, 176, 179, 184, 190, 195, 204, 222, 223, 231, 259, 264, 265, 274, 359, 479, 480, 561, 578, 579, 692, 784, 807, 861], "12": [1, 7, 9, 11, 12, 13, 18, 19, 21, 24, 28, 32, 33, 34, 35, 42, 43, 44, 45, 46, 47, 49, 56, 59, 64, 69, 72, 76, 79, 80, 82, 84, 86, 89, 90, 100, 102, 103, 105, 106, 107, 108, 111, 112, 113, 120, 126, 131, 136, 142, 144, 145, 147, 150, 151, 153, 160, 161, 163, 165, 167, 168, 170, 171, 173, 174, 176, 178, 179, 182, 184, 186, 189, 190, 194, 195, 198, 200, 201, 202, 203, 204, 206, 208, 209, 214, 215, 217, 221, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 240, 244, 258, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 276, 277, 278, 279, 280, 297, 305, 309, 313, 335, 347, 351, 352, 354, 359, 360, 380, 394, 417, 433, 452, 454, 477, 479, 480, 491, 522, 526, 528, 561, 572, 573, 574, 578, 579, 591, 593, 659, 692, 706, 708, 709, 710, 734, 737, 772, 784, 786, 791, 803, 807, 810, 861, 862, 865, 868, 871], "eog": [1, 4, 8, 9, 11, 12, 14, 15, 16, 27, 28, 32, 33, 42, 45, 46, 61, 69, 71, 74, 76, 77, 80, 81, 82, 84, 87, 89, 92, 93, 95, 96, 99, 103, 106, 107, 108, 109, 112, 116, 126, 127, 136, 139, 140, 144, 145, 148, 150, 151, 165, 166, 167, 168, 171, 176, 179, 188, 190, 191, 195, 199, 200, 202, 205, 207, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 228, 229, 230, 231, 234, 236, 240, 259, 264, 265, 266, 267, 269, 274, 311, 359, 373, 444, 452, 479, 480, 487, 489, 490, 491, 494, 495, 496, 502, 506, 552, 558, 560, 561, 574, 578, 579, 584, 587, 603, 608, 617, 658, 659, 692, 706, 708, 709, 710, 784, 785, 800, 805, 807, 841, 861, 862, 863, 868, 871, 872, 886], "250e": [1, 32, 143, 165, 190, 203, 206, 259, 264, 265, 359, 561, 578, 579, 692], "6": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 123, 126, 129, 130, 132, 135, 139, 140, 141, 142, 143, 144, 145, 150, 151, 155, 156, 157, 158, 159, 161, 165, 167, 168, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 190, 194, 195, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 214, 215, 217, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 241, 244, 256, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 282, 300, 314, 335, 359, 380, 387, 411, 413, 416, 418, 446, 447, 449, 450, 479, 480, 528, 560, 561, 570, 576, 577, 578, 579, 591, 595, 646, 659, 693, 694, 696, 697, 706, 708, 709, 710, 722, 732, 733, 734, 736, 737, 769, 770, 771, 784, 785, 786, 790, 793, 797, 799, 806, 807, 809, 813, 814, 816, 843, 844, 851, 861, 862, 868, 871], "data_path": [1, 2, 5, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 159, 160, 161, 165, 166, 167, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 194, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 222, 223, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 264, 265, 266, 267, 274, 386, 479, 480, 845, 862, 868, 876, 886], "raw_path": [1, 171, 183], "meg": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 68, 69, 71, 72, 73, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 123, 126, 128, 129, 130, 131, 133, 134, 135, 139, 140, 141, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 159, 161, 164, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 191, 192, 193, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 221, 223, 228, 229, 230, 231, 234, 235, 236, 239, 240, 244, 256, 259, 261, 264, 265, 266, 267, 268, 269, 273, 275, 277, 284, 285, 297, 298, 300, 310, 315, 318, 319, 320, 325, 327, 329, 341, 353, 354, 355, 356, 357, 358, 359, 364, 369, 370, 371, 373, 393, 402, 411, 413, 418, 419, 427, 432, 452, 454, 455, 462, 468, 474, 476, 477, 479, 480, 482, 486, 490, 492, 500, 501, 504, 510, 512, 519, 521, 523, 527, 528, 529, 539, 540, 542, 543, 555, 558, 559, 560, 561, 563, 566, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 585, 589, 593, 594, 599, 601, 608, 614, 619, 623, 625, 640, 646, 658, 659, 663, 666, 668, 671, 674, 692, 693, 694, 696, 697, 701, 706, 708, 709, 710, 714, 715, 716, 717, 719, 736, 737, 740, 741, 754, 767, 770, 771, 777, 778, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 796, 797, 798, 805, 806, 808, 809, 814, 816, 821, 841, 842, 845, 852, 857, 860, 861, 865, 871, 872, 876, 886], "subj001_somatosensory_20111109_01_aux": [1, 118], "f": [1, 5, 8, 9, 10, 18, 19, 21, 22, 27, 28, 29, 32, 33, 39, 40, 41, 46, 47, 60, 63, 70, 71, 82, 85, 89, 91, 93, 97, 101, 103, 106, 108, 110, 111, 112, 113, 114, 118, 125, 126, 134, 140, 143, 148, 149, 150, 156, 157, 158, 159, 164, 166, 169, 171, 175, 181, 190, 194, 195, 198, 199, 201, 204, 206, 208, 209, 210, 217, 221, 222, 223, 226, 228, 229, 230, 232, 233, 234, 235, 236, 239, 240, 241, 244, 256, 258, 261, 264, 265, 266, 267, 269, 273, 288, 297, 302, 318, 338, 353, 388, 450, 452, 479, 480, 527, 558, 570, 620, 662, 686, 687, 688, 689, 692, 694, 697, 709, 722, 732, 736, 741, 775, 778, 785, 841, 851, 853, 861, 862, 868, 886], "d": [1, 4, 7, 11, 12, 15, 19, 21, 22, 26, 34, 39, 41, 46, 50, 52, 57, 59, 65, 72, 79, 80, 81, 83, 92, 93, 99, 100, 108, 110, 112, 117, 118, 119, 122, 125, 126, 128, 134, 135, 140, 156, 157, 158, 159, 170, 178, 179, 181, 182, 183, 184, 190, 194, 201, 207, 208, 217, 223, 226, 230, 234, 235, 236, 239, 241, 244, 256, 258, 261, 264, 265, 266, 267, 269, 273, 288, 297, 298, 302, 321, 354, 388, 419, 474, 479, 480, 492, 496, 527, 528, 624, 650, 699, 700, 708, 710, 725, 741, 755, 794, 807, 853, 862, 863, 868, 874, 886], "crop": [1, 5, 8, 9, 10, 12, 21, 30, 31, 32, 33, 34, 35, 38, 40, 42, 44, 45, 46, 51, 59, 74, 76, 80, 81, 82, 83, 108, 111, 115, 126, 136, 139, 140, 141, 145, 148, 150, 166, 167, 171, 175, 178, 179, 180, 182, 183, 184, 198, 199, 202, 204, 205, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 223, 227, 228, 234, 236, 239, 240, 258, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 571, 594, 607, 706, 709, 863, 886], "half": [1, 70, 201, 202, 236, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 341, 413, 447, 449, 450, 479, 480, 580, 693, 694, 696, 697, 701, 718, 720, 722, 732, 734, 736, 737, 754, 778, 784, 786, 807, 812, 817, 845, 868, 886], "length": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 81, 82, 83, 87, 98, 110, 111, 112, 113, 114, 120, 132, 135, 140, 142, 143, 148, 150, 171, 174, 190, 195, 198, 200, 202, 203, 204, 205, 206, 209, 210, 211, 215, 218, 221, 227, 231, 239, 256, 259, 261, 262, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 287, 313, 359, 394, 411, 413, 416, 417, 418, 419, 422, 423, 426, 447, 449, 450, 469, 477, 478, 479, 480, 531, 543, 545, 560, 561, 563, 569, 578, 579, 593, 600, 623, 624, 645, 656, 672, 686, 687, 691, 692, 706, 708, 709, 710, 711, 712, 713, 714, 716, 718, 721, 724, 725, 729, 733, 734, 735, 736, 737, 738, 744, 754, 769, 770, 771, 778, 785, 786, 788, 790, 793, 795, 797, 806, 809, 812, 813, 814, 815, 816, 817, 841, 861, 862, 868, 886], "save": [1, 5, 7, 9, 11, 29, 30, 32, 34, 41, 43, 44, 60, 61, 70, 74, 107, 108, 109, 112, 114, 134, 135, 141, 142, 149, 150, 155, 156, 157, 159, 160, 161, 167, 169, 176, 179, 180, 182, 187, 189, 190, 199, 200, 202, 204, 206, 207, 209, 216, 217, 218, 223, 230, 234, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 288, 312, 313, 338, 380, 386, 415, 441, 442, 443, 444, 470, 478, 479, 480, 496, 499, 504, 534, 535, 550, 560, 561, 606, 618, 619, 622, 623, 627, 630, 633, 644, 696, 697, 706, 707, 708, 709, 710, 726, 727, 739, 741, 754, 828, 832, 833, 835, 843, 845, 849, 863, 865, 868, 871, 872, 886], "memori": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 256, 259, 264, 265, 266, 267, 282, 291, 292, 295, 330, 359, 361, 363, 374, 413, 420, 423, 424, 428, 449, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 520, 530, 531, 532, 534, 535, 541, 563, 593, 648, 653, 655, 693, 694, 696, 697, 712, 715, 731, 733, 734, 735, 736, 737, 738, 754, 788, 843, 844, 851, 863, 872, 874, 886], "120": [1, 5, 7, 24, 33, 35, 38, 42, 45, 59, 80, 81, 107, 132, 134, 141, 150, 159, 168, 175, 180, 190, 198, 200, 202, 204, 208, 211, 226, 230, 231, 240, 244, 256, 264, 265, 434, 479, 480, 571, 576, 784, 807], "load_data": [1, 4, 8, 9, 12, 21, 34, 42, 70, 71, 74, 75, 76, 80, 81, 82, 83, 98, 108, 111, 112, 114, 135, 145, 150, 158, 165, 167, 171, 181, 190, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 215, 216, 217, 218, 240, 264, 265, 266, 267, 479, 480, 862, 868, 876, 886], "plot": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 45, 46, 49, 51, 53, 54, 55, 56, 58, 59, 61, 63, 64, 65, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 120, 121, 128, 129, 130, 131, 133, 134, 136, 139, 142, 143, 144, 145, 148, 150, 152, 153, 155, 157, 158, 159, 164, 165, 166, 167, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 215, 217, 219, 220, 221, 223, 226, 227, 231, 234, 235, 236, 239, 256, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 312, 313, 321, 323, 324, 328, 338, 354, 364, 373, 411, 415, 418, 426, 429, 431, 437, 440, 452, 454, 471, 479, 480, 486, 490, 492, 495, 500, 504, 519, 523, 524, 527, 528, 537, 538, 539, 540, 542, 557, 558, 560, 561, 576, 601, 614, 615, 620, 623, 625, 628, 633, 638, 645, 655, 692, 706, 707, 708, 709, 710, 722, 732, 754, 755, 756, 757, 759, 763, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 821, 822, 824, 841, 844, 845, 849, 861, 862, 863, 866, 868, 869, 872, 874, 875, 886], "set": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 81, 82, 83, 85, 86, 87, 89, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 149, 151, 154, 155, 157, 158, 159, 160, 161, 164, 165, 167, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 217, 221, 222, 223, 226, 229, 240, 241, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 287, 288, 297, 298, 300, 302, 303, 317, 325, 330, 341, 354, 355, 357, 359, 360, 361, 365, 369, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 388, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 434, 435, 436, 439, 440, 441, 444, 445, 446, 450, 452, 454, 467, 468, 469, 470, 476, 479, 480, 481, 487, 494, 495, 499, 502, 504, 513, 515, 517, 519, 521, 522, 523, 524, 526, 527, 530, 531, 532, 534, 535, 539, 544, 545, 547, 548, 549, 552, 560, 561, 562, 563, 564, 566, 573, 574, 575, 576, 578, 579, 581, 582, 594, 606, 611, 617, 618, 622, 623, 624, 627, 630, 633, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 671, 683, 684, 688, 690, 692, 693, 694, 695, 696, 697, 701, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 722, 724, 725, 732, 733, 734, 735, 736, 737, 741, 744, 745, 747, 752, 753, 754, 757, 771, 773, 778, 781, 782, 784, 786, 789, 790, 791, 792, 793, 797, 799, 800, 801, 806, 807, 808, 809, 810, 812, 814, 816, 817, 818, 819, 820, 823, 826, 841, 843, 844, 849, 850, 852, 863, 865, 867, 868, 871, 872, 875, 886], "channel": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 65, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 92, 93, 94, 95, 96, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 134, 135, 136, 140, 141, 143, 145, 149, 151, 155, 156, 157, 158, 161, 164, 165, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 191, 194, 195, 198, 202, 203, 205, 206, 208, 209, 211, 213, 214, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 239, 240, 244, 256, 257, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 278, 279, 280, 281, 284, 285, 297, 298, 308, 310, 311, 341, 343, 345, 346, 349, 353, 354, 355, 356, 357, 358, 359, 369, 370, 371, 373, 381, 411, 413, 418, 419, 420, 422, 424, 427, 432, 436, 441, 443, 444, 449, 450, 452, 453, 454, 455, 463, 468, 471, 474, 476, 477, 478, 479, 480, 487, 489, 490, 491, 492, 494, 495, 496, 499, 502, 503, 504, 506, 516, 519, 523, 525, 529, 539, 552, 553, 554, 555, 557, 558, 559, 560, 561, 563, 566, 567, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 592, 593, 594, 597, 598, 599, 601, 604, 607, 608, 617, 618, 619, 620, 622, 623, 624, 625, 640, 641, 646, 647, 650, 656, 658, 659, 660, 674, 686, 692, 693, 694, 696, 697, 701, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 723, 729, 733, 736, 737, 738, 754, 767, 770, 771, 774, 775, 776, 778, 779, 780, 783, 784, 785, 786, 788, 790, 791, 792, 793, 794, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 814, 815, 816, 824, 826, 841, 843, 845, 849, 852, 853, 863, 865, 867, 872, 875, 876, 886], "set_channel_typ": [1, 127, 139, 148, 150, 190, 215, 264, 265, 266, 267, 444, 479, 480, 581, 886], "eeg058": 1, "set_eeg_refer": [1, 29, 67, 71, 92, 93, 150, 158, 161, 166, 181, 188, 203, 205, 207, 222, 241, 264, 265, 266, 267, 479, 480, 560, 647, 670, 872, 876, 886], "averag": [1, 2, 4, 5, 7, 10, 11, 13, 14, 15, 16, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 64, 66, 68, 69, 71, 72, 73, 76, 78, 79, 80, 81, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 103, 106, 107, 109, 111, 112, 115, 116, 118, 119, 120, 123, 126, 128, 131, 132, 134, 135, 136, 140, 141, 142, 143, 144, 145, 149, 151, 152, 153, 157, 158, 161, 164, 165, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 236, 239, 240, 241, 244, 256, 257, 261, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 280, 286, 353, 354, 356, 372, 389, 411, 418, 425, 430, 432, 445, 452, 468, 479, 480, 504, 514, 515, 529, 530, 531, 532, 534, 535, 541, 544, 545, 560, 561, 565, 566, 568, 573, 574, 576, 578, 582, 583, 586, 589, 619, 623, 624, 647, 650, 662, 670, 706, 707, 708, 709, 710, 724, 725, 733, 734, 735, 736, 737, 738, 754, 778, 786, 788, 789, 793, 797, 798, 805, 806, 808, 809, 814, 816, 841, 861, 862, 865, 871, 872, 874, 886], "project": [1, 5, 8, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 82, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 236, 240, 241, 244, 259, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 278, 279, 280, 284, 285, 297, 298, 300, 341, 343, 347, 354, 355, 356, 357, 359, 369, 371, 388, 419, 431, 452, 454, 455, 478, 479, 480, 500, 520, 522, 524, 527, 529, 539, 560, 561, 572, 573, 574, 575, 577, 582, 589, 593, 601, 608, 616, 625, 631, 646, 647, 650, 670, 683, 701, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 754, 770, 771, 776, 779, 786, 788, 790, 792, 793, 797, 805, 806, 807, 808, 810, 812, 817, 823, 824, 826, 837, 841, 845, 850, 852, 857, 860, 861, 862, 864, 874, 875, 876, 886], "true": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 85, 86, 87, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 128, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 222, 223, 226, 228, 229, 230, 231, 234, 236, 239, 240, 241, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 287, 288, 297, 298, 300, 302, 303, 306, 307, 308, 309, 312, 313, 314, 317, 320, 321, 322, 323, 324, 325, 338, 340, 341, 342, 343, 344, 347, 354, 358, 359, 360, 361, 363, 364, 369, 370, 371, 375, 377, 378, 379, 380, 382, 383, 384, 386, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 429, 430, 432, 433, 436, 440, 441, 442, 443, 444, 445, 446, 449, 450, 452, 454, 455, 456, 459, 464, 468, 469, 470, 471, 473, 474, 476, 477, 478, 479, 480, 481, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 520, 521, 523, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 537, 538, 539, 541, 543, 544, 545, 546, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 570, 572, 573, 574, 576, 578, 579, 580, 582, 583, 584, 589, 591, 593, 608, 616, 619, 620, 623, 625, 628, 636, 638, 641, 644, 647, 649, 650, 652, 654, 655, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 676, 680, 683, 684, 687, 688, 690, 693, 694, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 715, 716, 718, 722, 723, 724, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 749, 752, 754, 759, 762, 763, 767, 768, 770, 771, 772, 773, 775, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 822, 824, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 839, 840, 843, 845, 861, 862, 865, 868, 886], "show": [1, 4, 7, 8, 10, 12, 13, 14, 15, 16, 19, 22, 26, 27, 28, 29, 31, 32, 35, 37, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 58, 59, 60, 63, 68, 69, 71, 73, 74, 77, 78, 84, 96, 98, 100, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 125, 126, 129, 130, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 154, 155, 156, 158, 159, 165, 167, 168, 169, 171, 175, 177, 178, 179, 180, 181, 189, 190, 198, 200, 201, 202, 203, 204, 205, 206, 208, 210, 212, 215, 217, 218, 221, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 261, 262, 263, 264, 265, 266, 267, 269, 272, 273, 277, 278, 279, 280, 307, 309, 312, 313, 411, 418, 452, 470, 471, 479, 480, 511, 552, 558, 560, 561, 576, 582, 584, 705, 706, 707, 708, 710, 722, 732, 754, 762, 763, 770, 771, 772, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 823, 841, 843, 845, 850, 853, 861, 868, 874, 886], "power": [1, 12, 21, 27, 32, 36, 38, 56, 60, 68, 71, 81, 82, 104, 105, 111, 112, 113, 114, 120, 127, 132, 136, 144, 145, 148, 149, 161, 164, 165, 171, 179, 182, 190, 194, 200, 201, 205, 208, 211, 218, 221, 224, 225, 227, 231, 232, 233, 239, 244, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 278, 279, 280, 288, 289, 290, 291, 294, 297, 298, 318, 353, 354, 358, 359, 411, 413, 416, 418, 419, 422, 424, 445, 447, 449, 450, 451, 452, 479, 480, 485, 516, 518, 523, 527, 528, 529, 534, 535, 539, 542, 544, 545, 552, 557, 558, 561, 612, 620, 625, 627, 640, 654, 660, 671, 686, 687, 688, 689, 690, 693, 694, 695, 696, 697, 706, 707, 708, 709, 710, 715, 724, 725, 733, 734, 735, 736, 737, 738, 748, 754, 770, 777, 778, 779, 785, 786, 788, 791, 793, 794, 799, 805, 808, 814, 822, 841, 845, 862, 865, 867, 871, 886], "line": [1, 70, 80, 81, 100, 108, 119, 120, 122, 126, 135, 136, 139, 140, 143, 150, 154, 155, 157, 159, 161, 168, 170, 171, 176, 182, 189, 190, 191, 201, 203, 206, 207, 208, 209, 210, 215, 218, 228, 229, 240, 241, 244, 261, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 335, 341, 347, 411, 418, 470, 479, 480, 511, 517, 560, 561, 576, 600, 608, 620, 627, 636, 639, 706, 708, 710, 754, 762, 767, 770, 771, 778, 779, 784, 785, 786, 788, 790, 792, 793, 794, 796, 797, 800, 801, 802, 805, 806, 807, 808, 809, 811, 812, 813, 814, 816, 817, 834, 839, 843, 844, 848, 850, 852, 857, 861, 862, 863, 865, 868, 876, 886], "interfer": [1, 122, 135, 198, 199, 202, 207, 208, 209, 211, 217, 244, 256, 575, 593, 841, 862, 865], "remov": [1, 7, 16, 18, 21, 27, 28, 31, 32, 35, 42, 51, 58, 59, 67, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 84, 89, 92, 98, 102, 108, 111, 112, 118, 126, 131, 135, 139, 140, 141, 142, 145, 148, 149, 150, 156, 157, 159, 160, 161, 165, 166, 167, 169, 171, 175, 176, 179, 180, 181, 182, 183, 190, 195, 198, 199, 200, 201, 202, 203, 206, 207, 209, 211, 215, 217, 218, 223, 228, 229, 230, 231, 239, 241, 244, 256, 258, 261, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 288, 302, 312, 328, 338, 347, 354, 363, 364, 417, 419, 423, 434, 450, 454, 463, 471, 476, 477, 479, 480, 481, 494, 500, 527, 558, 559, 560, 561, 562, 575, 577, 582, 600, 601, 608, 614, 623, 625, 628, 647, 650, 670, 672, 706, 708, 709, 710, 741, 754, 775, 791, 807, 823, 824, 841, 845, 853, 862, 867, 868, 871, 872, 874, 886], "compute_psd": [1, 71, 74, 108, 128, 132, 136, 139, 141, 142, 165, 166, 182, 190, 198, 200, 202, 206, 208, 210, 211, 218, 239, 240, 241, 264, 265, 266, 267, 416, 479, 480, 561, 708, 710, 724, 786, 797, 799, 808, 886], "60": [1, 5, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 28, 29, 30, 31, 33, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 68, 69, 70, 72, 73, 74, 76, 78, 80, 81, 82, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 111, 113, 115, 116, 118, 119, 120, 122, 123, 126, 130, 131, 132, 135, 136, 139, 140, 142, 143, 148, 149, 150, 151, 158, 165, 166, 167, 168, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 222, 223, 226, 227, 229, 230, 231, 234, 236, 239, 256, 450, 479, 480, 591, 795, 862, 886], "fals": [1, 4, 5, 8, 9, 11, 12, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 30, 31, 32, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 58, 63, 64, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 80, 81, 82, 83, 85, 87, 89, 93, 95, 96, 98, 99, 100, 103, 106, 107, 108, 109, 111, 113, 114, 117, 118, 119, 122, 123, 125, 126, 128, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 159, 161, 165, 166, 167, 168, 169, 170, 171, 175, 177, 179, 180, 181, 182, 184, 187, 190, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 215, 216, 217, 218, 221, 222, 223, 227, 228, 229, 230, 231, 236, 239, 240, 241, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 288, 291, 292, 295, 297, 298, 300, 302, 303, 307, 308, 309, 312, 313, 314, 317, 320, 322, 323, 324, 326, 340, 342, 344, 347, 354, 359, 360, 361, 363, 364, 369, 372, 375, 377, 378, 379, 380, 382, 383, 384, 386, 388, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 416, 417, 418, 419, 425, 429, 430, 432, 436, 441, 442, 443, 444, 445, 446, 452, 455, 459, 464, 469, 470, 471, 473, 474, 476, 477, 478, 479, 480, 481, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 520, 523, 526, 527, 528, 529, 530, 531, 532, 534, 535, 537, 538, 539, 541, 544, 545, 546, 552, 553, 554, 556, 557, 558, 559, 560, 561, 566, 573, 574, 576, 578, 579, 582, 583, 584, 588, 589, 591, 593, 594, 597, 613, 616, 619, 620, 623, 625, 630, 635, 636, 638, 639, 641, 643, 644, 647, 650, 651, 652, 655, 661, 662, 663, 664, 665, 666, 667, 668, 673, 679, 682, 683, 684, 687, 690, 693, 694, 696, 697, 702, 703, 705, 706, 707, 708, 709, 710, 713, 716, 718, 722, 723, 724, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 749, 752, 754, 763, 767, 768, 770, 771, 772, 775, 778, 779, 782, 784, 785, 786, 788, 790, 792, 793, 795, 797, 799, 801, 803, 806, 807, 808, 809, 810, 812, 813, 814, 816, 817, 820, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 839, 840, 843, 868, 871, 886], "notch_filt": [1, 5, 81, 135, 166, 190, 202, 209, 211, 264, 265, 266, 267, 449, 479, 480, 876, 886], "arang": [1, 4, 8, 9, 15, 19, 43, 45, 68, 81, 89, 91, 93, 94, 106, 111, 113, 119, 126, 165, 190, 194, 195, 201, 210, 211, 221, 223, 226, 228, 229, 230, 231, 235, 236, 241, 270, 277, 450, 467, 479, 480, 496, 602, 698, 722, 732, 733, 734, 736, 737], "181": [1, 35, 125, 168, 190, 208, 214, 226, 230, 244, 671, 692], "fir_design": [1, 7, 8, 9, 11, 13, 14, 15, 16, 18, 76, 87, 98, 120, 132, 190, 201, 204, 241, 264, 265, 266, 267, 413, 422, 447, 449, 450, 479, 480, 886], "firwin": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 76, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 135, 140, 143, 145, 150, 190, 195, 201, 202, 203, 204, 209, 210, 211, 231, 241, 264, 265, 266, 267, 413, 422, 447, 449, 450, 479, 480, 886], "event": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 32, 33, 34, 42, 45, 46, 49, 61, 70, 71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 84, 87, 89, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 116, 120, 127, 131, 134, 135, 139, 140, 141, 142, 144, 145, 148, 151, 152, 153, 161, 164, 168, 172, 173, 176, 179, 181, 182, 183, 184, 187, 188, 190, 191, 195, 198, 199, 200, 201, 202, 203, 204, 206, 208, 210, 211, 215, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 234, 236, 239, 240, 241, 244, 256, 257, 258, 259, 264, 265, 266, 267, 269, 274, 283, 287, 314, 353, 354, 361, 362, 363, 368, 394, 412, 427, 432, 434, 435, 440, 452, 453, 468, 479, 480, 487, 494, 495, 496, 498, 502, 504, 521, 526, 551, 552, 556, 558, 561, 562, 563, 564, 569, 573, 574, 578, 579, 583, 584, 585, 586, 587, 607, 617, 618, 619, 620, 656, 685, 692, 706, 708, 709, 754, 755, 778, 784, 785, 787, 801, 807, 815, 823, 826, 831, 841, 861, 862, 865, 868, 871, 872, 876, 886], "find_ev": [1, 5, 7, 10, 32, 33, 34, 42, 45, 46, 49, 71, 72, 73, 79, 83, 89, 92, 94, 98, 106, 107, 109, 112, 139, 140, 141, 148, 151, 161, 165, 167, 170, 171, 176, 179, 181, 182, 184, 190, 195, 199, 202, 203, 204, 206, 211, 212, 216, 222, 223, 228, 239, 240, 269, 437, 453, 487, 494, 502, 521, 556, 607, 620, 841, 861, 868, 872, 876, 886], "stim_channel": [1, 5, 7, 42, 46, 79, 106, 107, 109, 112, 136, 139, 141, 148, 151, 165, 167, 176, 190, 199, 204, 206, 216, 228, 239, 240, 257, 346, 452, 453, 479, 480, 487, 494, 502, 585, 886], "uppt001": [1, 7, 190], "pick": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 85, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 126, 130, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 156, 157, 159, 161, 165, 167, 168, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 191, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 218, 221, 222, 223, 227, 228, 229, 230, 231, 234, 236, 239, 240, 259, 261, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 278, 279, 280, 287, 297, 298, 310, 313, 314, 317, 327, 329, 359, 369, 413, 419, 427, 432, 436, 449, 450, 479, 480, 552, 553, 554, 555, 558, 559, 560, 561, 563, 575, 577, 578, 579, 585, 589, 599, 601, 608, 674, 692, 701, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 723, 736, 737, 754, 768, 772, 776, 778, 784, 785, 788, 790, 791, 797, 798, 799, 801, 803, 805, 808, 810, 812, 817, 841, 845, 861, 868, 871, 872, 886], "pick_typ": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 26, 28, 31, 34, 35, 40, 45, 46, 49, 51, 58, 59, 68, 69, 71, 72, 74, 81, 82, 87, 89, 91, 92, 95, 96, 98, 99, 102, 103, 106, 107, 109, 110, 112, 118, 120, 126, 132, 135, 139, 140, 148, 149, 151, 161, 165, 167, 168, 169, 171, 175, 176, 180, 181, 182, 191, 195, 198, 199, 200, 202, 203, 204, 205, 206, 210, 211, 212, 215, 223, 228, 229, 230, 231, 234, 236, 240, 241, 264, 265, 266, 267, 479, 480, 552, 706, 708, 709, 710, 845, 868, 872, 876, 886], "info": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 79, 80, 81, 82, 83, 85, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 126, 127, 132, 134, 135, 136, 139, 141, 143, 145, 148, 149, 150, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 222, 223, 227, 228, 229, 230, 231, 234, 236, 239, 240, 241, 257, 258, 259, 261, 263, 264, 265, 266, 267, 268, 273, 274, 275, 277, 282, 284, 285, 297, 298, 299, 305, 306, 310, 311, 313, 317, 318, 319, 320, 324, 326, 327, 329, 340, 342, 344, 349, 354, 358, 359, 365, 369, 370, 371, 373, 411, 413, 418, 419, 420, 422, 427, 430, 432, 436, 441, 442, 443, 444, 447, 449, 450, 454, 455, 462, 463, 471, 474, 476, 477, 478, 479, 480, 481, 484, 486, 499, 516, 519, 522, 523, 524, 527, 529, 539, 552, 555, 557, 558, 559, 560, 561, 563, 565, 572, 575, 577, 578, 579, 582, 585, 589, 593, 597, 598, 599, 601, 608, 611, 618, 622, 640, 641, 646, 647, 650, 652, 657, 658, 659, 660, 670, 671, 674, 692, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 737, 743, 749, 752, 754, 767, 770, 771, 774, 775, 778, 779, 780, 784, 785, 788, 789, 790, 791, 794, 796, 801, 803, 806, 807, 808, 810, 816, 824, 832, 841, 843, 845, 848, 850, 861, 862, 863, 865, 868, 874, 876, 886], "eeg": [1, 4, 5, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 62, 63, 64, 66, 68, 69, 72, 73, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 119, 120, 121, 122, 123, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 228, 229, 230, 231, 232, 233, 234, 236, 239, 240, 244, 256, 259, 261, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 297, 298, 300, 302, 305, 306, 310, 311, 312, 314, 316, 318, 319, 323, 324, 326, 327, 328, 329, 330, 331, 334, 335, 337, 353, 354, 355, 356, 357, 358, 359, 363, 364, 365, 369, 370, 371, 373, 389, 402, 403, 404, 411, 413, 415, 418, 419, 420, 426, 427, 430, 432, 435, 440, 443, 444, 452, 454, 455, 468, 470, 474, 476, 477, 479, 480, 485, 487, 489, 490, 491, 494, 495, 496, 497, 500, 502, 504, 506, 507, 509, 516, 519, 521, 523, 524, 527, 528, 529, 539, 540, 542, 543, 552, 558, 559, 560, 561, 562, 563, 566, 569, 570, 573, 574, 576, 577, 578, 579, 584, 585, 589, 592, 599, 601, 608, 612, 614, 616, 617, 619, 620, 623, 624, 625, 635, 638, 646, 647, 650, 655, 659, 666, 671, 674, 692, 693, 694, 696, 697, 701, 706, 708, 709, 710, 714, 715, 716, 717, 719, 736, 737, 746, 754, 770, 771, 774, 778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 797, 798, 804, 805, 806, 807, 808, 809, 810, 814, 815, 816, 821, 822, 826, 841, 842, 852, 857, 860, 862, 865, 871, 872, 875, 876, 886], "stim": [1, 8, 9, 11, 14, 15, 16, 28, 42, 45, 46, 65, 69, 71, 72, 87, 89, 98, 99, 103, 106, 107, 109, 139, 140, 141, 148, 150, 165, 168, 171, 181, 187, 190, 195, 202, 203, 204, 212, 215, 216, 223, 228, 229, 230, 240, 241, 256, 257, 264, 265, 266, 267, 269, 274, 311, 349, 373, 444, 452, 453, 479, 480, 487, 494, 502, 504, 558, 561, 585, 620, 656, 706, 708, 709, 710, 784, 807, 841, 868, 871, 872, 886], "exclud": [1, 5, 7, 8, 9, 11, 13, 14, 15, 16, 24, 26, 28, 31, 34, 35, 40, 41, 43, 45, 49, 50, 51, 58, 59, 64, 68, 69, 70, 71, 74, 78, 82, 85, 87, 91, 95, 96, 99, 103, 106, 107, 108, 109, 110, 111, 132, 141, 143, 149, 155, 156, 157, 165, 168, 171, 175, 176, 180, 181, 182, 183, 184, 190, 195, 198, 199, 200, 202, 204, 205, 207, 218, 223, 228, 229, 230, 234, 236, 241, 256, 261, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 277, 278, 279, 280, 305, 306, 319, 326, 359, 365, 369, 371, 419, 430, 479, 480, 487, 494, 496, 498, 502, 524, 552, 553, 554, 556, 558, 559, 560, 561, 562, 573, 574, 575, 576, 582, 593, 608, 620, 625, 646, 650, 655, 693, 694, 696, 697, 706, 708, 709, 710, 714, 715, 716, 717, 723, 779, 788, 790, 791, 792, 798, 800, 801, 808, 861, 871, 872, 886], "bad": [1, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 49, 51, 58, 59, 64, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 84, 87, 89, 91, 92, 95, 96, 99, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 116, 120, 126, 127, 134, 135, 136, 139, 140, 141, 143, 144, 145, 148, 149, 150, 151, 161, 164, 165, 166, 167, 168, 169, 171, 175, 176, 179, 180, 181, 182, 183, 184, 190, 195, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 228, 229, 230, 231, 240, 241, 256, 258, 259, 261, 264, 265, 266, 267, 269, 298, 310, 313, 314, 319, 326, 329, 359, 363, 369, 370, 371, 413, 427, 432, 440, 449, 450, 452, 468, 479, 480, 498, 520, 539, 553, 554, 555, 558, 559, 560, 561, 563, 564, 565, 568, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 593, 594, 599, 601, 608, 620, 623, 646, 647, 650, 674, 692, 706, 708, 709, 710, 714, 715, 716, 717, 719, 737, 778, 779, 784, 785, 788, 790, 791, 792, 799, 803, 807, 808, 826, 841, 852, 863, 865, 871, 886], "epoch": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 27, 32, 33, 34, 36, 45, 46, 49, 56, 59, 61, 69, 70, 71, 72, 73, 78, 79, 82, 83, 87, 89, 91, 92, 94, 95, 96, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 120, 121, 127, 129, 131, 134, 135, 140, 147, 149, 161, 166, 167, 168, 169, 176, 178, 179, 180, 181, 182, 183, 184, 187, 190, 194, 195, 198, 199, 202, 205, 206, 209, 211, 212, 216, 217, 222, 223, 227, 228, 229, 230, 239, 240, 241, 251, 256, 257, 258, 259, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 275, 278, 279, 280, 281, 291, 292, 295, 313, 314, 317, 353, 354, 355, 357, 358, 359, 361, 395, 411, 413, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 436, 437, 440, 441, 452, 470, 476, 479, 480, 485, 498, 514, 519, 520, 526, 527, 528, 529, 530, 531, 532, 534, 535, 542, 544, 545, 556, 558, 560, 561, 562, 563, 569, 570, 573, 574, 578, 579, 580, 581, 585, 592, 593, 608, 616, 617, 618, 619, 620, 627, 631, 647, 650, 660, 670, 691, 692, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 724, 733, 734, 735, 736, 737, 738, 754, 778, 783, 784, 785, 786, 797, 798, 799, 801, 805, 807, 808, 815, 841, 845, 862, 863, 865, 871, 872, 874, 876, 886], "baselin": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 69, 71, 72, 73, 74, 75, 78, 79, 82, 83, 85, 86, 87, 89, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 123, 126, 127, 131, 134, 135, 136, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 161, 164, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 195, 198, 199, 200, 202, 203, 204, 206, 210, 211, 212, 221, 223, 227, 228, 229, 230, 231, 234, 236, 240, 241, 244, 256, 259, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 353, 354, 359, 380, 452, 479, 480, 520, 526, 544, 545, 561, 578, 579, 600, 616, 623, 624, 691, 706, 709, 778, 794, 798, 811, 814, 832, 841, 861, 865, 868, 871, 876, 880, 886], "none": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 69, 70, 71, 73, 76, 78, 80, 81, 82, 83, 85, 86, 87, 89, 92, 93, 95, 96, 98, 99, 102, 103, 106, 108, 109, 111, 112, 113, 116, 118, 119, 120, 123, 126, 131, 134, 135, 136, 140, 141, 142, 143, 144, 148, 149, 150, 151, 157, 158, 159, 160, 161, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 194, 195, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 217, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 241, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 317, 318, 319, 321, 325, 326, 327, 328, 329, 330, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 599, 600, 601, 602, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 685, 691, 692, 693, 694, 695, 696, 697, 698, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 746, 749, 753, 754, 757, 759, 762, 763, 764, 766, 767, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 845, 861, 867, 868, 886], "preload": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 34, 42, 49, 67, 70, 71, 72, 73, 80, 81, 82, 83, 87, 98, 102, 106, 109, 111, 112, 113, 116, 120, 128, 132, 139, 140, 141, 143, 144, 145, 148, 150, 151, 158, 165, 166, 169, 171, 179, 181, 182, 183, 184, 187, 190, 195, 198, 200, 203, 204, 205, 206, 210, 212, 215, 222, 223, 228, 229, 230, 231, 234, 236, 239, 240, 241, 256, 264, 265, 266, 267, 274, 347, 363, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 520, 573, 574, 578, 579, 616, 618, 622, 647, 650, 706, 708, 709, 710, 784, 807, 861, 862, 886], "physiolog": [1, 8, 42, 136, 191, 202, 204, 207, 244, 264, 265, 266, 267, 380, 403, 404, 479, 480, 650, 862, 886], "artifact": [1, 7, 27, 32, 42, 70, 77, 82, 83, 84, 108, 109, 141, 143, 145, 148, 164, 165, 171, 182, 190, 191, 200, 201, 205, 207, 209, 210, 212, 213, 214, 217, 218, 244, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 344, 345, 355, 356, 357, 358, 359, 363, 413, 417, 424, 452, 477, 479, 480, 492, 494, 508, 552, 555, 558, 560, 561, 565, 566, 568, 573, 574, 576, 578, 579, 583, 584, 585, 587, 593, 596, 600, 605, 608, 658, 659, 706, 709, 710, 731, 733, 734, 736, 737, 770, 796, 798, 805, 806, 807, 822, 826, 862, 865, 868, 874, 875, 886], "eyeblink": [1, 212, 574, 579], "heartbeat": [1, 82, 141, 145, 200, 204, 205, 206, 207, 209, 217, 573, 578, 583, 586], "us": [1, 2, 3, 4, 5, 7, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 36, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 61, 62, 66, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 94, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 135, 137, 139, 140, 141, 143, 144, 149, 150, 151, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 195, 198, 199, 200, 201, 202, 203, 205, 206, 208, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 224, 226, 227, 228, 229, 231, 234, 235, 236, 239, 240, 241, 244, 257, 259, 280, 282, 284, 285, 286, 289, 291, 295, 296, 303, 304, 305, 306, 307, 308, 309, 317, 319, 320, 329, 339, 340, 346, 362, 369, 370, 372, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 413, 416, 422, 424, 436, 438, 439, 441, 442, 443, 444, 449, 450, 455, 456, 461, 462, 466, 467, 469, 471, 472, 473, 478, 481, 483, 488, 493, 503, 505, 511, 512, 532, 536, 541, 546, 547, 553, 554, 563, 567, 571, 572, 586, 587, 588, 589, 590, 591, 594, 602, 606, 607, 608, 618, 619, 621, 624, 629, 630, 639, 641, 642, 645, 648, 651, 652, 653, 657, 669, 676, 677, 679, 680, 681, 682, 683, 688, 703, 711, 712, 713, 718, 720, 721, 723, 724, 728, 729, 731, 732, 734, 735, 739, 740, 741, 742, 743, 744, 751, 752, 756, 762, 764, 766, 769, 780, 783, 784, 786, 788, 789, 791, 793, 797, 798, 799, 800, 801, 804, 807, 808, 809, 810, 814, 815, 818, 819, 820, 823, 825, 828, 829, 830, 831, 832, 833, 835, 836, 837, 838, 840, 841, 844, 846, 847, 848, 849, 850, 851, 852, 853, 856, 857, 859, 860, 862, 863, 867, 869, 872, 874, 875, 876, 886], "ssp": [1, 11, 15, 18, 27, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 68, 69, 71, 73, 83, 87, 89, 91, 92, 93, 94, 103, 106, 107, 108, 109, 120, 121, 129, 131, 139, 140, 141, 144, 145, 148, 150, 151, 161, 164, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 190, 198, 199, 200, 202, 203, 204, 207, 209, 213, 214, 215, 218, 222, 231, 234, 236, 259, 261, 264, 265, 266, 267, 268, 269, 273, 274, 275, 355, 356, 357, 452, 479, 480, 520, 555, 558, 560, 573, 574, 578, 579, 583, 608, 616, 625, 631, 646, 708, 710, 786, 788, 790, 792, 793, 805, 806, 808, 826, 841, 865, 871, 874, 875, 886], "add_proj": [1, 2, 4, 5, 42, 91, 100, 108, 110, 139, 141, 145, 148, 161, 171, 183, 184, 190, 195, 198, 203, 205, 206, 210, 211, 215, 227, 264, 265, 266, 267, 274, 479, 480, 575, 670], "compute_proj_evok": [1, 205, 355, 357, 876], "copi": [1, 2, 4, 5, 8, 9, 10, 12, 18, 19, 22, 27, 38, 45, 46, 47, 48, 49, 54, 58, 61, 67, 70, 73, 74, 78, 83, 106, 108, 113, 118, 126, 135, 139, 140, 143, 148, 149, 150, 154, 160, 161, 165, 167, 168, 170, 171, 175, 177, 184, 198, 199, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 215, 217, 223, 227, 230, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 279, 280, 281, 287, 288, 302, 307, 309, 312, 317, 364, 370, 372, 377, 378, 379, 380, 382, 383, 384, 386, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 420, 433, 436, 449, 450, 479, 480, 525, 527, 541, 553, 554, 557, 560, 561, 570, 573, 574, 580, 585, 589, 594, 608, 617, 644, 647, 650, 703, 706, 707, 708, 709, 710, 712, 714, 715, 716, 717, 718, 723, 740, 741, 845, 853, 863, 865, 868, 871, 872, 886], "apply_proj": [1, 71, 93, 141, 145, 148, 158, 166, 181, 205, 206, 207, 211, 264, 265, 266, 267, 441, 442, 443, 444, 479, 480, 575, 650, 807, 886], "fix": [1, 5, 22, 31, 40, 41, 45, 47, 48, 49, 54, 55, 58, 60, 79, 89, 99, 139, 141, 157, 162, 163, 164, 167, 169, 175, 179, 195, 210, 211, 222, 244, 257, 262, 263, 266, 267, 268, 275, 297, 298, 308, 320, 354, 361, 364, 424, 452, 454, 456, 470, 474, 476, 477, 479, 517, 521, 523, 528, 529, 530, 531, 532, 539, 540, 543, 544, 545, 561, 565, 569, 591, 613, 625, 636, 646, 712, 715, 722, 732, 733, 734, 736, 737, 770, 789, 833, 834, 839, 843, 845, 850, 864, 865, 868, 871, 886], "preprocess": [1, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 68, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 87, 98, 111, 136, 143, 145, 171, 183, 187, 190, 191, 194, 195, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 214, 218, 258, 264, 265, 266, 267, 269, 274, 353, 411, 415, 418, 420, 432, 440, 452, 479, 480, 499, 501, 508, 555, 558, 618, 710, 754, 774, 778, 784, 787, 792, 796, 797, 798, 799, 800, 801, 807, 841, 852, 862, 863, 865, 868, 872, 874, 876, 886], "fix_stim_artifact": [1, 876, 886], "correct": [1, 8, 9, 11, 12, 16, 18, 21, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 69, 71, 72, 73, 74, 77, 78, 79, 82, 84, 85, 86, 87, 89, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 126, 127, 130, 131, 134, 135, 136, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 164, 165, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 212, 221, 222, 223, 227, 228, 229, 230, 231, 234, 235, 236, 240, 241, 244, 256, 258, 259, 261, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 287, 309, 320, 353, 354, 359, 365, 411, 417, 418, 423, 430, 432, 450, 452, 461, 479, 480, 485, 487, 491, 494, 508, 509, 526, 529, 544, 545, 558, 560, 561, 562, 571, 572, 575, 578, 579, 582, 593, 596, 600, 607, 613, 620, 623, 624, 642, 644, 661, 662, 663, 664, 665, 666, 667, 668, 684, 687, 690, 691, 692, 693, 694, 695, 706, 708, 709, 710, 718, 725, 778, 785, 786, 792, 793, 798, 806, 808, 809, 811, 814, 832, 834, 841, 843, 845, 850, 860, 861, 864, 865, 868, 880, 883, 886], "delai": [1, 4, 19, 190, 194, 205, 206, 210, 244, 257, 259, 264, 265, 266, 267, 417, 423, 428, 446, 447, 449, 450, 479, 480, 520, 616, 795, 862, 886], "due": [1, 5, 40, 43, 47, 80, 167, 188, 189, 198, 200, 201, 205, 209, 210, 211, 215, 218, 222, 241, 260, 264, 265, 266, 267, 268, 270, 403, 410, 417, 428, 432, 445, 476, 477, 479, 480, 571, 572, 582, 589, 593, 607, 627, 633, 709, 754, 835, 841, 861, 865, 868, 886], "hardwar": [1, 165, 189, 200, 207, 257, 264, 265, 269, 375, 403, 479, 480, 561, 784, 801, 807, 841, 851, 868, 871, 886], "i": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 21, 22, 26, 27, 28, 31, 32, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 54, 58, 59, 60, 61, 63, 65, 67, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 86, 87, 89, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 125, 126, 127, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 168, 170, 171, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 296, 297, 298, 300, 302, 304, 306, 307, 308, 312, 314, 317, 318, 320, 322, 323, 324, 325, 327, 329, 330, 331, 337, 339, 341, 342, 343, 347, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 367, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 382, 383, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 435, 436, 437, 438, 440, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 467, 468, 469, 470, 471, 474, 476, 477, 478, 479, 480, 481, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 517, 519, 520, 521, 522, 523, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 547, 548, 550, 551, 552, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 593, 594, 597, 598, 600, 601, 602, 607, 608, 610, 611, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 627, 628, 630, 633, 636, 639, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 676, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 722, 724, 725, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 744, 748, 749, 750, 752, 753, 754, 755, 757, 759, 762, 763, 764, 766, 767, 770, 771, 772, 775, 777, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 831, 832, 834, 836, 839, 841, 844, 845, 846, 848, 850, 853, 856, 857, 859, 861, 862, 863, 864, 866, 867, 869, 870, 871, 872, 873, 874, 876, 886], "4": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 126, 129, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 163, 165, 167, 168, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 193, 194, 195, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 221, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 243, 244, 256, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 297, 298, 305, 306, 312, 313, 314, 324, 335, 338, 354, 380, 389, 411, 417, 418, 419, 424, 430, 434, 435, 446, 452, 454, 469, 476, 477, 479, 480, 517, 528, 535, 552, 553, 554, 560, 561, 566, 568, 570, 573, 575, 576, 584, 590, 592, 602, 608, 625, 627, 646, 650, 655, 659, 666, 686, 687, 690, 694, 706, 708, 709, 710, 722, 723, 725, 729, 732, 733, 734, 735, 736, 737, 738, 741, 742, 743, 744, 754, 757, 769, 770, 771, 773, 778, 784, 785, 786, 788, 790, 793, 794, 797, 804, 806, 807, 808, 809, 810, 812, 814, 816, 817, 818, 841, 843, 844, 850, 851, 861, 862, 865, 868, 871], "m": [1, 2, 4, 5, 8, 16, 18, 19, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 41, 44, 45, 46, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 69, 71, 72, 73, 78, 85, 86, 95, 96, 97, 98, 99, 100, 102, 104, 108, 109, 112, 113, 115, 118, 119, 122, 125, 126, 134, 136, 139, 140, 142, 143, 144, 148, 149, 150, 155, 156, 157, 158, 160, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 199, 200, 201, 204, 206, 208, 209, 211, 216, 217, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 244, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 280, 300, 304, 305, 325, 330, 335, 337, 339, 341, 343, 344, 345, 347, 354, 359, 365, 373, 380, 388, 403, 404, 411, 413, 415, 417, 418, 419, 422, 432, 435, 447, 449, 450, 454, 472, 473, 476, 477, 479, 480, 482, 495, 516, 524, 528, 536, 539, 543, 560, 561, 563, 569, 570, 572, 575, 576, 578, 579, 581, 582, 591, 593, 598, 601, 617, 655, 659, 663, 666, 668, 671, 676, 677, 678, 680, 681, 687, 692, 693, 694, 696, 697, 701, 706, 708, 709, 710, 722, 732, 735, 738, 754, 757, 771, 778, 786, 788, 789, 790, 793, 794, 797, 806, 807, 809, 812, 814, 816, 817, 818, 822, 824, 841, 845, 852, 860, 862, 868, 871, 872, 886], "shift_tim": [1, 85, 139, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709, 886], "004": [1, 10, 32, 33, 44, 120, 127, 139, 141, 144, 148, 165, 168, 175, 203, 223, 239, 243, 244, 276, 360, 524, 754], "result": [1, 8, 9, 26, 29, 30, 45, 46, 55, 58, 60, 70, 79, 82, 89, 98, 100, 102, 106, 113, 125, 126, 133, 135, 136, 143, 145, 148, 150, 154, 155, 156, 158, 159, 161, 165, 166, 169, 171, 175, 177, 187, 194, 195, 198, 201, 203, 204, 205, 206, 208, 215, 216, 218, 221, 223, 226, 227, 230, 231, 234, 235, 236, 244, 256, 258, 259, 264, 265, 266, 267, 269, 271, 272, 275, 276, 278, 279, 280, 289, 291, 298, 314, 317, 318, 353, 354, 359, 361, 363, 388, 390, 410, 412, 413, 427, 436, 445, 451, 469, 474, 476, 477, 479, 480, 496, 513, 520, 524, 528, 530, 531, 532, 534, 539, 540, 547, 561, 566, 572, 578, 579, 582, 591, 593, 610, 616, 624, 647, 658, 659, 660, 669, 670, 672, 691, 692, 693, 694, 695, 696, 697, 698, 706, 708, 709, 710, 754, 762, 778, 784, 785, 807, 845, 850, 861, 862, 865, 868, 871, 886], "time_unit": [1, 11, 14, 35, 40, 42, 43, 51, 59, 61, 69, 71, 85, 91, 92, 98, 99, 100, 120, 149, 150, 151, 161, 174, 176, 177, 182, 183, 184, 190, 195, 222, 227, 228, 229, 263, 266, 267, 271, 272, 275, 278, 279, 280, 778, 788, 790, 793, 794, 812, 817, 886], "": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 24, 26, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 55, 58, 59, 61, 63, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 114, 115, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 255, 256, 258, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 288, 290, 297, 298, 302, 303, 304, 321, 324, 328, 353, 354, 357, 358, 360, 366, 367, 385, 386, 388, 403, 404, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 432, 435, 441, 442, 443, 444, 445, 447, 449, 450, 451, 470, 473, 476, 477, 479, 480, 484, 487, 494, 496, 502, 503, 511, 515, 519, 522, 524, 527, 528, 539, 543, 544, 545, 560, 561, 562, 563, 572, 579, 580, 584, 585, 592, 593, 597, 600, 623, 624, 633, 635, 636, 637, 638, 642, 643, 645, 647, 650, 651, 655, 656, 663, 666, 668, 683, 692, 693, 694, 695, 696, 697, 701, 702, 704, 706, 707, 708, 709, 710, 718, 722, 724, 725, 730, 732, 734, 735, 736, 737, 738, 741, 746, 753, 754, 762, 763, 771, 772, 778, 780, 782, 784, 785, 788, 790, 791, 793, 794, 795, 797, 801, 807, 809, 810, 812, 814, 815, 816, 817, 818, 822, 835, 836, 841, 843, 845, 849, 851, 857, 860, 861, 862, 863, 865, 867, 868, 870, 871, 872, 873, 874], "topomap": [1, 19, 42, 73, 82, 86, 118, 141, 150, 169, 203, 206, 231, 240, 261, 264, 265, 266, 267, 273, 274, 312, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 771, 784, 786, 788, 791, 793, 797, 804, 805, 806, 807, 808, 809, 810, 814, 816, 841, 886], "plot_topomap": [1, 15, 16, 18, 19, 21, 42, 70, 71, 79, 86, 99, 108, 140, 141, 143, 149, 150, 165, 169, 175, 176, 190, 198, 206, 210, 218, 231, 239, 240, 241, 261, 264, 265, 266, 267, 273, 479, 480, 561, 706, 708, 710, 774, 786, 791, 799, 876, 886], "time": [1, 2, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 63, 64, 65, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 140, 142, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 187, 189, 190, 191, 194, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 221, 222, 223, 226, 227, 230, 234, 235, 236, 239, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 296, 297, 341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 354, 357, 359, 360, 361, 363, 373, 403, 411, 412, 413, 414, 417, 418, 420, 421, 422, 423, 424, 425, 427, 434, 435, 437, 439, 440, 445, 447, 449, 450, 452, 453, 454, 464, 469, 474, 475, 476, 477, 478, 479, 480, 492, 494, 498, 500, 508, 513, 515, 521, 522, 527, 528, 529, 531, 532, 534, 535, 536, 539, 540, 542, 544, 545, 552, 556, 558, 560, 561, 563, 564, 565, 566, 569, 570, 571, 573, 574, 576, 578, 579, 580, 582, 584, 585, 591, 601, 607, 610, 614, 615, 619, 620, 623, 624, 625, 627, 633, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 680, 681, 682, 686, 691, 692, 693, 694, 695, 696, 697, 698, 699, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 722, 725, 731, 732, 733, 734, 735, 736, 737, 738, 753, 754, 758, 768, 771, 777, 778, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 801, 805, 806, 807, 808, 809, 812, 813, 814, 815, 816, 817, 818, 831, 841, 843, 844, 849, 851, 852, 857, 861, 862, 863, 865, 867, 868, 871, 872, 876, 886], "arraidirectori": [1, 12, 21, 33, 34, 80, 81, 93, 94, 115, 118, 122, 154, 155, 160, 165, 170, 171, 183, 190, 256, 262, 269, 270, 271, 274, 275, 278, 279, 280, 303, 307, 308, 309, 312, 360, 365, 366, 367, 372, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 430, 461, 463, 467, 469, 470, 471, 472, 473, 486, 492, 506, 509, 513, 517, 519, 547, 589, 610, 624, 628, 630, 637, 643, 644, 645, 648, 654, 655, 669, 672, 683, 701, 702, 746, 754, 770, 772, 782, 812, 818, 836, 845, 848, 851, 861, 865, 886], "home": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 134, 136, 139, 140, 142, 143, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 161, 165, 166, 167, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 195, 198, 202, 203, 204, 205, 206, 208, 209, 210, 212, 215, 218, 222, 223, 227, 228, 229, 230, 231, 234, 236, 240, 264, 265, 372, 380, 479, 480, 784, 807, 844, 850, 886], "circleci": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 134, 136, 139, 140, 142, 143, 145, 148, 149, 150, 151, 155, 156, 157, 158, 161, 165, 166, 167, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 195, 198, 202, 203, 204, 205, 206, 208, 209, 210, 212, 215, 218, 222, 223, 227, 228, 229, 230, 231, 234, 236, 240, 845], "mne_data": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 134, 136, 140, 142, 143, 145, 148, 149, 150, 151, 155, 156, 157, 158, 161, 165, 166, 167, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 195, 198, 202, 203, 204, 205, 206, 208, 209, 210, 212, 215, 218, 222, 223, 227, 228, 229, 230, 231, 234, 236, 240, 377, 378, 379, 380, 382, 383, 384, 386, 387, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 845, 865, 886], "data": [1, 2, 3, 6, 9, 10, 12, 14, 16, 17, 20, 22, 24, 26, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 72, 74, 76, 77, 78, 81, 82, 83, 84, 86, 87, 90, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 116, 117, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 137, 138, 142, 143, 144, 147, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 169, 170, 172, 173, 175, 178, 180, 181, 182, 183, 184, 185, 186, 193, 195, 196, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 213, 214, 220, 224, 225, 226, 228, 229, 233, 237, 238, 240, 242, 243, 244, 251, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303, 310, 311, 312, 313, 314, 316, 318, 320, 324, 326, 327, 328, 329, 335, 337, 338, 339, 341, 343, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 366, 369, 370, 371, 373, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 437, 438, 439, 440, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 463, 468, 470, 474, 476, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 516, 517, 518, 519, 520, 521, 522, 523, 525, 527, 528, 529, 530, 531, 534, 535, 536, 539, 542, 543, 544, 545, 552, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 589, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 608, 611, 612, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 631, 633, 635, 637, 638, 647, 650, 654, 655, 656, 657, 658, 659, 660, 662, 664, 665, 666, 670, 672, 674, 678, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 724, 725, 733, 734, 735, 736, 737, 738, 742, 748, 749, 754, 758, 762, 767, 769, 770, 771, 772, 773, 775, 776, 778, 779, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 805, 806, 807, 808, 809, 811, 812, 813, 814, 815, 816, 817, 818, 819, 821, 822, 824, 826, 832, 839, 840, 841, 842, 845, 846, 852, 857, 860, 863, 866, 867, 872, 873, 874, 876, 881, 886], "res4": [1, 12, 21, 80, 81, 118, 122, 183, 190], "read": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 145, 148, 150, 151, 155, 156, 157, 158, 159, 160, 161, 165, 166, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 221, 222, 223, 227, 228, 229, 230, 235, 240, 256, 257, 258, 259, 261, 264, 265, 266, 267, 269, 275, 277, 297, 298, 301, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 351, 354, 358, 359, 369, 370, 371, 373, 411, 418, 419, 443, 452, 453, 454, 455, 459, 461, 464, 470, 474, 476, 477, 478, 479, 480, 483, 484, 485, 486, 487, 491, 492, 493, 494, 495, 496, 499, 500, 502, 504, 505, 506, 510, 511, 527, 539, 541, 542, 550, 563, 585, 603, 604, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 635, 636, 638, 639, 640, 642, 643, 645, 652, 659, 707, 726, 728, 746, 762, 770, 794, 822, 832, 833, 841, 845, 848, 853, 861, 863, 868, 869, 872, 874, 876, 886], "hc": [1, 12, 21, 80, 81, 118, 122, 183, 190], "separ": [1, 10, 12, 16, 21, 32, 33, 45, 47, 70, 74, 80, 81, 82, 93, 118, 122, 134, 139, 140, 141, 144, 145, 148, 149, 150, 154, 155, 159, 160, 161, 164, 167, 174, 183, 188, 190, 191, 195, 198, 201, 203, 204, 205, 206, 208, 213, 214, 215, 216, 217, 234, 236, 239, 244, 246, 256, 258, 259, 264, 265, 266, 267, 269, 273, 274, 297, 298, 324, 345, 347, 348, 351, 355, 356, 357, 362, 371, 386, 393, 411, 418, 432, 444, 474, 479, 480, 495, 498, 503, 519, 521, 561, 571, 572, 573, 574, 578, 582, 591, 593, 607, 617, 624, 655, 661, 662, 663, 664, 665, 666, 667, 668, 693, 694, 696, 697, 708, 709, 710, 711, 712, 713, 736, 737, 744, 754, 759, 777, 778, 784, 785, 786, 793, 794, 796, 801, 806, 807, 808, 841, 843, 845, 849, 861, 862, 863, 865, 868, 871, 874, 886], "posit": [1, 4, 12, 19, 21, 24, 27, 38, 39, 41, 45, 70, 75, 78, 79, 81, 82, 89, 92, 93, 94, 100, 111, 118, 121, 122, 126, 129, 134, 135, 149, 150, 155, 157, 158, 159, 169, 174, 175, 177, 182, 183, 184, 187, 189, 190, 198, 199, 203, 205, 209, 211, 212, 223, 226, 230, 234, 241, 244, 256, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 290, 304, 306, 312, 313, 314, 325, 328, 330, 332, 335, 338, 342, 344, 345, 350, 351, 352, 354, 366, 381, 390, 411, 414, 417, 418, 421, 423, 430, 431, 432, 439, 453, 454, 463, 470, 479, 480, 492, 495, 500, 503, 504, 510, 522, 558, 560, 561, 565, 566, 568, 576, 582, 584, 591, 593, 615, 617, 655, 657, 658, 659, 663, 664, 665, 666, 667, 668, 669, 671, 674, 675, 690, 706, 708, 709, 710, 721, 729, 730, 754, 755, 759, 767, 770, 771, 773, 778, 784, 785, 786, 789, 791, 792, 793, 796, 797, 803, 806, 807, 809, 810, 812, 814, 815, 816, 818, 822, 824, 841, 845, 861, 862, 868, 871, 875, 886], "file": [1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 49, 56, 59, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 95, 96, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 120, 122, 126, 127, 128, 129, 131, 132, 134, 136, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 170, 173, 176, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 193, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 212, 214, 215, 218, 220, 222, 223, 225, 228, 229, 230, 231, 233, 234, 236, 238, 240, 243, 251, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 288, 301, 303, 304, 307, 308, 309, 312, 313, 318, 320, 321, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 344, 357, 362, 363, 365, 366, 367, 372, 380, 385, 386, 387, 388, 394, 403, 404, 430, 432, 440, 441, 442, 443, 444, 452, 453, 459, 460, 461, 463, 464, 468, 470, 471, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 519, 520, 522, 523, 534, 541, 542, 546, 550, 551, 560, 561, 571, 572, 573, 574, 582, 589, 593, 603, 604, 605, 606, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 648, 649, 651, 655, 657, 658, 659, 671, 674, 683, 701, 704, 705, 706, 707, 708, 709, 710, 726, 727, 728, 739, 741, 743, 748, 754, 762, 770, 772, 807, 818, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 844, 845, 850, 851, 852, 857, 862, 872, 876, 886], "present": [1, 4, 10, 12, 13, 16, 21, 31, 40, 43, 44, 69, 81, 115, 118, 122, 125, 133, 139, 141, 143, 148, 149, 157, 165, 167, 168, 169, 179, 187, 188, 190, 191, 198, 199, 203, 205, 206, 207, 209, 212, 216, 218, 226, 230, 234, 235, 236, 244, 256, 257, 259, 261, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 284, 285, 288, 297, 298, 302, 307, 312, 318, 320, 324, 329, 334, 343, 347, 354, 358, 359, 360, 368, 369, 370, 371, 392, 411, 418, 430, 432, 435, 440, 452, 453, 454, 455, 459, 474, 476, 477, 479, 480, 487, 490, 494, 502, 519, 527, 539, 558, 560, 561, 563, 564, 571, 572, 576, 578, 583, 593, 601, 620, 621, 670, 675, 691, 706, 708, 709, 710, 724, 741, 754, 770, 771, 777, 778, 784, 786, 788, 790, 793, 794, 797, 804, 806, 807, 808, 809, 810, 813, 814, 816, 841, 851, 861, 862, 868, 871, 886], "quaternion": [1, 12, 21, 80, 81, 118, 122, 183, 190, 350, 351, 352, 565, 568, 745, 747, 796, 886], "match": [1, 8, 9, 11, 12, 17, 18, 20, 21, 27, 28, 31, 32, 33, 34, 40, 41, 45, 46, 47, 49, 51, 58, 59, 61, 69, 71, 72, 73, 74, 79, 80, 81, 82, 87, 89, 92, 93, 94, 95, 96, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 116, 118, 120, 122, 127, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 156, 160, 161, 165, 168, 171, 176, 179, 181, 182, 183, 184, 190, 194, 198, 199, 200, 202, 203, 206, 210, 212, 215, 216, 217, 221, 222, 223, 227, 228, 229, 230, 231, 234, 236, 240, 257, 259, 261, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 317, 329, 354, 358, 365, 369, 370, 411, 412, 417, 418, 419, 421, 427, 432, 435, 436, 438, 440, 442, 443, 445, 461, 478, 479, 480, 487, 494, 502, 525, 547, 550, 552, 553, 554, 558, 560, 561, 570, 571, 576, 582, 594, 607, 617, 619, 620, 625, 640, 643, 656, 671, 692, 697, 701, 706, 707, 708, 709, 710, 722, 723, 732, 744, 778, 784, 785, 786, 790, 793, 794, 797, 800, 806, 807, 808, 809, 832, 845, 849, 868, 886], "desir": [1, 5, 11, 12, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 68, 70, 80, 81, 89, 91, 92, 93, 94, 100, 103, 106, 107, 109, 111, 118, 122, 123, 126, 130, 141, 145, 150, 156, 160, 165, 167, 169, 171, 176, 177, 178, 179, 180, 183, 187, 188, 190, 194, 195, 199, 200, 201, 202, 205, 216, 222, 223, 234, 236, 257, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 360, 410, 435, 446, 479, 480, 521, 539, 560, 585, 602, 650, 706, 708, 709, 710, 722, 732, 736, 740, 754, 817, 851, 861, 863, 865, 871, 886], "v": [1, 4, 8, 9, 12, 13, 21, 24, 27, 28, 32, 43, 54, 55, 63, 65, 70, 75, 80, 81, 104, 105, 118, 122, 126, 131, 136, 140, 170, 171, 177, 183, 190, 194, 198, 201, 205, 227, 230, 231, 236, 239, 244, 256, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 280, 283, 287, 288, 298, 302, 320, 344, 359, 373, 380, 417, 418, 419, 432, 479, 480, 527, 536, 561, 569, 572, 578, 579, 582, 593, 600, 692, 706, 708, 709, 710, 718, 724, 733, 736, 737, 738, 741, 758, 841, 845, 849, 861, 868, 871, 886], "transform": [1, 5, 7, 8, 11, 12, 14, 16, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 68, 74, 77, 80, 81, 82, 84, 87, 89, 91, 92, 93, 94, 102, 103, 106, 107, 108, 109, 111, 112, 114, 118, 122, 123, 124, 126, 130, 134, 144, 149, 154, 156, 157, 158, 165, 166, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 204, 207, 215, 222, 223, 239, 241, 244, 256, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 304, 312, 315, 316, 326, 354, 360, 361, 363, 365, 366, 367, 373, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 429, 430, 432, 452, 454, 462, 470, 471, 472, 473, 479, 480, 486, 510, 519, 522, 523, 534, 535, 544, 545, 561, 562, 565, 568, 570, 572, 582, 589, 593, 594, 625, 629, 637, 638, 645, 650, 671, 674, 691, 701, 703, 708, 710, 712, 715, 721, 722, 725, 729, 730, 731, 732, 733, 734, 735, 738, 740, 754, 770, 771, 818, 824, 832, 833, 840, 841, 852, 861, 862, 865, 875, 876, 886], "84": [1, 11, 13, 19, 34, 35, 41, 47, 58, 80, 107, 108, 111, 113, 118, 128, 135, 150, 168, 189, 194, 195, 199, 208, 226, 227, 228, 230, 231, 234, 235, 236, 244, 488, 597], "69": [1, 13, 15, 19, 35, 40, 47, 49, 80, 81, 95, 102, 107, 111, 113, 118, 136, 139, 142, 168, 175, 179, 183, 184, 189, 190, 194, 195, 203, 208, 226, 227, 228, 230, 231, 234, 236, 244, 264, 265, 297, 403], "49": [1, 5, 13, 19, 28, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 78, 80, 85, 86, 102, 103, 107, 111, 112, 113, 115, 118, 119, 122, 126, 148, 168, 171, 175, 177, 178, 180, 183, 184, 189, 190, 194, 195, 208, 209, 210, 217, 223, 226, 227, 228, 230, 231, 235, 236, 244, 752, 844, 886], "00": [1, 2, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 33, 34, 41, 42, 44, 45, 46, 50, 56, 59, 66, 70, 71, 72, 73, 76, 80, 81, 82, 83, 84, 87, 89, 90, 92, 95, 98, 100, 101, 102, 103, 105, 107, 108, 111, 112, 113, 114, 118, 120, 122, 126, 129, 132, 135, 138, 140, 142, 143, 145, 147, 150, 153, 155, 156, 157, 158, 159, 163, 166, 167, 168, 171, 173, 175, 179, 180, 181, 182, 183, 184, 186, 189, 190, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 243, 244, 528, 560, 569], "mm": [1, 4, 5, 12, 21, 24, 26, 41, 44, 45, 50, 70, 71, 73, 76, 78, 79, 80, 81, 82, 89, 92, 93, 94, 108, 118, 122, 126, 135, 140, 145, 150, 155, 156, 157, 158, 159, 160, 166, 167, 175, 177, 179, 180, 181, 182, 183, 184, 190, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 222, 223, 256, 262, 269, 271, 272, 275, 278, 279, 280, 305, 335, 337, 339, 360, 365, 430, 454, 463, 469, 472, 473, 491, 495, 513, 523, 581, 617, 654, 655, 744, 746, 753, 754, 812, 817, 822, 861, 868, 886], "orig": [1, 12, 21, 80, 81, 118, 122, 159, 183, 190, 199, 541, 553, 554, 559], "44": [1, 19, 20, 28, 35, 41, 45, 46, 47, 80, 102, 105, 107, 108, 111, 112, 113, 115, 118, 157, 167, 168, 175, 179, 180, 183, 195, 201, 208, 209, 226, 227, 228, 230, 231, 234, 235, 236, 244, 297, 298, 432, 474, 693, 694, 696, 697, 886], "30": [1, 5, 7, 8, 9, 11, 12, 13, 14, 19, 24, 28, 33, 34, 35, 41, 42, 45, 46, 47, 50, 58, 70, 73, 74, 76, 80, 81, 82, 89, 91, 93, 96, 100, 102, 103, 106, 107, 108, 111, 112, 113, 114, 118, 122, 126, 135, 143, 145, 155, 157, 158, 159, 163, 165, 168, 170, 171, 182, 183, 195, 198, 200, 201, 203, 204, 206, 207, 208, 210, 211, 215, 226, 227, 228, 229, 230, 231, 235, 236, 239, 240, 241, 243, 244, 256, 264, 265, 266, 267, 275, 277, 303, 307, 335, 354, 479, 480, 511, 560, 564, 569, 582, 659, 670, 671, 708, 710, 722, 732, 733, 735, 736, 738, 758, 762, 786, 843, 861, 862, 868, 871, 886], "51": [1, 5, 8, 13, 19, 28, 34, 35, 45, 47, 70, 71, 79, 80, 81, 102, 107, 108, 111, 113, 118, 126, 136, 151, 155, 157, 168, 171, 183, 184, 189, 190, 194, 195, 200, 204, 207, 208, 209, 215, 226, 227, 228, 230, 231, 235, 236, 244, 274, 380, 593, 862, 886], "45": [1, 5, 8, 9, 11, 13, 15, 16, 19, 28, 35, 45, 50, 80, 83, 102, 107, 108, 111, 112, 113, 118, 120, 122, 140, 142, 143, 144, 148, 155, 156, 157, 167, 168, 175, 176, 179, 180, 186, 189, 190, 194, 195, 201, 203, 204, 206, 207, 208, 209, 211, 212, 217, 226, 227, 228, 230, 231, 234, 235, 236, 241, 258, 264, 265, 266, 267, 297, 298, 335, 354, 358, 359, 369, 370, 371, 411, 418, 446, 454, 455, 474, 476, 477, 479, 480, 539, 561, 687, 708, 710, 758, 786, 794, 868, 886], "252": [1, 35, 118, 122, 168, 208, 226, 231], "43": [1, 9, 13, 19, 26, 28, 34, 35, 41, 45, 46, 47, 48, 50, 54, 55, 80, 81, 102, 103, 106, 107, 111, 113, 118, 122, 144, 149, 153, 156, 157, 168, 175, 180, 181, 182, 186, 189, 194, 195, 208, 226, 227, 228, 229, 230, 231, 234, 235, 236, 244, 264, 265, 335, 708, 709], "diff": [1, 9, 12, 21, 70, 80, 81, 118, 122, 133, 175, 182, 183, 190, 215, 234, 762, 845, 853], "000": [1, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 34, 42, 59, 63, 65, 67, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 87, 89, 92, 93, 94, 98, 108, 111, 112, 113, 114, 118, 120, 122, 127, 128, 129, 132, 135, 139, 140, 141, 142, 143, 145, 148, 150, 151, 158, 165, 166, 167, 171, 178, 180, 181, 182, 183, 184, 189, 190, 193, 195, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 217, 218, 221, 223, 227, 229, 230, 231, 240, 504, 619], "46": [1, 12, 13, 19, 21, 28, 33, 34, 35, 40, 45, 47, 51, 55, 72, 80, 102, 107, 111, 113, 118, 122, 145, 147, 148, 168, 189, 200, 201, 203, 208, 217, 226, 227, 228, 230, 231, 234, 236, 244, 868, 886], "28": [1, 4, 6, 11, 18, 19, 26, 28, 34, 35, 41, 44, 45, 47, 50, 56, 80, 82, 84, 102, 103, 107, 108, 113, 118, 119, 129, 139, 156, 157, 163, 168, 170, 175, 180, 181, 182, 183, 184, 189, 194, 195, 200, 202, 208, 226, 227, 228, 230, 231, 235, 236, 240, 244, 335, 886], "53": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 32, 33, 34, 35, 40, 42, 45, 46, 47, 73, 76, 80, 81, 82, 83, 87, 93, 98, 102, 103, 107, 111, 112, 113, 114, 118, 120, 122, 132, 135, 140, 143, 144, 145, 150, 154, 161, 168, 183, 189, 190, 195, 197, 201, 202, 203, 204, 206, 208, 209, 210, 211, 214, 217, 226, 227, 228, 230, 231, 236, 244, 687, 865], "58": [1, 11, 13, 19, 35, 40, 45, 47, 48, 49, 54, 55, 57, 58, 59, 78, 80, 89, 90, 92, 93, 102, 107, 108, 111, 113, 115, 118, 120, 126, 135, 136, 147, 148, 150, 151, 161, 168, 171, 177, 181, 189, 190, 195, 198, 204, 206, 208, 215, 226, 227, 229, 230, 231, 234, 244, 354, 868, 886], "243": [1, 80, 118, 168, 190, 226, 230, 231], "47": [1, 10, 16, 19, 28, 33, 35, 45, 51, 56, 80, 83, 102, 107, 111, 113, 118, 136, 138, 158, 167, 168, 180, 182, 189, 190, 193, 194, 195, 208, 212, 217, 226, 227, 228, 230, 231, 235, 236, 244, 300, 335, 404, 861, 862, 868], "86": [1, 5, 12, 13, 15, 19, 26, 34, 35, 40, 41, 47, 50, 80, 102, 107, 111, 113, 118, 136, 139, 150, 155, 156, 157, 167, 168, 171, 175, 180, 181, 183, 194, 195, 202, 204, 206, 207, 208, 211, 216, 226, 227, 228, 230, 231, 236, 244, 418, 720, 722, 732, 736, 860], "41": [1, 13, 19, 28, 34, 35, 44, 45, 47, 80, 81, 95, 102, 107, 111, 113, 118, 130, 167, 168, 178, 182, 183, 186, 189, 190, 194, 195, 204, 206, 207, 208, 214, 215, 226, 227, 228, 230, 231, 234, 235, 236, 241, 244, 276, 360, 403, 411, 886], "63": [1, 19, 35, 45, 47, 70, 80, 81, 100, 102, 107, 111, 113, 116, 118, 136, 142, 168, 183, 184, 190, 208, 226, 227, 228, 230, 231, 234, 235, 236, 886], "55": [1, 11, 19, 21, 28, 30, 31, 32, 35, 38, 39, 40, 41, 44, 45, 46, 48, 50, 54, 55, 57, 58, 60, 78, 80, 85, 86, 100, 102, 107, 108, 111, 113, 115, 118, 119, 123, 126, 142, 148, 150, 159, 163, 168, 170, 171, 176, 177, 179, 180, 194, 195, 203, 204, 206, 208, 210, 217, 226, 227, 228, 230, 231, 235, 236, 244, 411, 419, 528, 560, 561, 608, 843, 886], "82": [1, 19, 35, 39, 46, 80, 102, 111, 113, 118, 144, 168, 170, 175, 179, 180, 183, 189, 190, 194, 195, 208, 226, 227, 228, 230, 231, 235, 236, 240, 403, 446], "230": [1, 56, 80, 87, 111, 118, 168, 195, 208, 226, 231], "26": [1, 5, 11, 16, 19, 28, 32, 34, 35, 44, 45, 47, 56, 64, 66, 70, 78, 80, 81, 84, 95, 100, 102, 105, 107, 108, 113, 118, 125, 129, 135, 136, 143, 144, 147, 157, 168, 170, 182, 183, 184, 190, 194, 195, 208, 212, 222, 225, 226, 227, 228, 229, 230, 231, 234, 236, 244, 276, 277, 360, 394, 528, 862], "coordin": [1, 5, 11, 12, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 68, 71, 80, 81, 89, 91, 92, 93, 94, 103, 106, 107, 108, 109, 114, 118, 122, 123, 126, 130, 134, 135, 149, 157, 158, 162, 163, 164, 165, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 191, 195, 207, 209, 211, 212, 222, 223, 234, 236, 244, 261, 262, 264, 265, 266, 267, 268, 269, 270, 273, 277, 279, 280, 302, 304, 305, 306, 312, 315, 316, 321, 325, 328, 330, 331, 333, 335, 339, 364, 365, 367, 390, 411, 418, 430, 432, 454, 462, 470, 472, 473, 476, 479, 480, 483, 486, 490, 491, 504, 510, 512, 519, 524, 560, 561, 572, 576, 582, 593, 625, 635, 636, 638, 639, 655, 659, 683, 686, 706, 708, 710, 740, 741, 753, 754, 755, 770, 771, 772, 778, 782, 786, 788, 790, 792, 793, 794, 796, 797, 804, 806, 808, 809, 810, 814, 816, 822, 824, 833, 834, 839, 841, 862, 886], "establish": [1, 12, 21, 80, 81, 118, 122, 183, 187, 190, 201, 231, 244, 693, 694, 696, 697], "digit": [1, 71, 73, 76, 80, 81, 82, 89, 92, 117, 118, 122, 126, 140, 145, 150, 155, 156, 158, 159, 166, 167, 168, 170, 181, 184, 187, 188, 190, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 244, 256, 257, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 280, 305, 306, 312, 325, 326, 328, 330, 333, 334, 337, 339, 341, 342, 344, 365, 411, 418, 430, 432, 452, 470, 479, 480, 483, 486, 492, 504, 512, 519, 524, 560, 561, 570, 571, 572, 576, 582, 593, 619, 620, 655, 706, 708, 709, 710, 754, 770, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 824, 841, 861, 862, 871, 886], "point": [1, 5, 8, 9, 11, 12, 16, 18, 21, 22, 26, 27, 32, 33, 34, 36, 38, 41, 42, 44, 45, 46, 49, 54, 55, 56, 58, 60, 71, 72, 73, 76, 80, 81, 82, 89, 92, 93, 95, 96, 99, 100, 102, 106, 108, 109, 111, 112, 113, 114, 116, 118, 119, 120, 122, 126, 127, 133, 134, 135, 136, 139, 140, 141, 143, 144, 145, 148, 149, 150, 151, 155, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 191, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 241, 244, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 297, 298, 305, 306, 312, 315, 316, 321, 325, 330, 334, 335, 336, 337, 339, 342, 348, 350, 354, 359, 360, 364, 365, 367, 410, 411, 412, 413, 417, 418, 420, 427, 430, 432, 445, 447, 449, 452, 470, 473, 474, 478, 479, 480, 482, 483, 486, 492, 499, 504, 512, 522, 523, 524, 527, 528, 537, 538, 539, 540, 542, 543, 560, 561, 563, 571, 572, 575, 576, 582, 593, 614, 618, 619, 622, 623, 625, 628, 633, 636, 639, 650, 654, 655, 657, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 673, 680, 682, 691, 692, 693, 694, 696, 697, 698, 706, 707, 708, 709, 710, 724, 725, 754, 755, 758, 759, 770, 771, 772, 773, 778, 782, 786, 788, 789, 790, 791, 793, 794, 797, 798, 801, 804, 806, 808, 809, 810, 812, 813, 814, 816, 817, 818, 822, 834, 839, 841, 845, 861, 863, 865, 867, 871, 874, 886], "subj00111092011": [1, 118], "po": [1, 19, 41, 47, 50, 79, 80, 81, 83, 92, 114, 118, 135, 150, 155, 175, 182, 183, 184, 190, 207, 209, 262, 266, 267, 270, 271, 272, 275, 278, 279, 280, 304, 313, 338, 351, 352, 431, 454, 472, 473, 492, 565, 568, 627, 655, 796, 816, 871, 886], "polhemu": [1, 12, 21, 80, 81, 118, 122, 155, 169, 183, 190, 269, 312, 337, 339, 492, 504, 868, 871, 886], "hpi": [1, 12, 21, 80, 81, 118, 122, 155, 165, 168, 169, 183, 187, 190, 198, 209, 215, 256, 264, 265, 266, 267, 269, 305, 306, 312, 315, 325, 335, 337, 341, 342, 343, 346, 347, 348, 365, 430, 431, 479, 480, 486, 504, 558, 565, 706, 708, 709, 710, 777, 841, 868, 871, 875, 886], "coil": [1, 5, 12, 21, 26, 41, 45, 50, 80, 81, 108, 118, 122, 123, 149, 155, 157, 158, 175, 180, 181, 182, 183, 184, 187, 190, 198, 207, 208, 209, 256, 264, 265, 266, 267, 269, 320, 335, 341, 342, 344, 345, 346, 348, 349, 431, 454, 479, 480, 486, 504, 558, 571, 572, 575, 593, 604, 619, 647, 706, 708, 709, 710, 748, 777, 841, 875, 886], "ad": [1, 4, 5, 11, 12, 21, 22, 27, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 67, 68, 70, 71, 80, 81, 89, 91, 92, 93, 94, 100, 103, 106, 107, 109, 118, 119, 122, 123, 126, 130, 139, 140, 141, 145, 150, 155, 157, 158, 159, 160, 161, 165, 169, 174, 176, 177, 178, 180, 181, 183, 190, 195, 200, 204, 206, 207, 209, 217, 218, 221, 222, 223, 226, 227, 234, 236, 256, 258, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 312, 338, 341, 343, 347, 360, 361, 371, 411, 418, 432, 455, 478, 479, 480, 503, 516, 521, 522, 523, 526, 560, 561, 563, 576, 578, 615, 650, 655, 656, 660, 670, 698, 701, 706, 708, 709, 710, 750, 754, 757, 759, 771, 772, 778, 782, 783, 786, 788, 790, 793, 794, 797, 801, 804, 806, 808, 809, 810, 812, 814, 816, 817, 845, 862, 868, 871, 874, 886], "devic": [1, 5, 12, 21, 26, 41, 45, 50, 71, 79, 80, 81, 108, 118, 122, 149, 155, 157, 164, 165, 168, 169, 170, 175, 180, 182, 183, 184, 190, 192, 193, 205, 207, 211, 212, 215, 256, 258, 266, 267, 269, 305, 312, 315, 328, 361, 363, 373, 376, 432, 443, 470, 479, 480, 486, 487, 489, 491, 494, 495, 496, 497, 498, 500, 502, 506, 507, 508, 509, 510, 565, 568, 581, 593, 594, 607, 617, 650, 754, 770, 789, 832, 841, 857, 861, 862, 871, 886], "locat": [1, 4, 5, 12, 21, 26, 27, 31, 35, 40, 41, 45, 47, 48, 49, 50, 55, 59, 60, 67, 68, 77, 79, 80, 81, 89, 92, 93, 94, 99, 108, 114, 117, 118, 122, 123, 134, 135, 136, 137, 140, 148, 149, 154, 155, 157, 158, 159, 160, 162, 164, 165, 170, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 190, 191, 199, 205, 207, 208, 209, 211, 215, 221, 222, 223, 226, 227, 228, 230, 231, 236, 241, 244, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 279, 280, 297, 298, 306, 307, 308, 312, 313, 316, 318, 321, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 338, 342, 344, 345, 346, 354, 367, 377, 378, 379, 380, 382, 383, 384, 386, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 418, 431, 432, 441, 444, 452, 462, 467, 471, 479, 480, 489, 491, 499, 504, 510, 513, 523, 527, 528, 537, 538, 539, 543, 547, 560, 561, 565, 576, 584, 587, 588, 593, 604, 618, 619, 622, 627, 628, 644, 645, 647, 655, 658, 659, 669, 672, 693, 694, 696, 697, 698, 706, 708, 710, 746, 754, 770, 771, 775, 778, 782, 786, 788, 792, 793, 796, 797, 806, 807, 808, 809, 810, 814, 816, 822, 824, 841, 846, 851, 861, 862, 865, 871, 874, 875, 886], "measur": [1, 4, 5, 12, 21, 26, 41, 45, 50, 71, 73, 76, 79, 80, 81, 82, 89, 92, 102, 108, 118, 122, 126, 140, 143, 144, 145, 155, 157, 158, 161, 164, 165, 166, 167, 168, 169, 171, 175, 181, 183, 187, 188, 189, 190, 191, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 231, 232, 233, 237, 238, 240, 241, 244, 257, 259, 261, 263, 264, 265, 266, 267, 268, 269, 273, 275, 277, 284, 285, 297, 298, 299, 305, 306, 310, 311, 318, 319, 320, 324, 326, 327, 340, 342, 344, 346, 349, 354, 358, 359, 360, 365, 369, 370, 371, 373, 411, 413, 415, 418, 419, 420, 430, 442, 443, 444, 454, 455, 462, 471, 474, 476, 477, 478, 479, 480, 481, 484, 492, 494, 508, 516, 519, 522, 523, 524, 527, 528, 529, 536, 537, 538, 539, 542, 557, 558, 561, 572, 575, 589, 593, 594, 597, 598, 599, 620, 635, 640, 641, 650, 662, 663, 670, 671, 674, 678, 687, 688, 689, 690, 694, 697, 698, 706, 707, 708, 709, 710, 736, 743, 754, 767, 770, 771, 774, 779, 780, 794, 796, 805, 806, 810, 832, 841, 853, 861, 862, 868, 871, 874, 886], "compos": [1, 12, 21, 26, 41, 45, 50, 80, 81, 108, 118, 122, 136, 157, 175, 183, 187, 190, 195, 861, 871], "find": [1, 5, 7, 11, 12, 19, 21, 27, 28, 29, 30, 38, 39, 44, 47, 48, 49, 50, 52, 57, 58, 60, 68, 69, 77, 80, 81, 82, 84, 103, 106, 107, 109, 118, 122, 123, 126, 127, 135, 139, 140, 144, 149, 150, 154, 155, 156, 160, 165, 169, 171, 174, 175, 179, 180, 183, 190, 195, 198, 200, 201, 204, 209, 217, 223, 226, 227, 228, 236, 241, 244, 262, 266, 267, 269, 270, 271, 272, 275, 278, 279, 280, 318, 355, 356, 357, 365, 445, 450, 452, 453, 479, 480, 499, 528, 558, 561, 564, 567, 573, 574, 576, 577, 578, 579, 582, 583, 584, 586, 587, 588, 602, 618, 622, 643, 665, 669, 672, 683, 754, 791, 793, 841, 843, 845, 848, 849, 850, 851, 860, 862, 865, 868, 869, 871, 886], "sampl": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 65, 68, 69, 71, 72, 73, 76, 78, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 216, 217, 218, 221, 222, 223, 226, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 244, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 296, 318, 354, 360, 362, 373, 386, 413, 414, 415, 416, 417, 421, 422, 423, 424, 425, 426, 428, 432, 435, 437, 439, 440, 446, 447, 448, 449, 450, 452, 453, 477, 478, 479, 480, 487, 494, 502, 521, 523, 531, 537, 538, 556, 558, 561, 563, 566, 575, 578, 579, 601, 607, 611, 618, 619, 620, 633, 635, 640, 656, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 678, 686, 688, 692, 693, 694, 695, 696, 697, 698, 699, 700, 706, 707, 709, 711, 712, 713, 714, 715, 716, 717, 721, 722, 724, 725, 729, 730, 732, 733, 734, 735, 736, 752, 754, 784, 786, 787, 795, 807, 812, 817, 818, 820, 831, 841, 845, 861, 865, 866, 868, 869, 871, 876, 886], "meg4": [1, 12, 21, 80, 81, 118, 122, 183, 190], "system": [1, 5, 8, 10, 12, 19, 21, 27, 62, 70, 74, 79, 80, 81, 108, 115, 118, 121, 123, 128, 129, 135, 136, 149, 150, 154, 155, 157, 158, 159, 165, 167, 168, 169, 171, 177, 182, 183, 184, 188, 190, 191, 194, 198, 199, 204, 205, 206, 207, 209, 211, 215, 216, 217, 226, 239, 244, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 277, 278, 279, 280, 284, 285, 300, 312, 315, 320, 323, 328, 330, 331, 333, 334, 335, 337, 339, 364, 365, 367, 373, 380, 417, 431, 446, 448, 460, 472, 473, 474, 479, 480, 486, 487, 488, 490, 491, 492, 504, 513, 524, 558, 561, 563, 591, 593, 610, 640, 658, 659, 660, 669, 670, 672, 692, 693, 694, 695, 696, 697, 705, 706, 708, 709, 710, 718, 724, 740, 770, 771, 784, 787, 792, 795, 801, 807, 815, 821, 822, 834, 841, 843, 844, 845, 846, 848, 849, 850, 857, 861, 862, 864, 871, 874, 886], "clock": [1, 12, 21, 80, 81, 118, 122, 183, 190, 479, 480, 492, 561, 607, 801, 807, 862, 886], "avail": [1, 2, 5, 7, 8, 12, 19, 21, 22, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 68, 71, 73, 76, 78, 80, 81, 82, 85, 86, 89, 91, 92, 93, 94, 100, 108, 115, 118, 119, 122, 126, 130, 135, 139, 140, 141, 142, 143, 145, 148, 149, 150, 154, 155, 158, 161, 164, 165, 166, 167, 168, 171, 172, 175, 176, 177, 178, 179, 180, 183, 187, 188, 190, 191, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 227, 239, 256, 261, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 303, 305, 306, 312, 332, 338, 372, 374, 380, 403, 404, 410, 411, 417, 418, 423, 430, 437, 459, 476, 479, 480, 519, 537, 538, 552, 553, 554, 560, 561, 576, 623, 630, 671, 702, 706, 707, 708, 710, 723, 736, 754, 771, 778, 784, 786, 788, 790, 793, 794, 797, 801, 804, 806, 807, 808, 809, 810, 812, 814, 816, 817, 825, 826, 841, 843, 845, 846, 851, 852, 853, 856, 859, 862, 865, 868, 869, 870, 871, 874, 886], "check": [1, 5, 12, 21, 26, 41, 43, 45, 50, 61, 70, 80, 81, 108, 118, 119, 120, 122, 124, 134, 136, 139, 141, 142, 143, 156, 157, 158, 160, 165, 167, 169, 170, 171, 174, 175, 180, 181, 183, 190, 199, 201, 204, 205, 215, 216, 218, 226, 227, 240, 259, 261, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 318, 320, 386, 392, 430, 444, 447, 478, 479, 480, 487, 490, 536, 550, 561, 569, 571, 693, 694, 696, 697, 706, 708, 709, 710, 740, 754, 770, 788, 790, 791, 792, 793, 824, 843, 844, 845, 853, 861, 862, 865, 874, 886], "which": [1, 4, 5, 12, 16, 18, 19, 21, 26, 31, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 58, 60, 70, 74, 79, 80, 81, 82, 87, 93, 100, 102, 108, 111, 113, 114, 115, 118, 119, 122, 126, 127, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 177, 179, 181, 183, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 241, 244, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 290, 297, 298, 305, 306, 312, 314, 321, 328, 330, 331, 332, 333, 334, 340, 341, 343, 347, 349, 353, 354, 359, 360, 363, 367, 372, 373, 380, 386, 403, 411, 413, 418, 419, 422, 428, 430, 432, 435, 437, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 462, 469, 470, 471, 476, 477, 478, 479, 480, 481, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 513, 514, 515, 519, 520, 522, 528, 529, 537, 538, 541, 542, 546, 550, 560, 561, 562, 563, 569, 571, 572, 575, 576, 578, 579, 580, 582, 589, 591, 593, 598, 607, 610, 616, 618, 622, 623, 624, 625, 627, 628, 630, 635, 636, 639, 640, 641, 642, 644, 645, 647, 648, 650, 655, 656, 660, 663, 666, 668, 669, 672, 674, 675, 683, 685, 686, 692, 698, 701, 702, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 722, 725, 728, 732, 733, 734, 736, 737, 739, 741, 744, 754, 755, 757, 759, 760, 769, 770, 772, 775, 777, 778, 780, 782, 784, 785, 786, 788, 789, 792, 793, 797, 799, 801, 806, 807, 808, 812, 814, 817, 821, 822, 824, 832, 833, 834, 836, 838, 839, 840, 841, 843, 845, 846, 848, 850, 853, 857, 859, 860, 861, 862, 863, 865, 867, 868, 871, 872, 874, 884, 886], "ar": [1, 4, 5, 11, 12, 14, 15, 16, 18, 19, 21, 24, 26, 27, 31, 32, 33, 34, 38, 41, 43, 45, 46, 47, 50, 59, 67, 70, 74, 75, 76, 80, 81, 82, 83, 86, 87, 93, 98, 100, 102, 103, 104, 105, 106, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 126, 127, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 194, 195, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 282, 284, 285, 288, 289, 291, 297, 298, 300, 302, 303, 305, 306, 307, 308, 310, 312, 313, 314, 316, 317, 320, 322, 323, 324, 325, 328, 329, 330, 332, 334, 335, 338, 341, 342, 343, 347, 353, 354, 358, 359, 360, 361, 363, 365, 369, 370, 371, 373, 386, 387, 394, 403, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 435, 436, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 461, 463, 464, 468, 469, 470, 471, 474, 476, 477, 478, 479, 480, 481, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 498, 500, 502, 504, 505, 506, 507, 508, 509, 510, 513, 516, 519, 520, 522, 524, 526, 527, 536, 537, 538, 539, 540, 543, 545, 550, 553, 554, 556, 557, 558, 560, 561, 562, 563, 564, 566, 568, 569, 571, 576, 577, 578, 579, 582, 583, 585, 588, 592, 593, 594, 597, 598, 599, 601, 602, 604, 608, 610, 611, 613, 616, 617, 618, 619, 620, 623, 625, 628, 631, 633, 640, 642, 643, 644, 645, 646, 647, 650, 652, 655, 656, 658, 659, 662, 663, 666, 668, 669, 671, 672, 674, 677, 678, 680, 681, 682, 687, 688, 691, 692, 693, 694, 695, 696, 697, 698, 702, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 723, 724, 725, 730, 733, 734, 735, 736, 737, 739, 741, 744, 749, 754, 755, 759, 769, 770, 771, 772, 775, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 797, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 824, 831, 833, 834, 835, 836, 841, 843, 845, 846, 848, 849, 850, 851, 852, 853, 857, 860, 861, 862, 863, 864, 866, 867, 868, 869, 870, 872, 873, 874, 876, 886], "valid": [1, 8, 9, 10, 11, 12, 15, 16, 21, 74, 80, 81, 110, 118, 120, 122, 136, 161, 170, 176, 183, 189, 190, 195, 201, 210, 226, 241, 259, 261, 264, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 280, 325, 338, 354, 359, 403, 411, 417, 418, 427, 428, 432, 443, 445, 452, 459, 463, 479, 480, 537, 538, 560, 561, 563, 576, 578, 579, 636, 650, 688, 693, 694, 696, 697, 706, 708, 709, 710, 731, 741, 754, 757, 770, 771, 778, 785, 786, 787, 788, 790, 792, 793, 797, 806, 809, 812, 814, 815, 816, 817, 839, 845, 851, 852, 861, 865, 868, 886], "240": [1, 35, 42, 46, 75, 80, 108, 118, 168, 170, 180, 198, 202, 208, 226, 231, 240], "x": [1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 69, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 126, 128, 130, 131, 132, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 191, 194, 195, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 215, 218, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 241, 244, 256, 261, 264, 265, 266, 267, 269, 271, 272, 273, 275, 277, 278, 279, 280, 288, 302, 312, 313, 335, 344, 345, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 449, 450, 451, 479, 480, 490, 491, 527, 528, 536, 560, 561, 562, 570, 576, 581, 602, 625, 658, 679, 682, 687, 691, 692, 693, 694, 695, 696, 697, 699, 706, 708, 710, 711, 712, 713, 718, 720, 721, 722, 724, 725, 729, 731, 732, 736, 741, 744, 745, 747, 754, 755, 758, 771, 773, 775, 778, 786, 788, 790, 792, 793, 794, 795, 796, 797, 802, 804, 806, 808, 809, 810, 812, 814, 816, 817, 818, 820, 822, 833, 841, 845, 851, 862, 868, 871, 886], "1800": [1, 118, 191], "432000": [1, 118], "302": [1, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 75, 82, 92, 93, 103, 106, 107, 109, 111, 118, 120, 151, 161, 165, 168, 171, 175, 176, 177, 178, 179, 180, 208, 222, 226, 231, 234, 236, 871], "ch": [1, 2, 8, 12, 21, 68, 80, 81, 111, 114, 118, 119, 122, 135, 136, 140, 148, 150, 165, 168, 169, 183, 190, 204, 215, 221, 223, 244, 256, 269, 319, 320, 380, 403, 404, 479, 480, 824, 841, 862, 886], "current": [1, 12, 21, 22, 27, 29, 30, 31, 34, 41, 42, 44, 59, 77, 78, 80, 81, 84, 93, 118, 122, 139, 148, 160, 161, 164, 165, 170, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 199, 201, 209, 211, 212, 217, 223, 234, 236, 244, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 278, 279, 280, 284, 285, 297, 298, 318, 320, 326, 353, 360, 365, 372, 373, 376, 417, 432, 435, 444, 449, 451, 452, 454, 474, 478, 479, 480, 485, 490, 494, 522, 523, 528, 531, 561, 570, 572, 573, 574, 582, 593, 623, 630, 650, 670, 687, 689, 706, 708, 709, 710, 731, 754, 761, 763, 764, 765, 766, 767, 771, 775, 778, 784, 807, 816, 817, 824, 841, 845, 848, 851, 853, 861, 862, 865, 867, 871, 874], "compens": [1, 2, 12, 21, 27, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 77, 78, 80, 81, 84, 85, 86, 100, 115, 118, 119, 122, 126, 139, 142, 148, 171, 175, 177, 178, 180, 183, 184, 190, 191, 201, 208, 226, 227, 244, 256, 259, 264, 265, 266, 267, 269, 351, 365, 432, 434, 446, 447, 449, 450, 452, 478, 479, 480, 492, 500, 523, 558, 561, 572, 582, 589, 593, 623, 671, 706, 708, 709, 710, 795, 796, 886], "grade": [1, 12, 21, 24, 41, 70, 80, 81, 100, 108, 118, 122, 157, 160, 183, 187, 190, 234, 236, 259, 264, 265, 266, 267, 269, 270, 466, 467, 478, 479, 480, 561, 706, 708, 709, 710, 886], "144000": [1, 80], "sec": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 28, 29, 32, 33, 34, 42, 45, 46, 49, 59, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 87, 91, 92, 95, 96, 98, 99, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 120, 122, 126, 128, 131, 132, 134, 135, 140, 143, 145, 148, 150, 151, 155, 158, 161, 165, 166, 167, 168, 171, 176, 178, 179, 180, 181, 182, 183, 184, 189, 195, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 221, 222, 223, 228, 229, 230, 231, 234, 236, 240, 269, 871, 886], "type": [1, 2, 5, 15, 16, 22, 27, 29, 30, 31, 34, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 63, 67, 71, 75, 77, 78, 80, 81, 82, 84, 85, 89, 92, 93, 94, 102, 108, 112, 113, 114, 115, 117, 118, 119, 122, 123, 126, 127, 130, 134, 135, 136, 140, 141, 142, 143, 144, 145, 148, 149, 155, 156, 157, 158, 161, 165, 166, 167, 169, 170, 171, 175, 177, 178, 179, 180, 181, 182, 184, 187, 189, 191, 195, 198, 199, 200, 203, 204, 205, 206, 207, 208, 210, 212, 216, 218, 221, 222, 223, 226, 230, 231, 239, 240, 257, 259, 261, 262, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 297, 298, 308, 310, 311, 313, 314, 317, 318, 319, 320, 321, 327, 329, 335, 343, 354, 355, 356, 357, 358, 359, 368, 369, 370, 371, 373, 380, 386, 403, 404, 411, 413, 418, 420, 427, 432, 435, 436, 443, 444, 446, 449, 450, 451, 452, 454, 455, 456, 461, 468, 474, 476, 477, 478, 479, 480, 487, 494, 499, 506, 510, 511, 519, 539, 551, 558, 559, 560, 561, 562, 563, 566, 570, 572, 575, 576, 577, 578, 579, 581, 582, 584, 585, 589, 593, 599, 601, 608, 618, 620, 622, 623, 646, 647, 650, 657, 658, 659, 671, 674, 677, 686, 692, 693, 694, 696, 697, 701, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 737, 740, 754, 769, 773, 777, 778, 779, 780, 782, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 805, 806, 807, 808, 809, 810, 812, 814, 815, 816, 817, 818, 820, 827, 841, 843, 844, 850, 851, 852, 856, 861, 863, 865, 869, 871, 872, 886], "select": [1, 5, 7, 11, 15, 21, 24, 28, 29, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 50, 51, 54, 55, 58, 59, 67, 71, 74, 76, 81, 82, 87, 89, 92, 93, 94, 98, 102, 108, 111, 112, 118, 119, 120, 127, 136, 140, 141, 143, 149, 150, 157, 158, 160, 161, 165, 166, 168, 169, 171, 174, 176, 177, 178, 179, 180, 181, 188, 190, 195, 199, 200, 201, 203, 206, 207, 209, 212, 216, 217, 218, 222, 223, 227, 231, 235, 236, 239, 240, 241, 244, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 319, 324, 354, 365, 413, 419, 442, 449, 470, 476, 479, 480, 485, 513, 553, 554, 556, 557, 558, 559, 561, 562, 566, 575, 576, 578, 579, 586, 587, 602, 628, 640, 647, 650, 669, 672, 692, 706, 707, 708, 709, 710, 717, 723, 771, 778, 784, 788, 790, 792, 793, 794, 797, 799, 801, 807, 810, 812, 816, 819, 823, 841, 845, 848, 861, 865, 868, 872, 886], "re": [1, 4, 29, 45, 67, 71, 92, 93, 100, 102, 112, 113, 119, 126, 139, 140, 143, 150, 155, 157, 158, 159, 160, 161, 165, 166, 168, 169, 170, 171, 181, 188, 199, 200, 201, 203, 204, 205, 206, 207, 215, 217, 222, 228, 230, 236, 241, 244, 256, 258, 261, 264, 265, 266, 267, 269, 273, 281, 313, 317, 411, 418, 436, 479, 480, 504, 553, 554, 557, 559, 560, 561, 570, 619, 647, 650, 655, 706, 708, 709, 710, 717, 723, 740, 771, 786, 793, 797, 806, 809, 811, 814, 816, 845, 849, 850, 853, 863, 865, 866, 868, 874, 886], "referenc": [1, 27, 29, 71, 77, 84, 92, 93, 139, 149, 150, 158, 161, 166, 181, 188, 199, 203, 207, 222, 226, 258, 264, 265, 266, 267, 269, 281, 324, 479, 480, 485, 647, 650, 706, 708, 709, 710, 788, 841, 845, 868, 872, 875, 886], "item": [1, 8, 11, 12, 13, 14, 15, 16, 18, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 126, 127, 128, 130, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 155, 156, 157, 158, 159, 161, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 218, 221, 222, 223, 227, 228, 229, 230, 231, 234, 236, 240, 257, 261, 262, 264, 265, 269, 273, 277, 283, 288, 302, 479, 480, 527, 708, 709, 710, 741, 754, 851, 871, 886], "deactiv": [1, 29, 42, 51, 68, 71, 91, 92, 93, 110, 141, 145, 158, 161, 181, 190, 205, 206, 207, 211, 222, 775, 843], "wa": [1, 5, 7, 13, 18, 21, 33, 60, 65, 71, 93, 114, 139, 143, 148, 150, 157, 158, 159, 165, 166, 167, 169, 170, 180, 181, 182, 188, 190, 191, 194, 195, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 217, 218, 221, 229, 230, 231, 241, 257, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 284, 285, 297, 298, 332, 347, 390, 410, 411, 418, 433, 435, 476, 479, 480, 496, 499, 508, 513, 523, 534, 535, 537, 538, 543, 544, 545, 560, 561, 562, 573, 574, 576, 579, 582, 583, 584, 593, 600, 618, 622, 643, 655, 658, 659, 691, 701, 706, 707, 708, 709, 710, 722, 726, 732, 754, 770, 771, 786, 788, 793, 797, 806, 809, 814, 816, 819, 823, 841, 844, 845, 850, 851, 852, 862, 867, 868, 871, 874, 886], "been": [1, 9, 10, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 71, 74, 78, 79, 83, 85, 86, 93, 115, 118, 119, 126, 139, 141, 144, 148, 149, 150, 158, 159, 161, 165, 166, 168, 170, 171, 174, 175, 177, 178, 180, 181, 182, 187, 190, 191, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 215, 216, 217, 218, 239, 246, 255, 256, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 276, 277, 278, 279, 280, 289, 290, 291, 297, 298, 303, 354, 358, 359, 369, 370, 371, 377, 378, 379, 382, 383, 384, 386, 391, 394, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 411, 418, 432, 454, 455, 474, 476, 477, 479, 480, 481, 487, 488, 500, 508, 529, 539, 560, 561, 562, 573, 593, 600, 623, 706, 707, 708, 709, 710, 734, 737, 764, 778, 784, 788, 790, 792, 794, 808, 845, 853, 857, 862, 865, 867, 868, 871, 874, 886], "appli": [1, 5, 7, 8, 9, 10, 11, 12, 15, 16, 18, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 74, 78, 79, 81, 82, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 126, 127, 131, 133, 134, 135, 139, 140, 141, 142, 144, 145, 148, 149, 150, 151, 155, 157, 158, 159, 160, 161, 165, 166, 168, 169, 171, 175, 176, 177, 178, 180, 181, 182, 183, 184, 188, 190, 195, 198, 199, 200, 202, 204, 206, 207, 209, 210, 211, 212, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 244, 257, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 312, 338, 353, 358, 367, 369, 371, 411, 413, 414, 418, 419, 420, 422, 424, 432, 441, 442, 443, 444, 445, 446, 447, 449, 450, 452, 455, 469, 476, 477, 479, 480, 517, 520, 528, 529, 530, 531, 532, 537, 538, 540, 543, 544, 545, 560, 561, 562, 563, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 584, 585, 590, 593, 600, 608, 616, 620, 623, 624, 625, 645, 650, 662, 663, 664, 665, 666, 668, 673, 687, 688, 693, 694, 695, 706, 707, 708, 709, 710, 718, 735, 738, 742, 743, 744, 754, 778, 779, 784, 785, 786, 788, 790, 792, 793, 797, 798, 799, 801, 807, 808, 812, 814, 815, 817, 824, 833, 836, 841, 845, 861, 863, 865, 868, 869, 871, 874, 886], "yet": [1, 71, 93, 158, 181, 188, 191, 205, 207, 241, 264, 377, 378, 379, 382, 383, 384, 386, 391, 394, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 419, 424, 550, 576, 754, 845], "method": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 28, 29, 30, 31, 34, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 59, 70, 71, 72, 73, 74, 76, 77, 78, 81, 82, 83, 84, 87, 92, 93, 94, 96, 98, 100, 102, 103, 106, 107, 108, 109, 112, 113, 114, 115, 120, 126, 132, 135, 139, 140, 141, 142, 143, 145, 148, 149, 150, 151, 158, 159, 161, 164, 165, 166, 167, 168, 169, 171, 174, 176, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 217, 219, 220, 221, 222, 223, 227, 231, 234, 236, 239, 240, 241, 244, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 284, 285, 288, 297, 298, 299, 300, 302, 305, 306, 310, 311, 312, 313, 314, 318, 319, 320, 321, 324, 326, 327, 340, 342, 344, 347, 349, 354, 358, 359, 360, 365, 369, 370, 371, 373, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 430, 432, 434, 446, 447, 449, 450, 451, 455, 462, 471, 474, 475, 476, 477, 478, 479, 480, 481, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 516, 523, 524, 527, 528, 529, 530, 531, 532, 534, 535, 539, 540, 541, 543, 544, 545, 557, 558, 560, 561, 562, 569, 572, 573, 574, 575, 577, 589, 591, 593, 596, 597, 598, 599, 600, 608, 610, 614, 617, 623, 625, 640, 641, 650, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 684, 687, 688, 690, 693, 694, 695, 696, 697, 699, 706, 707, 708, 709, 710, 713, 716, 718, 724, 725, 733, 734, 736, 737, 741, 743, 749, 750, 752, 754, 755, 767, 770, 774, 779, 780, 781, 782, 785, 793, 796, 798, 806, 810, 813, 841, 843, 845, 860, 861, 863, 865, 868, 869, 871, 872, 883, 886], "5": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 161, 163, 165, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 190, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 243, 244, 256, 258, 259, 261, 264, 265, 266, 267, 270, 271, 272, 275, 278, 279, 280, 282, 297, 298, 300, 303, 307, 314, 326, 335, 338, 354, 360, 368, 380, 386, 410, 411, 417, 428, 431, 432, 434, 452, 453, 454, 467, 471, 476, 479, 480, 504, 516, 517, 528, 534, 539, 543, 544, 545, 552, 553, 554, 560, 561, 563, 564, 569, 570, 571, 572, 573, 576, 577, 578, 579, 580, 582, 583, 586, 588, 591, 593, 597, 601, 602, 619, 625, 627, 646, 655, 659, 692, 706, 708, 709, 710, 718, 722, 723, 724, 732, 733, 734, 736, 737, 744, 754, 769, 773, 785, 786, 790, 791, 797, 799, 802, 807, 812, 817, 843, 844, 845, 851, 861, 862, 865, 867, 868, 871, 874], "becaus": [1, 4, 5, 11, 16, 18, 21, 26, 34, 41, 43, 44, 45, 50, 60, 70, 74, 80, 81, 82, 100, 113, 114, 118, 139, 141, 142, 143, 145, 148, 149, 150, 157, 159, 160, 161, 165, 166, 167, 169, 170, 175, 179, 180, 181, 182, 183, 188, 189, 190, 191, 194, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 217, 221, 226, 227, 228, 231, 234, 241, 264, 265, 266, 267, 347, 358, 432, 454, 571, 582, 592, 693, 694, 696, 697, 709, 763, 784, 815, 841, 845, 849, 853, 861, 863, 865, 867, 868, 872, 886], "all": [1, 4, 5, 10, 13, 14, 18, 19, 21, 27, 28, 31, 33, 35, 40, 45, 59, 61, 63, 67, 70, 73, 80, 81, 82, 89, 94, 96, 98, 102, 106, 110, 111, 112, 113, 115, 116, 118, 119, 120, 124, 126, 134, 139, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 175, 178, 180, 181, 182, 183, 184, 187, 188, 189, 190, 195, 198, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 231, 235, 239, 240, 241, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 291, 292, 295, 297, 298, 300, 302, 307, 308, 309, 310, 312, 313, 314, 317, 322, 323, 327, 328, 329, 338, 348, 349, 353, 354, 358, 359, 360, 361, 365, 366, 368, 369, 370, 371, 373, 387, 411, 413, 414, 418, 420, 427, 428, 432, 435, 436, 438, 440, 441, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 459, 461, 467, 468, 469, 470, 474, 476, 477, 479, 480, 481, 485, 487, 491, 494, 502, 504, 507, 511, 515, 527, 528, 530, 532, 535, 537, 538, 539, 540, 544, 545, 547, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 571, 575, 576, 577, 578, 579, 580, 581, 582, 585, 588, 589, 593, 599, 601, 608, 613, 616, 617, 619, 620, 623, 624, 625, 628, 638, 643, 644, 650, 654, 656, 665, 671, 674, 683, 686, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 701, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 722, 723, 724, 728, 732, 733, 734, 736, 737, 741, 744, 752, 754, 761, 762, 770, 771, 772, 778, 782, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 797, 798, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 814, 815, 816, 817, 818, 841, 848, 852, 856, 860, 861, 862, 863, 867, 868, 871, 872, 874, 886], "were": [1, 4, 5, 10, 18, 21, 38, 80, 81, 118, 126, 136, 139, 140, 141, 142, 143, 148, 149, 150, 160, 166, 167, 170, 171, 180, 181, 182, 183, 187, 189, 190, 191, 199, 200, 201, 204, 205, 206, 207, 209, 210, 215, 216, 217, 218, 221, 226, 228, 230, 231, 264, 265, 266, 267, 269, 272, 274, 275, 278, 280, 281, 297, 298, 320, 348, 349, 360, 363, 403, 404, 435, 437, 479, 480, 503, 561, 571, 572, 582, 593, 701, 706, 707, 708, 709, 710, 798, 800, 807, 841, 845, 852, 862, 865, 867, 871, 886], "effect": [1, 7, 17, 19, 20, 21, 26, 27, 39, 57, 59, 70, 71, 74, 82, 83, 98, 102, 108, 111, 112, 119, 120, 128, 132, 140, 144, 148, 150, 159, 161, 165, 166, 167, 171, 182, 190, 198, 200, 201, 202, 206, 207, 208, 209, 210, 211, 218, 221, 222, 223, 227, 228, 230, 231, 236, 239, 240, 244, 264, 265, 266, 267, 269, 270, 271, 274, 275, 279, 297, 298, 320, 354, 358, 359, 369, 370, 371, 403, 404, 411, 412, 418, 427, 432, 434, 435, 450, 454, 455, 474, 476, 477, 479, 480, 495, 496, 528, 531, 539, 558, 561, 564, 569, 620, 687, 689, 692, 693, 694, 696, 697, 708, 710, 713, 724, 784, 788, 794, 797, 799, 801, 807, 808, 810, 812, 841, 851, 852, 865, 886], "window": [1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 59, 71, 72, 73, 74, 76, 81, 82, 83, 87, 92, 98, 99, 102, 103, 107, 108, 112, 113, 114, 120, 122, 128, 132, 135, 136, 140, 141, 142, 143, 145, 150, 165, 170, 171, 179, 182, 190, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 217, 218, 221, 227, 231, 239, 240, 241, 256, 259, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 290, 341, 343, 347, 411, 412, 416, 418, 422, 424, 427, 435, 437, 446, 447, 449, 450, 451, 460, 470, 471, 477, 479, 480, 534, 535, 561, 563, 571, 582, 585, 591, 593, 601, 658, 659, 692, 706, 707, 708, 710, 713, 716, 718, 721, 724, 725, 729, 730, 733, 734, 735, 736, 737, 738, 754, 784, 785, 786, 793, 801, 807, 808, 812, 817, 845, 848, 849, 850, 851, 886], "size": [1, 5, 8, 9, 10, 21, 22, 32, 35, 41, 43, 44, 45, 46, 53, 58, 64, 70, 71, 74, 82, 99, 107, 108, 113, 119, 125, 126, 128, 132, 133, 134, 135, 141, 143, 145, 149, 150, 154, 155, 157, 159, 165, 170, 171, 174, 176, 177, 178, 179, 180, 182, 183, 184, 188, 189, 198, 199, 201, 202, 205, 206, 207, 208, 210, 211, 212, 215, 218, 221, 222, 223, 228, 231, 234, 239, 240, 241, 244, 261, 262, 264, 265, 266, 267, 271, 272, 273, 274, 275, 278, 279, 280, 312, 320, 328, 330, 360, 411, 413, 418, 422, 423, 446, 447, 449, 450, 451, 476, 478, 479, 480, 520, 534, 558, 560, 561, 576, 582, 588, 591, 653, 672, 688, 692, 693, 694, 696, 697, 706, 708, 709, 710, 730, 744, 754, 763, 767, 782, 784, 786, 792, 793, 797, 799, 800, 801, 804, 806, 807, 809, 810, 812, 813, 814, 815, 816, 817, 821, 862, 868, 871, 886], "707": [1, 195, 208, 231], "need": [1, 4, 5, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 54, 55, 58, 59, 60, 69, 70, 74, 75, 85, 89, 93, 94, 102, 103, 106, 107, 108, 109, 111, 113, 116, 118, 126, 134, 135, 139, 140, 141, 142, 143, 144, 148, 149, 150, 155, 157, 158, 159, 160, 164, 165, 166, 167, 168, 169, 171, 174, 176, 177, 178, 179, 180, 181, 187, 189, 190, 194, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 241, 244, 264, 265, 266, 267, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 283, 297, 318, 329, 372, 375, 386, 412, 413, 421, 427, 435, 444, 449, 469, 478, 479, 480, 487, 494, 503, 519, 524, 548, 561, 600, 655, 693, 694, 696, 697, 706, 708, 709, 710, 754, 760, 771, 777, 792, 797, 807, 843, 845, 846, 848, 849, 850, 851, 852, 853, 861, 862, 867, 868, 869, 871, 874, 886], "more": [1, 4, 18, 19, 27, 28, 34, 42, 43, 44, 49, 54, 58, 70, 71, 73, 75, 80, 81, 82, 83, 85, 93, 103, 106, 109, 112, 113, 120, 121, 129, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 159, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 176, 177, 179, 180, 183, 184, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 212, 215, 216, 217, 218, 223, 226, 227, 228, 229, 231, 234, 236, 240, 241, 249, 258, 259, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 289, 297, 298, 305, 306, 329, 354, 358, 360, 365, 367, 371, 403, 404, 410, 411, 413, 415, 416, 418, 419, 423, 428, 430, 441, 442, 444, 445, 446, 447, 449, 450, 452, 453, 461, 470, 479, 480, 487, 496, 498, 504, 515, 519, 522, 528, 534, 535, 536, 560, 561, 563, 569, 571, 582, 589, 593, 602, 613, 615, 619, 620, 623, 633, 642, 644, 645, 647, 650, 658, 683, 687, 688, 693, 694, 695, 696, 697, 706, 708, 709, 710, 713, 716, 724, 733, 734, 735, 736, 737, 738, 751, 754, 770, 771, 772, 773, 778, 782, 786, 789, 790, 792, 793, 797, 806, 809, 812, 814, 816, 817, 825, 826, 834, 841, 842, 843, 845, 849, 850, 851, 852, 861, 862, 863, 865, 867, 868, 869, 870, 874, 883, 886], "than": [1, 5, 13, 18, 24, 26, 33, 34, 41, 42, 44, 45, 46, 50, 54, 58, 59, 60, 69, 70, 78, 82, 85, 86, 93, 113, 118, 123, 126, 134, 135, 139, 140, 141, 142, 143, 145, 148, 149, 150, 155, 157, 160, 165, 166, 167, 168, 169, 170, 171, 175, 179, 180, 182, 183, 184, 187, 190, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 215, 216, 217, 226, 229, 239, 241, 259, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 289, 305, 306, 353, 358, 365, 411, 413, 416, 418, 422, 428, 430, 440, 445, 447, 449, 450, 452, 455, 467, 476, 477, 479, 480, 496, 498, 504, 515, 526, 534, 535, 545, 550, 560, 561, 563, 569, 571, 576, 578, 588, 591, 592, 594, 598, 601, 619, 624, 645, 655, 687, 693, 694, 695, 696, 697, 698, 701, 706, 708, 709, 710, 713, 716, 721, 724, 729, 735, 738, 754, 771, 772, 784, 786, 787, 790, 793, 797, 806, 807, 809, 812, 814, 816, 817, 843, 845, 850, 851, 852, 867, 868, 886], "one": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 31, 32, 33, 34, 40, 41, 42, 43, 45, 46, 48, 49, 50, 58, 59, 65, 68, 70, 73, 74, 76, 81, 82, 83, 85, 86, 87, 89, 93, 95, 96, 98, 102, 108, 110, 112, 113, 114, 116, 120, 126, 130, 132, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 183, 187, 188, 190, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 215, 216, 217, 218, 221, 223, 226, 228, 229, 230, 231, 235, 240, 241, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 286, 289, 297, 298, 311, 312, 314, 318, 319, 321, 353, 355, 356, 358, 360, 361, 365, 380, 389, 392, 394, 403, 404, 410, 411, 417, 418, 421, 424, 426, 430, 433, 434, 435, 442, 443, 445, 446, 452, 461, 468, 469, 470, 477, 478, 479, 480, 483, 487, 496, 498, 512, 513, 515, 517, 522, 537, 538, 544, 545, 547, 550, 561, 562, 563, 564, 578, 583, 586, 587, 588, 590, 601, 604, 613, 615, 623, 624, 630, 642, 644, 650, 655, 658, 672, 677, 687, 688, 693, 694, 695, 696, 697, 699, 702, 706, 707, 708, 709, 710, 712, 715, 722, 732, 733, 734, 736, 737, 739, 742, 743, 744, 754, 767, 770, 772, 773, 778, 785, 786, 788, 789, 790, 791, 793, 794, 795, 797, 799, 812, 813, 815, 816, 817, 818, 832, 834, 841, 843, 844, 845, 848, 849, 853, 861, 862, 863, 865, 867, 868, 871, 886], "make": [1, 4, 9, 10, 13, 18, 19, 21, 27, 28, 31, 32, 34, 38, 42, 45, 48, 50, 54, 55, 59, 61, 67, 70, 75, 85, 89, 92, 93, 102, 108, 110, 111, 112, 113, 121, 123, 129, 132, 134, 135, 139, 140, 141, 142, 143, 149, 150, 155, 157, 159, 160, 161, 165, 166, 168, 169, 170, 171, 175, 176, 177, 178, 179, 181, 182, 183, 184, 187, 188, 190, 191, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 212, 215, 217, 221, 226, 228, 229, 230, 234, 235, 236, 241, 256, 263, 264, 265, 266, 267, 269, 271, 272, 275, 277, 278, 279, 280, 297, 298, 325, 337, 354, 358, 359, 360, 365, 369, 370, 371, 372, 411, 414, 415, 418, 420, 421, 430, 434, 435, 446, 447, 449, 450, 454, 455, 461, 468, 470, 474, 476, 477, 479, 480, 521, 539, 545, 554, 560, 561, 571, 588, 589, 592, 601, 611, 613, 623, 633, 642, 644, 658, 670, 701, 703, 707, 722, 732, 733, 734, 736, 741, 749, 750, 754, 772, 773, 776, 777, 780, 791, 794, 800, 807, 812, 817, 818, 834, 841, 843, 844, 852, 853, 861, 862, 863, 865, 866, 868, 871, 874, 886], "topographi": [1, 13, 21, 27, 70, 71, 74, 85, 113, 119, 121, 129, 131, 141, 143, 150, 165, 169, 171, 175, 190, 204, 206, 207, 218, 229, 231, 239, 244, 264, 265, 266, 267, 269, 273, 274, 313, 411, 418, 479, 480, 558, 561, 577, 671, 706, 708, 710, 767, 786, 791, 792, 793, 797, 799, 803, 808, 810, 814, 815, 841, 886], "disabl": [1, 85, 113, 141, 148, 149, 150, 171, 198, 199, 202, 218, 229, 256, 261, 264, 265, 266, 267, 273, 274, 308, 365, 411, 417, 418, 423, 479, 480, 560, 561, 582, 593, 648, 652, 653, 706, 708, 710, 749, 754, 771, 786, 788, 792, 793, 797, 806, 807, 809, 814, 816, 820, 843, 886], "interact": [1, 27, 33, 45, 47, 85, 113, 114, 119, 126, 139, 148, 149, 150, 164, 165, 167, 170, 171, 179, 180, 190, 199, 200, 204, 205, 206, 210, 215, 223, 226, 229, 230, 236, 240, 241, 244, 256, 261, 264, 265, 266, 267, 271, 272, 273, 274, 275, 278, 279, 280, 290, 297, 411, 418, 470, 479, 480, 528, 560, 561, 601, 687, 689, 706, 708, 710, 754, 756, 770, 771, 775, 785, 786, 788, 789, 790, 792, 793, 797, 799, 801, 806, 807, 808, 809, 810, 812, 814, 815, 816, 817, 843, 845, 867, 868, 869, 874, 886], "filter": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 27, 32, 33, 34, 42, 45, 59, 68, 72, 73, 76, 77, 81, 82, 83, 84, 87, 91, 98, 108, 111, 112, 114, 120, 132, 135, 139, 140, 143, 144, 145, 148, 161, 164, 165, 166, 168, 170, 171, 175, 180, 182, 183, 184, 190, 194, 198, 200, 203, 206, 210, 213, 214, 215, 217, 218, 223, 231, 241, 244, 256, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 347, 348, 351, 354, 358, 359, 369, 370, 371, 375, 411, 412, 413, 415, 418, 419, 422, 425, 426, 427, 429, 432, 440, 452, 454, 455, 474, 476, 477, 479, 480, 492, 521, 539, 558, 561, 562, 566, 572, 573, 574, 578, 579, 582, 583, 584, 593, 594, 597, 620, 660, 670, 706, 708, 709, 710, 718, 719, 722, 725, 794, 795, 796, 802, 807, 808, 826, 841, 843, 845, 861, 863, 865, 872, 875, 876, 886], "contigu": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 34, 42, 73, 76, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 135, 140, 143, 145, 150, 195, 202, 203, 204, 206, 209, 210, 211, 230, 231, 270], "segment": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 23, 24, 27, 33, 34, 38, 42, 63, 70, 73, 76, 80, 81, 82, 83, 87, 98, 108, 112, 113, 114, 120, 132, 134, 135, 136, 140, 143, 144, 145, 150, 161, 167, 171, 183, 190, 195, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 217, 231, 240, 244, 256, 258, 262, 264, 265, 266, 267, 274, 277, 303, 354, 359, 440, 463, 464, 465, 478, 479, 480, 508, 520, 529, 531, 561, 563, 564, 565, 566, 567, 568, 571, 578, 579, 582, 583, 591, 593, 706, 725, 752, 754, 788, 790, 797, 799, 841, 861, 862, 868, 871, 886], "up": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 26, 27, 28, 33, 34, 42, 44, 45, 50, 69, 72, 73, 76, 79, 81, 82, 83, 87, 89, 92, 93, 94, 98, 102, 103, 108, 110, 111, 112, 113, 114, 116, 120, 122, 131, 132, 135, 139, 140, 143, 144, 145, 149, 150, 154, 155, 157, 158, 159, 161, 164, 165, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 215, 217, 218, 222, 223, 227, 228, 231, 234, 236, 241, 261, 262, 264, 265, 266, 267, 271, 272, 273, 274, 275, 276, 278, 279, 280, 411, 416, 417, 418, 423, 451, 479, 480, 534, 535, 560, 561, 563, 582, 648, 654, 655, 692, 701, 706, 708, 710, 724, 752, 754, 773, 782, 784, 785, 786, 790, 793, 797, 800, 806, 807, 809, 812, 814, 817, 818, 824, 841, 843, 849, 865, 868, 869, 871, 874, 886], "band": [1, 5, 8, 9, 12, 13, 14, 15, 16, 18, 21, 27, 32, 33, 34, 42, 72, 76, 81, 87, 93, 104, 105, 106, 108, 109, 111, 113, 114, 120, 125, 132, 135, 136, 140, 141, 143, 144, 145, 166, 171, 195, 198, 200, 201, 202, 203, 204, 206, 210, 211, 218, 230, 231, 239, 240, 241, 244, 264, 265, 266, 267, 287, 413, 419, 422, 446, 447, 449, 450, 452, 479, 480, 544, 566, 597, 685, 708, 710, 722, 732, 733, 736, 778, 786, 802, 841, 862, 865, 886], "stop": [1, 5, 29, 68, 81, 92, 95, 126, 135, 166, 171, 200, 201, 202, 209, 211, 215, 216, 217, 256, 257, 264, 265, 266, 267, 284, 285, 296, 357, 413, 422, 446, 447, 449, 450, 478, 479, 480, 498, 521, 531, 534, 561, 582, 591, 607, 798, 801, 845, 867, 886], "fir": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 135, 140, 143, 145, 150, 171, 190, 195, 198, 200, 202, 203, 204, 206, 209, 210, 211, 231, 256, 264, 265, 266, 267, 413, 422, 446, 447, 449, 450, 479, 480, 573, 574, 597, 719, 795, 807, 843, 865, 875, 886], "paramet": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 31, 34, 40, 41, 42, 43, 44, 48, 54, 55, 59, 61, 67, 69, 71, 72, 73, 75, 76, 81, 82, 83, 87, 95, 96, 98, 99, 100, 106, 107, 108, 109, 111, 112, 113, 114, 116, 118, 119, 120, 122, 127, 131, 132, 135, 136, 139, 140, 141, 143, 144, 145, 148, 149, 150, 155, 157, 158, 160, 161, 165, 167, 168, 169, 170, 171, 174, 177, 179, 187, 190, 191, 194, 195, 198, 199, 201, 202, 203, 204, 205, 206, 209, 210, 211, 215, 216, 217, 218, 221, 222, 223, 226, 229, 239, 240, 241, 244, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 762, 763, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 845, 861, 863, 865, 868, 872, 886], "design": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 60, 72, 73, 76, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 135, 140, 143, 145, 150, 159, 160, 171, 179, 187, 189, 190, 198, 200, 202, 203, 204, 206, 207, 209, 210, 211, 223, 226, 231, 244, 257, 264, 265, 266, 267, 342, 387, 390, 413, 422, 446, 447, 449, 450, 479, 480, 487, 489, 491, 494, 495, 496, 502, 506, 560, 562, 593, 600, 607, 617, 687, 691, 718, 729, 807, 825, 826, 850, 862, 865, 867, 874, 886], "pass": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 34, 42, 43, 59, 72, 73, 76, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 165, 166, 167, 168, 169, 170, 171, 179, 182, 188, 190, 191, 195, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 228, 230, 231, 234, 235, 236, 239, 240, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 318, 322, 323, 329, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 427, 428, 430, 432, 435, 436, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 461, 462, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 522, 523, 524, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 552, 553, 554, 557, 560, 561, 562, 563, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 600, 601, 602, 605, 606, 607, 608, 610, 612, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 650, 652, 654, 655, 657, 658, 659, 660, 669, 670, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 686, 693, 694, 695, 696, 697, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 724, 725, 728, 729, 733, 734, 736, 737, 738, 739, 742, 743, 744, 749, 753, 754, 755, 762, 767, 770, 771, 774, 776, 778, 779, 780, 782, 784, 785, 786, 787, 788, 789, 791, 792, 793, 794, 797, 798, 799, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 845, 849, 850, 861, 863, 865, 868, 886], "zero": [1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 24, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 63, 70, 72, 73, 74, 76, 81, 82, 83, 87, 89, 92, 93, 94, 98, 108, 111, 112, 113, 114, 119, 120, 132, 135, 139, 140, 141, 143, 145, 148, 150, 151, 157, 159, 161, 165, 167, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 221, 222, 223, 226, 230, 231, 241, 257, 258, 259, 262, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 278, 279, 280, 281, 283, 297, 298, 354, 358, 360, 369, 413, 417, 422, 423, 424, 445, 446, 447, 449, 450, 451, 452, 474, 479, 480, 481, 492, 534, 545, 561, 562, 583, 607, 620, 657, 658, 659, 667, 671, 686, 693, 694, 696, 697, 701, 702, 706, 708, 709, 710, 722, 725, 732, 733, 734, 735, 736, 738, 754, 769, 773, 783, 784, 807, 812, 817, 818, 841, 845, 861, 868, 871, 886], "phase": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 27, 34, 42, 72, 73, 76, 81, 82, 83, 87, 98, 104, 105, 112, 113, 114, 120, 132, 135, 140, 143, 145, 150, 166, 171, 189, 190, 195, 198, 200, 201, 202, 203, 204, 206, 209, 210, 211, 223, 231, 241, 244, 264, 265, 266, 267, 269, 270, 271, 272, 275, 278, 279, 280, 290, 341, 371, 413, 422, 424, 445, 446, 447, 449, 450, 452, 479, 480, 527, 532, 542, 545, 558, 561, 627, 733, 734, 744, 795, 841, 852, 862, 886], "non": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 24, 34, 40, 41, 42, 46, 50, 59, 70, 72, 73, 76, 81, 82, 83, 87, 92, 98, 108, 112, 113, 114, 120, 132, 135, 140, 141, 142, 143, 145, 149, 150, 157, 164, 165, 168, 170, 171, 174, 179, 180, 184, 188, 189, 190, 195, 198, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 215, 221, 231, 232, 233, 244, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 286, 297, 298, 318, 353, 354, 358, 360, 411, 417, 418, 419, 423, 440, 446, 447, 449, 450, 452, 477, 479, 480, 495, 534, 541, 547, 558, 560, 561, 562, 575, 576, 593, 594, 611, 617, 620, 640, 667, 685, 686, 693, 694, 696, 697, 701, 702, 706, 708, 709, 710, 736, 744, 754, 771, 782, 785, 786, 793, 797, 806, 809, 813, 814, 816, 841, 843, 845, 854, 861, 865, 867, 868, 883, 886], "causal": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 135, 140, 143, 145, 150, 171, 190, 195, 198, 200, 201, 202, 203, 204, 206, 209, 210, 211, 231, 264, 265, 266, 267, 417, 446, 447, 449, 450, 479, 480], "bandstop": [1, 5, 81, 135, 202, 211, 479, 480, 807], "domain": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 46, 72, 73, 76, 81, 82, 83, 87, 98, 102, 112, 113, 114, 120, 132, 135, 140, 143, 145, 150, 164, 165, 171, 190, 195, 198, 200, 201, 202, 203, 206, 209, 210, 211, 218, 231, 241, 242, 243, 244, 256, 264, 265, 266, 267, 413, 422, 423, 447, 449, 450, 451, 452, 479, 480, 544, 545, 655, 708, 710, 742, 749, 867, 886], "ham": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 76, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 135, 140, 143, 145, 150, 190, 195, 201, 202, 203, 204, 206, 209, 210, 211, 231, 264, 265, 266, 267, 413, 422, 447, 449, 450, 479, 480, 725, 808, 886], "0194": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 76, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 135, 140, 143, 145, 150, 190, 195, 201, 202, 203, 204, 209, 210, 211, 231], "passband": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 135, 140, 143, 145, 150, 171, 190, 195, 198, 200, 202, 203, 204, 206, 209, 210, 211, 231, 861], "rippl": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 76, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 135, 140, 143, 145, 150, 190, 195, 202, 203, 204, 209, 210, 211, 231], "db": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 81, 82, 83, 87, 98, 107, 108, 112, 113, 114, 120, 128, 132, 135, 136, 140, 141, 143, 145, 150, 168, 171, 190, 195, 198, 200, 201, 202, 203, 204, 206, 209, 210, 211, 215, 218, 221, 223, 231, 239, 240, 241, 264, 265, 266, 267, 269, 311, 312, 371, 373, 444, 447, 479, 480, 494, 506, 534, 558, 559, 561, 650, 701, 706, 708, 709, 710, 754, 770, 786, 795, 799, 802, 808, 810, 841, 868, 886], "stopband": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 76, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 135, 140, 143, 145, 150, 190, 195, 202, 203, 204, 209, 210, 211, 231], "attenu": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 73, 76, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 135, 140, 143, 145, 150, 161, 190, 195, 202, 203, 204, 209, 210, 211, 231, 264, 265, 266, 267, 413, 422, 447, 449, 450, 479, 480, 868, 886], "lower": [1, 2, 5, 8, 9, 10, 12, 13, 14, 15, 16, 18, 21, 22, 34, 37, 40, 42, 49, 54, 55, 61, 70, 72, 73, 76, 81, 82, 87, 98, 106, 111, 112, 113, 114, 119, 120, 126, 132, 135, 140, 141, 143, 145, 150, 155, 159, 171, 179, 180, 183, 191, 195, 198, 200, 201, 202, 203, 204, 205, 206, 210, 211, 218, 228, 229, 230, 231, 234, 236, 241, 259, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 411, 413, 416, 418, 437, 447, 449, 479, 480, 520, 534, 535, 560, 561, 566, 571, 576, 597, 616, 685, 692, 693, 695, 696, 706, 707, 708, 710, 724, 725, 771, 773, 778, 785, 786, 792, 793, 797, 806, 807, 808, 809, 812, 814, 816, 817, 818, 841, 843, 886], "transit": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 135, 140, 143, 145, 150, 171, 190, 195, 198, 200, 202, 203, 204, 206, 209, 210, 211, 231, 257, 264, 265, 266, 267, 413, 422, 447, 449, 450, 479, 480, 563, 597, 820, 868, 886], "bandwidth": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 73, 76, 81, 82, 83, 87, 98, 103, 112, 113, 114, 120, 132, 135, 140, 143, 145, 150, 171, 190, 195, 198, 200, 202, 203, 204, 206, 209, 210, 211, 231, 241, 264, 265, 266, 267, 416, 424, 450, 479, 480, 534, 535, 708, 710, 713, 716, 718, 724, 734, 737, 786, 886], "50": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 25, 26, 28, 34, 35, 41, 42, 45, 46, 47, 65, 72, 76, 80, 81, 82, 83, 87, 89, 94, 98, 102, 103, 107, 108, 112, 113, 114, 119, 120, 132, 134, 135, 136, 142, 143, 145, 148, 150, 157, 159, 165, 167, 168, 169, 170, 171, 177, 179, 183, 184, 188, 189, 190, 194, 195, 198, 200, 201, 202, 203, 204, 206, 208, 211, 215, 216, 217, 223, 226, 227, 228, 230, 231, 234, 235, 236, 241, 244, 256, 335, 446, 479, 480, 543, 570, 663, 668, 686, 694, 754, 802, 861, 868, 886], "hz": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 33, 34, 42, 68, 71, 72, 73, 76, 80, 81, 82, 83, 87, 89, 92, 93, 94, 98, 103, 106, 107, 108, 112, 113, 114, 120, 122, 126, 132, 135, 136, 140, 141, 143, 145, 150, 165, 166, 167, 168, 171, 179, 182, 183, 188, 189, 190, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 228, 229, 230, 231, 239, 240, 244, 256, 264, 265, 266, 267, 413, 416, 422, 446, 447, 449, 450, 452, 479, 480, 534, 535, 561, 566, 569, 573, 574, 582, 584, 587, 593, 597, 672, 692, 706, 708, 709, 710, 713, 716, 722, 724, 730, 732, 733, 734, 736, 737, 784, 786, 795, 802, 807, 808, 862, 871, 872], "upper": [1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 34, 39, 42, 61, 70, 72, 76, 81, 83, 87, 112, 113, 114, 119, 120, 126, 132, 135, 140, 141, 143, 145, 158, 165, 171, 190, 195, 198, 200, 201, 202, 203, 204, 206, 209, 210, 211, 231, 240, 241, 244, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 282, 411, 413, 416, 418, 437, 447, 449, 455, 479, 480, 534, 535, 560, 561, 566, 597, 685, 692, 693, 694, 695, 696, 697, 706, 707, 708, 709, 710, 722, 724, 725, 732, 771, 773, 778, 786, 792, 793, 797, 806, 808, 809, 812, 814, 816, 817, 818, 886], "7921": 1, "601": [1, 5, 139, 148, 195, 198, 203, 215, 231], "parallel": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 31, 32, 33, 34, 41, 42, 45, 50, 65, 72, 73, 76, 78, 81, 82, 83, 86, 87, 89, 94, 98, 99, 106, 108, 109, 111, 112, 113, 114, 118, 120, 123, 132, 135, 140, 143, 145, 149, 150, 157, 158, 165, 170, 171, 175, 180, 181, 182, 183, 184, 190, 195, 198, 199, 200, 202, 203, 204, 206, 207, 209, 210, 211, 221, 223, 228, 229, 230, 231, 240, 244, 256, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 413, 414, 416, 417, 421, 422, 424, 427, 428, 449, 450, 451, 454, 456, 467, 469, 474, 476, 477, 479, 480, 519, 522, 523, 534, 535, 539, 544, 545, 566, 573, 574, 601, 645, 648, 653, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 738, 786, 789, 808, 853, 865, 868, 874, 886], "n_job": [1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 81, 82, 83, 86, 87, 89, 94, 95, 98, 99, 102, 106, 108, 109, 111, 112, 113, 114, 118, 120, 123, 132, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 195, 198, 199, 200, 202, 203, 204, 206, 207, 209, 210, 211, 221, 223, 226, 228, 229, 230, 231, 234, 235, 236, 240, 256, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 413, 414, 416, 417, 421, 422, 423, 424, 427, 428, 449, 450, 451, 454, 467, 469, 479, 480, 519, 522, 523, 534, 535, 544, 545, 566, 573, 574, 645, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 738, 786, 789, 808, 843, 865, 886], "backend": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 81, 82, 83, 86, 87, 89, 94, 98, 99, 106, 108, 109, 111, 112, 113, 114, 118, 120, 123, 132, 135, 140, 143, 145, 149, 150, 155, 157, 158, 159, 165, 170, 171, 175, 180, 181, 182, 183, 184, 190, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 221, 223, 228, 229, 230, 231, 240, 264, 265, 271, 272, 275, 278, 279, 280, 470, 479, 480, 561, 754, 761, 763, 764, 765, 766, 784, 801, 807, 812, 817, 819, 823, 824, 825, 826, 843, 844, 849, 865, 874, 886], "sequentialbackend": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 81, 82, 83, 86, 87, 89, 94, 98, 99, 106, 108, 109, 111, 112, 113, 114, 118, 120, 123, 132, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 195, 198, 199, 200, 202, 203, 204, 206, 207, 209, 210, 211, 221, 223, 228, 229, 230, 231, 240], "concurr": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 81, 82, 83, 86, 87, 89, 94, 98, 99, 106, 108, 109, 111, 112, 113, 114, 118, 120, 123, 132, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 195, 198, 199, 200, 202, 203, 204, 206, 207, 209, 210, 211, 221, 223, 228, 229, 230, 231, 240], "worker": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 81, 82, 83, 86, 87, 89, 94, 98, 99, 106, 108, 109, 111, 112, 113, 114, 118, 120, 123, 132, 135, 140, 143, 145, 149, 150, 157, 158, 165, 170, 171, 175, 180, 181, 182, 183, 184, 190, 195, 198, 199, 200, 202, 203, 204, 206, 207, 209, 210, 211, 221, 223, 228, 229, 230, 231, 240, 874], "done": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 68, 70, 72, 73, 76, 78, 79, 81, 82, 83, 86, 87, 89, 91, 92, 93, 94, 98, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 118, 120, 123, 130, 132, 133, 134, 135, 139, 140, 142, 143, 145, 149, 150, 154, 155, 157, 158, 159, 160, 161, 165, 166, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 215, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 241, 257, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 297, 298, 320, 359, 424, 474, 476, 477, 479, 480, 528, 530, 531, 532, 561, 573, 574, 577, 579, 692, 706, 707, 709, 731, 733, 734, 736, 737, 752, 754, 757, 770, 778, 808, 841, 845, 850, 851, 861, 865, 867, 868, 874, 886], "out": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 68, 70, 72, 73, 74, 76, 78, 79, 81, 82, 83, 86, 87, 89, 91, 93, 94, 98, 99, 106, 108, 109, 111, 112, 113, 114, 118, 119, 120, 122, 123, 126, 130, 132, 135, 136, 139, 140, 142, 143, 145, 149, 150, 155, 157, 158, 159, 165, 166, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 218, 221, 223, 226, 228, 229, 230, 231, 240, 241, 256, 261, 264, 265, 266, 267, 269, 273, 288, 302, 338, 355, 356, 357, 411, 413, 418, 422, 447, 449, 479, 480, 487, 503, 527, 535, 560, 561, 562, 576, 601, 607, 609, 698, 706, 708, 710, 733, 734, 741, 771, 778, 786, 790, 793, 797, 798, 806, 809, 814, 816, 843, 844, 845, 851, 862, 863, 865, 868, 871, 872, 886], "elaps": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 81, 82, 83, 86, 87, 89, 94, 98, 99, 106, 108, 109, 111, 112, 113, 114, 118, 120, 123, 132, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 195, 198, 199, 200, 202, 203, 204, 206, 207, 209, 210, 211, 221, 223, 228, 229, 230, 231, 240], "remain": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 26, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 68, 72, 73, 75, 76, 78, 81, 82, 83, 86, 87, 89, 91, 93, 94, 98, 99, 106, 108, 109, 111, 112, 113, 114, 118, 120, 123, 130, 132, 135, 136, 140, 143, 145, 149, 150, 155, 157, 158, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 221, 223, 228, 229, 230, 231, 240, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 434, 454, 455, 474, 476, 477, 479, 480, 481, 539, 561, 646, 694, 706, 708, 709, 733, 734, 736, 737, 794, 853, 861, 871, 874, 886], "299": [1, 5, 34, 139, 168, 183, 208, 231, 239], "7": [1, 4, 5, 8, 9, 10, 11, 12, 13, 16, 19, 20, 21, 26, 28, 30, 32, 33, 34, 35, 40, 41, 42, 44, 45, 46, 47, 49, 55, 56, 59, 60, 61, 64, 68, 70, 71, 73, 74, 76, 79, 80, 82, 84, 90, 92, 93, 96, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 119, 126, 127, 130, 132, 135, 136, 138, 139, 141, 142, 143, 144, 145, 147, 148, 150, 153, 155, 157, 158, 159, 163, 165, 168, 169, 170, 171, 175, 178, 179, 180, 181, 182, 183, 184, 186, 190, 194, 195, 197, 198, 200, 201, 202, 204, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 221, 222, 226, 227, 228, 229, 230, 231, 234, 235, 236, 238, 239, 240, 241, 244, 255, 262, 263, 264, 265, 266, 267, 271, 272, 275, 277, 278, 279, 280, 314, 335, 354, 380, 389, 403, 410, 422, 424, 452, 471, 476, 479, 480, 561, 566, 582, 591, 593, 597, 611, 645, 646, 672, 686, 687, 688, 706, 709, 710, 712, 715, 722, 732, 733, 734, 736, 737, 754, 785, 790, 799, 812, 813, 817, 843, 844, 851, 860, 862, 868, 871], "finish": [1, 2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 32, 33, 34, 41, 42, 45, 50, 72, 73, 76, 78, 81, 82, 83, 86, 87, 89, 94, 98, 99, 106, 108, 109, 111, 112, 113, 114, 118, 120, 123, 132, 135, 140, 143, 145, 149, 150, 157, 158, 165, 171, 175, 180, 181, 182, 183, 184, 190, 195, 198, 199, 200, 202, 203, 204, 206, 207, 209, 210, 211, 217, 221, 223, 228, 229, 230, 231, 240, 863, 886], "66": [1, 12, 16, 19, 21, 35, 40, 41, 45, 80, 102, 107, 111, 113, 143, 145, 157, 168, 175, 180, 183, 190, 195, 204, 208, 226, 227, 230, 231, 244, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 454, 455, 474, 476, 477, 539, 561, 794, 886], "id": [1, 5, 12, 21, 32, 33, 34, 42, 45, 46, 49, 69, 71, 72, 73, 79, 80, 81, 89, 92, 93, 94, 98, 106, 107, 109, 111, 112, 139, 140, 141, 145, 148, 151, 161, 165, 167, 168, 170, 171, 176, 179, 181, 182, 184, 190, 195, 199, 202, 203, 204, 206, 211, 212, 221, 222, 223, 228, 240, 256, 259, 264, 265, 266, 269, 271, 272, 275, 277, 278, 279, 280, 283, 297, 298, 313, 354, 368, 376, 427, 433, 435, 437, 439, 440, 452, 464, 479, 480, 520, 521, 526, 556, 562, 573, 574, 585, 610, 617, 619, 620, 626, 655, 708, 709, 754, 787, 807, 812, 817, 831, 845, 865, 868, 886], "Not": [1, 8, 9, 11, 12, 16, 18, 21, 28, 32, 33, 34, 45, 46, 49, 61, 69, 71, 72, 73, 74, 76, 79, 80, 81, 82, 87, 89, 92, 93, 94, 95, 96, 99, 102, 103, 106, 107, 108, 109, 111, 112, 113, 116, 120, 126, 127, 131, 134, 135, 136, 139, 140, 141, 142, 144, 145, 148, 150, 151, 165, 166, 167, 168, 171, 176, 179, 181, 182, 183, 184, 190, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 228, 229, 230, 231, 234, 236, 240, 266, 267, 272, 278, 279, 280, 419, 422, 446, 455, 562, 706, 754, 790, 818, 844, 868, 874], "metadata": [1, 4, 8, 9, 11, 12, 16, 18, 21, 28, 32, 33, 34, 45, 46, 49, 61, 69, 71, 72, 73, 74, 79, 82, 87, 89, 92, 93, 94, 95, 96, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 116, 120, 127, 131, 134, 135, 136, 139, 140, 141, 144, 145, 146, 147, 148, 150, 151, 160, 164, 165, 171, 176, 179, 181, 182, 183, 184, 187, 188, 189, 190, 198, 199, 200, 202, 203, 204, 206, 210, 212, 215, 221, 222, 223, 227, 228, 229, 230, 231, 234, 236, 239, 240, 258, 259, 264, 265, 266, 267, 268, 269, 353, 435, 440, 479, 480, 485, 616, 636, 706, 708, 709, 710, 778, 841, 862, 886], "33": [1, 8, 12, 13, 19, 21, 28, 33, 34, 35, 39, 40, 41, 45, 47, 55, 56, 76, 80, 102, 107, 108, 111, 113, 114, 136, 140, 143, 150, 165, 168, 169, 173, 181, 182, 186, 195, 202, 204, 208, 226, 227, 228, 230, 231, 235, 236, 264, 265, 266, 267, 335, 452, 479, 480, 524, 808, 868, 886], "interv": [1, 10, 11, 28, 32, 33, 34, 38, 45, 46, 49, 61, 69, 70, 71, 72, 79, 82, 89, 92, 93, 94, 95, 96, 99, 102, 103, 106, 109, 111, 112, 116, 126, 127, 131, 139, 141, 143, 144, 148, 149, 150, 151, 165, 171, 175, 176, 177, 179, 181, 182, 183, 184, 190, 199, 200, 202, 203, 206, 209, 210, 212, 222, 223, 228, 229, 230, 234, 236, 240, 256, 258, 259, 262, 263, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 287, 346, 359, 435, 534, 544, 545, 561, 578, 579, 585, 623, 624, 656, 658, 683, 685, 706, 708, 709, 710, 719, 778, 799, 814, 862, 872, 886], "mode": [1, 5, 11, 22, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46, 47, 49, 51, 57, 58, 59, 60, 61, 69, 71, 72, 73, 78, 79, 85, 86, 92, 93, 94, 95, 96, 99, 102, 103, 106, 109, 111, 112, 113, 116, 118, 119, 126, 127, 130, 131, 135, 139, 140, 141, 143, 144, 148, 150, 151, 157, 160, 165, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 191, 195, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 212, 217, 218, 222, 228, 229, 230, 231, 234, 236, 240, 241, 244, 256, 261, 262, 264, 265, 266, 267, 271, 272, 273, 274, 275, 278, 279, 280, 287, 297, 298, 341, 354, 358, 359, 360, 364, 365, 369, 370, 371, 410, 411, 417, 418, 445, 449, 450, 451, 470, 474, 479, 480, 519, 537, 538, 560, 561, 585, 593, 646, 669, 672, 701, 706, 707, 708, 709, 710, 731, 754, 780, 782, 784, 785, 786, 790, 793, 796, 797, 801, 806, 807, 808, 809, 812, 813, 814, 817, 818, 823, 845, 853, 874, 886], "mean": [1, 4, 8, 9, 10, 11, 14, 16, 19, 21, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 57, 58, 59, 60, 61, 67, 68, 69, 70, 71, 72, 73, 78, 79, 83, 85, 86, 92, 93, 94, 95, 96, 99, 100, 102, 103, 106, 109, 111, 112, 113, 116, 118, 119, 126, 127, 131, 136, 139, 140, 141, 142, 143, 144, 148, 149, 151, 155, 156, 157, 159, 165, 169, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 195, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 215, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 236, 239, 240, 241, 258, 259, 261, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 277, 278, 279, 280, 287, 290, 297, 298, 314, 318, 354, 359, 411, 417, 418, 420, 423, 432, 444, 445, 453, 470, 474, 476, 477, 479, 480, 481, 487, 494, 502, 513, 519, 528, 534, 537, 538, 539, 544, 545, 560, 561, 565, 568, 571, 572, 576, 578, 582, 584, 591, 593, 602, 610, 623, 624, 650, 658, 659, 660, 669, 670, 672, 685, 688, 693, 694, 695, 696, 697, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 722, 725, 732, 733, 734, 736, 737, 754, 778, 780, 784, 785, 786, 788, 793, 797, 806, 807, 808, 809, 812, 814, 816, 845, 850, 865, 867, 868, 871, 886], "activ": [1, 4, 5, 8, 11, 12, 16, 18, 19, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 81, 82, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 121, 123, 129, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 157, 158, 161, 165, 166, 167, 171, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 188, 190, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 215, 216, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 244, 257, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 297, 298, 324, 348, 437, 440, 445, 452, 454, 458, 474, 476, 477, 478, 479, 480, 484, 495, 500, 513, 516, 527, 528, 529, 530, 531, 532, 539, 542, 558, 566, 577, 597, 623, 625, 627, 628, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 671, 678, 681, 698, 701, 706, 708, 709, 710, 722, 732, 733, 736, 763, 773, 775, 782, 813, 818, 841, 843, 844, 845, 846, 848, 849, 852, 853, 861, 862, 865, 867, 868, 871, 874, 886], "note": [1, 4, 5, 9, 12, 13, 16, 18, 21, 26, 28, 31, 35, 40, 42, 45, 46, 47, 51, 58, 59, 61, 69, 70, 71, 73, 74, 79, 81, 82, 89, 92, 93, 94, 98, 100, 103, 106, 108, 111, 112, 113, 114, 118, 120, 126, 128, 131, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 157, 159, 161, 165, 166, 167, 168, 169, 170, 171, 175, 176, 179, 180, 181, 182, 183, 184, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 215, 216, 217, 221, 222, 223, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 288, 293, 297, 298, 300, 303, 304, 305, 306, 307, 309, 310, 312, 313, 314, 317, 318, 319, 320, 321, 322, 328, 329, 330, 332, 334, 335, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 358, 359, 360, 361, 364, 365, 367, 369, 372, 373, 380, 386, 387, 388, 389, 390, 392, 403, 404, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 423, 427, 428, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 461, 462, 464, 467, 468, 469, 470, 472, 473, 478, 479, 480, 481, 487, 491, 492, 494, 495, 496, 500, 502, 503, 504, 506, 508, 509, 513, 515, 516, 517, 518, 520, 522, 523, 524, 526, 528, 529, 530, 531, 532, 534, 535, 536, 539, 541, 543, 544, 545, 547, 548, 560, 561, 562, 563, 564, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 585, 589, 593, 594, 599, 600, 601, 602, 603, 607, 608, 611, 613, 615, 616, 617, 619, 620, 623, 624, 625, 627, 628, 630, 633, 639, 641, 642, 644, 645, 647, 650, 652, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 683, 686, 687, 688, 689, 692, 693, 694, 695, 696, 697, 699, 701, 706, 707, 708, 709, 710, 714, 715, 716, 717, 718, 719, 720, 722, 724, 725, 728, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 748, 749, 752, 754, 755, 757, 769, 770, 771, 772, 773, 775, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 790, 791, 793, 794, 795, 797, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 823, 824, 827, 831, 832, 833, 834, 835, 836, 841, 843, 845, 846, 852, 861, 865, 867, 868, 870, 886], "pick_channel": [1, 4, 5, 9, 12, 28, 42, 45, 46, 61, 69, 70, 71, 72, 73, 79, 85, 89, 92, 93, 94, 98, 99, 100, 106, 111, 112, 113, 114, 120, 126, 131, 134, 135, 139, 140, 142, 143, 145, 148, 149, 150, 151, 161, 165, 168, 169, 171, 176, 179, 181, 182, 183, 184, 190, 195, 198, 199, 203, 204, 206, 210, 211, 212, 215, 222, 223, 227, 228, 229, 230, 231, 234, 236, 239, 240, 261, 264, 265, 266, 267, 268, 479, 480, 555, 706, 707, 708, 709, 710, 876, 886], "legaci": [1, 4, 5, 9, 12, 16, 18, 21, 28, 31, 35, 40, 42, 45, 46, 51, 58, 59, 61, 69, 70, 71, 73, 79, 81, 82, 89, 92, 93, 94, 98, 100, 106, 111, 112, 113, 114, 118, 120, 126, 131, 134, 135, 139, 140, 141, 142, 143, 145, 148, 149, 150, 151, 161, 165, 167, 171, 175, 176, 179, 180, 181, 182, 183, 184, 190, 191, 195, 198, 199, 202, 203, 204, 205, 206, 210, 211, 212, 215, 218, 222, 223, 227, 228, 229, 230, 231, 234, 236, 240, 264, 265, 266, 267, 479, 480, 706, 708, 709, 710, 786, 808, 886], "new": [1, 4, 5, 8, 9, 12, 14, 16, 18, 19, 21, 27, 28, 31, 35, 40, 42, 45, 46, 51, 58, 59, 61, 69, 70, 71, 73, 79, 80, 81, 82, 89, 92, 93, 94, 98, 100, 106, 111, 112, 113, 114, 118, 120, 126, 131, 134, 135, 136, 139, 140, 141, 142, 144, 145, 148, 149, 150, 151, 160, 161, 164, 165, 167, 171, 174, 175, 176, 179, 180, 181, 182, 183, 184, 190, 191, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 215, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 236, 239, 240, 244, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 284, 285, 287, 288, 293, 297, 298, 300, 302, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 321, 322, 323, 324, 328, 330, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 369, 370, 371, 372, 380, 387, 389, 390, 403, 404, 410, 411, 413, 415, 417, 418, 422, 423, 430, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 458, 459, 461, 464, 468, 469, 470, 473, 474, 476, 477, 478, 479, 480, 487, 490, 491, 492, 494, 495, 496, 500, 503, 508, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 524, 526, 527, 528, 529, 530, 531, 534, 535, 536, 537, 538, 541, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 560, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 582, 583, 589, 592, 593, 594, 601, 603, 607, 608, 613, 617, 619, 620, 624, 625, 628, 636, 638, 639, 640, 641, 642, 644, 647, 650, 655, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 683, 687, 689, 699, 700, 701, 705, 706, 707, 708, 709, 710, 718, 720, 723, 724, 725, 728, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 751, 754, 755, 757, 762, 763, 767, 770, 771, 772, 773, 775, 777, 778, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 816, 817, 818, 820, 823, 827, 830, 831, 832, 836, 837, 839, 841, 843, 844, 847, 849, 850, 851, 853, 856, 861, 862, 865, 866, 867, 868, 869, 871, 873, 874], "should": [1, 4, 5, 9, 12, 16, 18, 19, 21, 28, 31, 35, 40, 41, 42, 45, 46, 51, 58, 59, 61, 63, 69, 70, 71, 73, 79, 81, 82, 87, 89, 92, 93, 94, 98, 100, 106, 111, 112, 113, 114, 118, 119, 120, 126, 131, 132, 134, 135, 139, 140, 141, 142, 143, 145, 148, 149, 150, 151, 155, 156, 157, 159, 160, 164, 165, 166, 167, 171, 175, 176, 179, 180, 181, 182, 183, 184, 189, 190, 191, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 227, 228, 229, 230, 231, 234, 236, 239, 240, 241, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 328, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418, 421, 422, 423, 424, 427, 428, 430, 432, 436, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 461, 462, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 522, 523, 524, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 557, 560, 561, 563, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 600, 601, 602, 603, 605, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 633, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 650, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 668, 670, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 683, 688, 693, 694, 695, 696, 697, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 724, 725, 728, 729, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 749, 750, 753, 754, 756, 758, 762, 770, 771, 772, 773, 777, 778, 779, 781, 782, 784, 785, 786, 787, 788, 789, 790, 793, 794, 797, 798, 799, 800, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 823, 824, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 843, 844, 845, 848, 849, 850, 851, 856, 861, 862, 867, 868, 871, 874, 886], "inst": [1, 4, 5, 9, 12, 16, 18, 21, 28, 31, 35, 40, 42, 45, 46, 51, 58, 59, 61, 69, 70, 71, 73, 79, 81, 82, 89, 92, 93, 94, 98, 100, 106, 111, 112, 113, 114, 118, 120, 126, 131, 134, 135, 139, 140, 142, 143, 145, 148, 149, 150, 151, 161, 165, 167, 171, 175, 176, 179, 180, 181, 182, 183, 184, 190, 191, 195, 198, 199, 202, 203, 204, 205, 206, 210, 211, 212, 215, 222, 223, 227, 228, 229, 230, 231, 234, 236, 239, 240, 256, 258, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 281, 312, 314, 358, 411, 412, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 470, 479, 480, 560, 561, 562, 569, 570, 575, 580, 581, 585, 592, 608, 647, 650, 660, 691, 706, 708, 709, 710, 736, 737, 738, 797, 798, 799, 801, 808, 886], "projector": [1, 2, 4, 5, 8, 9, 16, 18, 21, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 68, 69, 71, 73, 76, 82, 89, 91, 92, 93, 98, 100, 102, 108, 118, 120, 126, 131, 139, 140, 145, 148, 149, 150, 151, 161, 164, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 195, 198, 199, 202, 203, 204, 210, 211, 213, 214, 215, 222, 223, 227, 228, 229, 230, 231, 234, 236, 256, 264, 265, 266, 267, 269, 273, 274, 297, 298, 354, 355, 356, 357, 358, 359, 369, 370, 371, 411, 418, 441, 442, 443, 444, 454, 455, 474, 476, 477, 479, 480, 500, 539, 561, 573, 574, 575, 593, 623, 631, 650, 707, 711, 712, 713, 714, 715, 716, 717, 784, 794, 801, 805, 806, 807, 826, 841, 861, 863, 865, 868, 886], "n_channel": [1, 16, 18, 19, 28, 31, 35, 42, 51, 58, 59, 63, 65, 67, 69, 70, 71, 74, 75, 76, 80, 82, 83, 89, 98, 102, 113, 118, 126, 131, 139, 140, 141, 142, 148, 149, 150, 158, 161, 165, 166, 167, 171, 175, 176, 179, 180, 181, 189, 195, 198, 199, 202, 203, 204, 205, 206, 207, 210, 215, 218, 221, 223, 228, 229, 230, 231, 234, 236, 241, 256, 259, 261, 263, 264, 265, 266, 267, 268, 269, 297, 298, 313, 314, 318, 329, 369, 411, 412, 413, 416, 417, 418, 419, 420, 422, 424, 425, 427, 449, 450, 479, 480, 560, 561, 562, 566, 569, 674, 691, 692, 706, 707, 708, 709, 710, 711, 712, 713, 733, 734, 735, 771, 774, 778, 784, 785, 786, 793, 807, 809, 814, 816, 824, 841, 886], "No": [1, 2, 4, 5, 8, 9, 12, 16, 18, 21, 34, 41, 46, 48, 50, 54, 55, 74, 79, 82, 87, 89, 100, 107, 108, 111, 112, 113, 115, 116, 120, 126, 127, 134, 135, 136, 139, 140, 141, 142, 145, 148, 150, 155, 165, 170, 171, 177, 183, 184, 189, 190, 195, 198, 201, 203, 204, 206, 209, 210, 211, 221, 223, 226, 227, 231, 240, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 387, 412, 427, 474, 476, 477, 479, 480, 528, 530, 531, 532, 670, 808, 844, 845, 862, 867, 871], "gradiomet": [1, 22, 32, 34, 35, 46, 59, 71, 73, 76, 79, 81, 86, 92, 99, 102, 107, 108, 109, 110, 112, 116, 118, 119, 141, 144, 145, 149, 161, 165, 166, 167, 168, 179, 182, 183, 187, 190, 198, 199, 200, 202, 204, 205, 206, 208, 209, 215, 216, 217, 218, 221, 223, 226, 228, 229, 230, 240, 256, 259, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 297, 298, 354, 355, 356, 357, 358, 359, 369, 370, 371, 411, 418, 432, 454, 455, 474, 476, 477, 479, 480, 516, 539, 558, 559, 560, 561, 571, 572, 573, 574, 576, 577, 578, 579, 582, 593, 604, 692, 706, 708, 709, 710, 771, 777, 778, 784, 785, 786, 788, 790, 792, 793, 794, 797, 806, 807, 809, 814, 815, 816, 841, 861, 865, 868, 871, 886], "forc": [1, 4, 145, 160, 165, 170, 177, 190, 200, 256, 264, 265, 266, 267, 308, 319, 364, 375, 377, 378, 379, 380, 382, 383, 384, 386, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 479, 480, 504, 528, 619, 706, 708, 709, 710, 754, 843, 845, 862, 886], "n_grad": [1, 190, 206, 256, 355, 356, 357, 573, 574], "n_eeg": [1, 145, 190, 206, 256, 355, 356, 357, 573, 574], "axial": [1, 33, 47, 81, 83, 91, 108, 110, 130, 134, 141, 145, 159, 171, 179, 182, 190, 198, 205, 206, 226, 262, 279, 280, 754, 772, 782, 868], "100": [1, 2, 5, 10, 11, 13, 16, 19, 22, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 74, 75, 78, 80, 82, 85, 86, 89, 91, 94, 95, 100, 102, 103, 107, 108, 110, 111, 113, 114, 115, 118, 119, 122, 124, 126, 134, 135, 136, 139, 140, 142, 143, 144, 145, 148, 150, 155, 157, 168, 169, 171, 175, 176, 177, 178, 179, 180, 182, 183, 189, 190, 194, 195, 200, 201, 202, 204, 206, 208, 211, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 244, 256, 264, 265, 266, 267, 274, 360, 432, 451, 476, 477, 479, 480, 503, 572, 582, 588, 593, 672, 692, 708, 710, 735, 738, 744, 754, 784, 802, 807, 862, 867, 871, 886], "pca": [1, 5, 11, 13, 15, 16, 17, 18, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 68, 69, 71, 72, 73, 74, 76, 78, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 122, 123, 126, 128, 130, 131, 132, 139, 140, 141, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 217, 218, 222, 223, 228, 229, 230, 231, 234, 236, 264, 266, 267, 269, 272, 278, 280, 297, 298, 354, 369, 373, 425, 474, 477, 479, 534, 535, 544, 545, 558, 561, 620, 798, 861, 872, 886], "01": [1, 6, 8, 11, 12, 13, 19, 20, 21, 24, 32, 33, 34, 35, 46, 59, 67, 71, 73, 76, 78, 82, 83, 89, 90, 91, 92, 102, 107, 108, 110, 111, 112, 119, 120, 122, 123, 126, 129, 130, 136, 140, 141, 145, 149, 150, 153, 157, 158, 163, 165, 166, 167, 168, 169, 171, 173, 179, 180, 182, 184, 186, 189, 190, 193, 194, 195, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 223, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 240, 241, 243, 244, 255, 256, 258, 264, 265, 341, 343, 347, 380, 403, 404, 419, 479, 480, 490, 576, 582, 585, 591, 598, 602, 701, 862], "02": [1, 2, 5, 11, 13, 19, 33, 34, 35, 56, 63, 66, 67, 81, 83, 84, 91, 102, 107, 108, 110, 113, 119, 122, 125, 130, 135, 138, 141, 145, 147, 149, 156, 159, 163, 169, 171, 173, 179, 182, 189, 194, 195, 201, 205, 206, 207, 208, 210, 212, 217, 226, 227, 228, 230, 231, 233, 235, 236, 241, 244, 255, 256, 264, 265, 321, 474, 477, 479, 480, 490, 722, 732, 733, 735, 736, 738], "creat": [1, 2, 4, 5, 8, 9, 11, 15, 16, 18, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 63, 65, 67, 68, 69, 70, 71, 73, 75, 79, 82, 85, 87, 91, 92, 94, 102, 103, 106, 107, 108, 109, 111, 112, 113, 116, 119, 120, 122, 124, 126, 127, 131, 133, 134, 135, 140, 141, 144, 145, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 195, 198, 199, 200, 201, 202, 204, 205, 212, 215, 218, 223, 224, 225, 227, 229, 231, 234, 236, 239, 240, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 288, 297, 298, 302, 307, 308, 309, 312, 326, 354, 355, 356, 360, 365, 372, 373, 411, 418, 424, 428, 433, 435, 446, 447, 452, 479, 480, 491, 496, 498, 503, 516, 517, 518, 521, 523, 524, 527, 550, 560, 561, 563, 564, 566, 570, 573, 574, 578, 579, 583, 589, 617, 619, 643, 644, 645, 647, 650, 655, 656, 660, 683, 686, 692, 701, 706, 707, 708, 709, 710, 719, 722, 725, 731, 732, 733, 734, 736, 737, 741, 754, 757, 759, 762, 767, 770, 771, 777, 778, 780, 782, 785, 786, 789, 790, 791, 792, 793, 797, 799, 802, 804, 805, 806, 807, 808, 809, 810, 812, 814, 816, 817, 825, 826, 836, 841, 843, 849, 853, 862, 866, 871, 874, 876, 886], "an": [1, 4, 5, 7, 11, 12, 15, 18, 19, 21, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 60, 61, 63, 67, 68, 69, 71, 73, 74, 78, 81, 82, 83, 87, 89, 91, 92, 93, 94, 100, 103, 106, 107, 108, 109, 110, 111, 113, 114, 118, 119, 120, 121, 126, 127, 128, 129, 131, 134, 135, 136, 139, 140, 143, 145, 148, 149, 150, 151, 152, 154, 155, 157, 159, 161, 162, 163, 164, 165, 166, 169, 170, 174, 175, 176, 177, 178, 180, 182, 185, 186, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 230, 231, 234, 235, 236, 239, 240, 242, 243, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 291, 293, 297, 298, 300, 302, 303, 304, 312, 314, 316, 317, 318, 321, 325, 328, 330, 339, 347, 348, 349, 354, 358, 360, 361, 363, 365, 369, 370, 372, 373, 386, 389, 390, 394, 410, 411, 417, 418, 419, 423, 426, 428, 429, 430, 433, 435, 436, 438, 440, 445, 446, 447, 450, 451, 452, 453, 454, 458, 459, 461, 466, 470, 474, 476, 477, 478, 479, 480, 481, 484, 486, 488, 489, 494, 495, 496, 497, 498, 500, 504, 506, 507, 512, 513, 515, 516, 519, 522, 523, 524, 527, 528, 530, 534, 535, 537, 538, 539, 541, 542, 543, 546, 548, 550, 557, 558, 560, 561, 562, 563, 564, 565, 569, 571, 573, 574, 576, 578, 579, 582, 584, 588, 591, 592, 593, 594, 600, 603, 606, 611, 612, 613, 614, 615, 618, 620, 622, 623, 625, 633, 635, 639, 640, 642, 644, 645, 647, 650, 654, 655, 656, 659, 662, 666, 671, 672, 678, 681, 683, 686, 687, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 706, 707, 708, 709, 710, 711, 712, 713, 714, 719, 722, 725, 726, 732, 736, 737, 740, 741, 744, 746, 752, 754, 755, 763, 767, 769, 770, 771, 775, 776, 778, 780, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 820, 822, 824, 832, 833, 834, 841, 843, 844, 845, 849, 850, 851, 852, 857, 862, 863, 864, 865, 867, 868, 869, 871, 872, 874, 886], "oper": [1, 5, 11, 15, 18, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 68, 69, 71, 73, 83, 87, 89, 91, 92, 94, 103, 106, 107, 108, 109, 120, 123, 131, 139, 140, 141, 144, 145, 148, 150, 151, 154, 155, 161, 162, 163, 164, 165, 166, 168, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 190, 195, 199, 200, 201, 202, 204, 205, 206, 209, 215, 222, 223, 228, 229, 231, 234, 236, 244, 257, 258, 261, 264, 265, 266, 267, 268, 269, 270, 274, 275, 277, 278, 282, 284, 285, 297, 298, 300, 302, 312, 316, 317, 328, 334, 347, 353, 373, 374, 381, 389, 412, 417, 420, 427, 432, 433, 436, 449, 450, 451, 452, 456, 457, 458, 474, 475, 476, 477, 479, 480, 481, 487, 494, 498, 513, 522, 523, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 554, 559, 561, 564, 566, 585, 591, 607, 610, 612, 620, 625, 635, 646, 647, 658, 659, 660, 667, 669, 670, 671, 672, 685, 693, 694, 695, 696, 697, 700, 703, 706, 707, 733, 734, 735, 736, 737, 738, 740, 770, 811, 819, 822, 823, 833, 841, 843, 845, 851, 853, 862, 865, 871, 872, 884, 886], "subspac": [1, 11, 15, 18, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 68, 69, 71, 73, 87, 89, 91, 92, 93, 94, 103, 106, 107, 108, 109, 120, 131, 139, 140, 141, 144, 145, 148, 150, 151, 161, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 190, 199, 200, 202, 204, 205, 206, 209, 222, 231, 234, 236, 256, 577, 593, 841], "dimens": [1, 11, 15, 18, 19, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 68, 69, 71, 73, 87, 89, 91, 92, 93, 94, 103, 106, 107, 108, 109, 120, 126, 131, 139, 140, 141, 144, 145, 148, 150, 151, 159, 161, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 190, 194, 195, 199, 200, 202, 204, 205, 206, 208, 222, 223, 226, 228, 229, 230, 231, 234, 235, 236, 240, 241, 244, 261, 264, 265, 266, 267, 271, 272, 273, 274, 275, 277, 278, 279, 280, 287, 313, 360, 411, 414, 417, 418, 421, 422, 424, 426, 450, 451, 474, 476, 477, 479, 480, 534, 535, 537, 538, 544, 545, 560, 561, 576, 686, 687, 691, 693, 694, 696, 697, 706, 708, 709, 710, 724, 725, 735, 744, 754, 763, 771, 786, 793, 797, 806, 807, 809, 814, 816, 841, 861, 868, 871, 886], "fran\u00e7oi": [1, 71, 78, 108, 182, 183, 190, 199, 244, 561, 570, 868], "tadel": [1, 108, 182, 183, 190, 244], "sylvain": [1, 108, 182, 183, 190, 244], "baillet": [1, 108, 182, 183, 190, 244], "john": [1, 18, 19, 51, 68, 82, 108, 125, 177, 179, 182, 183, 190, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 388, 389, 415, 417, 429, 474, 479, 480, 528, 539, 561, 577, 597, 663, 668, 706, 709, 862, 868, 886], "c": [1, 4, 10, 11, 12, 19, 22, 44, 51, 70, 74, 95, 108, 111, 114, 120, 125, 136, 160, 170, 175, 179, 182, 183, 187, 190, 194, 195, 205, 211, 228, 229, 230, 231, 241, 244, 256, 257, 270, 275, 276, 277, 300, 335, 338, 354, 360, 388, 403, 404, 417, 418, 452, 455, 474, 479, 480, 517, 523, 536, 561, 569, 575, 602, 620, 666, 671, 735, 738, 754, 843, 844, 845, 849, 850, 852, 857, 860, 861, 862, 868, 869, 871, 874, 875, 886], "mosher": [1, 51, 108, 179, 182, 183, 190, 244, 300, 868], "dimitrio": [1, 10, 108, 182, 183, 190, 244, 862], "pantazi": [1, 10, 108, 182, 183, 190, 244, 862], "richard": [1, 51, 108, 182, 183, 190, 208, 240, 244, 389, 561, 569, 688, 862, 868, 873, 886], "leahi": [1, 51, 108, 182, 183, 190, 244, 300, 868], "user": [1, 45, 75, 93, 108, 141, 155, 164, 166, 170, 171, 182, 183, 188, 189, 190, 200, 201, 215, 244, 257, 259, 264, 265, 266, 267, 268, 269, 271, 272, 275, 277, 278, 279, 280, 377, 378, 379, 380, 382, 383, 384, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 432, 440, 471, 478, 479, 480, 496, 561, 582, 600, 651, 704, 705, 706, 709, 771, 784, 791, 801, 807, 816, 843, 845, 847, 849, 850, 852, 856, 861, 862, 864, 865, 867, 869, 870, 886], "friendli": [1, 108, 182, 183, 190, 244], "applic": [1, 15, 70, 73, 87, 108, 148, 161, 169, 177, 182, 183, 190, 191, 195, 201, 204, 205, 206, 209, 241, 244, 259, 264, 265, 266, 267, 413, 418, 422, 435, 447, 449, 450, 463, 479, 480, 504, 519, 520, 562, 590, 593, 616, 619, 708, 710, 754, 786, 807, 845, 848, 852, 857, 865, 868, 886], "analysi": [1, 3, 6, 8, 13, 15, 17, 20, 42, 43, 44, 70, 74, 82, 87, 95, 96, 100, 108, 126, 139, 141, 143, 144, 152, 153, 154, 159, 160, 166, 167, 170, 171, 172, 173, 177, 182, 183, 187, 189, 190, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 215, 216, 218, 223, 226, 227, 228, 230, 231, 239, 243, 244, 264, 265, 266, 267, 269, 271, 272, 274, 275, 276, 278, 279, 280, 297, 298, 312, 314, 328, 353, 354, 360, 363, 373, 402, 404, 411, 419, 425, 435, 440, 452, 468, 474, 479, 480, 489, 500, 521, 527, 528, 542, 552, 558, 561, 562, 569, 576, 589, 591, 620, 655, 659, 666, 687, 688, 691, 693, 706, 708, 709, 710, 718, 720, 722, 724, 732, 733, 734, 735, 736, 737, 738, 754, 778, 787, 816, 826, 841, 844, 846, 848, 852, 857, 860, 861, 862, 867, 868, 869, 874, 876, 883, 884, 886], "intellig": [1, 108, 182, 183, 190, 194, 244, 417, 451], "neurosci": [1, 4, 10, 16, 19, 43, 70, 74, 108, 112, 150, 182, 183, 190, 194, 195, 201, 231, 244, 276, 360, 412, 417, 427, 561, 566, 569, 666, 693, 694, 696, 697, 722, 732, 733, 735, 736, 738, 860, 862, 867], "2011": [1, 15, 21, 32, 34, 59, 87, 108, 150, 168, 182, 183, 188, 190, 201, 223, 226, 244, 297, 419, 477, 528, 562, 699, 700, 868], "13": [1, 9, 10, 11, 12, 16, 19, 21, 26, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 67, 70, 74, 76, 79, 80, 82, 83, 92, 93, 95, 96, 99, 102, 103, 106, 107, 108, 109, 111, 112, 113, 116, 119, 120, 123, 129, 131, 132, 133, 135, 141, 143, 144, 145, 148, 149, 151, 157, 161, 165, 168, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 193, 195, 200, 201, 203, 204, 206, 208, 209, 210, 214, 215, 221, 223, 225, 226, 227, 228, 229, 230, 231, 234, 236, 240, 241, 243, 244, 259, 262, 263, 264, 265, 266, 267, 270, 271, 272, 275, 277, 278, 279, 280, 282, 335, 359, 380, 403, 422, 432, 446, 447, 449, 450, 452, 479, 480, 561, 578, 579, 593, 620, 636, 639, 669, 672, 706, 709, 736, 737, 788, 799, 810, 839, 841, 850, 860, 861, 868], "doi": [1, 4, 8, 10, 12, 13, 15, 16, 18, 19, 21, 33, 35, 40, 42, 43, 44, 46, 51, 54, 55, 58, 59, 65, 70, 71, 74, 75, 78, 82, 83, 87, 93, 100, 108, 111, 112, 116, 118, 120, 125, 128, 136, 140, 143, 150, 154, 156, 161, 175, 177, 179, 182, 183, 190, 194, 195, 199, 201, 203, 204, 205, 206, 207, 209, 211, 223, 226, 227, 231, 239, 244, 264, 265, 266, 267, 270, 275, 276, 290, 297, 298, 300, 354, 360, 380, 388, 389, 393, 394, 403, 404, 411, 412, 415, 417, 418, 419, 427, 429, 435, 474, 476, 477, 479, 480, 528, 529, 539, 543, 560, 561, 562, 566, 569, 570, 572, 575, 576, 577, 593, 597, 600, 601, 608, 650, 659, 663, 666, 668, 671, 690, 692, 693, 694, 695, 696, 697, 699, 700, 708, 710, 718, 720, 722, 724, 725, 732, 733, 735, 736, 738, 771, 860, 861, 862, 865, 868], "10": [1, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 21, 22, 24, 25, 28, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 54, 55, 58, 59, 60, 63, 65, 66, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 87, 89, 90, 92, 93, 94, 100, 102, 103, 107, 108, 109, 111, 112, 113, 114, 116, 118, 119, 120, 125, 126, 127, 128, 129, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 147, 150, 153, 154, 155, 156, 157, 158, 159, 161, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 190, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 221, 222, 223, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 239, 240, 241, 244, 258, 262, 263, 264, 265, 266, 267, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 290, 297, 298, 300, 309, 312, 324, 330, 335, 340, 344, 347, 350, 351, 352, 354, 360, 365, 380, 388, 389, 393, 394, 403, 404, 411, 412, 413, 415, 417, 418, 419, 422, 427, 429, 432, 435, 446, 447, 449, 450, 455, 474, 476, 477, 479, 480, 504, 517, 518, 528, 529, 539, 543, 548, 560, 561, 562, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 582, 583, 584, 587, 589, 593, 597, 600, 601, 608, 619, 641, 650, 659, 663, 666, 668, 670, 671, 672, 687, 689, 690, 692, 693, 694, 695, 696, 697, 699, 700, 706, 708, 709, 710, 718, 720, 722, 724, 725, 732, 733, 734, 735, 736, 737, 738, 744, 754, 759, 769, 771, 784, 786, 793, 795, 796, 801, 802, 807, 812, 817, 844, 845, 848, 851, 860, 861, 862, 865, 868, 871, 874], "1155": [1, 108, 182, 183, 190, 244], "879716": [1, 108, 182, 183, 190, 244], "total": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 243, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 358, 374, 428, 479, 480, 563, 610, 701, 708, 710, 786, 812, 817, 868, 871, 886], "run": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 256, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 303, 321, 347, 354, 355, 357, 359, 375, 380, 413, 414, 417, 421, 422, 424, 427, 428, 449, 450, 451, 454, 467, 469, 479, 480, 513, 519, 522, 523, 534, 535, 544, 545, 561, 566, 573, 574, 576, 582, 583, 586, 591, 594, 610, 645, 654, 657, 658, 659, 660, 669, 670, 671, 672, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 738, 754, 777, 784, 786, 789, 793, 796, 797, 801, 807, 808, 843, 844, 848, 849, 850, 851, 853, 862, 867, 868, 869, 872, 886], "script": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 274, 479, 480, 807, 845, 846, 848, 850, 851, 852, 862, 865, 866, 868, 871, 874, 876, 886], "minut": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 264, 265, 276, 282, 434, 479, 480, 561, 658, 659, 801, 807, 849], "098": [1, 6], "second": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 284, 285, 287, 296, 297, 298, 322, 323, 341, 343, 359, 411, 417, 418, 423, 435, 437, 440, 445, 446, 448, 452, 453, 477, 478, 479, 480, 498, 500, 503, 515, 520, 521, 531, 534, 560, 561, 563, 564, 565, 566, 569, 571, 573, 574, 578, 582, 583, 584, 585, 586, 593, 601, 607, 611, 620, 623, 656, 672, 692, 693, 694, 696, 697, 698, 700, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 734, 737, 754, 762, 778, 785, 786, 787, 790, 793, 797, 798, 799, 801, 806, 807, 808, 809, 812, 814, 817, 831, 841, 845, 851, 861, 862, 865, 868, 871, 886], "estim": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 187, 188, 189, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 245, 256, 259, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 284, 285, 289, 290, 291, 292, 294, 295, 297, 298, 312, 320, 328, 341, 343, 347, 354, 358, 359, 360, 365, 366, 367, 369, 370, 371, 373, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 432, 445, 446, 448, 450, 451, 452, 454, 455, 458, 474, 475, 476, 477, 479, 480, 484, 513, 515, 516, 522, 524, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 542, 543, 544, 545, 548, 561, 562, 566, 570, 571, 578, 583, 586, 591, 593, 605, 607, 608, 623, 625, 628, 633, 634, 635, 645, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 673, 687, 691, 692, 698, 699, 701, 702, 708, 710, 711, 712, 713, 714, 715, 716, 725, 733, 734, 736, 737, 754, 770, 771, 777, 778, 779, 786, 794, 801, 808, 811, 812, 813, 816, 817, 818, 841, 846, 852, 854, 862, 865, 871, 874, 876, 884, 886], "usag": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 256, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 420, 424, 479, 480, 593, 693, 694, 696, 697, 706, 708, 709, 710, 712, 715, 731, 733, 734, 735, 736, 737, 738, 841, 864, 865, 868, 871, 886], "491": [1, 6, 226, 231], "mb": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 243, 264, 265, 274, 479, 480, 784, 807, 851], "python": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 161, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 200, 202, 203, 206, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 255, 258, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 277, 278, 279, 280, 297, 298, 314, 317, 323, 328, 329, 332, 338, 353, 365, 373, 376, 377, 378, 379, 380, 382, 383, 384, 386, 387, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 430, 436, 440, 444, 452, 459, 460, 461, 463, 470, 479, 480, 494, 498, 500, 504, 518, 521, 527, 528, 542, 555, 561, 578, 582, 613, 642, 644, 649, 651, 705, 706, 708, 709, 710, 722, 725, 732, 733, 734, 736, 737, 749, 750, 778, 784, 787, 801, 807, 815, 834, 836, 841, 844, 852, 856, 861, 862, 866, 867, 868, 869, 872, 873, 884, 886], "brainstorm_data": [1, 6], "py": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 243, 843, 845, 865, 886], "jupyt": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 819, 865, 867, 869, 886], "notebook": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 819, 825, 849, 865, 869, 874, 886], "ipynb": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241], "galleri": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 845], "gener": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 93, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 191, 194, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 215, 216, 217, 218, 221, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 291, 292, 295, 308, 321, 326, 327, 328, 347, 353, 354, 380, 411, 413, 414, 417, 418, 421, 422, 428, 435, 440, 445, 447, 449, 450, 452, 469, 475, 476, 479, 480, 484, 485, 496, 500, 504, 513, 516, 523, 527, 528, 530, 532, 535, 539, 542, 558, 559, 560, 561, 562, 564, 573, 575, 578, 579, 583, 585, 586, 591, 593, 610, 614, 620, 623, 625, 627, 628, 630, 631, 654, 655, 656, 658, 659, 660, 669, 670, 671, 672, 673, 686, 690, 691, 693, 694, 695, 696, 697, 702, 706, 708, 709, 710, 718, 719, 739, 751, 754, 755, 757, 767, 770, 774, 778, 785, 793, 797, 798, 808, 809, 812, 813, 822, 836, 841, 851, 852, 853, 857, 860, 861, 862, 863, 864, 866, 867, 869, 870, 871, 873, 874, 886], "sphinx": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 750, 845, 886], "thi": [2, 4, 5, 7, 9, 10, 13, 14, 16, 18, 19, 21, 22, 26, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 50, 54, 55, 57, 58, 59, 60, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 87, 89, 92, 93, 94, 95, 96, 98, 100, 102, 103, 108, 111, 112, 113, 114, 115, 116, 117, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 288, 289, 291, 292, 295, 297, 298, 302, 303, 305, 306, 307, 308, 309, 312, 313, 316, 317, 318, 319, 320, 321, 324, 325, 326, 330, 331, 332, 337, 341, 342, 345, 347, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 367, 369, 370, 371, 372, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 460, 461, 463, 464, 467, 469, 470, 472, 473, 474, 476, 477, 478, 479, 480, 481, 485, 486, 487, 488, 490, 494, 495, 496, 499, 502, 503, 506, 508, 510, 511, 513, 515, 520, 521, 523, 527, 528, 529, 530, 531, 532, 534, 535, 537, 538, 539, 545, 547, 548, 552, 556, 558, 560, 561, 562, 563, 564, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 585, 588, 589, 590, 591, 592, 593, 594, 597, 600, 601, 607, 610, 611, 613, 616, 617, 618, 620, 622, 623, 627, 628, 633, 636, 642, 644, 647, 648, 650, 652, 654, 655, 658, 659, 660, 667, 669, 670, 671, 672, 673, 676, 677, 680, 683, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 705, 706, 707, 708, 709, 710, 713, 724, 734, 737, 741, 744, 748, 749, 751, 752, 754, 756, 757, 759, 763, 764, 767, 769, 770, 771, 772, 775, 776, 780, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 819, 820, 823, 824, 834, 836, 841, 843, 844, 845, 848, 849, 850, 851, 852, 853, 861, 862, 863, 865, 867, 868, 869, 871, 872, 874, 876, 886], "look": [2, 4, 7, 8, 19, 21, 27, 32, 33, 42, 55, 58, 60, 67, 68, 70, 71, 82, 83, 92, 107, 110, 111, 112, 119, 120, 121, 126, 132, 134, 140, 143, 144, 149, 150, 155, 157, 159, 160, 161, 165, 167, 171, 174, 176, 177, 178, 179, 181, 182, 187, 188, 190, 191, 198, 201, 202, 203, 205, 206, 207, 209, 210, 211, 215, 223, 226, 231, 240, 241, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 300, 303, 309, 377, 378, 379, 380, 382, 383, 384, 386, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 452, 459, 461, 479, 480, 509, 561, 563, 588, 611, 706, 754, 770, 773, 800, 810, 812, 817, 818, 843, 844, 845, 860, 866, 867, 868, 869, 871, 886], "high": [2, 4, 7, 10, 12, 22, 38, 40, 59, 73, 74, 81, 82, 83, 87, 93, 98, 118, 140, 141, 142, 150, 155, 156, 159, 166, 170, 187, 189, 190, 195, 198, 202, 204, 205, 206, 209, 210, 211, 228, 229, 230, 231, 235, 241, 244, 264, 265, 266, 267, 277, 282, 354, 355, 356, 357, 359, 393, 413, 422, 446, 447, 449, 470, 479, 480, 504, 528, 561, 566, 569, 573, 574, 578, 579, 583, 584, 586, 587, 593, 597, 659, 692, 754, 841, 852, 870, 886], "frequenc": [2, 5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 34, 36, 42, 56, 68, 71, 72, 73, 76, 80, 81, 82, 83, 87, 89, 92, 93, 98, 102, 103, 105, 106, 107, 108, 109, 111, 114, 120, 122, 125, 126, 132, 136, 139, 140, 141, 142, 143, 145, 148, 150, 155, 166, 167, 168, 171, 179, 182, 190, 194, 195, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 230, 234, 236, 243, 244, 256, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 278, 279, 280, 283, 287, 288, 289, 290, 291, 292, 297, 312, 328, 341, 342, 349, 354, 363, 373, 393, 411, 413, 416, 417, 419, 422, 423, 424, 432, 435, 437, 439, 440, 446, 447, 449, 450, 451, 452, 475, 477, 479, 480, 489, 494, 527, 528, 532, 534, 535, 539, 544, 545, 558, 561, 566, 569, 573, 574, 578, 579, 582, 583, 584, 586, 587, 593, 597, 611, 614, 623, 625, 673, 685, 692, 693, 694, 696, 697, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 749, 754, 758, 777, 780, 781, 782, 786, 787, 795, 799, 802, 808, 813, 814, 816, 841, 865, 871, 872, 876, 886], "respons": [2, 4, 8, 10, 16, 17, 19, 20, 27, 35, 46, 49, 51, 59, 65, 77, 84, 87, 93, 95, 96, 106, 112, 116, 119, 120, 121, 127, 129, 134, 141, 142, 144, 148, 149, 161, 167, 179, 182, 184, 190, 195, 198, 201, 206, 230, 231, 234, 236, 241, 244, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 354, 373, 393, 417, 423, 425, 435, 437, 440, 447, 450, 479, 480, 558, 562, 608, 620, 706, 708, 709, 710, 719, 785, 792, 794, 795, 802, 841, 861, 862, 867, 868, 871, 886], "jussi": [2, 61, 244, 393, 593, 886], "nurminen": [2, 61, 244, 393, 593, 886], "jnu": [2, 61], "iki": [2, 61], "fi": [2, 10, 61, 85, 190, 478], "o": [2, 19, 44, 61, 71, 75, 82, 114, 124, 139, 158, 160, 168, 170, 171, 184, 194, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 211, 215, 216, 217, 218, 244, 256, 261, 264, 265, 266, 267, 269, 354, 372, 380, 389, 411, 418, 459, 479, 480, 560, 561, 570, 575, 649, 706, 708, 710, 771, 786, 793, 809, 814, 816, 845, 857, 862, 865, 876, 886], "hf_sef": [2, 170, 862, 876, 886], "fname_evok": [2, 11, 30, 38, 39, 41, 44, 57, 58, 60, 123, 126, 178, 180, 222], "path": [2, 19, 33, 43, 44, 45, 61, 75, 100, 114, 118, 119, 122, 124, 134, 135, 139, 143, 154, 155, 156, 157, 158, 165, 169, 170, 171, 174, 180, 181, 184, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 215, 216, 217, 218, 222, 227, 256, 258, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 288, 301, 303, 304, 307, 308, 309, 312, 313, 321, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 351, 352, 360, 365, 366, 367, 372, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 430, 432, 445, 454, 459, 460, 461, 463, 464, 467, 469, 470, 471, 472, 473, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 517, 519, 523, 542, 546, 547, 548, 550, 551, 560, 561, 571, 572, 582, 588, 589, 593, 603, 604, 605, 606, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 643, 644, 651, 654, 655, 657, 658, 659, 669, 671, 672, 674, 675, 683, 701, 702, 704, 705, 706, 707, 708, 709, 710, 726, 727, 728, 739, 741, 743, 746, 748, 753, 754, 762, 770, 772, 782, 784, 794, 801, 807, 812, 817, 818, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 845, 848, 850, 851, 856, 886], "join": [2, 10, 19, 44, 61, 75, 134, 139, 158, 169, 170, 183, 184, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 215, 216, 217, 218, 264, 265, 266, 267, 479, 480], "subject_b": 2, "hf_sef_15min": 2, "av": [2, 11, 30, 31, 35, 38, 39, 40, 41, 44, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 64, 68, 78, 85, 86, 89, 91, 94, 115, 118, 119, 123, 126, 148, 149, 171, 175, 177, 178, 180, 222, 256, 264, 265, 266, 267, 274, 479, 480, 551, 623, 632, 709, 832, 862], "fif": [2, 5, 7, 10, 11, 13, 14, 15, 16, 18, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 64, 66, 68, 69, 71, 72, 73, 74, 76, 78, 79, 80, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 126, 128, 130, 131, 132, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 188, 189, 190, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 217, 218, 222, 223, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 251, 258, 261, 262, 263, 264, 265, 266, 267, 269, 274, 277, 304, 312, 334, 365, 366, 367, 432, 441, 442, 443, 444, 461, 471, 479, 480, 500, 504, 519, 523, 542, 546, 561, 571, 582, 589, 593, 605, 611, 613, 614, 615, 616, 620, 623, 625, 631, 635, 638, 642, 645, 671, 674, 701, 741, 743, 754, 770, 827, 829, 830, 831, 832, 833, 834, 837, 838, 840, 845, 852, 857, 861, 862, 868, 871, 874, 886], "interest": [2, 4, 9, 16, 21, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 63, 78, 81, 85, 86, 89, 94, 95, 96, 99, 100, 103, 106, 111, 112, 113, 115, 118, 119, 126, 127, 134, 136, 139, 141, 142, 143, 148, 149, 154, 159, 161, 169, 171, 175, 177, 178, 179, 180, 189, 191, 194, 195, 198, 201, 202, 205, 210, 211, 212, 216, 222, 223, 226, 227, 228, 229, 230, 240, 241, 259, 264, 265, 266, 267, 269, 289, 291, 324, 416, 419, 435, 437, 455, 463, 479, 480, 513, 534, 535, 545, 560, 561, 608, 617, 619, 655, 706, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 736, 737, 754, 808, 814, 841, 845, 861, 865, 868, 886], "t": [2, 4, 5, 9, 15, 19, 21, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 63, 65, 70, 78, 80, 82, 83, 85, 86, 92, 93, 94, 95, 97, 100, 101, 107, 113, 114, 115, 116, 118, 119, 126, 139, 140, 142, 143, 144, 145, 148, 150, 155, 156, 157, 158, 159, 161, 164, 165, 167, 169, 170, 171, 175, 176, 177, 178, 179, 180, 182, 183, 187, 190, 194, 195, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 215, 217, 222, 223, 226, 227, 228, 229, 230, 231, 236, 237, 238, 239, 240, 241, 244, 256, 259, 260, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 277, 278, 279, 280, 287, 297, 298, 341, 344, 350, 359, 360, 372, 373, 377, 378, 379, 380, 382, 383, 384, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 417, 432, 434, 446, 452, 455, 474, 477, 479, 480, 490, 491, 527, 528, 536, 542, 548, 550, 552, 558, 561, 564, 572, 573, 578, 579, 582, 584, 591, 593, 594, 602, 610, 613, 617, 619, 620, 623, 624, 627, 630, 633, 635, 652, 655, 671, 672, 678, 684, 690, 691, 692, 693, 695, 696, 698, 699, 700, 706, 707, 708, 709, 710, 722, 726, 729, 732, 733, 734, 736, 737, 744, 754, 789, 799, 841, 844, 845, 846, 851, 853, 861, 862, 867, 868, 869, 871, 886], "250": [2, 4, 21, 46, 80, 116, 122, 135, 136, 140, 142, 150, 155, 165, 168, 180, 198, 200, 201, 202, 206, 208, 226, 231, 238, 239, 244, 659, 713, 850, 886], "ctf": [2, 27, 30, 31, 35, 36, 38, 39, 40, 41, 44, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 78, 85, 86, 100, 115, 118, 119, 126, 139, 142, 148, 164, 169, 171, 175, 177, 178, 180, 185, 186, 192, 193, 226, 227, 258, 261, 262, 264, 265, 266, 267, 268, 269, 275, 302, 338, 345, 353, 355, 359, 361, 363, 364, 452, 454, 479, 480, 492, 517, 518, 523, 524, 527, 528, 537, 538, 539, 540, 543, 558, 559, 574, 593, 614, 623, 625, 631, 638, 654, 706, 708, 709, 710, 754, 770, 862, 868, 871, 886], "matric": [2, 10, 30, 31, 34, 35, 38, 39, 40, 41, 44, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 78, 85, 86, 100, 102, 115, 118, 119, 126, 139, 142, 145, 148, 155, 162, 164, 165, 171, 175, 177, 178, 180, 187, 195, 226, 227, 244, 290, 297, 354, 411, 419, 479, 480, 572, 582, 593, 605, 657, 658, 659, 671, 692, 707, 717, 745, 747, 780, 861, 868, 871, 883, 886], "nave": [2, 5, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 68, 78, 85, 86, 89, 91, 93, 103, 106, 107, 108, 109, 113, 115, 118, 119, 126, 148, 165, 171, 175, 176, 177, 178, 180, 181, 190, 195, 221, 222, 223, 234, 236, 257, 263, 266, 267, 269, 353, 468, 529, 530, 531, 532, 534, 535, 541, 544, 545, 670, 706, 871, 886], "2790": 2, "aspect": [2, 16, 22, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 78, 85, 86, 106, 115, 118, 119, 126, 141, 148, 171, 175, 177, 178, 180, 202, 205, 228, 229, 230, 231, 757, 871, 886], "specifi": [2, 4, 5, 9, 19, 31, 38, 41, 43, 47, 63, 87, 93, 94, 100, 102, 108, 113, 119, 126, 127, 134, 139, 140, 141, 148, 149, 150, 154, 157, 165, 166, 167, 168, 169, 170, 171, 177, 183, 184, 187, 191, 195, 198, 199, 201, 202, 203, 204, 206, 207, 209, 210, 211, 215, 216, 217, 218, 227, 228, 231, 234, 240, 256, 258, 259, 261, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 288, 290, 297, 298, 302, 309, 314, 324, 330, 354, 355, 356, 357, 358, 359, 360, 369, 370, 371, 372, 377, 378, 379, 380, 382, 383, 384, 385, 388, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 418, 422, 423, 427, 428, 432, 435, 437, 446, 447, 449, 450, 452, 454, 455, 463, 467, 470, 474, 476, 477, 478, 479, 480, 481, 489, 494, 495, 504, 508, 519, 522, 527, 529, 537, 538, 539, 550, 560, 561, 564, 566, 571, 572, 574, 575, 576, 580, 582, 593, 608, 611, 615, 617, 619, 624, 627, 633, 642, 645, 647, 650, 655, 656, 671, 683, 686, 692, 693, 694, 696, 697, 704, 706, 708, 709, 710, 722, 732, 736, 741, 754, 757, 769, 770, 771, 773, 778, 785, 786, 788, 792, 793, 794, 797, 799, 800, 801, 803, 806, 809, 812, 813, 814, 816, 817, 818, 819, 823, 836, 841, 845, 863, 865, 868, 871, 886], "pleas": [2, 4, 5, 74, 76, 82, 100, 108, 122, 134, 135, 136, 145, 165, 171, 183, 184, 188, 195, 198, 203, 204, 210, 211, 227, 236, 256, 264, 265, 289, 291, 332, 338, 371, 389, 438, 450, 452, 479, 480, 490, 561, 582, 594, 625, 784, 801, 807, 833, 841, 843, 845, 849, 851, 857, 860, 861, 862, 864, 866, 868, 869, 886], "consid": [2, 4, 5, 81, 92, 100, 103, 107, 108, 111, 136, 140, 143, 151, 155, 158, 160, 161, 165, 183, 184, 191, 195, 198, 199, 200, 201, 203, 204, 209, 210, 211, 226, 227, 228, 231, 234, 236, 241, 259, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 278, 279, 280, 287, 297, 298, 309, 319, 337, 354, 358, 359, 370, 371, 411, 418, 419, 432, 441, 442, 443, 444, 446, 452, 459, 476, 477, 479, 480, 487, 494, 496, 498, 502, 556, 561, 563, 564, 569, 571, 572, 576, 578, 580, 582, 585, 591, 593, 598, 617, 619, 623, 667, 676, 677, 678, 680, 681, 693, 694, 696, 697, 706, 709, 711, 712, 713, 714, 715, 716, 717, 754, 767, 776, 784, 787, 788, 800, 807, 841, 843, 864, 867, 886], "self": [2, 4, 5, 100, 108, 171, 183, 184, 195, 198, 203, 210, 211, 227, 236, 258, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 278, 279, 280, 288, 302, 365, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 478, 479, 480, 498, 527, 560, 561, 562, 706, 708, 709, 710, 741, 755, 845, 863, 865, 886], "highpass": [2, 12, 71, 73, 76, 80, 81, 82, 89, 92, 98, 126, 140, 145, 150, 165, 166, 167, 168, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 241, 256, 264, 265, 266, 267, 269, 446, 479, 480, 708, 710, 807, 808, 871, 886], "version": [2, 19, 34, 70, 83, 113, 144, 145, 149, 154, 160, 165, 170, 187, 188, 189, 194, 195, 200, 201, 218, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 284, 285, 288, 293, 297, 298, 300, 304, 305, 306, 307, 308, 309, 312, 313, 316, 317, 318, 320, 321, 322, 323, 324, 328, 330, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 369, 370, 371, 386, 387, 389, 390, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 422, 423, 427, 430, 432, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 458, 459, 461, 464, 468, 470, 471, 473, 474, 476, 477, 478, 479, 480, 487, 488, 490, 491, 492, 494, 495, 496, 500, 503, 505, 508, 510, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 528, 529, 530, 531, 534, 535, 536, 537, 538, 539, 541, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 560, 561, 562, 563, 564, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 582, 583, 592, 593, 594, 601, 603, 607, 608, 613, 615, 617, 619, 620, 623, 624, 625, 628, 636, 638, 639, 641, 642, 644, 647, 650, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 687, 688, 689, 698, 699, 700, 701, 705, 706, 707, 708, 709, 710, 718, 720, 723, 724, 725, 728, 733, 734, 736, 737, 738, 739, 742, 743, 744, 751, 754, 755, 757, 763, 764, 770, 771, 772, 773, 775, 777, 778, 779, 781, 782, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 816, 817, 818, 819, 820, 823, 827, 830, 832, 836, 837, 839, 844, 845, 848, 849, 850, 851, 860, 862, 865, 867, 868, 871, 874], "evoked_hp": 2, "l_freq": [2, 21, 82, 113, 143, 145, 150, 190, 201, 202, 204, 206, 241, 256, 264, 265, 266, 267, 413, 422, 447, 449, 479, 480, 561, 569, 573, 574, 578, 579, 583, 584, 586, 587, 597, 872], "300": [2, 4, 5, 21, 34, 46, 51, 74, 80, 81, 91, 111, 115, 134, 139, 148, 150, 168, 182, 190, 202, 204, 208, 211, 226, 231, 239, 706, 871, 886], "h_freq": [2, 21, 82, 113, 143, 145, 150, 190, 201, 202, 204, 206, 209, 241, 256, 264, 265, 266, 267, 413, 422, 447, 449, 479, 480, 561, 569, 573, 574, 578, 579, 582, 583, 584, 586, 587, 597, 872], "3e": [2, 8, 9, 21, 32, 35, 45, 48, 49, 50, 51, 54, 55, 58, 93, 108, 151, 175, 177, 178, 179, 180, 195, 573, 574, 771], "edg": [2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 32, 34, 42, 59, 70, 72, 73, 76, 81, 82, 83, 87, 98, 109, 112, 113, 114, 119, 120, 132, 135, 140, 141, 143, 145, 150, 160, 171, 190, 195, 198, 200, 201, 202, 203, 204, 206, 209, 210, 211, 217, 218, 222, 226, 231, 241, 261, 264, 265, 266, 267, 273, 274, 282, 318, 411, 413, 417, 418, 440, 447, 449, 451, 477, 479, 480, 560, 561, 563, 564, 576, 582, 593, 597, 706, 708, 710, 758, 767, 771, 772, 786, 793, 797, 806, 807, 809, 814, 816, 865, 886], "75": [2, 4, 5, 8, 12, 13, 16, 19, 21, 24, 34, 35, 41, 44, 70, 72, 76, 79, 80, 82, 102, 111, 113, 114, 126, 134, 142, 143, 145, 157, 168, 171, 179, 183, 190, 194, 195, 198, 200, 203, 204, 206, 207, 208, 217, 226, 227, 230, 231, 479, 480, 561, 810, 862, 868, 886], "cutoff": [2, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 26, 34, 42, 72, 73, 76, 81, 82, 83, 87, 98, 112, 113, 114, 120, 132, 135, 140, 143, 145, 150, 171, 190, 195, 198, 200, 202, 203, 204, 206, 209, 210, 211, 231, 264, 265, 266, 267, 413, 422, 447, 449, 479, 480, 561, 569, 582, 597], "262": [2, 12, 19, 21, 150, 168, 175, 186, 195, 210, 244], "133": [2, 35, 61, 155, 157, 168, 170, 207, 226, 230], "044": [2, 139, 141, 148, 168, 223], "306": [2, 12, 20, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 61, 68, 76, 82, 83, 89, 91, 92, 93, 94, 108, 130, 145, 157, 168, 171, 176, 177, 178, 179, 182, 195, 208, 209, 222, 223, 231, 561, 862], "condit": [2, 10, 11, 16, 17, 20, 27, 30, 31, 35, 38, 39, 40, 41, 44, 45, 51, 58, 59, 60, 61, 78, 85, 86, 87, 93, 95, 98, 109, 111, 118, 119, 121, 123, 129, 139, 140, 141, 142, 143, 144, 148, 149, 152, 164, 165, 167, 175, 176, 177, 178, 179, 180, 183, 184, 190, 195, 201, 210, 216, 221, 226, 227, 228, 231, 232, 233, 234, 235, 236, 239, 244, 257, 264, 265, 266, 267, 269, 353, 354, 414, 421, 427, 433, 479, 526, 551, 558, 562, 572, 582, 593, 608, 620, 622, 623, 624, 687, 692, 693, 694, 696, 706, 708, 709, 710, 728, 736, 778, 792, 841, 845, 861, 862, 868, 872, 886], "kind": [2, 5, 7, 11, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 68, 82, 89, 91, 92, 93, 94, 103, 106, 107, 108, 109, 123, 126, 130, 134, 135, 141, 148, 150, 155, 159, 165, 168, 169, 171, 174, 176, 177, 178, 179, 180, 183, 189, 190, 195, 202, 205, 222, 223, 234, 235, 236, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 276, 277, 278, 279, 280, 297, 298, 305, 306, 312, 313, 328, 338, 374, 390, 430, 431, 446, 473, 479, 480, 512, 549, 562, 623, 701, 706, 708, 709, 710, 722, 732, 754, 773, 775, 804, 810, 812, 817, 818, 845, 852, 865, 868, 871, 886], "timepoint": [2, 19, 59, 100, 119, 140, 148, 150, 178, 180, 183, 215, 259, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 287, 348, 522, 578, 623, 624], "901": [2, 194, 231], "number": [2, 4, 5, 9, 10, 11, 31, 34, 35, 39, 40, 42, 44, 46, 49, 52, 59, 72, 74, 76, 81, 82, 87, 89, 91, 92, 99, 102, 106, 108, 112, 113, 120, 126, 134, 139, 141, 142, 143, 144, 145, 148, 149, 150, 159, 160, 161, 164, 165, 167, 169, 170, 171, 174, 176, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 191, 195, 198, 199, 200, 201, 203, 204, 205, 209, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 241, 244, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 297, 298, 299, 300, 324, 327, 335, 342, 348, 354, 355, 356, 357, 358, 359, 360, 362, 365, 369, 370, 371, 380, 410, 411, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 427, 428, 432, 434, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 467, 468, 469, 474, 476, 477, 478, 479, 480, 481, 490, 504, 511, 513, 519, 522, 523, 528, 529, 530, 531, 532, 534, 535, 537, 538, 539, 541, 543, 544, 545, 560, 561, 562, 566, 570, 571, 572, 573, 574, 576, 577, 582, 583, 584, 586, 588, 589, 591, 592, 598, 599, 610, 620, 624, 645, 654, 655, 656, 657, 658, 659, 660, 664, 665, 666, 669, 670, 671, 672, 680, 681, 682, 683, 685, 686, 687, 689, 691, 693, 694, 695, 696, 697, 698, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 720, 722, 724, 725, 732, 733, 734, 735, 736, 737, 738, 744, 752, 753, 754, 762, 771, 777, 778, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 793, 794, 795, 797, 798, 800, 801, 806, 807, 808, 809, 812, 813, 814, 815, 816, 817, 820, 841, 845, 860, 862, 865, 869, 871, 886], "rang": [2, 4, 5, 9, 10, 11, 13, 14, 15, 16, 18, 19, 28, 29, 32, 33, 34, 42, 45, 46, 49, 59, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 81, 82, 83, 87, 91, 92, 93, 95, 96, 98, 99, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 122, 126, 128, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 150, 151, 155, 157, 158, 159, 161, 165, 166, 167, 168, 170, 171, 175, 176, 178, 179, 180, 181, 182, 183, 184, 189, 190, 191, 195, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 236, 239, 240, 241, 256, 257, 261, 264, 265, 266, 267, 269, 273, 274, 297, 321, 373, 380, 395, 403, 404, 411, 414, 418, 420, 421, 444, 470, 476, 479, 480, 487, 560, 561, 566, 576, 582, 706, 707, 708, 709, 710, 722, 732, 771, 784, 785, 786, 790, 793, 797, 806, 807, 808, 809, 814, 816, 841, 861, 867, 868, 871, 886], "05": [2, 4, 5, 6, 8, 9, 10, 19, 20, 34, 35, 42, 46, 49, 51, 56, 59, 60, 66, 71, 78, 83, 86, 91, 94, 95, 96, 99, 101, 102, 105, 111, 115, 118, 119, 123, 129, 138, 140, 143, 149, 150, 163, 169, 173, 176, 178, 179, 180, 182, 184, 190, 194, 198, 199, 202, 206, 208, 210, 215, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 244, 297, 298, 321, 324, 330, 450, 454, 479, 480, 498, 543, 570, 666, 684, 689, 690, 693, 694, 696, 697, 698, 706, 720, 722, 732, 736, 758, 813], "25": [2, 4, 5, 11, 13, 16, 18, 19, 25, 26, 28, 34, 35, 40, 41, 43, 45, 47, 49, 50, 53, 56, 64, 68, 70, 72, 76, 80, 81, 82, 84, 102, 105, 107, 108, 112, 113, 115, 123, 134, 135, 136, 142, 144, 145, 150, 158, 168, 169, 170, 171, 174, 177, 179, 180, 182, 190, 194, 195, 197, 198, 200, 201, 203, 204, 205, 206, 208, 209, 212, 217, 223, 225, 226, 227, 228, 230, 231, 234, 235, 236, 239, 240, 244, 258, 264, 265, 266, 267, 271, 272, 275, 276, 277, 278, 279, 280, 360, 403, 411, 413, 422, 447, 449, 479, 480, 597, 666, 695, 754, 758, 778, 790, 807, 810, 812, 817, 844, 861, 868], "off": [2, 4, 10, 67, 73, 76, 92, 113, 115, 126, 134, 136, 140, 142, 148, 150, 151, 155, 158, 159, 165, 166, 167, 168, 170, 190, 194, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 211, 215, 216, 217, 218, 221, 222, 223, 244, 256, 259, 264, 265, 266, 267, 277, 297, 298, 413, 422, 447, 449, 479, 480, 560, 573, 574, 576, 584, 587, 593, 597, 608, 734, 737, 845, 861, 862, 868, 871, 886], "compar": [2, 4, 10, 19, 21, 22, 26, 27, 28, 36, 38, 39, 56, 73, 77, 82, 84, 88, 90, 102, 112, 113, 121, 129, 140, 142, 143, 144, 145, 157, 159, 161, 165, 166, 171, 175, 179, 182, 183, 190, 195, 201, 203, 205, 206, 207, 228, 229, 230, 234, 235, 241, 259, 261, 264, 265, 266, 267, 268, 269, 270, 275, 277, 358, 359, 364, 387, 452, 479, 480, 484, 513, 516, 520, 527, 528, 539, 540, 543, 559, 561, 593, 614, 616, 620, 623, 625, 628, 656, 660, 661, 662, 663, 664, 665, 666, 668, 671, 677, 754, 762, 784, 792, 801, 807, 845, 853, 865, 874, 886], "unfilt": [2, 165, 171, 201, 204], "singl": [2, 3, 6, 16, 18, 27, 33, 34, 36, 45, 56, 67, 70, 74, 82, 83, 86, 93, 100, 102, 104, 105, 112, 116, 119, 121, 129, 139, 140, 141, 143, 144, 148, 149, 150, 157, 164, 165, 167, 168, 169, 171, 175, 177, 179, 182, 183, 187, 188, 189, 195, 198, 199, 201, 204, 205, 206, 207, 209, 210, 211, 215, 216, 221, 223, 226, 231, 232, 233, 236, 240, 241, 244, 256, 258, 259, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 291, 292, 295, 297, 298, 304, 312, 314, 318, 319, 324, 353, 354, 359, 386, 411, 412, 418, 424, 427, 433, 437, 440, 452, 470, 479, 480, 495, 499, 501, 514, 517, 520, 522, 524, 527, 528, 530, 532, 534, 535, 542, 558, 560, 561, 566, 569, 576, 608, 616, 620, 627, 633, 640, 650, 655, 672, 686, 687, 689, 690, 691, 693, 694, 701, 706, 707, 708, 709, 710, 722, 732, 733, 734, 736, 737, 744, 754, 770, 771, 772, 778, 782, 785, 786, 787, 788, 790, 793, 794, 797, 804, 805, 806, 808, 809, 810, 814, 816, 829, 845, 854, 861, 862, 865, 868, 871, 872, 874, 886], "meg0443": 2, "ch_name": [2, 4, 7, 15, 18, 19, 31, 63, 67, 70, 72, 74, 85, 99, 111, 113, 114, 119, 124, 134, 135, 139, 145, 148, 150, 158, 165, 167, 168, 171, 183, 189, 190, 199, 202, 204, 206, 209, 210, 211, 215, 221, 223, 228, 229, 230, 231, 240, 256, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 297, 298, 312, 314, 318, 321, 324, 329, 337, 369, 370, 373, 478, 479, 480, 552, 553, 554, 555, 561, 573, 574, 578, 579, 582, 583, 584, 604, 625, 647, 660, 706, 707, 708, 709, 710, 711, 712, 713, 723, 775, 784, 785, 807, 871, 886], "index": [2, 4, 19, 21, 31, 47, 61, 70, 72, 75, 89, 132, 135, 142, 148, 149, 150, 159, 165, 168, 169, 171, 174, 179, 182, 183, 187, 190, 194, 198, 200, 203, 204, 205, 206, 208, 209, 210, 216, 217, 222, 227, 228, 239, 240, 244, 257, 258, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 277, 278, 279, 280, 284, 285, 296, 297, 298, 311, 321, 349, 363, 471, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 520, 531, 551, 561, 578, 579, 583, 584, 586, 587, 588, 597, 623, 624, 666, 706, 707, 708, 709, 710, 754, 767, 772, 778, 782, 787, 797, 799, 801, 841, 862, 868, 886], "edi": 2, "regular": [2, 5, 28, 29, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 54, 55, 57, 58, 59, 60, 78, 82, 89, 93, 98, 103, 106, 107, 108, 109, 120, 165, 168, 177, 178, 179, 180, 181, 190, 195, 199, 206, 209, 221, 222, 223, 226, 234, 236, 266, 267, 270, 276, 297, 298, 354, 358, 359, 369, 370, 411, 418, 419, 423, 432, 440, 454, 455, 474, 476, 477, 487, 490, 494, 502, 528, 529, 530, 531, 532, 534, 535, 536, 539, 541, 544, 545, 555, 562, 570, 572, 582, 593, 628, 683, 686, 693, 694, 696, 697, 700, 793, 794, 811, 861, 867, 876, 886], "viz": [2, 4, 5, 7, 12, 19, 24, 27, 31, 35, 38, 39, 40, 41, 42, 46, 47, 51, 52, 57, 59, 70, 79, 80, 85, 87, 91, 92, 100, 108, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 129, 131, 132, 134, 135, 136, 140, 141, 142, 143, 149, 150, 154, 155, 156, 157, 158, 159, 165, 169, 170, 176, 177, 179, 180, 181, 182, 183, 184, 189, 194, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 216, 226, 231, 241, 262, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 309, 318, 329, 479, 480, 561, 615, 623, 633, 638, 706, 843, 845, 861, 863, 865, 868, 872, 876, 885, 886], "plot_compare_evok": [2, 4, 100, 126, 140, 141, 142, 143, 149, 150, 165, 210, 231, 264, 265, 785, 872, 876, 886], "750": [2, 6, 75, 80, 142, 195, 231, 862], "9": [2, 4, 5, 6, 7, 8, 9, 11, 13, 19, 20, 21, 22, 24, 26, 28, 29, 32, 33, 34, 35, 37, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 59, 61, 64, 66, 68, 69, 70, 71, 73, 76, 78, 79, 80, 82, 84, 85, 86, 89, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 123, 125, 126, 127, 129, 131, 134, 135, 136, 139, 140, 141, 143, 144, 145, 147, 149, 150, 153, 155, 157, 158, 161, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 243, 244, 262, 264, 265, 266, 267, 271, 276, 277, 279, 280, 297, 298, 300, 312, 321, 335, 353, 354, 360, 361, 380, 404, 454, 464, 479, 480, 500, 516, 524, 536, 544, 560, 561, 569, 591, 608, 619, 647, 650, 688, 706, 708, 709, 710, 718, 728, 737, 738, 739, 754, 755, 757, 771, 781, 782, 787, 806, 811, 843, 844, 850, 851, 861, 862, 865, 868, 871], "hf_sef_data": [2, 6], "some": [3, 4, 5, 10, 16, 21, 27, 34, 40, 54, 55, 61, 65, 67, 70, 73, 75, 94, 97, 102, 104, 108, 112, 113, 119, 126, 134, 135, 136, 137, 139, 140, 141, 143, 144, 148, 149, 150, 151, 155, 157, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 179, 182, 183, 188, 189, 190, 191, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 215, 216, 217, 218, 221, 222, 223, 226, 230, 231, 232, 239, 241, 256, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 308, 312, 316, 320, 354, 372, 386, 425, 434, 445, 464, 470, 479, 480, 487, 494, 556, 560, 561, 563, 571, 580, 593, 601, 607, 617, 619, 646, 650, 654, 688, 694, 706, 708, 709, 710, 722, 732, 736, 770, 772, 789, 791, 807, 841, 843, 844, 845, 848, 849, 852, 857, 860, 861, 862, 863, 865, 866, 867, 868, 869, 872, 874, 886], "demo": [3, 27, 841, 886], "common": [3, 17, 20, 27, 32, 33, 34, 43, 44, 67, 75, 114, 134, 148, 150, 154, 157, 159, 161, 164, 171, 188, 191, 201, 203, 204, 205, 206, 209, 210, 215, 216, 223, 235, 241, 244, 264, 265, 266, 267, 269, 277, 312, 317, 328, 354, 363, 373, 411, 436, 440, 461, 467, 479, 480, 494, 558, 561, 577, 636, 640, 650, 706, 839, 841, 845, 862, 865, 868, 869, 872, 874, 886], "public": [3, 27, 111, 115, 119, 121, 129, 143, 201, 259, 266, 269, 275, 450, 478, 479, 623, 633, 754, 773, 845, 861, 867, 874, 886], "brainstorm": [3, 6, 27, 80, 81, 83, 108, 118, 164, 170, 185, 186, 192, 193, 244, 258, 261, 262, 264, 266, 267, 269, 275, 302, 353, 354, 355, 356, 359, 361, 363, 431, 452, 454, 479, 492, 517, 518, 523, 524, 527, 528, 539, 558, 574, 585, 593, 625, 631, 638, 654, 754, 770, 782, 794, 822, 868, 876, 884, 886], "raw": [3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 27, 28, 32, 33, 34, 36, 41, 42, 45, 46, 49, 56, 61, 63, 65, 67, 68, 69, 71, 72, 73, 74, 76, 78, 79, 81, 82, 83, 87, 88, 90, 91, 94, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 120, 122, 126, 127, 128, 131, 132, 134, 135, 140, 141, 143, 144, 145, 148, 150, 155, 157, 158, 161, 164, 165, 166, 168, 169, 170, 172, 173, 179, 181, 182, 183, 184, 187, 188, 189, 190, 191, 195, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 219, 220, 222, 223, 228, 229, 230, 231, 234, 236, 239, 240, 241, 244, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 281, 283, 284, 285, 296, 297, 298, 312, 314, 317, 341, 343, 345, 346, 347, 348, 353, 354, 356, 357, 358, 359, 362, 363, 371, 381, 393, 416, 419, 436, 440, 444, 446, 449, 452, 453, 470, 478, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 516, 519, 520, 521, 523, 525, 527, 528, 529, 530, 531, 532, 534, 535, 539, 542, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 591, 592, 593, 594, 595, 596, 597, 600, 601, 607, 608, 614, 618, 620, 622, 625, 627, 628, 647, 650, 656, 657, 658, 659, 660, 671, 672, 692, 706, 708, 709, 710, 719, 724, 752, 754, 784, 787, 788, 797, 798, 799, 801, 807, 808, 824, 841, 843, 845, 861, 862, 863, 871, 872, 876, 886], "median": [3, 5, 6, 27, 70, 127, 149, 156, 195, 204, 227, 239, 240, 261, 264, 265, 266, 267, 269, 273, 314, 356, 411, 418, 420, 452, 479, 480, 492, 558, 560, 561, 576, 585, 593, 685, 706, 708, 709, 710, 725, 771, 778, 785, 786, 793, 797, 806, 809, 814, 816, 886], "nerv": [3, 5, 6, 27, 264, 266, 267, 269, 356, 452, 492, 558, 585], "hf": [3, 6, 27, 95, 126, 190, 266, 393, 778], "sef": [3, 6, 27, 126, 266, 393, 778, 861], "trial": [3, 6, 13, 16, 18, 27, 28, 33, 69, 70, 72, 83, 100, 103, 106, 112, 113, 116, 121, 129, 139, 140, 141, 142, 143, 148, 150, 151, 164, 165, 167, 179, 182, 190, 194, 195, 200, 201, 204, 212, 221, 223, 226, 231, 232, 233, 234, 236, 244, 264, 265, 266, 267, 269, 291, 292, 295, 318, 324, 353, 411, 424, 427, 433, 434, 435, 437, 440, 452, 479, 495, 499, 530, 532, 558, 561, 569, 620, 640, 686, 687, 689, 690, 691, 693, 694, 706, 709, 733, 734, 736, 737, 778, 784, 787, 841, 862, 886], "linear": [3, 5, 6, 8, 9, 13, 17, 19, 20, 26, 27, 32, 41, 45, 50, 54, 55, 60, 98, 100, 106, 108, 109, 111, 119, 134, 135, 140, 157, 158, 165, 175, 176, 180, 181, 194, 195, 201, 203, 204, 205, 244, 259, 261, 264, 265, 266, 267, 269, 271, 272, 273, 275, 277, 278, 279, 280, 341, 353, 411, 415, 417, 418, 423, 426, 429, 446, 447, 449, 450, 479, 480, 518, 531, 533, 540, 543, 560, 561, 576, 585, 591, 620, 629, 657, 658, 659, 671, 691, 692, 701, 706, 708, 710, 742, 744, 754, 771, 773, 778, 786, 787, 793, 795, 797, 802, 806, 808, 809, 812, 814, 816, 817, 818, 841, 852, 854, 861, 862, 865, 886], "regress": [3, 6, 10, 11, 12, 15, 18, 19, 27, 31, 42, 77, 84, 97, 101, 146, 147, 164, 195, 213, 214, 226, 244, 264, 265, 266, 267, 269, 353, 417, 423, 452, 479, 526, 529, 558, 560, 579, 603, 608, 616, 690, 691, 692, 778, 787, 790, 809, 862, 874, 886], "limo": [3, 6, 27, 170, 244, 265, 266, 267, 353, 691, 778, 787, 876, 886], "optic": [3, 6, 27, 75, 164, 187, 189, 213, 214, 244, 262, 264, 266, 267, 269, 275, 302, 354, 364, 371, 440, 452, 454, 488, 501, 527, 528, 539, 555, 558, 560, 575, 595, 596, 600, 612, 625, 710, 748, 754, 770, 822, 841, 862, 886], "pump": [3, 6, 27, 164, 187, 213, 214, 244, 262, 264, 266, 267, 269, 275, 302, 354, 364, 452, 454, 501, 527, 528, 539, 555, 558, 560, 575, 612, 625, 710, 748, 754, 770, 822, 841, 862, 886], "magnetomet": [3, 6, 22, 27, 32, 73, 76, 79, 80, 81, 86, 92, 108, 118, 119, 141, 144, 145, 149, 150, 161, 164, 165, 166, 167, 168, 179, 182, 183, 187, 190, 198, 199, 200, 202, 204, 205, 206, 207, 209, 213, 214, 215, 216, 217, 218, 221, 226, 244, 256, 259, 261, 262, 264, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 280, 297, 298, 302, 320, 354, 355, 356, 357, 358, 359, 364, 369, 370, 371, 411, 418, 432, 452, 454, 455, 474, 476, 477, 479, 480, 501, 516, 527, 528, 539, 555, 558, 559, 560, 561, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 593, 604, 612, 625, 692, 706, 708, 709, 710, 748, 754, 770, 771, 777, 784, 785, 786, 788, 790, 793, 794, 797, 806, 807, 809, 814, 815, 816, 822, 841, 861, 862, 865, 868, 886], "opm": [3, 6, 27, 104, 105, 164, 170, 213, 214, 244, 261, 262, 264, 266, 267, 269, 275, 302, 354, 359, 364, 452, 454, 501, 518, 523, 527, 528, 534, 539, 555, 558, 560, 575, 612, 625, 654, 710, 748, 754, 770, 822, 841, 868, 876, 886], "dspm": [3, 6, 11, 27, 29, 31, 36, 37, 38, 39, 40, 41, 42, 44, 55, 56, 59, 60, 103, 104, 105, 106, 107, 108, 164, 165, 174, 177, 178, 180, 181, 185, 186, 190, 195, 222, 223, 234, 236, 261, 264, 266, 267, 268, 269, 270, 271, 272, 275, 277, 278, 279, 280, 290, 294, 297, 298, 353, 354, 358, 452, 476, 477, 479, 492, 514, 519, 523, 527, 528, 529, 530, 531, 532, 533, 534, 535, 539, 540, 541, 542, 544, 545, 558, 561, 579, 620, 623, 625, 627, 715, 754, 779, 787, 841, 861, 862, 871, 886], "spm": [3, 6, 27, 122, 195, 353, 354, 406, 452, 492, 519, 523, 528, 539, 558, 561, 579, 787, 874, 884, 886], "face": [3, 4, 6, 10, 27, 69, 122, 139, 141, 143, 148, 150, 160, 165, 171, 174, 195, 198, 244, 264, 265, 306, 353, 354, 452, 492, 519, 523, 528, 539, 558, 561, 579, 636, 639, 706, 767, 787, 815, 834, 839, 871, 874, 886], "explor": [4, 27, 104, 105, 108, 157, 180, 195, 199, 201, 203, 206, 218, 221, 222, 240, 241, 264, 267, 279, 280, 287, 452, 685, 818, 842, 862, 863, 865], "structur": [4, 8, 9, 10, 27, 41, 43, 59, 62, 63, 67, 70, 82, 93, 94, 111, 113, 122, 134, 136, 141, 145, 146, 147, 150, 152, 153, 154, 158, 164, 165, 166, 169, 170, 172, 173, 180, 184, 185, 186, 188, 189, 191, 194, 204, 212, 216, 219, 220, 224, 225, 226, 227, 241, 244, 258, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 277, 278, 279, 280, 310, 311, 312, 320, 353, 372, 373, 389, 393, 452, 477, 479, 480, 484, 499, 521, 541, 552, 555, 557, 558, 572, 589, 593, 616, 618, 622, 623, 633, 666, 676, 677, 678, 679, 680, 681, 682, 686, 706, 708, 709, 710, 725, 744, 754, 810, 841, 845, 846, 849, 852, 857, 859, 861, 862, 863, 874, 886], "contain": [4, 16, 18, 27, 31, 38, 41, 43, 53, 79, 87, 93, 100, 107, 111, 115, 126, 127, 136, 139, 142, 143, 145, 148, 150, 154, 157, 161, 164, 165, 167, 168, 169, 170, 171, 174, 180, 182, 187, 188, 189, 190, 191, 201, 203, 204, 205, 206, 209, 210, 211, 212, 215, 216, 221, 223, 226, 239, 240, 241, 251, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 284, 285, 289, 297, 298, 299, 303, 307, 308, 309, 312, 313, 314, 315, 318, 319, 320, 326, 335, 338, 349, 354, 355, 356, 357, 358, 359, 360, 365, 366, 367, 368, 369, 370, 371, 386, 390, 392, 393, 394, 411, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 430, 432, 435, 438, 439, 440, 445, 452, 453, 454, 455, 459, 460, 461, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 479, 480, 486, 488, 489, 490, 491, 493, 495, 496, 497, 498, 499, 500, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 517, 519, 521, 522, 539, 547, 550, 551, 556, 560, 561, 562, 564, 566, 576, 577, 582, 588, 589, 590, 592, 593, 597, 599, 605, 606, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 622, 623, 624, 628, 631, 634, 636, 637, 639, 645, 647, 649, 650, 654, 655, 661, 662, 663, 664, 665, 666, 667, 668, 669, 672, 674, 675, 683, 685, 691, 693, 694, 696, 697, 698, 701, 702, 706, 707, 708, 709, 710, 718, 721, 729, 733, 734, 736, 737, 746, 754, 770, 771, 772, 773, 778, 781, 782, 784, 785, 786, 787, 788, 790, 791, 793, 794, 795, 797, 803, 806, 809, 810, 811, 812, 813, 814, 816, 817, 818, 831, 834, 836, 837, 839, 841, 844, 845, 861, 862, 863, 865, 868, 871, 872, 886], "replic": [4, 16, 230, 234, 235, 236, 270, 683, 862, 865, 866, 886], "extend": [4, 76, 140, 143, 150, 165, 179, 199, 204, 206, 209, 211, 231, 244, 258, 261, 262, 264, 265, 266, 267, 273, 279, 354, 411, 418, 479, 480, 513, 521, 560, 561, 564, 572, 576, 582, 591, 593, 673, 706, 708, 710, 722, 732, 736, 744, 771, 782, 786, 793, 797, 806, 809, 814, 816, 849, 852, 861, 874, 886], "main": [4, 49, 93, 100, 142, 155, 167, 170, 207, 211, 217, 230, 236, 264, 265, 326, 393, 470, 492, 687, 689, 784, 843, 845, 853, 862, 868, 869, 886], "tool": [4, 27, 54, 55, 70, 79, 88, 139, 150, 154, 157, 160, 170, 189, 191, 198, 199, 201, 204, 206, 210, 227, 236, 241, 244, 251, 271, 272, 275, 278, 279, 280, 479, 480, 517, 543, 843, 848, 849, 850, 851, 853, 857, 861, 865, 866, 867, 868, 869, 873, 874, 876, 884, 886], "integr": [4, 154, 159, 200, 204, 226, 236, 244, 543, 561, 593, 666, 845, 849, 857, 868, 871, 886], "meeg": [4, 241], "matlab": [4, 19, 194, 244, 303, 417, 499, 602, 618, 622, 851, 852, 862, 869, 870, 874, 884, 886], "toolbox": [4, 19, 70, 150, 154, 194, 244, 303, 417, 450, 569, 852, 862], "origin": [4, 5, 8, 9, 11, 12, 13, 16, 18, 21, 22, 24, 26, 32, 33, 34, 38, 41, 42, 45, 46, 49, 50, 70, 71, 72, 75, 78, 79, 80, 86, 92, 93, 95, 96, 99, 102, 106, 109, 111, 112, 113, 116, 117, 120, 127, 134, 135, 136, 139, 140, 141, 143, 144, 145, 148, 150, 151, 155, 157, 158, 159, 160, 161, 165, 166, 168, 169, 171, 175, 176, 177, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 194, 195, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 212, 215, 217, 223, 228, 229, 230, 231, 234, 236, 239, 240, 256, 257, 258, 259, 261, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 277, 278, 279, 280, 282, 284, 285, 297, 298, 312, 360, 369, 411, 418, 425, 426, 427, 432, 435, 445, 473, 478, 479, 480, 487, 490, 494, 499, 513, 519, 529, 560, 561, 562, 571, 572, 576, 582, 593, 600, 608, 618, 622, 625, 630, 643, 645, 647, 655, 657, 658, 659, 666, 671, 691, 698, 706, 708, 709, 710, 750, 754, 770, 771, 778, 784, 786, 788, 790, 793, 794, 797, 804, 806, 807, 808, 809, 810, 813, 814, 816, 833, 841, 845, 853, 861, 862, 868, 871, 886], "interfac": [4, 8, 15, 45, 87, 154, 157, 165, 188, 195, 199, 201, 204, 205, 218, 244, 266, 267, 375, 380, 470, 471, 562, 754, 793, 848, 852, 857, 862, 871, 886], "eeglab": [4, 67, 70, 127, 167, 201, 204, 244, 261, 264, 265, 266, 267, 273, 312, 330, 411, 418, 441, 444, 479, 480, 495, 560, 561, 569, 576, 606, 611, 617, 706, 708, 710, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 868, 886], "In": [4, 5, 10, 15, 16, 19, 21, 32, 40, 42, 43, 44, 45, 46, 59, 70, 74, 78, 81, 82, 86, 87, 89, 93, 100, 102, 111, 113, 114, 115, 117, 125, 126, 131, 134, 136, 139, 141, 143, 148, 149, 150, 151, 154, 155, 157, 159, 160, 161, 165, 166, 167, 169, 170, 171, 174, 175, 177, 180, 187, 189, 190, 191, 194, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 221, 223, 226, 227, 228, 236, 239, 240, 241, 244, 256, 258, 259, 261, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 288, 297, 298, 302, 303, 308, 310, 320, 327, 329, 341, 354, 358, 359, 369, 370, 371, 372, 411, 413, 417, 418, 427, 428, 432, 435, 444, 446, 454, 455, 474, 476, 477, 479, 480, 487, 527, 528, 529, 530, 531, 532, 536, 539, 556, 560, 561, 562, 563, 576, 577, 578, 579, 585, 589, 591, 599, 601, 608, 610, 633, 650, 671, 674, 692, 701, 706, 708, 709, 710, 714, 715, 716, 717, 719, 722, 732, 733, 734, 735, 736, 737, 738, 741, 751, 754, 767, 778, 784, 785, 786, 787, 788, 790, 791, 793, 794, 797, 798, 805, 806, 807, 808, 809, 812, 814, 815, 818, 841, 843, 845, 846, 850, 851, 853, 856, 861, 862, 865, 867, 868, 871, 872, 886], "summari": [4, 10, 171, 200, 204, 218, 271, 272, 275, 278, 279, 280, 537, 538, 698, 845, 871], "fetch": [4, 136, 249, 380, 385, 386, 387, 388, 389, 390, 395, 403, 404, 845, 862, 886], "subject": [4, 5, 7, 8, 9, 10, 11, 19, 22, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 68, 71, 72, 79, 80, 82, 88, 89, 90, 94, 103, 108, 111, 112, 114, 115, 117, 123, 124, 125, 126, 130, 133, 134, 135, 136, 139, 142, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 195, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 216, 222, 223, 226, 227, 228, 230, 231, 234, 235, 236, 237, 240, 241, 244, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 297, 298, 303, 307, 308, 309, 312, 341, 342, 343, 344, 349, 351, 352, 360, 365, 366, 367, 372, 380, 385, 387, 388, 389, 390, 395, 403, 404, 430, 445, 461, 463, 465, 467, 469, 470, 471, 472, 473, 479, 480, 481, 484, 513, 515, 517, 519, 523, 527, 528, 539, 547, 548, 561, 565, 576, 588, 589, 593, 610, 614, 620, 625, 627, 628, 630, 633, 637, 642, 643, 644, 645, 654, 655, 656, 658, 659, 660, 669, 671, 672, 683, 687, 689, 698, 701, 702, 744, 746, 753, 754, 770, 772, 777, 782, 783, 796, 810, 812, 817, 818, 835, 836, 841, 851, 859, 861, 863, 865, 868, 874, 886], "If": [4, 27, 28, 31, 43, 44, 69, 70, 81, 98, 100, 114, 116, 119, 126, 134, 136, 139, 141, 143, 145, 148, 149, 150, 155, 158, 159, 160, 164, 167, 168, 169, 170, 171, 174, 180, 181, 187, 188, 189, 191, 195, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 212, 215, 216, 217, 218, 221, 226, 227, 228, 234, 239, 241, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 329, 330, 332, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 600, 601, 602, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 749, 753, 754, 759, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 824, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 844, 845, 848, 849, 850, 851, 852, 853, 856, 861, 862, 865, 866, 867, 868, 869, 871, 872, 886], "disk": [4, 29, 79, 107, 109, 141, 142, 148, 149, 157, 165, 169, 171, 176, 179, 183, 199, 205, 208, 209, 215, 216, 217, 223, 256, 258, 259, 260, 264, 265, 266, 267, 269, 270, 282, 313, 386, 430, 452, 478, 479, 480, 563, 616, 623, 625, 627, 633, 655, 708, 710, 727, 754, 784, 788, 792, 794, 807, 833, 835, 851, 861, 865, 868, 871, 886], "fetcher": [4, 136, 862, 874, 886], "automat": [4, 70, 78, 79, 82, 93, 100, 139, 140, 141, 143, 144, 148, 149, 150, 154, 155, 165, 167, 168, 169, 171, 181, 188, 189, 190, 191, 198, 199, 200, 201, 202, 204, 205, 206, 209, 215, 217, 218, 221, 231, 244, 256, 258, 259, 261, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 282, 312, 318, 340, 360, 377, 378, 379, 380, 382, 383, 384, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 414, 421, 424, 432, 435, 443, 459, 460, 467, 469, 479, 480, 485, 492, 496, 500, 504, 523, 560, 561, 563, 571, 572, 573, 576, 582, 583, 586, 591, 593, 608, 619, 630, 641, 644, 649, 650, 655, 666, 693, 694, 696, 697, 706, 709, 750, 754, 772, 773, 777, 778, 784, 787, 790, 791, 792, 793, 800, 801, 807, 812, 817, 818, 844, 845, 851, 852, 861, 862, 868, 874, 886], "remot": [4, 189, 191, 249, 387, 820, 843, 845, 851, 874], "repositori": [4, 169, 846, 852, 867], "dure": [4, 19, 33, 38, 43, 45, 70, 80, 82, 93, 99, 102, 115, 120, 126, 135, 140, 143, 148, 154, 156, 159, 165, 166, 167, 170, 171, 179, 181, 190, 195, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 215, 216, 217, 218, 241, 244, 256, 262, 264, 265, 266, 267, 268, 269, 271, 274, 275, 277, 279, 280, 281, 297, 298, 304, 341, 343, 347, 354, 358, 359, 361, 366, 369, 370, 371, 411, 417, 418, 428, 434, 435, 446, 454, 455, 471, 474, 476, 477, 479, 480, 481, 492, 508, 519, 523, 539, 547, 561, 582, 589, 593, 608, 647, 650, 656, 671, 674, 680, 681, 682, 701, 706, 708, 709, 710, 712, 715, 735, 738, 742, 743, 752, 754, 770, 773, 784, 791, 794, 798, 801, 807, 812, 818, 841, 844, 850, 853, 861, 862, 863, 867, 868, 871, 886], "inform": [4, 5, 9, 11, 21, 22, 26, 28, 29, 31, 34, 35, 38, 39, 40, 42, 43, 44, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 68, 79, 83, 89, 91, 92, 93, 94, 100, 103, 106, 107, 109, 123, 130, 133, 134, 139, 140, 141, 142, 143, 145, 148, 149, 150, 155, 157, 158, 159, 161, 164, 165, 167, 169, 171, 174, 176, 178, 179, 180, 181, 187, 188, 189, 190, 191, 194, 195, 202, 203, 204, 205, 206, 207, 209, 212, 213, 214, 215, 217, 221, 222, 223, 226, 228, 231, 234, 236, 240, 241, 244, 249, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 282, 284, 285, 297, 298, 299, 305, 306, 310, 311, 318, 319, 320, 324, 326, 327, 329, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 358, 360, 369, 370, 371, 373, 411, 413, 418, 419, 420, 430, 431, 435, 441, 442, 443, 444, 446, 447, 449, 450, 452, 455, 462, 463, 469, 471, 474, 477, 478, 479, 480, 481, 484, 490, 499, 511, 516, 519, 522, 523, 524, 529, 539, 557, 558, 560, 561, 571, 572, 575, 581, 582, 589, 591, 593, 598, 599, 604, 606, 609, 618, 620, 621, 622, 640, 641, 647, 652, 654, 670, 671, 674, 693, 697, 703, 705, 706, 707, 708, 709, 710, 722, 733, 734, 735, 736, 737, 738, 743, 744, 749, 750, 754, 767, 770, 774, 778, 779, 780, 782, 785, 789, 795, 796, 802, 806, 810, 816, 832, 841, 843, 844, 845, 848, 849, 852, 857, 862, 863, 866, 867, 869, 886], "e": [4, 7, 8, 12, 28, 41, 42, 44, 46, 47, 54, 69, 70, 71, 79, 83, 100, 111, 113, 119, 136, 139, 140, 142, 143, 145, 149, 150, 152, 154, 156, 159, 160, 161, 164, 165, 167, 168, 169, 170, 177, 179, 184, 187, 188, 189, 191, 194, 195, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 212, 215, 216, 221, 222, 223, 226, 227, 228, 231, 234, 236, 240, 241, 244, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 287, 288, 297, 298, 299, 302, 303, 306, 308, 310, 312, 313, 318, 327, 329, 338, 340, 351, 354, 358, 359, 365, 369, 370, 371, 380, 386, 387, 389, 394, 403, 404, 411, 413, 414, 417, 418, 420, 421, 422, 425, 426, 427, 430, 431, 432, 435, 438, 440, 443, 444, 445, 447, 449, 450, 452, 453, 454, 455, 461, 467, 470, 473, 474, 476, 477, 478, 479, 480, 481, 491, 492, 494, 496, 498, 513, 515, 517, 520, 521, 522, 523, 527, 528, 534, 535, 536, 537, 538, 539, 540, 543, 544, 545, 547, 560, 561, 563, 564, 569, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 584, 585, 588, 589, 593, 599, 600, 601, 608, 613, 620, 623, 624, 627, 628, 633, 640, 641, 642, 643, 644, 645, 651, 653, 655, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 674, 677, 691, 692, 693, 694, 695, 696, 697, 698, 701, 702, 705, 706, 708, 709, 710, 714, 715, 716, 717, 718, 719, 722, 732, 736, 737, 741, 744, 754, 759, 767, 770, 771, 772, 777, 778, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 797, 798, 800, 801, 805, 806, 807, 808, 809, 812, 814, 816, 817, 820, 831, 834, 841, 843, 844, 845, 846, 849, 851, 857, 861, 862, 865, 867, 868, 871, 872, 874, 886], "rate": [4, 69, 96, 100, 102, 179, 188, 189, 194, 201, 202, 204, 230, 240, 244, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 373, 416, 446, 450, 452, 479, 480, 487, 494, 502, 584, 591, 607, 659, 671, 684, 690, 692, 695, 706, 708, 709, 710, 724, 784, 786, 795, 807, 865, 886], "per": [4, 31, 47, 89, 93, 100, 106, 109, 119, 125, 130, 141, 143, 149, 150, 157, 165, 168, 179, 191, 200, 204, 206, 218, 226, 231, 236, 240, 256, 264, 265, 266, 267, 269, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 314, 321, 360, 375, 388, 403, 411, 418, 421, 424, 432, 435, 444, 445, 479, 480, 537, 538, 543, 544, 545, 561, 562, 565, 610, 650, 658, 687, 689, 702, 706, 708, 710, 712, 715, 722, 724, 725, 732, 733, 734, 736, 737, 744, 754, 784, 785, 786, 793, 797, 815, 845, 851, 867, 868, 874, 886], "name": [4, 5, 7, 8, 10, 18, 22, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 54, 55, 58, 59, 68, 70, 82, 89, 91, 92, 93, 94, 99, 100, 102, 108, 111, 125, 130, 131, 134, 136, 140, 141, 142, 143, 144, 148, 149, 158, 159, 160, 165, 167, 168, 169, 170, 171, 176, 177, 178, 179, 189, 190, 195, 199, 200, 201, 204, 205, 207, 209, 210, 211, 218, 221, 222, 223, 226, 227, 239, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 303, 307, 308, 309, 310, 312, 313, 318, 321, 322, 323, 324, 325, 327, 328, 329, 334, 336, 337, 338, 340, 351, 359, 360, 363, 365, 366, 367, 369, 370, 373, 381, 386, 389, 392, 411, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 427, 429, 430, 432, 435, 438, 441, 442, 443, 444, 452, 453, 461, 463, 464, 465, 467, 469, 470, 471, 472, 473, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 512, 513, 515, 519, 520, 542, 546, 550, 551, 552, 558, 559, 560, 561, 562, 563, 574, 576, 577, 578, 579, 582, 583, 584, 585, 586, 589, 594, 599, 601, 604, 605, 608, 610, 611, 613, 615, 617, 618, 619, 620, 622, 624, 625, 626, 627, 628, 630, 631, 633, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 647, 650, 654, 655, 660, 674, 683, 687, 691, 692, 698, 701, 702, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 722, 726, 728, 732, 734, 737, 739, 741, 751, 753, 754, 759, 770, 771, 772, 773, 775, 778, 782, 783, 784, 785, 786, 788, 790, 791, 792, 793, 797, 798, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 816, 817, 818, 830, 831, 832, 833, 836, 837, 838, 839, 840, 841, 843, 844, 849, 850, 851, 853, 862, 863, 868, 872, 876, 886], "etc": [4, 27, 31, 36, 47, 77, 142, 154, 159, 165, 166, 167, 170, 171, 174, 187, 188, 189, 198, 199, 200, 204, 209, 215, 218, 221, 226, 234, 241, 257, 262, 264, 265, 266, 267, 269, 270, 271, 275, 279, 334, 440, 452, 453, 479, 480, 487, 499, 503, 522, 533, 558, 561, 575, 593, 618, 622, 647, 652, 680, 681, 682, 683, 693, 694, 696, 697, 706, 708, 709, 710, 754, 778, 782, 785, 812, 841, 845, 849, 850, 863, 865, 867, 868, 871, 872, 874, 886], "mat": [4, 19, 194, 244, 269, 499, 618, 622, 868, 886], "store": [4, 16, 29, 30, 70, 89, 92, 93, 94, 103, 108, 114, 115, 134, 139, 140, 141, 142, 143, 148, 149, 150, 154, 155, 157, 159, 161, 167, 168, 169, 171, 174, 181, 188, 189, 190, 191, 199, 200, 205, 206, 209, 210, 212, 215, 217, 218, 222, 223, 241, 256, 257, 258, 262, 264, 265, 266, 267, 269, 274, 275, 276, 278, 282, 324, 345, 363, 380, 386, 393, 394, 403, 404, 413, 415, 426, 435, 440, 444, 449, 470, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 520, 539, 548, 550, 561, 569, 576, 581, 592, 611, 617, 618, 622, 625, 648, 658, 659, 671, 686, 706, 707, 709, 711, 712, 713, 714, 715, 716, 717, 726, 755, 762, 774, 807, 832, 833, 841, 845, 861, 862, 863, 865, 868, 871, 886], "fit": [4, 7, 8, 10, 11, 12, 13, 15, 16, 18, 21, 24, 40, 41, 45, 50, 59, 70, 71, 73, 74, 76, 78, 79, 80, 82, 87, 100, 110, 115, 122, 136, 140, 150, 151, 155, 157, 164, 165, 169, 171, 176, 178, 182, 183, 184, 185, 186, 188, 191, 195, 199, 202, 203, 206, 207, 208, 209, 211, 230, 244, 250, 256, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 279, 300, 305, 306, 312, 341, 342, 343, 344, 347, 351, 352, 353, 365, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 430, 432, 440, 450, 454, 479, 480, 491, 519, 522, 528, 558, 560, 561, 562, 565, 568, 570, 571, 572, 576, 582, 583, 593, 623, 655, 670, 691, 706, 708, 709, 710, 719, 754, 771, 778, 782, 786, 788, 790, 793, 794, 797, 798, 799, 801, 804, 806, 808, 809, 810, 814, 816, 845, 857, 862, 865, 868, 872, 875, 886], "inferenti": [4, 226], "evalu": [4, 31, 44, 54, 55, 161, 187, 195, 209, 211, 226, 244, 276, 360, 428, 437, 476, 477, 511, 543, 570, 582, 666, 862, 865, 867, 868], "signific": [4, 72, 99, 100, 111, 150, 164, 171, 187, 198, 200, 201, 203, 204, 206, 226, 228, 229, 230, 231, 232, 233, 241, 244, 261, 264, 265, 266, 267, 269, 318, 324, 353, 411, 417, 418, 450, 479, 480, 536, 560, 561, 616, 693, 694, 696, 697, 698, 706, 708, 710, 771, 786, 790, 793, 809, 814, 816, 861, 868, 871, 874], "jose": [4, 886], "garcia": 4, "alani": [4, 886], "jcg": 4, "gmail": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 50, 51, 57, 58, 60, 65, 69, 72, 73, 74, 76, 78, 79, 80, 81, 83, 87, 89, 92, 93, 94, 98, 100, 102, 108, 111, 112, 113, 117, 119, 120, 122, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 140, 156, 158, 160, 178, 179, 181, 182, 183, 190, 194, 208, 223, 226, 230, 231, 234, 235, 236, 240, 241], "com": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 26, 32, 33, 34, 38, 39, 42, 43, 44, 45, 46, 50, 51, 57, 58, 60, 65, 69, 72, 73, 74, 76, 78, 79, 80, 81, 83, 87, 89, 92, 93, 94, 100, 102, 108, 111, 112, 113, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 140, 156, 158, 159, 160, 178, 179, 181, 182, 183, 190, 194, 208, 222, 223, 226, 230, 231, 234, 235, 236, 240, 241, 244, 264, 265, 266, 267, 275, 388, 479, 480, 487, 843, 845, 853, 865], "matplotlib": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 68, 69, 70, 71, 72, 73, 81, 85, 89, 91, 92, 95, 96, 98, 103, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 119, 126, 130, 131, 132, 135, 136, 143, 144, 145, 150, 159, 169, 170, 171, 175, 176, 179, 180, 182, 183, 194, 195, 199, 201, 202, 204, 205, 206, 207, 209, 210, 211, 215, 218, 223, 226, 227, 228, 229, 230, 231, 236, 240, 241, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 278, 279, 280, 312, 313, 411, 418, 479, 480, 560, 561, 576, 627, 706, 707, 708, 710, 722, 732, 754, 755, 757, 767, 769, 771, 772, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 799, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 823, 824, 826, 843, 844, 845, 863, 886], "pyplot": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 68, 69, 70, 71, 72, 73, 81, 85, 89, 91, 92, 95, 96, 98, 103, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 119, 126, 130, 131, 132, 135, 136, 143, 144, 145, 150, 159, 169, 171, 175, 176, 179, 180, 182, 183, 194, 195, 201, 202, 205, 206, 209, 210, 211, 215, 223, 226, 227, 228, 229, 230, 231, 236, 240, 241, 263, 264, 265, 266, 267, 706, 722, 732, 757, 778, 788, 790, 815, 886], "plt": [4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 28, 29, 37, 38, 39, 41, 45, 47, 53, 58, 68, 69, 70, 71, 72, 73, 81, 85, 89, 91, 92, 95, 96, 98, 103, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 119, 126, 130, 131, 132, 135, 136, 143, 144, 145, 150, 159, 169, 171, 175, 176, 179, 180, 182, 183, 194, 195, 201, 202, 205, 206, 209, 210, 211, 215, 223, 226, 227, 228, 229, 230, 231, 236, 240, 241, 266, 267, 321, 722, 732, 792], "stat": [4, 95, 96, 98, 99, 100, 111, 112, 140, 194, 226, 227, 228, 229, 230, 231, 234, 235, 236, 241, 264, 265, 318, 329, 561, 569, 783, 863, 876, 883, 886], "linear_regress": [4, 100, 140, 226, 876, 886], "plot_ev": [4, 7, 136, 165, 210, 216, 264, 265, 784, 876, 886], "combine_evok": [4, 7, 98, 140, 143, 148, 150, 165, 175, 190, 210, 227, 229, 872, 876, 886], "subj": [4, 159, 204], "experi": [4, 19, 45, 65, 70, 127, 150, 164, 165, 167, 168, 179, 190, 199, 200, 206, 209, 210, 211, 212, 215, 216, 244, 269, 498, 841, 845, 862, 864, 868, 886], "particip": [4, 71, 73, 75, 76, 80, 81, 82, 89, 92, 126, 140, 143, 145, 150, 165, 166, 167, 168, 171, 191, 198, 199, 200, 202, 204, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 241, 841, 862, 867, 874], "perform": [4, 8, 10, 13, 19, 31, 45, 54, 75, 81, 83, 99, 100, 102, 111, 118, 136, 139, 142, 143, 145, 148, 150, 154, 155, 156, 165, 166, 167, 168, 177, 187, 188, 191, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 215, 226, 228, 230, 234, 236, 257, 259, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 287, 290, 297, 298, 353, 354, 355, 357, 359, 360, 375, 411, 414, 417, 418, 421, 423, 424, 427, 428, 432, 446, 447, 452, 454, 467, 468, 469, 470, 474, 476, 477, 479, 480, 486, 487, 494, 519, 520, 522, 523, 528, 529, 530, 531, 532, 534, 535, 539, 544, 545, 560, 561, 563, 566, 573, 574, 575, 576, 578, 579, 582, 583, 591, 593, 608, 620, 654, 657, 658, 659, 671, 683, 688, 692, 693, 694, 695, 696, 697, 699, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 744, 770, 771, 778, 784, 785, 786, 789, 793, 797, 799, 801, 806, 807, 808, 809, 814, 816, 820, 841, 843, 851, 852, 853, 861, 862, 868, 871, 886], "two": [4, 5, 12, 16, 19, 22, 32, 37, 42, 45, 47, 54, 55, 65, 67, 69, 70, 72, 74, 75, 80, 83, 87, 89, 111, 114, 116, 131, 132, 134, 136, 140, 141, 143, 145, 149, 150, 154, 155, 157, 159, 165, 167, 168, 169, 170, 171, 174, 177, 179, 189, 190, 191, 195, 198, 200, 201, 202, 203, 204, 205, 206, 207, 210, 215, 216, 217, 218, 223, 226, 228, 230, 234, 236, 239, 241, 244, 258, 264, 265, 266, 267, 270, 271, 272, 275, 276, 278, 279, 280, 297, 298, 312, 320, 354, 358, 359, 369, 370, 371, 403, 411, 413, 418, 422, 426, 434, 435, 445, 447, 449, 450, 451, 454, 455, 474, 476, 477, 479, 480, 503, 515, 534, 539, 556, 561, 564, 571, 576, 582, 591, 592, 607, 608, 647, 650, 659, 683, 687, 688, 689, 691, 693, 694, 695, 696, 697, 701, 706, 708, 709, 710, 724, 725, 735, 744, 754, 759, 762, 784, 785, 786, 794, 801, 807, 812, 841, 845, 851, 862, 865, 867, 868, 871, 886], "altern": [4, 113, 126, 160, 161, 168, 171, 190, 198, 200, 201, 204, 211, 212, 218, 226, 240, 241, 255, 257, 258, 261, 264, 265, 266, 267, 273, 354, 411, 418, 479, 480, 504, 522, 560, 561, 576, 615, 619, 695, 706, 708, 710, 754, 771, 786, 793, 797, 806, 809, 814, 816, 843, 845, 851, 862, 865, 871, 873, 886], "choic": [4, 113, 154, 159, 169, 170, 183, 201, 206, 216, 228, 277, 451, 461, 539, 699, 843, 849, 862, 868], "task": [4, 10, 32, 33, 34, 46, 70, 111, 112, 135, 136, 142, 143, 154, 155, 164, 168, 174, 195, 199, 204, 240, 244, 380, 414, 421, 722, 732, 733, 736, 862, 868, 869, 872, 874, 886], "discrimin": [4, 9, 18, 82, 195, 241, 244, 411, 415, 418, 561, 862], "between": [4, 8, 10, 16, 19, 22, 26, 27, 36, 38, 40, 45, 47, 59, 60, 69, 81, 82, 87, 95, 98, 99, 102, 107, 112, 113, 126, 127, 132, 133, 135, 136, 139, 140, 143, 145, 148, 149, 150, 155, 156, 157, 159, 160, 161, 164, 165, 168, 169, 170, 171, 175, 177, 187, 188, 189, 190, 191, 194, 195, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 215, 216, 217, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 241, 244, 256, 257, 258, 259, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 287, 308, 312, 318, 320, 321, 341, 353, 354, 360, 361, 363, 364, 365, 411, 412, 417, 423, 427, 430, 432, 434, 435, 437, 445, 452, 455, 456, 474, 476, 477, 479, 480, 498, 503, 520, 521, 534, 536, 539, 543, 544, 545, 558, 561, 563, 564, 566, 569, 571, 572, 573, 576, 577, 578, 579, 580, 582, 583, 586, 591, 592, 593, 597, 599, 620, 623, 624, 647, 656, 657, 658, 659, 661, 663, 666, 667, 670, 671, 674, 676, 677, 678, 680, 681, 685, 686, 693, 694, 696, 697, 698, 701, 706, 707, 709, 711, 713, 714, 716, 721, 722, 725, 729, 730, 732, 733, 734, 736, 737, 744, 754, 759, 770, 772, 773, 775, 778, 780, 784, 787, 788, 790, 791, 793, 807, 808, 811, 812, 814, 817, 818, 820, 832, 841, 843, 845, 851, 853, 861, 862, 865, 867, 868, 871, 874, 886], "stimuli": [4, 19, 69, 115, 127, 140, 143, 145, 148, 150, 165, 179, 190, 194, 203, 244, 417, 564, 841, 862], "The": [4, 5, 7, 8, 9, 11, 14, 15, 16, 18, 19, 21, 27, 31, 34, 38, 41, 43, 44, 45, 46, 47, 48, 49, 52, 58, 59, 60, 63, 65, 67, 69, 74, 75, 78, 79, 80, 81, 82, 83, 87, 93, 94, 100, 102, 103, 106, 108, 109, 111, 112, 113, 114, 115, 119, 125, 126, 127, 133, 134, 135, 136, 137, 140, 141, 142, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 170, 171, 172, 173, 176, 180, 182, 183, 185, 186, 187, 188, 189, 190, 191, 194, 195, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 240, 241, 242, 243, 244, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 380, 381, 385, 386, 387, 388, 389, 390, 392, 395, 403, 404, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 496, 499, 500, 501, 502, 503, 504, 506, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 644, 645, 646, 647, 649, 650, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 759, 760, 762, 763, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 835, 836, 837, 838, 840, 841, 843, 845, 848, 849, 851, 857, 863, 864, 865, 866, 869, 870, 872, 874, 886], "same": [4, 18, 19, 28, 44, 45, 54, 55, 58, 70, 74, 75, 82, 89, 98, 102, 108, 112, 113, 126, 134, 139, 140, 141, 143, 148, 149, 150, 155, 159, 160, 161, 167, 168, 169, 170, 174, 175, 177, 182, 187, 189, 190, 191, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 216, 217, 218, 221, 226, 227, 228, 230, 231, 234, 235, 236, 239, 256, 258, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 284, 285, 287, 297, 300, 309, 314, 317, 328, 353, 354, 358, 359, 360, 371, 373, 390, 411, 418, 419, 424, 432, 435, 436, 445, 446, 461, 464, 468, 469, 474, 478, 479, 480, 486, 487, 494, 495, 506, 509, 547, 561, 562, 563, 572, 575, 578, 579, 580, 582, 593, 594, 607, 611, 617, 618, 633, 651, 652, 656, 657, 658, 659, 666, 671, 672, 688, 692, 693, 694, 696, 697, 701, 706, 708, 709, 710, 722, 724, 725, 731, 732, 733, 734, 735, 736, 737, 738, 744, 754, 759, 770, 771, 778, 784, 785, 786, 788, 790, 793, 795, 806, 807, 810, 812, 813, 815, 839, 845, 850, 857, 862, 865, 868, 869, 872, 886], "whole": [4, 28, 54, 55, 70, 161, 199, 226, 244, 271, 272, 275, 278, 279, 280, 445, 515, 593, 610, 655, 672, 707, 754, 780, 814, 845, 853, 862, 886], "vari": [4, 19, 22, 46, 47, 59, 140, 154, 189, 194, 201, 204, 205, 208, 209, 211, 223, 226, 264, 265, 269, 271, 272, 275, 278, 279, 280, 341, 342, 343, 344, 345, 346, 434, 445, 658, 697, 777, 862, 868, 871, 874, 886], "level": [4, 8, 9, 27, 36, 44, 56, 97, 100, 101, 121, 129, 140, 141, 143, 149, 150, 154, 159, 164, 165, 167, 169, 170, 179, 180, 187, 194, 198, 200, 201, 204, 205, 211, 223, 226, 228, 229, 230, 231, 232, 234, 235, 236, 241, 244, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418, 421, 422, 424, 427, 428, 430, 432, 436, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 461, 462, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 522, 523, 524, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 557, 558, 560, 561, 563, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 584, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 600, 601, 602, 605, 606, 607, 608, 612, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 650, 652, 654, 655, 657, 658, 659, 660, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 685, 687, 689, 693, 694, 695, 696, 697, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 724, 725, 728, 729, 733, 734, 736, 737, 738, 739, 742, 743, 744, 749, 752, 753, 754, 762, 770, 771, 779, 782, 786, 787, 788, 789, 790, 793, 794, 797, 798, 799, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 843, 845, 852, 862, 863, 868, 870, 883, 886], "nois": [4, 5, 7, 11, 18, 21, 27, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 66, 70, 74, 81, 83, 87, 89, 92, 93, 94, 103, 106, 107, 108, 109, 113, 119, 121, 123, 129, 143, 145, 148, 150, 151, 161, 165, 171, 175, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 194, 195, 199, 201, 203, 207, 209, 212, 215, 218, 223, 226, 234, 236, 244, 256, 261, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 297, 298, 300, 347, 353, 354, 355, 356, 357, 358, 359, 369, 370, 371, 411, 418, 419, 434, 454, 455, 474, 476, 477, 479, 480, 484, 516, 528, 534, 535, 539, 541, 544, 545, 561, 562, 575, 593, 601, 602, 614, 620, 658, 659, 660, 670, 708, 710, 734, 737, 779, 784, 788, 792, 794, 807, 808, 830, 841, 865, 871, 886], "less": [4, 5, 10, 18, 24, 26, 40, 41, 44, 45, 46, 49, 50, 70, 78, 86, 113, 118, 123, 139, 140, 142, 149, 150, 155, 157, 158, 170, 171, 175, 180, 182, 183, 184, 187, 198, 199, 201, 202, 204, 206, 207, 209, 210, 211, 215, 222, 226, 228, 241, 363, 452, 476, 477, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 520, 528, 561, 569, 589, 591, 598, 693, 694, 695, 696, 697, 701, 754, 845, 852, 862, 865, 867, 868, 886], "discern": [4, 862], "observ": [4, 75, 100, 136, 143, 150, 155, 204, 206, 210, 211, 226, 228, 230, 231, 234, 236, 241, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 450, 479, 480, 561, 687, 692, 693, 694, 695, 696, 697, 706, 708, 709, 710, 711, 712, 713, 807, 841, 861, 862], "fig": [4, 5, 10, 11, 12, 13, 15, 18, 19, 21, 22, 24, 39, 41, 42, 45, 47, 52, 58, 67, 68, 69, 70, 71, 72, 73, 79, 80, 81, 86, 92, 95, 98, 102, 103, 108, 111, 112, 113, 114, 115, 117, 119, 122, 123, 124, 126, 134, 135, 136, 140, 143, 145, 149, 150, 155, 156, 157, 158, 159, 165, 169, 171, 175, 176, 177, 179, 180, 181, 182, 184, 190, 194, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 217, 223, 226, 227, 229, 230, 231, 240, 241, 261, 262, 263, 264, 265, 266, 267, 273, 274, 277, 279, 280, 312, 313, 411, 418, 479, 480, 560, 561, 706, 707, 708, 710, 757, 767, 770, 771, 772, 774, 775, 776, 777, 778, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 814, 815, 818, 824, 886], "similar": [4, 16, 17, 18, 19, 20, 27, 33, 58, 60, 70, 87, 102, 108, 111, 113, 130, 135, 136, 139, 140, 141, 142, 143, 149, 159, 169, 195, 198, 199, 201, 203, 204, 205, 206, 207, 210, 215, 222, 226, 228, 231, 239, 244, 257, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 297, 354, 363, 412, 427, 445, 452, 479, 480, 511, 558, 561, 576, 582, 661, 706, 709, 710, 744, 754, 769, 788, 810, 843, 845, 850, 851, 852, 862, 863, 867, 868, 874, 886], "approach": [4, 10, 19, 21, 44, 45, 46, 59, 73, 75, 102, 126, 140, 142, 143, 148, 149, 150, 155, 159, 162, 163, 164, 165, 166, 171, 179, 194, 195, 198, 199, 201, 202, 203, 204, 207, 209, 211, 223, 226, 227, 230, 232, 241, 244, 269, 365, 389, 484, 518, 561, 578, 591, 600, 644, 770, 822, 841, 853, 861, 862, 863, 867, 868, 886], "across": [4, 16, 17, 18, 19, 20, 26, 27, 28, 32, 33, 47, 54, 55, 58, 60, 79, 82, 83, 102, 108, 112, 113, 134, 136, 139, 140, 141, 142, 144, 148, 149, 152, 154, 161, 164, 165, 167, 171, 179, 195, 198, 199, 201, 203, 204, 205, 206, 207, 209, 211, 218, 221, 222, 226, 234, 235, 236, 240, 244, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 276, 278, 279, 280, 317, 359, 360, 411, 414, 418, 420, 421, 423, 424, 425, 436, 445, 479, 480, 498, 525, 537, 538, 543, 558, 561, 563, 566, 576, 620, 630, 650, 671, 697, 701, 706, 707, 708, 709, 710, 717, 724, 733, 734, 736, 737, 769, 773, 778, 785, 786, 788, 789, 793, 806, 808, 812, 815, 818, 841, 845, 861, 862, 865, 868, 874, 886], "signal": [4, 8, 9, 10, 13, 15, 16, 19, 21, 27, 28, 42, 45, 51, 58, 59, 63, 70, 71, 73, 74, 75, 77, 81, 84, 87, 99, 102, 110, 112, 113, 120, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 161, 164, 165, 171, 174, 177, 179, 183, 188, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 207, 213, 214, 215, 216, 218, 223, 224, 225, 226, 231, 242, 244, 256, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 278, 279, 280, 300, 341, 343, 347, 348, 351, 354, 355, 356, 357, 359, 364, 371, 380, 403, 404, 411, 413, 415, 416, 417, 418, 419, 422, 423, 432, 435, 444, 445, 446, 447, 449, 450, 451, 452, 479, 480, 494, 500, 527, 528, 529, 542, 558, 559, 560, 561, 562, 563, 570, 572, 573, 574, 577, 578, 579, 582, 584, 592, 593, 614, 623, 625, 628, 647, 650, 670, 672, 673, 692, 693, 706, 708, 709, 710, 711, 712, 713, 721, 722, 724, 725, 729, 731, 732, 735, 736, 738, 754, 778, 784, 786, 788, 793, 794, 796, 797, 798, 799, 801, 807, 808, 841, 861, 862, 865, 886], "continuum": [4, 862, 886], "span": [4, 81, 118, 135, 139, 140, 148, 149, 150, 164, 165, 167, 177, 190, 198, 202, 213, 214, 215, 217, 218, 239, 241, 258, 264, 265, 266, 267, 269, 479, 480, 498, 558, 563, 564, 584, 620, 698, 706, 708, 710, 724, 769, 771, 808, 814, 861, 862, 863, 868, 874, 886], "85": [4, 13, 19, 35, 37, 47, 78, 89, 95, 102, 108, 111, 113, 136, 139, 144, 145, 159, 168, 175, 181, 189, 194, 195, 202, 208, 226, 227, 230, 231, 886], "increas": [4, 11, 32, 55, 70, 111, 150, 171, 191, 201, 204, 205, 210, 211, 223, 228, 231, 241, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 452, 479, 480, 490, 561, 582, 601, 693, 694, 696, 697, 706, 709, 722, 732, 733, 734, 735, 736, 737, 738, 754, 758, 784, 801, 807, 862, 868, 886], "step": [4, 8, 11, 15, 18, 24, 41, 46, 59, 63, 68, 93, 98, 102, 108, 111, 119, 126, 139, 141, 150, 151, 157, 160, 165, 166, 167, 169, 171, 189, 190, 195, 198, 199, 200, 201, 204, 206, 207, 209, 211, 215, 226, 227, 241, 244, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 289, 291, 341, 342, 343, 347, 411, 417, 426, 429, 452, 453, 469, 470, 477, 479, 480, 496, 556, 561, 571, 576, 582, 591, 656, 673, 693, 694, 696, 697, 698, 721, 729, 744, 754, 770, 778, 807, 818, 845, 846, 851, 853, 859, 861, 862, 867, 868, 872, 874, 886], "other": [4, 43, 61, 70, 82, 83, 111, 126, 140, 142, 144, 149, 150, 154, 155, 159, 165, 167, 168, 169, 171, 174, 176, 179, 180, 187, 188, 190, 191, 195, 198, 199, 202, 203, 204, 205, 206, 207, 208, 211, 215, 217, 218, 222, 223, 226, 230, 239, 241, 256, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 283, 312, 324, 325, 353, 360, 365, 417, 419, 428, 430, 432, 434, 435, 440, 444, 456, 460, 461, 474, 476, 477, 479, 480, 491, 528, 539, 550, 560, 561, 582, 588, 593, 607, 611, 613, 624, 627, 633, 636, 642, 644, 655, 666, 671, 677, 692, 706, 707, 708, 709, 710, 754, 767, 775, 782, 784, 786, 797, 801, 807, 812, 834, 839, 841, 850, 851, 852, 853, 857, 861, 862, 863, 865, 867, 871, 874, 886], "word": [4, 100, 142, 150, 154, 167, 174, 195, 201, 205, 206, 209, 226, 227, 241, 244, 394, 417, 735, 738, 754, 767, 841, 845, 862, 868, 874], "g": [4, 8, 28, 31, 37, 41, 42, 44, 68, 69, 70, 79, 80, 83, 95, 100, 111, 113, 114, 119, 125, 126, 136, 139, 140, 142, 149, 150, 154, 159, 160, 161, 165, 167, 168, 169, 170, 179, 187, 188, 189, 194, 195, 198, 200, 201, 202, 203, 204, 205, 207, 212, 215, 216, 221, 222, 226, 227, 231, 234, 236, 240, 241, 244, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 297, 298, 299, 303, 310, 312, 313, 318, 327, 329, 338, 340, 351, 354, 358, 359, 365, 369, 370, 371, 380, 386, 389, 394, 403, 404, 411, 413, 414, 417, 418, 420, 421, 422, 425, 426, 427, 430, 431, 432, 435, 440, 443, 444, 445, 447, 449, 450, 452, 453, 454, 455, 461, 467, 470, 473, 474, 476, 477, 478, 479, 480, 481, 492, 515, 517, 521, 522, 523, 528, 534, 535, 536, 539, 543, 544, 545, 547, 560, 561, 563, 564, 571, 572, 575, 576, 577, 578, 579, 581, 582, 585, 588, 589, 593, 599, 600, 601, 608, 613, 620, 627, 628, 633, 640, 641, 642, 643, 644, 645, 651, 653, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 674, 677, 691, 692, 693, 694, 695, 696, 697, 701, 702, 706, 708, 709, 710, 714, 715, 716, 717, 719, 722, 732, 735, 736, 737, 738, 754, 759, 767, 770, 771, 772, 777, 778, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 797, 798, 800, 801, 805, 806, 807, 808, 809, 812, 814, 816, 817, 820, 831, 834, 841, 843, 845, 846, 849, 851, 857, 861, 862, 865, 867, 868, 871, 872, 874, 886], "easi": [4, 132, 161, 165, 181, 187, 190, 199, 204, 207, 215, 217, 241, 274, 361, 417, 841, 843, 845, 851, 862, 863, 865, 868, 886], "identifi": [4, 12, 13, 27, 32, 33, 34, 77, 84, 136, 145, 150, 168, 190, 191, 195, 198, 204, 206, 223, 226, 244, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 312, 328, 335, 373, 414, 421, 463, 479, 480, 481, 485, 561, 565, 569, 576, 592, 602, 754, 763, 774, 812, 816, 817, 845, 861, 862, 865, 868, 871, 886], "whilelow": [4, 5, 11, 19, 45, 47, 59, 70, 74, 80, 81, 82, 83, 93, 109, 113, 140, 142, 150, 165, 166, 179, 182, 187, 190, 195, 199, 202, 204, 209, 210, 211, 226, 228, 230, 235, 244, 256, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 305, 354, 359, 413, 419, 422, 424, 446, 447, 449, 479, 480, 487, 490, 504, 528, 561, 566, 569, 573, 574, 578, 579, 582, 583, 584, 586, 587, 597, 659, 663, 668, 699, 700, 706, 709, 734, 737, 754, 784, 807, 841, 861, 862, 865, 867, 868, 886], "hard": [4, 113, 141, 204, 223, 363, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 520, 845, 862, 863, 865, 886], "extens": [4, 12, 43, 44, 135, 139, 150, 157, 159, 169, 188, 189, 191, 195, 216, 217, 256, 264, 265, 266, 267, 297, 298, 330, 331, 337, 418, 441, 442, 444, 479, 480, 486, 493, 496, 506, 593, 611, 620, 624, 707, 726, 754, 831, 848, 849, 861, 862, 868, 874, 886], "veri": [4, 10, 44, 45, 50, 60, 63, 69, 70, 79, 82, 113, 132, 140, 143, 150, 156, 159, 167, 171, 180, 199, 201, 202, 203, 204, 205, 206, 209, 223, 226, 235, 241, 297, 320, 435, 479, 692, 722, 732, 736, 841, 845, 848, 863, 868], "ll": [4, 7, 10, 19, 26, 34, 54, 59, 67, 70, 113, 114, 115, 116, 119, 126, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 157, 159, 161, 165, 166, 167, 169, 170, 171, 178, 179, 180, 189, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 217, 218, 221, 223, 227, 230, 236, 239, 240, 845, 853, 865], "begin": [4, 19, 73, 92, 150, 155, 165, 167, 168, 170, 171, 174, 187, 190, 194, 198, 200, 201, 202, 203, 204, 205, 206, 211, 217, 221, 241, 258, 259, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 283, 287, 359, 440, 453, 479, 480, 506, 520, 534, 544, 545, 561, 564, 578, 579, 582, 583, 586, 593, 623, 624, 673, 706, 709, 710, 719, 787, 798, 799, 801, 808, 814, 839, 845, 850, 868, 871, 886], "littl": [4, 159, 170, 187, 201, 202, 204, 205, 223, 241, 848, 868], "you": [4, 24, 27, 28, 32, 41, 43, 47, 50, 59, 60, 78, 81, 82, 87, 102, 108, 112, 113, 114, 115, 116, 118, 119, 120, 126, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 176, 177, 179, 180, 181, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 215, 216, 217, 218, 221, 223, 226, 228, 229, 231, 234, 236, 239, 240, 241, 244, 256, 257, 258, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 281, 283, 289, 291, 297, 298, 313, 318, 328, 329, 330, 353, 354, 358, 359, 362, 363, 369, 370, 371, 376, 389, 411, 417, 418, 428, 435, 438, 444, 446, 452, 454, 455, 463, 470, 474, 476, 477, 479, 480, 481, 491, 495, 503, 526, 528, 539, 560, 561, 578, 582, 584, 594, 611, 617, 655, 670, 686, 701, 706, 708, 709, 710, 722, 732, 736, 752, 755, 757, 770, 771, 775, 777, 784, 785, 789, 794, 797, 799, 800, 801, 807, 812, 824, 841, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 856, 860, 861, 862, 863, 864, 865, 866, 868, 869, 871, 872, 886], "first": [4, 5, 7, 10, 11, 16, 19, 21, 28, 29, 32, 38, 39, 41, 42, 43, 44, 45, 47, 63, 70, 71, 79, 82, 83, 86, 87, 89, 93, 94, 102, 103, 107, 108, 111, 112, 113, 114, 119, 126, 130, 132, 133, 134, 135, 136, 139, 140, 141, 142, 144, 145, 148, 149, 150, 155, 156, 158, 159, 160, 161, 165, 166, 167, 168, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 187, 189, 190, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 222, 223, 226, 227, 228, 230, 231, 234, 235, 236, 239, 240, 241, 244, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 284, 285, 288, 296, 297, 298, 302, 317, 322, 323, 354, 362, 363, 369, 375, 386, 411, 417, 418, 426, 434, 435, 436, 439, 440, 442, 443, 445, 449, 450, 451, 452, 453, 459, 461, 469, 478, 479, 480, 500, 503, 504, 515, 521, 522, 527, 531, 537, 538, 556, 560, 561, 562, 564, 566, 569, 571, 576, 602, 607, 619, 620, 623, 627, 638, 650, 656, 658, 659, 662, 664, 665, 680, 681, 682, 687, 691, 692, 693, 694, 696, 697, 698, 700, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 741, 744, 754, 759, 762, 770, 778, 782, 784, 785, 786, 787, 790, 791, 793, 797, 798, 799, 801, 806, 807, 808, 809, 812, 814, 816, 817, 831, 832, 841, 843, 844, 853, 861, 862, 865, 868, 871, 872, 886], "limo_epoch": 4, "process": [4, 7, 27, 28, 32, 34, 45, 51, 59, 68, 69, 79, 83, 87, 100, 121, 134, 141, 142, 143, 148, 150, 151, 154, 155, 159, 160, 161, 165, 170, 171, 176, 181, 183, 187, 199, 200, 201, 202, 204, 205, 206, 207, 209, 211, 215, 217, 221, 226, 227, 228, 236, 241, 244, 256, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 287, 289, 291, 297, 298, 300, 354, 358, 359, 362, 369, 370, 371, 386, 394, 411, 413, 418, 419, 424, 428, 434, 435, 450, 454, 455, 474, 476, 477, 479, 480, 481, 490, 500, 534, 539, 561, 562, 571, 582, 593, 594, 601, 608, 610, 623, 653, 655, 659, 679, 682, 693, 694, 696, 697, 706, 708, 709, 710, 733, 784, 788, 794, 807, 808, 843, 852, 853, 857, 860, 861, 862, 865, 867, 868, 871, 872, 874, 875, 876, 886], "epochsarrai": [4, 187, 221, 259, 264, 267, 361, 480, 618, 876, 886], "readi": [4, 5, 11, 13, 14, 15, 16, 18, 19, 27, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 82, 83, 87, 91, 92, 95, 96, 98, 99, 102, 103, 106, 108, 109, 110, 112, 113, 114, 116, 117, 120, 121, 122, 123, 128, 129, 131, 132, 134, 140, 143, 145, 149, 150, 151, 155, 157, 158, 160, 161, 165, 166, 167, 168, 170, 171, 176, 179, 181, 182, 189, 195, 198, 202, 203, 204, 205, 206, 207, 208, 209, 215, 218, 221, 222, 223, 228, 229, 230, 231, 234, 236, 240, 266, 269, 275, 479, 594, 623, 633, 754, 773, 845, 862], "1055": 4, "goodb": [4, 8, 10, 12, 22, 28, 37, 38, 44, 96, 109, 110, 126, 127, 136, 189, 201, 204, 205, 210, 216, 218, 223, 226, 227, 230, 234, 235, 236, 241, 244, 256, 259, 264, 265, 266, 267, 271, 272, 274, 275, 276, 278, 279, 280, 287, 354, 360, 380, 403, 404, 432, 446, 448, 479, 480, 544, 545, 578, 579, 623, 624, 659, 687, 689, 692, 700, 706, 709, 719, 733, 734, 736, 737, 754, 778, 784, 807, 814, 845, 862, 865, 868, 886], "531": [4, 13, 19], "visualis": [4, 27, 29, 30, 48, 49, 50, 54, 55, 77, 84, 100, 164, 175, 210, 232, 233, 258, 264, 266, 267, 269, 318, 324, 353, 480, 508, 596, 600, 616, 697], "distribut": [4, 19, 22, 26, 46, 48, 54, 55, 59, 60, 72, 115, 144, 149, 154, 161, 164, 165, 176, 185, 186, 190, 204, 206, 226, 228, 231, 234, 235, 240, 241, 244, 261, 262, 264, 265, 266, 267, 268, 269, 273, 275, 364, 476, 479, 480, 527, 528, 539, 569, 600, 614, 623, 625, 638, 654, 658, 688, 691, 693, 694, 696, 697, 708, 710, 754, 763, 770, 782, 815, 822, 841, 850, 851, 852, 861, 862, 865, 867, 868, 886], "appear": [4, 93, 100, 139, 143, 157, 167, 171, 179, 182, 190, 198, 201, 202, 207, 217, 256, 264, 265, 266, 267, 274, 432, 479, 480, 490, 515, 772, 810, 841, 845, 862, 868, 871, 886], "clearli": [4, 21, 126, 143, 151, 165, 190, 202, 204, 206, 208], "group": [4, 27, 67, 70, 108, 111, 121, 129, 136, 139, 141, 142, 144, 150, 154, 159, 160, 166, 171, 177, 201, 218, 223, 226, 227, 230, 231, 235, 236, 244, 256, 264, 265, 266, 267, 269, 274, 297, 298, 314, 324, 428, 437, 438, 440, 471, 479, 480, 495, 561, 576, 655, 671, 688, 694, 697, 759, 784, 785, 790, 807, 810, 841, 845, 852, 868, 876, 886], "order": [4, 16, 18, 19, 27, 31, 34, 38, 45, 47, 69, 70, 74, 81, 83, 87, 91, 93, 106, 110, 111, 113, 116, 120, 122, 127, 135, 142, 143, 144, 148, 155, 159, 160, 161, 164, 165, 168, 171, 176, 187, 189, 194, 198, 199, 200, 203, 204, 205, 206, 208, 209, 211, 215, 218, 223, 228, 231, 236, 244, 256, 257, 259, 261, 264, 265, 266, 267, 268, 269, 270, 273, 274, 288, 302, 317, 324, 341, 343, 347, 354, 361, 363, 367, 411, 413, 417, 418, 422, 432, 436, 440, 446, 447, 448, 449, 450, 455, 464, 479, 480, 486, 487, 494, 525, 527, 534, 535, 537, 538, 552, 553, 554, 560, 561, 569, 571, 572, 573, 574, 575, 582, 593, 607, 625, 639, 650, 683, 688, 702, 706, 707, 708, 709, 710, 718, 719, 723, 739, 741, 744, 751, 759, 771, 784, 785, 786, 790, 793, 795, 797, 801, 802, 806, 807, 809, 810, 814, 815, 816, 843, 845, 861, 865, 868, 871, 886], "suptitl": [4, 18, 22, 37, 42, 45, 70, 73, 79, 86, 89, 102, 108, 111, 115, 119, 132, 140, 143, 145, 150, 159, 175, 190, 194, 199, 201, 202, 204, 205, 206, 207, 209, 210, 226, 886], "As": [4, 38, 43, 70, 87, 93, 111, 135, 139, 142, 144, 148, 149, 150, 156, 159, 165, 166, 167, 168, 169, 171, 174, 179, 187, 190, 194, 195, 198, 199, 200, 201, 203, 204, 206, 207, 209, 212, 215, 216, 217, 218, 221, 228, 230, 236, 239, 241, 246, 419, 440, 496, 508, 576, 692, 701, 754, 778, 861, 867, 868, 871, 874, 886], "seen": [4, 12, 27, 74, 139, 142, 143, 145, 149, 150, 155, 168, 169, 195, 198, 202, 205, 206, 210, 211, 215, 218, 297, 418, 658, 659, 734, 737, 845, 868, 869, 871], "abov": [4, 21, 42, 43, 45, 49, 60, 70, 74, 75, 81, 87, 113, 115, 139, 141, 143, 149, 150, 155, 159, 160, 165, 166, 167, 169, 170, 171, 174, 187, 189, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 215, 216, 218, 221, 223, 230, 231, 241, 244, 258, 261, 264, 265, 266, 267, 269, 277, 353, 411, 413, 418, 422, 435, 441, 442, 444, 447, 449, 479, 480, 481, 487, 508, 560, 561, 563, 582, 592, 602, 693, 694, 696, 697, 706, 708, 710, 734, 737, 744, 754, 778, 785, 786, 793, 797, 799, 809, 810, 814, 816, 841, 844, 845, 850, 861, 865, 868, 869, 872], "These": [4, 27, 45, 54, 55, 60, 70, 93, 136, 137, 143, 144, 146, 150, 152, 154, 157, 159, 161, 162, 164, 165, 166, 169, 171, 172, 177, 179, 185, 187, 188, 189, 191, 192, 194, 195, 196, 200, 201, 204, 208, 210, 213, 218, 219, 223, 224, 226, 227, 232, 237, 241, 242, 255, 264, 265, 266, 267, 269, 281, 305, 306, 325, 354, 358, 359, 360, 430, 479, 480, 524, 561, 571, 582, 593, 624, 663, 668, 692, 706, 708, 709, 710, 841, 845, 852, 861, 862, 865, 867, 868, 869, 871, 874, 886], "easili": [4, 43, 44, 100, 139, 143, 148, 159, 167, 169, 187, 189, 198, 201, 204, 206, 207, 215, 216, 217, 218, 234, 241, 438, 479, 480, 582, 692, 845, 852, 861, 868, 886], "access": [4, 52, 100, 131, 157, 165, 167, 168, 174, 191, 205, 215, 217, 218, 239, 244, 257, 259, 264, 265, 268, 277, 479, 480, 617, 619, 708, 709, 710, 735, 738, 845, 851, 863, 867, 871, 886], "call": [4, 18, 31, 43, 44, 86, 87, 93, 116, 127, 139, 141, 143, 144, 145, 148, 149, 150, 154, 155, 157, 159, 160, 165, 167, 169, 170, 171, 174, 177, 181, 189, 195, 198, 199, 201, 202, 204, 205, 209, 211, 215, 216, 217, 218, 226, 228, 230, 231, 236, 240, 241, 256, 262, 263, 264, 265, 266, 267, 270, 271, 272, 274, 275, 276, 278, 279, 280, 282, 308, 312, 354, 355, 357, 359, 360, 365, 414, 417, 421, 424, 427, 428, 432, 444, 446, 454, 467, 469, 479, 480, 487, 494, 508, 519, 522, 523, 528, 529, 530, 531, 532, 534, 535, 544, 545, 561, 566, 571, 572, 573, 574, 578, 580, 582, 593, 608, 644, 654, 657, 658, 659, 671, 676, 680, 693, 694, 695, 696, 697, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 722, 724, 725, 732, 733, 734, 735, 736, 737, 751, 752, 754, 771, 778, 784, 785, 786, 789, 792, 793, 808, 816, 841, 843, 844, 845, 849, 853, 863, 865, 867, 868, 871, 872, 876, 886], "shown": [4, 32, 52, 70, 79, 82, 93, 100, 117, 119, 126, 135, 141, 148, 149, 150, 155, 157, 161, 165, 171, 179, 181, 201, 205, 210, 215, 216, 218, 231, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 312, 411, 418, 470, 479, 480, 511, 539, 560, 561, 576, 706, 708, 709, 710, 754, 770, 771, 772, 778, 779, 781, 782, 784, 786, 788, 790, 791, 792, 793, 795, 797, 804, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 824, 868, 869, 871, 886], "below": [4, 10, 19, 43, 47, 75, 111, 113, 126, 139, 150, 154, 159, 160, 165, 167, 169, 171, 189, 191, 194, 201, 202, 204, 205, 206, 207, 209, 210, 211, 217, 226, 231, 234, 236, 239, 241, 244, 259, 261, 262, 263, 264, 265, 266, 267, 271, 272, 275, 276, 277, 278, 279, 280, 306, 312, 360, 413, 422, 430, 438, 447, 449, 470, 479, 480, 496, 528, 561, 563, 569, 571, 658, 692, 693, 694, 696, 697, 706, 709, 754, 773, 785, 790, 794, 797, 799, 812, 817, 818, 841, 845, 851, 861, 865, 867, 868, 872, 876, 886], "also": [4, 10, 19, 21, 27, 28, 29, 30, 32, 38, 39, 41, 42, 43, 45, 47, 60, 62, 69, 70, 71, 78, 79, 80, 82, 83, 93, 94, 100, 103, 106, 108, 111, 113, 115, 116, 119, 125, 126, 134, 137, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 181, 182, 183, 187, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 227, 228, 230, 231, 234, 236, 239, 240, 241, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 297, 298, 304, 305, 306, 310, 312, 314, 322, 323, 327, 329, 330, 340, 347, 354, 359, 360, 366, 369, 372, 380, 388, 411, 413, 418, 423, 427, 430, 432, 435, 446, 447, 449, 450, 451, 452, 454, 461, 464, 471, 474, 476, 477, 479, 480, 487, 491, 500, 504, 519, 522, 523, 534, 535, 536, 539, 558, 560, 561, 563, 564, 570, 571, 573, 576, 577, 578, 579, 583, 584, 585, 586, 588, 589, 599, 601, 607, 608, 615, 623, 640, 641, 644, 650, 654, 655, 662, 671, 674, 692, 693, 698, 701, 706, 708, 709, 710, 714, 715, 716, 717, 719, 734, 737, 743, 744, 752, 754, 770, 771, 777, 778, 779, 782, 784, 785, 786, 788, 790, 791, 793, 794, 796, 797, 798, 804, 805, 806, 807, 808, 809, 810, 812, 814, 816, 818, 820, 841, 843, 845, 848, 849, 850, 851, 852, 853, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 874, 876, 886], "conveni": [4, 11, 45, 70, 75, 136, 141, 150, 157, 160, 165, 168, 170, 171, 180, 195, 198, 201, 205, 206, 216, 221, 226, 227, 228, 231, 234, 235, 236, 240, 244, 264, 265, 266, 267, 268, 274, 478, 479, 480, 485, 511, 534, 561, 569, 578, 579, 647, 650, 652, 696, 697, 706, 708, 709, 710, 767, 843, 845, 849, 861, 862, 868, 886], "head": [4, 5, 10, 22, 26, 41, 43, 45, 50, 70, 71, 78, 79, 100, 108, 111, 114, 117, 119, 124, 126, 134, 135, 142, 144, 149, 150, 156, 158, 162, 163, 164, 165, 168, 169, 170, 171, 174, 175, 176, 177, 179, 180, 182, 183, 184, 187, 189, 190, 198, 199, 204, 206, 207, 209, 211, 213, 214, 215, 227, 241, 244, 261, 262, 264, 265, 266, 267, 268, 269, 273, 274, 277, 302, 304, 305, 306, 308, 312, 315, 316, 325, 328, 330, 335, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 354, 361, 363, 364, 365, 366, 373, 387, 390, 411, 418, 430, 432, 454, 461, 462, 470, 471, 472, 473, 479, 480, 484, 486, 490, 491, 492, 499, 504, 506, 510, 512, 517, 518, 519, 522, 523, 524, 560, 561, 565, 568, 570, 571, 572, 576, 582, 589, 593, 594, 613, 618, 619, 622, 636, 654, 655, 657, 658, 659, 663, 668, 671, 674, 701, 706, 708, 710, 740, 741, 743, 754, 770, 771, 772, 777, 778, 782, 786, 788, 789, 790, 791, 793, 794, 796, 797, 804, 806, 808, 809, 810, 814, 816, 822, 832, 834, 839, 841, 845, 862, 871, 874, 875, 876, 886], "491210": 4, "235572": 4, "043707": 4, "642398": 4, "659978": 4, "now": [4, 19, 24, 26, 32, 41, 45, 50, 70, 72, 74, 83, 86, 87, 108, 110, 111, 112, 119, 126, 133, 134, 135, 136, 139, 140, 143, 144, 145, 150, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 171, 175, 177, 178, 179, 181, 182, 194, 198, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 217, 223, 228, 230, 231, 234, 235, 236, 240, 241, 262, 264, 265, 266, 267, 320, 464, 479, 480, 650, 755, 775, 782, 845, 868, 871, 886], "let": [4, 10, 18, 21, 26, 32, 47, 55, 70, 71, 73, 86, 108, 112, 120, 126, 134, 135, 139, 140, 141, 143, 145, 149, 150, 151, 155, 157, 158, 159, 161, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 195, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 211, 215, 223, 226, 230, 231, 234, 235, 236, 240, 241, 513, 722, 732, 755, 845, 848, 886], "closer": [4, 24, 41, 108, 140, 157, 209, 226, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 655, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816], "want": [4, 41, 50, 82, 93, 111, 114, 119, 126, 134, 135, 139, 140, 141, 142, 143, 144, 148, 149, 150, 157, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 177, 179, 188, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 215, 216, 217, 221, 222, 226, 228, 230, 231, 234, 235, 241, 256, 257, 264, 265, 266, 267, 271, 275, 279, 318, 376, 435, 440, 479, 480, 561, 578, 722, 732, 736, 777, 807, 812, 824, 844, 845, 848, 852, 853, 865, 866, 867, 868, 871, 872], "includ": [4, 7, 28, 37, 41, 69, 70, 81, 85, 95, 96, 98, 102, 103, 106, 109, 112, 113, 122, 131, 134, 136, 139, 141, 142, 143, 145, 148, 150, 151, 154, 158, 159, 161, 165, 166, 167, 168, 169, 170, 171, 175, 179, 181, 184, 187, 188, 189, 191, 195, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 215, 217, 218, 221, 226, 228, 229, 230, 236, 244, 250, 255, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 296, 298, 310, 313, 314, 318, 327, 329, 354, 359, 360, 367, 369, 413, 418, 427, 432, 435, 439, 440, 449, 450, 452, 464, 465, 478, 479, 480, 487, 490, 492, 494, 495, 496, 502, 506, 521, 523, 529, 531, 539, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 568, 569, 571, 572, 575, 577, 578, 579, 581, 582, 585, 589, 592, 593, 599, 601, 604, 608, 617, 619, 620, 623, 624, 625, 674, 691, 692, 701, 705, 706, 708, 709, 710, 714, 715, 716, 717, 719, 723, 735, 737, 738, 744, 750, 754, 778, 784, 785, 786, 787, 788, 790, 791, 798, 799, 803, 807, 808, 814, 831, 841, 843, 845, 847, 848, 849, 850, 851, 852, 853, 857, 861, 862, 863, 864, 865, 867, 868, 869, 870, 871, 872, 874, 886], "column": [4, 10, 31, 93, 94, 100, 111, 139, 140, 142, 144, 150, 165, 171, 174, 187, 190, 195, 206, 209, 210, 215, 226, 227, 258, 259, 261, 264, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 280, 299, 327, 369, 411, 418, 435, 439, 440, 452, 453, 469, 479, 480, 521, 540, 543, 556, 560, 561, 562, 611, 618, 619, 620, 627, 691, 692, 706, 708, 709, 710, 754, 786, 787, 793, 794, 797, 805, 806, 809, 814, 831, 841, 868, 871, 886], "tabl": [4, 41, 122, 142, 143, 170, 171, 184, 188, 201, 215, 216, 239, 264, 265, 266, 267, 269, 271, 272, 274, 275, 277, 278, 279, 280, 463, 464, 479, 480, 539, 655, 754, 773, 778, 785, 812, 817, 818, 819, 823, 836, 841, 868, 871, 872, 886], "epochs_summari": 4, "describ": [4, 13, 16, 74, 98, 112, 116, 148, 150, 155, 157, 161, 164, 165, 167, 168, 169, 170, 171, 187, 191, 194, 198, 200, 205, 206, 207, 209, 210, 216, 217, 223, 224, 227, 232, 241, 244, 266, 267, 297, 353, 354, 360, 411, 419, 432, 435, 443, 479, 480, 560, 561, 562, 593, 629, 656, 676, 677, 678, 679, 680, 681, 682, 720, 722, 725, 732, 736, 794, 800, 841, 843, 861, 865, 867, 868, 871, 874, 886], "round": [4, 37, 108, 139, 144, 148, 159, 167, 171, 194, 201, 202, 204, 205, 211, 215, 223, 241, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 440, 479, 480, 706, 709, 886], "count": [4, 22, 70, 72, 139, 170, 210, 217, 226, 230, 234, 236, 259, 264, 265, 266, 267, 297, 298, 354, 358, 359, 368, 369, 370, 371, 411, 418, 434, 454, 455, 474, 476, 477, 520, 539, 571, 616, 693, 694, 696, 697, 794, 886], "uniqu": [4, 10, 18, 100, 142, 149, 150, 165, 167, 216, 226, 231, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 321, 440, 469, 479, 480, 522, 561, 617, 679, 682, 706, 708, 709, 710, 734, 737, 778, 788, 868, 871, 886], "nan": [4, 69, 70, 143, 209, 228, 229, 230, 231, 241, 479, 480, 508, 567, 582, 886], "top": [4, 73, 111, 114, 119, 126, 135, 139, 150, 157, 159, 160, 171, 175, 180, 191, 199, 202, 204, 205, 206, 207, 210, 215, 217, 218, 226, 256, 264, 265, 266, 267, 272, 278, 280, 754, 755, 772, 784, 788, 817, 841, 845, 868, 871, 886], "freq": [4, 9, 21, 32, 33, 34, 68, 103, 106, 108, 111, 113, 132, 136, 165, 194, 198, 201, 202, 211, 221, 228, 229, 230, 231, 239, 240, 241, 243, 256, 341, 343, 424, 450, 479, 480, 545, 686, 706, 707, 708, 709, 710, 720, 722, 724, 725, 730, 732, 733, 734, 735, 736, 737, 777, 795, 802, 874, 886], "std": [4, 16, 150, 190, 223, 236, 239, 240, 241, 264, 265, 266, 267, 314, 411, 418, 479, 480, 516, 706, 778, 785, 788, 791, 808], "min": [4, 9, 21, 22, 95, 96, 111, 113, 115, 135, 136, 140, 145, 156, 171, 194, 198, 204, 206, 215, 226, 227, 228, 229, 230, 231, 234, 235, 236, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 321, 411, 413, 418, 422, 444, 447, 449, 479, 480, 560, 561, 573, 583, 584, 586, 588, 597, 601, 602, 706, 708, 710, 771, 785, 786, 793, 797, 806, 807, 808, 809, 812, 814, 815, 816, 817], "619": [4, 231], "852": [4, 175, 186, 195, 231], "084": 4, "875": [4, 142, 181, 231, 868], "max": [4, 5, 8, 9, 19, 21, 22, 31, 32, 33, 34, 35, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 80, 83, 89, 92, 93, 95, 99, 108, 111, 114, 115, 120, 135, 140, 143, 149, 151, 156, 159, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 194, 195, 202, 209, 215, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 255, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 297, 298, 321, 358, 411, 413, 418, 422, 444, 445, 447, 449, 479, 480, 511, 537, 538, 543, 560, 561, 584, 588, 597, 602, 693, 694, 695, 696, 697, 699, 706, 708, 710, 722, 732, 754, 762, 771, 785, 786, 789, 793, 797, 806, 808, 809, 812, 814, 815, 816, 817, 873, 886], "642": [4, 59, 231, 244, 477], "provid": [4, 5, 18, 19, 27, 43, 44, 65, 79, 89, 92, 93, 94, 102, 136, 139, 141, 145, 148, 149, 150, 154, 155, 159, 160, 164, 165, 166, 167, 168, 169, 170, 171, 174, 183, 184, 187, 188, 189, 191, 195, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 212, 215, 216, 217, 218, 221, 223, 227, 228, 231, 244, 245, 256, 258, 259, 261, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 285, 288, 297, 298, 302, 303, 310, 313, 321, 329, 353, 355, 356, 357, 358, 359, 360, 365, 369, 372, 386, 387, 390, 411, 413, 418, 427, 432, 435, 438, 449, 450, 452, 454, 464, 470, 471, 478, 479, 480, 499, 500, 510, 511, 513, 522, 527, 548, 560, 561, 563, 564, 571, 577, 578, 579, 582, 585, 593, 599, 601, 608, 618, 622, 633, 644, 655, 656, 671, 674, 691, 692, 694, 696, 697, 700, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 722, 732, 733, 734, 735, 736, 737, 738, 741, 742, 744, 751, 754, 770, 771, 773, 778, 780, 784, 785, 786, 788, 789, 790, 791, 793, 796, 797, 801, 803, 806, 807, 808, 809, 812, 814, 816, 817, 818, 841, 843, 845, 846, 848, 849, 851, 852, 857, 860, 861, 862, 863, 865, 867, 868, 869, 871, 874, 876, 886], "command": [4, 122, 150, 154, 157, 159, 170, 184, 188, 264, 265, 269, 360, 470, 479, 480, 517, 561, 646, 784, 801, 807, 843, 844, 848, 849, 850, 851, 852, 853, 857, 861, 863, 876, 886], "ran": [4, 231, 269], "befor": [4, 5, 21, 24, 26, 41, 44, 45, 50, 61, 68, 70, 81, 85, 87, 89, 93, 118, 126, 135, 136, 139, 140, 141, 142, 143, 144, 148, 150, 155, 156, 157, 159, 160, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 182, 183, 184, 187, 190, 195, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 215, 216, 217, 218, 223, 239, 241, 256, 257, 259, 261, 264, 265, 266, 267, 269, 271, 272, 274, 275, 276, 278, 279, 280, 297, 314, 341, 359, 362, 370, 371, 411, 417, 418, 420, 423, 435, 441, 442, 443, 444, 445, 446, 452, 453, 455, 479, 480, 520, 534, 535, 537, 538, 544, 545, 560, 561, 564, 573, 574, 578, 579, 582, 583, 608, 616, 623, 628, 662, 663, 664, 665, 666, 668, 670, 692, 693, 694, 696, 697, 701, 707, 708, 710, 771, 780, 785, 786, 788, 790, 792, 793, 798, 799, 800, 805, 808, 824, 836, 843, 853, 861, 862, 865, 867, 868, 871, 886], "There": [4, 74, 82, 119, 126, 140, 143, 150, 155, 157, 158, 165, 169, 170, 171, 176, 179, 189, 191, 198, 200, 201, 202, 204, 205, 209, 211, 212, 215, 217, 226, 239, 264, 403, 435, 561, 600, 655, 845, 849, 852, 862, 865, 866, 868, 870, 871], "subdivid": [4, 159, 160, 256, 271, 275, 279, 385, 654, 812, 886], "particular": [4, 27, 125, 139, 140, 154, 165, 167, 171, 174, 194, 195, 201, 204, 205, 215, 228, 236, 256, 258, 264, 265, 274, 303, 428, 455, 479, 480, 487, 628, 686, 693, 694, 696, 697, 784, 807, 843, 865, 867, 868, 869, 874], "addit": [4, 34, 42, 45, 60, 61, 70, 75, 81, 111, 113, 134, 139, 141, 144, 149, 151, 155, 159, 160, 161, 165, 169, 187, 188, 189, 190, 194, 195, 200, 201, 204, 205, 206, 207, 209, 211, 215, 217, 218, 221, 231, 241, 256, 261, 264, 265, 266, 267, 271, 272, 275, 276, 277, 278, 279, 280, 335, 353, 354, 359, 386, 411, 412, 413, 416, 418, 419, 422, 432, 435, 442, 444, 449, 479, 480, 485, 528, 529, 530, 531, 532, 534, 535, 541, 544, 545, 558, 559, 560, 561, 562, 573, 574, 594, 623, 649, 660, 692, 693, 694, 696, 697, 705, 706, 708, 709, 710, 725, 733, 734, 736, 737, 754, 767, 771, 784, 786, 788, 793, 799, 805, 807, 809, 812, 814, 816, 817, 845, 848, 849, 851, 852, 861, 862, 864, 865, 868, 871, 872, 874, 886], "valu": [4, 5, 7, 8, 9, 10, 16, 19, 21, 22, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 69, 71, 89, 92, 93, 95, 100, 102, 103, 108, 111, 113, 119, 120, 126, 130, 131, 134, 135, 136, 139, 140, 141, 142, 143, 145, 148, 149, 150, 151, 155, 159, 161, 165, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 194, 195, 200, 201, 202, 204, 205, 206, 209, 210, 211, 215, 217, 221, 222, 223, 226, 227, 228, 230, 231, 234, 235, 236, 239, 240, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 287, 288, 297, 298, 300, 302, 306, 309, 310, 314, 321, 325, 327, 329, 330, 348, 349, 354, 355, 357, 358, 359, 360, 365, 368, 369, 370, 371, 375, 386, 403, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 430, 432, 433, 435, 439, 440, 444, 445, 449, 450, 451, 452, 453, 454, 455, 456, 459, 464, 467, 469, 470, 471, 474, 476, 477, 479, 480, 481, 487, 489, 494, 498, 502, 504, 508, 513, 515, 516, 517, 519, 520, 522, 523, 524, 527, 528, 532, 534, 535, 536, 537, 538, 539, 542, 544, 545, 549, 560, 561, 562, 563, 564, 566, 567, 570, 573, 574, 576, 577, 578, 579, 582, 584, 585, 588, 589, 591, 599, 601, 602, 604, 608, 610, 616, 620, 623, 627, 636, 643, 647, 649, 650, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 679, 682, 684, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 704, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 722, 724, 725, 732, 733, 734, 735, 736, 737, 741, 742, 744, 754, 757, 763, 770, 771, 773, 776, 778, 779, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 797, 798, 805, 806, 807, 808, 809, 812, 814, 815, 816, 817, 818, 819, 824, 839, 841, 845, 861, 862, 865, 868, 871, 886], "z": [4, 5, 11, 16, 18, 24, 41, 45, 50, 127, 150, 155, 157, 158, 159, 168, 169, 174, 175, 179, 180, 182, 183, 184, 188, 201, 205, 207, 244, 261, 264, 265, 266, 267, 268, 272, 273, 278, 280, 305, 306, 312, 324, 335, 344, 345, 411, 418, 430, 479, 480, 491, 528, 560, 561, 566, 570, 576, 582, 625, 658, 659, 706, 708, 710, 744, 745, 747, 754, 771, 778, 784, 786, 788, 790, 793, 794, 796, 797, 801, 804, 806, 807, 808, 809, 810, 814, 816, 822, 823, 833, 841, 851, 868, 886], "score": [4, 7, 8, 9, 10, 11, 13, 15, 16, 18, 19, 74, 82, 136, 171, 194, 195, 204, 209, 274, 411, 414, 415, 417, 418, 421, 428, 561, 566, 576, 582, 662, 693, 694, 696, 697, 800, 823, 862, 865, 886], "thei": [4, 5, 26, 41, 45, 47, 50, 70, 71, 74, 81, 82, 93, 106, 113, 118, 139, 140, 141, 143, 148, 150, 151, 157, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 175, 179, 180, 181, 187, 189, 190, 191, 195, 198, 199, 200, 201, 202, 204, 205, 206, 209, 210, 211, 215, 216, 217, 218, 231, 234, 244, 257, 259, 264, 265, 266, 267, 269, 274, 297, 307, 309, 325, 334, 354, 361, 363, 432, 434, 440, 444, 446, 453, 479, 480, 487, 494, 500, 502, 504, 520, 537, 538, 550, 561, 572, 580, 582, 593, 608, 616, 617, 619, 650, 709, 749, 754, 771, 787, 788, 791, 836, 841, 843, 845, 848, 852, 861, 863, 867, 868, 886], "have": [4, 10, 19, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 71, 74, 78, 79, 82, 83, 85, 86, 89, 93, 94, 100, 102, 103, 111, 114, 115, 116, 118, 119, 126, 130, 133, 134, 136, 139, 141, 142, 143, 144, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 177, 178, 180, 181, 182, 187, 188, 189, 190, 191, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 227, 230, 231, 234, 236, 239, 241, 255, 256, 257, 259, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 291, 292, 295, 297, 298, 306, 314, 317, 320, 330, 353, 354, 358, 359, 360, 365, 369, 370, 371, 403, 411, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 430, 431, 432, 435, 436, 445, 446, 451, 454, 455, 461, 469, 471, 474, 476, 477, 478, 479, 480, 487, 490, 491, 494, 496, 500, 503, 519, 521, 530, 532, 535, 539, 547, 556, 560, 561, 562, 571, 572, 576, 578, 579, 580, 582, 584, 593, 611, 613, 623, 642, 644, 647, 650, 656, 657, 658, 659, 660, 671, 676, 680, 688, 692, 706, 707, 708, 709, 710, 725, 726, 733, 734, 744, 754, 758, 759, 771, 777, 778, 784, 785, 786, 788, 791, 793, 794, 797, 806, 808, 809, 814, 815, 816, 820, 824, 834, 836, 841, 843, 846, 850, 851, 853, 857, 862, 863, 866, 867, 868, 871, 872, 874, 886], "standard": [4, 8, 28, 34, 41, 44, 46, 70, 74, 82, 93, 108, 120, 134, 140, 148, 149, 150, 154, 158, 159, 168, 169, 170, 181, 190, 194, 195, 199, 201, 204, 207, 215, 221, 227, 236, 240, 244, 256, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 279, 280, 287, 312, 314, 323, 328, 330, 389, 411, 418, 420, 431, 444, 445, 460, 464, 467, 479, 480, 487, 491, 494, 504, 508, 528, 544, 545, 555, 560, 561, 582, 619, 626, 650, 655, 688, 691, 706, 708, 709, 710, 718, 719, 722, 732, 736, 754, 771, 772, 778, 779, 785, 786, 788, 793, 794, 797, 799, 806, 809, 812, 814, 815, 816, 818, 841, 843, 861, 862, 863, 865, 868, 871, 874, 876, 886], "deviat": [4, 54, 55, 89, 96, 99, 120, 149, 150, 177, 195, 204, 208, 226, 228, 240, 261, 264, 265, 266, 267, 287, 314, 411, 543, 544, 545, 561, 582, 668, 688, 706, 708, 709, 710, 722, 732, 736, 778, 779, 785, 788, 794, 797, 799, 814, 815, 841, 868, 886], "how": [4, 5, 9, 10, 13, 18, 19, 22, 26, 27, 31, 33, 43, 44, 45, 47, 58, 62, 64, 66, 67, 68, 69, 70, 71, 75, 78, 89, 93, 94, 97, 98, 104, 112, 115, 116, 119, 121, 123, 124, 126, 128, 129, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 179, 180, 181, 182, 187, 189, 191, 194, 195, 200, 201, 202, 203, 204, 205, 207, 208, 210, 215, 216, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 236, 239, 240, 241, 244, 257, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 277, 278, 279, 280, 297, 298, 308, 312, 313, 338, 342, 348, 365, 366, 367, 373, 411, 417, 418, 423, 438, 453, 455, 469, 470, 474, 476, 477, 479, 480, 484, 492, 500, 501, 504, 511, 528, 537, 538, 539, 560, 561, 564, 572, 582, 593, 594, 635, 636, 637, 638, 646, 650, 693, 694, 696, 697, 704, 706, 707, 708, 709, 710, 725, 754, 755, 762, 770, 771, 775, 778, 780, 784, 785, 786, 789, 793, 797, 798, 799, 800, 806, 807, 809, 812, 813, 814, 816, 817, 822, 824, 841, 843, 845, 846, 853, 861, 862, 867, 868, 869, 871, 872, 874, 886], "onli": [4, 8, 10, 11, 12, 19, 21, 22, 31, 34, 39, 41, 44, 45, 47, 49, 50, 55, 63, 70, 74, 78, 81, 82, 87, 89, 92, 93, 94, 95, 96, 102, 106, 108, 111, 113, 114, 115, 116, 119, 126, 130, 132, 135, 136, 139, 140, 141, 142, 148, 149, 150, 156, 157, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 177, 179, 182, 187, 188, 189, 190, 191, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 215, 216, 217, 218, 221, 222, 223, 226, 228, 229, 230, 231, 234, 235, 236, 240, 241, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 321, 322, 323, 325, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 428, 430, 432, 435, 436, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 459, 461, 462, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 522, 523, 524, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 557, 558, 559, 560, 561, 563, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 600, 601, 602, 605, 606, 607, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 633, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 650, 652, 654, 655, 657, 658, 659, 660, 669, 670, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 683, 692, 693, 694, 695, 696, 697, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 723, 724, 725, 728, 729, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 749, 753, 754, 762, 770, 771, 772, 773, 775, 778, 779, 782, 784, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 801, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 845, 852, 861, 862, 865, 866, 867, 868, 869, 871, 886], "500": [4, 10, 11, 22, 70, 79, 80, 85, 87, 115, 134, 140, 142, 144, 180, 183, 189, 191, 194, 195, 201, 204, 208, 210, 211, 212, 223, 226, 231, 561], "ts_arg": [4, 100, 127, 195, 210, 227, 264, 265, 266, 267, 561, 785, 791, 799, 886], "xlim": [4, 19, 37, 39, 96, 126, 159, 180, 194, 201, 202, 210, 211, 223, 226, 236, 241, 266, 267, 788, 790], "plot_joint": [4, 71, 100, 149, 150, 165, 179, 181, 195, 198, 204, 206, 210, 227, 240, 266, 267, 706, 872, 886], "15": [4, 5, 9, 11, 12, 13, 19, 21, 28, 29, 32, 33, 34, 35, 42, 43, 45, 47, 50, 51, 68, 69, 70, 71, 73, 75, 76, 78, 79, 80, 82, 84, 91, 92, 93, 102, 107, 108, 113, 126, 134, 135, 136, 138, 140, 141, 142, 144, 150, 154, 156, 161, 163, 165, 167, 168, 169, 170, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 194, 195, 200, 202, 203, 204, 206, 207, 208, 209, 210, 215, 220, 221, 226, 227, 228, 230, 231, 234, 235, 236, 239, 244, 262, 264, 265, 266, 267, 271, 272, 273, 274, 275, 277, 278, 279, 280, 284, 318, 369, 413, 422, 447, 449, 450, 451, 476, 479, 480, 508, 561, 564, 573, 574, 638, 670, 690, 695, 708, 710, 725, 735, 736, 738, 758, 769, 770, 784, 792, 812, 817, 841, 848, 861, 862, 868], "titl": [4, 8, 9, 15, 16, 19, 22, 30, 35, 39, 42, 43, 44, 46, 47, 48, 49, 50, 54, 55, 59, 69, 70, 71, 76, 81, 85, 89, 93, 100, 102, 106, 107, 108, 109, 113, 119, 122, 124, 126, 131, 136, 140, 141, 143, 145, 150, 151, 159, 171, 174, 175, 176, 178, 179, 194, 195, 199, 201, 202, 204, 205, 206, 207, 209, 211, 223, 226, 227, 228, 231, 236, 240, 241, 244, 262, 264, 265, 266, 267, 271, 274, 275, 279, 479, 480, 560, 561, 706, 708, 710, 754, 774, 777, 778, 782, 783, 784, 785, 786, 788, 790, 791, 792, 795, 797, 798, 800, 801, 802, 807, 809, 810, 812, 815, 821, 845, 860, 886], "differ": [4, 9, 16, 21, 22, 27, 28, 33, 37, 39, 44, 45, 47, 54, 55, 63, 68, 70, 77, 79, 80, 84, 93, 95, 98, 100, 102, 106, 109, 110, 111, 113, 119, 121, 122, 126, 129, 133, 134, 136, 139, 141, 142, 143, 146, 148, 149, 150, 151, 155, 157, 159, 161, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 179, 180, 182, 183, 184, 187, 188, 189, 190, 195, 198, 201, 202, 203, 204, 205, 206, 207, 209, 211, 215, 216, 217, 221, 226, 227, 228, 229, 231, 234, 235, 236, 240, 244, 258, 259, 264, 265, 266, 267, 268, 271, 272, 275, 278, 279, 280, 281, 297, 298, 299, 303, 320, 341, 354, 358, 359, 361, 363, 364, 369, 370, 371, 390, 403, 411, 418, 420, 432, 434, 435, 445, 452, 454, 455, 469, 470, 474, 476, 477, 479, 480, 487, 494, 502, 513, 520, 534, 536, 537, 538, 539, 548, 561, 563, 571, 572, 578, 582, 591, 593, 607, 610, 616, 617, 620, 624, 647, 657, 658, 659, 660, 666, 669, 670, 671, 672, 688, 693, 694, 695, 696, 697, 706, 707, 708, 709, 710, 722, 732, 736, 754, 759, 770, 780, 784, 788, 792, 793, 794, 799, 801, 807, 810, 812, 818, 832, 841, 843, 845, 849, 850, 853, 861, 862, 863, 865, 868, 871, 874, 886], "wave": [4, 46, 94, 113, 136, 143, 150, 165, 201, 206, 227, 239, 244, 264, 265, 266, 267, 403, 404, 479, 480, 510, 573, 578, 583, 708, 710, 718, 724, 862], "contrast": [4, 7, 87, 95, 98, 148, 150, 165, 169, 207, 223, 226, 227, 234, 239, 240, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709, 862, 872, 874, 886], "although": [4, 21, 65, 100, 139, 142, 148, 160, 171, 200, 201, 203, 205, 215, 262, 444, 479, 480, 688, 852, 868, 886], "shouldn": [4, 150, 244, 275, 278, 548], "expect": [4, 32, 38, 93, 113, 120, 143, 155, 158, 160, 161, 164, 165, 166, 171, 179, 189, 195, 201, 204, 205, 206, 210, 215, 216, 221, 223, 226, 230, 231, 236, 241, 264, 265, 266, 267, 330, 332, 337, 358, 479, 480, 486, 495, 499, 506, 539, 561, 593, 617, 618, 622, 633, 644, 754, 784, 794, 801, 807, 841, 843, 845, 864, 865, 867, 868, 869, 886], "great": [4, 119, 143, 150, 241, 863, 874], "among": [4, 10, 27, 36, 56, 171, 201, 226, 275, 277, 364, 538, 540, 542, 561, 582, 625, 628, 686, 754, 759, 857, 867, 886], "minu": [4, 140, 143, 228, 241, 561, 647, 691, 868, 871], "difference_wav": 4, "weight": [4, 5, 7, 11, 15, 18, 19, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 58, 59, 60, 73, 74, 89, 93, 98, 103, 106, 107, 108, 109, 122, 136, 140, 143, 148, 150, 156, 165, 167, 175, 176, 177, 178, 179, 180, 181, 184, 187, 190, 194, 195, 199, 201, 202, 203, 205, 206, 207, 210, 222, 223, 226, 227, 229, 234, 235, 236, 244, 256, 269, 270, 275, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 353, 365, 415, 416, 417, 429, 432, 455, 456, 474, 476, 477, 490, 528, 534, 535, 539, 560, 561, 591, 662, 663, 668, 669, 672, 693, 694, 696, 697, 701, 713, 716, 724, 786, 809, 841, 861, 862, 871, 872, 886], "clear": [4, 74, 112, 116, 139, 156, 199, 203, 205, 209, 211, 223, 226, 261, 264, 265, 269, 273, 288, 302, 479, 480, 527, 741, 754, 785, 845, 874, 886], "pattern": [4, 11, 17, 19, 20, 21, 27, 46, 79, 82, 111, 112, 141, 142, 160, 165, 166, 171, 194, 198, 201, 204, 205, 206, 210, 241, 244, 264, 265, 266, 267, 269, 274, 312, 328, 363, 373, 411, 415, 417, 418, 419, 426, 429, 435, 440, 461, 494, 496, 558, 562, 620, 633, 643, 644, 659, 706, 708, 709, 845, 861, 862, 868, 871, 886], "when": [4, 21, 27, 28, 31, 44, 45, 46, 47, 60, 70, 74, 75, 80, 81, 82, 83, 89, 93, 94, 102, 106, 114, 125, 126, 139, 141, 142, 143, 144, 145, 148, 149, 150, 156, 157, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 174, 177, 179, 181, 183, 187, 188, 189, 190, 191, 195, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 221, 222, 226, 228, 231, 239, 240, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 287, 297, 298, 309, 312, 316, 317, 339, 347, 348, 349, 353, 354, 358, 359, 360, 361, 363, 365, 369, 370, 371, 372, 375, 411, 418, 419, 422, 428, 430, 432, 436, 438, 440, 443, 445, 446, 447, 449, 450, 452, 454, 455, 458, 461, 470, 474, 476, 477, 479, 480, 487, 492, 494, 495, 496, 500, 502, 504, 508, 528, 529, 530, 531, 532, 534, 535, 539, 544, 545, 547, 550, 560, 561, 563, 566, 571, 572, 575, 576, 578, 582, 583, 585, 586, 593, 594, 608, 611, 613, 617, 619, 621, 623, 636, 642, 644, 645, 650, 655, 656, 667, 670, 693, 694, 695, 696, 697, 701, 705, 706, 707, 708, 709, 710, 712, 713, 715, 718, 722, 724, 732, 736, 744, 751, 754, 762, 763, 771, 778, 782, 784, 786, 787, 788, 790, 791, 793, 794, 796, 797, 799, 801, 804, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 820, 832, 834, 841, 843, 848, 849, 850, 851, 860, 861, 863, 865, 866, 867, 868, 869, 871, 872, 886], "howev": [4, 16, 21, 45, 70, 74, 75, 139, 141, 145, 148, 161, 166, 168, 169, 170, 171, 188, 189, 190, 191, 194, 195, 199, 201, 203, 204, 205, 206, 207, 211, 215, 216, 226, 228, 230, 231, 234, 236, 241, 264, 265, 269, 297, 312, 354, 403, 432, 494, 496, 510, 528, 695, 845, 865, 867, 868, 871, 874, 886], "could": [4, 28, 29, 30, 38, 39, 41, 43, 69, 83, 103, 139, 143, 150, 159, 160, 165, 168, 170, 171, 174, 178, 179, 180, 190, 198, 200, 204, 205, 206, 207, 209, 212, 215, 216, 217, 221, 226, 227, 234, 236, 241, 264, 265, 266, 267, 270, 275, 297, 380, 403, 404, 410, 432, 434, 438, 454, 479, 480, 481, 487, 561, 564, 579, 583, 584, 607, 757, 762, 827, 845, 865, 867, 874, 886], "narrow": [4, 198, 202, 241, 274, 886], "our": [4, 5, 19, 26, 27, 32, 42, 44, 62, 67, 70, 74, 79, 83, 92, 102, 108, 111, 113, 114, 119, 120, 126, 134, 135, 136, 139, 140, 141, 143, 144, 145, 149, 150, 155, 159, 165, 167, 170, 171, 174, 179, 180, 182, 183, 195, 198, 199, 201, 202, 204, 205, 206, 207, 209, 210, 211, 215, 216, 221, 223, 226, 228, 230, 231, 234, 235, 236, 239, 240, 241, 277, 451, 452, 536, 722, 732, 736, 750, 844, 845, 847, 848, 849, 850, 861, 864, 865, 867, 868, 869, 873, 874, 886], "search": [4, 150, 155, 195, 244, 274, 277, 297, 414, 421, 438, 459, 564, 569, 576, 722, 732, 733, 736, 770, 845, 850, 851, 865], "bit": [4, 5, 7, 108, 126, 140, 143, 159, 170, 179, 188, 201, 203, 208, 211, 226, 234, 236, 241, 264, 265, 269, 341, 479, 480, 487, 494, 501, 843, 851, 862, 868, 871, 886], "sinc": [4, 19, 32, 43, 44, 70, 93, 114, 118, 134, 139, 140, 141, 143, 150, 159, 165, 166, 168, 170, 171, 174, 177, 187, 188, 190, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212, 215, 216, 217, 221, 226, 229, 234, 236, 241, 258, 259, 264, 265, 266, 267, 270, 274, 275, 278, 290, 312, 338, 354, 358, 359, 432, 441, 442, 443, 444, 455, 467, 479, 480, 523, 548, 561, 572, 578, 582, 593, 693, 694, 695, 696, 697, 771, 798, 845, 861, 865, 868, 871, 886], "paradigm": [4, 7, 143, 161, 165, 198, 201, 787, 862, 886], "might": [4, 5, 19, 21, 70, 119, 126, 140, 143, 150, 155, 160, 161, 166, 167, 175, 191, 195, 201, 204, 207, 226, 231, 234, 241, 271, 275, 279, 332, 435, 547, 561, 601, 693, 812, 843, 844, 845, 861, 864, 865, 868, 886], "best": [4, 5, 10, 16, 73, 82, 120, 134, 141, 148, 161, 165, 175, 176, 177, 179, 191, 194, 200, 204, 209, 223, 270, 354, 359, 419, 479, 480, 576, 662, 664, 665, 755, 845, 851, 853, 863, 864, 865, 867, 868, 871], "electrod": [4, 27, 67, 77, 78, 84, 117, 119, 121, 129, 134, 137, 140, 142, 149, 158, 160, 164, 165, 169, 185, 186, 190, 194, 198, 201, 203, 207, 209, 215, 226, 244, 261, 264, 265, 266, 267, 268, 269, 273, 275, 281, 312, 313, 316, 326, 328, 330, 331, 332, 333, 334, 335, 338, 354, 366, 373, 411, 418, 452, 463, 470, 471, 479, 480, 485, 487, 489, 494, 500, 502, 523, 527, 528, 539, 560, 561, 569, 576, 588, 590, 592, 621, 650, 706, 708, 709, 710, 746, 754, 755, 770, 771, 774, 776, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 822, 824, 841, 861, 862, 871, 874, 886], "over": [4, 5, 8, 9, 12, 21, 27, 28, 45, 46, 58, 59, 67, 70, 79, 80, 102, 103, 106, 108, 111, 112, 114, 121, 129, 134, 135, 136, 148, 149, 150, 158, 160, 161, 165, 168, 171, 174, 175, 190, 191, 199, 201, 204, 206, 209, 211, 217, 218, 223, 226, 227, 230, 231, 239, 241, 244, 256, 258, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 291, 292, 295, 307, 321, 342, 354, 360, 411, 418, 420, 422, 450, 453, 479, 480, 514, 530, 532, 535, 561, 565, 594, 607, 620, 655, 656, 681, 693, 702, 706, 708, 709, 710, 717, 725, 738, 754, 767, 784, 785, 786, 796, 801, 841, 845, 852, 862, 863, 865, 867, 868, 874, 886], "occipit": [4, 47, 49, 168, 203, 241, 640, 868], "lobe": [4, 47, 134, 135, 179], "ani": [4, 5, 18, 24, 27, 41, 45, 50, 75, 82, 109, 111, 116, 119, 125, 126, 134, 136, 139, 140, 141, 142, 148, 150, 155, 157, 159, 160, 161, 164, 165, 166, 168, 169, 170, 171, 175, 180, 182, 183, 184, 188, 189, 195, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 215, 216, 217, 218, 226, 231, 241, 244, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 274, 275, 277, 278, 279, 280, 287, 289, 291, 305, 306, 312, 319, 324, 326, 361, 365, 387, 417, 430, 433, 434, 435, 438, 445, 463, 468, 479, 480, 495, 550, 552, 553, 554, 558, 559, 561, 562, 563, 564, 578, 582, 583, 588, 593, 600, 611, 617, 625, 633, 643, 646, 647, 650, 656, 667, 671, 692, 701, 706, 707, 708, 709, 710, 723, 754, 755, 757, 779, 784, 785, 787, 796, 799, 807, 808, 818, 824, 833, 836, 841, 843, 845, 848, 862, 863, 865, 867, 868, 874, 886], "easier": [4, 139, 141, 143, 149, 150, 155, 171, 190, 195, 199, 201, 204, 205, 206, 207, 258, 372, 843, 845, 886], "spot": [4, 199, 202, 230, 274, 886], "area": [4, 5, 54, 70, 93, 115, 134, 177, 190, 191, 195, 199, 204, 212, 217, 222, 226, 230, 241, 264, 265, 266, 267, 270, 479, 480, 588, 667, 706, 776, 778, 788, 790, 808, 845, 868, 871, 886], "dictionari": [4, 10, 27, 36, 56, 59, 93, 114, 126, 135, 139, 140, 141, 143, 144, 148, 149, 150, 165, 166, 168, 187, 204, 206, 209, 215, 216, 221, 244, 256, 258, 259, 261, 264, 265, 266, 267, 268, 269, 273, 274, 275, 277, 288, 297, 298, 299, 302, 310, 312, 324, 325, 340, 354, 358, 359, 365, 368, 369, 370, 371, 373, 411, 413, 418, 422, 435, 438, 440, 443, 446, 447, 449, 450, 452, 454, 455, 471, 474, 475, 476, 477, 478, 479, 480, 512, 522, 527, 539, 561, 571, 573, 574, 576, 578, 581, 582, 613, 620, 625, 636, 638, 641, 647, 655, 692, 706, 741, 744, 754, 777, 778, 784, 785, 787, 794, 797, 799, 807, 813, 852, 886], "concentr": [4, 189, 205, 210, 222, 416, 534, 535, 595, 600, 713, 716, 724, 786, 886], "b11": 4, "ylim": [4, 7, 9, 19, 35, 39, 40, 46, 51, 59, 98, 111, 113, 126, 150, 159, 194, 201, 203, 210, 211, 226, 236, 241, 266, 267, 778, 788, 792, 886], "do": [4, 5, 15, 16, 18, 24, 26, 27, 31, 34, 40, 41, 45, 47, 50, 51, 54, 55, 58, 59, 60, 65, 67, 70, 74, 82, 108, 111, 113, 114, 119, 126, 135, 136, 139, 140, 143, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 165, 167, 170, 171, 174, 175, 176, 179, 181, 182, 183, 184, 187, 188, 190, 191, 194, 195, 199, 201, 202, 204, 205, 206, 207, 208, 209, 211, 215, 217, 221, 222, 223, 226, 231, 234, 235, 236, 240, 241, 244, 256, 257, 258, 259, 261, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 283, 287, 303, 307, 309, 319, 326, 354, 358, 365, 369, 370, 380, 386, 403, 404, 422, 423, 424, 430, 432, 440, 445, 446, 452, 461, 469, 476, 477, 479, 480, 487, 494, 523, 528, 529, 530, 531, 532, 534, 535, 544, 545, 552, 553, 554, 558, 559, 561, 562, 563, 564, 572, 578, 579, 582, 593, 610, 613, 620, 623, 624, 642, 644, 646, 693, 694, 696, 697, 701, 706, 708, 709, 710, 722, 723, 732, 736, 744, 779, 783, 795, 814, 831, 834, 836, 843, 845, 848, 850, 851, 853, 856, 861, 862, 867, 868, 871, 872, 874, 886], "pretti": [4, 140, 143, 201, 204, 206, 865], "small": [4, 5, 11, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 70, 75, 89, 92, 93, 103, 106, 107, 108, 109, 120, 126, 127, 134, 140, 141, 151, 161, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 195, 201, 202, 204, 206, 217, 222, 223, 226, 228, 234, 236, 256, 261, 262, 264, 265, 266, 267, 270, 273, 320, 354, 411, 418, 479, 480, 495, 560, 561, 563, 611, 617, 693, 694, 696, 697, 699, 706, 708, 710, 782, 786, 793, 797, 806, 809, 814, 841, 845, 862, 865, 868, 871, 886], "determin": [4, 22, 81, 127, 140, 144, 150, 160, 165, 168, 170, 177, 189, 201, 203, 209, 215, 216, 217, 226, 229, 231, 258, 261, 262, 264, 265, 266, 267, 269, 272, 273, 278, 280, 283, 297, 298, 305, 312, 314, 341, 348, 354, 358, 359, 369, 370, 371, 386, 411, 417, 418, 419, 428, 450, 454, 455, 474, 476, 477, 479, 480, 491, 515, 519, 539, 561, 588, 591, 593, 598, 599, 621, 640, 698, 722, 732, 734, 736, 737, 754, 782, 785, 790, 792, 793, 794, 795, 804, 811, 817, 827, 865, 868, 871, 886], "whether": [4, 13, 81, 140, 143, 144, 145, 170, 177, 179, 195, 199, 204, 205, 209, 241, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 287, 297, 298, 312, 321, 322, 323, 324, 326, 354, 359, 364, 386, 393, 411, 418, 433, 444, 452, 470, 471, 478, 479, 480, 490, 498, 520, 528, 529, 530, 531, 532, 535, 537, 538, 539, 543, 544, 545, 560, 561, 562, 570, 576, 578, 579, 582, 583, 584, 588, 591, 594, 608, 647, 650, 670, 671, 693, 694, 696, 697, 706, 707, 708, 709, 710, 712, 715, 718, 754, 763, 771, 775, 778, 780, 782, 783, 784, 785, 786, 788, 792, 793, 797, 799, 801, 804, 806, 807, 808, 809, 810, 812, 814, 815, 816, 817, 820, 824, 845, 851, 865, 868, 871, 886], "stronger": [4, 140, 190, 228, 236, 266, 267, 788], "along": [4, 19, 46, 67, 114, 118, 135, 139, 141, 159, 165, 167, 169, 177, 194, 195, 198, 199, 203, 204, 207, 208, 215, 217, 218, 223, 234, 261, 262, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 282, 287, 411, 414, 418, 421, 422, 424, 451, 469, 470, 476, 479, 480, 560, 561, 610, 685, 686, 693, 694, 696, 697, 700, 706, 708, 709, 710, 754, 770, 771, 778, 784, 785, 786, 789, 793, 797, 806, 809, 810, 812, 814, 815, 816, 817, 841, 843, 844, 845, 862, 868, 886], "phase_coh": 4, "get": [4, 5, 7, 15, 18, 19, 21, 22, 26, 27, 28, 34, 38, 39, 41, 47, 48, 50, 52, 60, 62, 63, 65, 66, 69, 70, 72, 79, 80, 82, 83, 93, 94, 95, 96, 102, 108, 112, 113, 115, 119, 122, 123, 126, 134, 135, 139, 140, 141, 142, 143, 145, 148, 149, 150, 154, 155, 156, 157, 159, 161, 164, 165, 166, 168, 169, 172, 173, 174, 179, 180, 182, 183, 184, 191, 198, 199, 200, 201, 202, 204, 206, 215, 217, 218, 226, 228, 230, 231, 236, 239, 240, 244, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 288, 302, 306, 310, 311, 312, 322, 323, 341, 342, 358, 365, 370, 371, 374, 377, 378, 379, 380, 382, 383, 384, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 428, 431, 435, 440, 446, 452, 460, 463, 466, 470, 479, 480, 485, 509, 517, 527, 537, 538, 550, 561, 562, 568, 570, 579, 623, 655, 656, 675, 677, 685, 698, 701, 706, 707, 708, 709, 710, 722, 732, 736, 741, 754, 755, 778, 785, 787, 800, 841, 843, 844, 845, 847, 849, 850, 851, 856, 862, 863, 867, 868, 869, 871, 872, 874, 886], "sort": [4, 7, 15, 21, 27, 47, 93, 120, 121, 129, 136, 142, 159, 169, 226, 264, 265, 266, 267, 269, 274, 324, 354, 359, 419, 437, 440, 464, 495, 561, 628, 707, 709, 785, 788, 790, 836, 853, 886], "label": [4, 8, 9, 10, 11, 12, 13, 15, 16, 18, 21, 22, 27, 28, 29, 36, 37, 44, 45, 56, 68, 70, 89, 91, 93, 94, 95, 96, 100, 104, 105, 109, 110, 111, 112, 115, 119, 125, 126, 134, 136, 139, 141, 142, 143, 148, 150, 154, 159, 165, 167, 170, 171, 175, 179, 180, 190, 191, 195, 200, 204, 206, 209, 215, 216, 217, 227, 236, 240, 241, 244, 260, 261, 262, 264, 265, 266, 267, 269, 271, 272, 273, 275, 276, 277, 278, 279, 280, 297, 298, 360, 364, 385, 388, 411, 412, 413, 416, 418, 419, 420, 422, 428, 444, 445, 452, 457, 463, 464, 465, 469, 479, 480, 487, 490, 494, 514, 515, 527, 528, 529, 530, 531, 532, 534, 535, 537, 538, 540, 542, 544, 545, 547, 558, 560, 561, 562, 576, 610, 623, 625, 626, 627, 628, 633, 643, 644, 655, 656, 664, 669, 672, 673, 683, 702, 706, 708, 709, 710, 722, 732, 754, 759, 772, 773, 776, 778, 784, 785, 786, 787, 788, 790, 793, 797, 800, 801, 806, 807, 809, 812, 813, 814, 815, 816, 817, 835, 836, 841, 845, 874, 876, 886], "2f": [4, 59, 156, 271, 272, 275, 278, 279, 280, 561, 754, 797, 812, 817], "format": [4, 27, 34, 43, 44, 62, 66, 70, 113, 126, 134, 136, 139, 142, 148, 149, 150, 159, 164, 165, 167, 169, 170, 171, 175, 181, 187, 190, 191, 202, 204, 205, 206, 207, 210, 212, 215, 216, 217, 219, 226, 227, 228, 231, 256, 258, 261, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 312, 330, 331, 335, 337, 350, 351, 352, 373, 411, 418, 440, 441, 442, 443, 444, 471, 478, 479, 480, 482, 485, 487, 491, 496, 501, 550, 556, 560, 561, 576, 578, 588, 611, 615, 620, 626, 636, 651, 652, 657, 658, 659, 671, 686, 693, 694, 696, 697, 706, 707, 708, 709, 710, 724, 725, 727, 749, 754, 769, 771, 786, 793, 797, 806, 809, 812, 814, 816, 817, 831, 839, 841, 845, 852, 857, 861, 862, 865, 871, 874, 886], "90": [4, 5, 11, 13, 19, 24, 35, 41, 42, 47, 79, 80, 89, 93, 102, 103, 107, 108, 111, 113, 122, 134, 135, 142, 150, 155, 156, 157, 159, 168, 169, 170, 178, 183, 189, 194, 195, 200, 202, 207, 208, 210, 211, 226, 227, 228, 229, 230, 231, 235, 236, 241, 244, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 411, 416, 418, 454, 455, 474, 476, 477, 524, 534, 535, 539, 561, 655, 662, 664, 665, 666, 687, 713, 716, 724, 759, 786, 794, 862, 863, 868], "each": [4, 9, 10, 11, 15, 16, 19, 24, 28, 32, 33, 38, 41, 44, 45, 67, 70, 79, 82, 92, 93, 94, 100, 102, 106, 107, 108, 111, 112, 114, 116, 119, 126, 127, 132, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 159, 160, 161, 165, 166, 167, 168, 170, 171, 174, 175, 176, 177, 179, 180, 182, 184, 188, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 221, 223, 226, 228, 230, 231, 234, 235, 236, 239, 241, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 286, 289, 290, 297, 298, 303, 310, 314, 317, 321, 342, 344, 345, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 362, 365, 367, 371, 386, 403, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 428, 434, 435, 436, 445, 449, 450, 451, 452, 453, 454, 455, 463, 469, 474, 476, 477, 478, 479, 480, 481, 483, 494, 503, 511, 512, 515, 517, 519, 520, 528, 532, 534, 535, 537, 538, 551, 560, 561, 562, 564, 566, 569, 576, 578, 580, 582, 588, 592, 593, 597, 613, 617, 623, 636, 639, 647, 654, 655, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 675, 677, 686, 688, 689, 691, 693, 694, 695, 696, 697, 698, 701, 702, 705, 706, 707, 708, 709, 710, 711, 712, 713, 722, 725, 732, 736, 737, 744, 754, 755, 758, 762, 770, 771, 772, 774, 775, 776, 778, 779, 780, 781, 782, 785, 786, 788, 790, 791, 792, 793, 794, 797, 805, 806, 807, 808, 809, 813, 814, 815, 816, 819, 823, 824, 832, 834, 839, 841, 843, 844, 845, 851, 861, 862, 863, 865, 868, 871, 886], "zip": [4, 9, 10, 22, 27, 47, 80, 89, 106, 112, 113, 119, 126, 136, 139, 149, 159, 164, 179, 194, 199, 201, 202, 204, 205, 207, 226, 227, 228, 229, 230, 231, 236, 240, 387, 503, 845, 853], "c22": 4, "figur": [4, 5, 8, 16, 19, 22, 27, 28, 37, 38, 45, 49, 54, 55, 91, 102, 108, 110, 114, 115, 117, 121, 122, 124, 129, 134, 135, 140, 141, 144, 149, 155, 157, 159, 165, 169, 175, 177, 178, 179, 182, 183, 190, 194, 195, 201, 203, 204, 206, 209, 210, 218, 223, 226, 228, 231, 236, 240, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 312, 313, 326, 411, 418, 470, 471, 479, 480, 560, 561, 576, 623, 633, 706, 707, 708, 709, 710, 733, 734, 736, 737, 754, 756, 757, 760, 763, 767, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 821, 822, 824, 843, 844, 845, 863, 865, 886], "ax": [4, 10, 11, 12, 13, 15, 19, 21, 22, 37, 39, 41, 45, 47, 58, 67, 68, 69, 70, 71, 72, 73, 80, 81, 85, 89, 92, 95, 98, 103, 111, 112, 113, 114, 115, 119, 126, 132, 134, 135, 136, 143, 144, 145, 149, 150, 155, 159, 160, 169, 171, 175, 176, 179, 180, 182, 194, 195, 198, 201, 202, 205, 206, 209, 210, 211, 218, 223, 226, 227, 228, 229, 230, 231, 239, 240, 241, 261, 262, 264, 265, 266, 267, 273, 312, 313, 321, 326, 411, 418, 470, 479, 480, 560, 561, 706, 708, 710, 722, 732, 755, 757, 767, 770, 771, 773, 776, 777, 778, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 802, 803, 804, 806, 808, 809, 810, 811, 814, 816, 868, 886], "subplot": [4, 10, 11, 12, 13, 15, 19, 21, 22, 39, 41, 45, 47, 58, 68, 69, 70, 71, 72, 73, 81, 85, 89, 92, 95, 98, 103, 106, 111, 112, 113, 114, 115, 119, 126, 135, 136, 141, 143, 145, 150, 159, 169, 171, 175, 176, 179, 180, 182, 194, 195, 201, 206, 209, 210, 211, 218, 223, 226, 227, 228, 229, 230, 231, 240, 241, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 706, 708, 710, 722, 732, 754, 776, 777, 786, 787, 792, 793, 797, 802, 806, 809, 814, 816, 819, 886], "figsiz": [4, 12, 15, 19, 22, 45, 47, 70, 73, 95, 111, 112, 113, 114, 119, 126, 135, 143, 159, 175, 182, 194, 201, 206, 209, 210, 223, 226, 227, 229, 230, 231, 240, 241, 561, 799, 800], "20": [4, 5, 9, 11, 12, 13, 14, 15, 19, 22, 28, 33, 34, 35, 37, 41, 45, 46, 47, 48, 54, 55, 59, 60, 61, 70, 74, 76, 80, 81, 87, 89, 99, 102, 103, 106, 107, 108, 112, 113, 114, 115, 120, 126, 127, 129, 132, 133, 136, 139, 141, 142, 144, 147, 149, 150, 151, 156, 158, 159, 163, 165, 168, 169, 170, 171, 175, 176, 178, 180, 182, 183, 184, 190, 194, 195, 198, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 215, 218, 221, 223, 226, 227, 228, 230, 231, 234, 235, 236, 239, 241, 244, 245, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 297, 298, 308, 312, 317, 324, 330, 341, 342, 343, 344, 345, 347, 360, 365, 410, 411, 418, 436, 446, 454, 474, 476, 477, 479, 480, 487, 516, 520, 528, 529, 530, 531, 535, 539, 543, 544, 545, 552, 553, 554, 560, 561, 570, 576, 582, 591, 615, 620, 625, 650, 654, 655, 670, 672, 694, 695, 706, 707, 708, 709, 710, 723, 758, 770, 771, 772, 778, 783, 784, 786, 788, 789, 790, 792, 793, 794, 797, 804, 806, 807, 808, 809, 810, 812, 814, 816, 817, 844, 861, 862, 865, 868], "cmap": [4, 9, 10, 13, 15, 16, 19, 22, 41, 70, 99, 100, 106, 108, 111, 113, 114, 115, 119, 135, 142, 159, 181, 194, 195, 209, 226, 228, 229, 230, 231, 240, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 706, 707, 708, 710, 769, 771, 778, 780, 785, 786, 790, 793, 796, 797, 806, 809, 814, 815, 816], "magma": 4, "consider": [4, 80, 98, 150, 200, 201, 204, 211, 222, 231, 244, 274, 692, 852, 868, 874, 886], "chosen": [4, 45, 136, 144, 150, 198, 201, 203, 204, 206, 239, 258, 261, 264, 265, 266, 267, 272, 273, 277, 278, 280, 358, 411, 413, 418, 422, 424, 447, 449, 450, 469, 479, 480, 513, 536, 560, 561, 576, 591, 610, 658, 659, 693, 694, 696, 697, 706, 707, 708, 709, 710, 722, 732, 736, 754, 770, 771, 780, 784, 786, 790, 793, 797, 800, 806, 807, 808, 809, 810, 814, 816, 868], "test": [4, 8, 10, 13, 15, 16, 19, 26, 27, 89, 94, 97, 101, 111, 122, 127, 134, 139, 150, 164, 167, 170, 171, 187, 194, 195, 208, 209, 215, 227, 228, 229, 232, 233, 236, 237, 238, 241, 244, 264, 265, 266, 267, 269, 275, 276, 277, 289, 291, 297, 318, 360, 386, 414, 415, 428, 432, 434, 450, 479, 480, 488, 508, 511, 527, 528, 536, 542, 552, 558, 561, 582, 593, 620, 633, 635, 678, 684, 686, 688, 690, 693, 694, 695, 696, 697, 698, 699, 700, 706, 708, 709, 710, 736, 754, 762, 775, 778, 786, 793, 800, 814, 843, 846, 849, 850, 865, 868, 874, 886], "interpol": [4, 15, 24, 27, 32, 60, 70, 77, 84, 86, 89, 92, 93, 94, 118, 134, 135, 150, 176, 180, 187, 195, 204, 209, 223, 226, 239, 261, 264, 265, 266, 267, 273, 277, 279, 280, 411, 418, 445, 468, 479, 480, 560, 561, 576, 580, 585, 592, 623, 655, 657, 658, 659, 671, 706, 708, 710, 742, 754, 771, 786, 793, 797, 806, 809, 814, 816, 852, 886], "miss": [4, 44, 69, 83, 134, 150, 157, 158, 179, 182, 187, 189, 201, 207, 241, 264, 265, 266, 267, 269, 277, 316, 339, 387, 403, 417, 479, 480, 487, 494, 500, 593, 692, 787, 788, 841, 845, 849, 850, 852, 853, 871, 874, 886], "drop": [4, 8, 9, 11, 12, 16, 18, 21, 32, 33, 34, 42, 46, 49, 71, 72, 95, 96, 99, 102, 106, 109, 111, 112, 113, 116, 120, 127, 134, 135, 136, 140, 141, 143, 144, 145, 150, 151, 161, 165, 166, 171, 176, 179, 181, 182, 184, 190, 198, 199, 200, 203, 204, 206, 207, 210, 211, 212, 217, 222, 223, 228, 229, 230, 231, 234, 236, 240, 258, 259, 261, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 314, 317, 436, 437, 444, 468, 479, 480, 492, 561, 573, 574, 578, 594, 617, 619, 647, 706, 707, 708, 709, 710, 783, 784, 797, 799, 845, 848, 868, 886], "furthermor": [4, 154, 174, 177, 188, 203, 861, 868, 871], "mark": [4, 8, 11, 49, 74, 78, 82, 91, 92, 110, 119, 125, 126, 134, 136, 141, 143, 149, 150, 165, 168, 169, 170, 171, 177, 188, 189, 190, 200, 201, 204, 205, 207, 208, 209, 210, 215, 217, 218, 231, 244, 257, 259, 264, 265, 266, 267, 314, 371, 380, 388, 403, 404, 468, 470, 478, 479, 480, 560, 561, 566, 569, 575, 576, 580, 582, 592, 593, 601, 608, 617, 619, 647, 706, 708, 709, 710, 750, 774, 784, 786, 793, 798, 800, 807, 808, 814, 841, 845, 862, 863, 886], "exg": 4, "prefix": [4, 74, 154, 169, 174, 256, 261, 264, 265, 266, 267, 273, 355, 356, 411, 418, 471, 479, 480, 487, 494, 495, 560, 561, 576, 617, 706, 708, 710, 771, 793, 797, 806, 809, 814, 841], "interpolate_bad": [4, 70, 78, 199, 264, 265, 266, 267, 468, 479, 480, 868, 886], "reset_bad": [4, 78, 199, 264, 265, 266, 267, 479, 480, 868], "drop_channel": [4, 42, 67, 70, 135, 139, 148, 215, 231, 264, 265, 266, 267, 479, 480, 706, 708, 709, 710, 872, 886], "exg1": 4, "exg2": 4, "exg3": 4, "exg4": 4, "radiu": [4, 5, 24, 26, 41, 45, 50, 70, 71, 78, 79, 92, 93, 108, 150, 155, 157, 158, 169, 175, 180, 181, 182, 183, 184, 199, 206, 207, 209, 222, 261, 264, 265, 266, 267, 273, 302, 305, 312, 326, 328, 330, 411, 418, 431, 469, 479, 480, 513, 524, 543, 560, 561, 570, 576, 655, 658, 701, 706, 708, 710, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 868, 886], "95": [4, 5, 7, 19, 34, 47, 50, 70, 75, 79, 80, 84, 89, 108, 111, 112, 113, 120, 135, 141, 142, 144, 145, 150, 155, 157, 159, 168, 178, 183, 184, 186, 189, 194, 195, 200, 208, 209, 210, 226, 227, 230, 231, 244, 264, 265, 266, 267, 561, 576, 666, 685, 706, 778, 794, 799, 815, 868], "113": [4, 35, 111, 167, 168, 173, 208, 215, 220, 226, 231, 244], "524face": 4, "To": [4, 5, 11, 18, 19, 22, 33, 44, 45, 87, 89, 93, 94, 112, 115, 126, 132, 136, 139, 141, 143, 145, 148, 149, 150, 155, 157, 158, 159, 160, 165, 167, 168, 169, 170, 171, 174, 177, 179, 183, 187, 189, 190, 191, 194, 195, 199, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 215, 217, 218, 221, 223, 226, 228, 230, 231, 235, 236, 240, 256, 258, 259, 264, 265, 266, 267, 270, 274, 279, 280, 297, 298, 354, 358, 359, 417, 424, 435, 441, 442, 443, 444, 446, 452, 479, 480, 487, 492, 509, 513, 517, 523, 561, 575, 578, 582, 584, 589, 591, 593, 608, 610, 625, 651, 655, 658, 659, 660, 666, 669, 670, 672, 693, 694, 695, 696, 697, 699, 712, 715, 722, 731, 732, 733, 734, 735, 736, 737, 738, 752, 754, 771, 784, 797, 799, 801, 807, 818, 819, 833, 843, 844, 845, 848, 849, 850, 851, 853, 860, 861, 862, 863, 865, 867, 868, 872, 886], "predict": [4, 10, 12, 13, 15, 16, 17, 20, 27, 42, 100, 136, 140, 175, 194, 195, 244, 269, 297, 312, 328, 373, 414, 415, 417, 421, 423, 428, 451, 480, 529, 536, 816, 862, 886], "brain": [4, 5, 7, 8, 10, 11, 15, 19, 21, 22, 24, 26, 27, 28, 29, 31, 32, 33, 35, 38, 40, 41, 42, 43, 44, 46, 54, 58, 59, 60, 70, 81, 87, 93, 103, 108, 114, 121, 125, 129, 134, 145, 150, 154, 155, 157, 161, 169, 174, 175, 176, 177, 178, 180, 181, 183, 187, 188, 189, 190, 195, 198, 203, 204, 206, 207, 223, 226, 234, 235, 236, 241, 244, 255, 256, 262, 264, 265, 266, 267, 269, 271, 272, 275, 276, 277, 278, 279, 280, 290, 297, 298, 303, 331, 360, 372, 380, 411, 417, 419, 445, 450, 463, 477, 479, 480, 489, 500, 515, 519, 524, 527, 528, 542, 548, 558, 559, 562, 566, 577, 589, 590, 592, 615, 623, 633, 638, 643, 655, 671, 695, 706, 708, 709, 710, 763, 765, 768, 770, 772, 773, 776, 782, 812, 813, 817, 818, 822, 824, 841, 843, 845, 846, 851, 852, 861, 862, 865, 868, 873, 874, 876, 886], "purpos": [4, 8, 11, 12, 21, 112, 139, 140, 148, 155, 167, 179, 188, 198, 199, 200, 201, 204, 205, 207, 230, 234, 236, 241, 244, 264, 265, 377, 378, 379, 380, 382, 383, 384, 386, 391, 394, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 422, 424, 479, 480, 770, 784, 807, 841, 852, 861, 862, 867, 870, 871, 872], "intercept": [4, 100, 691], "predictor_var": 4, "where": [4, 10, 13, 31, 45, 68, 70, 74, 80, 81, 82, 89, 93, 94, 100, 111, 136, 139, 140, 141, 143, 148, 150, 154, 159, 164, 165, 166, 167, 168, 169, 171, 174, 181, 182, 183, 187, 189, 190, 191, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 215, 217, 221, 222, 223, 226, 228, 230, 231, 234, 235, 236, 241, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 274, 275, 277, 278, 279, 280, 319, 321, 322, 323, 335, 353, 372, 377, 378, 379, 380, 382, 383, 384, 386, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 418, 424, 426, 445, 447, 450, 452, 471, 479, 480, 513, 536, 560, 561, 563, 570, 576, 578, 579, 580, 593, 656, 662, 663, 664, 665, 666, 668, 670, 671, 686, 687, 692, 693, 694, 696, 697, 706, 708, 709, 710, 722, 732, 734, 736, 737, 754, 759, 771, 772, 775, 776, 777, 784, 785, 786, 793, 797, 806, 807, 808, 809, 814, 816, 820, 841, 845, 846, 848, 849, 850, 851, 861, 862, 865, 867, 868, 871, 886], "func": [4, 209, 271, 272, 275, 278, 279, 280, 487, 494, 502, 845, 886], "reg": [4, 8, 9, 12, 21, 34, 49, 179, 223, 297, 298, 411, 418, 419, 562, 868, 886], "design_matrix": [4, 140, 691], "25728": 4, "target": [4, 17, 20, 27, 49, 77, 84, 100, 127, 140, 160, 195, 202, 204, 226, 227, 241, 264, 266, 267, 269, 410, 411, 412, 413, 414, 415, 416, 418, 419, 421, 422, 423, 424, 428, 437, 479, 492, 521, 558, 561, 562, 620, 845, 886], "regressor": [4, 69, 100, 195, 226, 691], "within": [4, 5, 16, 24, 38, 41, 45, 47, 50, 61, 69, 93, 107, 108, 111, 119, 120, 126, 127, 134, 139, 140, 143, 150, 154, 155, 157, 159, 160, 164, 165, 167, 171, 174, 175, 177, 180, 182, 183, 184, 198, 201, 204, 205, 207, 209, 217, 222, 226, 237, 241, 244, 257, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 282, 307, 314, 373, 386, 411, 416, 418, 435, 437, 440, 445, 463, 469, 479, 480, 534, 535, 544, 560, 561, 576, 693, 694, 696, 697, 701, 706, 708, 710, 713, 716, 724, 735, 738, 751, 771, 785, 786, 793, 794, 797, 806, 809, 813, 814, 816, 841, 843, 845, 850, 851, 856, 865, 867, 868, 874, 886], "object": [4, 9, 10, 18, 19, 27, 30, 31, 32, 33, 34, 36, 47, 54, 55, 56, 60, 63, 78, 93, 98, 100, 102, 103, 108, 111, 112, 113, 126, 131, 140, 143, 145, 150, 154, 156, 159, 160, 161, 164, 165, 166, 169, 170, 171, 174, 180, 181, 187, 188, 189, 190, 191, 195, 198, 199, 200, 202, 204, 205, 206, 207, 209, 210, 212, 216, 219, 220, 223, 227, 234, 240, 241, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 284, 285, 288, 290, 291, 292, 295, 297, 298, 299, 302, 303, 305, 306, 310, 311, 312, 314, 317, 318, 319, 320, 321, 324, 326, 327, 340, 342, 344, 349, 353, 354, 357, 358, 359, 360, 361, 365, 369, 370, 371, 373, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 436, 440, 445, 452, 453, 455, 457, 462, 471, 474, 476, 477, 478, 479, 480, 481, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 513, 516, 521, 522, 523, 524, 527, 528, 529, 530, 531, 532, 535, 537, 538, 539, 543, 550, 557, 558, 560, 561, 562, 563, 564, 572, 575, 576, 577, 578, 586, 588, 589, 590, 592, 598, 599, 606, 611, 615, 616, 618, 622, 623, 624, 627, 633, 640, 641, 655, 656, 670, 671, 674, 683, 691, 692, 698, 702, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 726, 727, 728, 733, 734, 735, 736, 737, 738, 739, 741, 743, 753, 754, 755, 760, 763, 765, 767, 768, 770, 771, 774, 775, 778, 779, 780, 781, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 806, 807, 808, 809, 810, 811, 814, 816, 821, 822, 832, 835, 841, 845, 861, 863, 868, 870, 872, 876, 884, 886], "multipl": [4, 16, 40, 44, 45, 51, 92, 95, 96, 100, 102, 111, 119, 139, 143, 148, 149, 158, 159, 165, 171, 174, 189, 194, 199, 201, 202, 204, 205, 207, 215, 216, 217, 227, 231, 234, 235, 236, 241, 244, 258, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 277, 278, 279, 280, 300, 317, 354, 360, 386, 413, 422, 424, 434, 436, 438, 447, 448, 449, 452, 455, 461, 476, 477, 479, 480, 492, 498, 503, 522, 537, 538, 543, 548, 561, 579, 584, 593, 597, 615, 623, 647, 650, 655, 684, 690, 694, 695, 706, 707, 709, 718, 721, 728, 729, 734, 737, 754, 768, 778, 785, 788, 791, 794, 797, 799, 801, 807, 812, 813, 815, 817, 841, 845, 862, 868, 874, 876, 883, 886], "list": [4, 9, 10, 11, 16, 28, 41, 43, 47, 67, 69, 83, 93, 102, 103, 110, 111, 112, 114, 115, 116, 126, 131, 136, 139, 143, 144, 148, 149, 150, 160, 165, 167, 168, 169, 170, 171, 174, 176, 182, 184, 187, 190, 199, 200, 201, 204, 205, 206, 209, 210, 215, 217, 218, 221, 222, 223, 226, 227, 230, 231, 235, 236, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 286, 287, 289, 290, 291, 292, 295, 297, 298, 300, 303, 305, 306, 310, 312, 313, 314, 317, 318, 319, 321, 322, 323, 324, 326, 327, 329, 337, 338, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 365, 367, 369, 370, 371, 373, 380, 386, 392, 394, 403, 404, 411, 413, 417, 418, 421, 423, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 442, 443, 445, 446, 449, 450, 452, 453, 457, 459, 461, 463, 464, 465, 466, 467, 468, 469, 474, 475, 476, 477, 478, 479, 480, 483, 487, 489, 491, 494, 495, 496, 498, 502, 503, 504, 506, 511, 515, 517, 518, 519, 522, 525, 526, 530, 532, 535, 537, 538, 547, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 569, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 584, 585, 589, 592, 593, 594, 599, 601, 604, 608, 610, 613, 615, 617, 619, 620, 623, 624, 625, 628, 631, 638, 640, 646, 647, 650, 655, 656, 669, 672, 673, 674, 675, 683, 686, 687, 689, 691, 692, 693, 694, 696, 697, 698, 701, 702, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 722, 723, 728, 731, 732, 737, 739, 740, 751, 753, 754, 755, 758, 759, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 803, 804, 805, 806, 808, 809, 810, 812, 813, 814, 816, 817, 818, 829, 832, 836, 837, 841, 845, 848, 852, 853, 856, 860, 861, 865, 867, 868, 869, 871, 874, 886], "field": [4, 5, 7, 17, 20, 22, 26, 27, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 69, 78, 79, 80, 89, 93, 108, 112, 116, 118, 120, 123, 127, 130, 141, 143, 148, 155, 157, 158, 161, 164, 165, 168, 175, 176, 177, 178, 181, 182, 187, 188, 190, 195, 196, 197, 198, 199, 203, 204, 205, 206, 207, 208, 209, 215, 217, 218, 221, 223, 231, 244, 250, 257, 261, 264, 265, 266, 267, 269, 297, 298, 312, 319, 328, 373, 417, 423, 443, 451, 454, 479, 480, 481, 491, 499, 519, 528, 529, 575, 576, 593, 601, 618, 622, 625, 650, 692, 735, 738, 754, 771, 778, 785, 788, 789, 791, 793, 794, 796, 815, 816, 824, 841, 846, 861, 862, 865, 874, 886], "getattr": [4, 722, 732], "_field": [4, 140], "beta": [4, 12, 19, 32, 33, 34, 93, 100, 109, 111, 112, 114, 136, 140, 226, 240, 264, 265, 266, 267, 479, 480, 608, 691, 708, 710, 786], "stderr": [4, 140, 691], "t_val": [4, 140, 227, 691], "p_val": [4, 100, 140, 228, 229, 687, 691, 886], "mlog10_p_val": [4, 140, 691, 886], "just": [4, 5, 28, 32, 33, 41, 42, 44, 48, 50, 59, 70, 74, 81, 82, 100, 102, 108, 112, 113, 114, 119, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 150, 155, 157, 159, 160, 161, 164, 165, 167, 168, 169, 170, 171, 176, 178, 179, 180, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 217, 218, 223, 227, 228, 231, 234, 235, 236, 240, 241, 261, 264, 265, 266, 267, 271, 272, 273, 275, 277, 278, 279, 280, 312, 411, 418, 445, 446, 479, 480, 495, 536, 560, 561, 571, 576, 592, 617, 706, 708, 710, 750, 771, 778, 784, 786, 788, 790, 793, 794, 797, 801, 804, 806, 807, 808, 809, 810, 814, 816, 824, 843, 845, 853, 863, 868, 871, 886], "would": [4, 5, 19, 43, 44, 70, 139, 142, 143, 149, 150, 154, 155, 159, 160, 171, 174, 180, 189, 190, 195, 198, 200, 201, 202, 203, 204, 205, 206, 209, 221, 226, 227, 228, 231, 234, 236, 241, 264, 265, 266, 267, 271, 272, 275, 277, 278, 279, 280, 290, 297, 298, 354, 358, 359, 369, 370, 371, 380, 386, 403, 404, 411, 418, 432, 433, 434, 446, 454, 455, 461, 474, 476, 477, 479, 480, 494, 517, 526, 539, 561, 572, 593, 642, 706, 709, 754, 788, 793, 794, 807, 841, 851, 867, 868, 874, 886], "higher": [4, 26, 38, 44, 54, 69, 74, 93, 140, 150, 183, 191, 195, 198, 200, 202, 204, 209, 222, 228, 231, 241, 274, 593, 722, 732, 843, 845, 849, 850, 868, 886], "better": [4, 9, 19, 43, 60, 70, 93, 141, 145, 150, 182, 183, 194, 201, 203, 204, 209, 226, 244, 266, 267, 271, 272, 275, 278, 279, 280, 410, 576, 589, 593, 720, 722, 732, 736, 754, 812, 817, 843, 845, 868, 886], "visibl": [4, 47, 126, 171, 190, 201, 202, 208, 217, 218, 241, 264, 265, 266, 267, 479, 480, 561, 646, 706, 754, 784, 790, 801, 807, 841, 886], "neg": [4, 19, 22, 39, 71, 111, 113, 143, 149, 150, 161, 187, 190, 202, 204, 211, 226, 234, 241, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 274, 275, 278, 279, 280, 286, 306, 411, 417, 418, 423, 430, 439, 453, 479, 480, 504, 560, 561, 584, 591, 664, 665, 690, 706, 708, 709, 710, 773, 778, 784, 786, 793, 797, 806, 807, 809, 812, 814, 818, 862, 865, 868, 871, 886], "around": [4, 49, 70, 75, 82, 93, 111, 140, 141, 143, 145, 150, 164, 165, 170, 171, 179, 182, 190, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 215, 221, 241, 264, 265, 266, 267, 274, 358, 411, 418, 430, 435, 437, 479, 480, 513, 561, 573, 574, 578, 579, 610, 668, 706, 708, 709, 710, 778, 784, 790, 793, 794, 801, 807, 841, 843, 851], "200": [4, 9, 12, 47, 59, 75, 80, 89, 91, 94, 98, 108, 110, 113, 126, 130, 134, 135, 141, 144, 145, 150, 157, 168, 171, 178, 180, 182, 190, 195, 200, 202, 205, 206, 221, 229, 230, 231, 236, 240, 244, 341, 343, 347, 450, 479, 480, 534, 535, 561, 591, 852, 861, 868, 871, 874, 886], "follow": [4, 24, 27, 32, 33, 34, 41, 42, 67, 69, 70, 79, 93, 102, 106, 108, 112, 115, 127, 134, 136, 140, 143, 150, 154, 157, 159, 160, 161, 167, 169, 171, 177, 179, 187, 188, 189, 191, 195, 200, 201, 202, 203, 207, 209, 211, 212, 215, 216, 217, 221, 223, 226, 228, 230, 234, 236, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 287, 288, 297, 298, 302, 303, 354, 365, 370, 386, 403, 411, 435, 437, 438, 449, 450, 451, 455, 478, 479, 480, 481, 485, 487, 494, 523, 527, 544, 545, 561, 578, 582, 593, 594, 623, 633, 651, 687, 689, 691, 706, 708, 709, 710, 722, 732, 733, 736, 737, 741, 744, 750, 754, 767, 778, 786, 791, 814, 841, 843, 844, 847, 849, 850, 851, 861, 862, 864, 865, 868, 871, 872, 886], "onset": [4, 8, 33, 34, 116, 134, 135, 136, 139, 143, 145, 165, 167, 190, 200, 201, 203, 212, 217, 241, 257, 258, 264, 265, 354, 440, 452, 479, 480, 498, 564, 611, 711, 712, 713, 841, 886], "23": [4, 5, 6, 8, 11, 19, 28, 34, 35, 38, 45, 47, 64, 65, 74, 80, 81, 102, 107, 108, 111, 113, 122, 125, 129, 136, 144, 150, 151, 153, 157, 161, 163, 168, 170, 182, 183, 184, 189, 190, 194, 195, 204, 208, 226, 227, 228, 230, 231, 234, 235, 236, 239, 244, 258, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 277, 278, 279, 280, 297, 346, 358, 369, 370, 380, 388, 389, 403, 404, 435, 470, 479, 480, 487, 520, 561, 572, 613, 623, 706, 708, 709, 710, 754, 783, 788, 798, 832, 862, 868], "correspond": [4, 16, 31, 48, 50, 61, 72, 76, 87, 91, 93, 102, 111, 119, 136, 142, 143, 150, 154, 155, 157, 159, 167, 169, 171, 174, 179, 180, 181, 187, 190, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 215, 216, 217, 218, 228, 230, 231, 236, 241, 257, 259, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 289, 297, 298, 300, 304, 312, 322, 323, 324, 325, 335, 354, 358, 359, 362, 369, 370, 371, 380, 386, 403, 404, 411, 412, 414, 415, 417, 418, 421, 423, 427, 435, 440, 454, 455, 456, 464, 474, 476, 477, 479, 480, 487, 489, 491, 494, 499, 502, 504, 509, 513, 517, 519, 522, 524, 526, 537, 538, 539, 560, 561, 562, 576, 578, 582, 583, 588, 618, 619, 622, 633, 646, 650, 655, 658, 671, 686, 687, 690, 691, 692, 693, 694, 696, 697, 698, 706, 707, 708, 709, 710, 718, 719, 725, 744, 745, 747, 754, 757, 765, 767, 771, 772, 773, 778, 784, 785, 786, 788, 790, 792, 793, 794, 797, 806, 807, 809, 812, 814, 816, 817, 818, 841, 845, 851, 862, 865, 868, 871, 886], "unit": [4, 8, 14, 19, 21, 32, 82, 99, 102, 126, 134, 135, 140, 155, 159, 167, 168, 179, 188, 189, 191, 199, 204, 206, 209, 212, 215, 223, 228, 229, 231, 239, 240, 244, 259, 261, 262, 263, 264, 265, 266, 267, 269, 273, 275, 297, 298, 305, 313, 330, 335, 337, 339, 359, 365, 373, 411, 413, 418, 420, 422, 432, 447, 449, 450, 455, 478, 479, 480, 487, 489, 494, 495, 504, 561, 572, 578, 581, 582, 593, 617, 656, 698, 706, 708, 710, 745, 747, 754, 778, 785, 786, 788, 790, 793, 794, 806, 808, 814, 815, 822, 841, 845, 871, 886], "scale": [4, 5, 10, 16, 19, 22, 27, 28, 29, 30, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 57, 58, 59, 60, 65, 70, 74, 77, 84, 89, 93, 99, 100, 102, 103, 106, 107, 108, 109, 113, 114, 115, 118, 126, 132, 135, 136, 140, 141, 148, 150, 155, 156, 159, 165, 170, 176, 177, 178, 179, 180, 181, 182, 189, 190, 191, 194, 195, 201, 203, 204, 206, 207, 212, 218, 222, 223, 234, 236, 240, 241, 244, 256, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 297, 298, 328, 338, 353, 354, 358, 359, 365, 369, 370, 371, 411, 418, 420, 432, 434, 445, 454, 455, 470, 473, 474, 476, 477, 479, 480, 489, 534, 535, 539, 541, 544, 545, 552, 560, 561, 571, 572, 582, 593, 623, 642, 643, 644, 645, 658, 659, 670, 673, 706, 708, 709, 710, 718, 744, 754, 767, 769, 771, 778, 782, 784, 785, 786, 788, 790, 792, 793, 794, 795, 797, 802, 806, 807, 808, 809, 813, 814, 815, 817, 841, 859, 886], "keep": [4, 11, 12, 27, 31, 60, 87, 103, 109, 110, 111, 136, 141, 144, 148, 150, 159, 160, 161, 164, 165, 168, 180, 199, 200, 201, 202, 203, 204, 215, 216, 217, 221, 228, 256, 261, 264, 265, 266, 267, 291, 292, 295, 298, 371, 417, 435, 479, 480, 490, 530, 532, 535, 561, 594, 707, 718, 845, 853, 863, 867, 886], "avoid": [4, 8, 9, 28, 40, 59, 70, 87, 113, 136, 139, 150, 160, 165, 166, 168, 171, 182, 188, 190, 198, 201, 202, 206, 215, 217, 226, 239, 244, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 275, 278, 279, 280, 354, 428, 440, 479, 480, 487, 494, 502, 541, 561, 627, 633, 666, 669, 672, 688, 699, 700, 706, 709, 754, 812, 817, 843, 849, 863, 865, 867, 868, 886], "convers": [4, 155, 167, 188, 190, 191, 199, 201, 202, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 479, 480, 504, 602, 693, 694, 696, 697, 706, 709, 868, 871, 886], "micro": [4, 27, 77, 264, 265, 266, 267, 479, 480, 886], "volt": [4, 140, 204, 206, 221, 264, 265, 266, 267, 444, 479, 480, 868, 886], "topomap_arg": [4, 70, 100, 195, 210, 227, 266, 267, 561, 706, 774, 791, 799, 886], "set_ylabel": [4, 12, 13, 21, 22, 45, 70, 95, 103, 111, 112, 114, 132, 143, 171, 182, 195, 201, 205, 229, 230, 231, 241], "systemat": [4, 140, 161, 201, 244, 414, 580, 865, 886], "larg": [4, 10, 28, 70, 75, 79, 82, 83, 113, 119, 135, 141, 149, 150, 166, 170, 171, 177, 195, 198, 199, 201, 202, 203, 205, 206, 207, 210, 211, 218, 226, 231, 234, 241, 244, 264, 265, 270, 297, 354, 358, 359, 363, 420, 450, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 520, 541, 561, 563, 653, 693, 694, 696, 697, 754, 772, 819, 849, 863, 886], "consist": [4, 10, 43, 70, 76, 111, 122, 156, 157, 160, 167, 169, 174, 182, 188, 189, 190, 195, 199, 200, 201, 203, 204, 208, 226, 228, 229, 244, 256, 264, 265, 266, 267, 277, 281, 321, 368, 479, 480, 525, 561, 569, 576, 580, 658, 659, 691, 706, 708, 709, 710, 711, 712, 713, 841, 861, 862, 867, 868, 874, 886], "guillaum": [4, 15, 87, 150, 156, 195, 201, 226, 244, 562, 699, 700, 862, 873, 886], "rousselet": [4, 150, 201, 244, 862], "2016": [4, 19, 46, 82, 112, 125, 194, 201, 244, 388, 389, 417, 476, 477, 561, 862], "7488": [4, 244], "1556": [4, 244], "carl": [4, 125, 244, 388, 862], "gaspar": [4, 244, 862], "cyril": [4, 244, 862], "r": [4, 8, 10, 12, 19, 21, 28, 37, 39, 41, 43, 49, 70, 80, 81, 95, 96, 98, 114, 126, 135, 136, 140, 144, 155, 159, 165, 175, 179, 180, 182, 183, 184, 194, 195, 199, 201, 203, 204, 206, 210, 211, 216, 222, 226, 230, 231, 236, 241, 244, 256, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 276, 278, 279, 280, 300, 360, 380, 411, 417, 418, 446, 479, 480, 512, 528, 536, 560, 561, 570, 573, 575, 576, 578, 583, 666, 690, 693, 694, 699, 700, 706, 708, 709, 710, 735, 738, 754, 771, 772, 778, 782, 786, 793, 797, 802, 806, 809, 814, 816, 841, 843, 845, 862, 868, 871, 886], "pernet": [4, 244, 862], "jess": [4, 244, 862], "husk": [4, 244, 862], "patrick": [4, 244, 862, 868], "j": [4, 8, 12, 13, 18, 19, 21, 31, 35, 42, 44, 59, 65, 70, 71, 74, 75, 82, 93, 98, 100, 112, 120, 125, 136, 143, 150, 154, 159, 161, 171, 177, 179, 194, 195, 201, 203, 204, 205, 206, 211, 226, 227, 231, 239, 244, 256, 264, 265, 266, 267, 270, 274, 275, 276, 297, 300, 354, 360, 380, 389, 394, 404, 411, 415, 417, 418, 419, 429, 474, 477, 479, 480, 528, 529, 536, 539, 543, 560, 561, 569, 570, 575, 576, 591, 597, 600, 663, 666, 668, 692, 693, 694, 696, 697, 699, 700, 708, 710, 718, 720, 722, 724, 732, 735, 736, 738, 860, 862, 865, 868, 886], "bennett": [4, 244, 862], "allison": [4, 244, 862], "sekul": [4, 244, 862], "healthi": [4, 244, 403, 404, 862, 874], "ag": [4, 112, 136, 188, 244, 264, 265, 266, 267, 389, 404, 479, 480, 481, 671, 862, 876, 886], "scalp": [4, 19, 27, 70, 71, 75, 78, 121, 129, 141, 143, 148, 150, 154, 155, 157, 165, 169, 170, 182, 183, 184, 189, 198, 199, 204, 206, 207, 209, 210, 211, 218, 221, 239, 244, 256, 264, 265, 266, 267, 269, 308, 430, 470, 479, 480, 524, 561, 570, 597, 638, 650, 708, 710, 754, 770, 786, 808, 822, 841, 846, 849, 852, 861, 862, 865, 868, 871, 886], "sensit": [4, 5, 7, 23, 25, 27, 81, 121, 129, 150, 157, 177, 202, 206, 211, 230, 236, 244, 264, 265, 266, 267, 268, 269, 274, 275, 277, 364, 455, 479, 480, 558, 561, 625, 631, 646, 674, 693, 694, 696, 697, 754, 798, 862, 867, 886], "frontier": [4, 10, 19, 150, 194, 201, 244, 417, 566, 860, 862], "psychologi": [4, 10, 150, 201, 244, 688, 862], "19": [4, 9, 11, 13, 19, 20, 26, 28, 34, 35, 41, 42, 45, 47, 56, 58, 59, 64, 71, 73, 76, 80, 82, 89, 92, 93, 102, 105, 107, 108, 113, 126, 139, 140, 145, 150, 156, 157, 165, 166, 167, 168, 170, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 190, 194, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 217, 218, 223, 226, 227, 228, 230, 231, 235, 236, 244, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 277, 278, 279, 280, 304, 306, 309, 328, 430, 474, 479, 480, 519, 523, 554, 560, 561, 650, 701, 706, 709, 725, 770, 773, 778, 779, 782, 784, 801, 807, 818, 827, 843, 844, 862, 868], "14": [4, 5, 8, 9, 11, 13, 16, 19, 20, 21, 22, 25, 28, 32, 33, 34, 35, 43, 45, 46, 47, 48, 49, 54, 55, 56, 58, 61, 65, 66, 79, 80, 82, 92, 93, 95, 102, 106, 107, 108, 111, 113, 119, 120, 122, 129, 132, 133, 140, 144, 147, 148, 149, 151, 153, 156, 157, 161, 167, 168, 170, 171, 174, 176, 177, 178, 179, 182, 184, 186, 189, 190, 194, 195, 201, 206, 208, 209, 221, 223, 226, 227, 228, 230, 231, 233, 234, 235, 236, 241, 244, 255, 262, 264, 265, 266, 267, 277, 306, 359, 380, 412, 413, 417, 422, 427, 446, 447, 449, 479, 480, 496, 508, 561, 578, 579, 597, 706, 724, 725, 733, 734, 754, 782, 784, 795, 802, 810, 862, 868], "2010": [4, 93, 116, 154, 201, 244, 297, 354, 411, 735, 738, 862, 886], "3389": [4, 10, 19, 150, 194, 201, 244, 417, 566, 860, 862], "fpsyg": [4, 150, 201, 244, 862], "00019": [4, 244, 862], "parametr": [4, 69, 93, 112, 164, 165, 231, 232, 233, 244, 264, 266, 267, 269, 318, 353, 452, 479, 528, 558, 561, 620, 640, 685, 686, 693, 694, 696, 697, 699, 700, 709, 736, 778, 799, 841, 883, 886], "studi": [4, 33, 70, 120, 143, 150, 160, 177, 179, 201, 203, 209, 223, 228, 230, 231, 244, 290, 297, 403, 404, 435, 841, 861, 868, 886], "bmc": [4, 16, 195, 244, 412, 427], "98": [4, 13, 15, 19, 33, 35, 42, 44, 47, 80, 111, 113, 116, 122, 136, 158, 168, 176, 179, 189, 190, 193, 194, 195, 208, 223, 226, 227, 228, 230, 231, 235, 236, 244, 290, 297, 342, 344, 593, 693, 694, 696, 697], "2008": [4, 10, 35, 44, 150, 169, 179, 204, 223, 226, 227, 244, 276, 297, 298, 338, 360, 411, 432, 450, 474, 543, 561, 666, 693, 694, 696, 697], "1186": [4, 16, 194, 195, 208, 244, 412, 427], "1471": [4, 16, 195, 244, 412, 427], "2202": [4, 16, 195, 244, 412, 427], "478": [4, 6, 208, 231], "542": [4, 6, 231], "limo_data": [4, 6], "dataset": [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 189, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 242, 243, 244, 256, 258, 261, 262, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 297, 298, 302, 312, 328, 345, 353, 354, 355, 356, 358, 359, 361, 363, 369, 370, 371, 411, 414, 418, 421, 428, 431, 440, 442, 443, 452, 454, 455, 468, 474, 476, 477, 479, 480, 489, 490, 492, 517, 518, 519, 523, 524, 527, 528, 531, 534, 535, 539, 544, 545, 558, 561, 574, 575, 579, 585, 593, 601, 622, 623, 624, 625, 631, 638, 654, 691, 693, 694, 696, 697, 706, 708, 709, 728, 739, 754, 770, 778, 782, 787, 794, 816, 822, 832, 845, 863, 868, 869, 874, 876, 886], "electr": [5, 165, 179, 198, 206, 207, 244, 297, 298, 561, 569, 774, 841, 846, 861, 871], "stimul": [5, 32, 45, 150, 179, 212, 236, 264, 265, 266, 267, 359, 479, 480, 558, 559, 564, 585, 656, 706, 708, 709, 710, 754, 770, 862, 868, 886], "deliv": 5, "left": [5, 10, 11, 13, 15, 23, 25, 27, 30, 31, 35, 38, 39, 40, 41, 43, 44, 45, 47, 48, 50, 52, 54, 55, 57, 58, 59, 60, 61, 67, 71, 73, 78, 79, 82, 85, 86, 93, 111, 115, 118, 119, 123, 126, 127, 131, 133, 134, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 154, 155, 157, 159, 165, 167, 171, 174, 177, 179, 180, 181, 190, 191, 194, 195, 203, 204, 205, 206, 207, 209, 216, 217, 218, 222, 223, 227, 230, 234, 235, 236, 239, 257, 258, 260, 261, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 277, 278, 279, 280, 312, 314, 324, 325, 335, 336, 360, 380, 386, 411, 418, 433, 435, 438, 445, 469, 477, 479, 480, 498, 503, 513, 526, 560, 561, 581, 640, 645, 654, 655, 658, 669, 706, 708, 709, 710, 754, 770, 778, 784, 785, 786, 788, 790, 792, 793, 794, 797, 805, 806, 807, 808, 809, 814, 818, 822, 841, 862, 868, 871, 886], "wrist": 5, "somatosensori": [5, 32, 34, 46, 112, 240, 244, 393, 886], "nine": [5, 141], "quspin": 5, "serf": 5, "place": [5, 7, 26, 67, 126, 139, 148, 149, 150, 155, 160, 164, 165, 168, 172, 173, 177, 201, 203, 204, 205, 207, 209, 211, 215, 221, 234, 258, 261, 263, 264, 265, 266, 267, 268, 269, 273, 276, 281, 282, 287, 312, 317, 320, 340, 347, 363, 364, 381, 385, 386, 388, 411, 418, 433, 435, 436, 449, 450, 479, 480, 481, 490, 525, 539, 548, 553, 557, 560, 561, 573, 574, 576, 579, 581, 584, 585, 589, 641, 647, 650, 656, 657, 658, 659, 671, 703, 706, 707, 708, 709, 710, 723, 740, 757, 771, 775, 786, 793, 797, 806, 809, 814, 816, 841, 845, 862, 866, 868, 869, 871, 872, 886], "side": [5, 19, 32, 45, 70, 140, 155, 165, 203, 207, 234, 241, 261, 262, 264, 265, 266, 267, 271, 273, 275, 279, 411, 418, 479, 480, 560, 561, 576, 582, 593, 691, 693, 694, 696, 697, 706, 707, 708, 710, 754, 771, 780, 782, 784, 786, 793, 797, 800, 806, 809, 812, 814, 816, 863, 868, 886], "somatomotor": 5, "custom": [5, 27, 36, 56, 67, 108, 119, 121, 125, 129, 139, 141, 144, 148, 149, 150, 166, 191, 201, 202, 203, 204, 206, 207, 212, 221, 231, 241, 256, 261, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 278, 279, 280, 321, 325, 327, 386, 479, 480, 558, 561, 614, 623, 625, 686, 710, 748, 754, 767, 772, 773, 784, 791, 801, 807, 812, 813, 817, 818, 841, 845, 861, 862, 863, 865, 886], "opm_sampl": [5, 108], "subjects_dir": [5, 7, 11, 22, 24, 26, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 68, 80, 89, 93, 94, 103, 108, 114, 115, 117, 123, 124, 125, 126, 130, 133, 134, 135, 149, 154, 155, 156, 157, 158, 159, 160, 165, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 189, 190, 195, 210, 222, 223, 234, 235, 236, 256, 262, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 303, 307, 308, 309, 312, 360, 365, 366, 367, 372, 385, 387, 388, 389, 390, 430, 461, 463, 465, 467, 469, 470, 471, 472, 473, 513, 517, 519, 547, 548, 589, 610, 628, 630, 637, 642, 643, 644, 645, 654, 655, 669, 672, 683, 701, 702, 746, 753, 754, 770, 772, 782, 812, 817, 818, 836, 851, 861, 868, 886], "raw_fnam": [5, 7, 8, 9, 11, 13, 14, 15, 16, 18, 26, 32, 33, 34, 42, 45, 46, 49, 69, 70, 72, 73, 74, 76, 81, 82, 87, 92, 95, 96, 98, 99, 106, 107, 109, 110, 112, 116, 118, 120, 131, 132, 140, 151, 155, 157, 158, 161, 176, 179, 182, 184, 195, 203, 223, 228, 229, 230, 231, 234, 236, 240, 862, 868], "opm_sef_raw": 5, "bem_fnam": [5, 45, 68, 108], "bem": [5, 7, 23, 26, 27, 40, 41, 43, 44, 45, 50, 68, 108, 124, 134, 135, 149, 154, 155, 158, 159, 162, 163, 164, 170, 175, 179, 180, 181, 182, 183, 184, 189, 190, 207, 234, 235, 236, 254, 262, 274, 277, 365, 387, 410, 430, 454, 461, 517, 518, 519, 522, 523, 589, 612, 613, 636, 642, 644, 645, 655, 671, 770, 772, 828, 829, 834, 839, 841, 851, 862, 871, 876, 886], "5120": [5, 7, 26, 41, 45, 50, 68, 108, 149, 157, 158, 175, 180, 181, 256, 410, 517, 523, 671, 861], "sol": [5, 7, 22, 26, 41, 45, 50, 68, 108, 157, 158, 175, 180, 181, 256, 268, 523, 671, 861, 871], "fwd_fname": [5, 22, 31, 35, 40, 46, 51, 59, 68, 89, 91, 92, 93, 94, 179, 190, 223], "fwd": [5, 11, 22, 26, 31, 32, 33, 34, 35, 40, 42, 43, 45, 46, 47, 48, 49, 51, 54, 55, 58, 59, 68, 89, 91, 92, 93, 94, 108, 130, 157, 158, 171, 174, 175, 176, 177, 178, 179, 181, 190, 195, 222, 223, 256, 268, 275, 284, 285, 286, 364, 445, 457, 458, 522, 523, 625, 646, 670, 671, 754, 770, 833, 861, 868], "coil_def_fnam": 5, "coil_def": [5, 108, 862, 868, 871], "dat": [5, 108, 209, 332, 493, 509, 572, 582, 593, 604, 609, 862, 868, 886], "read_raw_fif": [5, 10, 11, 13, 14, 15, 16, 18, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 68, 69, 71, 72, 73, 74, 76, 79, 82, 83, 87, 91, 92, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 112, 114, 116, 117, 120, 122, 126, 128, 131, 132, 139, 140, 141, 144, 145, 148, 150, 151, 155, 161, 165, 166, 167, 168, 169, 176, 179, 181, 182, 187, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 217, 218, 222, 228, 229, 230, 231, 234, 236, 239, 240, 258, 485, 868, 872, 876, 886], "h_trans_bandwidth": [5, 21, 112, 113, 190, 201, 210, 264, 265, 266, 267, 413, 422, 447, 449, 479, 480, 597, 886], "notch_width": [5, 211, 450, 479, 480], "threshold": [5, 30, 34, 38, 74, 81, 95, 111, 119, 144, 150, 164, 165, 170, 171, 181, 183, 187, 190, 199, 200, 204, 206, 209, 228, 229, 230, 231, 232, 233, 234, 235, 236, 244, 256, 259, 264, 265, 266, 267, 269, 308, 318, 324, 353, 358, 450, 479, 480, 498, 504, 543, 561, 563, 566, 573, 576, 578, 579, 582, 583, 584, 586, 588, 598, 616, 653, 662, 663, 664, 665, 666, 667, 668, 689, 690, 693, 694, 696, 697, 698, 709, 754, 778, 783, 784, 800, 861, 868, 874, 886], "larger": [5, 49, 59, 70, 149, 178, 195, 198, 201, 203, 209, 218, 228, 241, 264, 265, 274, 279, 280, 455, 479, 480, 498, 563, 584, 602, 701, 734, 735, 737, 738, 784, 807, 815, 818, 867, 868, 886], "squid": [5, 108, 211, 244, 841, 862, 868], "2e": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 70, 74, 89, 92, 93, 108, 118, 120, 151, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 195, 222, 223, 573, 574], "trigger": [5, 10, 92, 102, 108, 143, 165, 167, 170, 176, 181, 184, 187, 188, 189, 190, 200, 205, 210, 226, 256, 257, 354, 359, 452, 453, 479, 480, 487, 494, 496, 502, 504, 579, 584, 620, 653, 671, 841, 845, 861, 868, 871, 886], "257": [5, 19, 20, 35, 56, 84, 114, 168, 169, 226, 231, 862], "sti101": [5, 167, 257, 452, 453], "mask": [5, 28, 31, 81, 95, 99, 100, 111, 119, 141, 184, 201, 205, 222, 226, 227, 228, 229, 230, 231, 257, 261, 264, 265, 266, 267, 273, 411, 417, 418, 452, 479, 480, 487, 560, 561, 576, 620, 693, 694, 696, 697, 706, 708, 710, 771, 786, 790, 793, 797, 806, 809, 814, 816, 865, 886], "mask_typ": [5, 184, 257, 452, 487, 620, 886], "verbos": [5, 10, 11, 13, 14, 15, 34, 38, 40, 41, 42, 44, 49, 51, 58, 70, 75, 78, 79, 83, 87, 92, 93, 98, 103, 107, 108, 120, 122, 123, 125, 133, 134, 135, 139, 141, 144, 145, 148, 149, 151, 156, 157, 158, 161, 169, 170, 171, 176, 178, 179, 180, 181, 182, 183, 189, 195, 199, 200, 201, 204, 207, 208, 209, 210, 211, 216, 217, 221, 226, 227, 228, 234, 239, 241, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 416, 417, 421, 422, 424, 427, 428, 430, 432, 436, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 461, 462, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 522, 523, 524, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 557, 561, 563, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 584, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 600, 601, 602, 605, 606, 607, 608, 612, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 650, 652, 654, 655, 657, 658, 659, 660, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 693, 694, 695, 696, 697, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 724, 725, 728, 729, 733, 734, 736, 737, 738, 739, 742, 743, 744, 749, 750, 753, 754, 762, 770, 779, 782, 786, 787, 788, 789, 794, 797, 798, 799, 804, 805, 807, 808, 810, 811, 812, 813, 817, 818, 819, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 843, 845, 876, 886], "errorsuppress": [5, 13, 27, 38, 49, 77, 83, 84, 135, 144, 149, 150, 170, 179, 183, 187, 198, 199, 201, 202, 203, 206, 211, 244, 256, 261, 264, 265, 266, 267, 268, 269, 270, 275, 341, 343, 347, 364, 446, 447, 449, 450, 479, 480, 558, 559, 577, 614, 625, 628, 651, 670, 672, 791, 841, 862, 868, 886], "warn": [5, 10, 13, 38, 133, 134, 135, 139, 150, 161, 170, 171, 180, 183, 190, 202, 204, 205, 216, 217, 228, 239, 256, 258, 259, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 284, 285, 316, 339, 342, 348, 349, 354, 358, 360, 361, 363, 365, 369, 370, 403, 430, 438, 445, 458, 461, 479, 480, 500, 561, 572, 582, 593, 594, 613, 623, 642, 644, 647, 651, 652, 706, 708, 709, 710, 750, 752, 754, 787, 798, 832, 834, 851, 853, 876, 886], "about": [5, 13, 19, 27, 34, 43, 44, 70, 74, 93, 100, 113, 139, 140, 142, 143, 145, 148, 150, 154, 159, 161, 165, 167, 168, 171, 174, 177, 183, 187, 188, 189, 190, 191, 194, 195, 199, 201, 202, 204, 205, 209, 210, 212, 215, 216, 217, 222, 223, 226, 228, 256, 257, 259, 261, 263, 264, 265, 266, 267, 269, 273, 274, 275, 277, 282, 284, 285, 297, 298, 299, 305, 306, 310, 311, 318, 319, 320, 324, 326, 327, 340, 342, 344, 349, 358, 367, 369, 370, 371, 373, 411, 413, 418, 419, 420, 430, 435, 452, 455, 462, 471, 478, 479, 480, 481, 484, 511, 516, 523, 524, 529, 539, 557, 558, 561, 572, 575, 589, 598, 599, 620, 640, 641, 670, 671, 674, 692, 706, 707, 708, 709, 710, 733, 734, 736, 737, 743, 754, 767, 770, 774, 779, 780, 789, 796, 806, 810, 841, 845, 849, 861, 862, 864, 865, 867, 869, 871, 874, 886], "decim": [5, 7, 11, 12, 13, 18, 19, 24, 33, 34, 41, 42, 102, 108, 111, 157, 160, 161, 165, 171, 180, 182, 195, 202, 204, 209, 227, 228, 229, 230, 231, 240, 256, 259, 262, 263, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 308, 410, 424, 432, 452, 479, 480, 504, 520, 544, 545, 561, 578, 579, 616, 619, 675, 692, 706, 709, 712, 715, 731, 733, 734, 735, 736, 737, 738, 754, 772, 784, 807, 861, 868, 871, 886], "caus": [5, 13, 44, 70, 141, 150, 160, 198, 199, 200, 201, 202, 205, 209, 211, 217, 261, 264, 265, 266, 267, 274, 470, 479, 480, 508, 561, 751, 788, 793, 846, 861, 886], "alias": [5, 13, 161, 180, 202, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 424, 479, 480, 578, 579, 706, 709, 731, 733, 734, 736, 737, 784, 807, 820, 865, 886], "ideal": [5, 70, 107, 132, 134, 143, 150, 169, 201, 203, 206, 207, 227, 241, 312, 795, 802, 841, 845, 865, 868], "instead": [5, 43, 67, 74, 103, 113, 119, 135, 141, 142, 145, 148, 149, 150, 155, 157, 159, 160, 165, 167, 168, 169, 170, 171, 195, 199, 200, 201, 202, 204, 205, 209, 211, 215, 216, 218, 223, 226, 234, 235, 236, 239, 240, 256, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 276, 278, 279, 280, 289, 290, 291, 292, 295, 297, 307, 309, 312, 324, 338, 353, 354, 359, 440, 441, 442, 443, 444, 445, 452, 459, 462, 467, 471, 478, 479, 480, 530, 532, 535, 561, 562, 563, 600, 639, 650, 655, 670, 706, 709, 722, 732, 733, 734, 735, 736, 737, 738, 754, 756, 778, 784, 788, 794, 801, 807, 816, 824, 843, 844, 845, 849, 850, 853, 861, 862, 863, 868, 886], "proj": [5, 8, 9, 11, 13, 14, 15, 18, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 71, 78, 85, 86, 87, 91, 108, 110, 115, 116, 118, 119, 120, 123, 126, 130, 139, 141, 144, 148, 149, 150, 161, 165, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 190, 195, 198, 202, 205, 206, 207, 210, 211, 215, 218, 221, 256, 259, 261, 264, 265, 266, 267, 269, 273, 274, 297, 298, 341, 342, 354, 355, 356, 357, 358, 371, 478, 479, 480, 520, 560, 561, 573, 574, 575, 578, 608, 616, 623, 631, 646, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 779, 786, 788, 790, 792, 793, 805, 806, 807, 808, 837, 841, 861, 886], "cov": [5, 11, 21, 31, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 64, 68, 83, 89, 91, 92, 93, 94, 120, 151, 171, 175, 177, 178, 180, 181, 182, 183, 184, 190, 194, 195, 222, 223, 256, 261, 274, 275, 354, 359, 454, 516, 529, 551, 561, 614, 632, 660, 670, 752, 779, 830, 845, 861, 862, 865, 876, 886], "compute_covari": [5, 7, 34, 42, 46, 49, 83, 92, 120, 151, 161, 176, 179, 181, 182, 184, 195, 222, 261, 359, 371, 411, 418, 419, 562, 614, 752, 861, 865, 876, 886], "del": [5, 18, 33, 41, 42, 46, 47, 48, 49, 50, 54, 55, 108, 112, 135, 139, 141, 144, 148, 165, 171, 176, 178, 179, 180, 182, 183, 190, 195, 201, 204], "open": [5, 11, 13, 14, 15, 16, 18, 28, 29, 32, 33, 34, 42, 45, 46, 49, 61, 68, 69, 70, 71, 72, 73, 74, 76, 79, 82, 83, 87, 91, 92, 95, 96, 98, 99, 102, 103, 106, 108, 109, 110, 112, 114, 116, 117, 120, 122, 126, 128, 131, 132, 134, 140, 141, 143, 145, 149, 150, 151, 154, 155, 160, 161, 164, 165, 166, 167, 168, 171, 176, 179, 181, 182, 195, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 215, 218, 222, 223, 228, 229, 230, 231, 234, 236, 240, 241, 244, 263, 264, 265, 266, 267, 274, 277, 380, 479, 480, 561, 569, 671, 792, 797, 807, 815, 841, 842, 844, 849, 851, 852, 862, 864, 865, 867, 871, 886], "isotrak": [5, 42, 100, 108, 122, 128, 142, 161, 171, 206, 208, 227, 256, 337, 868], "700999": 5, "700": [5, 80, 101, 114, 127, 195, 208, 231, 722, 732, 754], "999": [5, 34, 76, 79, 83, 91, 95, 108, 110, 122, 128, 130, 141, 143, 158, 167, 171, 182, 204, 205, 207, 208, 209, 231, 573, 578, 583, 586], "lowpass": [5, 11, 71, 73, 76, 80, 81, 82, 83, 89, 92, 126, 140, 145, 150, 165, 166, 167, 168, 190, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 256, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 446, 479, 480, 706, 708, 709, 710, 784, 807, 808, 871, 886], "331": [5, 34, 83, 111, 113, 168, 201, 209, 223, 225, 226, 231], "48": [5, 11, 12, 13, 19, 21, 28, 35, 41, 45, 46, 47, 56, 80, 93, 102, 107, 108, 111, 113, 136, 144, 150, 156, 167, 168, 170, 179, 186, 189, 194, 208, 217, 226, 227, 228, 230, 231, 233, 234, 235, 236, 244, 886], "6601": 5, "initi": [5, 16, 19, 21, 41, 43, 44, 70, 92, 95, 108, 111, 143, 148, 150, 155, 167, 179, 184, 190, 204, 211, 215, 221, 226, 227, 228, 229, 230, 231, 234, 235, 236, 241, 255, 256, 262, 264, 265, 270, 271, 272, 274, 275, 276, 278, 279, 280, 373, 375, 474, 479, 480, 486, 507, 513, 561, 591, 600, 602, 610, 658, 659, 660, 669, 670, 672, 685, 693, 694, 695, 696, 697, 709, 744, 754, 782, 784, 798, 801, 807, 812, 817, 818, 845, 850, 852, 867, 868, 871, 886], "256": [5, 12, 21, 70, 108, 114, 123, 155, 159, 168, 169, 170, 171, 182, 195, 223, 230, 231, 277, 443, 725, 769, 843, 868], "initial_ev": [5, 89, 92, 108, 184, 223, 452, 886], "detect": [5, 8, 9, 12, 22, 27, 68, 70, 72, 74, 77, 81, 82, 92, 108, 111, 126, 136, 145, 150, 156, 158, 161, 164, 167, 171, 184, 189, 190, 191, 195, 199, 201, 202, 203, 204, 205, 206, 209, 212, 213, 214, 216, 241, 244, 256, 257, 264, 265, 266, 267, 269, 274, 318, 341, 343, 347, 450, 479, 480, 485, 508, 558, 561, 563, 565, 566, 567, 569, 573, 574, 577, 578, 579, 582, 583, 584, 586, 593, 692, 706, 735, 738, 754, 784, 800, 801, 807, 852, 865, 868, 875, 886], "201": [5, 11, 20, 45, 126, 135, 168, 175, 180, 182, 194, 208, 226, 231, 236, 871], "rank": [5, 7, 8, 9, 12, 15, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 83, 87, 89, 92, 93, 103, 106, 107, 108, 109, 112, 120, 151, 161, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 195, 199, 203, 204, 205, 222, 223, 234, 236, 261, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 419, 454, 455, 474, 476, 477, 533, 539, 561, 779, 794, 841, 865, 886], "toler": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 89, 92, 93, 108, 120, 151, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 195, 201, 204, 205, 222, 223, 358, 474, 476, 477, 561, 602, 868, 886], "1e": [5, 8, 9, 32, 33, 34, 40, 45, 46, 49, 59, 65, 70, 71, 74, 81, 92, 93, 113, 119, 120, 136, 157, 161, 178, 179, 182, 184, 195, 200, 201, 222, 223, 226, 264, 265, 274, 474, 479, 480, 528, 560, 570, 591, 672, 699, 706, 784, 807, 809, 814, 841, 886], "16": [5, 8, 9, 11, 12, 13, 19, 20, 21, 22, 28, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 71, 79, 80, 83, 84, 89, 92, 93, 95, 99, 102, 107, 108, 113, 120, 122, 143, 151, 155, 159, 161, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 194, 195, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 214, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 238, 241, 244, 257, 259, 263, 264, 265, 266, 267, 274, 277, 354, 411, 418, 452, 470, 479, 480, 487, 528, 530, 531, 534, 535, 541, 544, 561, 569, 578, 601, 686, 706, 708, 709, 710, 770, 784, 788, 790, 792, 793, 794, 796, 807, 868, 871], "ep": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 89, 92, 93, 108, 120, 151, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 195, 222, 223, 528], "dim": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 89, 92, 93, 108, 120, 151, 159, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 195, 221, 222, 223, 239, 261, 534, 535, 544, 545, 562, 709, 871], "singular": [5, 8, 9, 21, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 89, 92, 93, 108, 120, 151, 161, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 195, 205, 222, 223, 261, 271, 272, 275, 278, 279, 280, 358, 445, 536, 779, 868, 871], "reduc": [5, 8, 9, 12, 15, 16, 21, 27, 34, 40, 42, 46, 49, 55, 59, 71, 77, 83, 84, 87, 103, 106, 107, 108, 109, 113, 119, 120, 145, 148, 150, 156, 157, 161, 166, 171, 176, 179, 181, 182, 184, 190, 194, 195, 202, 203, 204, 205, 206, 207, 209, 211, 215, 222, 228, 229, 231, 234, 235, 236, 240, 244, 261, 264, 265, 266, 267, 268, 271, 272, 275, 278, 279, 280, 297, 298, 354, 358, 359, 369, 370, 371, 388, 411, 412, 418, 424, 427, 428, 434, 446, 452, 454, 455, 474, 476, 477, 479, 480, 531, 534, 535, 539, 544, 545, 560, 561, 591, 601, 648, 693, 694, 696, 697, 712, 715, 731, 733, 734, 735, 736, 737, 738, 788, 793, 794, 841, 845, 865, 868, 871, 886], "covari": [5, 8, 9, 11, 12, 15, 19, 21, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 66, 68, 80, 87, 89, 91, 92, 93, 102, 103, 106, 107, 108, 109, 112, 121, 123, 129, 148, 151, 162, 163, 164, 165, 175, 177, 178, 180, 181, 182, 183, 184, 190, 195, 199, 200, 204, 223, 234, 236, 244, 256, 264, 265, 266, 267, 268, 269, 274, 275, 294, 297, 298, 300, 317, 353, 354, 355, 357, 358, 359, 369, 370, 371, 411, 417, 418, 419, 436, 452, 454, 455, 474, 476, 477, 479, 480, 484, 516, 527, 528, 529, 530, 531, 532, 534, 535, 539, 541, 544, 545, 553, 561, 562, 614, 620, 625, 660, 670, 692, 707, 717, 754, 779, 784, 788, 792, 794, 807, 830, 841, 862, 871, 876, 886], "empir": [5, 8, 9, 15, 27, 31, 36, 46, 49, 56, 87, 92, 120, 161, 176, 179, 181, 182, 184, 195, 209, 222, 244, 261, 266, 267, 268, 269, 275, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 419, 454, 455, 474, 475, 476, 477, 539, 562, 614, 623, 625, 781, 782, 794, 813, 886], "10251": 5, "examin": [5, 34, 47, 74, 128, 135, 141, 144, 145, 150, 159, 165, 176, 177, 204, 215, 217, 845, 865], "align": [5, 7, 9, 28, 79, 134, 150, 154, 156, 157, 162, 163, 164, 167, 171, 181, 182, 183, 189, 215, 226, 258, 262, 264, 265, 269, 271, 272, 275, 276, 277, 278, 279, 280, 302, 308, 312, 365, 367, 390, 430, 445, 470, 471, 479, 524, 561, 590, 635, 636, 638, 655, 742, 743, 744, 754, 770, 782, 784, 822, 841, 868, 886], "forward": [5, 7, 12, 22, 26, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 68, 72, 79, 89, 91, 92, 93, 94, 130, 134, 145, 154, 155, 159, 160, 163, 165, 169, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 187, 190, 195, 198, 199, 200, 201, 203, 204, 206, 207, 222, 223, 244, 256, 264, 265, 266, 267, 269, 272, 274, 275, 277, 278, 280, 284, 285, 286, 297, 298, 299, 300, 302, 312, 316, 317, 328, 334, 364, 373, 389, 411, 418, 422, 436, 438, 439, 446, 447, 449, 450, 474, 475, 476, 477, 479, 480, 484, 494, 517, 518, 522, 523, 524, 537, 538, 539, 540, 543, 554, 559, 612, 625, 635, 646, 650, 654, 655, 657, 658, 659, 670, 671, 706, 748, 754, 770, 772, 791, 795, 820, 822, 833, 841, 846, 857, 862, 867, 871, 874, 876, 886], "mri": [5, 24, 26, 30, 35, 40, 41, 43, 44, 45, 50, 59, 92, 93, 108, 114, 123, 124, 134, 135, 149, 156, 157, 160, 162, 163, 164, 165, 169, 170, 175, 177, 180, 182, 183, 184, 185, 186, 187, 188, 189, 207, 215, 223, 244, 261, 262, 264, 266, 267, 268, 269, 274, 275, 276, 277, 279, 280, 302, 303, 304, 307, 308, 309, 312, 316, 325, 328, 330, 334, 354, 360, 365, 366, 367, 372, 373, 387, 389, 390, 430, 445, 452, 454, 462, 463, 464, 470, 471, 472, 473, 479, 480, 494, 510, 512, 519, 522, 523, 527, 528, 539, 589, 612, 635, 637, 642, 643, 644, 645, 649, 654, 655, 674, 701, 740, 741, 743, 744, 746, 754, 765, 770, 772, 782, 818, 822, 834, 841, 846, 849, 852, 861, 865, 871, 874, 876, 886], "ident": [5, 45, 70, 98, 108, 124, 134, 149, 155, 157, 159, 165, 182, 183, 184, 194, 204, 207, 209, 211, 262, 269, 276, 277, 304, 373, 390, 435, 512, 519, 522, 523, 534, 536, 582, 591, 593, 615, 671, 701, 722, 732, 736, 741, 770, 841, 861, 862, 863, 868, 871, 886], "matrix": [5, 9, 10, 11, 15, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 66, 68, 78, 80, 86, 89, 91, 92, 93, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 118, 120, 123, 130, 133, 136, 140, 149, 150, 151, 155, 156, 157, 158, 159, 162, 163, 164, 165, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 194, 195, 199, 204, 205, 206, 222, 223, 227, 228, 229, 230, 231, 235, 236, 244, 256, 261, 262, 264, 266, 267, 269, 274, 276, 277, 294, 297, 298, 299, 304, 312, 315, 316, 318, 329, 354, 359, 360, 369, 370, 371, 417, 432, 452, 455, 479, 480, 484, 519, 523, 528, 534, 535, 536, 537, 538, 539, 540, 543, 544, 545, 553, 558, 561, 562, 568, 569, 591, 594, 614, 618, 620, 655, 660, 671, 676, 677, 678, 679, 680, 681, 682, 686, 691, 692, 693, 694, 696, 697, 701, 707, 714, 715, 716, 723, 741, 770, 774, 775, 779, 780, 797, 798, 801, 830, 841, 862, 886], "co": [5, 22, 68, 156, 201, 209, 221, 244, 341, 437, 841, 862, 868], "registr": [5, 43, 44, 133, 156, 179, 244, 276, 360, 590, 742, 743, 744, 851, 862, 868, 886], "equat": [5, 134, 155, 194, 195, 205, 244, 432, 572, 735, 738, 868, 874], "mi": [5, 862], "defin": [5, 8, 9, 10, 12, 18, 19, 21, 27, 31, 33, 43, 44, 60, 61, 76, 77, 84, 93, 94, 103, 106, 110, 113, 119, 127, 135, 139, 140, 141, 143, 150, 154, 157, 159, 161, 162, 164, 166, 167, 169, 171, 174, 177, 179, 181, 189, 190, 194, 195, 201, 205, 210, 223, 229, 230, 231, 234, 236, 240, 241, 244, 256, 257, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 284, 285, 290, 297, 298, 312, 317, 320, 334, 335, 354, 360, 364, 386, 392, 411, 417, 418, 436, 437, 440, 446, 466, 469, 479, 480, 485, 491, 512, 513, 514, 522, 528, 529, 530, 531, 532, 535, 539, 544, 545, 547, 558, 560, 561, 562, 564, 565, 575, 576, 581, 591, 610, 615, 620, 655, 658, 659, 660, 663, 666, 668, 669, 670, 671, 672, 679, 682, 693, 694, 695, 696, 697, 701, 702, 706, 707, 708, 709, 710, 712, 714, 715, 716, 717, 720, 722, 732, 733, 734, 736, 737, 754, 759, 771, 775, 778, 785, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 817, 841, 845, 851, 861, 862, 867, 868, 871, 886], "base": [5, 7, 9, 11, 16, 21, 22, 27, 28, 32, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 54, 55, 58, 59, 61, 68, 70, 77, 82, 84, 89, 91, 93, 95, 98, 99, 102, 106, 108, 109, 111, 112, 113, 116, 118, 120, 131, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 157, 159, 160, 161, 164, 165, 168, 169, 171, 175, 176, 177, 178, 179, 180, 181, 188, 190, 195, 198, 199, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 215, 216, 217, 218, 222, 223, 224, 226, 227, 228, 229, 230, 231, 234, 236, 239, 240, 241, 244, 253, 258, 259, 261, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 312, 314, 318, 319, 324, 329, 332, 341, 342, 343, 344, 347, 353, 354, 355, 356, 359, 360, 364, 375, 404, 411, 413, 414, 417, 418, 419, 421, 422, 424, 425, 428, 432, 434, 437, 440, 442, 444, 446, 447, 449, 450, 452, 455, 462, 468, 470, 478, 479, 480, 485, 496, 513, 519, 520, 523, 526, 529, 543, 558, 560, 561, 563, 564, 568, 569, 570, 571, 572, 575, 576, 578, 579, 582, 583, 593, 606, 607, 608, 620, 625, 627, 644, 654, 658, 659, 666, 679, 682, 691, 692, 693, 694, 695, 696, 697, 701, 702, 706, 708, 709, 710, 712, 715, 718, 725, 733, 734, 736, 737, 739, 750, 754, 763, 765, 771, 773, 778, 783, 784, 786, 792, 793, 794, 795, 797, 799, 800, 801, 806, 807, 809, 811, 812, 814, 816, 817, 818, 833, 841, 843, 844, 845, 846, 848, 849, 854, 857, 861, 862, 865, 871, 874, 877, 881, 886], "lpa": [5, 135, 155, 159, 306, 312, 325, 336, 345, 365, 367, 430, 486, 841, 862, 886], "nasion": [5, 155, 156, 159, 169, 306, 312, 325, 335, 336, 345, 365, 367, 430, 659, 841, 862, 868, 871, 886], "rpa": [5, 135, 155, 159, 306, 312, 325, 336, 345, 365, 367, 430, 486, 841, 862, 886], "fine": [5, 180, 187, 209, 241, 269, 432, 571, 572, 582, 593, 604, 609, 886], "analys": [5, 11, 27, 31, 41, 69, 97, 101, 115, 134, 142, 145, 149, 150, 157, 159, 191, 195, 199, 205, 206, 215, 227, 241, 244, 266, 267, 479, 480, 616, 690, 691, 778, 790, 852, 862, 868, 874, 886], "read_bem_solut": [5, 45, 108, 158, 518, 828, 876], "tran": [5, 7, 26, 41, 50, 51, 52, 68, 80, 108, 114, 115, 117, 123, 124, 134, 135, 149, 156, 157, 158, 159, 171, 175, 177, 180, 181, 182, 189, 190, 207, 210, 256, 262, 274, 277, 300, 304, 312, 365, 366, 387, 390, 430, 432, 454, 462, 470, 471, 519, 522, 523, 568, 589, 593, 638, 671, 674, 701, 740, 741, 743, 754, 770, 782, 840, 841, 861, 862, 868, 886], "solut": [5, 7, 11, 22, 23, 26, 27, 31, 32, 33, 34, 36, 38, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 68, 70, 71, 89, 91, 92, 93, 94, 104, 105, 106, 107, 108, 109, 123, 130, 155, 156, 158, 161, 164, 165, 169, 170, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 190, 195, 199, 206, 222, 223, 234, 236, 244, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 284, 285, 286, 297, 298, 299, 309, 360, 364, 371, 445, 455, 456, 474, 475, 476, 477, 479, 480, 514, 518, 522, 523, 524, 527, 528, 529, 530, 531, 532, 535, 536, 539, 542, 543, 553, 554, 558, 559, 561, 605, 612, 614, 620, 623, 625, 627, 628, 635, 650, 654, 655, 657, 658, 659, 670, 671, 754, 770, 781, 782, 797, 799, 801, 812, 813, 817, 828, 833, 841, 843, 845, 846, 852, 857, 871, 876, 886], "must": [5, 18, 32, 43, 44, 47, 60, 82, 126, 127, 134, 143, 145, 155, 166, 168, 170, 171, 180, 183, 187, 189, 198, 199, 204, 206, 209, 217, 221, 226, 228, 230, 231, 234, 236, 241, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 286, 291, 297, 298, 312, 314, 315, 318, 321, 325, 329, 341, 343, 347, 354, 358, 359, 360, 365, 369, 370, 371, 386, 392, 395, 410, 411, 417, 418, 419, 423, 426, 427, 428, 430, 435, 440, 443, 445, 452, 454, 455, 471, 474, 476, 477, 478, 479, 480, 487, 494, 498, 500, 502, 504, 512, 515, 520, 521, 522, 537, 538, 539, 560, 561, 563, 572, 574, 576, 577, 578, 582, 589, 593, 616, 619, 647, 650, 655, 656, 667, 671, 672, 674, 676, 677, 680, 688, 691, 692, 693, 694, 696, 697, 701, 706, 708, 709, 710, 721, 725, 729, 736, 754, 757, 759, 770, 771, 773, 777, 778, 782, 784, 785, 786, 788, 790, 792, 793, 794, 795, 797, 801, 802, 804, 806, 807, 808, 809, 810, 812, 815, 816, 817, 818, 849, 861, 862, 865, 867, 868, 871], "temporari": [5, 150, 171, 256, 269, 648, 762], "definit": [5, 26, 41, 45, 50, 108, 157, 158, 159, 160, 161, 175, 180, 181, 182, 183, 184, 201, 207, 228, 244, 256, 269, 274, 297, 298, 320, 322, 329, 454, 479, 575, 593, 639, 748, 754, 841, 861, 867, 869, 886], "use_coil_def": [5, 108, 876], "make_forward_solut": [5, 7, 26, 41, 50, 108, 157, 158, 181, 190, 207, 268, 625, 748, 861, 868, 876, 886], "src": [5, 7, 22, 24, 26, 28, 30, 31, 35, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 54, 55, 59, 60, 68, 89, 91, 92, 93, 94, 108, 134, 135, 155, 157, 158, 159, 177, 179, 180, 181, 190, 207, 222, 234, 235, 236, 256, 268, 270, 271, 272, 275, 277, 278, 279, 280, 282, 298, 360, 445, 465, 475, 514, 515, 523, 537, 538, 541, 543, 548, 635, 645, 654, 655, 656, 663, 666, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 701, 702, 754, 770, 772, 812, 813, 817, 818, 838, 861, 871, 886], "mindist": [5, 24, 41, 45, 50, 155, 157, 158, 175, 180, 182, 183, 184, 207, 523, 655, 671], "read_forward_solut": [5, 22, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 51, 54, 55, 58, 59, 68, 89, 91, 92, 93, 94, 130, 157, 176, 177, 178, 179, 190, 195, 222, 223, 268, 833, 876, 886], "orient": [5, 11, 22, 26, 28, 29, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 68, 79, 89, 91, 92, 93, 94, 103, 106, 107, 108, 109, 115, 123, 130, 155, 157, 158, 159, 164, 165, 170, 171, 174, 175, 176, 179, 180, 181, 182, 185, 186, 187, 190, 195, 207, 209, 222, 223, 226, 234, 236, 244, 261, 262, 263, 266, 268, 269, 271, 272, 275, 278, 279, 280, 284, 285, 297, 298, 299, 364, 431, 445, 454, 455, 456, 470, 474, 476, 477, 499, 522, 523, 527, 528, 529, 530, 531, 532, 534, 535, 537, 538, 539, 540, 543, 544, 545, 604, 614, 615, 618, 622, 623, 625, 638, 654, 658, 670, 671, 754, 763, 770, 772, 773, 782, 822, 833, 861, 870, 871, 874, 886], "later": [5, 11, 19, 32, 38, 43, 47, 69, 100, 108, 126, 135, 139, 140, 141, 143, 148, 150, 161, 171, 174, 176, 179, 180, 188, 190, 198, 199, 200, 201, 204, 205, 206, 207, 211, 215, 216, 217, 218, 221, 234, 235, 241, 244, 259, 264, 265, 266, 267, 272, 274, 276, 278, 281, 360, 453, 479, 480, 561, 617, 619, 706, 708, 709, 710, 754, 817, 845, 850, 851, 862, 863, 868, 871, 886], "convert_forward_solut": [5, 22, 47, 48, 49, 54, 55, 68, 157, 177, 222, 523, 625, 833, 868, 876, 886], "force_fix": [5, 47, 48, 49, 54, 55, 68, 157, 222, 364, 539, 886], "plot_align": [5, 24, 52, 80, 108, 114, 117, 122, 123, 124, 134, 135, 155, 156, 157, 158, 169, 177, 181, 182, 183, 184, 264, 265, 266, 267, 309, 479, 480, 772, 810, 819, 824, 861, 865, 868, 876, 886], "surfac": [5, 11, 22, 24, 26, 27, 31, 34, 35, 36, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 58, 59, 60, 68, 71, 80, 89, 91, 93, 108, 114, 115, 117, 119, 123, 124, 133, 134, 135, 149, 154, 155, 156, 158, 162, 163, 164, 165, 170, 171, 174, 175, 176, 177, 178, 179, 182, 183, 184, 187, 189, 190, 195, 198, 207, 209, 217, 222, 223, 226, 234, 235, 236, 244, 262, 266, 267, 268, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 284, 285, 297, 298, 304, 307, 308, 309, 335, 360, 364, 365, 387, 390, 410, 430, 445, 456, 461, 462, 467, 469, 470, 473, 474, 476, 477, 504, 513, 515, 517, 518, 519, 523, 528, 529, 530, 531, 532, 535, 537, 538, 539, 544, 545, 547, 548, 570, 571, 588, 589, 610, 613, 625, 628, 633, 635, 636, 639, 642, 644, 654, 655, 669, 670, 671, 672, 675, 677, 678, 681, 683, 701, 702, 734, 737, 740, 743, 754, 770, 772, 782, 789, 812, 813, 817, 829, 833, 834, 839, 841, 843, 846, 849, 851, 852, 862, 865, 874, 876, 886], "pial": [5, 114, 123, 134, 135, 154, 159, 180, 262, 277, 547, 628, 701, 754, 770, 782, 886], "set_3d_view": [5, 24, 52, 80, 108, 114, 117, 123, 124, 135, 155, 156, 157, 158, 159, 169, 177, 182, 876, 886], "azimuth": [5, 24, 80, 108, 114, 115, 117, 123, 124, 134, 135, 155, 156, 157, 159, 169, 177, 180, 182, 189, 210, 223, 754, 822, 886], "elev": [5, 24, 80, 108, 114, 115, 117, 123, 124, 134, 135, 155, 156, 157, 159, 169, 180, 182, 189, 198, 205, 210, 223, 754, 822, 886], "distanc": [5, 11, 22, 24, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 68, 79, 89, 91, 92, 93, 94, 103, 106, 107, 108, 109, 115, 123, 127, 130, 134, 135, 142, 155, 156, 157, 158, 159, 160, 165, 169, 170, 171, 175, 176, 177, 178, 180, 182, 189, 190, 191, 195, 201, 208, 210, 222, 223, 234, 236, 256, 261, 264, 265, 266, 267, 269, 270, 273, 274, 275, 277, 282, 304, 344, 365, 411, 414, 415, 418, 421, 430, 432, 454, 463, 469, 470, 479, 480, 513, 523, 543, 560, 561, 565, 569, 572, 576, 582, 593, 598, 599, 645, 654, 655, 663, 666, 669, 671, 672, 674, 676, 677, 678, 680, 681, 693, 694, 696, 697, 701, 706, 708, 710, 754, 771, 774, 786, 793, 797, 806, 809, 814, 816, 822, 841, 868, 871, 886], "focalpoint": [5, 24, 52, 108, 115, 123, 134, 155, 156, 157, 158, 159, 177, 223, 754, 822, 886], "04": [5, 19, 20, 24, 31, 35, 41, 42, 49, 50, 56, 70, 71, 73, 83, 84, 89, 92, 94, 99, 102, 107, 120, 122, 123, 126, 129, 140, 157, 161, 163, 173, 176, 179, 182, 184, 189, 199, 200, 208, 210, 226, 227, 228, 230, 231, 236, 244, 389, 432, 519, 524, 561, 593, 663, 668, 848, 868], "load": [5, 7, 11, 13, 14, 24, 26, 28, 29, 30, 32, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 50, 68, 71, 75, 79, 80, 81, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 106, 108, 109, 111, 112, 116, 118, 119, 120, 122, 124, 126, 127, 134, 141, 142, 144, 149, 150, 151, 155, 157, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 175, 176, 179, 180, 181, 182, 183, 187, 188, 190, 191, 192, 195, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 216, 217, 218, 219, 226, 227, 228, 229, 230, 234, 235, 236, 239, 241, 256, 259, 260, 264, 265, 266, 267, 274, 313, 318, 322, 329, 359, 361, 375, 461, 462, 479, 480, 486, 499, 500, 507, 519, 522, 523, 539, 550, 561, 563, 573, 606, 616, 618, 622, 623, 625, 627, 633, 634, 636, 671, 704, 727, 728, 770, 784, 788, 792, 794, 801, 807, 833, 841, 862, 863, 871, 886], "three": [5, 31, 45, 93, 102, 108, 119, 141, 144, 150, 155, 157, 158, 160, 167, 177, 181, 187, 188, 191, 198, 199, 204, 205, 206, 215, 217, 218, 221, 226, 239, 241, 256, 258, 261, 262, 264, 265, 266, 267, 272, 273, 278, 280, 297, 298, 307, 308, 309, 324, 411, 418, 469, 474, 479, 480, 517, 537, 538, 560, 561, 571, 576, 604, 636, 639, 655, 658, 687, 689, 706, 708, 710, 744, 754, 771, 782, 784, 786, 793, 795, 797, 805, 806, 807, 809, 814, 816, 834, 839, 845, 862, 865, 868, 871, 886], "layer": [5, 45, 108, 157, 158, 181, 182, 183, 184, 199, 244, 307, 387, 517, 524, 655, 663, 668, 770, 861, 868, 886], "model": [5, 7, 11, 12, 13, 18, 22, 26, 31, 32, 36, 41, 42, 50, 56, 73, 100, 104, 105, 108, 112, 115, 120, 134, 140, 150, 154, 155, 158, 159, 160, 161, 163, 169, 170, 171, 174, 175, 181, 182, 183, 184, 189, 190, 191, 195, 203, 204, 223, 230, 244, 250, 261, 262, 264, 266, 267, 268, 269, 272, 274, 275, 277, 278, 279, 280, 297, 298, 302, 304, 307, 341, 354, 360, 364, 372, 411, 415, 417, 418, 421, 423, 428, 429, 452, 454, 474, 479, 484, 517, 518, 522, 523, 524, 527, 528, 529, 530, 539, 558, 560, 570, 575, 589, 603, 612, 614, 615, 631, 640, 654, 655, 663, 668, 692, 719, 748, 754, 770, 772, 794, 809, 822, 828, 841, 846, 849, 851, 852, 862, 865, 871, 876, 886], "colloc": [5, 26, 41, 45, 50, 108, 157, 158, 175, 181, 518, 886], "patch": [5, 11, 22, 28, 29, 31, 34, 35, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 68, 89, 91, 92, 93, 94, 103, 106, 107, 108, 109, 123, 126, 130, 155, 157, 159, 165, 171, 176, 177, 178, 180, 181, 190, 195, 222, 223, 234, 236, 256, 261, 264, 265, 266, 267, 272, 273, 277, 278, 280, 282, 284, 285, 364, 411, 418, 479, 480, 528, 529, 530, 531, 532, 535, 539, 544, 545, 560, 561, 576, 613, 635, 654, 670, 671, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 871, 886], "statist": [5, 10, 11, 22, 28, 29, 31, 35, 38, 39, 40, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 68, 86, 87, 89, 91, 92, 93, 94, 95, 96, 100, 102, 103, 106, 107, 109, 112, 123, 130, 148, 150, 154, 155, 157, 159, 161, 165, 171, 176, 177, 178, 180, 181, 190, 195, 201, 204, 205, 222, 223, 233, 244, 256, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 284, 285, 297, 298, 318, 322, 324, 353, 354, 360, 364, 452, 479, 480, 528, 529, 530, 531, 532, 535, 539, 544, 545, 558, 561, 613, 616, 620, 635, 640, 666, 670, 671, 684, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 706, 708, 709, 710, 736, 786, 790, 793, 814, 841, 852, 863, 865, 876, 886], "3523": [5, 22, 31, 32, 33, 34, 35, 40, 42, 43, 46, 47, 48, 49, 51, 54, 55, 58, 59, 68, 89, 91, 92, 93, 94, 130, 171, 176, 177, 178, 179, 190, 195, 222, 223], "8196": [5, 181, 190], "free": [5, 22, 26, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 68, 80, 89, 91, 92, 93, 94, 108, 130, 139, 150, 157, 158, 165, 171, 175, 176, 177, 179, 181, 190, 195, 207, 209, 222, 223, 227, 231, 244, 262, 264, 265, 268, 297, 298, 299, 374, 454, 455, 456, 474, 476, 477, 528, 529, 530, 531, 532, 535, 539, 543, 544, 545, 570, 625, 646, 650, 693, 694, 696, 697, 833, 845, 849, 851, 852, 861, 867, 868, 874, 886], "frame": [5, 11, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 68, 79, 89, 91, 92, 93, 94, 103, 106, 107, 109, 111, 123, 130, 134, 135, 139, 150, 158, 162, 163, 164, 165, 169, 171, 176, 177, 178, 179, 180, 181, 182, 183, 189, 190, 195, 209, 211, 222, 223, 234, 236, 256, 262, 264, 265, 266, 267, 268, 269, 277, 302, 303, 312, 316, 325, 330, 367, 390, 430, 470, 473, 479, 480, 483, 490, 510, 512, 519, 524, 572, 582, 593, 635, 636, 638, 652, 655, 729, 741, 749, 751, 754, 770, 782, 822, 841, 862, 867, 868, 871, 886], "normal": [5, 11, 15, 16, 18, 22, 24, 26, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 54, 55, 58, 59, 60, 68, 70, 89, 91, 93, 103, 106, 107, 108, 109, 112, 113, 114, 115, 135, 136, 141, 142, 154, 155, 156, 157, 159, 160, 168, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 189, 190, 195, 205, 206, 209, 221, 222, 223, 234, 236, 240, 241, 244, 255, 257, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 277, 278, 279, 280, 284, 285, 297, 298, 313, 321, 358, 364, 411, 413, 416, 418, 445, 454, 474, 476, 477, 479, 480, 499, 528, 529, 530, 531, 532, 534, 535, 537, 538, 539, 544, 545, 560, 561, 571, 575, 589, 618, 622, 655, 659, 670, 671, 688, 706, 708, 710, 718, 722, 724, 732, 755, 771, 786, 793, 797, 805, 806, 809, 814, 816, 841, 845, 851, 867, 871, 886], "emploi": [5, 11, 22, 26, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 54, 55, 58, 59, 68, 89, 91, 93, 108, 157, 158, 175, 176, 177, 178, 181, 187, 188, 190, 195, 223, 241, 560, 687, 861, 862, 867, 868, 871], "rotat": [5, 10, 15, 19, 22, 34, 35, 40, 41, 42, 44, 46, 47, 48, 49, 54, 55, 58, 59, 68, 79, 89, 91, 93, 108, 155, 157, 171, 176, 177, 178, 179, 181, 190, 191, 194, 195, 201, 203, 223, 256, 266, 267, 269, 297, 298, 350, 365, 369, 432, 470, 565, 571, 593, 744, 745, 747, 754, 770, 789, 843, 851, 868, 886], "convert": [5, 22, 27, 34, 35, 40, 41, 42, 46, 47, 48, 49, 54, 55, 58, 59, 68, 75, 89, 91, 93, 108, 111, 121, 129, 135, 136, 139, 140, 141, 142, 143, 148, 149, 150, 155, 157, 159, 160, 168, 170, 176, 177, 178, 181, 187, 188, 189, 190, 191, 195, 200, 201, 205, 212, 215, 217, 222, 223, 227, 231, 234, 235, 236, 240, 258, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 275, 278, 279, 280, 283, 290, 303, 312, 313, 338, 350, 364, 366, 413, 417, 422, 423, 426, 440, 447, 449, 450, 467, 472, 473, 475, 479, 480, 490, 500, 504, 515, 522, 581, 595, 596, 706, 708, 709, 710, 722, 732, 745, 747, 753, 755, 758, 770, 822, 824, 845, 846, 849, 852, 862, 868, 886], "helmet": [5, 7, 27, 45, 79, 80, 108, 115, 121, 122, 129, 136, 149, 155, 157, 169, 171, 182, 183, 184, 187, 211, 266, 267, 269, 462, 519, 527, 542, 623, 754, 763, 770, 789, 822, 868, 886], "unknown": [5, 46, 71, 73, 76, 82, 89, 92, 108, 126, 140, 145, 150, 166, 167, 168, 180, 198, 199, 200, 202, 204, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 269, 325, 330, 474, 479, 480, 487, 494, 510, 512, 741, 807, 827, 836, 868, 871, 886], "deriv": [5, 32, 33, 34, 46, 71, 108, 122, 125, 139, 143, 148, 155, 167, 199, 226, 227, 239, 244, 269, 365, 561, 600, 625, 833, 868, 871, 886], "subset": [5, 45, 111, 139, 141, 143, 145, 150, 157, 159, 171, 174, 206, 207, 211, 217, 226, 239, 259, 264, 265, 266, 267, 270, 274, 284, 285, 297, 298, 354, 358, 359, 369, 370, 371, 403, 411, 414, 418, 421, 435, 449, 454, 455, 468, 474, 476, 477, 479, 480, 539, 561, 679, 682, 706, 707, 708, 709, 710, 754, 784, 794, 807, 867, 868, 874, 886], "dip_opm": 5, "_": [5, 8, 9, 19, 37, 38, 45, 50, 60, 67, 111, 136, 145, 150, 159, 160, 171, 177, 179, 190, 194, 201, 204, 206, 211, 215, 222, 226, 227, 230, 231, 240, 241, 303, 561, 572, 608, 722, 732, 845, 868, 886], "fit_dipol": [5, 45, 83, 175, 180, 182, 183, 184, 262, 263, 300, 615, 868, 876, 886], "040": [5, 80, 112, 120, 139, 148, 161, 168, 208, 223, 244, 266, 267, 354, 865], "080": [5, 22, 25, 33, 38, 56, 80, 184, 208, 227], "idx": [5, 31, 35, 40, 47, 59, 63, 83, 113, 132, 149, 180, 190, 198, 202, 206, 222, 234, 258, 262, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 311, 478, 479, 480, 537, 538, 709, 782, 886], "argmax": [5, 35, 38, 40, 48, 50, 58, 59, 118, 175, 180, 194], "gof": [5, 40, 115, 168, 175, 177, 182, 183, 184, 262, 264, 265, 266, 267, 300, 311, 342, 344, 345, 346, 479, 480, 558, 706, 708, 709, 710, 782, 886], "1f": [5, 30, 40, 47, 76, 99, 108, 113, 155, 175, 182, 183, 190, 195, 201, 222, 226, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 708, 710, 786, 793, 806], "1000": [5, 40, 48, 70, 80, 83, 95, 112, 113, 127, 145, 155, 156, 158, 159, 175, 180, 181, 182, 183, 190, 201, 202, 206, 208, 212, 215, 221, 227, 231, 234, 235, 236, 440, 446, 448, 452, 479, 480, 561, 627, 693, 694, 696, 697, 722, 732, 754, 841, 862, 886], "n20m": 5, "plot_loc": [5, 175, 180, 262, 886], "orthoview": [5, 35, 40, 59, 159, 175, 262, 782, 886], "conductormodel": [5, 45, 108, 157, 182, 183, 184, 261, 264, 265, 266, 267, 273, 304, 312, 411, 418, 454, 479, 480, 517, 518, 524, 560, 561, 576, 612, 655, 706, 708, 710, 770, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 828, 841, 876], "solver": [5, 10, 11, 13, 15, 18, 27, 36, 40, 45, 46, 56, 59, 174, 195, 261, 262, 266, 268, 269, 275, 454, 455, 476, 518, 543, 614, 623, 625, 692, 813, 849, 854, 874, 886], "instanc": [5, 15, 26, 31, 43, 44, 45, 50, 74, 82, 87, 108, 113, 157, 158, 165, 168, 170, 171, 175, 177, 181, 182, 184, 187, 188, 190, 203, 204, 205, 207, 209, 211, 215, 221, 239, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 312, 313, 314, 316, 317, 319, 325, 328, 330, 331, 333, 334, 335, 336, 337, 338, 341, 343, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 369, 370, 371, 373, 377, 378, 379, 381, 382, 383, 384, 386, 391, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 440, 441, 442, 443, 444, 445, 446, 452, 454, 455, 456, 457, 458, 465, 468, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 528, 529, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 548, 550, 552, 553, 554, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 600, 601, 605, 606, 607, 608, 610, 611, 612, 615, 616, 617, 618, 619, 622, 625, 627, 634, 637, 646, 647, 650, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 691, 692, 693, 694, 695, 696, 697, 698, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 726, 727, 742, 743, 744, 746, 751, 754, 755, 756, 757, 763, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 824, 828, 832, 836, 838, 845, 863, 886], "36": [5, 19, 28, 34, 35, 45, 47, 54, 56, 80, 82, 102, 107, 111, 113, 129, 141, 143, 147, 168, 170, 180, 189, 194, 195, 208, 210, 214, 226, 227, 228, 230, 231, 233, 235, 236, 241, 244, 264, 265, 266, 267, 403, 479, 480, 602, 886], "rad": [5, 45, 175, 180, 182, 183, 184, 581, 655, 841], "77": [5, 11, 13, 19, 35, 80, 81, 98, 107, 108, 111, 113, 155, 156, 167, 168, 180, 189, 190, 194, 195, 206, 207, 208, 217, 226, 227, 230, 231, 234, 239, 335, 886], "guess": [5, 45, 122, 170, 175, 180, 182, 183, 184, 204, 208, 256, 470, 490, 767, 886], "grid": [5, 24, 40, 41, 45, 50, 112, 114, 122, 126, 134, 154, 155, 157, 175, 177, 179, 180, 182, 183, 184, 194, 195, 207, 208, 211, 226, 228, 256, 274, 276, 277, 327, 476, 561, 589, 655, 707, 780, 797, 800, 861, 862, 868, 886], "n_sampl": [5, 45, 53, 64, 96, 136, 182, 183, 184, 195, 221, 226, 411, 412, 413, 414, 415, 416, 418, 419, 421, 422, 423, 424, 425, 426, 428, 453, 562, 591, 656, 685, 692, 695, 845], "10250": 5, "65975931e": 5, "41596252e": 5, "50067005e": 5, "18042429e": 5, "93613735e": 5, "88258373e": 5, "73325418e": 5, "23906800e": 5, "47917983e": 5, "14619592e": 5, "36697422e": 5, "53163548e": 5, "08794660e": 5, "00286749e": 5, "18143308e": 5, "22829671e": 5, "93976860e": 5, "28130683e": 5, "86574659e": 5, "28436459e": 5, "91104392e": 5, "54318851e": 5, "60478446e": 5, "18114621e": 5, "42024459e": 5, "20931076e": 5, "52605668e": 5, "29661483e": 5, "53868159e": 5, "40025250e": 5, "28102479e": 5, "49204692e": 5, "41942628e": 5, "29095862e": 5, "00102289e": 5, "19639173e": 5, "09222979e": 5, "25564394e": 5, "49616938e": 5, "35015052e": 5, "94284541e": 5, "29140004e": 5, "85113742e": 5, "46141046e": 5, "97190359e": 5, "ra": [5, 24, 26, 41, 43, 45, 50, 108, 134, 155, 157, 158, 160, 175, 179, 180, 182, 183, 184, 207, 262, 271, 272, 275, 277, 278, 279, 280, 312, 325, 365, 445, 473, 512, 588, 625, 741, 743, 746, 754, 833, 841, 862, 868, 886], "000000": [5, 24, 26, 41, 45, 50, 108, 142, 143, 155, 157, 158, 175, 179, 180, 181, 182, 183, 184, 207, 229, 231, 235, 236, 241], "999800": [5, 108], "015800": [5, 108], "009200": [5, 108], "018100": [5, 108], "930500": [5, 108], "365900": [5, 108], "002800": [5, 108], "366000": [5, 108], "930600": [5, 108], "40": [5, 9, 10, 12, 13, 19, 21, 28, 33, 35, 40, 45, 46, 47, 58, 59, 68, 73, 75, 79, 80, 83, 89, 90, 92, 99, 102, 103, 107, 108, 111, 113, 120, 122, 123, 129, 135, 139, 140, 143, 144, 150, 154, 155, 157, 159, 165, 168, 170, 177, 180, 182, 183, 186, 189, 190, 194, 195, 200, 201, 203, 204, 208, 209, 210, 211, 214, 215, 226, 227, 228, 230, 231, 234, 235, 236, 240, 244, 264, 265, 274, 432, 446, 479, 480, 488, 561, 573, 582, 583, 586, 658, 758, 784, 802, 807, 821, 862, 868, 886], "105": [5, 24, 26, 35, 41, 45, 50, 93, 108, 113, 134, 136, 155, 157, 168, 175, 180, 182, 183, 184, 205, 207, 208, 230, 231, 871], "decompos": [5, 8, 45, 175, 180, 182, 183, 184, 204, 411, 415, 418, 561, 562, 736, 868, 886], "eigenvalu": [5, 21, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 89, 92, 93, 103, 106, 107, 108, 109, 120, 151, 161, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 195, 222, 223, 234, 236, 261, 411, 718, 868, 871], "without": [5, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 70, 75, 89, 92, 93, 103, 106, 108, 112, 119, 120, 126, 143, 148, 149, 150, 151, 158, 160, 161, 164, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 195, 199, 200, 201, 203, 204, 205, 206, 207, 209, 217, 222, 223, 226, 241, 256, 259, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 291, 292, 295, 297, 298, 325, 326, 354, 358, 359, 369, 370, 371, 372, 411, 418, 441, 442, 443, 444, 452, 454, 455, 474, 476, 477, 479, 480, 487, 494, 499, 500, 520, 530, 532, 535, 539, 554, 582, 600, 616, 618, 622, 623, 640, 700, 707, 744, 754, 794, 812, 817, 824, 843, 845, 849, 853, 861, 863, 865, 867, 868, 886], "whiten": [5, 7, 14, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 55, 57, 58, 59, 60, 89, 92, 93, 103, 104, 105, 106, 107, 108, 109, 112, 121, 129, 148, 152, 153, 161, 164, 165, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 195, 204, 222, 223, 234, 236, 244, 256, 261, 264, 265, 266, 267, 269, 274, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 452, 454, 455, 474, 476, 477, 479, 480, 536, 539, 558, 561, 562, 591, 620, 631, 719, 784, 788, 792, 794, 807, 811, 841, 865, 886], "omit": [5, 12, 21, 24, 26, 28, 29, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 78, 80, 86, 89, 92, 93, 103, 106, 107, 108, 109, 118, 120, 123, 149, 151, 155, 157, 161, 165, 167, 168, 170, 171, 175, 176, 177, 178, 180, 181, 182, 183, 184, 190, 195, 199, 207, 209, 222, 223, 234, 236, 258, 264, 265, 266, 267, 274, 417, 479, 480, 515, 561, 583, 584, 594, 611, 623, 663, 668, 710, 744, 770, 772, 788, 793, 799, 808, 845, 871, 886], "inner": [5, 26, 31, 41, 43, 45, 50, 108, 128, 154, 157, 159, 160, 170, 175, 180, 181, 190, 244, 256, 264, 265, 268, 304, 307, 454, 470, 523, 593, 655, 671, 754, 841, 846, 849, 852, 861, 862, 865, 868, 871, 886], "skull": [5, 26, 41, 43, 45, 50, 108, 112, 154, 155, 157, 159, 160, 169, 175, 180, 181, 190, 244, 256, 268, 277, 304, 307, 454, 523, 524, 589, 655, 663, 668, 671, 754, 770, 841, 846, 849, 852, 861, 862, 865, 868, 871, 886], "cm": [5, 9, 15, 24, 41, 45, 50, 89, 115, 122, 141, 144, 155, 157, 165, 169, 175, 180, 182, 183, 184, 188, 200, 206, 207, 208, 209, 210, 228, 240, 256, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 335, 337, 339, 479, 480, 487, 516, 582, 785, 788, 790, 815, 841, 886], "35": [5, 11, 12, 13, 19, 21, 28, 34, 35, 45, 47, 80, 102, 107, 108, 111, 113, 122, 135, 142, 144, 145, 148, 157, 159, 168, 170, 183, 184, 194, 195, 201, 205, 206, 208, 210, 214, 226, 227, 228, 230, 231, 233, 235, 236, 240, 244, 256, 476, 528, 573, 574, 583, 586, 758, 868], "insid": [5, 16, 24, 26, 41, 45, 50, 108, 139, 148, 155, 157, 158, 159, 160, 170, 175, 180, 181, 182, 183, 184, 202, 207, 209, 215, 230, 236, 270, 274, 275, 278, 279, 280, 292, 338, 394, 435, 463, 470, 479, 480, 509, 532, 590, 754, 807, 845, 861, 865, 868, 886], "sphere": [5, 24, 26, 35, 41, 43, 45, 48, 50, 59, 67, 71, 83, 92, 93, 108, 119, 122, 124, 134, 155, 157, 158, 159, 175, 177, 180, 181, 182, 183, 184, 188, 199, 207, 208, 209, 244, 256, 261, 262, 264, 265, 266, 267, 270, 273, 275, 297, 298, 302, 305, 306, 312, 360, 410, 411, 418, 454, 479, 480, 491, 519, 522, 523, 524, 560, 561, 570, 576, 655, 669, 672, 706, 708, 710, 754, 770, 771, 778, 782, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 813, 814, 816, 824, 841, 886], "102": [5, 11, 13, 14, 15, 16, 18, 22, 26, 28, 29, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 68, 69, 71, 72, 73, 76, 78, 79, 82, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 122, 123, 126, 128, 130, 131, 132, 139, 140, 141, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 169, 171, 175, 176, 177, 178, 179, 180, 181, 182, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 217, 218, 222, 223, 228, 229, 230, 231, 234, 236, 256, 871], "extent": [5, 13, 16, 24, 41, 45, 47, 50, 55, 70, 89, 94, 106, 139, 155, 157, 175, 180, 182, 183, 184, 195, 206, 207, 228, 229, 230, 231, 234, 235, 236, 244, 264, 265, 434, 469, 513, 543, 666, 696, 697, 867, 868, 886], "73": [5, 13, 15, 19, 33, 34, 35, 40, 45, 79, 80, 95, 106, 107, 111, 113, 120, 127, 144, 148, 168, 175, 181, 195, 208, 226, 227, 228, 229, 230, 231, 234, 235, 236, 239, 244, 264, 265, 266, 267, 479, 480, 708, 710, 725], "y": [5, 9, 10, 11, 12, 13, 16, 18, 19, 24, 41, 45, 47, 50, 67, 70, 71, 79, 81, 89, 111, 113, 114, 119, 135, 144, 150, 155, 157, 159, 160, 169, 171, 174, 175, 179, 180, 182, 183, 184, 191, 194, 195, 198, 201, 202, 205, 207, 212, 215, 216, 217, 218, 226, 236, 241, 258, 261, 262, 264, 265, 266, 267, 269, 272, 273, 278, 280, 288, 302, 305, 306, 312, 313, 335, 344, 345, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 430, 451, 479, 480, 491, 527, 528, 560, 561, 562, 570, 576, 581, 625, 659, 692, 706, 708, 710, 741, 744, 745, 747, 754, 755, 758, 771, 778, 782, 785, 786, 787, 788, 790, 792, 793, 794, 795, 796, 797, 802, 804, 806, 808, 809, 810, 814, 815, 816, 822, 833, 841, 843, 868, 886], "42": [5, 8, 9, 11, 13, 14, 15, 16, 18, 19, 20, 28, 29, 35, 42, 45, 47, 49, 68, 69, 71, 72, 73, 76, 79, 80, 82, 87, 89, 90, 91, 92, 95, 96, 98, 99, 102, 103, 106, 107, 108, 109, 110, 111, 113, 116, 117, 120, 122, 126, 131, 132, 136, 140, 145, 150, 151, 155, 161, 165, 166, 167, 168, 171, 174, 175, 176, 179, 180, 181, 183, 194, 195, 198, 201, 202, 203, 204, 205, 206, 207, 208, 215, 218, 222, 223, 226, 227, 228, 229, 230, 231, 234, 236, 244, 269, 528, 543, 666], "108": [5, 16, 35, 80, 81, 112, 113, 120, 161, 168, 190, 195, 208, 226, 231, 244, 266, 267, 354, 794, 865], "80": [5, 9, 13, 16, 19, 30, 31, 33, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 78, 79, 80, 85, 86, 89, 93, 107, 111, 113, 114, 115, 117, 118, 119, 124, 126, 148, 150, 155, 157, 167, 168, 170, 171, 175, 177, 178, 180, 182, 183, 184, 189, 190, 194, 195, 206, 208, 209, 210, 226, 227, 228, 230, 231, 235, 236, 244, 410, 561, 658, 795, 802, 851, 886], "1080": [5, 10, 194, 244, 417], "543": [5, 40, 231], "after": [5, 8, 11, 16, 22, 24, 26, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 61, 68, 80, 87, 89, 91, 93, 100, 102, 108, 126, 130, 135, 136, 139, 140, 141, 143, 144, 145, 148, 149, 150, 154, 155, 157, 160, 165, 166, 167, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 217, 222, 223, 226, 228, 229, 234, 239, 241, 256, 257, 258, 264, 265, 266, 267, 269, 271, 272, 274, 275, 277, 278, 279, 280, 287, 297, 298, 341, 354, 358, 359, 361, 363, 369, 370, 371, 386, 411, 413, 417, 418, 422, 424, 425, 429, 435, 452, 453, 454, 455, 474, 476, 477, 479, 480, 539, 560, 561, 564, 572, 573, 574, 578, 579, 582, 583, 584, 586, 591, 594, 623, 625, 647, 667, 706, 731, 733, 734, 736, 737, 742, 754, 770, 778, 784, 788, 790, 792, 793, 794, 797, 798, 801, 805, 807, 818, 833, 841, 845, 853, 861, 862, 865, 867, 868, 871, 874, 886], "infeas": [5, 24, 41, 45, 50, 155, 157, 175, 180, 182, 183, 184, 207], "least": [5, 41, 45, 70, 83, 113, 140, 157, 158, 175, 180, 200, 201, 202, 204, 205, 209, 226, 231, 244, 264, 265, 266, 267, 274, 413, 422, 426, 428, 447, 449, 450, 468, 479, 480, 561, 563, 564, 580, 582, 593, 691, 754, 784, 807, 851, 861, 865, 867, 868, 886], "awai": [5, 41, 45, 140, 143, 157, 158, 175, 180, 182, 187, 200, 205, 207, 211, 365, 491, 561, 588, 589, 659, 701, 734, 737, 754, 848, 868, 871, 886], "few": [5, 21, 26, 41, 44, 45, 50, 70, 93, 100, 108, 134, 143, 144, 148, 154, 155, 156, 157, 158, 160, 161, 166, 170, 171, 175, 180, 181, 198, 199, 200, 201, 203, 204, 206, 207, 208, 215, 218, 227, 231, 236, 239, 241, 269, 432, 571, 572, 582, 593, 841, 845, 853, 863, 865, 868, 870, 886], "interior": [5, 26, 41, 45, 50, 108, 157, 158, 175, 180, 181, 209], "statu": [5, 26, 41, 45, 50, 108, 157, 158, 175, 180, 181, 187, 264, 265, 266, 267, 269, 341, 363, 365, 479, 480, 487, 494, 502, 558, 706, 708, 709, 710, 754, 841, 845, 868, 871, 886], "70": [5, 9, 12, 13, 15, 19, 21, 34, 41, 45, 46, 47, 58, 59, 80, 87, 89, 102, 103, 107, 108, 111, 113, 115, 135, 139, 142, 143, 155, 157, 158, 165, 168, 169, 182, 183, 194, 195, 201, 204, 208, 210, 226, 227, 230, 231, 234, 239, 241, 244, 264, 265, 266, 267, 335, 477, 479, 480, 561, 708, 710, 722, 725, 732, 733, 736, 886], "outsid": [5, 16, 24, 26, 41, 45, 50, 108, 134, 139, 143, 155, 157, 158, 160, 175, 180, 181, 182, 183, 184, 199, 201, 206, 207, 209, 215, 217, 258, 261, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 278, 279, 280, 292, 390, 411, 418, 453, 479, 480, 513, 532, 560, 561, 576, 578, 706, 708, 710, 742, 751, 754, 771, 772, 786, 793, 797, 806, 809, 812, 814, 816, 817, 867, 868, 869, 871, 886], "exterior": [5, 26, 41, 45, 50, 108, 157, 158, 175, 180, 181, 209], "284": [5, 168, 186, 208, 226, 231, 244, 411, 886], "473": [5, 113, 208, 231, 277], "qhull": [5, 26, 41, 45, 50, 108, 157, 158, 175, 180, 181, 886], "189": [5, 32, 33, 34, 46, 98, 112, 168, 208, 230, 231, 240, 244, 868], "solid": [5, 26, 41, 45, 50, 108, 149, 157, 158, 160, 175, 180, 181, 206, 778, 805, 868], "angl": [5, 26, 41, 45, 50, 108, 117, 130, 157, 158, 160, 168, 169, 171, 175, 180, 181, 182, 212, 256, 269, 303, 307, 581, 591, 646, 754, 759, 822, 868, 886], "244": [5, 168, 208, 231], "complet": [5, 7, 9, 26, 32, 33, 34, 41, 45, 50, 108, 143, 149, 154, 157, 158, 160, 168, 175, 179, 180, 181, 199, 201, 204, 207, 223, 226, 244, 256, 264, 265, 277, 303, 511, 561, 592, 606, 703, 750, 754, 762, 769, 845, 852, 861, 862, 863, 865, 868, 870, 871, 886], "122": [5, 12, 16, 159, 168, 169, 175, 189, 195, 204, 226, 230, 231, 244, 335, 412, 418, 427, 868, 886], "limit": [5, 31, 34, 40, 41, 42, 45, 50, 58, 59, 89, 93, 108, 112, 113, 126, 134, 136, 140, 141, 157, 164, 165, 167, 175, 176, 178, 180, 181, 188, 190, 195, 199, 201, 204, 209, 215, 223, 231, 241, 244, 258, 260, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 278, 279, 280, 282, 411, 418, 437, 444, 455, 476, 479, 480, 499, 560, 561, 565, 582, 593, 618, 622, 627, 633, 684, 690, 692, 706, 708, 709, 710, 769, 771, 773, 778, 785, 786, 788, 790, 792, 793, 795, 797, 802, 806, 809, 812, 814, 816, 817, 818, 835, 843, 845, 867, 868, 869, 871, 874, 886], "214": [5, 56, 60, 168, 195, 208, 231], "through": [5, 9, 19, 27, 37, 45, 77, 84, 112, 139, 140, 141, 143, 144, 148, 154, 155, 159, 164, 165, 167, 171, 175, 179, 180, 182, 183, 184, 194, 199, 201, 204, 205, 206, 209, 211, 215, 217, 218, 223, 234, 241, 244, 257, 262, 264, 265, 266, 267, 297, 373, 452, 461, 470, 479, 512, 560, 561, 656, 718, 754, 776, 778, 782, 785, 787, 791, 799, 841, 843, 845, 852, 863, 867, 868, 874, 886], "0642": [5, 168], "3529": 5, "18": [5, 9, 11, 13, 19, 28, 31, 33, 34, 35, 40, 45, 47, 50, 56, 59, 64, 71, 80, 81, 82, 89, 92, 94, 102, 107, 108, 109, 111, 113, 126, 139, 144, 159, 166, 167, 168, 170, 175, 176, 178, 179, 180, 182, 183, 190, 194, 195, 198, 199, 202, 205, 206, 207, 208, 209, 215, 216, 217, 218, 223, 226, 227, 228, 230, 231, 234, 235, 236, 238, 244, 264, 265, 266, 267, 277, 279, 280, 284, 285, 293, 298, 307, 309, 354, 355, 356, 357, 358, 359, 369, 370, 371, 387, 395, 403, 417, 423, 440, 455, 458, 459, 470, 474, 476, 477, 479, 480, 500, 513, 515, 521, 547, 561, 573, 574, 583, 654, 657, 658, 660, 671, 673, 706, 709, 771, 784, 793, 795, 807, 813, 816, 818, 843, 848, 868], "7471": 5, "7238": [5, 19], "0647": 5, "99": [5, 13, 15, 19, 26, 35, 47, 49, 69, 70, 80, 81, 89, 92, 102, 103, 107, 108, 111, 113, 119, 120, 136, 150, 151, 156, 159, 161, 168, 171, 176, 178, 179, 180, 183, 189, 190, 191, 195, 206, 208, 217, 222, 223, 226, 227, 229, 230, 231, 244, 264, 265, 274, 479, 480, 784, 807, 868, 886], "leakag": [5, 27, 36, 45, 56, 275, 277, 364, 538, 540, 542, 625, 628, 734, 737, 754, 759], "constrain": [5, 108, 143, 165, 174, 177, 178, 179, 205, 244, 259, 264, 265, 293, 294, 295, 296, 297, 298, 360, 578, 841, 846, 852, 865, 868, 871, 886], "idea": [5, 7, 21, 27, 112, 154, 170, 174, 176, 201, 203, 204, 205, 206, 234, 236, 241, 244, 264, 265, 308, 434, 864, 865, 868, 869, 874], "inverse_oper": [5, 7, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 47, 48, 54, 59, 89, 103, 106, 107, 108, 109, 171, 176, 234, 236, 274, 528, 529, 530, 531, 532, 534, 535, 540, 544, 545], "minimum_norm": [5, 7, 11, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52, 54, 55, 57, 58, 59, 60, 89, 93, 103, 106, 107, 108, 109, 123, 165, 176, 177, 178, 180, 181, 190, 195, 205, 222, 223, 234, 236, 841, 854, 861, 868, 876, 886], "make_inverse_oper": [5, 7, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 89, 93, 108, 176, 177, 178, 181, 190, 195, 223, 542, 861, 868, 876, 886], "loos": [5, 7, 31, 34, 35, 40, 41, 42, 46, 48, 54, 55, 59, 60, 89, 93, 108, 143, 176, 178, 181, 190, 195, 223, 455, 456, 474, 476, 477, 528, 529, 530, 531, 532, 534, 535, 539, 543, 544, 545, 861, 868, 871, 886], "depth": [5, 7, 11, 22, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 54, 55, 57, 58, 59, 60, 89, 93, 103, 106, 107, 108, 109, 123, 165, 170, 171, 176, 177, 178, 180, 181, 190, 195, 218, 222, 223, 234, 236, 244, 262, 297, 298, 455, 474, 476, 477, 539, 663, 668, 674, 871, 874, 886], "snr": [5, 7, 10, 11, 19, 21, 27, 28, 29, 30, 36, 38, 39, 41, 48, 54, 55, 56, 60, 87, 89, 103, 108, 165, 176, 178, 180, 183, 190, 201, 222, 223, 234, 236, 261, 266, 268, 269, 275, 343, 455, 527, 528, 536, 539, 541, 542, 614, 623, 625, 670, 754, 777, 811, 861, 868, 874, 886], "lambda2": [5, 7, 11, 28, 29, 30, 38, 39, 40, 41, 45, 47, 48, 50, 54, 55, 58, 59, 60, 71, 89, 93, 103, 107, 108, 155, 165, 176, 178, 180, 182, 183, 184, 190, 207, 222, 234, 236, 528, 529, 530, 531, 532, 534, 535, 540, 541, 544, 545, 570, 861], "stc": [5, 7, 11, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 56, 58, 59, 60, 68, 91, 92, 93, 94, 103, 107, 108, 109, 115, 126, 133, 134, 135, 157, 164, 165, 171, 175, 176, 177, 178, 179, 181, 185, 186, 195, 223, 235, 262, 266, 271, 272, 274, 275, 276, 277, 278, 279, 280, 284, 285, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 360, 445, 454, 458, 464, 474, 475, 476, 477, 515, 522, 527, 528, 529, 530, 531, 532, 535, 537, 538, 542, 544, 623, 633, 646, 656, 670, 671, 672, 673, 698, 701, 702, 754, 812, 813, 817, 818, 841, 861, 881, 886], "apply_invers": [5, 7, 28, 30, 38, 39, 40, 41, 44, 45, 58, 59, 60, 89, 93, 165, 176, 177, 178, 180, 181, 190, 195, 205, 222, 223, 234, 236, 529, 530, 531, 532, 534, 535, 541, 544, 545, 841, 861, 868, 876, 886], "pick_ori": [5, 7, 11, 28, 29, 32, 33, 34, 38, 39, 41, 49, 60, 89, 107, 176, 177, 179, 180, 223, 297, 298, 474, 476, 477, 528, 529, 530, 531, 532, 534, 535, 544, 545, 886], "hemi": [5, 7, 11, 26, 32, 33, 34, 38, 41, 43, 47, 48, 49, 50, 58, 60, 67, 93, 103, 108, 115, 126, 130, 133, 135, 154, 159, 165, 174, 176, 177, 178, 179, 180, 190, 195, 222, 223, 234, 235, 236, 270, 271, 272, 275, 278, 279, 280, 282, 469, 610, 628, 753, 754, 812, 817, 836, 886], "rh": [5, 24, 26, 34, 37, 38, 41, 43, 47, 59, 68, 89, 91, 93, 94, 106, 108, 115, 130, 135, 154, 157, 158, 159, 174, 176, 222, 223, 260, 270, 271, 272, 275, 278, 279, 280, 467, 513, 610, 628, 633, 754, 812, 817, 836, 868], "view": [5, 7, 11, 26, 28, 29, 31, 32, 33, 35, 40, 43, 47, 50, 53, 58, 59, 69, 93, 94, 99, 103, 106, 107, 108, 112, 114, 117, 126, 134, 135, 139, 141, 149, 150, 151, 157, 158, 159, 165, 168, 169, 171, 174, 176, 179, 180, 188, 189, 190, 195, 204, 206, 217, 218, 222, 223, 231, 234, 235, 236, 244, 261, 262, 264, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 280, 288, 302, 309, 479, 480, 527, 640, 741, 754, 782, 784, 807, 812, 815, 817, 822, 824, 841, 861, 865, 867, 868, 874, 886], "lat": [5, 11, 26, 58, 93, 103, 126, 135, 150, 159, 165, 195, 222, 236, 754], "initial_tim": [5, 7, 11, 32, 41, 43, 58, 59, 60, 93, 103, 126, 133, 165, 174, 176, 177, 178, 179, 180, 181, 190, 195, 222, 271, 272, 275, 278, 279, 280, 754, 812, 817, 818], "clim": [5, 7, 10, 22, 26, 42, 43, 47, 49, 54, 55, 58, 59, 103, 108, 126, 130, 134, 135, 145, 174, 176, 178, 179, 180, 210, 222, 234, 235, 236, 266, 267, 271, 272, 275, 278, 279, 280, 754, 773, 790, 812, 817, 818, 886], "percent": [5, 26, 42, 106, 108, 111, 178, 228, 231, 271, 272, 275, 278, 279, 280, 287, 544, 545, 561, 662, 663, 664, 665, 666, 668, 706, 709, 773, 799, 812, 814, 817, 818, 886], "lim": [5, 7, 22, 26, 42, 43, 49, 54, 55, 58, 59, 103, 108, 126, 130, 134, 135, 174, 176, 178, 179, 180, 235, 236, 271, 272, 275, 278, 279, 280, 773, 812, 817, 818], "400": [5, 7, 13, 40, 44, 75, 80, 91, 110, 126, 130, 134, 140, 141, 143, 145, 150, 155, 159, 170, 171, 175, 177, 180, 194, 205, 206, 208, 210, 226, 228, 231, 470], "background": [5, 21, 43, 115, 125, 126, 134, 141, 150, 159, 164, 165, 171, 204, 206, 210, 213, 214, 215, 217, 218, 244, 262, 264, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 280, 411, 446, 447, 449, 479, 480, 500, 566, 588, 631, 706, 708, 710, 722, 754, 757, 763, 770, 782, 788, 792, 795, 802, 807, 812, 813, 815, 817, 818, 826, 861, 867, 886], "w": [5, 21, 32, 33, 39, 45, 60, 61, 73, 82, 102, 126, 131, 136, 141, 151, 155, 159, 160, 177, 181, 194, 195, 201, 210, 223, 226, 239, 244, 261, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 297, 298, 309, 321, 369, 411, 418, 479, 480, 528, 536, 539, 560, 561, 591, 633, 663, 668, 688, 706, 708, 709, 710, 722, 731, 732, 735, 738, 771, 786, 792, 793, 807, 809, 814, 815, 816, 868, 886], "invers": [5, 7, 11, 19, 21, 32, 33, 34, 38, 43, 44, 45, 46, 48, 50, 51, 54, 55, 56, 58, 59, 60, 87, 89, 104, 105, 106, 107, 108, 109, 123, 148, 154, 155, 158, 159, 161, 169, 171, 174, 175, 177, 178, 179, 180, 181, 187, 190, 195, 199, 205, 207, 222, 223, 234, 236, 244, 256, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 297, 298, 353, 360, 366, 367, 371, 417, 425, 429, 445, 474, 475, 476, 479, 480, 514, 523, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 558, 561, 562, 614, 620, 623, 625, 627, 628, 635, 654, 655, 721, 754, 770, 781, 782, 811, 813, 822, 841, 846, 852, 871, 874, 876, 886], "adjust": [5, 24, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 50, 51, 54, 55, 58, 59, 89, 93, 108, 115, 119, 126, 148, 155, 157, 160, 169, 171, 176, 177, 178, 179, 181, 187, 190, 195, 207, 209, 217, 218, 223, 228, 256, 261, 264, 265, 266, 267, 273, 286, 342, 344, 411, 418, 471, 479, 480, 481, 490, 498, 560, 561, 571, 584, 594, 684, 690, 695, 699, 700, 706, 708, 710, 725, 767, 777, 784, 785, 786, 790, 792, 793, 797, 806, 807, 809, 814, 815, 843, 849, 861, 865, 868, 874, 886], "svd": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 89, 93, 108, 176, 177, 178, 181, 190, 195, 205, 223, 261, 272, 278, 280, 341, 536, 537, 538, 779, 861, 868, 886], "lead": [5, 22, 26, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 69, 70, 87, 89, 93, 108, 143, 150, 161, 166, 176, 177, 178, 181, 190, 194, 195, 199, 201, 209, 211, 223, 258, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 354, 445, 474, 476, 477, 479, 480, 528, 529, 530, 531, 532, 594, 625, 650, 693, 694, 696, 697, 706, 841, 843, 863, 868, 886], "largest": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 89, 93, 108, 134, 150, 176, 177, 178, 181, 187, 190, 195, 223, 226, 411, 455, 504, 537, 538, 561], "38802": 5, "factor": [5, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 48, 50, 54, 55, 58, 59, 60, 89, 93, 103, 106, 107, 108, 109, 134, 156, 170, 176, 177, 178, 180, 181, 190, 195, 201, 202, 209, 211, 222, 223, 228, 229, 230, 234, 236, 240, 256, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 299, 354, 358, 365, 371, 419, 420, 423, 424, 432, 451, 479, 480, 489, 531, 541, 544, 545, 571, 572, 578, 579, 582, 591, 593, 595, 642, 644, 645, 658, 659, 687, 689, 706, 709, 712, 715, 718, 731, 733, 734, 735, 736, 737, 738, 744, 754, 767, 784, 792, 805, 807, 813, 815, 817, 841, 868, 871, 886], "trace": [5, 31, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 74, 79, 89, 92, 93, 108, 143, 148, 150, 165, 171, 176, 177, 178, 181, 190, 191, 195, 199, 206, 208, 209, 212, 215, 218, 223, 256, 262, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 411, 479, 480, 561, 751, 754, 781, 784, 788, 796, 798, 805, 807, 812, 817, 868, 886], "35945e": 5, "nchan": [5, 34, 40, 41, 42, 45, 48, 50, 52, 54, 55, 57, 58, 59, 89, 93, 108, 165, 166, 168, 176, 177, 178, 181, 190, 195, 215, 221, 223, 268, 269, 871, 886], "nzero": [5, 34, 40, 41, 42, 45, 48, 50, 54, 55, 58, 59, 89, 93, 108, 176, 177, 178, 181, 190, 195, 223], "invert": [5, 21, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 89, 93, 103, 106, 107, 108, 109, 134, 155, 157, 160, 165, 176, 177, 178, 179, 180, 181, 190, 195, 201, 222, 223, 234, 236, 241, 283, 293, 296, 417, 420, 425, 474, 476, 477, 692, 729, 862, 871], "vector": [5, 15, 18, 19, 27, 34, 36, 41, 56, 108, 110, 130, 161, 174, 176, 177, 187, 194, 203, 204, 205, 206, 208, 209, 223, 244, 256, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 290, 297, 298, 341, 343, 347, 355, 356, 357, 360, 412, 415, 417, 422, 427, 429, 445, 449, 450, 451, 474, 476, 477, 479, 480, 514, 520, 527, 528, 530, 531, 532, 537, 538, 542, 560, 561, 572, 573, 574, 575, 577, 582, 589, 593, 602, 608, 616, 623, 631, 633, 640, 646, 706, 707, 708, 709, 710, 754, 786, 788, 790, 792, 793, 796, 805, 808, 812, 815, 817, 818, 837, 841, 865, 868, 871, 876, 886], "eigenlead": [5, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 58, 59, 60, 89, 93, 103, 106, 107, 108, 109, 165, 176, 177, 178, 180, 181, 190, 195, 222, 223, 234, 236, 868], "residu": [5, 28, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 55, 58, 59, 60, 70, 75, 89, 93, 165, 176, 177, 178, 180, 181, 182, 183, 190, 195, 204, 208, 222, 223, 234, 236, 300, 454, 474, 476, 477, 528, 777, 886], "explain": [5, 18, 28, 30, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 58, 59, 60, 89, 93, 136, 158, 159, 165, 176, 177, 178, 180, 181, 182, 190, 191, 195, 204, 222, 223, 234, 236, 273, 300, 411, 418, 474, 476, 477, 537, 538, 561, 575, 798, 845, 849, 868, 886], "97": [5, 11, 15, 19, 34, 41, 44, 47, 71, 80, 82, 100, 101, 102, 107, 108, 111, 113, 116, 155, 159, 165, 168, 189, 190, 194, 204, 207, 208, 209, 226, 227, 230, 231, 244, 432, 524, 570, 572, 593, 687, 861, 868, 886], "varianc": [5, 8, 14, 16, 28, 30, 31, 34, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 54, 55, 58, 59, 60, 70, 89, 93, 113, 165, 176, 177, 178, 179, 180, 181, 182, 190, 195, 199, 204, 211, 222, 223, 234, 236, 244, 273, 275, 293, 294, 295, 296, 297, 298, 420, 456, 474, 476, 477, 537, 538, 539, 561, 569, 688, 699, 700, 734, 737, 777, 798, 799, 841, 868, 886], "control": [5, 11, 19, 22, 26, 32, 33, 34, 38, 41, 42, 47, 48, 50, 60, 93, 108, 113, 119, 126, 133, 139, 148, 149, 155, 165, 167, 170, 171, 177, 178, 180, 181, 187, 190, 195, 200, 201, 202, 204, 205, 206, 209, 210, 217, 222, 223, 226, 234, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418, 419, 421, 422, 424, 427, 428, 430, 432, 436, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 461, 462, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 522, 523, 524, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 557, 561, 563, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 584, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 600, 601, 602, 605, 606, 607, 608, 612, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 650, 654, 655, 657, 658, 659, 660, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 693, 694, 695, 696, 697, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 722, 723, 724, 725, 728, 729, 732, 733, 734, 736, 737, 738, 739, 742, 743, 744, 749, 753, 754, 762, 768, 770, 773, 779, 780, 782, 785, 786, 787, 788, 789, 794, 797, 798, 799, 800, 804, 805, 807, 808, 810, 811, 812, 813, 817, 818, 819, 820, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 851, 862, 865, 867, 868, 886], "24807258e": 5, "11": [5, 9, 10, 11, 12, 13, 16, 19, 20, 28, 33, 34, 35, 45, 47, 49, 51, 56, 64, 70, 73, 74, 79, 80, 82, 90, 92, 94, 95, 99, 100, 102, 107, 108, 109, 111, 113, 119, 120, 122, 126, 136, 144, 156, 161, 165, 167, 168, 169, 170, 175, 178, 179, 180, 181, 182, 189, 190, 194, 195, 198, 201, 203, 208, 209, 210, 214, 215, 221, 222, 226, 227, 228, 230, 231, 235, 236, 241, 244, 255, 264, 265, 274, 277, 335, 368, 380, 432, 468, 479, 480, 490, 492, 495, 496, 519, 539, 561, 591, 593, 597, 617, 663, 666, 668, 692, 706, 784, 807, 844, 851, 861, 868], "55793898e": 5, "13115753e": 5, "945": [5, 6, 61, 66, 208, 231, 266, 267, 706, 792], "816": [5, 6, 231], "opm_data": [5, 6], "06": [6, 10, 20, 26, 35, 41, 44, 45, 46, 50, 52, 56, 59, 71, 75, 83, 84, 93, 99, 102, 105, 107, 154, 157, 173, 175, 178, 180, 182, 186, 201, 206, 208, 214, 226, 227, 228, 231, 233, 236, 244, 276, 360, 419, 474, 570, 841, 844], "271": [6, 13, 111, 165, 168, 184, 186, 226, 231], "execut": [6, 20, 25, 32, 56, 66, 84, 90, 101, 105, 129, 132, 135, 138, 147, 153, 154, 163, 170, 171, 173, 186, 193, 197, 198, 214, 220, 225, 233, 238, 243, 262, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 375, 380, 414, 421, 424, 427, 428, 454, 467, 469, 470, 471, 479, 480, 519, 522, 523, 534, 535, 544, 545, 561, 566, 573, 574, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 782, 784, 786, 789, 801, 807, 808, 810, 843, 844, 845, 848, 849, 868, 886], "auto_examples_dataset": 6, "08": [6, 34, 40, 42, 45, 50, 58, 59, 73, 83, 84, 90, 93, 102, 106, 108, 111, 150, 159, 165, 175, 176, 177, 178, 179, 182, 183, 194, 195, 201, 206, 208, 215, 220, 222, 223, 226, 228, 229, 230, 231, 244], "spm_faces_dataset_sgskip": [6, 7], "pipelin": [7, 8, 9, 10, 11, 12, 13, 15, 18, 108, 136, 160, 164, 165, 170, 171, 172, 194, 195, 199, 200, 204, 411, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 464, 562, 744, 852, 862, 863, 865, 886], "reconstruct": [7, 16, 53, 157, 158, 161, 162, 163, 164, 181, 185, 186, 190, 194, 198, 199, 204, 209, 236, 244, 261, 262, 264, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 293, 298, 303, 307, 308, 309, 312, 354, 360, 365, 366, 367, 390, 393, 419, 452, 463, 467, 469, 470, 471, 472, 473, 476, 513, 517, 519, 547, 561, 562, 571, 572, 582, 589, 593, 601, 610, 625, 628, 635, 637, 649, 654, 655, 669, 672, 683, 701, 702, 746, 754, 765, 770, 772, 782, 788, 793, 812, 817, 818, 836, 862, 865, 868, 874, 886], "scrambl": [7, 195, 862], "doe": [7, 28, 31, 55, 58, 59, 70, 71, 75, 79, 83, 111, 116, 126, 139, 140, 148, 150, 157, 159, 160, 161, 167, 177, 180, 181, 187, 188, 189, 191, 199, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 221, 223, 228, 230, 231, 234, 241, 244, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 275, 276, 278, 279, 280, 288, 297, 298, 302, 319, 332, 358, 361, 369, 370, 387, 441, 442, 443, 444, 445, 469, 479, 480, 499, 503, 527, 547, 550, 563, 576, 578, 585, 618, 622, 647, 652, 656, 706, 708, 709, 710, 741, 744, 749, 757, 792, 815, 845, 850, 861, 865, 867, 868, 871, 886], "quit": [7, 21, 126, 143, 149, 150, 161, 201, 202, 204, 209, 210, 215, 226, 227, 235, 561, 845, 863, 865], "so": [7, 10, 28, 31, 32, 38, 40, 44, 47, 63, 67, 70, 71, 75, 82, 92, 93, 94, 102, 103, 108, 113, 114, 126, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 179, 180, 181, 182, 183, 189, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 230, 231, 234, 235, 236, 240, 241, 256, 264, 265, 266, 267, 269, 271, 272, 274, 275, 276, 277, 278, 279, 280, 289, 290, 291, 298, 312, 334, 360, 367, 386, 390, 411, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 442, 443, 445, 446, 450, 479, 480, 498, 503, 528, 534, 547, 561, 562, 563, 571, 572, 583, 593, 594, 611, 623, 645, 652, 654, 693, 694, 696, 697, 744, 749, 754, 755, 763, 764, 788, 797, 799, 801, 807, 832, 841, 843, 845, 848, 850, 851, 852, 853, 861, 863, 865, 867, 868, 871, 886], "even": [7, 70, 74, 111, 127, 141, 154, 159, 165, 166, 167, 170, 171, 182, 189, 190, 198, 199, 201, 203, 204, 205, 206, 207, 211, 215, 217, 226, 241, 256, 264, 265, 266, 267, 308, 324, 377, 378, 379, 380, 382, 383, 384, 386, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 479, 480, 508, 561, 718, 815, 845, 853, 862, 868, 886], "fast": [7, 21, 44, 127, 150, 154, 190, 239, 241, 244, 264, 265, 266, 267, 363, 419, 428, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 519, 520, 561, 602, 708, 710, 725, 843, 865, 868, 886], "machin": [7, 18, 93, 94, 180, 195, 199, 200, 244, 250, 269, 282, 354, 572, 582, 593, 863, 886], "sever": [7, 70, 75, 80, 81, 113, 126, 144, 149, 150, 152, 154, 157, 158, 164, 165, 167, 168, 170, 171, 179, 180, 187, 188, 189, 190, 198, 200, 205, 206, 211, 215, 217, 218, 226, 234, 236, 259, 264, 265, 403, 446, 479, 480, 601, 709, 734, 737, 845, 848, 849, 850, 852, 857, 861, 862, 865, 866, 868, 871, 886], "alexandr": [7, 9, 10, 11, 12, 13, 15, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 87, 91, 95, 96, 99, 106, 107, 109, 110, 112, 116, 120, 124, 130, 131, 136, 158, 161, 179, 184, 195, 204, 228, 229, 230, 234, 235, 236, 240, 244, 266, 267, 354, 411, 476, 477, 529, 561, 860, 865, 867, 873, 886], "gramfort": [7, 9, 10, 11, 13, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 91, 95, 96, 99, 106, 107, 109, 110, 112, 116, 120, 124, 130, 131, 136, 158, 161, 179, 184, 195, 204, 228, 229, 230, 234, 235, 236, 240, 244, 266, 267, 354, 476, 477, 529, 561, 794, 860, 865, 867, 873, 886], "inria": [7, 9, 10, 11, 13, 18, 28, 29, 30, 38, 39, 40, 42, 46, 47, 48, 50, 52, 53, 59, 64, 91, 95, 96, 99, 106, 107, 109, 110, 116, 120, 124, 130, 131, 136, 158, 184, 228, 229, 230, 234, 235, 236, 240], "deni": [7, 11, 13, 16, 21, 26, 33, 42, 69, 78, 100, 108, 112, 113, 119, 120, 125, 131, 132, 150, 161, 195, 230, 231, 236, 244, 266, 267, 354, 529, 860, 865, 873, 886], "engemann": [7, 11, 13, 16, 21, 26, 33, 42, 69, 78, 100, 108, 112, 113, 119, 120, 125, 131, 132, 161, 195, 230, 231, 236, 244, 266, 267, 354, 529, 794, 860, 865, 873, 886], "spm_face": [7, 122, 170, 215, 862, 876], "ica": [7, 17, 20, 27, 74, 77, 83, 84, 87, 161, 164, 165, 198, 199, 200, 203, 206, 213, 214, 217, 244, 261, 264, 265, 266, 267, 269, 274, 312, 327, 328, 373, 415, 425, 452, 479, 480, 494, 555, 558, 576, 578, 579, 586, 587, 591, 605, 606, 620, 784, 797, 798, 799, 800, 801, 807, 826, 852, 865, 872, 875, 876, 886], "create_eog_epoch": [7, 171, 198, 200, 203, 204, 206, 574, 584, 863, 876, 886], "spm_path": 7, "spm_ctf_meg_example_fac": 7, "d_3d": 7, "downsampl": [7, 19, 108, 135, 144, 165, 194, 200, 202, 229, 256, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 410, 451, 452, 479, 480, 517, 582, 692, 706, 709, 813, 865, 886], "heavili": [7, 108, 156, 195, 289, 291, 744, 871], "advis": [7, 70, 188, 201, 256, 861, 868, 886], "real": [7, 32, 50, 91, 92, 150, 154, 155, 157, 159, 160, 201, 204, 205, 206, 207, 217, 221, 223, 228, 244, 297, 454, 479, 480, 522, 602, 709, 722, 732, 733, 734, 754, 852, 857, 874, 886], "jitter": [7, 167, 202, 479, 480, 865], "resampl": [7, 19, 21, 44, 75, 80, 81, 108, 135, 139, 145, 148, 150, 164, 170, 190, 194, 198, 201, 204, 206, 213, 214, 223, 234, 235, 236, 240, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 432, 446, 447, 449, 450, 452, 479, 480, 487, 494, 502, 558, 607, 706, 709, 710, 754, 784, 795, 812, 817, 826, 843, 863, 868, 875, 876, 883, 886], "npad": [7, 19, 75, 80, 81, 190, 194, 234, 235, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 451, 479, 480, 865], "auto": [7, 10, 15, 16, 19, 22, 31, 70, 74, 75, 76, 80, 81, 82, 89, 106, 112, 119, 120, 124, 146, 147, 155, 161, 164, 170, 190, 194, 201, 204, 207, 209, 228, 229, 230, 231, 234, 235, 256, 258, 261, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 305, 306, 312, 328, 341, 343, 347, 353, 354, 358, 359, 360, 365, 411, 413, 417, 418, 422, 423, 430, 432, 435, 440, 441, 442, 444, 445, 447, 449, 450, 451, 456, 474, 476, 477, 479, 480, 485, 487, 489, 491, 494, 495, 502, 506, 519, 524, 539, 558, 560, 561, 562, 570, 571, 572, 573, 576, 582, 583, 586, 593, 597, 611, 617, 636, 650, 706, 708, 709, 710, 754, 770, 771, 773, 778, 784, 786, 788, 790, 791, 793, 794, 797, 799, 801, 804, 806, 807, 808, 809, 810, 812, 814, 816, 817, 818, 839, 861, 862, 865, 886], "sfreq": [7, 8, 9, 14, 19, 21, 31, 63, 65, 68, 69, 70, 89, 91, 92, 93, 94, 108, 110, 113, 124, 126, 127, 135, 136, 143, 165, 167, 168, 171, 189, 190, 194, 200, 201, 202, 210, 211, 215, 216, 217, 221, 223, 241, 258, 259, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 283, 373, 413, 416, 417, 422, 423, 424, 435, 437, 439, 446, 447, 449, 479, 480, 597, 611, 698, 711, 712, 713, 722, 724, 725, 730, 732, 733, 734, 735, 787, 795, 871, 886], "5e": [7, 8, 9, 13, 31, 32, 34, 35, 40, 41, 45, 49, 59, 76, 108, 123, 140, 171, 182, 184, 195, 207, 215, 223, 264, 265, 274, 454, 479, 480, 784, 807], "major": [7, 320, 479, 845, 865, 867, 871, 874, 886], "n_compon": [7, 8, 9, 12, 15, 74, 76, 82, 87, 116, 165, 171, 195, 204, 411, 418, 419, 425, 561, 562, 576, 886], "max_it": [7, 74, 76, 82, 165, 204, 528, 561, 591, 671, 713, 724, 886], "random_st": [7, 8, 9, 10, 15, 40, 76, 82, 89, 91, 92, 93, 112, 116, 136, 165, 204, 222, 223, 476, 513, 561, 591, 610, 658, 659, 660, 669, 670, 672, 685, 886], "correl": [7, 12, 18, 22, 26, 44, 74, 102, 145, 161, 195, 203, 204, 209, 226, 227, 230, 244, 256, 269, 276, 342, 354, 360, 417, 418, 423, 561, 576, 593, 690, 695, 862, 865, 868, 886], "indic": [7, 13, 16, 22, 31, 47, 48, 69, 70, 80, 99, 139, 140, 141, 143, 144, 145, 148, 150, 154, 155, 159, 167, 168, 169, 174, 177, 187, 190, 194, 198, 199, 200, 202, 204, 205, 208, 209, 211, 215, 217, 218, 221, 223, 228, 231, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 310, 312, 313, 314, 324, 327, 329, 335, 354, 359, 369, 403, 411, 413, 417, 418, 419, 427, 432, 435, 440, 449, 450, 453, 479, 480, 487, 489, 491, 494, 495, 496, 502, 506, 537, 538, 552, 555, 557, 558, 560, 561, 562, 563, 564, 569, 571, 576, 577, 578, 579, 585, 589, 591, 592, 598, 599, 601, 602, 608, 617, 623, 624, 627, 636, 639, 645, 650, 674, 675, 679, 682, 686, 692, 693, 694, 696, 697, 698, 701, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 736, 737, 754, 767, 770, 771, 772, 774, 778, 784, 785, 786, 788, 790, 791, 793, 797, 798, 799, 801, 803, 805, 806, 808, 809, 814, 816, 834, 839, 841, 850, 867, 868, 871, 886], "eog_epoch": [7, 171, 198, 203, 579], "mrt31": 7, "2908": 7, "eog_ind": [7, 204, 561], "eog_scor": [7, 171, 204, 274], "find_bads_eog": [7, 171, 204, 274, 561, 886], "plot_scor": [7, 74, 82, 204, 561, 886], "plot_compon": [7, 76, 204, 561, 872, 886], "topograph": [7, 8, 16, 18, 19, 27, 121, 129, 132, 150, 195, 244, 266, 267, 269, 273, 274, 411, 418, 492, 557, 558, 561, 623, 706, 771, 778, 788, 793, 799, 806, 814, 816, 886], "compon": [7, 8, 12, 14, 15, 21, 27, 29, 30, 31, 34, 41, 42, 44, 45, 47, 59, 70, 74, 76, 77, 78, 79, 84, 86, 87, 93, 118, 123, 136, 149, 150, 161, 165, 171, 176, 177, 178, 180, 181, 183, 190, 195, 198, 199, 200, 201, 202, 203, 205, 206, 209, 210, 211, 217, 223, 234, 236, 244, 266, 267, 268, 270, 274, 297, 298, 312, 328, 354, 358, 359, 369, 370, 371, 380, 403, 404, 411, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 432, 450, 451, 454, 455, 456, 474, 476, 477, 479, 480, 494, 531, 534, 535, 537, 538, 539, 540, 545, 561, 562, 569, 571, 572, 575, 576, 581, 582, 591, 593, 709, 794, 797, 798, 799, 800, 801, 807, 852, 861, 862, 865, 868, 871, 872, 886], "saw": [7, 139, 141, 166, 167, 170, 198, 199, 200, 206, 215, 230], "2nd": [7, 150, 194, 198, 228, 231, 241, 244, 576, 647, 886], "ecg": [7, 71, 73, 76, 80, 81, 82, 89, 91, 92, 93, 108, 110, 126, 130, 139, 140, 141, 145, 148, 150, 166, 167, 168, 171, 188, 190, 199, 200, 202, 203, 205, 207, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 264, 265, 266, 267, 274, 311, 359, 373, 444, 479, 480, 490, 491, 494, 506, 558, 561, 573, 578, 579, 583, 586, 658, 659, 692, 706, 708, 709, 710, 784, 800, 805, 807, 841, 868, 871, 886], "too": [7, 27, 69, 77, 84, 126, 139, 141, 143, 149, 150, 156, 157, 160, 164, 171, 177, 180, 198, 199, 200, 201, 202, 203, 206, 208, 210, 217, 226, 228, 230, 241, 264, 265, 266, 267, 269, 312, 328, 342, 373, 432, 479, 480, 485, 495, 564, 569, 571, 572, 582, 592, 593, 611, 617, 754, 774, 816, 845, 865, 886], "dipolar": [7, 454, 561, 798], "plot_overlai": [7, 82, 204, 561, 886], "inspect": [7, 21, 28, 70, 82, 126, 140, 150, 155, 161, 190, 198, 209, 210, 256, 264, 265, 266, 267, 307, 309, 318, 332, 479, 480, 593, 601, 658, 659, 784, 788, 807, 857, 865], "clean": [7, 73, 74, 75, 83, 140, 143, 158, 165, 166, 171, 188, 199, 201, 203, 204, 205, 206, 210, 231, 241, 259, 264, 274, 479, 480, 492, 520, 561, 601, 616, 692, 798, 845, 865, 886], "default": [7, 21, 31, 43, 44, 74, 87, 102, 111, 113, 119, 126, 134, 136, 139, 141, 144, 145, 148, 149, 150, 155, 157, 161, 165, 166, 167, 168, 169, 170, 171, 177, 178, 187, 188, 190, 191, 199, 200, 202, 204, 205, 206, 207, 209, 212, 215, 216, 217, 218, 221, 226, 230, 231, 236, 239, 240, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 317, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 435, 436, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 461, 462, 463, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 598, 599, 600, 601, 602, 605, 606, 607, 608, 610, 612, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 669, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 687, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 728, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 749, 751, 753, 754, 757, 762, 763, 767, 768, 770, 771, 772, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 843, 844, 845, 849, 850, 861, 862, 865, 871, 886], "k": [7, 8, 9, 10, 11, 13, 14, 18, 19, 22, 28, 31, 38, 39, 41, 59, 65, 69, 70, 82, 96, 99, 103, 141, 142, 157, 159, 175, 180, 187, 194, 195, 201, 205, 216, 218, 230, 231, 239, 240, 241, 244, 261, 262, 264, 265, 266, 267, 270, 273, 275, 283, 288, 297, 300, 302, 411, 418, 474, 476, 477, 479, 480, 527, 528, 560, 561, 582, 625, 666, 687, 693, 694, 695, 697, 706, 708, 710, 722, 732, 741, 767, 771, 786, 792, 793, 796, 807, 809, 814, 815, 816, 841, 843, 845, 868, 871, 886], "append": [7, 8, 10, 16, 43, 44, 45, 47, 61, 68, 75, 79, 112, 136, 149, 171, 182, 194, 199, 204, 206, 210, 215, 226, 230, 231, 236, 258, 264, 265, 266, 267, 270, 479, 480, 561, 576, 582, 593, 651, 683, 706, 707, 708, 709, 710, 726, 845, 886], "covarari": 7, "noise_cov": [7, 11, 31, 34, 40, 41, 42, 45, 48, 49, 50, 51, 54, 55, 58, 59, 93, 108, 120, 151, 161, 171, 176, 177, 179, 181, 190, 204, 261, 264, 265, 266, 267, 274, 298, 300, 369, 370, 455, 474, 476, 477, 479, 480, 539, 561, 784, 788, 792, 794, 807, 871, 886], "shrunk": [7, 31, 34, 40, 41, 42, 45, 59, 120, 151, 161, 176, 182, 354], "visual": [7, 8, 13, 14, 15, 16, 32, 33, 35, 36, 41, 42, 45, 56, 57, 59, 60, 61, 69, 71, 73, 79, 86, 93, 100, 103, 104, 105, 112, 114, 115, 118, 119, 127, 129, 131, 133, 134, 136, 140, 142, 144, 146, 147, 150, 151, 152, 153, 154, 159, 161, 164, 165, 167, 170, 171, 174, 177, 178, 182, 185, 186, 190, 191, 195, 198, 200, 201, 202, 207, 209, 212, 213, 214, 215, 216, 217, 218, 227, 228, 230, 240, 241, 244, 256, 259, 262, 264, 265, 266, 267, 269, 271, 272, 274, 275, 277, 278, 279, 280, 307, 308, 309, 313, 341, 342, 343, 344, 349, 351, 352, 360, 363, 364, 417, 438, 440, 452, 454, 464, 479, 480, 494, 515, 519, 527, 528, 538, 540, 542, 556, 558, 561, 565, 581, 593, 601, 617, 619, 620, 623, 625, 628, 631, 633, 646, 655, 658, 659, 693, 698, 706, 708, 709, 722, 732, 733, 735, 736, 737, 738, 754, 759, 771, 777, 778, 784, 785, 787, 788, 789, 792, 795, 796, 797, 798, 799, 800, 801, 804, 805, 807, 821, 825, 826, 841, 842, 843, 846, 848, 849, 852, 857, 863, 865, 868, 869, 871, 876, 886], "dig": [7, 108, 117, 124, 135, 155, 156, 157, 158, 159, 165, 168, 169, 182, 183, 215, 221, 269, 306, 312, 342, 430, 486, 524, 770, 886], "montag": [7, 8, 19, 70, 82, 114, 124, 134, 135, 150, 158, 188, 189, 204, 221, 241, 264, 265, 266, 267, 269, 312, 315, 316, 318, 323, 325, 328, 330, 331, 332, 333, 334, 335, 336, 337, 365, 444, 463, 479, 480, 491, 588, 590, 594, 804, 816, 824, 841, 862, 868, 886], "It": [7, 10, 13, 31, 39, 47, 55, 60, 70, 71, 74, 89, 93, 94, 102, 113, 115, 116, 120, 139, 141, 143, 144, 148, 149, 150, 155, 156, 157, 158, 159, 165, 168, 169, 170, 171, 174, 176, 179, 187, 188, 189, 191, 195, 199, 200, 202, 203, 204, 205, 207, 208, 209, 212, 215, 216, 218, 221, 226, 228, 229, 231, 234, 236, 240, 241, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 278, 279, 280, 282, 287, 297, 298, 303, 312, 330, 341, 354, 359, 365, 411, 419, 420, 446, 454, 471, 474, 476, 477, 479, 480, 487, 494, 499, 509, 519, 522, 528, 534, 535, 539, 544, 545, 561, 565, 571, 582, 593, 594, 601, 607, 614, 618, 622, 627, 631, 633, 672, 678, 681, 695, 700, 706, 709, 722, 729, 732, 744, 754, 792, 797, 817, 830, 833, 837, 841, 843, 845, 848, 849, 850, 852, 857, 861, 862, 865, 867, 868, 871, 874, 886], "spm_dig_montag": 7, "trans_fnam": [7, 68, 80, 155, 177, 190], "spm_ctf_meg_example_faces1_3d_raw": 7, "map": [7, 8, 10, 16, 19, 23, 24, 25, 26, 27, 36, 40, 41, 43, 56, 58, 71, 76, 78, 86, 93, 104, 105, 106, 108, 114, 118, 121, 123, 127, 129, 133, 134, 135, 142, 143, 144, 145, 150, 155, 157, 159, 164, 165, 167, 170, 174, 177, 180, 181, 194, 195, 198, 199, 200, 201, 204, 205, 206, 210, 215, 221, 222, 224, 225, 226, 231, 234, 235, 236, 244, 258, 261, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 288, 290, 297, 310, 312, 324, 340, 360, 363, 364, 371, 411, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 432, 435, 438, 440, 452, 456, 464, 474, 475, 476, 477, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 516, 519, 520, 527, 528, 539, 552, 557, 558, 561, 562, 570, 576, 581, 614, 620, 623, 625, 626, 630, 631, 640, 641, 646, 653, 655, 660, 666, 671, 674, 687, 689, 690, 693, 695, 699, 700, 706, 707, 708, 709, 710, 715, 737, 754, 771, 773, 778, 781, 782, 784, 788, 789, 793, 799, 806, 807, 812, 813, 814, 815, 816, 817, 818, 824, 841, 843, 845, 861, 871, 874, 886], "make_field_map": [7, 123, 149, 266, 267, 789, 876, 886], "plot_field": [7, 123, 149, 266, 267, 886], "170": [7, 80, 83, 122, 136, 168, 182, 183, 184, 190, 201, 204, 230, 231, 244], "daat": 7, "plot_whit": [7, 92, 120, 151, 161, 176, 264, 265, 266, 267, 479, 480, 784, 788, 807, 865, 886], "oct": [7, 11, 22, 24, 28, 29, 31, 35, 38, 39, 40, 41, 42, 43, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 68, 89, 91, 92, 93, 94, 103, 106, 107, 108, 109, 123, 130, 155, 157, 158, 159, 165, 171, 176, 177, 178, 180, 181, 190, 195, 222, 223, 234, 236, 256, 271, 275, 277, 279, 410, 654, 812, 886], "spm_": 7, "s_dspm_invers": 7, "comment": [7, 46, 61, 114, 126, 148, 149, 151, 170, 171, 188, 207, 221, 240, 257, 263, 264, 265, 266, 267, 270, 274, 335, 469, 622, 627, 706, 709, 739, 778, 792, 839, 841, 843, 845, 868, 886], "3d": [7, 27, 31, 35, 38, 40, 52, 59, 60, 95, 96, 121, 126, 129, 134, 135, 141, 150, 155, 157, 159, 160, 170, 174, 175, 184, 189, 195, 205, 209, 226, 229, 231, 256, 262, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 290, 312, 313, 325, 338, 366, 419, 449, 450, 479, 480, 500, 510, 519, 572, 582, 593, 687, 693, 694, 754, 755, 756, 761, 763, 764, 765, 770, 775, 782, 789, 804, 810, 812, 813, 817, 819, 820, 822, 824, 825, 841, 844, 845, 849, 857, 862, 863, 866, 886], "both": [7, 19, 31, 32, 33, 38, 40, 41, 45, 47, 51, 58, 59, 69, 70, 71, 74, 86, 89, 93, 98, 108, 113, 131, 139, 140, 148, 149, 150, 161, 165, 167, 168, 169, 170, 171, 174, 176, 177, 179, 180, 181, 182, 188, 189, 190, 191, 195, 198, 200, 201, 202, 203, 204, 205, 206, 209, 210, 215, 223, 228, 230, 234, 235, 236, 239, 240, 241, 244, 259, 260, 263, 264, 265, 266, 267, 271, 272, 274, 275, 277, 278, 279, 280, 287, 297, 298, 306, 315, 354, 358, 359, 360, 369, 370, 371, 411, 418, 430, 435, 452, 454, 455, 474, 476, 477, 479, 480, 498, 519, 539, 561, 564, 571, 576, 578, 607, 610, 623, 624, 628, 633, 655, 656, 660, 669, 687, 689, 693, 694, 696, 697, 706, 708, 709, 751, 754, 767, 777, 778, 785, 790, 791, 794, 797, 812, 817, 836, 841, 845, 851, 865, 866, 867, 868, 871, 886], "ven": [7, 50], "save_imag": [7, 234, 236, 754], "dspm_map": 7, "png": [7, 47, 114, 171, 234, 236, 256, 274, 886], "classifi": [8, 9, 10, 11, 13, 17, 20, 27, 195, 209, 264, 266, 267, 269, 415, 426, 428, 429, 561, 582, 620, 664, 665, 886], "featur": [8, 11, 15, 18, 19, 27, 97, 101, 141, 149, 170, 171, 194, 195, 206, 209, 218, 221, 226, 231, 241, 244, 266, 267, 271, 272, 274, 275, 278, 279, 280, 411, 414, 417, 418, 420, 421, 423, 426, 444, 479, 480, 561, 582, 593, 616, 690, 691, 778, 788, 790, 812, 817, 819, 823, 845, 852, 853, 862, 864, 865, 866, 867, 868, 886], "extract": [8, 9, 18, 21, 24, 27, 36, 38, 41, 56, 61, 67, 73, 74, 79, 82, 99, 111, 112, 122, 126, 127, 134, 135, 140, 141, 143, 148, 150, 157, 158, 164, 165, 168, 170, 180, 187, 189, 190, 195, 198, 202, 204, 205, 206, 212, 213, 214, 216, 221, 227, 228, 229, 236, 244, 256, 257, 264, 266, 269, 270, 271, 272, 275, 277, 278, 279, 280, 307, 341, 342, 343, 344, 345, 346, 349, 351, 352, 362, 371, 386, 411, 415, 418, 419, 435, 445, 452, 479, 482, 487, 494, 499, 515, 527, 528, 542, 561, 565, 593, 618, 622, 623, 627, 633, 678, 681, 753, 777, 796, 841, 845, 861, 862, 868, 871, 886], "en": [8, 19, 195, 244, 255, 873, 886], "wikipedia": [8, 195, 226, 244], "org": [8, 15, 32, 33, 70, 71, 82, 87, 112, 113, 114, 115, 119, 126, 134, 135, 195, 228, 230, 231, 234, 240, 244, 271, 275, 279, 300, 380, 403, 404, 419, 450, 562, 651, 690, 735, 738, 750, 812, 845, 860, 865, 886], "wiki": [8, 154, 195, 271, 275, 279, 561, 750, 812, 841, 861], "common_spatial_pattern": [8, 195], "eegbci": [8, 9, 111, 158, 170, 204, 876, 886], "document": [8, 15, 32, 63, 87, 126, 134, 135, 142, 148, 150, 159, 165, 167, 168, 169, 171, 176, 180, 188, 201, 202, 204, 206, 209, 215, 217, 218, 221, 240, 244, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 329, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 416, 417, 421, 422, 424, 427, 428, 430, 432, 436, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 461, 462, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 522, 523, 524, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 557, 561, 562, 563, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 584, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 600, 601, 602, 605, 606, 607, 608, 612, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 650, 654, 655, 657, 658, 659, 660, 663, 668, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 693, 694, 695, 696, 697, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 724, 725, 728, 729, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 749, 753, 754, 762, 763, 770, 779, 782, 786, 787, 788, 789, 792, 794, 797, 798, 799, 804, 805, 807, 808, 810, 811, 812, 813, 817, 818, 819, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 849, 850, 852, 860, 861, 862, 864, 865, 868, 886], "physionet": [8, 136, 204, 244, 380, 403, 404, 862, 874, 886], "martin": [8, 10, 35, 47, 103, 244, 411, 860, 862, 868, 886], "billing": [8, 886], "tugraz": 8, "sklearn": [8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 116, 136, 170, 194, 195, 204, 226, 354, 359, 412, 414, 417, 420, 421, 425, 428, 750, 844, 845, 886], "discriminant_analysi": [8, 9], "lineardiscriminantanalysi": [8, 9], "model_select": [8, 9, 10, 12, 15, 16, 19, 354, 359, 428, 886], "shufflesplit": 8, "cross_val_scor": [8, 9], "events_from_annot": [8, 9, 111, 127, 134, 135, 136, 143, 167, 210, 241, 258, 283, 487, 494, 876, 886], "make_standard_montag": [8, 19, 70, 82, 124, 158, 169, 189, 241, 264, 265, 266, 267, 269, 323, 330, 479, 480, 491, 503, 876, 886], "concatenate_raw": [8, 9, 10, 80, 111, 190, 264, 265, 266, 267, 361, 362, 479, 480, 582, 593, 862, 876, 886], "read_raw_edf": [8, 9, 82, 111, 136, 158, 188, 204, 485, 487, 502, 862, 868, 872, 876, 886], "classif": [8, 9, 10, 11, 12, 15, 51, 137, 138, 145, 161, 164, 195, 244, 258, 264, 269, 300, 403, 412, 440, 494, 611, 708, 787, 862, 886], "start": [8, 22, 29, 33, 34, 40, 61, 65, 70, 81, 92, 95, 126, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 155, 156, 157, 159, 160, 164, 165, 166, 167, 169, 172, 173, 176, 177, 187, 195, 199, 200, 202, 203, 204, 205, 207, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 227, 228, 239, 240, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 283, 284, 285, 296, 335, 341, 342, 343, 344, 354, 357, 359, 411, 417, 418, 423, 435, 451, 452, 453, 469, 470, 478, 479, 480, 485, 487, 494, 498, 505, 508, 521, 527, 531, 550, 561, 564, 568, 573, 574, 578, 579, 582, 583, 584, 585, 586, 588, 607, 623, 671, 683, 693, 694, 696, 697, 706, 707, 709, 711, 712, 713, 714, 715, 716, 717, 741, 754, 759, 778, 780, 787, 793, 798, 800, 801, 807, 841, 843, 845, 847, 848, 849, 850, 853, 856, 861, 864, 865, 868, 869, 871, 872, 886], "cue": [8, 134], "feet": [8, 9, 111, 380], "standard_1005": [8, 70, 82, 158, 169, 204], "set_montag": [8, 15, 19, 67, 70, 82, 124, 127, 134, 135, 150, 158, 169, 181, 188, 189, 204, 221, 241, 264, 265, 266, 267, 269, 444, 479, 480, 491, 503, 868, 886], "skip_by_annot": [8, 9, 264, 265, 266, 267, 479, 480, 582, 593, 886], "t1": [8, 9, 30, 44, 50, 111, 155, 156, 157, 158, 159, 160, 175, 256, 277, 279, 280, 303, 307, 308, 309, 320, 390, 471, 479, 589, 655, 772, 818, 841, 862, 868, 886], "t2": [8, 9, 111, 320, 479, 886], "train": [8, 10, 11, 13, 15, 16, 19, 87, 136, 194, 195, 411, 412, 413, 414, 415, 416, 418, 419, 421, 422, 423, 424, 428, 561, 562, 797, 845, 861, 862, 886], "epochs_train": [8, 136], "edf": [8, 9, 82, 111, 136, 158, 191, 204, 444, 479, 480, 487, 494, 502, 611, 862, 868, 872, 886], "eegmmidb": [8, 9, 82, 111, 158, 204, 380, 886], "s001": [8, 9, 82, 111, 158, 204], "s001r06": [8, 9, 111, 158], "19999": [8, 111, 158, 204], "124": [8, 33, 35, 111, 138, 158, 168, 204, 208, 226, 231, 244, 389], "994": [8, 9, 70, 82, 111, 158, 204], "s001r10": [8, 9, 111], "s001r14": [8, 9, 111], "bandpass": [8, 9, 12, 13, 14, 15, 16, 18, 21, 34, 42, 72, 76, 81, 87, 112, 114, 120, 132, 135, 140, 143, 145, 171, 195, 198, 200, 203, 204, 206, 210, 211, 231, 241, 264, 265, 266, 267, 413, 419, 422, 446, 447, 449, 479, 480, 597, 708, 710, 807, 808, 886], "265": [8, 9, 80, 81, 111, 168, 190, 208, 226, 231, 244, 663, 668], "656": [8, 9, 25, 42, 56, 231], "64": [8, 9, 12, 13, 19, 21, 26, 32, 33, 34, 35, 41, 45, 46, 47, 50, 58, 59, 80, 81, 82, 100, 102, 107, 111, 113, 136, 142, 157, 158, 168, 169, 170, 171, 175, 177, 180, 183, 184, 189, 190, 194, 195, 204, 208, 223, 226, 227, 230, 231, 244, 261, 264, 265, 266, 267, 270, 273, 275, 411, 418, 477, 479, 480, 501, 534, 535, 544, 545, 560, 561, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 851, 862, 868, 872], "annot": [8, 9, 27, 38, 41, 44, 47, 68, 75, 77, 82, 84, 89, 93, 94, 111, 112, 125, 126, 127, 134, 135, 143, 145, 150, 159, 164, 165, 170, 172, 174, 180, 188, 189, 190, 191, 194, 198, 204, 207, 212, 218, 219, 220, 222, 259, 264, 265, 266, 267, 269, 283, 344, 345, 359, 363, 388, 440, 478, 479, 480, 481, 487, 492, 494, 498, 500, 508, 520, 561, 563, 564, 565, 566, 567, 568, 578, 579, 582, 583, 584, 593, 594, 611, 620, 628, 644, 647, 710, 754, 770, 796, 799, 807, 808, 822, 823, 836, 841, 862, 863, 868, 876, 886], "descript": [8, 9, 111, 127, 134, 135, 136, 139, 141, 143, 150, 167, 168, 169, 187, 189, 190, 200, 210, 215, 216, 217, 221, 226, 258, 264, 265, 266, 267, 269, 273, 283, 322, 323, 355, 356, 359, 440, 479, 480, 481, 498, 520, 561, 564, 578, 579, 583, 617, 706, 709, 710, 799, 808, 841, 845, 862, 871, 886], "801": [8, 13, 83, 84, 143, 240], "discrim": 8, "mont": [8, 244], "carlo": [8, 244, 886], "cross": [8, 9, 10, 11, 12, 15, 16, 19, 27, 32, 33, 34, 36, 44, 56, 78, 86, 104, 105, 118, 120, 121, 129, 136, 161, 165, 176, 194, 195, 199, 204, 206, 209, 222, 223, 230, 244, 261, 264, 266, 268, 269, 275, 276, 288, 290, 297, 298, 299, 354, 359, 360, 364, 371, 411, 414, 417, 423, 427, 428, 432, 452, 479, 527, 537, 538, 539, 540, 543, 558, 561, 571, 578, 582, 583, 593, 614, 620, 623, 625, 633, 707, 711, 712, 713, 714, 715, 716, 717, 723, 754, 780, 798, 841, 857, 862, 865, 874, 886], "epochs_data": [8, 413, 416, 420, 886], "get_data": [8, 9, 10, 12, 13, 14, 16, 18, 21, 70, 72, 75, 83, 95, 96, 99, 113, 114, 126, 132, 136, 139, 140, 145, 148, 165, 166, 195, 202, 205, 227, 231, 239, 240, 241, 264, 265, 266, 267, 479, 480, 707, 708, 710, 868, 886], "epochs_data_train": 8, "cv": [8, 9, 10, 11, 12, 15, 16, 19, 195, 354, 359, 427, 428, 886], "test_siz": 8, "cv_split": 8, "split": [8, 10, 11, 15, 16, 19, 58, 67, 87, 93, 126, 144, 158, 165, 194, 195, 206, 222, 227, 236, 244, 264, 265, 266, 267, 270, 271, 272, 275, 278, 279, 280, 354, 359, 428, 470, 478, 479, 480, 500, 503, 534, 535, 593, 683, 692, 707, 735, 738, 754, 780, 812, 817, 871, 886], "assembl": [8, 9, 230, 539, 698, 863, 886], "lda": [8, 9], "log": [8, 9, 12, 21, 33, 82, 120, 128, 141, 161, 176, 199, 201, 204, 206, 210, 218, 228, 240, 241, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418, 421, 422, 424, 427, 428, 430, 432, 436, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 461, 462, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 522, 523, 524, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 557, 561, 563, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 584, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 600, 601, 602, 605, 606, 607, 608, 612, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 650, 651, 652, 654, 655, 657, 658, 659, 660, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 693, 694, 695, 696, 697, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 722, 723, 724, 725, 728, 729, 732, 733, 734, 736, 737, 738, 739, 742, 743, 744, 749, 752, 753, 754, 762, 770, 779, 782, 783, 786, 787, 788, 789, 794, 795, 797, 798, 799, 802, 804, 805, 807, 808, 810, 811, 812, 813, 814, 817, 818, 819, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 865, 876, 886], "norm_trac": [8, 9, 195, 411, 886], "scikit": [8, 9, 16, 18, 19, 116, 195, 204, 415, 417, 419, 420, 421, 422, 424, 425, 426, 429, 561, 863, 886], "learn": [8, 9, 16, 18, 19, 21, 70, 116, 142, 160, 161, 165, 195, 197, 199, 200, 204, 244, 250, 354, 415, 417, 419, 420, 421, 422, 424, 425, 426, 428, 429, 561, 591, 845, 852, 862, 863, 865, 886], "clf": [8, 9, 10, 11, 12, 13, 15, 18, 195, 426, 886], "class_bal": 8, "accuraci": [8, 10, 15, 33, 80, 136, 244, 261, 264, 265, 266, 267, 273, 370, 371, 411, 417, 418, 423, 432, 454, 479, 480, 539, 560, 561, 575, 576, 588, 663, 668, 706, 708, 710, 734, 737, 744, 771, 786, 793, 797, 806, 809, 814, 816, 871, 886], "chanc": [8, 9, 10, 11, 195, 867, 886], "fit_transform": [8, 9, 10, 14, 18, 195, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 562], "plot_pattern": [8, 12, 195, 411, 418, 886], "ch_type": [8, 14, 22, 26, 42, 63, 79, 81, 86, 99, 111, 113, 119, 123, 124, 130, 140, 141, 144, 148, 149, 150, 165, 169, 175, 176, 189, 204, 209, 210, 218, 221, 231, 239, 240, 261, 264, 265, 266, 267, 318, 319, 373, 411, 418, 479, 480, 506, 519, 560, 561, 566, 576, 582, 646, 650, 706, 708, 709, 710, 785, 786, 793, 797, 809, 810, 814, 816, 886], "au": [8, 212, 261, 264, 265, 266, 267, 273, 373, 411, 418, 479, 480, 581, 706, 708, 710, 786, 793, 806, 814], "7e": [8, 9, 32, 35, 48, 49, 54, 55, 58, 70, 93, 120, 149, 151, 161, 171, 177, 178, 181, 182, 184, 190, 195, 199, 222], "8e": [8, 9, 32, 35, 49, 74, 108, 120, 161, 171, 176, 179, 182, 184, 190, 195], "09": [8, 9, 20, 21, 42, 43, 44, 45, 49, 56, 73, 75, 80, 81, 102, 115, 119, 120, 122, 129, 157, 158, 159, 161, 174, 176, 179, 184, 208, 220, 227, 228, 230, 231, 244, 270, 275, 524, 600, 687, 735, 738], "0001": [8, 9, 32, 78, 86, 118, 123, 149, 178, 199, 476, 477], "00012": [8, 9], "6e": [8, 9, 34, 42, 46, 118, 120, 151, 171, 176, 182, 184, 195], "00011": [8, 9], "933333": 8, "533333": 8, "00025": 8, "00026": 8, "9e": [8, 9, 21, 42, 49, 86, 123, 149, 151, 161, 176, 179, 181, 182, 183, 184, 195, 222], "w_length": 8, "int": [8, 11, 19, 31, 68, 72, 89, 92, 94, 108, 113, 126, 142, 148, 159, 168, 170, 190, 194, 201, 202, 211, 215, 221, 223, 236, 241, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 311, 312, 314, 316, 317, 327, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 421, 422, 423, 424, 427, 428, 430, 432, 433, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 461, 462, 464, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 600, 601, 602, 605, 606, 607, 608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 650, 652, 654, 655, 656, 657, 658, 659, 660, 669, 670, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 689, 692, 693, 694, 695, 696, 697, 698, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 723, 724, 725, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 749, 753, 754, 762, 763, 767, 770, 771, 772, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 792, 793, 794, 797, 798, 799, 800, 801, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 886], "w_step": 8, "w_start": 8, "shape": [8, 16, 19, 22, 31, 41, 47, 50, 53, 63, 65, 70, 96, 113, 114, 119, 135, 136, 139, 145, 148, 156, 157, 159, 169, 174, 180, 187, 194, 195, 201, 215, 221, 226, 227, 228, 230, 231, 234, 235, 236, 239, 240, 241, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 287, 297, 298, 299, 304, 305, 306, 312, 313, 314, 318, 321, 325, 329, 339, 344, 348, 349, 350, 351, 352, 363, 365, 368, 369, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 435, 439, 440, 445, 447, 449, 452, 453, 454, 455, 456, 469, 470, 472, 473, 474, 476, 479, 480, 482, 490, 504, 515, 517, 519, 521, 526, 536, 537, 538, 540, 543, 544, 556, 560, 561, 562, 564, 565, 566, 568, 569, 570, 571, 572, 576, 582, 585, 590, 591, 593, 598, 599, 607, 608, 617, 619, 620, 636, 639, 642, 643, 644, 645, 655, 656, 661, 662, 663, 664, 665, 666, 667, 668, 673, 674, 683, 685, 686, 687, 691, 692, 693, 694, 695, 696, 697, 704, 706, 707, 708, 709, 710, 711, 712, 713, 718, 721, 722, 724, 725, 729, 731, 732, 733, 734, 735, 736, 737, 741, 742, 743, 744, 745, 747, 753, 754, 757, 758, 759, 769, 770, 771, 773, 774, 775, 778, 784, 785, 786, 787, 788, 790, 793, 794, 796, 797, 799, 800, 804, 806, 808, 809, 810, 812, 814, 815, 816, 817, 818, 822, 824, 831, 834, 839, 841, 852, 861, 868, 886], "scores_window": 8, "train_idx": 8, "test_idx": 8, "y_train": [8, 136, 194], "y_test": [8, 136, 194], "x_train": [8, 194], "x_test": [8, 194], "slide": [8, 12, 21, 155, 241, 274, 733, 734, 736, 737], "score_this_window": 8, "n": [8, 10, 43, 45, 70, 82, 92, 98, 108, 113, 136, 140, 143, 148, 150, 156, 159, 169, 171, 174, 187, 201, 204, 205, 206, 207, 215, 221, 223, 226, 228, 230, 231, 241, 244, 256, 258, 259, 262, 263, 264, 265, 266, 267, 270, 271, 272, 275, 276, 278, 279, 280, 282, 312, 321, 340, 350, 351, 352, 355, 356, 357, 360, 368, 380, 403, 404, 426, 432, 435, 446, 448, 469, 479, 480, 500, 543, 560, 561, 565, 568, 578, 579, 582, 593, 641, 666, 679, 680, 681, 682, 686, 691, 706, 709, 718, 719, 722, 732, 733, 734, 736, 737, 754, 757, 758, 773, 788, 795, 812, 817, 818, 824, 841, 853, 862, 865, 868, 872, 886], "w_time": [8, 9], "axvlin": [8, 10, 11, 13, 19, 45, 111, 126, 143, 159, 195, 209], "linestyl": [8, 9, 11, 21, 96, 110, 111, 112, 126, 149, 195, 201, 205, 210, 231, 722, 732, 778, 802, 886], "color": [8, 9, 10, 11, 12, 13, 19, 21, 22, 38, 39, 45, 47, 48, 49, 50, 54, 55, 59, 70, 80, 81, 95, 96, 100, 103, 111, 112, 113, 114, 115, 119, 126, 131, 132, 134, 135, 136, 140, 141, 143, 148, 149, 150, 155, 159, 165, 167, 169, 170, 171, 174, 175, 176, 177, 180, 182, 184, 194, 195, 198, 199, 201, 202, 205, 209, 210, 216, 217, 218, 223, 231, 236, 239, 240, 241, 260, 261, 262, 264, 265, 266, 267, 270, 271, 272, 273, 275, 277, 278, 279, 280, 369, 411, 418, 463, 464, 469, 470, 479, 480, 560, 561, 626, 627, 706, 708, 710, 722, 732, 754, 763, 767, 769, 770, 771, 773, 776, 778, 781, 782, 783, 784, 785, 786, 787, 788, 790, 792, 793, 795, 796, 797, 802, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 820, 835, 836, 841, 886], "axhlin": [8, 9, 10, 11, 13, 19, 21, 80, 81, 111, 112, 143, 159, 195, 241, 561, 800], "xlabel": [8, 9, 15, 16, 19, 22, 28, 29, 37, 39, 41, 53, 58, 68, 72, 81, 89, 92, 96, 106, 107, 109, 113, 126, 136, 150, 159, 176, 179, 180, 194, 201, 210, 211, 223, 226, 228, 236, 240, 241, 722, 732, 886], "ylabel": [8, 9, 15, 16, 19, 22, 28, 29, 37, 39, 41, 53, 58, 68, 69, 72, 81, 89, 92, 96, 106, 107, 109, 126, 136, 150, 159, 176, 179, 180, 194, 201, 206, 210, 211, 223, 226, 228, 236, 240, 241, 722, 732], "legend": [8, 9, 10, 11, 12, 16, 19, 21, 22, 28, 37, 38, 39, 41, 45, 68, 70, 95, 96, 109, 110, 126, 136, 143, 144, 149, 161, 165, 171, 179, 194, 195, 210, 215, 216, 236, 240, 241, 264, 265, 266, 267, 722, 732, 754, 767, 777, 778, 784, 787, 792, 886], "loc": [8, 10, 16, 37, 39, 70, 111, 122, 126, 135, 139, 142, 143, 144, 168, 175, 179, 182, 210, 240, 269, 330, 604, 722, 732, 777, 824, 868, 871], "zoltan": [8, 195, 244, 411], "kole": [8, 195, 244, 411], "quantit": [8, 161, 195, 244, 561, 865, 867], "abnorm": [8, 195, 244], "clinic": [8, 70, 71, 78, 111, 150, 195, 199, 203, 204, 244, 528, 560, 561, 569, 570, 576, 593, 608, 735, 738, 862, 868], "electroencephalographi": [8, 58, 71, 78, 111, 150, 195, 199, 203, 244, 275, 560, 570, 608, 868], "neurophysiologi": [8, 70, 71, 78, 111, 150, 195, 199, 203, 204, 244, 560, 561, 569, 570, 576, 608, 735, 738, 868], "79": [8, 15, 16, 19, 35, 41, 45, 47, 80, 102, 107, 111, 113, 118, 156, 157, 168, 175, 180, 183, 195, 208, 226, 227, 230, 231, 244, 403, 431], "440": [8, 80, 108, 195, 231, 244], "447": [8, 195, 231, 244], "1991": [8, 195, 244, 411], "1016": [8, 12, 13, 18, 19, 21, 35, 42, 44, 59, 70, 71, 74, 75, 78, 93, 100, 111, 112, 118, 120, 125, 143, 150, 154, 161, 179, 195, 199, 201, 203, 204, 208, 211, 226, 227, 231, 244, 266, 267, 270, 275, 276, 297, 354, 360, 389, 415, 417, 418, 419, 429, 474, 477, 528, 529, 539, 543, 560, 561, 569, 570, 575, 576, 597, 600, 608, 663, 666, 668, 693, 694, 696, 697, 699, 700, 720, 722, 732, 735, 736, 738, 771, 860, 862, 865, 868], "0013": [8, 71, 78, 111, 150, 195, 199, 203, 244, 560, 570, 608, 868], "4694": [8, 71, 78, 111, 150, 195, 199, 203, 244, 560, 570, 608, 868], "91": [8, 13, 19, 26, 35, 41, 45, 47, 50, 71, 78, 79, 107, 108, 111, 113, 116, 150, 155, 157, 161, 168, 175, 180, 181, 189, 194, 195, 199, 206, 207, 208, 209, 210, 226, 227, 229, 230, 231, 244, 335], "90163": [8, 195, 244], "gerwin": [8, 204, 244, 380, 862], "schalk": [8, 204, 244, 380, 862], "denni": [8, 204, 244, 380, 862], "mcfarland": [8, 204, 244, 380, 862], "thilo": [8, 204, 244, 380, 862], "hinterberg": [8, 204, 244, 380, 862], "niel": [8, 204, 244, 380, 862], "birbaum": [8, 204, 244, 380, 862], "jonathan": [8, 100, 204, 227, 244, 380, 394, 862, 886], "wolpaw": [8, 204, 244, 380, 862], "bci2000": [8, 204, 244, 380, 862], "bci": [8, 15, 87, 111, 158, 195, 204, 244, 380, 562, 862, 874, 886], "ieee": [8, 15, 40, 46, 51, 71, 82, 83, 87, 116, 136, 143, 161, 179, 195, 204, 239, 244, 264, 265, 266, 267, 297, 298, 300, 354, 380, 404, 411, 435, 476, 477, 479, 480, 561, 562, 570, 601, 708, 710, 725, 735, 738, 861, 862, 865, 868], "transact": [8, 15, 51, 71, 83, 87, 116, 136, 161, 179, 195, 204, 239, 244, 264, 265, 266, 267, 297, 298, 354, 380, 404, 411, 476, 479, 480, 528, 561, 562, 570, 601, 708, 710, 725, 861, 862, 865, 868], "biomed": [8, 15, 71, 83, 87, 116, 136, 179, 188, 195, 204, 223, 244, 255, 297, 298, 380, 404, 411, 561, 562, 570, 601, 861, 862, 868, 873], "engin": [8, 15, 71, 82, 83, 87, 116, 179, 195, 204, 205, 206, 223, 244, 297, 298, 380, 404, 411, 528, 561, 562, 570, 601, 845, 851, 861, 862, 868], "1034": [8, 18, 20, 195, 204, 244, 380, 659, 862], "1043": [8, 168, 204, 244, 380, 862], "2004": [8, 70, 204, 244, 354, 380, 569, 666, 862, 868], "1109": [8, 15, 40, 46, 51, 71, 82, 83, 87, 116, 136, 143, 161, 179, 195, 204, 239, 244, 264, 265, 266, 267, 297, 298, 300, 354, 380, 404, 411, 435, 476, 477, 479, 480, 561, 562, 570, 601, 708, 710, 725, 861, 862, 865, 868], "tbme": [8, 15, 71, 83, 87, 116, 195, 204, 244, 380, 411, 561, 562, 570, 601, 861, 862], "827072": [8, 204, 244, 380, 862], "ari": [8, 136, 204, 244, 380, 403, 404, 852, 862, 886], "l": [8, 19, 44, 49, 98, 125, 126, 136, 143, 159, 171, 187, 194, 204, 207, 209, 211, 231, 234, 240, 241, 244, 255, 256, 276, 360, 380, 403, 404, 417, 528, 561, 569, 666, 735, 738, 772, 778, 799, 851, 860, 862, 868, 873, 886], "goldberg": [8, 136, 204, 244, 380, 403, 404, 862], "lui": [8, 136, 204, 244, 380, 403, 404, 862], "amar": [8, 136, 204, 244, 380, 403, 404, 862], "leon": [8, 136, 204, 244, 380, 403, 404, 862], "glass": [8, 31, 35, 40, 44, 59, 60, 136, 180, 204, 244, 272, 278, 279, 280, 380, 403, 404, 813, 817, 818, 862], "jeffrei": [8, 136, 204, 244, 380, 403, 404, 528, 862], "hausdorff": [8, 136, 204, 244, 380, 403, 404, 862], "plamen": [8, 136, 204, 244, 380, 403, 404, 862], "ivanov": [8, 136, 204, 244, 380, 403, 404, 862], "roger": [8, 10, 136, 204, 244, 380, 403, 404, 862], "joseph": [8, 136, 204, 244, 380, 403, 404, 862], "mietu": [8, 136, 204, 244, 380, 403, 404, 862], "georg": [8, 136, 204, 211, 244, 380, 403, 404, 575, 862, 886], "moodi": [8, 136, 204, 244, 380, 403, 404, 862], "chung": [8, 136, 204, 244, 380, 403, 404, 862], "kang": [8, 136, 204, 244, 380, 403, 404, 862], "peng": [8, 136, 204, 244, 380, 403, 404, 862], "h": [8, 95, 100, 111, 126, 136, 201, 203, 204, 217, 244, 256, 258, 264, 265, 321, 380, 403, 404, 447, 450, 560, 608, 666, 688, 704, 719, 784, 795, 860, 861, 862, 868, 886], "eugen": [8, 136, 204, 244, 380, 403, 404, 862], "stanlei": [8, 136, 204, 244, 380, 403, 404, 862], "physiobank": [8, 136, 204, 244, 380, 403, 404, 862], "physiotoolkit": [8, 136, 204, 244, 380, 403, 404, 862], "research": [8, 67, 70, 136, 140, 143, 150, 154, 167, 198, 204, 212, 223, 241, 244, 255, 380, 403, 404, 529, 597, 688, 853, 860, 862, 864, 873], "resourc": [8, 122, 136, 143, 202, 204, 244, 380, 403, 404, 844, 862, 869, 874], "complex": [8, 32, 37, 113, 134, 136, 191, 204, 226, 244, 264, 265, 266, 267, 290, 380, 403, 404, 424, 479, 480, 532, 658, 709, 724, 725, 733, 734, 736, 841, 845, 862, 871, 886], "circul": [8, 136, 204, 244, 380, 403, 404, 862], "2000": [8, 10, 136, 191, 200, 201, 203, 204, 206, 215, 244, 264, 265, 266, 267, 380, 403, 404, 411, 440, 479, 480, 481, 528, 560, 685, 861, 862, 868], "1161": [8, 136, 204, 208, 244, 380, 403, 404, 862], "cir": [8, 136, 204, 244, 380, 403, 404, 862], "101": [8, 70, 113, 136, 157, 168, 189, 195, 204, 206, 208, 226, 230, 231, 244, 380, 403, 404, 419, 862, 871], "e215": [8, 136, 204, 244, 380, 403, 404, 862], "957": [8, 20, 142, 231], "decoding_csp_eeg": [8, 20], "decomposit": [9, 11, 14, 17, 20, 27, 28, 29, 30, 32, 38, 39, 44, 47, 52, 57, 60, 74, 76, 102, 103, 106, 107, 109, 111, 112, 123, 165, 171, 180, 195, 198, 204, 205, 221, 222, 226, 228, 229, 231, 234, 236, 240, 241, 244, 264, 266, 267, 269, 271, 272, 275, 278, 279, 280, 411, 418, 419, 424, 425, 445, 492, 521, 542, 561, 576, 591, 712, 715, 725, 731, 733, 734, 736, 737, 861, 868, 871, 886], "iter": [9, 19, 27, 35, 36, 43, 44, 56, 59, 82, 89, 92, 93, 94, 103, 111, 133, 136, 156, 168, 171, 178, 179, 194, 204, 217, 223, 230, 234, 235, 236, 244, 258, 259, 261, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 288, 291, 292, 295, 302, 347, 354, 360, 365, 414, 421, 428, 452, 474, 475, 476, 477, 478, 479, 480, 512, 527, 528, 530, 532, 535, 561, 564, 571, 576, 591, 625, 656, 671, 691, 692, 693, 694, 696, 697, 706, 708, 709, 710, 713, 724, 741, 744, 754, 767, 797, 813, 868, 886], "roll": [9, 108, 123, 754, 822], "laura": [9, 195, 244, 886], "gwilliam": [9, 195, 244, 886], "nyu": [9, 37, 100, 119, 133, 170, 226, 886], "jean": [9, 10, 11, 12, 13, 14, 16, 18, 71, 78, 184, 195, 199, 204, 244, 561, 570, 666, 861, 868, 886], "remi": [9, 10, 11, 12, 13, 14, 16, 18, 886], "king": [9, 10, 11, 12, 13, 14, 16, 18, 195, 244, 886], "jeanremi": [9, 10, 11, 12, 13, 14, 16, 18], "alex": [9, 32, 38, 70, 71, 82, 113, 114, 115, 119, 134, 135, 184, 230, 231, 873, 886], "barach": [9, 12, 15, 87, 195, 244, 411, 886], "create_info": [9, 14, 15, 19, 63, 65, 70, 113, 124, 158, 187, 189, 221, 265, 267, 269, 411, 418, 480, 624, 876, 886], "time_frequ": [9, 21, 32, 33, 34, 91, 102, 110, 111, 113, 165, 201, 221, 223, 228, 229, 230, 231, 239, 240, 274, 416, 419, 424, 468, 876, 884, 886], "averagetfr": [9, 111, 113, 263, 266, 267, 317, 436, 468, 709, 728, 736, 737, 738, 739, 814, 876, 886], "stratifiedkfold": [9, 10, 15, 16, 428, 886], "make_pipelin": [9, 10, 11, 12, 13, 15, 18, 136, 195, 426], "labelencod": 9, "motor": [9, 17, 20, 27, 32, 75, 82, 108, 111, 143, 180, 195, 210, 264, 269, 312, 328, 363, 380, 411, 418, 440, 494, 558, 886], "imageri": [9, 17, 20, 27, 111, 195, 264, 269, 312, 328, 363, 380, 411, 440, 494, 558, 886], "n_split": [9, 10, 12, 15, 16, 19, 428], "speed": [9, 10, 11, 19, 32, 33, 41, 42, 44, 50, 74, 81, 82, 83, 93, 102, 108, 112, 134, 140, 144, 150, 157, 160, 161, 164, 171, 178, 179, 182, 194, 195, 198, 204, 206, 208, 211, 227, 228, 234, 236, 264, 265, 271, 272, 275, 276, 278, 279, 280, 416, 417, 423, 467, 479, 480, 534, 535, 561, 648, 724, 754, 784, 786, 807, 812, 817, 843, 845, 865, 869, 874, 886], "shuffl": [9, 10, 12, 15, 231, 886], "n_cycl": [9, 32, 106, 109, 111, 113, 165, 201, 228, 229, 230, 231, 240, 424, 544, 545, 712, 715, 720, 722, 732, 733, 734, 736, 737], "mani": [9, 44, 70, 74, 111, 119, 120, 126, 139, 141, 145, 148, 149, 150, 151, 154, 157, 159, 160, 161, 165, 166, 170, 171, 176, 189, 194, 198, 199, 200, 201, 202, 204, 205, 206, 221, 223, 226, 239, 241, 255, 256, 257, 264, 265, 269, 274, 276, 297, 348, 354, 435, 440, 453, 470, 561, 655, 691, 701, 706, 707, 754, 770, 780, 797, 799, 800, 841, 843, 845, 848, 849, 861, 863, 865, 868, 870, 872, 874, 886], "cycl": [9, 106, 113, 183, 201, 240, 241, 264, 265, 341, 424, 479, 480, 544, 545, 561, 712, 715, 720, 722, 732, 733, 734, 736, 737, 778, 784, 787, 799, 807, 845, 886], "min_freq": 9, "max_freq": 9, "n_freq": [9, 113, 194, 230, 240, 416, 424, 686, 696, 697, 706, 707, 708, 709, 722, 724, 725, 731, 732, 733, 734, 736, 737], "bin": [9, 22, 27, 70, 97, 101, 119, 122, 141, 143, 170, 201, 209, 211, 228, 234, 239, 241, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 290, 297, 419, 479, 480, 486, 501, 582, 616, 686, 690, 691, 693, 694, 696, 697, 707, 708, 710, 778, 786, 790, 844, 845, 848, 849, 850, 851, 856, 868, 886], "tupl": [9, 114, 149, 169, 170, 171, 194, 204, 215, 217, 230, 231, 258, 259, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 287, 288, 302, 313, 322, 323, 360, 386, 411, 418, 426, 444, 445, 448, 451, 478, 479, 480, 487, 489, 490, 491, 494, 495, 496, 502, 506, 515, 517, 527, 544, 545, 560, 561, 564, 569, 576, 578, 579, 581, 592, 617, 623, 624, 657, 658, 659, 671, 683, 691, 693, 694, 696, 697, 698, 706, 708, 709, 710, 718, 725, 741, 744, 754, 755, 763, 768, 771, 773, 774, 776, 778, 782, 783, 785, 786, 788, 790, 792, 793, 795, 797, 800, 802, 806, 808, 809, 812, 813, 814, 816, 817, 818, 822, 886], "linspac": [9, 19, 32, 40, 42, 68, 70, 112, 116, 135, 140, 149, 171, 176, 194, 198, 205, 206, 221, 222, 241], "freq_rang": [9, 241], "infer": [9, 10, 43, 44, 112, 155, 164, 169, 201, 216, 217, 227, 231, 232, 233, 244, 264, 265, 266, 267, 270, 271, 272, 275, 278, 279, 280, 297, 298, 318, 322, 354, 358, 359, 363, 369, 370, 371, 411, 418, 441, 442, 444, 454, 455, 471, 474, 476, 477, 479, 480, 487, 489, 494, 539, 561, 636, 684, 690, 693, 694, 695, 696, 697, 699, 706, 708, 710, 767, 792, 793, 794, 801, 807, 816, 839, 841, 852, 868, 886], "gap": [9, 126, 244, 476, 477, 479, 480, 498, 807, 868, 886], "window_spac": 9, "centered_w_tim": 9, "n_window": [9, 582], "len": [9, 10, 15, 16, 18, 19, 28, 32, 39, 41, 42, 43, 45, 47, 52, 63, 67, 68, 70, 72, 74, 89, 92, 99, 113, 116, 136, 139, 142, 143, 155, 158, 167, 175, 177, 182, 184, 190, 194, 198, 199, 200, 201, 202, 204, 206, 207, 209, 210, 211, 216, 222, 223, 226, 227, 228, 230, 231, 241, 258, 259, 261, 262, 264, 265, 266, 267, 269, 273, 275, 276, 277, 288, 302, 353, 360, 413, 421, 446, 449, 479, 480, 527, 655, 686, 708, 709, 722, 732, 741, 754, 759, 785, 807, 815, 816, 886], "instanti": [9, 143, 171, 195, 204, 221, 259, 261, 262, 263, 264, 265, 269, 273, 274, 276, 312, 480, 708, 710, 756, 767, 886], "encod": [9, 19, 126, 142, 143, 149, 165, 167, 171, 187, 194, 195, 208, 209, 210, 244, 250, 269, 346, 417, 487, 494, 502, 503, 504, 617, 839, 841, 868, 874, 886], "le": 9, "59999": [9, 183], "374": [9, 80, 168, 215], "loop": [9, 32, 42, 60, 108, 119, 134, 136, 148, 176, 180, 199, 231, 236, 241, 244, 404, 432, 572, 582, 593, 754, 862, 868, 886], "init": [9, 375, 845, 850], "freq_scor": 9, "fmin": [9, 32, 102, 103, 107, 112, 113, 115, 132, 136, 221, 239, 240, 241, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 416, 479, 480, 534, 535, 706, 707, 708, 709, 710, 711, 713, 714, 716, 724, 725, 735, 738, 754, 773, 808, 812, 814, 817, 818, 886], "fmax": [9, 32, 74, 102, 103, 107, 112, 113, 115, 132, 136, 165, 198, 202, 211, 221, 239, 240, 241, 264, 265, 266, 267, 416, 479, 480, 534, 535, 706, 707, 708, 709, 710, 711, 713, 714, 716, 724, 725, 735, 738, 754, 769, 808, 814, 886], "enumer": [9, 10, 15, 19, 28, 39, 40, 47, 71, 93, 95, 103, 106, 111, 113, 134, 135, 145, 148, 149, 150, 158, 194, 201, 204, 206, 210, 222, 231, 236, 241], "being": [9, 45, 113, 115, 126, 135, 159, 165, 170, 171, 199, 201, 206, 207, 209, 215, 223, 226, 228, 231, 261, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 362, 365, 445, 455, 469, 479, 480, 515, 561, 582, 584, 628, 706, 708, 710, 754, 772, 785, 788, 790, 791, 808, 813, 818, 845, 867, 868, 886], "w_size": 9, "isol": [9, 45, 113, 200, 204, 206, 886], "raw_filt": [9, 113, 140, 202, 204], "pad": [9, 15, 113, 126, 226, 231, 241, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 321, 446, 449, 450, 451, 479, 480, 725, 886], "drop_bad": [9, 16, 141, 150, 190, 200, 264, 265, 314, 468, 561, 708, 709, 868, 886], "fold": [9, 10, 12, 15, 16, 26, 136, 270, 275, 428, 669, 672], "roc_auc": [9, 11, 13, 195, 414, 421], "axi": [9, 10, 12, 14, 15, 16, 19, 21, 22, 28, 31, 35, 45, 58, 60, 68, 70, 72, 83, 89, 95, 99, 103, 106, 108, 109, 111, 112, 113, 114, 115, 116, 118, 126, 132, 136, 139, 140, 141, 143, 149, 150, 155, 159, 165, 171, 180, 182, 184, 190, 194, 195, 199, 201, 211, 215, 218, 221, 226, 229, 231, 234, 236, 240, 241, 244, 256, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 275, 278, 279, 280, 287, 314, 321, 365, 411, 418, 424, 431, 451, 470, 479, 480, 490, 560, 561, 575, 576, 659, 683, 685, 693, 694, 696, 697, 700, 706, 708, 710, 735, 738, 754, 767, 770, 771, 778, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 797, 799, 801, 802, 806, 807, 808, 809, 814, 815, 816, 851, 868, 886], "701": [9, 134, 195], "205": [9, 168, 183, 193, 208, 230, 231], "281": [9, 168, 231], "629": [9, 135, 216, 220, 231], "17": [9, 10, 11, 12, 13, 19, 26, 28, 32, 34, 35, 41, 43, 45, 47, 50, 56, 60, 61, 71, 80, 83, 89, 102, 107, 108, 113, 114, 122, 129, 136, 144, 150, 155, 156, 157, 159, 168, 170, 171, 175, 176, 179, 180, 181, 182, 183, 184, 187, 189, 190, 194, 195, 207, 208, 209, 211, 212, 214, 221, 226, 227, 228, 230, 231, 233, 234, 236, 244, 264, 265, 266, 267, 271, 274, 275, 276, 277, 279, 280, 288, 297, 354, 356, 359, 360, 371, 411, 418, 420, 478, 479, 480, 528, 534, 535, 593, 659, 671, 694, 706, 722, 732, 733, 736, 771, 812, 818, 862, 868], "165": [9, 145, 168, 195, 201, 204, 208, 210, 226, 231, 244], "031": [9, 127, 139, 148, 168, 183, 223], "581": [9, 13, 134, 208, 231], "139": [9, 106, 168, 195, 197, 208, 223, 226, 231, 277, 886], "869": 9, "549": [9, 207, 241, 243, 244], "22": [9, 11, 13, 14, 15, 16, 19, 21, 28, 32, 34, 35, 39, 40, 44, 45, 47, 80, 87, 89, 102, 107, 108, 109, 111, 113, 118, 126, 129, 132, 136, 149, 154, 168, 170, 175, 179, 182, 187, 190, 194, 195, 204, 207, 208, 223, 226, 227, 228, 230, 231, 235, 236, 238, 239, 244, 264, 265, 266, 267, 276, 277, 312, 335, 339, 340, 360, 404, 450, 479, 480, 500, 515, 520, 561, 564, 607, 624, 641, 650, 701, 725, 770, 798, 808, 844, 868], "121": [9, 139, 144, 165, 168, 169, 193, 208, 226, 231, 264, 265, 434], "756": [9, 168, 173, 195, 229, 231], "523": [9, 208, 231], "bar": [9, 142, 149, 170, 182, 217, 218, 241, 261, 264, 265, 266, 267, 273, 274, 411, 414, 418, 421, 479, 480, 560, 561, 706, 708, 710, 754, 778, 783, 784, 785, 786, 790, 793, 797, 801, 806, 807, 809, 814, 823, 868, 886], "width": [9, 113, 126, 159, 170, 171, 198, 201, 202, 218, 226, 241, 262, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 313, 321, 326, 413, 422, 447, 449, 450, 470, 479, 480, 597, 706, 720, 722, 732, 735, 736, 738, 754, 763, 782, 783, 810, 812, 813, 817, 841, 865, 868, 886], "edgecolor": [9, 10, 240], "black": [9, 21, 45, 47, 48, 50, 111, 134, 141, 150, 159, 189, 206, 210, 261, 262, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 754, 767, 770, 771, 782, 786, 788, 792, 793, 797, 805, 806, 808, 809, 812, 814, 815, 816, 817, 886], "xtick": [9, 15, 19, 89, 126, 194, 201, 211, 226], "tf_score": 9, "center": [9, 37, 45, 68, 70, 79, 89, 94, 111, 119, 120, 150, 155, 157, 159, 169, 184, 198, 200, 201, 202, 206, 226, 241, 255, 256, 266, 267, 270, 275, 305, 420, 490, 513, 524, 561, 570, 655, 658, 663, 669, 672, 706, 744, 754, 758, 794, 805, 813, 862, 868, 873, 886], "w_tmin": 9, "w_tmax": 9, "av_tfr": 9, "newaxi": [9, 15, 28, 99, 116, 231, 234, 235, 236, 754], "white": [9, 24, 26, 41, 52, 108, 111, 115, 120, 125, 126, 132, 134, 141, 155, 157, 158, 159, 175, 177, 189, 209, 222, 226, 231, 256, 262, 264, 265, 266, 267, 270, 271, 272, 275, 277, 278, 279, 280, 369, 469, 479, 480, 513, 547, 548, 610, 628, 654, 706, 708, 710, 754, 770, 772, 782, 792, 794, 812, 815, 817, 841, 861, 886], "vmin": [9, 13, 19, 87, 106, 111, 113, 115, 116, 135, 140, 159, 175, 194, 195, 209, 210, 226, 228, 229, 240, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 706, 708, 710, 754, 771, 785, 786, 793, 797, 806, 809, 814, 815, 816, 886], "red": [9, 54, 59, 70, 79, 80, 82, 99, 111, 131, 132, 141, 143, 149, 155, 159, 169, 177, 180, 189, 194, 198, 199, 202, 206, 209, 210, 218, 231, 234, 240, 241, 260, 261, 262, 264, 265, 266, 267, 270, 273, 411, 418, 479, 480, 560, 561, 576, 627, 706, 708, 710, 754, 769, 771, 778, 779, 782, 785, 786, 788, 793, 797, 806, 809, 814, 816, 841, 845, 886], "285": [9, 20, 168, 182, 208], "decoding_csp_timefreq": [9, 20], "supervis": [10, 18, 87, 136, 411, 428], "class": [10, 16, 19, 60, 69, 87, 93, 94, 113, 114, 136, 139, 141, 148, 150, 156, 164, 165, 167, 170, 171, 174, 194, 200, 201, 204, 215, 218, 221, 231, 242, 243, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 288, 302, 312, 313, 365, 395, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 452, 478, 479, 480, 511, 527, 560, 561, 562, 590, 656, 686, 706, 707, 708, 709, 710, 741, 742, 743, 744, 749, 750, 751, 754, 755, 756, 765, 841, 845, 853, 854, 861, 863, 868, 869, 871, 876, 877, 886], "rel": [10, 24, 32, 33, 34, 42, 61, 75, 85, 108, 111, 112, 126, 136, 139, 141, 143, 155, 165, 167, 169, 188, 191, 198, 201, 202, 206, 209, 210, 211, 217, 240, 241, 256, 257, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 309, 358, 365, 417, 432, 435, 447, 479, 480, 524, 561, 588, 591, 607, 643, 645, 662, 699, 706, 709, 711, 712, 713, 725, 754, 767, 772, 787, 792, 801, 805, 807, 815, 841, 845, 861, 868, 871, 886], "character": [10, 13, 195, 244, 561, 668, 800, 868], "confus": [10, 15, 136, 143, 191, 666, 845], "serv": [10, 167, 216, 231, 261, 264, 265, 266, 267, 273, 281, 411, 418, 479, 480, 560, 561, 576, 706, 708, 709, 710, 752, 770, 771, 786, 793, 797, 806, 809, 814, 816, 845, 867, 868], "proxi": [10, 204, 208], "mental": [10, 13, 195, 244], "rsa": [10, 852, 862, 886], "24": [10, 11, 13, 21, 26, 28, 34, 35, 42, 45, 46, 47, 50, 52, 56, 64, 80, 92, 102, 107, 108, 111, 113, 114, 117, 122, 129, 143, 168, 170, 173, 175, 180, 182, 188, 189, 190, 195, 198, 208, 209, 210, 214, 223, 226, 227, 228, 230, 231, 234, 235, 236, 241, 244, 246, 258, 262, 264, 265, 266, 267, 269, 270, 274, 277, 297, 343, 349, 361, 363, 390, 419, 441, 442, 443, 444, 454, 476, 479, 480, 487, 494, 503, 508, 520, 528, 561, 564, 701, 705, 706, 708, 709, 710, 742, 744, 751, 754, 764, 772, 777, 784, 801, 807, 808, 816, 819, 823, 832, 861, 868], "imag": [10, 16, 27, 30, 32, 33, 35, 40, 44, 46, 55, 59, 70, 87, 111, 119, 121, 123, 126, 127, 129, 135, 142, 145, 148, 154, 155, 158, 159, 165, 169, 175, 179, 181, 189, 190, 198, 201, 204, 205, 206, 207, 223, 226, 227, 229, 230, 231, 240, 241, 244, 255, 261, 264, 265, 266, 267, 269, 273, 274, 276, 277, 279, 280, 289, 290, 291, 292, 297, 298, 303, 307, 312, 313, 321, 338, 353, 360, 366, 389, 411, 418, 471, 474, 476, 477, 479, 480, 488, 500, 528, 560, 561, 576, 588, 590, 620, 655, 661, 662, 663, 664, 665, 666, 667, 668, 706, 708, 710, 722, 732, 742, 743, 744, 754, 755, 757, 770, 771, 772, 785, 786, 790, 792, 793, 797, 799, 806, 809, 814, 815, 816, 818, 822, 824, 841, 846, 851, 852, 862, 871, 873, 886], "92": [10, 19, 34, 35, 44, 80, 102, 111, 113, 142, 168, 179, 189, 194, 195, 200, 208, 226, 227, 228, 230, 231, 235, 236, 524, 868], "human": [10, 19, 33, 58, 93, 112, 125, 143, 150, 154, 177, 179, 194, 223, 244, 264, 265, 266, 267, 275, 290, 297, 374, 388, 413, 417, 422, 447, 449, 450, 479, 480, 566, 695, 722, 732, 733, 736, 841, 842, 852, 861, 862, 874], "anim": [10, 135, 266, 267, 862, 886], "inanim": [10, 862], "bodi": [10, 206, 207, 744, 862], "part": [10, 118, 126, 139, 141, 143, 150, 154, 157, 159, 160, 161, 170, 181, 198, 201, 202, 206, 211, 215, 223, 244, 255, 264, 266, 267, 269, 270, 279, 280, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 440, 454, 455, 474, 476, 477, 479, 481, 500, 534, 535, 539, 633, 683, 693, 694, 696, 697, 706, 709, 754, 771, 790, 794, 841, 845, 846, 867, 868, 869, 871, 874, 886], "6gb": 10, "build": [10, 12, 21, 32, 45, 154, 171, 174, 190, 198, 199, 201, 226, 234, 235, 236, 843, 849, 851, 867, 874, 886], "jaakko": [10, 190, 886], "leppakanga": [10, 190, 886], "jaeilepp": [10, 190], "student": [10, 190, 845], "jyu": [10, 190], "panda": [10, 14, 100, 111, 139, 142, 146, 147, 148, 150, 164, 170, 189, 190, 209, 215, 227, 239, 258, 259, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 435, 479, 480, 620, 692, 706, 708, 709, 710, 844, 845, 868, 886], "read_csv": [10, 189, 190], "standardscal": [10, 11, 13, 18, 195, 420], "linear_model": [10, 11, 12, 13, 15, 18, 195, 874], "logisticregress": [10, 11, 13, 15, 195, 415, 426], "metric": [10, 15, 27, 36, 56, 89, 116, 136, 195, 211, 261, 266, 268, 269, 275, 364, 414, 417, 421, 527, 539, 540, 543, 559, 561, 614, 623, 625, 754, 800, 867, 876, 881, 886], "roc_auc_scor": [10, 414, 421, 876], "manifold": [10, 116, 118, 771], "md": [10, 244, 659], "visual_92_categori": [10, 170, 862, 876, 886], "stimulu": [10, 13, 33, 34, 49, 69, 71, 73, 80, 81, 89, 92, 106, 119, 139, 141, 142, 143, 145, 148, 161, 165, 166, 167, 168, 179, 182, 187, 190, 191, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 215, 216, 217, 218, 223, 230, 236, 241, 256, 258, 264, 265, 266, 267, 269, 314, 346, 354, 417, 435, 440, 479, 480, 558, 564, 671, 706, 708, 709, 710, 841, 862, 868, 886], "fname": [10, 12, 21, 53, 65, 78, 85, 86, 111, 118, 119, 127, 130, 159, 169, 204, 256, 258, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 276, 277, 278, 279, 280, 288, 301, 312, 313, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 351, 352, 441, 442, 443, 444, 479, 480, 482, 483, 484, 485, 488, 493, 497, 498, 499, 500, 503, 507, 508, 509, 510, 511, 512, 542, 546, 550, 551, 560, 561, 603, 604, 605, 606, 609, 611, 612, 613, 614, 615, 616, 618, 621, 622, 623, 624, 625, 626, 629, 631, 632, 633, 634, 635, 636, 638, 640, 651, 706, 707, 708, 709, 710, 726, 727, 728, 739, 741, 748, 827, 828, 829, 830, 832, 833, 834, 837, 838, 839, 840, 872, 886], "visual_stimuli": 10, "csv": [10, 122, 190, 217, 258, 330, 336, 503, 611, 886], "cond": [10, 40, 46, 59, 61, 98, 100, 149, 231, 236, 257], "restrict": [10, 28, 29, 103, 125, 141, 150, 157, 160, 165, 177, 202, 203, 206, 207, 215, 222, 226, 229, 230, 241, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 278, 279, 280, 284, 285, 297, 298, 457, 458, 479, 480, 528, 529, 530, 531, 532, 534, 535, 544, 545, 553, 554, 557, 558, 559, 669, 706, 708, 709, 710, 717, 723, 872, 886], "max_trigg": 10, "row": [10, 73, 100, 111, 126, 140, 141, 142, 143, 144, 149, 165, 168, 171, 174, 190, 195, 210, 215, 226, 227, 259, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 299, 358, 369, 411, 417, 418, 435, 479, 480, 503, 540, 543, 561, 562, 582, 691, 692, 706, 707, 708, 709, 710, 754, 780, 785, 793, 797, 800, 868, 871, 886], "cond_tag": 10, "els": [10, 15, 28, 31, 40, 47, 93, 95, 113, 150, 159, 174, 190, 201, 206, 215, 226, 241, 261, 262, 264, 265, 266, 267, 269, 273, 288, 302, 411, 418, 479, 480, 519, 527, 561, 562, 655, 661, 662, 663, 664, 665, 666, 667, 668, 689, 708, 710, 733, 734, 741, 782, 786, 807, 844, 845, 869, 886], "str": [10, 30, 39, 41, 100, 127, 142, 144, 149, 170, 182, 194, 227, 241, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 522, 523, 524, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 599, 600, 601, 602, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 683, 685, 687, 689, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 724, 725, 728, 729, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 746, 749, 750, 751, 753, 754, 757, 759, 762, 764, 766, 769, 770, 771, 772, 773, 774, 775, 778, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 821, 823, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 845, 886], "bodypart": 10, "natur": [10, 19, 125, 171, 194, 230, 244, 388, 417, 451, 597, 862, 868, 871, 886], "n_run": 10, "sample_subject_": 10, "_tsss_mc": 10, "on_split_miss": [10, 479, 500, 886], "ignor": [10, 41, 47, 69, 80, 108, 134, 139, 145, 150, 161, 165, 171, 180, 183, 190, 198, 199, 200, 206, 226, 256, 259, 261, 262, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 282, 283, 284, 285, 297, 298, 316, 324, 339, 348, 349, 354, 358, 360, 361, 363, 365, 369, 370, 375, 377, 378, 379, 382, 383, 384, 386, 391, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 418, 420, 430, 438, 440, 445, 447, 452, 458, 461, 468, 474, 476, 477, 479, 480, 481, 490, 492, 496, 500, 508, 539, 556, 560, 561, 564, 572, 582, 593, 613, 617, 619, 620, 628, 642, 644, 647, 654, 655, 671, 693, 695, 706, 708, 709, 710, 751, 771, 782, 783, 784, 786, 787, 790, 793, 797, 798, 806, 807, 808, 809, 814, 816, 832, 834, 836, 841, 845, 886], "filenam": [10, 43, 44, 71, 73, 76, 80, 81, 82, 92, 126, 134, 139, 140, 145, 150, 155, 156, 166, 167, 171, 198, 199, 200, 202, 204, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 223, 256, 258, 259, 261, 264, 265, 266, 267, 270, 274, 277, 288, 301, 309, 312, 351, 352, 441, 442, 444, 454, 464, 470, 478, 479, 480, 483, 499, 500, 505, 509, 511, 522, 523, 604, 609, 611, 616, 618, 620, 622, 623, 626, 627, 628, 629, 632, 636, 640, 644, 651, 655, 671, 707, 726, 748, 754, 762, 807, 827, 828, 829, 831, 834, 835, 836, 839, 851, 886], "min_dur": [10, 211, 212, 452, 563], "002": [10, 13, 32, 33, 120, 127, 139, 140, 141, 144, 148, 165, 168, 187, 194, 195, 200, 201, 203, 206, 211, 214, 215, 218, 223, 244, 452], "specif": [10, 19, 27, 43, 44, 45, 70, 104, 105, 111, 119, 126, 134, 136, 140, 142, 143, 149, 150, 154, 159, 160, 169, 170, 171, 174, 188, 189, 190, 191, 198, 199, 201, 202, 204, 206, 207, 209, 211, 215, 218, 223, 226, 227, 228, 231, 239, 240, 241, 244, 258, 260, 261, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 278, 279, 280, 287, 297, 312, 411, 418, 435, 440, 442, 446, 452, 479, 480, 481, 494, 513, 537, 538, 558, 559, 560, 561, 567, 572, 576, 581, 582, 593, 627, 633, 655, 685, 692, 706, 707, 708, 709, 710, 754, 773, 778, 785, 786, 793, 797, 806, 807, 809, 812, 814, 815, 817, 818, 835, 841, 845, 849, 852, 860, 862, 867, 868, 869, 871, 874, 875, 886], "appel": 10, "dissimilar": 10, "rdm": 10, "cichi": [10, 244, 862], "et": [10, 16, 19, 21, 194, 201, 203, 241, 255, 264, 265, 569, 868, 873, 886], "al": [10, 16, 19, 21, 194, 201, 203, 241, 264, 265, 569, 868, 886], "multiclass": [10, 244, 411, 428, 886], "multinomi": 10, "logist": [10, 11, 15, 18, 195], "paper": [10, 16, 201, 205, 244, 297, 474, 528, 561, 666, 860, 868], "pairwis": [10, 47, 70, 116, 244, 569], "binari": [10, 98, 159, 191, 195, 216, 262, 412, 428, 452, 495, 496, 501, 504, 615, 686, 692, 704, 831, 843, 850, 851, 868, 871, 886], "roc": [10, 13, 667], "auc": [10, 13, 195, 667], "final": [10, 16, 19, 42, 67, 69, 70, 82, 83, 111, 112, 113, 126, 136, 139, 140, 143, 145, 149, 150, 155, 159, 161, 165, 170, 178, 180, 181, 189, 194, 199, 200, 204, 205, 206, 209, 210, 226, 228, 230, 231, 234, 236, 241, 264, 265, 266, 267, 318, 329, 417, 454, 479, 480, 656, 824, 845, 861, 865, 867, 886], "sake": [10, 126, 200, 230, 872], "did": [10, 11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 82, 103, 106, 107, 109, 123, 159, 160, 161, 165, 169, 171, 174, 175, 180, 201, 204, 206, 207, 221, 222, 234, 236, 269, 277, 863, 871, 886], "instant": [10, 13, 42, 119, 176, 182, 195, 262, 266, 267, 287, 353, 454, 680, 681, 682, 706, 711, 712, 713, 714, 715, 716, 717, 789, 791, 793], "50m": 10, "300m": 10, "focu": [10, 12, 82, 126, 143, 200, 201, 851, 886], "liblinear": [10, 11, 13, 15, 18, 195], "multi_class": [10, 15], "y_pred": [10, 12, 19, 136, 414, 415, 417, 421, 886], "probabilist": [10, 244, 354, 414, 415, 421, 868, 874], "necessari": [10, 21, 31, 73, 93, 126, 134, 145, 150, 154, 155, 157, 159, 160, 165, 168, 170, 179, 198, 200, 201, 202, 203, 204, 205, 206, 212, 215, 216, 221, 226, 257, 264, 265, 266, 267, 268, 271, 272, 275, 276, 278, 279, 280, 297, 298, 316, 318, 325, 358, 375, 411, 418, 420, 435, 446, 454, 478, 479, 480, 487, 494, 499, 528, 593, 601, 611, 618, 622, 650, 670, 706, 708, 709, 710, 754, 793, 812, 817, 841, 845, 861, 862, 866, 867, 868, 871, 886], "predict_proba": [10, 414, 415, 421], "ii": [10, 15, 19, 39, 92, 98, 106, 118, 134, 158, 182, 184, 189, 194, 211, 226, 236, 244, 271, 272, 275, 278, 279, 280, 320, 414, 421, 488, 561, 655, 692, 771, 886], "train_class": 10, "jj": 10, "im": [10, 13, 15, 22, 70, 114, 135, 195, 757, 816, 824, 886], "matshow": [10, 13], "rdbu_r": [10, 13, 16, 19, 22, 106, 113, 194, 195, 228, 229, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 771, 785, 786, 790, 793, 797, 806, 809, 814, 815, 816, 845], "set_ytick": 10, "set_yticklabel": [10, 111], "set_xtick": [10, 241], "set_xticklabel": [10, 241], "colorbar": [10, 13, 15, 22, 70, 71, 106, 111, 113, 114, 115, 119, 126, 135, 141, 145, 149, 175, 181, 195, 206, 210, 218, 226, 227, 228, 230, 231, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 411, 418, 479, 480, 560, 561, 576, 706, 707, 708, 710, 754, 768, 771, 773, 778, 779, 780, 785, 786, 790, 791, 793, 797, 806, 809, 812, 814, 815, 816, 817, 818, 886], "tight_layout": [10, 12, 15, 19, 39, 41, 58, 70, 72, 85, 113, 114, 119, 175, 180, 194, 201, 206, 209, 210, 223, 226, 230, 231, 886], "relat": [10, 12, 19, 27, 32, 33, 34, 70, 77, 100, 104, 105, 111, 116, 127, 131, 135, 143, 145, 152, 153, 154, 157, 159, 161, 164, 165, 171, 172, 177, 187, 188, 191, 194, 195, 198, 200, 201, 203, 204, 205, 208, 209, 210, 217, 227, 234, 240, 241, 244, 264, 265, 266, 267, 269, 274, 287, 314, 329, 353, 394, 417, 418, 435, 447, 452, 468, 479, 480, 552, 561, 569, 620, 655, 685, 706, 722, 732, 736, 754, 767, 775, 778, 785, 800, 801, 807, 815, 826, 841, 843, 845, 848, 860, 862, 863, 865, 866, 867, 868, 869, 874, 886], "histor": [10, 149, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 335, 479, 480, 706, 709, 868, 874, 886], "summar": [10, 45, 112, 150, 202, 204, 215, 264, 265, 271, 272, 275, 278, 279, 280, 778, 785, 861, 867, 872, 886], "dimension": [10, 149, 174, 195, 199, 205, 206, 215, 231, 234, 235, 236, 244, 266, 267, 271, 272, 275, 278, 279, 280, 354, 419, 424, 426, 561, 686, 706, 754, 788, 841, 868, 886], "reduct": [10, 17, 20, 27, 113, 190, 202, 210, 211, 244, 264, 265, 266, 267, 269, 369, 373, 410, 419, 425, 479, 558, 561, 562, 593, 601, 620, 734, 737, 886], "multi": [10, 16, 27, 36, 46, 56, 82, 103, 125, 169, 188, 195, 201, 234, 235, 236, 244, 261, 262, 264, 265, 266, 267, 268, 269, 273, 279, 302, 388, 411, 412, 416, 418, 427, 450, 452, 454, 477, 479, 480, 522, 527, 528, 530, 534, 535, 539, 560, 561, 575, 576, 612, 614, 615, 640, 706, 708, 710, 724, 729, 771, 786, 793, 797, 806, 809, 814, 816, 820, 852, 868, 871, 886], "cluster": [10, 27, 97, 101, 111, 164, 227, 232, 233, 237, 238, 241, 244, 264, 266, 267, 269, 275, 276, 277, 318, 353, 360, 434, 452, 479, 527, 528, 542, 558, 620, 633, 635, 640, 678, 686, 687, 689, 693, 694, 696, 697, 698, 709, 736, 754, 813, 883, 886], "togeth": [10, 43, 70, 74, 140, 148, 150, 165, 171, 174, 187, 198, 204, 206, 209, 210, 215, 221, 231, 264, 265, 266, 267, 274, 283, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 433, 454, 455, 474, 476, 477, 479, 480, 504, 539, 561, 592, 619, 636, 639, 693, 694, 696, 697, 724, 794, 834, 839, 841, 845, 886], "precomput": [10, 155, 170, 180, 190, 264, 265, 360, 479, 480, 561, 654, 784, 801, 807, 886], "colormap": [10, 24, 58, 108, 111, 112, 115, 126, 135, 141, 159, 206, 241, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 411, 418, 479, 480, 560, 561, 576, 698, 706, 707, 708, 710, 754, 769, 771, 773, 778, 780, 785, 786, 790, 793, 796, 797, 806, 809, 812, 814, 815, 816, 817, 818, 836, 845, 886], "rainbow": 10, "sel": [10, 31, 227, 552, 555, 557, 558, 640, 707], "this_nam": 10, "scatter": [10, 45, 114, 226, 772, 886], "facecolor": [10, 47, 150, 226], "scatterpoint": 10, "ncol": [10, 15, 73, 111, 119, 126, 136, 145, 150, 175, 182, 210, 266, 267, 411, 418, 561, 793, 797, 871, 886], "shepard": [10, 244], "multidimension": [10, 226, 244, 414, 421, 428], "tree": [10, 244, 871], "scienc": [10, 13, 33, 40, 100, 112, 179, 195, 223, 227, 241, 244, 255, 290, 297, 394, 476, 528, 561, 862, 868, 873], "210": [10, 13, 35, 80, 86, 123, 149, 168, 195, 208, 211, 231, 244], "4468": [10, 244], "390": [10, 12, 21, 80, 205, 208, 214, 226, 231, 244], "398": [10, 80, 226, 231, 244], "1980": [10, 150, 194, 244], "1126": [10, 195, 244], "aarr": [10, 244], "laakso": [10, 244], "garrison": [10, 244], "cottrel": [10, 244], "content": [10, 27, 104, 157, 165, 168, 171, 201, 202, 205, 210, 218, 240, 244, 264, 265, 268, 274, 387, 388, 443, 511, 762, 778, 785, 841, 845, 850, 886], "assess": [10, 13, 136, 155, 161, 169, 198, 244, 528, 539, 561, 663, 668, 865, 868], "neural": [10, 18, 19, 22, 27, 33, 62, 66, 70, 71, 82, 116, 136, 150, 177, 179, 195, 198, 201, 204, 207, 211, 223, 241, 242, 244, 269, 290, 297, 298, 373, 411, 415, 417, 418, 474, 479, 480, 561, 570, 591, 841, 846, 862, 886], "philosoph": [10, 244, 528, 868], "76": [10, 15, 16, 18, 19, 34, 35, 46, 47, 79, 80, 101, 102, 107, 108, 111, 113, 118, 158, 168, 175, 189, 190, 194, 195, 208, 226, 227, 228, 230, 231, 234, 235, 236, 244, 687, 771], "09515080050002726": [10, 244], "nikolau": [10, 244], "kriegeskort": [10, 244], "mariek": [10, 244], "mur": [10, 244], "peter": [10, 179, 239, 244, 264, 265, 266, 267, 479, 480, 528, 561, 708, 710, 725, 735, 738, 868, 886], "bandettini": [10, 244], "connect": [10, 38, 47, 70, 159, 165, 170, 223, 226, 244, 270, 289, 291, 297, 298, 375, 597, 686, 693, 694, 696, 697, 702, 774, 851, 852, 857, 876, 886], "branch": [10, 244, 845], "neuro": [10, 85, 244, 886], "radoslaw": [10, 244, 862], "aud": [10, 28, 29, 37, 39, 49, 91, 98, 103, 106, 107, 149, 231, 244, 264, 778, 862], "oliva": [10, 244, 862], "resolv": [10, 179, 204, 209, 244, 717, 849, 862, 886], "recognit": [10, 46, 100, 150, 201, 244, 735, 738, 862], "455": [10, 231, 244, 277, 862], "462": [10, 231, 244, 277, 862], "2014": [10, 12, 13, 18, 19, 40, 71, 112, 120, 150, 161, 195, 201, 244, 266, 267, 354, 415, 417, 418, 419, 429, 476, 570, 597, 688, 735, 738, 860, 862, 865], "1038": [10, 13, 125, 194, 244, 388, 417, 862], "nn": [10, 177, 244, 277, 655, 862, 871, 886], "3635": [10, 244, 862], "decoding_rsa_sgskip": [10, 20], "cortic": [11, 24, 26, 27, 31, 32, 41, 43, 58, 77, 79, 84, 89, 93, 108, 112, 121, 129, 154, 157, 162, 164, 165, 171, 174, 177, 179, 185, 190, 199, 223, 226, 235, 244, 256, 261, 267, 268, 269, 270, 271, 272, 275, 276, 277, 278, 279, 280, 282, 284, 285, 297, 298, 360, 364, 389, 445, 456, 474, 476, 477, 479, 513, 528, 529, 530, 531, 532, 535, 539, 544, 545, 558, 559, 577, 610, 613, 614, 625, 628, 635, 663, 666, 668, 669, 670, 671, 672, 702, 754, 765, 813, 841, 843, 846, 849, 852, 862, 871, 874, 886], "univari": [11, 164, 195, 226, 227, 232, 233, 244, 264, 269, 479, 558, 620, 687, 689, 690, 694, 709, 736, 883, 886], "confin": [11, 47, 157, 230, 290, 868], "potenti": [11, 15, 47, 70, 71, 73, 78, 87, 100, 116, 126, 127, 140, 143, 152, 153, 164, 167, 171, 195, 199, 201, 203, 207, 226, 227, 230, 241, 244, 264, 265, 266, 267, 269, 270, 275, 309, 314, 353, 360, 369, 394, 450, 467, 468, 479, 480, 481, 552, 562, 569, 570, 620, 669, 672, 692, 699, 769, 778, 785, 815, 826, 861, 862, 865, 867, 868, 886], "relev": [11, 12, 26, 100, 111, 125, 150, 168, 179, 195, 201, 202, 203, 210, 244, 277, 372, 418, 561, 578, 705, 797, 799, 845, 860, 861, 865, 868, 871], "eric": [11, 19, 22, 26, 34, 39, 50, 57, 65, 72, 79, 83, 92, 93, 108, 117, 119, 122, 125, 126, 128, 134, 135, 154, 156, 158, 178, 179, 181, 182, 183, 190, 194, 195, 208, 226, 230, 231, 234, 235, 236, 244, 270, 275, 389, 528, 601, 671, 693, 694, 696, 697, 860, 862, 873, 886], "larson": [11, 19, 22, 26, 34, 39, 50, 57, 65, 72, 79, 83, 92, 93, 108, 117, 119, 122, 125, 126, 128, 134, 135, 158, 178, 179, 181, 182, 183, 190, 194, 195, 208, 226, 230, 234, 235, 236, 244, 264, 265, 266, 267, 270, 275, 389, 479, 480, 601, 671, 860, 862, 873, 886], "feature_select": 11, "selectkbest": 11, "f_classif": 11, "apply_inverse_epoch": [11, 28, 45, 271, 272, 275, 278, 279, 280, 528, 529, 531, 532, 876, 886], "read_inverse_oper": [11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 103, 106, 107, 109, 123, 165, 180, 222, 234, 236, 546, 876], "cross_val_multiscor": [11, 195, 876, 886], "linearmodel": [11, 18, 195, 876, 886], "slidingestim": [11, 195, 428, 876, 886], "get_coef": [11, 18, 195, 876, 886], "meg_path": [11, 13, 14, 15, 16, 22, 28, 30, 31, 35, 37, 39, 40, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 68, 69, 71, 72, 76, 78, 85, 86, 87, 91, 92, 93, 95, 96, 98, 99, 102, 103, 106, 107, 109, 110, 116, 117, 120, 130, 131, 132, 177, 178, 179, 180, 195, 223, 228, 229, 230, 231, 234, 235, 236], "fname_fwd": [11, 32, 33, 34, 41, 42, 43, 47, 48, 49, 54, 58, 176, 178, 222], "sample_audvi": [11, 22, 28, 29, 30, 31, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 64, 68, 78, 85, 86, 89, 91, 92, 93, 94, 103, 106, 107, 109, 115, 118, 119, 123, 126, 130, 133, 148, 149, 165, 171, 174, 175, 176, 177, 178, 179, 180, 195, 222, 223, 234, 235, 236, 256, 264, 265, 266, 267, 479, 480], "sample_audvis_filt": [11, 13, 14, 15, 16, 18, 28, 42, 49, 69, 72, 73, 76, 87, 95, 96, 98, 99, 116, 120, 131, 132, 140, 144, 150, 151, 165, 168, 171, 176, 179, 195, 200, 204, 231, 234, 236, 868], "40_raw": [11, 13, 14, 15, 16, 18, 28, 42, 49, 69, 72, 73, 76, 87, 95, 96, 98, 99, 116, 120, 131, 132, 140, 144, 150, 151, 165, 168, 171, 176, 179, 195, 200, 204, 231, 234, 236, 868], "event_fnam": [11, 14, 15, 16, 18, 69, 87, 95, 96, 99, 116, 120, 131, 229, 230, 231, 234, 236], "ev": [11, 13, 14, 15, 16, 18, 28, 69, 87, 93, 95, 96, 99, 102, 103, 116, 120, 131, 139, 144, 150, 171, 200, 216, 229, 230, 231, 234, 236, 256, 620, 621, 831, 865, 886], "fname_cov": [11, 41, 48, 49, 50, 54, 55, 58, 64, 93, 175, 178, 180], "fname_inv": [11, 28, 29, 30, 38, 39, 44, 47, 57, 60, 103, 106, 107, 109, 123, 180, 222, 234, 236], "inv": [11, 28, 29, 30, 38, 39, 44, 45, 47, 52, 57, 60, 93, 103, 106, 107, 109, 123, 155, 157, 159, 165, 171, 176, 177, 178, 180, 181, 190, 195, 222, 223, 234, 236, 256, 445, 533, 536, 539, 541, 542, 546, 811, 845, 861, 868, 886], "aud_r": [11, 14, 15, 42, 230], "vis_r": [11, 14, 15, 42, 87, 230], "contra": 11, "setup": [11, 15, 16, 18, 24, 43, 44, 45, 69, 70, 72, 87, 95, 96, 99, 106, 107, 109, 116, 131, 154, 228, 229, 234, 236, 240, 257, 277, 375, 452, 844, 845, 846, 847, 849, 851, 862, 866, 871, 886], "read_ev": [11, 13, 14, 15, 16, 18, 28, 69, 87, 93, 95, 96, 99, 102, 103, 116, 120, 131, 139, 144, 150, 200, 216, 229, 230, 231, 234, 236, 265, 452, 617, 831, 841, 876, 886], "modifi": [11, 61, 69, 116, 139, 148, 149, 150, 160, 164, 167, 168, 171, 172, 173, 181, 195, 199, 205, 207, 210, 217, 221, 226, 230, 239, 244, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 275, 276, 277, 278, 279, 280, 281, 287, 312, 318, 340, 361, 363, 364, 365, 385, 411, 413, 415, 416, 418, 419, 420, 422, 423, 425, 426, 433, 470, 474, 479, 480, 487, 494, 510, 525, 528, 541, 552, 553, 554, 557, 560, 561, 581, 585, 589, 590, 592, 593, 594, 595, 596, 608, 625, 641, 647, 650, 657, 658, 659, 660, 688, 699, 700, 706, 707, 708, 709, 710, 723, 725, 750, 754, 757, 770, 775, 789, 791, 807, 821, 822, 853, 861, 862, 868, 871, 886], "your": [11, 31, 47, 69, 70, 93, 94, 116, 120, 126, 134, 139, 140, 141, 148, 150, 154, 156, 157, 158, 160, 161, 165, 166, 167, 171, 176, 180, 181, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 215, 216, 217, 226, 239, 240, 241, 256, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 281, 297, 298, 309, 318, 329, 332, 335, 338, 354, 358, 359, 369, 370, 371, 389, 411, 418, 435, 452, 454, 455, 474, 476, 477, 479, 480, 490, 495, 539, 547, 560, 561, 564, 571, 578, 581, 593, 611, 617, 692, 706, 708, 709, 710, 754, 784, 791, 794, 800, 801, 807, 812, 824, 843, 848, 849, 850, 851, 852, 853, 860, 861, 862, 863, 864, 865, 866, 868, 871, 886], "2443": [11, 42, 73, 76, 87, 91, 92, 106, 107, 109, 110, 116, 120, 145, 165, 166, 167, 168, 176, 179, 194, 195, 198, 199, 200, 205, 206, 209, 215, 216, 217, 218, 223, 228, 229, 230, 234, 236], "grad": [11, 16, 22, 28, 31, 32, 33, 34, 35, 40, 41, 42, 45, 46, 48, 49, 50, 51, 54, 55, 58, 59, 61, 76, 78, 85, 86, 92, 93, 95, 96, 98, 99, 102, 103, 106, 108, 109, 110, 112, 113, 115, 116, 118, 119, 120, 122, 123, 126, 130, 131, 139, 141, 144, 149, 151, 155, 156, 157, 161, 165, 168, 169, 171, 175, 176, 177, 178, 179, 180, 182, 195, 199, 200, 206, 208, 209, 215, 221, 222, 223, 228, 229, 230, 234, 236, 239, 240, 256, 259, 261, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 297, 298, 311, 318, 319, 338, 354, 358, 359, 369, 370, 371, 373, 411, 418, 420, 454, 455, 474, 476, 477, 479, 480, 516, 523, 539, 558, 559, 560, 561, 566, 571, 573, 574, 576, 578, 579, 582, 646, 692, 706, 708, 709, 710, 777, 778, 784, 785, 786, 788, 790, 792, 793, 794, 797, 807, 809, 810, 814, 815, 816, 841, 861, 868, 871, 886], "4000e": [11, 16, 28, 42, 45, 46, 76, 95, 96, 99, 102, 103, 106, 109, 112, 116, 120, 131, 151, 165, 176, 179, 195, 206, 228, 229, 230, 234, 236, 240, 259, 264, 265, 359, 561, 578, 579, 692, 861], "150e": [11, 16, 28, 42, 45, 95, 96, 99, 103, 106, 109, 116, 140, 141, 151, 165, 176, 179, 195, 206, 228, 229, 230, 231, 234, 236, 264, 265, 274, 479, 480, 784, 807, 861, 868], "v1": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 68, 69, 71, 72, 73, 76, 78, 82, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 109, 110, 115, 116, 117, 118, 119, 120, 122, 123, 126, 128, 131, 132, 139, 140, 141, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 188, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 217, 218, 222, 223, 228, 229, 230, 231, 234, 236, 338], "idl": [11, 13, 14, 15, 16, 18, 26, 28, 29, 42, 45, 49, 61, 68, 69, 71, 72, 73, 76, 82, 83, 87, 91, 92, 93, 95, 96, 98, 99, 102, 103, 106, 109, 110, 116, 117, 120, 122, 126, 128, 130, 131, 132, 140, 141, 145, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 171, 176, 179, 181, 182, 190, 195, 198, 202, 203, 204, 205, 206, 208, 209, 215, 218, 222, 223, 228, 229, 230, 231, 234, 236], "v2": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 68, 69, 71, 72, 73, 76, 78, 82, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 109, 110, 115, 116, 117, 118, 119, 120, 122, 123, 126, 128, 131, 132, 139, 140, 141, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 188, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 217, 218, 222, 223, 228, 229, 230, 231, 234, 236, 244, 388, 593, 886], "v3": [11, 13, 14, 15, 16, 18, 26, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 68, 69, 71, 72, 73, 76, 78, 82, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 102, 103, 106, 107, 109, 110, 115, 116, 117, 118, 119, 120, 122, 123, 126, 128, 131, 132, 139, 140, 141, 145, 148, 149, 150, 151, 155, 156, 157, 159, 161, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 217, 218, 222, 223, 228, 229, 230, 231, 234, 236], "refer": [11, 14, 22, 27, 28, 29, 30, 31, 38, 39, 41, 45, 47, 48, 49, 50, 52, 57, 60, 61, 64, 67, 68, 69, 72, 73, 76, 77, 80, 81, 84, 85, 86, 89, 91, 92, 94, 95, 96, 98, 99, 103, 106, 107, 109, 115, 119, 123, 126, 131, 132, 144, 148, 149, 151, 155, 157, 158, 164, 165, 166, 168, 169, 171, 174, 176, 178, 180, 181, 187, 191, 200, 208, 213, 214, 215, 222, 234, 236, 240, 241, 244, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 290, 297, 298, 300, 302, 335, 354, 359, 360, 369, 380, 385, 388, 389, 392, 393, 394, 403, 404, 411, 412, 415, 417, 418, 419, 421, 427, 429, 432, 435, 437, 450, 474, 476, 477, 479, 480, 490, 504, 523, 524, 528, 529, 539, 543, 558, 559, 560, 561, 562, 566, 569, 570, 572, 573, 574, 575, 576, 577, 582, 591, 593, 594, 597, 600, 601, 608, 645, 647, 650, 655, 659, 663, 666, 668, 671, 688, 690, 692, 693, 694, 695, 696, 697, 699, 700, 706, 708, 709, 710, 714, 715, 716, 717, 718, 720, 722, 724, 725, 732, 733, 735, 736, 738, 754, 756, 770, 771, 786, 793, 794, 797, 798, 801, 806, 808, 809, 814, 816, 826, 841, 849, 860, 867, 869, 871, 886], "6450": [11, 13, 14, 15, 16, 18, 28, 42, 49, 69, 72, 73, 76, 87, 95, 96, 98, 99, 116, 120, 131, 132, 140, 150, 151, 165, 168, 171, 176, 179, 195, 204, 231, 234, 236], "48149": [11, 13, 14, 15, 16, 18, 28, 42, 49, 69, 72, 73, 76, 87, 95, 96, 98, 99, 116, 120, 131, 132, 140, 150, 151, 165, 168, 171, 176, 179, 195, 204, 231, 234, 236], "956": [11, 13, 14, 15, 16, 18, 28, 29, 42, 45, 49, 68, 69, 71, 72, 73, 76, 79, 82, 87, 91, 92, 95, 96, 98, 99, 102, 103, 106, 109, 110, 116, 117, 120, 122, 126, 131, 132, 140, 142, 145, 150, 151, 155, 161, 165, 166, 167, 168, 171, 176, 179, 181, 195, 198, 202, 203, 204, 205, 206, 207, 215, 218, 222, 223, 228, 229, 230, 231, 234, 236], "320": [11, 13, 14, 15, 16, 18, 28, 29, 42, 45, 49, 56, 58, 68, 69, 71, 72, 73, 76, 80, 82, 87, 91, 92, 95, 96, 98, 99, 102, 103, 106, 107, 109, 110, 111, 116, 117, 120, 122, 126, 131, 132, 139, 140, 145, 148, 150, 151, 155, 161, 165, 166, 167, 168, 170, 171, 176, 179, 181, 195, 198, 199, 202, 203, 204, 205, 206, 208, 215, 218, 222, 223, 226, 228, 229, 230, 231, 234, 236, 410], "665": [11, 13, 14, 15, 16, 18, 28, 42, 49, 69, 72, 73, 76, 87, 89, 93, 94, 95, 96, 98, 99, 116, 120, 131, 132, 140, 150, 151, 165, 168, 171, 176, 179, 195, 204, 231, 234, 236], "41699": [11, 13, 14, 15, 16, 18, 42, 72, 73, 87, 98, 120, 132, 140, 151, 165, 195, 231], "277": [11, 13, 14, 15, 16, 18, 42, 71, 72, 73, 87, 98, 120, 132, 140, 151, 165, 166, 168, 181, 195, 200, 203, 208, 215, 226, 231], "709": [11, 13, 14, 15, 16, 18, 19, 42, 72, 73, 87, 98, 120, 132, 140, 151, 165, 195, 231], "199": [11, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 78, 85, 86, 115, 118, 119, 126, 148, 168, 171, 175, 177, 178, 180, 182, 190, 194, 195, 208, 209, 221, 236, 244, 720, 722, 732, 736], "325": [11, 73, 111, 168], "366": [11, 13, 14, 15, 16, 18, 22, 31, 35, 40, 47, 48, 49, 50, 51, 54, 55, 58, 59, 64, 68, 80, 87, 89, 91, 92, 93, 94, 120, 130, 132, 143, 148, 168, 171, 177, 178, 195, 208, 209, 222, 223, 226, 231], "143": [11, 49, 73, 168, 200, 208, 209, 226, 231, 244, 277], "19979521315838786": [11, 28, 61, 69, 71, 72, 79, 92, 93, 95, 96, 99, 102, 103, 106, 109, 116, 131, 141, 144, 148, 149, 151, 165, 171, 176, 179, 181, 199, 200, 203, 222, 229, 230, 234, 236], "151": [11, 21, 119, 150, 168, 171, 195, 204, 208, 226, 236, 277], "prior": [11, 12, 18, 27, 28, 29, 30, 34, 36, 38, 39, 40, 44, 47, 52, 56, 57, 58, 60, 89, 103, 106, 107, 109, 112, 123, 141, 148, 150, 161, 165, 171, 177, 178, 179, 180, 191, 195, 204, 207, 209, 211, 218, 222, 231, 234, 236, 261, 262, 266, 268, 269, 275, 297, 298, 455, 456, 474, 475, 476, 477, 479, 480, 496, 527, 528, 539, 561, 571, 582, 593, 614, 623, 625, 754, 781, 782, 807, 813, 868, 871, 874, 886], "061": [11, 16, 28, 32, 33, 45, 46, 61, 71, 72, 73, 92, 93, 95, 99, 106, 112, 116, 139, 144, 150, 151, 165, 166, 167, 168, 171, 176, 179, 198, 199, 200, 203, 204, 205, 206, 209, 215, 216, 217, 218, 226, 227, 228, 229, 230, 231, 234, 236, 240, 244, 693, 694, 696, 697], "read_cov": [11, 31, 35, 40, 41, 45, 48, 49, 50, 51, 54, 55, 58, 59, 64, 68, 91, 93, 161, 177, 178, 261, 830, 865, 876], "305": [11, 28, 29, 30, 31, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 76, 78, 81, 86, 87, 93, 103, 106, 107, 108, 109, 111, 120, 123, 139, 145, 149, 151, 161, 165, 168, 171, 175, 176, 177, 178, 179, 180, 207, 222, 226, 231, 234, 236, 244, 264, 265, 266, 267, 479, 480, 650], "22494": [11, 22, 28, 29, 35, 38, 39, 52, 57, 60, 103, 106, 107, 109, 123, 165, 171, 180, 234, 236], "diagon": [11, 28, 29, 30, 38, 39, 44, 47, 52, 57, 60, 70, 103, 106, 107, 109, 123, 165, 171, 179, 180, 195, 222, 223, 234, 236, 244, 261, 297, 298, 354, 371, 516, 528, 536, 868, 871, 886], "retriev": [11, 195, 204, 208, 240, 328, 329, 349, 429, 487, 494, 623, 886], "lh_data": [11, 115, 174, 236, 275, 278], "hemispher": [11, 24, 27, 40, 43, 47, 52, 67, 121, 125, 126, 129, 140, 150, 154, 157, 174, 177, 182, 234, 235, 236, 260, 270, 271, 272, 275, 276, 277, 278, 279, 280, 324, 360, 388, 469, 513, 610, 628, 630, 633, 654, 669, 677, 702, 753, 754, 812, 817, 836, 871, 886], "prepar": [11, 12, 19, 21, 28, 29, 30, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 54, 55, 57, 58, 59, 60, 78, 86, 89, 93, 103, 106, 107, 108, 109, 118, 123, 149, 165, 170, 176, 177, 178, 180, 181, 190, 195, 199, 206, 222, 223, 228, 234, 307, 318, 329, 369, 370, 528, 529, 530, 531, 532, 534, 535, 541, 544, 545, 594, 845, 871, 886], "seri": [11, 16, 27, 28, 29, 31, 36, 41, 56, 71, 80, 89, 92, 93, 94, 110, 136, 160, 167, 174, 179, 180, 187, 204, 205, 218, 223, 236, 241, 244, 262, 263, 264, 265, 266, 267, 270, 271, 272, 275, 277, 278, 279, 280, 297, 298, 354, 414, 421, 424, 445, 479, 480, 527, 528, 531, 542, 561, 566, 570, 623, 627, 692, 693, 694, 706, 707, 709, 711, 712, 713, 722, 731, 732, 767, 778, 818, 841, 843, 845, 868, 886], "time_decod": [11, 195], "31": [11, 19, 28, 32, 34, 35, 41, 43, 45, 47, 56, 75, 80, 81, 82, 102, 107, 108, 111, 113, 150, 153, 158, 159, 163, 168, 179, 182, 184, 189, 190, 194, 195, 204, 208, 210, 226, 227, 228, 230, 231, 234, 235, 236, 239, 244, 264, 265, 277, 335, 539, 663, 668, 868, 886], "74it": [11, 13, 19, 102, 108, 111, 194, 195, 208, 226, 227, 230, 231, 234], "84it": [11, 19, 102, 107, 111, 194, 195, 208, 226, 228, 231, 235, 236], "43it": [11, 13, 19, 34, 102, 107, 108, 111, 194, 195, 208, 226, 227, 228, 230, 231], "92it": [11, 13, 19, 33, 34, 102, 107, 111, 194, 195, 208, 223, 226, 227, 230, 231], "21": [11, 13, 19, 28, 34, 35, 41, 44, 45, 46, 47, 56, 64, 70, 74, 80, 84, 102, 107, 108, 111, 113, 139, 144, 147, 149, 159, 163, 167, 168, 170, 171, 182, 187, 189, 190, 193, 194, 195, 208, 215, 226, 227, 228, 230, 231, 234, 236, 239, 241, 243, 244, 261, 262, 264, 265, 266, 267, 271, 272, 273, 274, 275, 277, 278, 279, 280, 285, 297, 298, 358, 360, 404, 411, 418, 445, 450, 464, 479, 480, 515, 520, 541, 560, 561, 569, 571, 572, 576, 578, 579, 582, 593, 628, 636, 650, 655, 698, 706, 708, 710, 771, 772, 782, 786, 787, 788, 789, 793, 794, 795, 797, 799, 806, 807, 809, 811, 812, 814, 816, 820, 836, 839, 843, 844, 862, 868], "08it": [11, 19, 33, 34, 95, 102, 108, 194, 195, 208, 226, 230, 231, 234, 235], "29it": [11, 13, 19, 102, 107, 108, 194, 195, 208, 226, 227, 230, 231], "25it": [11, 13, 19, 34, 102, 103, 111, 195, 226, 228, 231], "01it": [11, 19, 34, 102, 107, 179, 195, 208, 226, 227, 228, 230, 231, 234, 236], "29": [11, 13, 19, 21, 24, 28, 34, 35, 41, 43, 45, 47, 50, 56, 80, 102, 107, 108, 111, 112, 113, 122, 136, 142, 155, 156, 157, 168, 170, 174, 182, 183, 184, 186, 194, 195, 202, 206, 208, 209, 210, 226, 227, 228, 230, 231, 234, 235, 236, 240, 244, 277, 886], "64it": [11, 13, 19, 33, 102, 107, 108, 194, 208, 226, 227, 230, 231, 235], "32": [11, 12, 13, 19, 21, 28, 34, 35, 41, 42, 45, 47, 49, 69, 71, 72, 73, 74, 80, 81, 93, 98, 102, 105, 106, 107, 108, 109, 111, 113, 119, 128, 134, 139, 140, 141, 145, 148, 149, 150, 151, 157, 161, 165, 167, 168, 169, 170, 171, 175, 176, 179, 181, 182, 183, 184, 189, 195, 199, 200, 202, 203, 204, 206, 207, 208, 211, 216, 221, 222, 223, 226, 227, 228, 230, 231, 234, 235, 236, 241, 244, 257, 264, 265, 390, 410, 452, 479, 480, 501, 528, 577, 851, 862, 868, 871, 872, 886], "17it": [11, 13, 19, 102, 108, 111, 208, 226, 227, 229, 230, 231, 234], "61it": [11, 19, 34, 102, 111, 195, 208, 226, 228, 230, 231, 234], "39": [11, 12, 19, 21, 28, 35, 45, 47, 80, 102, 107, 108, 111, 113, 122, 136, 139, 156, 157, 158, 168, 179, 183, 184, 189, 190, 194, 195, 200, 208, 209, 226, 227, 228, 230, 231, 234, 235, 236, 244, 277, 403, 861], "00it": [11, 19, 34, 102, 111, 194, 195, 226, 227, 230, 231, 235, 236], "32it": [11, 13, 19, 33, 103, 108, 111, 194, 195, 208, 226, 228, 231], "60it": [11, 19, 102, 107, 111, 194, 195, 208, 226, 230, 231, 235], "85it": [11, 19, 33, 34, 102, 107, 108, 111, 194, 195, 208, 226, 228, 231], "52": [11, 19, 28, 35, 45, 47, 80, 81, 84, 98, 102, 107, 108, 111, 113, 144, 150, 153, 167, 168, 186, 190, 194, 201, 208, 226, 227, 230, 231, 234, 236, 244, 403, 692, 735, 738, 886], "27": [11, 12, 13, 19, 21, 24, 28, 33, 34, 35, 39, 41, 43, 45, 46, 47, 50, 56, 80, 81, 101, 102, 103, 107, 108, 113, 144, 149, 157, 159, 168, 170, 177, 179, 182, 184, 189, 190, 194, 195, 197, 202, 208, 211, 214, 226, 227, 228, 230, 231, 234, 235, 236, 244, 572, 843], "28it": [11, 13, 19, 107, 108, 111, 195, 208, 226, 227, 231, 235, 236], "46it": [11, 19, 34, 102, 111, 194, 208, 226, 231, 236], "61": [11, 13, 19, 30, 35, 45, 47, 51, 56, 57, 71, 80, 82, 89, 92, 102, 107, 108, 111, 113, 115, 122, 126, 135, 145, 148, 165, 166, 167, 168, 169, 171, 175, 177, 178, 183, 184, 189, 194, 195, 198, 199, 202, 205, 206, 207, 208, 209, 215, 216, 217, 218, 226, 227, 228, 230, 231, 236, 244, 354], "62it": [11, 13, 19, 33, 34, 102, 108, 111, 195, 208, 226, 231], "65": [11, 12, 13, 19, 21, 34, 35, 45, 47, 80, 83, 102, 107, 108, 111, 113, 135, 142, 144, 155, 168, 169, 176, 177, 183, 189, 194, 200, 207, 208, 226, 227, 228, 230, 231, 234, 235, 236, 244, 601, 886], "76it": [11, 19, 33, 102, 107, 111, 194, 208, 226, 227, 230, 231, 236], "68": [11, 19, 34, 35, 41, 45, 47, 80, 81, 89, 100, 102, 107, 108, 111, 113, 125, 136, 139, 142, 144, 157, 168, 170, 171, 175, 180, 183, 189, 190, 194, 195, 208, 226, 227, 230, 231, 234, 244, 266, 267, 297, 298, 335, 354, 358, 359, 369, 370, 371, 403, 411, 418, 454, 455, 474, 476, 477, 539, 794], "89it": [11, 19, 33, 34, 102, 108, 111, 122, 194, 195, 208, 226, 227, 230, 231, 234, 235], "71": [11, 12, 19, 21, 35, 45, 80, 102, 107, 108, 111, 113, 136, 168, 175, 180, 181, 183, 189, 194, 195, 208, 226, 227, 228, 230, 231, 235, 236], "74": [11, 13, 15, 19, 26, 35, 41, 45, 50, 79, 80, 81, 102, 107, 108, 111, 113, 136, 157, 167, 168, 169, 170, 175, 180, 183, 189, 190, 194, 195, 201, 206, 208, 223, 226, 227, 230, 231, 233, 234, 236, 687], "12it": [11, 19, 102, 107, 108, 194, 195, 208, 226, 227, 230, 231, 235], "45it": [11, 19, 33, 102, 107, 108, 194, 195, 208, 227, 230, 231, 236], "81": [11, 13, 15, 16, 19, 34, 35, 56, 80, 102, 106, 107, 108, 111, 113, 141, 155, 168, 179, 183, 189, 194, 195, 207, 208, 210, 226, 227, 230, 231, 239, 244, 663, 668, 720, 722, 732, 736, 886], "65it": [11, 19, 102, 107, 111, 194, 195, 208, 226, 227, 228, 230, 231], "83it": [11, 13, 19, 34, 102, 111, 179, 194, 195, 208, 226, 230, 231, 236], "87": [11, 18, 19, 33, 35, 47, 79, 92, 93, 107, 108, 111, 113, 122, 123, 168, 189, 195, 206, 208, 209, 226, 227, 230, 231, 234, 244, 415, 417, 429, 868], "16it": [11, 19, 34, 107, 111, 194, 195, 208, 226, 227, 230, 231], "94": [11, 13, 19, 35, 47, 80, 102, 106, 107, 108, 111, 113, 136, 168, 169, 179, 182, 190, 194, 195, 206, 208, 211, 226, 227, 228, 229, 230, 231, 234, 236, 244, 868], "30it": [11, 19, 102, 107, 111, 179, 194, 195, 208, 226, 227, 228, 231], "44it": [11, 13, 19, 33, 34, 102, 194, 208, 226, 230, 231], "14it": [11, 13, 19, 33, 34, 95, 102, 111, 194, 195, 208, 226, 227, 228, 230, 231], "94it": [11, 19, 34, 102, 107, 108, 179, 194, 208, 226, 227, 229, 230, 231, 235, 236], "53it": [11, 13, 19, 44, 102, 107, 108, 111, 194, 195, 208, 226, 230, 231, 236], "06it": [11, 13, 19, 34, 111, 194, 208, 226, 227, 230, 231], "10it": [11, 13, 19, 34, 102, 195, 208, 226, 228, 230, 231, 235], "40it": [11, 13, 19, 34, 102, 108, 111, 195, 208, 226, 227, 231, 236], "18it": [11, 19, 34, 102, 107, 111, 194, 195, 208, 226, 230, 231], "47it": [11, 19, 102, 107, 108, 111, 194, 195, 208, 226, 227, 228, 230, 231], "70it": [11, 13, 19, 33, 34, 102, 111, 194, 208, 226, 230, 231, 235], "90it": [11, 19, 34, 102, 107, 108, 111, 194, 195, 208, 226, 227, 228, 230, 231, 234, 235], "07it": [11, 19, 33, 34, 102, 111, 194, 195, 208, 226, 227, 229, 230, 231, 235], "22it": [11, 13, 19, 34, 111, 194, 195, 208, 226, 227, 230, 231], "35it": [11, 19, 95, 102, 111, 194, 195, 208, 226, 227, 228, 231, 235, 236], "48it": [11, 19, 33, 34, 102, 107, 108, 194, 195, 208, 226, 228, 231, 235, 236], "72it": [11, 19, 33, 102, 107, 108, 194, 195, 208, 226, 227, 228, 231, 235], "93it": [11, 19, 34, 102, 107, 108, 111, 195, 208, 226, 227, 228, 230, 231, 234], "73it": [11, 19, 34, 102, 108, 111, 194, 195, 208, 226, 227, 228, 230, 231], "86it": [11, 13, 19, 33, 102, 108, 111, 208, 226, 227, 230, 231, 234], "97it": [11, 19, 33, 103, 107, 111, 194, 195, 226, 228, 231], "71it": [11, 13, 19, 33, 102, 107, 111, 194, 195, 208, 226, 228, 230, 231, 235], "88it": [11, 19, 34, 102, 107, 108, 111, 194, 195, 208, 226, 227, 228, 230, 231, 234, 235], "67it": [11, 13, 19, 33, 102, 108, 111, 194, 195, 208, 227, 228, 230, 231], "54it": [11, 33, 44, 102, 108, 111, 179, 194, 195, 208, 226, 227, 228, 230, 231, 235, 236], "09it": [11, 19, 33, 102, 108, 111, 195, 208, 226, 227, 230, 231], "87it": [11, 13, 34, 102, 107, 111, 194, 195, 208, 223, 227, 230, 231], "42it": [11, 13, 19, 33, 102, 107, 108, 111, 194, 195, 208, 226, 231, 236], "19it": [11, 19, 34, 102, 107, 111, 194, 195, 208, 226, 227, 230, 231], "91it": [11, 19, 34, 102, 108, 179, 194, 195, 208, 226, 227, 230, 231, 234], "21it": [11, 13, 19, 34, 102, 111, 194, 195, 208, 226, 227, 228, 231], "34it": [11, 13, 19, 111, 194, 195, 208, 226, 230, 231, 236], "55it": [11, 13, 19, 33, 102, 108, 111, 194, 195, 208, 226, 227, 230, 231, 234, 236], "52it": [11, 19, 33, 102, 107, 108, 111, 194, 195, 208, 226, 230, 231, 235, 236], "75it": [11, 13, 19, 34, 102, 107, 111, 194, 195, 208, 226, 227, 228, 230, 231], "95it": [11, 19, 33, 34, 102, 107, 108, 111, 194, 195, 208, 226, 228, 230, 231, 234, 235], "31it": [11, 13, 19, 34, 102, 107, 111, 122, 194, 195, 208, 226, 227, 228, 230, 231, 235], "96it": [11, 13, 19, 33, 34, 44, 102, 194, 195, 208, 226, 231, 236], "11it": [11, 19, 34, 102, 103, 108, 111, 179, 195, 208, 226, 227, 230, 231], "41it": [11, 13, 19, 34, 102, 107, 111, 194, 195, 208, 226, 230, 231, 235], "63it": [11, 13, 19, 102, 107, 108, 194, 195, 208, 227, 228, 230, 231, 236], "78it": [11, 19, 102, 107, 108, 111, 194, 195, 208, 226, 231], "38it": [11, 13, 19, 102, 111, 194, 195, 208, 226, 227, 228, 230, 231, 235, 236], "66it": [11, 19, 33, 102, 111, 195, 208, 226, 230, 231, 236], "51it": [11, 19, 34, 102, 111, 194, 195, 208, 226, 227, 230, 231, 234, 235, 236], "36it": [11, 19, 34, 102, 111, 179, 194, 195, 208, 226, 228, 230, 231], "82it": [11, 19, 34, 102, 103, 107, 108, 194, 195, 208, 226, 227, 231, 235, 236], "02it": [11, 19, 34, 102, 107, 108, 194, 195, 208, 226, 227, 228, 231, 234, 235, 236], "20it": [11, 19, 34, 102, 107, 111, 195, 208, 226, 230, 231, 236], "37it": [11, 13, 102, 111, 194, 195, 208, 226, 227, 230, 231, 234], "68it": [11, 13, 19, 33, 102, 108, 111, 179, 194, 208, 226, 228, 229, 230, 231, 235], "investig": [11, 21, 143, 150, 190, 201, 236, 266, 267, 561, 794, 862], "patterns_": [11, 15, 18, 19, 21, 195, 411, 415, 417, 418, 419, 429, 562, 886], "inverse_transform": [11, 18, 195, 419, 420, 425, 426, 429, 562], "lookup": [11, 41, 257, 264, 265, 266, 267, 269, 277, 463, 464, 479, 480, 655, 754, 841], "vertic": [11, 22, 24, 28, 38, 39, 41, 43, 48, 52, 53, 68, 115, 126, 133, 135, 139, 141, 154, 157, 158, 159, 160, 174, 177, 180, 190, 199, 202, 207, 208, 215, 218, 223, 226, 227, 234, 235, 236, 260, 264, 265, 266, 267, 270, 271, 272, 275, 276, 277, 278, 279, 280, 284, 285, 297, 298, 358, 360, 445, 458, 467, 469, 470, 479, 480, 513, 515, 537, 538, 627, 656, 669, 671, 672, 674, 675, 676, 677, 678, 680, 681, 682, 693, 694, 696, 697, 698, 701, 702, 753, 754, 768, 773, 778, 784, 792, 807, 812, 817, 836, 841, 868, 871, 886], "lh_vertno": [11, 115, 174, 275, 278, 669], "empti": [11, 15, 27, 121, 129, 139, 141, 149, 160, 161, 165, 168, 170, 171, 183, 184, 190, 200, 204, 205, 207, 209, 215, 221, 236, 258, 261, 264, 265, 266, 267, 269, 273, 275, 288, 302, 310, 319, 326, 348, 349, 354, 359, 377, 378, 379, 382, 383, 384, 386, 391, 394, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 438, 459, 479, 480, 487, 491, 494, 495, 502, 506, 527, 552, 553, 554, 558, 559, 561, 562, 564, 571, 572, 582, 593, 594, 617, 625, 636, 646, 650, 687, 693, 702, 706, 708, 709, 710, 723, 741, 754, 763, 770, 778, 779, 784, 785, 791, 793, 801, 807, 808, 841, 845, 861, 868, 871, 886], "stc_feat": 11, "sourceestim": [11, 22, 26, 31, 35, 37, 40, 46, 59, 60, 93, 154, 157, 164, 165, 180, 185, 186, 222, 223, 234, 235, 236, 263, 266, 267, 270, 271, 272, 274, 276, 277, 278, 279, 280, 284, 285, 289, 290, 291, 292, 293, 294, 295, 296, 360, 445, 458, 474, 475, 476, 477, 515, 528, 529, 530, 531, 532, 534, 537, 538, 543, 544, 627, 633, 646, 656, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 691, 698, 701, 702, 754, 768, 812, 813, 841, 863, 865, 876, 886], "ab": [11, 19, 35, 38, 40, 47, 59, 60, 68, 96, 118, 119, 126, 134, 150, 178, 182, 190, 194, 201, 226, 228, 229, 234, 235, 236, 241, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 563, 722, 732, 789, 868, 886], "tstep": [11, 22, 31, 46, 59, 89, 93, 94, 180, 223, 234, 235, 236, 271, 272, 275, 278, 279, 280, 359, 477, 515, 561, 656, 673, 692, 698, 721, 729, 886], "transpar": [11, 58, 100, 171, 180, 199, 241, 256, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 754, 773, 790, 807, 812, 817, 818, 819, 820, 867, 886], "03": [11, 19, 24, 33, 34, 35, 49, 56, 59, 66, 71, 73, 75, 76, 82, 83, 84, 89, 92, 93, 101, 102, 105, 107, 108, 119, 120, 126, 129, 138, 140, 145, 149, 150, 157, 161, 165, 166, 167, 168, 169, 181, 182, 183, 189, 193, 194, 195, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 215, 216, 217, 218, 221, 222, 223, 226, 227, 228, 230, 231, 235, 236, 244, 258, 262, 354, 561, 693, 694, 696, 697, 782], "26it": [11, 13, 19, 102, 107, 108, 194, 195, 208, 226, 227, 228, 230, 231], "80it": [11, 19, 102, 111, 194, 195, 208, 226, 228, 231, 236], "33it": [11, 13, 19, 102, 107, 194, 208, 226, 227, 230, 231, 234, 235, 236], "57it": [11, 19, 33, 102, 107, 108, 111, 194, 195, 208, 226, 227, 230, 231], "03it": [11, 19, 34, 107, 108, 111, 194, 195, 208, 226, 227, 230, 231, 236], "27it": [11, 19, 33, 107, 111, 179, 195, 208, 226, 227, 230, 231], "39it": [11, 13, 33, 34, 102, 107, 111, 179, 194, 208, 226, 231, 236], "5072551": 11, "37721471": 11, "59502306": 11, "382": [11, 20, 80, 208, 226, 244, 666], "decoding_spatio_temporal_sourc": [11, 20], "comodul": [12, 418], "allow": [12, 19, 40, 43, 44, 46, 60, 93, 103, 111, 114, 115, 119, 136, 139, 140, 141, 142, 143, 145, 149, 150, 156, 157, 159, 165, 168, 169, 171, 177, 188, 191, 195, 201, 206, 215, 216, 218, 226, 227, 228, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 271, 272, 275, 277, 278, 279, 280, 291, 292, 295, 308, 312, 335, 340, 347, 354, 372, 411, 417, 418, 419, 444, 452, 469, 478, 479, 480, 482, 494, 495, 498, 500, 530, 532, 535, 537, 538, 539, 543, 561, 562, 566, 582, 591, 611, 617, 623, 641, 655, 671, 673, 692, 706, 708, 709, 710, 733, 734, 736, 737, 748, 752, 775, 784, 786, 797, 799, 807, 810, 841, 843, 845, 863, 867, 868, 871, 874, 886], "composit": [12, 187, 195, 271, 272, 275, 278, 279, 280, 754, 812, 817, 868], "orthogon": [12, 113, 155, 159, 177, 195, 205, 206, 209, 297, 298, 561, 734, 737, 868, 871, 874, 886], "spatial": [12, 14, 15, 17, 18, 20, 27, 31, 32, 33, 34, 36, 47, 56, 70, 71, 79, 82, 83, 89, 112, 118, 120, 150, 151, 154, 155, 161, 174, 198, 199, 201, 205, 206, 211, 218, 221, 223, 226, 228, 231, 234, 235, 236, 240, 241, 244, 261, 264, 265, 266, 267, 268, 269, 270, 273, 275, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 312, 328, 354, 360, 363, 364, 373, 411, 412, 418, 419, 425, 427, 429, 440, 479, 480, 491, 492, 494, 521, 527, 539, 540, 543, 558, 559, 560, 561, 562, 575, 576, 592, 593, 614, 620, 623, 625, 660, 663, 668, 676, 677, 678, 679, 683, 693, 694, 696, 697, 706, 708, 710, 725, 744, 754, 771, 786, 788, 793, 794, 797, 806, 809, 814, 816, 841, 861, 862, 865, 868, 886], "maxim": [12, 60, 87, 141, 159, 175, 176, 179, 182, 195, 201, 203, 244, 272, 278, 279, 280, 297, 298, 419, 561, 591, 676, 677, 678, 680, 681, 692, 818, 868, 886], "csp": [12, 17, 20, 27, 195, 264, 269, 312, 328, 363, 373, 415, 418, 440, 494, 558, 562, 706, 862, 876, 886], "variabl": [12, 16, 31, 43, 100, 102, 111, 116, 140, 142, 149, 154, 167, 169, 195, 198, 201, 203, 205, 215, 217, 230, 231, 236, 244, 257, 262, 264, 265, 270, 271, 272, 274, 275, 278, 279, 280, 303, 307, 308, 309, 312, 360, 365, 366, 367, 372, 375, 377, 378, 379, 380, 382, 383, 384, 387, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 418, 428, 430, 440, 452, 453, 459, 461, 463, 467, 469, 470, 471, 472, 473, 479, 480, 499, 513, 517, 519, 547, 560, 561, 582, 589, 608, 610, 618, 622, 628, 637, 642, 643, 644, 645, 652, 654, 655, 669, 672, 683, 693, 694, 695, 696, 697, 701, 702, 746, 754, 770, 772, 782, 784, 801, 807, 812, 817, 818, 820, 836, 841, 843, 850, 851, 861, 865, 868, 872, 886], "fluctuat": [12, 140, 141, 150, 198, 200, 206, 207, 211, 223, 266, 267, 794, 841], "electromyogram": [12, 886], "cortico": 12, "muscular": [12, 198, 204], "coher": [12, 32, 33, 102, 106, 179, 223, 244, 289, 290, 291, 292, 297, 706, 707, 733, 734, 735, 736, 737, 738, 780, 841, 852, 862], "fieldtrip": [12, 155, 190, 201, 207, 226, 228, 234, 322, 329, 499, 618, 622, 733, 734, 736, 737, 868, 874, 886], "fieldtrip_cmc": [12, 21, 170], "ridg": [12, 19, 194, 417, 423], "kfold": [12, 16, 19, 354, 359, 428, 886], "cross_val_predict": [12, 886], "subjectcmc": [12, 21], "emg": [12, 82, 136, 168, 188, 195, 215, 221, 244, 264, 265, 266, 267, 274, 311, 373, 418, 444, 479, 480, 491, 494, 506, 558, 561, 706, 708, 709, 710, 784, 807, 862, 868, 871, 886], "emglft": 12, "ref_meg": [12, 21, 74, 118, 122, 168, 211, 264, 265, 266, 267, 274, 311, 373, 479, 480, 558, 559, 575, 706, 708, 709, 710, 784, 807, 886], "make_fixed_length_ev": [12, 21, 165, 167, 216, 221, 359, 534, 841, 876, 886], "durat": [12, 21, 49, 65, 70, 71, 73, 74, 75, 76, 80, 81, 82, 89, 92, 93, 122, 126, 136, 139, 140, 143, 145, 148, 149, 150, 165, 166, 167, 190, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 223, 234, 235, 236, 256, 258, 264, 265, 266, 267, 274, 275, 283, 341, 343, 357, 359, 411, 413, 417, 418, 422, 423, 440, 447, 449, 450, 452, 479, 480, 496, 520, 521, 561, 563, 564, 566, 582, 593, 601, 656, 658, 698, 720, 722, 732, 736, 784, 793, 801, 807, 841, 845, 886], "meg_epoch": [12, 18], "detrend": [12, 109, 134, 210, 259, 264, 266, 267, 520, 616, 886], "emg_epoch": 12, "var": [12, 47, 70, 170, 206, 375, 459, 699], "oa": [12, 21, 83, 182, 354], "validaton": 12, "first_samp": [12, 70, 75, 136, 165, 167, 183, 215, 216, 217, 258, 259, 264, 265, 269, 274, 283, 362, 439, 440, 452, 478, 479, 480, 500, 521, 556, 561, 594, 619, 620, 656, 671, 787, 801, 807, 831, 841, 871, 886], "set_xlabel": [12, 13, 19, 21, 22, 45, 70, 95, 103, 112, 132, 143, 145, 171, 182, 195, 205, 229, 230, 231], "set_titl": [12, 13, 22, 45, 70, 71, 95, 98, 111, 113, 119, 126, 135, 143, 194, 195, 209, 210, 229, 230, 231, 240, 241], "78": [12, 13, 19, 21, 34, 35, 47, 51, 79, 80, 102, 111, 113, 122, 136, 156, 157, 165, 168, 175, 178, 184, 189, 194, 195, 208, 215, 226, 227, 228, 230, 231, 236, 244, 300, 403, 868], "62": [12, 13, 16, 19, 21, 28, 34, 35, 38, 45, 47, 56, 70, 80, 102, 107, 113, 135, 136, 168, 179, 189, 194, 195, 208, 226, 227, 230, 231, 234, 244], "258": [12, 21, 67, 111, 122, 157, 165, 168, 231], "114": [12, 20, 21, 35, 80, 150, 168, 180, 208, 216, 226, 230, 886], "12000": [12, 21], "911610": [12, 21], "191": [12, 21, 168, 194, 208, 226, 230, 231], "180000": 12, "150": [12, 35, 42, 45, 59, 73, 74, 76, 80, 81, 93, 119, 122, 140, 141, 145, 147, 150, 157, 159, 165, 168, 179, 190, 200, 204, 206, 226, 230, 231, 256, 277, 724, 886], "793": [12, 19, 143, 186, 231], "661": [12, 157, 163, 201, 227, 231], "1057": 12, "881": [12, 208, 231, 277], "183": [12, 157, 168, 171, 194, 230, 231], "1801": 12, "contribut": [12, 19, 45, 68, 148, 150, 179, 228, 231, 255, 264, 265, 440, 577, 662, 843, 849, 862, 864, 867, 886], "sven": [12, 18, 19, 195, 244, 415, 417, 418, 419, 429], "d\u00e4hne": [12, 18, 19, 195, 244, 415, 417, 418, 429], "frank": [12, 18, 19, 75, 195, 204, 244, 415, 417, 418, 429, 561, 600], "meineck": [12, 18, 19, 195, 244, 415, 417, 418, 429], "stefan": [12, 18, 19, 33, 112, 126, 195, 204, 228, 231, 234, 240, 244, 415, 417, 418, 419, 429, 576, 873, 886], "hauf": [12, 18, 19, 195, 244, 415, 417, 418, 419, 429], "johann": [12, 195, 244, 418, 886], "h\u00f6hne": [12, 195, 244, 418], "michael": [12, 19, 100, 194, 195, 203, 204, 244, 354, 411, 417, 418, 560, 561, 597, 608, 720, 722, 732, 736, 862, 868, 886], "tangermann": [12, 195, 204, 244, 418], "klau": [12, 195, 204, 244, 411, 418, 561], "robert": [12, 75, 179, 194, 195, 204, 211, 231, 244, 411, 417, 418, 575, 693, 694, 696, 697, 862, 873, 886], "m\u00fcller": [12, 74, 195, 204, 244, 411, 418, 561], "vadim": [12, 21, 195, 244, 418, 419], "nikulin": [12, 21, 195, 244, 418, 419], "novel": [12, 21, 195, 244, 332, 418, 419, 874], "framework": [12, 35, 195, 244, 418, 474, 857, 868], "amplitud": [12, 19, 35, 37, 39, 40, 45, 47, 53, 59, 80, 81, 92, 93, 94, 115, 122, 126, 131, 134, 139, 140, 143, 144, 161, 165, 171, 174, 179, 182, 183, 189, 191, 194, 195, 198, 199, 201, 204, 205, 206, 208, 210, 211, 223, 244, 256, 259, 262, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 290, 298, 341, 342, 343, 347, 359, 418, 454, 476, 477, 479, 480, 522, 532, 543, 561, 563, 578, 579, 615, 658, 659, 663, 667, 668, 692, 693, 708, 709, 710, 722, 732, 754, 781, 782, 795, 808, 841, 852, 865, 868, 871, 886], "neuron": [12, 21, 136, 143, 194, 195, 198, 244, 297, 404, 417, 418, 419, 528, 575, 841, 862, 868], "oscil": [12, 21, 68, 93, 112, 113, 195, 198, 202, 223, 244, 418, 419, 659, 720, 722, 732, 736], "behavior": [12, 143, 168, 187, 195, 198, 200, 201, 206, 244, 257, 264, 265, 274, 418, 452, 521, 526, 528, 593, 620, 655, 824, 845, 864, 865, 867, 874], "111": [12, 32, 35, 46, 112, 126, 144, 168, 195, 226, 231, 244, 418], "2013": [12, 16, 18, 19, 43, 59, 80, 81, 128, 143, 168, 195, 244, 270, 275, 276, 282, 360, 412, 415, 417, 418, 427, 429, 435, 477, 566, 597, 663, 668, 860], "07": [12, 35, 46, 56, 59, 80, 83, 101, 102, 105, 133, 138, 159, 169, 175, 178, 182, 183, 184, 190, 194, 195, 208, 214, 226, 228, 231, 244, 321, 418, 666, 868], "079": [12, 135, 195, 244, 418], "381": [12, 20, 80, 226], "decoding_spoc_cmc": [12, 20], "illustr": [13, 27, 28, 68, 69, 89, 93, 94, 124, 133, 137, 141, 145, 149, 150, 164, 165, 170, 187, 198, 199, 200, 202, 204, 206, 210, 215, 226, 230, 236, 240, 479, 480, 841, 861, 868], "discriminatori": 13, "given": [13, 16, 19, 26, 31, 70, 79, 93, 94, 111, 119, 120, 136, 142, 143, 148, 149, 150, 157, 159, 161, 164, 165, 168, 169, 170, 174, 177, 179, 185, 186, 187, 194, 195, 200, 201, 204, 205, 206, 209, 211, 215, 216, 218, 226, 228, 230, 231, 239, 241, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278, 279, 280, 288, 297, 298, 302, 310, 312, 316, 317, 318, 327, 329, 330, 354, 359, 365, 366, 367, 368, 369, 377, 378, 379, 380, 382, 383, 384, 386, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 413, 415, 418, 419, 421, 426, 427, 431, 432, 436, 446, 447, 450, 452, 454, 456, 467, 474, 476, 477, 478, 479, 480, 520, 523, 524, 527, 528, 529, 530, 531, 532, 534, 535, 536, 539, 544, 545, 560, 561, 562, 563, 564, 566, 572, 576, 577, 578, 579, 582, 585, 589, 593, 599, 601, 607, 608, 613, 616, 650, 655, 660, 670, 673, 674, 686, 688, 692, 693, 694, 696, 697, 699, 701, 704, 706, 707, 708, 709, 710, 714, 715, 716, 717, 718, 719, 722, 724, 726, 730, 732, 736, 737, 741, 742, 746, 754, 758, 760, 770, 771, 772, 778, 782, 784, 785, 786, 788, 789, 790, 791, 793, 798, 801, 805, 807, 808, 809, 810, 812, 814, 816, 817, 821, 822, 841, 843, 845, 862, 865, 867, 868, 871, 886], "subsequ": [13, 69, 83, 111, 112, 139, 141, 144, 156, 160, 165, 195, 199, 202, 204, 215, 234, 244, 264, 265, 479, 480, 561, 564, 571, 582, 698, 841, 848, 861, 865, 868, 886], "accur": [13, 26, 41, 44, 45, 50, 108, 134, 157, 158, 175, 181, 187, 195, 203, 204, 206, 209, 211, 257, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 454, 479, 480, 519, 561, 575, 588, 744, 793, 820, 861, 886], "generalizingestim": [13, 195, 428, 876, 886], "events_fnam": 13, "auditori": [13, 15, 30, 31, 37, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 60, 61, 65, 71, 78, 79, 85, 86, 93, 111, 115, 118, 119, 123, 126, 131, 139, 140, 141, 142, 144, 145, 148, 149, 150, 151, 164, 165, 167, 171, 174, 175, 177, 178, 179, 180, 181, 192, 193, 194, 195, 201, 206, 211, 216, 222, 230, 234, 236, 239, 241, 244, 257, 258, 259, 261, 264, 265, 266, 267, 269, 270, 275, 353, 355, 359, 361, 363, 417, 438, 452, 479, 492, 517, 518, 523, 526, 527, 528, 539, 574, 597, 617, 619, 625, 631, 638, 654, 709, 754, 886], "050": [13, 80, 90, 93, 139, 141, 148, 168, 179, 199, 207, 208, 223, 244], "faster": [13, 18, 44, 119, 139, 182, 195, 204, 241, 244, 256, 264, 265, 266, 267, 270, 271, 272, 275, 278, 279, 280, 360, 363, 451, 467, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 520, 561, 563, 693, 694, 696, 697, 843, 848, 849, 851, 874, 886], "constructor": [13, 87, 139, 141, 150, 164, 165, 171, 200, 202, 205, 217, 221, 224, 259, 271, 272, 275, 278, 279, 280, 478, 562, 578, 812, 817, 845, 865, 886], "497": [13, 14, 15, 76, 87, 98, 120, 132, 177, 204, 231, 244, 277], "310": [13, 14, 15, 35, 76, 80, 87, 98, 108, 111, 120, 132, 168, 195, 204, 208, 231], "lbfg": [13, 18, 195], "time_gen": [13, 195], "experiment": [13, 16, 45, 70, 71, 73, 76, 80, 81, 82, 89, 92, 126, 139, 140, 145, 148, 149, 150, 152, 164, 166, 167, 168, 179, 195, 198, 199, 200, 202, 204, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 226, 244, 264, 265, 266, 267, 269, 412, 427, 479, 480, 481, 528, 582, 593, 594, 658, 659, 666, 706, 709, 841, 861, 868, 872, 886], "24it": [13, 19, 95, 102, 111, 194, 195, 208, 226, 230, 231], "13it": [13, 19, 102, 107, 111, 194, 195, 208, 226, 228, 230, 231, 234], "83": [13, 19, 35, 40, 47, 80, 102, 107, 111, 113, 168, 189, 194, 195, 200, 203, 208, 209, 226, 227, 230, 231, 244, 335, 560, 608, 693, 694, 696, 697], "05it": [13, 19, 34, 102, 111, 195, 208, 226, 230, 231, 235], "88": [13, 19, 26, 35, 41, 45, 47, 50, 79, 80, 81, 102, 108, 111, 113, 119, 155, 157, 163, 168, 175, 179, 180, 181, 189, 190, 195, 208, 210, 226, 227, 228, 230, 231, 235, 236, 244, 354], "1225": 13, "437": [13, 83, 136, 182, 195, 208, 231], "56it": [13, 19, 102, 107, 108, 111, 194, 195, 208, 226, 227, 230, 231, 236], "34": [13, 19, 28, 34, 35, 41, 45, 47, 68, 71, 80, 102, 103, 107, 111, 113, 115, 129, 144, 168, 170, 175, 180, 184, 186, 194, 195, 201, 208, 209, 222, 226, 227, 228, 230, 231, 235, 236, 244, 570, 687], "499": [13, 30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 78, 85, 86, 115, 118, 119, 126, 141, 142, 148, 167, 171, 175, 177, 178, 180, 229, 230, 231], "58it": [13, 19, 33, 102, 107, 111, 179, 194, 195, 208, 226, 227, 228, 230, 231, 236], "54": [13, 19, 28, 34, 35, 45, 47, 56, 60, 80, 102, 103, 107, 111, 113, 143, 150, 157, 168, 189, 195, 204, 208, 209, 214, 226, 227, 230, 231, 244, 277, 886], "539": [13, 145, 147, 163], "50it": [13, 19, 33, 102, 107, 108, 194, 195, 208, 226, 231, 236], "93": [13, 19, 33, 35, 40, 47, 79, 102, 107, 111, 113, 168, 189, 194, 195, 208, 226, 227, 230, 231, 244, 597], "551": [13, 46, 113, 231], "112": [13, 16, 70, 78, 84, 114, 168, 170, 220, 230, 244, 569, 871], "553": [13, 194, 231, 244, 417], "132": [13, 35, 46, 150, 168, 208, 226, 231], "559": [13, 183, 194, 195, 208, 231], "152": [13, 45, 168, 189, 194, 208, 226, 230, 231, 240, 277], "563": [13, 231], "172": [13, 71, 82, 92, 126, 166, 167, 168, 198, 199, 201, 202, 205, 206, 207, 209, 215, 216, 217, 218, 230, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 666, 671, 706, 709], "567": [13, 231, 244], "192": [13, 35, 43, 56, 168, 170, 208, 226, 231], "570": [13, 35, 80, 231], "212": [13, 56, 102, 105, 129, 168, 201, 208, 220, 226, 231, 244], "572": [13, 194, 208, 231], "231": [13, 58, 71, 84, 168, 230, 231], "251": [13, 168, 211, 230, 231, 235, 479, 480], "574": 13, "291": [13, 108, 111, 168, 231], "576": [13, 231], "311": [13, 111, 168, 226, 231], "577": [13, 38, 56, 194, 195, 208, 231, 244, 417], "330": [13, 35, 50, 56, 60, 80, 81, 111, 168, 182, 208, 231, 886], "350": [13, 80, 111, 115, 116, 140, 159, 168, 226, 231], "369": [13, 80, 149, 153, 168, 194, 208, 226, 231, 244, 528, 666, 868], "389": [13, 80, 208], "408": [13, 35, 80, 184, 226, 231], "428": [13, 195, 226, 231], "37": [13, 19, 21, 28, 34, 35, 42, 45, 47, 80, 102, 107, 113, 115, 144, 156, 168, 170, 189, 195, 206, 208, 214, 226, 227, 228, 230, 231, 234, 235, 236, 239, 335, 403, 452, 572, 886], "448": [13, 125, 170, 208, 226, 231, 277, 886], "578": [13, 45, 56, 150, 208, 231], "38": [13, 19, 21, 28, 34, 35, 41, 45, 47, 50, 71, 73, 80, 81, 92, 95, 102, 107, 113, 126, 139, 140, 141, 143, 157, 168, 179, 183, 190, 194, 195, 200, 206, 208, 220, 226, 227, 228, 230, 231, 235, 236, 572], "468": [13, 203, 208, 231, 244, 560, 608], "579": [13, 67, 69, 179, 186, 231], "487": [13, 150, 173, 226], "507": [13, 153, 161, 231], "527": [13, 231, 238], "547": [13, 231], "580": [13, 80, 138, 195, 208, 231], "566": [13, 69], "586": [13, 231], "606": [13, 143, 195, 231], "626": [13, 231, 244, 561], "646": [13, 154, 163], "15it": [13, 19, 34, 102, 111, 179, 194, 208, 226, 230, 231], "56": [13, 15, 19, 32, 35, 45, 47, 75, 79, 80, 81, 87, 102, 107, 111, 113, 115, 129, 150, 156, 159, 168, 171, 175, 179, 189, 190, 195, 208, 210, 226, 227, 230, 231, 244, 258, 411, 562, 693, 694, 696, 697], "685": [13, 19, 231], "57": [13, 19, 34, 35, 40, 45, 80, 95, 102, 107, 111, 113, 116, 123, 125, 129, 135, 149, 150, 156, 168, 170, 173, 179, 182, 183, 189, 190, 194, 195, 206, 208, 217, 226, 227, 228, 229, 230, 231, 235, 236, 238, 239, 244, 264, 265, 266, 267, 335, 476, 479, 480, 708, 710, 718, 724, 886], "704": [13, 143, 195], "59it": [13, 19, 33, 102, 108, 111, 194, 195, 208, 226, 227, 228, 231, 235, 236], "59": [13, 15, 19, 28, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 49, 54, 55, 58, 59, 60, 69, 71, 76, 78, 80, 82, 89, 91, 92, 93, 102, 107, 110, 111, 113, 115, 117, 120, 126, 130, 140, 141, 144, 149, 150, 151, 155, 157, 161, 168, 171, 175, 177, 181, 183, 194, 195, 198, 199, 204, 205, 206, 208, 222, 226, 227, 228, 230, 231, 235, 236, 239, 244, 277, 432, 572, 582, 593, 699, 700], "723": [13, 44, 195], "743": [13, 194, 195, 231], "762": [13, 231], "782": [13, 195, 231], "67": [13, 19, 33, 35, 47, 57, 80, 81, 102, 107, 111, 113, 115, 148, 157, 168, 171, 175, 177, 180, 189, 190, 195, 208, 226, 227, 228, 230, 231, 235, 236, 244, 528, 886], "821": [13, 231], "69it": [13, 19, 34, 95, 102, 108, 111, 194, 195, 208, 226, 227, 230, 231, 234, 235], "841": [13, 136, 231], "860": [13, 50, 80, 208], "72": [13, 15, 19, 28, 35, 45, 47, 68, 71, 78, 79, 80, 84, 95, 99, 102, 103, 111, 113, 116, 122, 139, 148, 155, 161, 168, 176, 179, 181, 182, 183, 184, 189, 194, 195, 199, 208, 209, 226, 227, 228, 229, 230, 231, 234, 244, 561, 570, 868, 886], "880": [13, 80, 179, 195, 208, 231, 244, 297, 298], "900": [13, 45, 73, 80, 84, 175, 180, 195], "919": [13, 231], "939": [13, 19, 231], "958": [13, 142, 227], "978": [13, 19, 59, 112, 150, 201, 204, 223, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 297, 298, 354, 477, 479, 480, 561, 688, 706, 709], "998": [13, 171, 183, 190, 209, 231, 574, 579, 584, 587], "1018": 13, "79it": [13, 19, 95, 102, 179, 194, 195, 208, 226, 227, 228, 231], "1058": [13, 244, 695], "1078": 13, "1098": [13, 244, 528, 868], "582": [13, 231, 244], "1117": 13, "1137": [13, 40, 195, 244, 476], "1157": 13, "96": [13, 15, 18, 19, 44, 47, 81, 83, 102, 106, 107, 111, 112, 113, 136, 161, 168, 170, 179, 183, 194, 195, 205, 206, 208, 226, 227, 228, 229, 230, 231, 235, 236, 244, 266, 267, 415, 417, 429, 794, 865], "1177": [13, 65, 100, 227, 244, 394, 862], "1197": 13, "1217": [13, 208], "583": [13, 231, 244, 419], "23it": [13, 19, 34, 102, 108, 194, 195, 208, 226, 227, 230, 231, 235], "constrained_layout": [13, 89, 182, 211, 240, 722, 732], "vmax": [13, 19, 70, 87, 106, 111, 113, 115, 116, 123, 135, 140, 159, 175, 194, 195, 209, 210, 226, 228, 229, 240, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 706, 708, 710, 754, 771, 785, 786, 789, 793, 797, 806, 809, 814, 815, 816, 886], "xaxi": [13, 126], "set_ticks_posit": 13, "bottom": [13, 70, 73, 74, 111, 119, 126, 139, 145, 160, 190, 217, 218, 226, 231, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 767, 784, 794, 812, 817, 841, 886], "ntest": 13, "ntrain": 13, "fontweight": [13, 126, 143, 209], "bold": [13, 126, 143, 150, 199, 202, 205, 206, 207, 209, 210, 226], "r\u00e9mi": [13, 195, 244], "stanisla": [13, 16, 136, 195, 244, 412, 427, 886], "dehaen": [13, 16, 195, 244, 412, 427], "dynam": [13, 21, 27, 32, 33, 70, 93, 104, 105, 111, 165, 179, 195, 201, 203, 204, 211, 223, 244, 264, 267, 270, 275, 287, 289, 290, 291, 292, 297, 419, 450, 452, 479, 480, 528, 561, 562, 569, 685, 807, 841, 852, 862, 868, 871, 886], "represent": [13, 17, 20, 27, 43, 44, 93, 102, 111, 114, 139, 148, 159, 165, 167, 168, 169, 171, 174, 189, 195, 204, 215, 216, 234, 235, 236, 239, 240, 244, 264, 265, 266, 267, 274, 276, 360, 363, 446, 452, 479, 480, 511, 558, 561, 706, 708, 710, 733, 734, 736, 737, 738, 762, 798, 841, 852, 862, 871, 886], "tempor": [13, 16, 19, 27, 46, 59, 77, 84, 104, 105, 112, 113, 134, 135, 136, 139, 141, 145, 150, 164, 179, 183, 196, 197, 200, 201, 202, 203, 206, 209, 217, 226, 228, 229, 230, 231, 237, 238, 244, 259, 264, 266, 267, 269, 275, 276, 277, 354, 360, 417, 423, 431, 434, 437, 451, 452, 454, 475, 476, 477, 479, 480, 520, 524, 527, 528, 542, 544, 545, 558, 561, 563, 577, 593, 600, 601, 616, 620, 631, 633, 635, 640, 661, 662, 663, 664, 665, 666, 667, 668, 678, 680, 681, 682, 687, 689, 696, 697, 698, 719, 722, 732, 733, 734, 735, 736, 737, 738, 754, 862, 863, 868, 886], "trend": [13, 65, 112, 140, 195, 244], "cognit": [13, 42, 43, 195, 201, 244, 255, 276, 360, 529, 873], "203": [13, 35, 40, 42, 47, 49, 50, 56, 58, 59, 79, 86, 91, 92, 93, 98, 110, 115, 118, 120, 122, 123, 130, 141, 149, 151, 155, 156, 157, 161, 168, 169, 171, 176, 177, 178, 179, 195, 199, 205, 206, 208, 209, 223, 230, 231, 244], "tic": [13, 195, 244], "928": [13, 20, 231], "129": [13, 14, 15, 20, 35, 61, 72, 84, 87, 120, 127, 129, 168, 169, 208, 226, 230, 231, 233, 244], "decoding_time_generalization_condit": [13, 20], "Then": [14, 19, 45, 67, 81, 108, 112, 114, 134, 135, 139, 155, 160, 180, 189, 190, 191, 206, 231, 241, 266, 267, 317, 436, 576, 701, 790, 845, 849, 856, 865, 868], "virtual": [14, 70, 98, 150, 204, 207, 264, 265, 266, 267, 314, 432, 479, 480, 592, 647, 650, 841, 843, 853, 886], "output": [14, 19, 32, 35, 40, 44, 46, 47, 59, 112, 113, 121, 126, 134, 139, 142, 148, 150, 154, 160, 162, 163, 164, 167, 170, 171, 187, 191, 194, 195, 201, 202, 204, 205, 206, 212, 215, 216, 218, 221, 226, 228, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 416, 417, 421, 422, 423, 424, 427, 428, 430, 432, 436, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 461, 462, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 522, 523, 524, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 556, 557, 561, 563, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 584, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 600, 601, 602, 605, 606, 607, 608, 610, 612, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 650, 651, 654, 655, 657, 658, 659, 660, 669, 670, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 693, 694, 695, 696, 697, 698, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 724, 725, 728, 729, 733, 734, 736, 737, 738, 739, 742, 743, 744, 749, 753, 754, 758, 762, 770, 779, 782, 786, 787, 788, 789, 794, 795, 797, 798, 799, 804, 805, 807, 808, 810, 811, 812, 813, 817, 818, 819, 822, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844, 845, 849, 850, 853, 865, 868, 869, 871, 886], "asish": [14, 886], "asishrocks95": 14, "decod": [14, 16, 19, 20, 21, 151, 164, 165, 167, 194, 196, 197, 244, 261, 264, 266, 267, 269, 275, 312, 328, 354, 363, 373, 440, 452, 479, 487, 492, 494, 504, 521, 527, 528, 530, 539, 542, 558, 562, 614, 620, 625, 706, 754, 862, 876, 886], "unsupervisedspatialfilt": [14, 876, 886], "fastica": [14, 76, 204, 561], "aud_l": [14, 15, 18, 42, 176, 230, 264, 265, 784, 787], "vis_l": [14, 15, 18, 42, 230], "ie": [14, 53, 109, 261, 271, 275, 279, 610, 722, 732, 754, 779, 812, 813], "pca_data": 14, "evokedarrai": [14, 15, 16, 18, 21, 83, 99, 108, 182, 187, 195, 221, 231, 265, 266, 480, 534, 535, 622, 624, 841, 876, 886], "window_titl": [14, 190, 266, 267, 788], "ica_data": 14, "ev1": [14, 886], "927": [14, 20, 231], "decoding_unsupervised_spatial_filt": [14, 20], "erp": [15, 98, 100, 116, 127, 152, 153, 164, 171, 195, 198, 199, 201, 204, 206, 207, 244, 264, 266, 267, 269, 314, 353, 468, 479, 552, 561, 562, 620, 692, 778, 797, 799, 826, 852, 872, 874, 886], "concaten": [15, 70, 74, 80, 111, 136, 150, 167, 187, 190, 203, 205, 215, 241, 264, 265, 266, 267, 361, 362, 363, 411, 420, 476, 479, 480, 564, 580, 582, 593, 671, 796, 886], "rescal": [15, 63, 112, 113, 369, 370, 371, 579, 706, 709, 814, 876, 886], "fed": 15, "classification_report": [15, 136], "confusion_matrix": [15, 136], "minmaxscal": 15, "n_filter": 15, "penalti": [15, 40, 46, 244, 476, 477, 874], "l1": [15, 40, 476, 477], "pred": 15, "report": [15, 136, 164, 172, 173, 191, 209, 211, 212, 227, 241, 244, 261, 264, 265, 266, 268, 269, 273, 275, 289, 291, 435, 452, 479, 480, 485, 527, 550, 561, 579, 582, 598, 623, 722, 732, 736, 784, 801, 807, 843, 845, 861, 864, 865, 866, 868, 874, 876, 886], "target_nam": [15, 136], "cm_normal": 15, "astyp": [15, 72, 144, 159, 190, 194, 202, 215], "float": [15, 19, 31, 40, 65, 92, 114, 142, 143, 144, 148, 159, 168, 170, 187, 191, 194, 204, 215, 217, 226, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 290, 297, 298, 304, 305, 312, 321, 326, 328, 330, 341, 342, 343, 344, 347, 353, 354, 357, 358, 359, 360, 365, 371, 373, 411, 413, 415, 416, 417, 418, 419, 422, 423, 424, 428, 432, 435, 437, 439, 440, 446, 447, 449, 450, 451, 452, 454, 455, 456, 463, 469, 470, 474, 476, 477, 478, 479, 480, 489, 490, 498, 504, 513, 515, 516, 520, 521, 523, 524, 528, 529, 530, 531, 532, 534, 535, 539, 540, 541, 543, 544, 545, 560, 561, 562, 563, 564, 565, 566, 569, 570, 571, 572, 573, 574, 576, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 590, 591, 593, 595, 597, 598, 599, 601, 602, 611, 636, 642, 643, 644, 645, 655, 656, 661, 662, 663, 664, 665, 666, 667, 668, 671, 673, 676, 677, 678, 680, 681, 684, 685, 688, 689, 690, 692, 693, 694, 696, 697, 698, 699, 700, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 724, 725, 730, 732, 733, 734, 735, 736, 737, 738, 742, 743, 744, 754, 758, 759, 767, 771, 773, 774, 778, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 804, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 822, 839, 871, 886], "sum": [15, 28, 31, 41, 47, 60, 72, 81, 108, 112, 113, 116, 136, 143, 148, 160, 161, 167, 174, 182, 183, 201, 226, 227, 231, 241, 264, 265, 266, 267, 270, 271, 272, 275, 278, 279, 280, 286, 353, 358, 479, 480, 543, 561, 566, 658, 693, 694, 696, 697, 701, 707, 708, 710, 786, 865, 868, 871, 886], "imshow": [15, 16, 22, 70, 106, 114, 115, 126, 135, 145, 159, 171, 195, 226, 228, 229, 230, 231, 264, 265, 266, 267, 321, 706, 755, 757, 792, 815, 824], "nearest": [15, 26, 79, 115, 119, 135, 139, 144, 159, 167, 181, 215, 226, 261, 264, 265, 266, 267, 270, 271, 272, 273, 275, 277, 278, 279, 280, 282, 360, 365, 411, 418, 479, 480, 560, 561, 576, 701, 706, 707, 708, 709, 710, 742, 754, 771, 772, 778, 786, 793, 797, 806, 809, 814, 816, 868, 871, 886], "blue": [15, 54, 55, 79, 82, 111, 131, 134, 141, 150, 155, 171, 174, 176, 177, 180, 189, 206, 234, 235, 241, 262, 754, 769, 770, 778, 782, 841], "tick_mark": 15, "ytick": [15, 126, 194, 201, 226], "precis": [15, 47, 70, 89, 136, 156, 183, 191, 201, 202, 209, 215, 223, 258, 264, 265, 270, 297, 298, 452, 479, 480, 501, 593, 662, 664, 683, 733, 734, 736, 737, 861, 865, 871, 886], "recal": [15, 89, 136, 148, 149, 155, 216, 662, 663, 665, 668], "f1": [15, 70, 89, 136, 662], "support": [15, 34, 61, 122, 134, 135, 136, 137, 139, 141, 148, 149, 150, 164, 165, 169, 171, 180, 181, 184, 188, 189, 191, 218, 239, 240, 241, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 271, 272, 274, 275, 277, 278, 279, 280, 297, 298, 304, 312, 318, 320, 340, 354, 359, 360, 369, 370, 371, 373, 392, 411, 418, 419, 427, 432, 441, 442, 444, 445, 449, 450, 451, 471, 478, 479, 480, 485, 490, 500, 503, 504, 505, 506, 510, 515, 519, 522, 523, 561, 572, 581, 582, 593, 615, 618, 619, 633, 640, 641, 650, 654, 655, 671, 687, 689, 698, 701, 706, 708, 709, 710, 754, 770, 772, 775, 778, 782, 783, 784, 788, 793, 801, 807, 808, 812, 817, 818, 819, 820, 823, 841, 843, 845, 848, 850, 851, 852, 857, 863, 865, 872, 886], "288": [15, 35, 71, 72, 131, 140, 144, 159, 168, 170, 231, 236, 244, 570], "macro": [15, 136], "avg": [15, 136, 143, 226, 256, 733, 734], "attribut": [15, 30, 31, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 71, 78, 82, 85, 86, 115, 118, 119, 126, 139, 140, 142, 148, 149, 150, 165, 167, 168, 169, 171, 174, 175, 177, 178, 180, 181, 182, 200, 204, 205, 209, 210, 218, 221, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 302, 353, 365, 411, 412, 414, 415, 417, 418, 419, 421, 426, 429, 468, 469, 478, 479, 480, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 519, 560, 561, 562, 617, 623, 627, 633, 656, 691, 706, 707, 708, 709, 710, 741, 754, 756, 778, 787, 800, 835, 841, 845, 863, 886], "last": [15, 70, 81, 103, 126, 136, 139, 143, 145, 150, 159, 165, 182, 187, 195, 199, 200, 201, 202, 204, 205, 215, 218, 226, 227, 234, 241, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 278, 279, 280, 287, 288, 302, 320, 342, 354, 362, 414, 421, 422, 424, 435, 449, 450, 451, 452, 478, 479, 480, 504, 521, 527, 556, 561, 564, 687, 692, 693, 694, 696, 697, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 724, 735, 741, 754, 786, 791, 793, 798, 801, 808, 814, 841, 844, 862, 867, 868, 886], "nrow": [15, 45, 73, 119, 126, 145, 150, 175, 182, 210, 227, 266, 267, 411, 418, 561, 793, 797, 871, 886], "fitted_xdawn": 15, "get_channel_typ": [15, 139, 168, 264, 265, 266, 267, 269, 479, 480, 561, 706, 708, 709, 710, 886], "get_montag": [15, 114, 134, 135, 264, 265, 266, 267, 269, 479, 480, 886], "cur_class": 15, "cur_pattern": 15, "pattern_evok": 15, "time_format": [15, 21, 99, 108, 111, 144, 175, 217, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 561, 706, 709, 793, 801, 807, 886], "show_nam": [15, 67, 99, 119, 150, 169, 181, 227, 261, 264, 265, 266, 267, 273, 312, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 771, 790, 793, 797, 804, 806, 809, 810, 814, 886], "h_pad": [15, 226], "w_pad": [15, 226], "bertrand": [15, 71, 78, 87, 195, 199, 244, 562, 570, 722, 732, 733, 736, 868, 886], "rivet": [15, 87, 195, 244, 562], "antoin": [15, 87, 195, 244, 562, 886], "souloumiac": [15, 87, 195, 244, 562], "virgini": [15, 87, 195, 244, 562], "attina": [15, 87, 195, 244, 562], "gibert": [15, 87, 195, 244, 562], "algorithm": [15, 27, 31, 70, 74, 77, 82, 83, 84, 87, 112, 125, 151, 155, 156, 161, 165, 195, 199, 201, 204, 209, 226, 231, 234, 235, 236, 244, 269, 270, 274, 309, 354, 410, 411, 425, 432, 476, 479, 528, 547, 561, 562, 564, 569, 571, 572, 578, 582, 584, 591, 593, 600, 601, 602, 666, 683, 688, 744, 852, 857, 861, 862, 863, 874, 886], "enhanc": [15, 87, 194, 195, 227, 231, 244, 417, 561, 562, 582, 693, 694, 696, 697, 845, 864, 871, 874], "2035": [15, 87, 179, 195, 244, 562], "2043": [15, 87, 168, 195, 244, 562], "2009": [15, 35, 58, 87, 116, 170, 195, 204, 226, 227, 244, 275, 474, 562, 576, 693, 694, 696, 697, 861, 871, 886], "2012869": [15, 87, 195, 244, 562], "hubert": [15, 87, 244, 562, 886], "cecotti": [15, 87, 244, 562], "emmanuel": [15, 87, 201, 244, 562], "mabi": [15, 87, 244, 562], "j\u00e9r\u00e9mie": [15, 87, 244, 562], "mattout": [15, 87, 244, 562], "theoret": [15, 87, 194, 195, 201, 221, 244, 411, 562, 841], "effici": [15, 42, 44, 87, 190, 201, 226, 244, 259, 264, 265, 266, 267, 423, 479, 480, 561, 562, 563, 666, 708, 710, 736, 737, 863, 886], "p300": [15, 87, 190, 195, 201, 244, 562, 735, 738], "proceed": [15, 33, 40, 46, 87, 165, 179, 203, 204, 223, 244, 290, 297, 477, 562, 735, 738, 861, 868], "eusipco": [15, 87, 244, 562, 735, 738], "1382": [15, 87, 244, 562], "1386": [15, 87, 208, 226, 244, 562], "barcelona": [15, 87, 244, 562], "url": [15, 87, 112, 150, 195, 244, 354, 380, 386, 388, 392, 403, 404, 474, 528, 562, 688, 735, 738, 845, 868, 886], "ieeexplor": [15, 87, 244, 562, 735, 738], "7073970": [15, 87, 244, 562], "396": [15, 20, 45, 80, 175, 180, 226, 231, 244, 297], "decoding_xdawn_eeg": [15, 20], "cours": [16, 27, 32, 36, 38, 39, 41, 50, 56, 70, 74, 82, 89, 91, 94, 100, 112, 115, 134, 135, 141, 142, 150, 164, 165, 171, 174, 175, 176, 179, 185, 186, 195, 198, 201, 205, 206, 223, 231, 236, 244, 262, 263, 264, 265, 266, 267, 270, 271, 272, 275, 277, 278, 279, 280, 289, 291, 293, 296, 360, 412, 427, 445, 454, 464, 474, 476, 477, 479, 480, 515, 522, 527, 528, 542, 558, 623, 627, 633, 656, 670, 672, 673, 692, 706, 708, 709, 710, 753, 754, 778, 805, 812, 817, 841, 868, 871, 886], "techniqu": [16, 17, 20, 27, 59, 70, 73, 74, 75, 148, 150, 164, 165, 195, 198, 201, 203, 204, 206, 207, 209, 210, 211, 213, 223, 226, 244, 264, 265, 266, 267, 269, 373, 413, 422, 425, 447, 449, 450, 470, 479, 480, 558, 561, 620, 650, 841, 862, 868, 869, 874], "By": [16, 45, 70, 79, 82, 102, 103, 111, 134, 141, 144, 148, 149, 150, 157, 165, 167, 168, 169, 170, 171, 177, 187, 188, 199, 201, 204, 205, 206, 207, 209, 212, 215, 216, 218, 239, 256, 264, 265, 266, 267, 269, 270, 271, 272, 275, 278, 279, 280, 309, 326, 435, 452, 479, 480, 561, 564, 647, 671, 683, 699, 706, 707, 708, 709, 710, 780, 784, 792, 800, 807, 817, 868, 874, 886], "onto": [16, 18, 40, 73, 134, 135, 141, 154, 165, 169, 174, 179, 194, 199, 205, 206, 209, 222, 270, 272, 278, 280, 419, 589, 655, 683, 754, 770, 805, 824, 862, 868, 886], "surrog": [16, 156, 182, 206, 365, 427, 473, 886], "expos": [16, 132, 194, 230, 850, 886], "exhibit": [16, 241, 266, 267, 271, 272, 275, 278, 279, 280, 868], "evolut": [16, 112, 561, 801], "compute_em": [16, 876, 886], "audl": [16, 72], "visl": [16, 72], "wai": [16, 21, 27, 34, 43, 44, 74, 113, 114, 126, 139, 140, 141, 143, 148, 149, 150, 155, 159, 160, 165, 167, 168, 169, 170, 171, 176, 179, 189, 194, 199, 200, 201, 202, 204, 205, 206, 209, 211, 216, 217, 218, 221, 223, 226, 228, 229, 234, 236, 241, 244, 258, 259, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 354, 435, 445, 479, 480, 494, 520, 561, 563, 578, 585, 594, 616, 623, 655, 687, 688, 689, 695, 701, 706, 709, 720, 722, 732, 736, 754, 841, 843, 845, 848, 851, 860, 861, 862, 863, 864, 867, 869, 886], "n_epoch": [16, 113, 139, 145, 148, 165, 194, 195, 221, 231, 240, 259, 264, 265, 314, 411, 412, 413, 416, 417, 418, 419, 420, 422, 423, 425, 426, 449, 450, 562, 569, 708, 709, 711, 712, 713, 733, 734, 735, 778, 784, 785, 886], "n_time": [16, 19, 31, 63, 65, 67, 70, 75, 82, 113, 139, 145, 148, 158, 165, 189, 190, 194, 195, 204, 207, 215, 221, 223, 226, 230, 231, 234, 235, 236, 259, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 314, 348, 411, 412, 413, 416, 417, 418, 419, 420, 422, 424, 425, 427, 445, 447, 449, 450, 478, 479, 480, 500, 536, 562, 591, 656, 661, 662, 663, 664, 665, 666, 667, 668, 673, 680, 681, 682, 686, 692, 696, 697, 706, 708, 709, 710, 711, 712, 713, 724, 725, 729, 731, 733, 734, 735, 754, 778, 785, 786, 793, 814, 886], "993": [16, 18, 112, 231], "613": [16, 18], "145": [16, 18, 45, 73, 75, 81, 148, 168, 222, 226, 231], "106": [16, 35, 72, 95, 96, 99, 120, 140, 144, 151, 165, 168, 171, 176, 179, 194, 195, 200, 204, 231, 871], "x_transform": 16, "leav": [16, 136, 143, 171, 190, 198, 203, 215, 601, 843, 851, 853, 886], "recommend": [16, 41, 43, 44, 45, 70, 113, 154, 157, 160, 171, 187, 189, 191, 201, 202, 204, 205, 207, 209, 244, 259, 264, 265, 266, 267, 271, 275, 279, 282, 307, 309, 318, 330, 347, 354, 359, 360, 373, 410, 413, 419, 455, 474, 479, 480, 499, 510, 520, 528, 534, 541, 561, 566, 578, 593, 600, 616, 618, 622, 647, 654, 655, 692, 696, 697, 722, 732, 736, 763, 770, 812, 843, 845, 849, 850, 851, 864, 865, 868, 886], "stratifi": [16, 428], "tend": [16, 161, 177, 201, 203, 204, 226, 571, 865, 868], "overfit": [16, 87, 194], "cannot": [16, 59, 160, 168, 171, 187, 189, 191, 201, 202, 205, 207, 217, 236, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 290, 341, 343, 433, 479, 480, 528, 561, 581, 582, 625, 655, 706, 754, 790, 812, 817, 833, 843, 845, 867, 886], "x_scale": 16, "futur": [16, 70, 170, 204, 218, 282, 417, 423, 451, 582, 845, 849, 863, 865, 867, 886], "filters_": [16, 18, 411, 412, 415, 418, 419, 429, 562, 886], "individu": [16, 26, 32, 37, 42, 43, 44, 100, 139, 141, 143, 154, 158, 165, 169, 171, 174, 199, 205, 206, 210, 217, 218, 226, 240, 241, 244, 259, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 297, 298, 328, 349, 411, 452, 479, 480, 529, 537, 538, 578, 601, 623, 684, 690, 698, 735, 738, 772, 784, 788, 792, 805, 807, 832, 845, 861, 862, 867, 868, 886], "argsort": [16, 31, 116, 127, 142, 180], "reorder": [16, 47, 116, 264, 265, 266, 267, 479, 480, 490, 706, 708, 709, 710, 785, 815, 886], "kei": [16, 93, 94, 126, 136, 139, 140, 141, 148, 149, 151, 165, 168, 169, 170, 180, 188, 205, 206, 215, 216, 218, 221, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 288, 297, 298, 302, 324, 325, 354, 358, 359, 365, 368, 369, 370, 371, 386, 392, 403, 411, 418, 420, 427, 435, 438, 440, 454, 455, 456, 459, 471, 474, 476, 477, 479, 480, 512, 516, 527, 528, 539, 551, 560, 561, 563, 576, 578, 579, 582, 604, 617, 619, 636, 649, 657, 658, 659, 671, 675, 691, 692, 693, 694, 696, 697, 706, 708, 709, 710, 741, 744, 754, 771, 776, 777, 778, 782, 784, 785, 786, 787, 788, 790, 792, 793, 794, 797, 806, 807, 809, 810, 812, 814, 816, 817, 818, 839, 845, 851, 862, 874, 886], "ems_av": 16, "u": [16, 19, 21, 47, 70, 103, 111, 114, 115, 136, 140, 143, 145, 148, 150, 159, 165, 170, 171, 179, 180, 187, 188, 194, 200, 201, 204, 205, 206, 212, 215, 216, 221, 244, 255, 256, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 445, 479, 480, 536, 845, 848, 853, 864, 867, 868, 871, 886], "schurger": [16, 195, 244, 412, 427], "thu": [16, 18, 43, 47, 55, 70, 102, 113, 139, 140, 148, 151, 169, 170, 174, 179, 181, 187, 191, 195, 201, 204, 206, 207, 209, 226, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 347, 413, 422, 434, 445, 447, 449, 479, 480, 528, 536, 539, 563, 722, 732, 734, 736, 737, 841, 845, 861, 862, 865, 868, 886], "equalize_event_count": [16, 148, 150, 165, 230, 231, 236, 264, 265, 709, 886], "103": [16, 35, 50, 111, 113, 120, 168, 230, 871], "aaron": [16, 195, 244, 412, 427], "sebastien": [16, 195, 244, 412, 427, 886], "marti": [16, 195, 244, 412, 427, 886], "reveal": [16, 100, 112, 143, 169, 190, 195, 201, 241, 244, 412, 427, 735, 738], "414": [16, 20, 95, 208, 231], "140": [16, 19, 20, 34, 56, 80, 81, 111, 122, 155, 168, 195, 205, 206, 208, 226, 230, 231, 244, 566, 868], "ems_filt": [16, 20], "continu": [17, 19, 20, 21, 27, 97, 101, 139, 141, 144, 147, 150, 160, 167, 187, 195, 196, 197, 198, 200, 201, 204, 205, 209, 213, 216, 220, 221, 226, 239, 244, 256, 258, 264, 265, 266, 267, 269, 345, 353, 357, 359, 363, 411, 417, 418, 419, 423, 451, 452, 479, 480, 492, 499, 510, 520, 521, 558, 560, 561, 564, 573, 611, 616, 690, 691, 692, 706, 708, 709, 710, 731, 778, 790, 797, 799, 841, 845, 861, 862, 867, 871, 874, 886], "spoc": [17, 20, 27, 244, 264, 269, 411, 419, 492, 521, 562, 876, 886], "xdawn": [17, 20, 27, 77, 84, 244, 261, 264, 266, 267, 269, 359, 373, 411, 415, 418, 426, 479, 558, 620, 785, 876, 886], "em": [17, 20, 27, 195, 264, 266, 267, 269, 427, 479, 558, 620, 876, 886], "recept": [17, 20, 27, 164, 196, 197, 244, 250, 269, 312, 328, 373, 417, 423, 451, 480, 816, 862], "spectro": [17, 20, 27, 113, 164, 196, 197, 264, 266, 267, 269, 417, 419, 423, 451, 492, 521, 725], "ssd": [17, 20, 27, 264, 266, 267, 269, 492, 521, 725, 876, 886], "mvpa": [18, 164, 196, 197, 261, 264, 266, 267, 269, 275, 354, 411, 412, 414, 415, 418, 420, 421, 426, 428, 429, 452, 528, 539, 562, 625, 754, 886], "neurophysiolog": [18, 19, 842], "interpret": [18, 19, 102, 141, 150, 158, 159, 187, 195, 201, 202, 217, 228, 230, 231, 236, 244, 259, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 278, 279, 280, 282, 303, 310, 313, 327, 329, 354, 355, 357, 359, 369, 413, 414, 415, 417, 421, 424, 427, 428, 429, 432, 449, 450, 454, 467, 469, 470, 479, 480, 487, 494, 502, 504, 519, 522, 523, 528, 534, 535, 544, 545, 560, 561, 563, 566, 573, 574, 577, 578, 579, 582, 585, 589, 599, 601, 608, 654, 657, 658, 659, 662, 671, 674, 692, 693, 694, 695, 696, 697, 701, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 724, 725, 733, 734, 735, 736, 737, 754, 778, 784, 785, 786, 788, 789, 790, 791, 798, 803, 805, 808, 845, 848, 849, 856, 868, 886], "romain": [18, 886], "trachel": [18, 886], "trachelr": 18, "sample_path": [18, 123, 134, 135], "meg_data": [18, 139], "reshap": [18, 136, 194, 226, 227, 230, 234, 236, 417, 426], "scaler": [18, 876, 886], "coef": [18, 19, 194, 195, 429], "revers": [18, 19, 72, 142, 145, 171, 187, 198, 200, 201, 203, 204, 206, 215, 261, 266, 267, 271, 272, 275, 277, 278, 279, 280, 788, 790, 792, 793, 812, 817, 886], "sequenti": [18, 139, 149, 221, 262, 263, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 335, 354, 355, 357, 359, 414, 421, 424, 427, 428, 454, 467, 469, 479, 480, 519, 522, 523, 534, 535, 544, 545, 566, 573, 574, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 744, 754, 773, 778, 786, 789, 808, 812, 817, 818, 841], "kai": [18, 19, 143, 244, 415, 417, 429, 435], "g\u00f6rgen": [18, 19, 244, 415, 417, 429], "dylan": [18, 19, 82, 244, 415, 417, 429, 561], "hayn": [18, 19, 244, 415, 417, 429], "benjamin": [18, 19, 244, 411, 415, 417, 429], "blankertz": [18, 19, 244, 411, 415, 417, 429], "felix": [18, 19, 111, 244, 415, 417, 429, 886], "bie\u00dfmann": [18, 19, 244, 415, 417, 429], "On": [18, 19, 70, 71, 165, 167, 199, 201, 204, 205, 241, 244, 256, 282, 415, 417, 429, 440, 460, 561, 570, 843, 845, 850, 851, 853, 863, 868, 886], "multivari": [18, 19, 89, 93, 136, 161, 194, 195, 244, 354, 415, 417, 429, 660, 862, 865, 886], "110": [18, 19, 21, 35, 41, 80, 81, 111, 157, 168, 195, 230, 231, 244, 415, 417, 429, 566], "067": [18, 19, 136, 138, 244, 415, 417, 429], "863": [18, 20, 231], "linear_model_pattern": [18, 20], "reproduc": [19, 45, 70, 92, 150, 194, 216, 297, 513, 561, 591, 610, 658, 659, 660, 669, 670, 672, 693, 694, 695, 696, 697, 845, 886], "lalor": [19, 194, 244, 417, 862], "mtrf": [19, 170, 194, 244, 417, 876, 886], "receptivefield": [19, 194, 423, 876, 886], "speech": [19, 194, 244, 417, 597, 735, 738, 862], "envelop": [19, 81, 112, 113, 114, 135, 145, 195, 264, 265, 266, 267, 418, 479, 480, 566, 722, 732, 736, 862, 886], "128": [19, 24, 41, 50, 119, 157, 159, 167, 168, 169, 170, 195, 208, 221, 223, 226, 230, 264, 265, 410, 772, 862, 886], "try": [19, 31, 70, 74, 82, 139, 140, 142, 150, 155, 157, 160, 161, 166, 170, 175, 179, 191, 201, 202, 203, 204, 205, 206, 215, 222, 223, 241, 274, 282, 428, 448, 461, 487, 494, 561, 576, 770, 827, 843, 844, 845, 850, 863, 865, 866, 886], "known": [19, 44, 87, 111, 113, 143, 150, 155, 159, 164, 179, 224, 225, 226, 261, 264, 265, 266, 267, 268, 269, 270, 275, 354, 364, 446, 452, 479, 480, 487, 494, 510, 527, 528, 542, 601, 625, 628, 662, 670, 673, 688, 754, 841, 857, 862, 868, 886], "literatur": [19, 143, 241, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709, 841], "simpli": [19, 43, 134, 142, 143, 145, 148, 169, 170, 187, 199, 200, 204, 206, 209, 216, 217, 226, 240, 241, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 297, 298, 479, 480, 578, 579, 706, 709, 843, 845, 848, 853, 862, 868, 886], "chri": [19, 113, 135, 194, 195, 244, 886], "holdgraf": [19, 113, 114, 135, 194, 195, 244, 417, 886], "choldgraf": [19, 113, 114, 135, 194], "nicola": [19, 47, 244, 666, 886], "barascud": [19, 886], "sphinx_gallery_thumbnail_numb": [19, 119, 195], "scipi": [19, 31, 96, 110, 155, 170, 171, 194, 201, 205, 223, 226, 227, 228, 231, 234, 235, 241, 256, 261, 264, 265, 266, 267, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 318, 329, 358, 360, 411, 413, 418, 422, 446, 447, 449, 450, 451, 454, 479, 480, 560, 561, 569, 576, 654, 686, 688, 693, 694, 696, 697, 699, 700, 706, 708, 709, 710, 722, 725, 732, 754, 771, 786, 793, 797, 806, 808, 809, 814, 816, 844, 845, 865, 867, 870, 883, 886], "loadmat": [19, 194], "collect": [19, 70, 126, 150, 156, 167, 171, 182, 183, 189, 190, 191, 199, 209, 241, 244, 257, 261, 264, 265, 266, 267, 321, 411, 418, 438, 479, 480, 560, 561, 691, 706, 708, 710, 768, 778, 786, 793, 797, 809, 814, 816, 841, 845, 860, 861, 868, 871, 886], "listen": [19, 862, 867, 874], "know": [19, 40, 126, 141, 155, 159, 168, 171, 188, 191, 199, 201, 204, 205, 206, 217, 230, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 454, 455, 474, 476, 477, 536, 539, 646, 794, 845, 848, 851, 852, 863, 865, 868, 886], "primarili": [19, 70, 169, 198, 201, 413, 479, 480, 607, 776, 841, 852], "speech_data": [19, 194], "down": [19, 21, 70, 111, 150, 160, 191, 194, 195, 201, 205, 217, 218, 228, 230, 261, 262, 264, 265, 266, 267, 273, 274, 411, 418, 451, 479, 480, 560, 561, 591, 693, 694, 696, 697, 706, 708, 710, 754, 782, 784, 785, 786, 790, 793, 797, 806, 807, 809, 814, 843, 845, 867, 886], "biosemi128": [19, 169], "rawarrai": [19, 63, 65, 67, 70, 75, 82, 113, 158, 187, 189, 204, 207, 221, 265, 267, 499, 841, 876, 886], "ln": [19, 91, 722, 732, 736, 851, 868], "800": [19, 33, 43, 51, 80, 82, 84, 125, 126, 133, 134, 143, 154, 155, 159, 165, 174, 176, 191, 201, 208, 231, 234, 271, 272, 275, 278, 279, 280, 470, 754, 812, 817], "alpha": [19, 21, 28, 35, 39, 40, 44, 46, 49, 50, 59, 70, 95, 96, 109, 111, 112, 115, 134, 136, 145, 150, 171, 176, 180, 189, 194, 205, 211, 226, 228, 231, 236, 240, 241, 260, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 354, 417, 423, 469, 474, 476, 477, 479, 480, 544, 627, 684, 690, 693, 694, 696, 697, 706, 708, 710, 754, 770, 773, 786, 790, 802, 808, 812, 817, 886], "ln1": 19, "lw": [19, 39, 143, 171, 180, 194, 209, 211, 223, 722, 732, 886], "frameon": [19, 126], "float64": [19, 63, 65, 67, 70, 75, 82, 91, 93, 113, 158, 166, 189, 204, 207, 221, 478, 686, 868], "7677": 19, "7676": 19, "119": [19, 122, 134, 159, 168, 208, 886], "938": [19, 231], "construct": [19, 42, 69, 102, 139, 143, 161, 167, 177, 179, 182, 183, 187, 190, 195, 201, 204, 205, 206, 209, 223, 226, 240, 241, 264, 265, 266, 267, 271, 275, 277, 279, 280, 284, 285, 297, 313, 360, 435, 446, 447, 449, 450, 479, 480, 496, 576, 617, 650, 655, 656, 692, 701, 712, 715, 767, 773, 807, 812, 818, 841, 861, 868, 886], "relationship": [19, 22, 142, 159, 191, 203, 226, 417, 423, 455, 722, 732, 733, 734, 736, 737, 841, 862, 867, 868], "rf": [19, 194, 417], "feature_nam": [19, 194, 417, 886], "corrcoef": [19, 22, 47, 417], "extra": [19, 80, 81, 144, 159, 165, 168, 169, 190, 206, 215, 222, 261, 264, 265, 266, 267, 273, 305, 306, 312, 335, 337, 411, 412, 418, 430, 479, 480, 560, 561, 576, 706, 708, 710, 750, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 841, 849, 853, 886], "inclus": [19, 122, 139, 142, 184, 256, 264, 265, 274, 277, 380, 403, 404, 456, 474, 476, 477, 490, 539, 556, 561, 582, 698, 707, 709, 886], "n_delai": [19, 417], "held": [19, 79, 170, 194, 867], "coef_": [19, 194, 415, 417, 560], "n_output": [19, 417, 423], "n_featur": [19, 194, 195, 411, 412, 413, 415, 416, 417, 418, 419, 422, 423, 426, 562, 591, 686], "delays_": [19, 194, 417], "mean_coef": 19, "mean_scor": 19, "ix_ch": 19, "98it": [19, 34, 102, 111, 194, 195, 208, 226, 228, 230, 231], "sometim": [19, 27, 60, 82, 111, 114, 116, 126, 127, 139, 143, 155, 160, 167, 168, 188, 189, 199, 201, 202, 204, 206, 207, 226, 261, 264, 265, 266, 267, 269, 273, 411, 418, 479, 480, 495, 560, 561, 576, 611, 617, 706, 708, 710, 771, 778, 786, 793, 797, 806, 809, 814, 816, 841, 845, 853, 861, 865, 868, 886], "well": [19, 22, 32, 37, 47, 70, 78, 115, 119, 135, 136, 139, 142, 143, 149, 151, 159, 161, 164, 165, 168, 171, 174, 181, 183, 187, 188, 190, 194, 198, 199, 201, 203, 204, 205, 206, 207, 209, 211, 213, 215, 221, 223, 231, 239, 241, 244, 264, 265, 266, 267, 274, 275, 320, 342, 354, 369, 411, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 435, 450, 451, 479, 480, 561, 562, 575, 581, 593, 600, 706, 722, 724, 732, 735, 736, 737, 738, 784, 786, 800, 841, 843, 845, 851, 857, 862, 863, 865, 867, 868, 870, 874, 886], "recreat": [19, 126, 139, 201, 777], "time_plot": 19, "180": [19, 24, 35, 80, 91, 110, 155, 168, 177, 190, 198, 200, 202, 204, 208, 211, 231, 271, 272, 275, 278, 279, 280, 445, 759, 886], "highlight": [19, 21, 89, 94, 113, 119, 149, 150, 171, 174, 175, 202, 204, 209, 217, 261, 262, 264, 265, 266, 267, 274, 411, 418, 479, 480, 560, 706, 708, 710, 771, 782, 786, 788, 793, 809, 814, 816, 845, 886], "max_coef": 19, "pcolormesh": [19, 113, 194, 886], "shade": [19, 170, 194, 205, 763, 778, 819, 820, 886], "gouraud": [19, 194], "ncoeffici": 19, "setp": [19, 194, 202], "get_xticklabel": [19, 194], "2c": [19, 868], "ix_plot": 19, "argmin": [19, 119, 143, 241], "vlim": [19, 70, 79, 99, 108, 140, 141, 203, 206, 210, 231, 241, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 886], "nfor": 19, "anoth": [19, 31, 45, 70, 86, 94, 125, 140, 142, 143, 144, 148, 150, 154, 155, 160, 166, 170, 179, 187, 200, 201, 204, 205, 209, 211, 216, 217, 218, 226, 231, 264, 265, 266, 267, 270, 271, 272, 274, 275, 276, 278, 279, 280, 282, 314, 354, 355, 357, 359, 360, 414, 421, 424, 427, 428, 437, 454, 467, 469, 479, 480, 508, 519, 522, 523, 534, 535, 544, 545, 547, 566, 573, 574, 590, 654, 657, 658, 659, 671, 677, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 742, 743, 744, 775, 786, 789, 807, 808, 841, 843, 845, 853, 862, 867, 868, 871, 886], "case": [19, 44, 58, 70, 73, 89, 93, 94, 102, 113, 119, 122, 126, 137, 139, 142, 143, 148, 154, 160, 161, 164, 167, 168, 170, 171, 179, 180, 184, 187, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 215, 216, 217, 226, 227, 228, 234, 236, 239, 241, 244, 258, 259, 261, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 288, 297, 298, 302, 308, 318, 329, 353, 354, 358, 359, 369, 370, 371, 372, 411, 418, 428, 435, 440, 451, 454, 455, 462, 469, 474, 476, 477, 479, 480, 487, 494, 502, 510, 515, 520, 527, 528, 529, 530, 531, 532, 539, 550, 556, 564, 576, 591, 610, 616, 633, 647, 650, 666, 671, 692, 693, 706, 708, 709, 710, 718, 724, 734, 737, 741, 754, 772, 778, 785, 787, 790, 791, 794, 812, 841, 845, 853, 865, 867, 868, 886], "aim": [19, 136, 157, 176, 222, 223, 303, 355, 356, 357], "exploit": [19, 87, 886], "context": [19, 42, 115, 170, 171, 174, 195, 201, 226, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 411, 414, 421, 424, 427, 428, 454, 467, 469, 479, 480, 519, 522, 523, 529, 534, 535, 544, 545, 550, 561, 566, 573, 574, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 748, 749, 784, 786, 789, 801, 807, 808, 825, 826, 851, 867, 886], "treat": [19, 21, 150, 171, 195, 206, 207, 226, 230, 264, 265, 268, 274, 490, 492, 552, 693, 694, 696, 697, 709, 778, 796, 886], "independ": [19, 70, 74, 82, 108, 111, 150, 157, 161, 165, 178, 179, 180, 195, 198, 200, 201, 203, 204, 205, 209, 217, 226, 244, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 358, 414, 421, 426, 479, 480, 561, 562, 569, 576, 582, 591, 593, 688, 690, 693, 694, 696, 697, 700, 733, 734, 736, 737, 797, 799, 801, 852, 861, 862, 865, 868, 886], "therefor": [19, 70, 93, 135, 141, 145, 150, 157, 161, 168, 169, 188, 195, 199, 200, 201, 203, 204, 207, 209, 212, 226, 241, 264, 265, 274, 318, 320, 435, 479, 495, 499, 561, 611, 617, 618, 622, 845, 849, 861, 867, 868], "qualiti": [19, 120, 156, 165, 171, 200, 201, 204, 206, 218, 241, 244, 259, 264, 265, 266, 267, 479, 480, 519, 561, 578, 597, 798, 845, 861, 867, 868, 874, 886], "expens": [19, 164, 165, 171, 601, 869, 874, 886], "especi": [19, 55, 70, 111, 119, 126, 142, 148, 161, 165, 168, 198, 199, 201, 203, 204, 208, 215, 241, 266, 267, 275, 479, 480, 561, 583, 601, 693, 694, 696, 697, 794, 841, 845, 848, 861, 865, 868, 886], "lag": [19, 27, 77, 84, 194, 223, 244, 264, 266, 267, 269, 417, 423, 437, 479, 558, 620, 886], "footcit": [19, 385, 845], "crosseetal2016": 19, "earlier": [19, 144, 166, 170, 190, 198, 201, 215, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 453, 454, 455, 474, 476, 477, 539, 794, 849, 886], "wherea": [19, 80, 135, 142, 155, 157, 167, 174, 195, 201, 202, 203, 209, 226, 258, 264, 265, 283, 297, 298, 479, 480, 487, 784, 807, 813, 841, 868, 872, 886], "chang": [19, 31, 44, 45, 113, 126, 135, 141, 144, 148, 150, 155, 157, 160, 166, 169, 170, 171, 174, 175, 177, 183, 187, 188, 190, 191, 194, 199, 204, 205, 206, 210, 211, 216, 217, 218, 222, 226, 229, 234, 236, 241, 244, 256, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 297, 298, 304, 307, 309, 312, 320, 335, 340, 341, 343, 347, 360, 362, 387, 411, 418, 432, 440, 445, 446, 448, 450, 452, 454, 455, 464, 470, 474, 476, 477, 479, 480, 500, 503, 504, 515, 519, 522, 523, 539, 549, 550, 552, 553, 554, 560, 561, 563, 576, 582, 589, 591, 593, 615, 623, 625, 641, 650, 652, 654, 655, 671, 698, 701, 706, 708, 709, 710, 723, 749, 754, 764, 770, 771, 772, 778, 779, 782, 783, 784, 785, 786, 788, 790, 793, 794, 795, 797, 799, 801, 804, 806, 807, 808, 809, 810, 812, 814, 816, 817, 818, 819, 824, 832, 846, 851, 853, 861, 864, 865, 868, 871, 872], "affect": [19, 49, 71, 80, 140, 141, 148, 150, 166, 189, 198, 199, 201, 202, 204, 205, 207, 209, 241, 244, 257, 259, 264, 265, 266, 267, 271, 274, 275, 279, 365, 403, 452, 453, 479, 480, 500, 578, 623, 658, 659, 734, 737, 807, 812, 845, 861, 868, 886], "obvious": [19, 157, 209, 241], "cf": [19, 144, 154, 722, 732, 736], "next": [19, 54, 55, 58, 113, 115, 120, 134, 135, 140, 144, 149, 150, 155, 156, 160, 165, 170, 174, 176, 178, 187, 189, 198, 200, 204, 206, 210, 215, 216, 217, 226, 240, 241, 261, 264, 265, 266, 267, 273, 354, 410, 411, 418, 479, 480, 560, 561, 576, 706, 708, 709, 710, 735, 738, 771, 772, 793, 797, 806, 809, 814, 843, 845, 853, 868, 871, 886], "section": [19, 74, 115, 135, 136, 139, 141, 143, 148, 149, 150, 155, 164, 165, 166, 170, 171, 174, 187, 188, 189, 191, 198, 200, 201, 202, 204, 207, 209, 215, 216, 241, 259, 261, 262, 263, 264, 265, 266, 267, 273, 274, 276, 297, 298, 312, 392, 411, 418, 432, 438, 446, 448, 479, 480, 496, 508, 560, 561, 576, 582, 594, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 845, 849, 861, 867, 868, 869, 871, 886], "haufeetal2014": 19, "sr": [19, 212, 862, 868], "1e4": 19, "mean_pattern": 19, "max_pattern": 19, "8384": [19, 886], "1718": 19, "171": [19, 71, 75, 125, 168, 201, 208, 226, 231, 244, 388, 539, 570, 600, 663, 668, 886], "2595": 19, "04it": [19, 34, 111, 194, 195, 208, 226, 227, 231, 236], "255": [19, 113, 126, 159, 168, 226, 230, 231, 241, 271, 272, 275, 278, 279, 280, 754, 773, 812, 817, 818], "3144": 19, "49it": [19, 102, 103, 107, 111, 179, 194, 195, 208, 226, 227, 228, 230, 231, 235], "340": [19, 35, 51, 80, 81, 111, 122, 168, 190, 244, 300, 886], "3533": 19, "427": [19, 231], "3830": 19, "513": [19, 84, 87, 143, 147], "4046": 19, "599": [19, 105, 108, 231], "4214": 19, "4351": 19, "770": [19, 80, 150, 153, 194, 197, 231], "4456": 19, "855": [19, 231], "4546": 19, "4616": 19, "1024": [19, 113, 693, 694, 696, 697], "4678": 19, "1110": [19, 208], "4739": 19, "1194": [19, 136, 244, 404, 862], "4783": 19, "1279": 19, "4825": 19, "1365": 19, "4867": 19, "1450": 19, "4902": 19, "1539": [19, 194], "4948": 19, "1625": 19, "4978": 19, "1711": [19, 28, 34, 45, 106, 120, 131, 141, 144, 145, 151, 165, 168, 176, 179, 200, 223, 231, 234, 236], "5005": 19, "1797": [19, 161], "5030": 19, "1883": 19, "5051": 19, "1968": 19, "5069": 19, "2055": 19, "5091": 19, "2141": [19, 34, 168, 200, 223, 226, 244, 699, 700], "5107": 19, "2226": 19, "5118": 19, "2314": 19, "5138": 19, "2401": [19, 194], "5156": 19, "2487": [19, 40, 244, 476], "5169": 19, "2572": 19, "5175": 19, "2658": 19, "5186": 19, "2731": 19, "5148": 19, "2810": 19, "5131": 19, "2891": [19, 194], "5126": 19, "2976": 19, "5135": 19, "3062": 19, "5146": 19, "3146": 19, "5149": 19, "3231": 19, "5158": 19, "3317": 19, "3405": 19, "5185": 19, "3489": 19, "5188": 19, "77it": [19, 34, 102, 111, 194, 208, 226, 227, 230, 231], "3577": 19, "5204": 19, "3665": 19, "5219": 19, "3752": 19, "5231": 19, "3836": 19, "5229": [19, 244, 735, 738], "3924": 19, "5242": 19, "4010": 19, "5246": 19, "4098": [19, 24, 43, 158, 159, 181, 861], "5259": 19, "4186": 19, "5269": 19, "4275": 19, "5282": 19, "4361": 19, "5286": 19, "4444": 19, "5280": 19, "4532": 19, "5291": 19, "4622": 19, "5307": 19, "4712": 19, "5323": 19, "4804": 19, "5342": 19, "4893": 19, "5351": 19, "4979": 19, "5352": 19, "5066": 19, "5355": 19, "5155": 19, "5363": 19, "5244": 19, "5372": 19, "5336": 19, "5391": 19, "5426": 19, "5403": 19, "5517": 19, "5415": 19, "5605": 19, "5419": 19, "5697": 19, "5434": 19, "5789": 19, "5447": 19, "5877": 19, "5448": 19, "5968": 19, "5459": 19, "6059": 19, "5468": 19, "6149": [19, 204], "5475": 19, "6243": 19, "5494": 19, "6335": 19, "5505": 19, "6425": 19, "5510": 19, "6517": 19, "5519": 19, "6608": 19, "5526": 19, "6694": 19, "5518": 19, "6786": 19, "5527": 19, "6876": 19, "5531": 19, "6969": 19, "5543": 19, "7060": 19, "5547": 19, "7147": 19, "5541": 19, "5546": 19, "7329": 19, "5551": 19, "89": [19, 34, 35, 47, 71, 78, 79, 80, 81, 102, 107, 111, 113, 135, 168, 183, 189, 190, 194, 195, 199, 208, 226, 227, 230, 231, 244, 570, 868], "7420": 19, "5556": 19, "7508": 19, "5553": 19, "7598": [19, 175], "5555": 19, "7685": 19, "7773": 19, "5542": 19, "7861": 19, "5540": 19, "7950": 19, "5539": 19, "8041": 19, "8133": 19, "8221": [19, 874], "5552": 19, "8312": 19, "5558": 19, "5312": 19, "2520": 19, "177": [19, 35, 144, 168, 195, 230, 231, 244, 693, 694, 696, 697], "3505": 19, "266": [19, 32, 33, 34, 46, 111, 112, 168, 201, 208, 231, 240, 244], "4022": 19, "355": [19, 80, 111, 168, 194, 226, 231], "4347": 19, "444": [19, 226, 231, 236], "4560": 19, "533": [19, 195, 231], "4715": 19, "621": [19, 105, 110, 150, 231, 244], "4821": 19, "4906": 19, "797": [19, 143, 231], "888": [19, 231], "5055": 19, "5115": 19, "1070": 19, "5177": 19, "1159": [19, 244, 561, 591], "5212": 19, "1247": 19, "5237": 19, "1336": 19, "5264": 19, "1425": 19, "5287": 19, "1513": [19, 168, 208], "5303": 19, "1605": 19, "5337": 19, "1696": [19, 208], "5362": 19, "1785": [19, 161], "5374": 19, "1875": 19, "5390": 19, "1966": 19, "5407": 19, "2058": 19, "5429": 19, "2148": 19, "5441": 19, "2237": 19, "2328": 19, "5460": 19, "2417": 19, "5466": 19, "2507": 19, "2597": 19, "5483": 19, "2687": 19, "5491": [19, 175], "2776": 19, "5493": 19, "2866": 19, "5501": 19, "2955": 19, "5504": 19, "3042": 19, "5498": 19, "3131": 19, "5499": 19, "3220": [19, 194], "5502": 19, "3308": 19, "3397": 19, "5503": 19, "3481": 19, "5488": 19, "3572": 19, "3663": 19, "5507": 19, "3754": 19, "5514": 19, "3844": 19, "3935": 19, "4023": 19, "5523": 19, "4113": 19, "4202": 19, "5528": 19, "4293": 19, "5534": 19, "4383": 19, "5537": 19, "4474": 19, "5544": 19, "4564": 19, "4653": 19, "4743": 19, "5548": 19, "4834": 19, "4919": 19, "5008": 19, "5097": 19, "5184": [19, 179], "5270": 19, "5525": 19, "5359": 19, "5524": 19, "5538": 19, "5625": 19, "5714": 19, "5521": 19, "5802": 19, "5520": 19, "5890": 19, "5978": 19, "5515": 19, "6070": 19, "6160": 19, "5529": 19, "6248": 19, "6339": 19, "6429": 19, "5535": 19, "6513": 19, "6600": 19, "5511": 19, "6687": [19, 874], "6776": 19, "5506": 19, "6863": 19, "6953": 19, "7045": 19, "7135": 19, "7225": 19, "7315": 19, "7404": 19, "5532": 19, "7493": 19, "7584": 19, "7673": 19, "7764": 19, "7856": 19, "7945": 19, "5549": 19, "8034": 19, "5550": 19, "8122": 19, "8212": 19, "8302": 19, "5480": 19, "2533": [19, 168], "175": [19, 76, 84, 141, 149, 168, 195, 208, 226, 230, 231, 244, 561], "3478": 19, "3973": 19, "351": [19, 80, 111, 168, 226], "4302": 19, "441": [19, 35, 226, 231, 244, 561, 591], "4542": 19, "4711": 19, "618": [19, 231, 244, 688], "4814": 19, "705": [19, 35, 195, 231], "4963": 19, "883": [19, 129, 132, 231], "5034": 19, "973": 19, "5092": 19, "1063": [19, 128, 209, 244, 572, 593], "5144": 19, "1154": 19, "5191": 19, "1245": [19, 35], "5234": 19, "1335": [19, 194], "5263": 19, "5289": 19, "1516": 19, "5317": 19, "1608": 19, "5346": 19, "1698": [19, 108], "1788": [19, 179, 194, 244], "5379": 19, "1878": 19, "5396": 19, "1967": [19, 239, 244, 264, 265, 266, 267, 479, 480, 708, 710, 725], "5422": 19, "2147": 19, "5431": 19, "2236": [19, 112, 244], "5440": 19, "2327": 19, "5452": 19, "2416": 19, "5456": 19, "2596": 19, "5472": 19, "5485": 19, "2777": 19, "2867": 19, "5500": 19, "2958": 19, "5508": 19, "3047": 19, "5509": 19, "3136": 19, "5512": 19, "3225": 19, "3315": [19, 244], "3406": 19, "3491": 19, "3578": 19, "3664": 19, "5496": 19, "99it": [19, 33, 34, 102, 103, 107, 111, 194, 208, 226, 228, 230, 231], "3845": 19, "3934": 19, "4110": 19, "4196": 19, "4281": 19, "4371": 19, "5495": 19, "4461": 19, "4552": 19, "4643": 19, "4735": 19, "4826": 19, "4918": 19, "5545": 19, "5010": 19, "5103": 19, "5565": 19, "5195": 19, "5572": 19, "5283": 19, "5568": 19, "5567": 19, "5463": 19, "5580": 19, "5647": 19, "5587": 19, "5739": 19, "5593": 19, "5829": 19, "5914": 19, "5577": 19, "6005": 19, "5582": 19, "6097": 19, "5588": 19, "6173": 19, "6255": 19, "6344": 19, "6434": 19, "6525": 19, "5533": 19, "6616": 19, "6707": 19, "6799": 19, "6888": [19, 886], "5554": 19, "6978": 19, "7067": 19, "7154": 19, "7188": 19, "5376": 19, "7264": 19, "7355": 19, "5358": 19, "7445": 19, "5370": 19, "81it": [19, 95, 102, 111, 122, 179, 195, 208, 226, 227, 230, 231, 235, 236], "7536": 19, "5384": 19, "7626": 19, "5395": 19, "7719": 19, "5416": 19, "7812": 19, "7903": 19, "7984": 19, "8056": 19, "5378": 19, "8144": 19, "5383": 19, "8233": 19, "5389": 19, "8322": 19, "5397": 19, "sens": [19, 60, 70, 141, 159, 201, 206, 211, 241, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 454, 455, 474, 476, 477, 539, 776, 794, 841, 845, 867, 868], "actual": [19, 23, 27, 41, 43, 60, 63, 80, 114, 127, 143, 150, 157, 159, 161, 167, 169, 171, 174, 181, 182, 183, 184, 188, 189, 194, 199, 200, 201, 202, 217, 226, 228, 231, 234, 235, 236, 241, 257, 274, 445, 541, 561, 841, 845, 862, 868, 886], "valid_samples_": [19, 417], "grei": [19, 112, 141, 241, 266, 267, 706, 790, 886], "attempt": [19, 75, 194, 198, 228, 264, 265, 266, 267, 272, 278, 280, 375, 479, 480, 486, 496, 561, 636, 650, 817, 839, 841, 867, 886], "reflect": [19, 32, 60, 70, 119, 134, 140, 148, 150, 159, 160, 176, 180, 198, 203, 204, 206, 215, 264, 265, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 449, 450, 451, 454, 455, 474, 476, 477, 479, 480, 539, 623, 686, 793, 794, 807, 841, 845, 861, 868, 886], "most": [19, 28, 45, 47, 70, 73, 81, 82, 103, 107, 108, 113, 119, 126, 134, 139, 143, 148, 149, 150, 151, 154, 155, 164, 166, 168, 170, 171, 180, 187, 191, 198, 201, 203, 205, 206, 208, 209, 210, 211, 215, 226, 230, 239, 256, 264, 265, 266, 267, 269, 270, 275, 278, 312, 330, 355, 356, 357, 377, 378, 379, 382, 383, 384, 386, 390, 391, 394, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 440, 446, 451, 454, 474, 513, 519, 548, 561, 571, 591, 593, 610, 658, 659, 660, 669, 670, 671, 672, 693, 694, 695, 696, 697, 744, 749, 754, 772, 793, 841, 844, 845, 849, 850, 851, 863, 865, 867, 868, 869, 872, 876, 886], "toward": [19, 43, 46, 54, 55, 70, 102, 159, 179, 191, 200, 230, 241, 244, 453, 455, 543, 564, 868, 886], "directli": [19, 34, 43, 93, 94, 137, 142, 143, 148, 164, 169, 170, 171, 187, 189, 195, 199, 202, 203, 204, 205, 206, 217, 234, 240, 241, 256, 259, 261, 262, 263, 264, 265, 266, 267, 269, 271, 273, 275, 276, 279, 280, 312, 313, 318, 322, 359, 371, 411, 418, 447, 476, 479, 480, 481, 482, 487, 500, 560, 561, 576, 578, 623, 650, 706, 708, 710, 756, 771, 773, 784, 786, 793, 797, 806, 809, 812, 814, 816, 818, 863, 868, 876, 886], "obtain": [19, 38, 42, 43, 60, 89, 93, 94, 136, 145, 150, 154, 156, 157, 169, 171, 174, 176, 177, 183, 184, 201, 203, 209, 215, 216, 223, 226, 228, 231, 240, 262, 264, 265, 266, 267, 268, 271, 275, 279, 280, 298, 309, 342, 344, 354, 356, 360, 373, 417, 419, 461, 462, 473, 476, 477, 479, 480, 487, 494, 499, 513, 528, 536, 547, 561, 565, 572, 591, 610, 618, 622, 628, 655, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 676, 680, 693, 694, 695, 696, 697, 707, 734, 737, 754, 773, 789, 812, 813, 818, 841, 861, 862, 866, 867, 868, 886], "via": [19, 134, 135, 139, 141, 143, 144, 148, 149, 156, 167, 168, 169, 170, 171, 174, 179, 191, 198, 199, 200, 204, 205, 215, 218, 226, 227, 230, 234, 236, 239, 240, 244, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 274, 276, 277, 279, 280, 283, 297, 298, 309, 318, 322, 328, 329, 375, 422, 445, 447, 449, 450, 463, 470, 479, 480, 492, 561, 687, 693, 694, 696, 697, 708, 709, 710, 756, 770, 774, 775, 784, 788, 789, 793, 801, 807, 832, 841, 843, 845, 847, 848, 853, 865, 886], "procedur": [19, 112, 143, 160, 161, 187, 203, 204, 209, 226, 228, 229, 230, 236, 241, 244, 257, 259, 264, 265, 266, 267, 347, 354, 359, 419, 479, 480, 561, 562, 576, 578, 591, 601, 623, 693, 841, 862, 865, 868, 871, 886], "straightforward": [19, 102, 188, 201, 223, 868, 886], "sign": [19, 28, 38, 39, 47, 150, 204, 226, 229, 234, 266, 267, 271, 272, 275, 278, 279, 280, 335, 445, 453, 474, 476, 477, 514, 528, 529, 530, 531, 532, 591, 693, 694, 696, 697, 845, 868, 886], "strength": [19, 22, 35, 93, 150, 174, 204, 272, 278, 280, 576, 868], "direct": [19, 60, 79, 122, 149, 155, 159, 160, 167, 177, 179, 184, 199, 205, 206, 208, 241, 244, 256, 262, 264, 265, 271, 272, 274, 275, 278, 279, 280, 290, 297, 298, 433, 445, 453, 479, 480, 490, 528, 571, 588, 658, 708, 710, 754, 784, 796, 807, 817, 841, 845, 851, 865, 867, 868, 886], "125": [19, 24, 35, 66, 126, 136, 142, 155, 159, 168, 169, 195, 201, 230, 231, 240, 243, 338], "nbetween": 19, "giovanni": [19, 194, 244, 417, 862], "di": [19, 40, 142, 194, 244, 417, 862], "liberto": [19, 194, 244, 417, 862], "adam": [19, 134, 135, 194, 244, 417, 862, 873, 886], "bednar": [19, 194, 244, 417, 862], "edmund": [19, 194, 244, 417, 862], "fnhum": [19, 150, 194, 244, 417, 566, 862], "00604": [19, 194, 244, 417, 862], "receptive_field_mtrf": [19, 20], "951": 20, "auto_examples_decod": 20, "ssd_spatial_filt": [20, 21], "341": [20, 21, 111, 168, 226, 231, 526], "retain": [21, 111, 148, 177, 199, 200, 215, 226, 259, 264, 265, 274, 277, 435, 561, 693, 694, 696, 697, 797, 843, 874, 886], "oscillatori": [21, 112, 223, 240, 244, 297, 298, 722, 732, 733, 736], "propos": [21, 241, 576, 582, 845], "surround": [21, 81, 100, 241, 419, 566, 588, 602, 701, 845], "victoria": [21, 886], "peterson": [21, 886], "victoriapeterson09": 21, "freqs_sig": 21, "freqs_nois": 21, "sort_by_spectral_ratio": [21, 419], "filt_params_sign": [21, 419], "l_trans_bandwidth": [21, 112, 113, 201, 210, 264, 265, 266, 267, 413, 422, 447, 449, 479, 480, 597, 886], "filt_params_nois": [21, 419], "72000": [21, 81, 190], "196608": 21, "262144": 21, "327680": 21, "393216": 21, "458752": 21, "67108864": 21, "67174400": 21, "134742016": 21, "136314880": 21, "268435456": 21, "825": [21, 82, 113, 231, 244, 561], "086": [21, 244, 663, 668], "preserv": [21, 34, 154, 155, 159, 165, 166, 194, 199, 204, 215, 226, 230, 259, 264, 265, 266, 267, 410, 441, 442, 443, 444, 479, 480, 578, 589, 706, 708, 709, 710, 868, 886], "ratio": [21, 58, 87, 126, 143, 165, 195, 201, 204, 206, 223, 228, 229, 230, 231, 244, 271, 272, 275, 278, 279, 280, 287, 419, 543, 544, 545, 561, 562, 646, 664, 665, 706, 709, 757, 814, 861, 868, 886], "accord": [21, 155, 168, 169, 191, 194, 215, 257, 264, 265, 266, 267, 417, 419, 440, 479, 480, 487, 490, 494, 496, 556, 594, 611, 650, 656, 862, 868, 871, 886], "either": [21, 32, 43, 141, 148, 149, 150, 165, 166, 167, 169, 170, 171, 189, 198, 202, 207, 209, 216, 217, 222, 226, 241, 256, 259, 261, 264, 265, 266, 267, 268, 271, 272, 273, 275, 277, 278, 279, 280, 288, 302, 321, 338, 354, 411, 418, 419, 428, 438, 446, 469, 472, 479, 480, 510, 511, 513, 519, 523, 526, 527, 560, 561, 563, 572, 576, 582, 593, 623, 633, 650, 652, 657, 658, 659, 671, 691, 692, 706, 707, 708, 710, 718, 728, 733, 734, 736, 737, 741, 754, 770, 771, 775, 778, 785, 786, 793, 797, 798, 806, 807, 808, 809, 812, 814, 816, 817, 818, 822, 845, 851, 861, 862, 865, 871, 886], "multipli": [21, 187, 201, 226, 269, 271, 272, 275, 278, 279, 280, 299, 419, 445, 528, 534, 706, 868, 871], "eq": [21, 419, 722, 732, 736, 868], "c_n": [21, 868], "reli": [21, 168, 200, 241, 312, 845, 861, 865, 868, 871, 874, 886], "suggest": [21, 26, 140, 143, 161, 200, 201, 202, 203, 204, 206, 264, 265, 289, 291, 754, 844, 849, 850, 865, 867, 886], "pariet": [21, 49, 640, 754], "ssd_sourc": [21, 419], "psd": [21, 27, 68, 74, 91, 104, 105, 110, 132, 136, 139, 165, 171, 195, 198, 202, 211, 218, 221, 239, 240, 261, 264, 265, 266, 267, 269, 270, 274, 275, 359, 416, 452, 479, 480, 518, 523, 527, 534, 535, 539, 542, 558, 612, 627, 654, 708, 710, 713, 716, 724, 725, 748, 754, 770, 786, 808, 822, 862, 886], "psd_array_welch": [21, 221, 239, 264, 265, 266, 267, 419, 479, 480, 708, 710, 876, 886], "n_fft": [21, 107, 108, 113, 132, 211, 221, 239, 241, 264, 265, 266, 267, 419, 479, 480, 534, 707, 708, 710, 711, 713, 714, 716, 725, 735, 738, 808, 886], "4096": [21, 181, 268], "spec_ratio": [21, 419], "alreadi": [21, 30, 31, 34, 35, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 70, 71, 74, 78, 85, 86, 93, 94, 114, 115, 118, 119, 126, 134, 141, 143, 144, 148, 149, 150, 157, 158, 159, 161, 165, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 198, 200, 201, 204, 205, 206, 209, 215, 221, 241, 256, 264, 265, 266, 267, 271, 272, 274, 275, 276, 278, 279, 280, 297, 298, 307, 309, 328, 354, 358, 359, 367, 369, 370, 371, 372, 380, 403, 404, 411, 418, 445, 446, 454, 455, 474, 476, 477, 479, 480, 521, 539, 572, 573, 578, 623, 643, 644, 707, 726, 775, 778, 794, 836, 845, 846, 847, 862, 865, 868, 869, 874, 886], "sorter": 21, "get_spectral_ratio": [21, 419], "spectral": [21, 27, 32, 33, 34, 68, 71, 104, 105, 111, 112, 113, 116, 132, 136, 141, 165, 171, 195, 200, 208, 221, 223, 240, 244, 261, 264, 265, 266, 267, 269, 270, 275, 289, 290, 291, 297, 359, 416, 419, 452, 455, 479, 480, 518, 523, 527, 534, 535, 539, 542, 558, 561, 612, 620, 627, 654, 694, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 723, 724, 725, 733, 734, 736, 737, 748, 754, 770, 780, 786, 808, 822, 862, 874, 886], "orang": [21, 150, 155, 189, 210, 231, 236, 811], "frac": [21, 148, 201, 202, 209, 226, 275, 536, 666, 719, 722, 732, 733, 734, 736, 737, 868], "p_f": 21, "p_": [21, 868], "sf": [21, 226], "384": [21, 35, 80, 143, 170, 194, 195, 231], "spectrum": [21, 74, 82, 102, 103, 107, 111, 132, 136, 139, 142, 164, 165, 171, 198, 202, 204, 206, 211, 218, 221, 223, 240, 241, 242, 243, 244, 264, 265, 266, 267, 274, 452, 479, 480, 561, 708, 727, 749, 797, 799, 808, 841, 871, 874, 876, 886], "lowest": [21, 241, 259, 264, 265, 266, 267, 270, 341, 578, 683, 706, 707, 709, 778, 788], "below50": 21, "bandfilt": 21, "loglog": 21, "fill_between": [21, 112, 150, 236, 240, 241], "10000": [21, 83, 110, 440, 474, 591, 671, 695], "green": [21, 48, 49, 50, 80, 115, 150, 155, 180, 189, 206, 241, 266, 267, 754, 775, 788, 805, 811, 886], "enjoi": [21, 241], "situat": [21, 203, 207, 221, 223, 274, 319, 438, 561, 845, 849, 867, 886], "chunk": [21, 79, 83, 136, 139, 145, 183, 209, 357, 359, 440, 479, 480, 561, 582, 656, 861, 886], "overlap": [21, 70, 83, 98, 108, 139, 145, 150, 165, 167, 190, 200, 209, 216, 217, 239, 244, 258, 264, 265, 266, 267, 326, 359, 413, 422, 435, 447, 449, 450, 469, 479, 480, 520, 521, 534, 547, 562, 578, 579, 593, 673, 692, 725, 754, 784, 808, 841, 886], "ssd_epoch": 21, "pattern_epoch": 21, "1251": 21, "1661": 21, "guido": [21, 244, 419], "nolt": [21, 244, 419], "gabriel": [21, 40, 203, 244, 419, 476, 560, 608], "curio": [21, 244, 419], "reliabl": [21, 102, 168, 202, 244, 419, 561], "basi": [21, 145, 161, 195, 244, 419, 432, 572, 575, 582, 593, 865, 868, 886], "spatio": [21, 46, 59, 164, 183, 194, 195, 226, 227, 237, 238, 244, 264, 266, 267, 269, 275, 276, 277, 360, 417, 419, 434, 475, 476, 479, 527, 528, 542, 558, 593, 620, 633, 635, 661, 662, 663, 664, 665, 666, 667, 668, 678, 680, 681, 682, 687, 689, 696, 697, 698, 754, 868, 886], "1528": [21, 244, 419], "1535": [21, 244, 419], "057": [21, 139, 141, 148, 168, 223, 244, 419], "produc": [22, 38, 81, 82, 116, 118, 127, 143, 160, 171, 178, 182, 189, 191, 201, 203, 209, 226, 241, 244, 256, 259, 262, 264, 270, 274, 277, 303, 304, 327, 330, 351, 355, 356, 357, 359, 366, 388, 469, 471, 479, 480, 513, 519, 520, 523, 534, 547, 561, 564, 570, 573, 574, 582, 589, 591, 610, 616, 620, 640, 655, 657, 658, 659, 660, 669, 670, 671, 672, 674, 693, 694, 695, 696, 697, 701, 743, 754, 770, 771, 807, 835, 861, 867, 868, 871, 886], "abl": [22, 89, 134, 136, 143, 158, 160, 164, 171, 203, 204, 209, 223, 234, 274, 450, 479, 480, 561, 797, 843, 845, 862, 865, 868, 874, 886], "region": [22, 38, 41, 47, 49, 93, 94, 127, 134, 136, 149, 154, 180, 189, 201, 202, 226, 227, 240, 241, 262, 264, 265, 266, 267, 277, 324, 413, 422, 447, 449, 450, 463, 464, 465, 469, 479, 480, 513, 610, 655, 666, 754, 784, 807, 810, 841, 861, 874, 886], "source_spac": [22, 277, 876, 886], "compute_distance_to_sensor": [22, 876, 886], "source_estim": [22, 27, 36, 56, 270, 275, 627, 633, 753], "surf_ori": [22, 47, 48, 49, 54, 55, 68, 157, 177, 222, 268, 364, 539, 886], "leadfield": [22, 41, 157, 162, 164, 171, 297, 298, 299, 886], "7498": [22, 31, 35, 40, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 68, 89, 91, 92, 93, 94, 130, 171, 174, 176, 177, 178, 180, 195, 222, 223], "combin": [22, 24, 29, 30, 31, 34, 35, 37, 40, 41, 42, 44, 47, 48, 49, 51, 54, 55, 58, 59, 68, 86, 89, 91, 92, 93, 94, 100, 111, 125, 127, 130, 131, 136, 139, 140, 141, 144, 149, 150, 154, 165, 167, 169, 174, 176, 177, 178, 179, 180, 181, 187, 189, 190, 194, 195, 198, 206, 207, 209, 210, 215, 217, 223, 226, 228, 231, 234, 236, 244, 256, 259, 264, 265, 266, 267, 270, 271, 272, 275, 277, 278, 279, 280, 290, 297, 298, 305, 306, 314, 354, 355, 356, 357, 362, 371, 388, 411, 416, 418, 430, 433, 470, 479, 480, 495, 498, 521, 522, 528, 531, 534, 535, 537, 538, 561, 573, 574, 617, 627, 633, 640, 677, 706, 708, 709, 710, 713, 716, 724, 754, 770, 778, 785, 786, 793, 796, 814, 845, 868, 871, 874, 886], "local": [22, 26, 27, 33, 34, 35, 36, 40, 41, 42, 46, 47, 48, 49, 51, 54, 55, 56, 58, 59, 68, 70, 83, 89, 91, 93, 108, 112, 115, 119, 149, 150, 151, 154, 157, 165, 170, 174, 178, 179, 183, 186, 190, 195, 206, 210, 223, 244, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 275, 279, 297, 298, 300, 312, 316, 330, 342, 344, 353, 354, 358, 359, 364, 369, 370, 371, 373, 377, 378, 379, 380, 382, 383, 384, 386, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 418, 432, 452, 454, 455, 468, 474, 476, 477, 479, 480, 486, 522, 523, 527, 528, 529, 539, 543, 560, 561, 569, 576, 583, 588, 614, 623, 625, 638, 647, 650, 654, 663, 666, 668, 670, 706, 708, 710, 746, 754, 763, 770, 771, 779, 782, 786, 791, 793, 794, 797, 806, 809, 813, 814, 816, 822, 841, 843, 846, 851, 852, 854, 865, 868, 874, 886], "grad_map": 22, "sensitivity_map": [22, 26, 130, 157, 876], "mag_map": [22, 26], "eeg_map": 22, "204": [22, 34, 73, 76, 92, 112, 130, 145, 157, 165, 166, 167, 168, 171, 182, 183, 195, 198, 199, 200, 205, 206, 208, 209, 215, 216, 217, 218, 223, 226, 231, 240, 886], "gain": [22, 24, 31, 41, 65, 89, 92, 93, 94, 108, 157, 179, 201, 223, 297, 298, 446, 455, 795, 802, 868, 886], "picks_meg": 22, "picks_eeg": 22, "sharex": [22, 45, 73, 89, 112, 194, 206, 241], "dipol": [22, 26, 27, 28, 31, 34, 35, 36, 39, 40, 41, 42, 46, 51, 56, 59, 60, 68, 82, 83, 91, 92, 93, 108, 118, 151, 154, 157, 164, 165, 168, 176, 178, 179, 181, 182, 183, 184, 185, 186, 190, 203, 221, 223, 244, 261, 263, 264, 265, 266, 267, 268, 269, 272, 275, 278, 279, 280, 297, 298, 299, 300, 302, 311, 342, 353, 364, 373, 390, 432, 452, 454, 456, 474, 475, 476, 477, 479, 480, 522, 527, 528, 530, 539, 548, 558, 612, 614, 615, 623, 625, 638, 640, 654, 658, 659, 663, 666, 668, 670, 672, 706, 708, 709, 710, 754, 763, 770, 771, 781, 782, 813, 817, 822, 841, 852, 854, 857, 861, 868, 871, 876, 886], "fontsiz": [22, 37, 111, 119, 126, 143, 175, 209, 813], "fig_2": [22, 171], "hist": [22, 70, 130, 143, 210], "ravel": [22, 110, 112, 116, 130, 194, 201, 227], "brain_sen": 22, "add_text": [22, 43, 47, 48, 49, 50, 54, 55, 174, 176, 178, 754], "font_siz": [22, 43, 47, 48, 49, 50, 54, 55, 174, 176, 178, 754], "02108201": 22, "32186553": 22, "minimum": [22, 31, 57, 70, 78, 82, 135, 139, 148, 150, 161, 165, 167, 170, 176, 178, 179, 200, 201, 206, 222, 234, 244, 259, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 293, 294, 295, 296, 297, 298, 341, 343, 344, 359, 444, 446, 447, 449, 450, 452, 454, 455, 479, 480, 523, 528, 529, 530, 531, 532, 534, 535, 539, 541, 543, 544, 545, 563, 564, 569, 578, 579, 582, 653, 663, 666, 668, 671, 699, 706, 711, 712, 713, 714, 715, 716, 717, 735, 738, 754, 778, 792, 808, 811, 841, 852, 854, 861, 871, 886], "euclidean": [22, 270, 275, 277, 543, 666, 669, 672, 674, 677], "maxdep": 22, "vertno": [22, 43, 48, 49, 50, 157, 174, 177, 222, 234, 235, 236, 275, 277, 278, 871], "depths_map": 22, "brain_dep": 22, "like": [22, 26, 27, 31, 32, 34, 35, 36, 40, 41, 42, 47, 56, 59, 60, 70, 81, 82, 100, 108, 111, 126, 134, 135, 139, 140, 141, 142, 143, 148, 149, 150, 154, 155, 159, 160, 161, 165, 166, 167, 168, 170, 171, 174, 176, 180, 181, 187, 188, 189, 191, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 215, 216, 217, 218, 221, 226, 230, 241, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 288, 301, 302, 303, 304, 307, 308, 309, 312, 313, 321, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 347, 351, 352, 353, 354, 360, 365, 366, 367, 368, 372, 385, 386, 388, 390, 411, 418, 432, 434, 435, 440, 446, 452, 454, 461, 463, 464, 467, 469, 470, 471, 472, 473, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 517, 519, 522, 523, 527, 528, 530, 539, 542, 546, 547, 548, 550, 551, 560, 561, 566, 576, 579, 584, 588, 589, 590, 591, 593, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 643, 644, 651, 654, 655, 657, 658, 659, 660, 669, 670, 671, 672, 675, 683, 687, 689, 692, 693, 694, 695, 696, 697, 701, 702, 704, 705, 706, 707, 708, 709, 710, 722, 726, 727, 728, 732, 739, 741, 742, 746, 748, 751, 754, 762, 770, 771, 772, 778, 782, 784, 786, 788, 790, 792, 793, 794, 797, 801, 804, 806, 807, 808, 809, 810, 812, 814, 816, 817, 818, 827, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 839, 840, 841, 843, 844, 845, 846, 848, 849, 850, 851, 852, 853, 861, 863, 865, 867, 868, 871, 886], "corr": [22, 256], "gradiomt": 22, "815476": 22, "sensitivii": 22, "highest": [22, 175, 204, 259, 262, 264, 265, 266, 267, 270, 455, 479, 480, 578, 683, 706, 707, 709, 782, 794, 868], "close": [22, 60, 70, 96, 106, 110, 116, 119, 126, 139, 141, 143, 148, 150, 157, 159, 171, 190, 199, 200, 203, 204, 206, 207, 210, 218, 223, 226, 231, 262, 264, 265, 266, 267, 270, 342, 358, 380, 434, 454, 470, 471, 479, 480, 561, 579, 584, 677, 701, 708, 710, 722, 732, 736, 754, 760, 761, 782, 784, 801, 807, 810, 845, 849, 857, 865, 868, 871, 886], "decreas": [22, 55, 111, 201, 212, 223, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 411, 432, 479, 480, 561, 702, 706, 709, 733, 734, 736, 737, 754, 868, 886], "rapidli": [22, 211], "inreas": 22, "confirm": [22, 47, 70, 170, 189, 200, 204, 845, 868], "135": [22, 25, 117, 124, 150, 157, 168, 170, 205, 206, 207, 226, 230, 244, 277, 868], "forward_sensitivity_map": [22, 25], "coregistr": [23, 27, 80, 155, 159, 160, 162, 163, 164, 180, 262, 269, 274, 277, 304, 308, 366, 372, 389, 430, 471, 484, 519, 523, 589, 644, 674, 701, 743, 754, 770, 822, 859, 861, 874, 876, 886], "displai": [23, 24, 25, 27, 44, 47, 76, 111, 115, 124, 139, 142, 150, 155, 157, 159, 161, 165, 191, 204, 207, 215, 218, 227, 231, 256, 257, 261, 264, 265, 266, 267, 268, 270, 271, 272, 275, 277, 278, 279, 280, 312, 364, 479, 480, 519, 558, 560, 561, 625, 646, 674, 706, 708, 710, 754, 755, 769, 770, 778, 783, 784, 785, 787, 788, 789, 790, 792, 793, 794, 795, 798, 799, 804, 807, 808, 809, 810, 812, 813, 815, 817, 818, 841, 843, 844, 848, 851, 857, 865, 868, 871, 874, 886], "cerebellum": [23, 25, 27, 41, 277, 654, 655, 770, 822], "volum": [23, 25, 27, 31, 36, 44, 56, 59, 71, 134, 135, 154, 155, 157, 159, 165, 171, 175, 179, 209, 244, 256, 261, 262, 266, 268, 269, 271, 272, 275, 276, 277, 278, 279, 280, 303, 309, 312, 360, 445, 456, 464, 465, 474, 476, 477, 515, 523, 527, 528, 538, 539, 540, 542, 588, 590, 614, 623, 633, 636, 645, 654, 655, 678, 681, 698, 701, 742, 743, 744, 754, 770, 812, 817, 818, 822, 839, 841, 860, 861, 868, 874, 886], "morph": [23, 25, 27, 36, 40, 56, 133, 135, 154, 159, 176, 180, 234, 235, 236, 256, 266, 268, 269, 270, 271, 275, 276, 277, 278, 279, 280, 360, 467, 484, 523, 527, 528, 542, 547, 548, 557, 558, 590, 623, 625, 630, 633, 634, 635, 646, 655, 742, 743, 744, 754, 812, 818, 841, 861, 862, 871, 886], "its": [24, 70, 75, 93, 125, 134, 136, 139, 140, 142, 144, 149, 155, 157, 159, 165, 167, 168, 169, 170, 171, 174, 179, 182, 188, 189, 195, 198, 199, 201, 202, 204, 205, 206, 207, 209, 215, 216, 218, 226, 231, 239, 241, 244, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 312, 411, 414, 418, 425, 426, 445, 452, 476, 477, 478, 479, 480, 487, 494, 560, 561, 576, 662, 672, 692, 693, 694, 696, 697, 706, 708, 709, 710, 722, 725, 732, 744, 771, 778, 782, 785, 786, 793, 797, 805, 806, 807, 809, 812, 814, 816, 817, 841, 843, 844, 845, 849, 851, 861, 863, 865, 867, 868, 886], "freesurf": [24, 32, 33, 34, 38, 41, 43, 44, 47, 115, 134, 135, 155, 157, 160, 162, 163, 164, 170, 171, 174, 181, 190, 244, 260, 262, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 303, 307, 308, 309, 312, 360, 365, 366, 367, 372, 385, 387, 388, 390, 393, 410, 430, 445, 463, 464, 465, 467, 469, 470, 471, 472, 473, 484, 513, 515, 517, 519, 547, 588, 589, 610, 626, 627, 628, 629, 635, 636, 637, 638, 649, 654, 655, 669, 672, 683, 701, 702, 704, 746, 753, 754, 765, 770, 772, 782, 812, 817, 818, 822, 835, 836, 839, 841, 849, 851, 852, 857, 862, 865, 886], "alan": [24, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709, 886], "leggitt": [24, 886], "ucsf": 24, "setup_source_spac": [24, 41, 108, 154, 157, 159, 177, 190, 277, 635, 655, 676, 680, 861, 868, 876, 886], "setup_volume_source_spac": [24, 41, 50, 155, 157, 159, 207, 271, 272, 275, 277, 278, 279, 280, 445, 515, 635, 654, 868, 876, 886], "aseg_fnam": 24, "aseg": [24, 41, 134, 175, 180, 262, 271, 272, 275, 278, 279, 280, 445, 463, 464, 515, 655, 754, 841, 886], "mgz": [24, 30, 41, 44, 50, 155, 157, 159, 160, 175, 179, 180, 181, 256, 271, 272, 275, 277, 278, 279, 280, 303, 307, 308, 309, 390, 445, 464, 515, 655, 772, 818, 841, 865, 868, 886], "surf": [24, 26, 41, 80, 108, 117, 134, 154, 155, 156, 157, 158, 159, 160, 171, 175, 180, 222, 226, 256, 262, 270, 275, 277, 279, 280, 307, 461, 462, 513, 518, 548, 613, 636, 669, 672, 703, 740, 754, 772, 782, 829, 861, 862, 868], "add_dist": [24, 41, 108, 157, 256, 654, 676, 680, 868, 886], "lh_surf": 24, "cortex": [24, 26, 31, 37, 41, 43, 52, 53, 54, 55, 58, 60, 93, 108, 115, 125, 134, 144, 150, 157, 165, 177, 180, 189, 194, 204, 210, 223, 244, 271, 272, 275, 277, 278, 279, 280, 388, 417, 597, 610, 672, 754, 812, 817, 841, 861, 862, 868, 871, 886], "volume_label": [24, 41, 271, 272, 275, 277, 278, 279, 280, 445, 515, 655, 886], "lh_cereb": 24, "sphere_unit": [24, 157, 655, 886], "octahedron": [24, 41, 108, 155, 157, 159, 256, 271, 275, 279, 654, 812], "subdivis": [24, 41, 108, 157], "octahedr": [24, 41, 108, 157, 410], "vertex": [24, 26, 41, 48, 49, 50, 82, 89, 108, 155, 156, 157, 159, 160, 174, 176, 179, 180, 222, 223, 226, 236, 270, 271, 272, 275, 276, 277, 278, 279, 280, 282, 297, 298, 445, 467, 469, 513, 537, 538, 547, 561, 627, 628, 639, 640, 645, 672, 673, 674, 679, 682, 683, 698, 701, 702, 703, 753, 754, 868, 871, 886], "lh": [24, 26, 28, 29, 37, 38, 39, 41, 43, 47, 48, 49, 54, 55, 60, 68, 89, 91, 93, 94, 103, 107, 108, 115, 125, 126, 133, 134, 154, 155, 156, 157, 158, 159, 160, 171, 174, 175, 177, 178, 181, 182, 190, 222, 223, 235, 236, 256, 260, 270, 271, 272, 275, 278, 279, 280, 467, 513, 610, 628, 633, 643, 754, 812, 817, 836, 868], "triangl": [24, 26, 41, 52, 108, 155, 156, 157, 159, 160, 174, 177, 222, 270, 277, 410, 639, 675, 679, 682, 703, 868, 871], "neighbor": [24, 26, 41, 108, 141, 155, 156, 157, 160, 199, 222, 226, 228, 241, 322, 329, 341, 453, 503, 589, 676, 677, 678, 680, 681, 686, 693, 694, 696, 697, 703, 867, 868, 886], "geometri": [24, 41, 60, 70, 108, 157, 160, 182, 183, 209, 244, 256, 390, 411, 455, 636, 754, 841, 861, 886], "triangul": [24, 41, 52, 108, 157, 174, 227, 228, 256, 277, 318, 636, 639, 834, 839, 868, 871, 886], "155407": [24, 26, 41, 43, 52, 157, 159], "156866": [24, 26, 41, 43, 52, 157, 159], "132651": 24, "57769": 24, "50733": 24, "401": [24, 80, 208, 231], "voxel": [24, 41, 44, 50, 155, 157, 159, 207, 226, 244, 274, 277, 279, 280, 360, 588, 699, 700, 744, 754, 772, 818, 868, 886], "neighborhood": [24, 41, 50, 155, 157, 207, 277], "005000": [24, 157], "001000": [24, 41, 50, 157], "556177": 24, "16777216": 24, "nonzero": [24, 210, 868], "coord_fram": [24, 108, 117, 122, 123, 124, 134, 135, 155, 156, 157, 158, 168, 169, 177, 181, 182, 183, 189, 209, 262, 268, 269, 277, 312, 325, 330, 432, 483, 512, 571, 572, 582, 593, 754, 770, 782, 871], "export": [24, 30, 41, 111, 114, 139, 146, 147, 148, 154, 164, 167, 171, 188, 189, 219, 258, 264, 265, 266, 267, 271, 272, 275, 277, 278, 279, 280, 337, 339, 479, 480, 494, 504, 620, 706, 708, 709, 710, 843, 851, 856, 872, 876, 886], "nifti": [24, 30, 41, 154, 277, 279, 280, 886], "nii_fnam": [24, 41], "mne_sample_lh": 24, "nii": [24, 30, 41, 154, 256], "export_volum": [24, 41, 277, 886], "mri_resolut": [24, 30, 41, 44, 276, 277, 279, 280, 445, 886], "And": [24, 42, 54, 70, 108, 159, 178, 180, 189, 195, 201, 206, 210, 277, 526, 536, 696, 697, 845, 861, 868], "freeview": [24, 181, 865, 868, 886], "util": [24, 92, 145, 179, 188, 226, 264, 265, 441, 444, 479, 480, 749, 843, 845, 851, 855, 868, 876, 880, 886], "run_subprocess": 24, "mri_fnam": 24, "lut": [24, 464, 626, 754, 841], "opac": [24, 31, 35, 40, 46, 59, 91, 155, 170, 256, 274, 470, 708, 710, 754, 813, 819, 886], "jet": 24, "colorscal": 24, "slice": [24, 35, 40, 59, 139, 142, 155, 157, 159, 171, 180, 194, 217, 230, 256, 258, 259, 262, 263, 264, 265, 266, 267, 269, 274, 279, 280, 310, 313, 327, 329, 359, 369, 413, 414, 417, 421, 424, 427, 432, 449, 450, 479, 480, 560, 561, 563, 575, 577, 578, 579, 582, 585, 589, 599, 601, 608, 674, 692, 693, 694, 696, 697, 701, 706, 708, 709, 710, 712, 714, 715, 716, 717, 719, 731, 733, 734, 736, 737, 772, 778, 782, 784, 785, 788, 790, 791, 797, 798, 799, 801, 803, 805, 808, 818, 868, 871, 874, 886], "157": [24, 122, 136, 150, 168, 169, 187, 195, 210, 226, 231, 236, 244, 338, 666, 886], "678": [24, 25, 231], "137": [24, 25, 35, 51, 56, 168, 170, 226, 230, 231, 277], "left_cerebellum_volume_sourc": [24, 25], "auto_examples_forward": 25, "source_space_morph": [25, 26], "898": [25, 26, 150, 191, 193, 208, 231], "484": [25, 142, 203, 208, 226, 244, 560, 608], "oppos": [26, 60, 212, 223, 347, 420, 841, 845, 871, 886], "evenli": [26, 207, 209, 266, 267, 359, 593, 791, 868], "caution": [26, 27, 141, 156, 168, 191, 264, 265, 266, 267, 413, 479, 480, 481, 709, 763], "fname_tran": [26, 41, 50, 52, 123, 175, 180, 861], "sample_audvis_raw": [26, 29, 41, 45, 50, 52, 68, 71, 82, 91, 92, 93, 102, 103, 106, 107, 109, 110, 115, 117, 122, 123, 126, 139, 141, 145, 148, 149, 155, 157, 159, 161, 165, 166, 167, 169, 171, 175, 177, 180, 181, 198, 199, 202, 203, 205, 206, 207, 209, 215, 216, 217, 218, 222, 223, 228, 229, 230, 239, 256, 845], "fname_bem": [26, 41, 50, 158, 175, 180, 181], "fname_src_f": 26, "fsaverag": [26, 40, 43, 44, 124, 125, 134, 135, 155, 156, 159, 170, 180, 189, 210, 234, 235, 236, 244, 262, 270, 271, 275, 276, 279, 280, 304, 312, 328, 360, 365, 366, 367, 372, 385, 387, 388, 467, 471, 519, 523, 547, 589, 642, 643, 674, 698, 701, 702, 743, 754, 770, 812, 818, 861, 886], "ico": [26, 40, 43, 135, 157, 158, 160, 190, 234, 235, 236, 256, 271, 275, 279, 282, 410, 517, 654, 678, 681, 812, 861, 871, 886], "read_info": [26, 64, 89, 91, 93, 94, 156, 157, 159, 168, 876], "pick_info": [26, 118, 134, 166, 168, 223, 876, 886], "src_f": [26, 44, 179], "read_source_spac": [26, 40, 43, 44, 134, 135, 155, 158, 159, 179, 234, 235, 236, 277, 838, 876], "src_morph": 26, "morph_source_spac": [26, 275, 278, 876, 886], "subject_to": [26, 40, 43, 44, 234, 236, 256, 270, 276, 279, 280, 360, 547, 548, 630, 642, 643, 644, 645, 818, 861], "return": [26, 31, 34, 68, 69, 75, 83, 91, 92, 93, 98, 102, 107, 108, 109, 112, 113, 114, 116, 120, 136, 139, 140, 143, 145, 148, 149, 150, 159, 160, 165, 166, 167, 168, 170, 177, 187, 204, 205, 206, 207, 209, 215, 217, 221, 223, 226, 227, 230, 236, 239, 240, 241, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 377, 378, 379, 380, 382, 383, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 646, 647, 650, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 752, 753, 754, 755, 756, 757, 758, 759, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 823, 824, 827, 838, 839, 840, 863, 867, 868, 871, 886], "mag_map_f": 26, "to_original_src": [26, 275, 278, 886], "track": [26, 112, 141, 148, 165, 168, 190, 191, 199, 202, 212, 216, 217, 221, 561, 581, 863, 874, 875, 886], "sulcal": [26, 159, 754], "gyral": [26, 159, 754], "outlier": [26, 70, 156, 430, 561, 800], "mai": [26, 70, 74, 76, 82, 102, 134, 139, 140, 142, 143, 145, 148, 149, 150, 155, 157, 160, 165, 167, 169, 171, 187, 188, 189, 191, 194, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 215, 216, 217, 218, 221, 223, 228, 231, 234, 244, 259, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 278, 279, 280, 299, 318, 329, 330, 335, 353, 365, 410, 411, 413, 418, 420, 424, 430, 435, 441, 442, 443, 444, 445, 450, 461, 463, 470, 479, 480, 487, 494, 495, 500, 522, 525, 528, 548, 560, 561, 563, 576, 578, 579, 582, 584, 593, 594, 611, 613, 615, 617, 623, 642, 644, 688, 692, 693, 694, 696, 697, 699, 701, 706, 708, 709, 710, 731, 733, 734, 735, 736, 737, 738, 754, 770, 771, 777, 784, 786, 788, 789, 791, 793, 797, 801, 806, 807, 809, 814, 816, 834, 843, 845, 846, 848, 849, 851, 852, 853, 860, 861, 863, 865, 867, 868, 871, 874, 886], "occur": [26, 44, 47, 70, 75, 89, 93, 94, 139, 142, 143, 150, 160, 167, 200, 201, 206, 215, 228, 229, 257, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 282, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 434, 435, 437, 453, 454, 455, 474, 476, 477, 479, 480, 508, 539, 578, 579, 656, 706, 709, 784, 794, 807, 845, 846, 851, 861, 867, 868, 886], "kwarg": [26, 58, 108, 111, 115, 122, 140, 178, 179, 194, 201, 222, 240, 264, 265, 266, 267, 269, 274, 277, 414, 421, 479, 480, 485, 550, 706, 754, 755, 776, 791, 810, 813, 845], "smooth": [26, 38, 43, 59, 71, 82, 113, 133, 134, 141, 150, 155, 165, 170, 180, 194, 206, 226, 227, 234, 235, 236, 244, 264, 265, 266, 267, 270, 271, 272, 275, 276, 278, 279, 280, 360, 479, 480, 561, 570, 693, 694, 696, 697, 702, 722, 724, 732, 733, 734, 736, 737, 754, 763, 785, 812, 815, 817, 819, 820, 823, 864, 886], "smoothing_step": [26, 41, 42, 43, 55, 59, 60, 103, 108, 115, 130, 135, 174, 176, 178, 180, 222, 234, 271, 272, 275, 278, 279, 280, 754, 812, 817], "almost": [26, 113, 139, 167, 845, 868], "equidist": [26, 274], "unevenli": [26, 522], "achiev": [26, 43, 44, 111, 126, 141, 143, 145, 159, 160, 179, 201, 210, 217, 223, 266, 267, 354, 363, 513, 536, 561, 591, 610, 658, 659, 660, 669, 670, 672, 693, 694, 695, 696, 697, 794, 865, 868, 872, 874, 886], "closest": [26, 143, 156, 157, 215, 241, 259, 264, 265, 266, 267, 270, 277, 479, 480, 702, 708, 710, 754, 772, 786, 868, 886], "approxim": [26, 67, 169, 204, 215, 226, 244, 256, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 312, 411, 418, 432, 447, 448, 450, 462, 479, 480, 560, 561, 572, 576, 582, 593, 654, 706, 708, 710, 718, 771, 778, 779, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 841, 868, 886], "brain_subject": 26, "time_label": [26, 33, 34, 59, 60, 108, 123, 130, 223, 234, 235, 236, 266, 267, 271, 272, 275, 278, 279, 280, 754, 789, 812, 817], "brain_f": 26, "remap": [26, 27, 77, 84, 266, 267, 623, 886], "destin": [26, 43, 44, 79, 154, 159, 258, 261, 262, 264, 265, 266, 267, 271, 272, 274, 275, 276, 277, 278, 279, 280, 288, 308, 309, 312, 313, 360, 372, 410, 432, 441, 442, 443, 444, 479, 480, 512, 546, 548, 560, 561, 582, 593, 642, 643, 645, 706, 707, 708, 709, 710, 739, 740, 796, 828, 829, 830, 831, 832, 833, 834, 837, 838, 839, 840, 871, 886], "sourcespac": [26, 41, 43, 45, 50, 108, 157, 158, 159, 175, 207, 268, 270, 271, 272, 275, 278, 279, 280, 282, 360, 445, 465, 475, 514, 515, 523, 537, 538, 543, 548, 635, 654, 655, 656, 663, 666, 668, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 698, 701, 702, 754, 770, 772, 812, 817, 818, 838, 841, 868, 876, 886], "n_vertic": [26, 41, 43, 53, 108, 157, 158, 159, 260, 270, 271, 272, 275, 278, 279, 280, 455, 543, 636, 639, 674, 693, 694, 696, 697, 704, 753, 754, 834, 839], "n_use": [26, 41, 43, 45, 50, 108, 157, 158, 159, 175, 207], "10242": [26, 43, 158, 234, 235, 236, 270, 282, 467, 698, 861], "coord": [26, 41, 43, 45, 50, 108, 124, 157, 158, 159, 160, 175, 207, 342, 454, 754, 755, 824, 839], "conductor": [26, 41, 45, 50, 108, 155, 157, 158, 175, 181, 304, 454, 524, 655, 770, 841, 868, 886], "20484": [26, 135, 158, 160, 234, 235, 256, 517], "999310": [26, 41, 50, 157, 175, 180, 181], "009985": [26, 41, 50, 157, 175, 180, 181], "035787": [26, 41, 50, 157, 175, 180, 181], "012759": [26, 41, 50, 157, 175, 180, 181], "812405": [26, 41, 50, 157, 175, 180], "582954": [26, 41, 50, 157, 175, 180], "034894": [26, 41, 50, 157, 175, 180, 181], "583008": [26, 41, 50, 157, 175, 180], "811716": [26, 41, 50, 157, 175, 180, 181], "991420": [26, 41, 45, 50, 157, 175, 180], "039936": [26, 41, 45, 50, 157, 175, 180], "124467": [26, 41, 45, 50, 157, 175, 180], "060661": [26, 41, 45, 50, 157, 175, 180], "984012": [26, 41, 45, 50, 157, 175, 180], "167456": [26, 41, 45, 50, 157, 175, 180], "115790": [26, 41, 45, 50, 157, 175, 180], "173570": [26, 41, 45, 50, 157, 175, 180], "977991": [26, 41, 45, 50, 157, 175, 180], "homogen": [26, 41, 50, 108, 157, 175, 207, 244, 575, 868, 871, 886], "2154": 26, "8088": 26, "8079": 26, "10233": [26, 886], "4230": 26, "2113": [26, 168], "8129": 26, "8125": 26, "10237": 26, "4182": 26, "20470": 26, "00205101": 26, "08784125": 26, "17433707": 26, "485": [26, 68, 84, 277], "work": [27, 31, 68, 70, 75, 78, 82, 86, 132, 136, 137, 138, 139, 143, 146, 147, 148, 149, 150, 154, 155, 159, 160, 165, 166, 167, 168, 172, 173, 174, 176, 177, 180, 183, 187, 189, 192, 193, 195, 198, 200, 202, 203, 204, 205, 206, 209, 210, 213, 214, 215, 217, 218, 220, 221, 223, 228, 231, 234, 236, 239, 240, 241, 244, 251, 255, 258, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 312, 313, 316, 318, 323, 326, 328, 332, 338, 347, 353, 355, 359, 360, 361, 363, 366, 371, 382, 386, 389, 411, 412, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 434, 438, 440, 445, 446, 451, 452, 463, 471, 474, 476, 477, 479, 480, 485, 489, 492, 498, 515, 517, 518, 521, 523, 526, 527, 528, 529, 530, 531, 532, 534, 535, 539, 545, 556, 557, 560, 561, 562, 574, 581, 588, 593, 607, 616, 620, 625, 631, 635, 636, 637, 638, 654, 655, 683, 701, 706, 708, 709, 710, 754, 755, 757, 770, 776, 778, 784, 786, 787, 792, 793, 797, 801, 806, 807, 809, 814, 816, 820, 822, 824, 841, 844, 845, 846, 850, 851, 852, 860, 862, 863, 867, 868, 869, 871, 874, 886], "variou": [27, 62, 100, 119, 120, 134, 140, 149, 154, 164, 168, 169, 176, 177, 185, 186, 187, 188, 191, 192, 198, 201, 202, 204, 206, 213, 215, 217, 223, 226, 227, 261, 266, 269, 275, 330, 527, 528, 539, 561, 593, 614, 623, 625, 754, 776, 861, 865, 867, 868, 869, 871, 875, 886], "often": [27, 67, 70, 74, 75, 82, 139, 141, 149, 165, 167, 168, 174, 177, 179, 187, 189, 191, 195, 199, 201, 202, 205, 207, 209, 212, 216, 217, 228, 241, 266, 267, 271, 272, 275, 278, 279, 280, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 454, 455, 474, 476, 477, 539, 594, 754, 794, 812, 817, 841, 845, 849, 850, 861, 865, 867, 868, 869, 886], "lack": [27, 70, 189, 261, 273, 288, 302, 527, 594, 741, 869], "narr": [27, 164, 841, 869], "explan": [27, 73, 141, 154, 164, 230, 708, 869, 873, 886], "discov": [27, 863, 869, 886], "ve": [27, 114, 139, 148, 150, 155, 159, 170, 198, 200, 204, 206, 215, 216, 218, 241, 824, 845, 863, 865, 869], "flag": [27, 164, 166, 256, 264, 265, 269, 271, 272, 275, 278, 279, 280, 309, 479, 480, 517, 773, 807, 812, 817, 818, 845, 861, 865, 886], "tutorial_script": [27, 164], "them": [27, 47, 50, 67, 70, 74, 114, 126, 133, 134, 136, 139, 140, 141, 143, 144, 148, 149, 150, 155, 159, 160, 164, 165, 167, 169, 170, 171, 190, 191, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 215, 216, 217, 223, 226, 227, 234, 236, 241, 256, 258, 264, 265, 266, 267, 270, 291, 292, 295, 359, 362, 367, 414, 415, 429, 490, 491, 521, 522, 530, 532, 535, 556, 560, 561, 580, 594, 601, 615, 620, 660, 670, 683, 710, 749, 800, 841, 843, 845, 853, 861, 862, 863, 867, 868, 871, 874, 886], "shortcut": [27, 218, 744, 754, 886], "intention": [27, 208], "record": [27, 62, 65, 70, 74, 82, 83, 108, 136, 139, 143, 145, 150, 155, 161, 165, 167, 168, 169, 171, 174, 183, 185, 187, 189, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 215, 216, 217, 221, 223, 226, 241, 244, 258, 259, 264, 265, 266, 267, 269, 274, 281, 320, 347, 354, 359, 363, 403, 434, 443, 479, 480, 488, 492, 498, 500, 503, 508, 509, 521, 561, 563, 564, 565, 569, 571, 572, 582, 593, 594, 601, 607, 623, 650, 692, 706, 708, 709, 710, 787, 801, 807, 841, 852, 857, 861, 862, 863, 865, 868, 871, 874, 886], "past": [27, 150, 201, 423, 656, 849, 865, 867, 871], "recip": [27, 62, 845], "write": [27, 29, 41, 62, 66, 107, 109, 139, 159, 160, 169, 170, 171, 176, 188, 202, 215, 236, 239, 256, 258, 261, 262, 266, 267, 269, 270, 271, 272, 274, 277, 278, 280, 288, 307, 352, 452, 484, 512, 546, 560, 609, 614, 705, 739, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 845, 848, 849, 861, 863, 865, 868, 874, 886], "manipul": [27, 62, 139, 148, 164, 219, 363, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 520, 862, 868, 875, 886], "ensembl": [27, 62, 66, 136, 269, 373, 479, 480], "neo": [27, 62, 66, 187, 269, 373, 479, 480, 886], "xdf": [27, 62, 66, 269, 373, 480], "anatomi": [27, 88, 90, 155, 174, 261, 264, 266, 267, 268, 269, 270, 275, 277, 308, 480, 484, 527, 528, 539, 614, 620, 625, 628, 656, 658, 659, 660, 671, 754, 841, 862, 886], "intracrani": [27, 77, 134, 137, 164, 244, 312, 463, 471, 479, 480, 588, 590, 861, 862, 874, 875, 886], "contact": [27, 77, 134, 137, 164, 198, 332, 471, 588, 845, 862, 886], "contralater": [27, 77, 84, 93, 150, 207, 269, 324, 485, 647], "css": [27, 77, 84, 171, 244, 261, 267, 268, 269, 270, 274, 275, 364, 479, 558, 559, 577, 614, 625, 628, 670, 672, 886], "bridg": [27, 77, 84, 244, 269, 312, 328, 373, 480, 485, 569, 592, 774, 816, 886], "much": [27, 44, 55, 74, 77, 82, 84, 136, 139, 140, 141, 143, 148, 160, 164, 165, 169, 182, 190, 195, 201, 203, 204, 205, 206, 207, 208, 211, 215, 223, 241, 244, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 312, 328, 373, 435, 446, 450, 451, 479, 480, 485, 569, 592, 646, 774, 816, 845, 848, 849, 868, 874, 886], "gel": [27, 77, 84, 269, 312, 328, 373, 480, 485, 569, 592, 774, 816, 886], "densiti": [27, 32, 33, 34, 68, 75, 77, 78, 84, 104, 105, 118, 132, 136, 141, 159, 160, 165, 171, 189, 195, 199, 200, 208, 223, 240, 244, 261, 264, 265, 266, 267, 269, 270, 275, 290, 297, 326, 359, 371, 416, 452, 479, 480, 518, 523, 527, 534, 535, 539, 542, 558, 561, 569, 570, 595, 596, 600, 612, 620, 627, 654, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 723, 724, 725, 748, 754, 770, 780, 786, 808, 822, 841, 862, 868, 871, 886], "csd": [27, 32, 33, 34, 77, 84, 104, 105, 168, 223, 264, 265, 266, 267, 269, 290, 297, 311, 326, 330, 371, 452, 479, 480, 558, 570, 620, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 723, 726, 780, 841, 886], "nir": [27, 77, 84, 170, 210, 258, 269, 480, 508, 842, 852, 868, 875, 876, 886], "maxwel": [27, 77, 83, 84, 164, 165, 183, 198, 213, 214, 264, 266, 267, 269, 297, 298, 347, 348, 351, 354, 358, 359, 369, 370, 371, 411, 418, 432, 452, 454, 455, 474, 476, 477, 479, 480, 539, 572, 582, 593, 594, 794, 796, 886], "movement": [27, 74, 75, 77, 82, 84, 111, 136, 164, 191, 198, 204, 205, 206, 213, 214, 217, 218, 244, 256, 258, 264, 266, 267, 269, 341, 342, 343, 344, 345, 347, 349, 351, 352, 363, 432, 452, 470, 479, 492, 565, 568, 582, 593, 659, 671, 770, 777, 789, 796, 822, 841, 862, 886], "reestim": [27, 77, 84, 258, 269, 344, 345, 363, 492, 565, 568, 571, 770, 796, 822, 886], "dev_head_t": [27, 77, 79, 84, 155, 165, 168, 215, 258, 269, 315, 344, 345, 363, 373, 492, 565, 568, 572, 582, 593, 657, 658, 659, 671, 770, 796, 822, 871, 886], "muscl": [27, 77, 84, 143, 204, 244, 258, 312, 328, 492, 494, 561, 566, 886], "denois": [27, 77, 84, 195, 261, 264, 266, 267, 269, 354, 359, 419, 431, 452, 454, 479, 524, 558, 562, 572, 601, 620, 785, 886], "oversampl": [27, 77, 84, 244, 264, 266, 267, 354, 431, 452, 454, 479, 524, 601], "shift": [27, 75, 77, 84, 139, 165, 194, 198, 201, 202, 207, 218, 244, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 417, 439, 479, 480, 487, 494, 552, 561, 563, 589, 600, 623, 706, 709, 718, 754, 795, 807, 818, 886], "2d": [27, 31, 35, 40, 59, 95, 96, 118, 121, 129, 150, 165, 171, 189, 195, 199, 202, 204, 205, 206, 207, 226, 231, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 312, 313, 318, 321, 329, 338, 366, 419, 422, 426, 428, 449, 450, 479, 480, 491, 500, 510, 515, 561, 691, 693, 694, 754, 755, 766, 770, 771, 775, 792, 813, 815, 816, 822, 823, 824, 826, 841, 849, 862, 886], "arrowmap": [27, 121, 129, 266, 269, 492, 557, 558, 623, 771, 886], "layout": [27, 47, 99, 114, 121, 129, 131, 132, 141, 143, 149, 150, 158, 188, 211, 228, 264, 265, 266, 267, 269, 273, 319, 321, 323, 326, 327, 328, 338, 373, 479, 480, 486, 490, 492, 503, 504, 524, 706, 708, 710, 755, 759, 767, 770, 778, 792, 803, 806, 815, 821, 822, 841, 868, 876, 886], "parcel": [27, 38, 41, 68, 89, 93, 94, 121, 129, 134, 154, 175, 180, 222, 244, 270, 385, 387, 388, 463, 610, 628, 754, 765, 836, 841, 886], "roi": [27, 38, 121, 129, 150, 154, 199, 227, 244, 262, 264, 266, 267, 269, 324, 437, 440, 495, 528, 754, 790, 841, 868, 871, 886], "rt": [27, 121, 129, 167, 264, 269, 324, 437, 440, 495], "room": [27, 121, 126, 129, 141, 150, 161, 171, 183, 190, 202, 204, 205, 207, 209, 210, 211, 216, 244, 275, 354, 359, 479, 571, 572, 582, 593, 594, 777, 841, 861, 868, 886], "lock": [27, 104, 105, 139, 155, 161, 167, 203, 206, 230, 241, 244, 259, 264, 269, 270, 435, 452, 479, 527, 542, 545, 558, 561, 627, 801, 865], "vectorview": [27, 61, 104, 105, 118, 169, 182, 257, 261, 266, 267, 269, 275, 313, 319, 320, 334, 338, 359, 390, 431, 432, 479, 518, 523, 534, 539, 572, 582, 593, 612, 654, 748, 754, 770, 822, 841, 857, 862, 868], "induc": [27, 104, 105, 106, 161, 165, 228, 229, 230, 241, 244, 264, 265, 269, 275, 452, 479, 527, 542, 544, 545, 558, 706, 709, 722, 732, 733, 736, 865, 886], "erd": [27, 104, 105, 240, 244, 261, 264, 265, 266, 267, 273, 363, 411, 418, 440, 479, 480, 494, 560, 561, 693, 706, 708, 709, 710, 737, 771, 786, 793, 797, 806, 809, 814, 816, 862, 886], "multitap": [27, 74, 82, 102, 104, 105, 108, 136, 141, 142, 165, 171, 195, 204, 231, 239, 240, 244, 264, 265, 266, 267, 269, 287, 373, 424, 450, 479, 480, 534, 706, 708, 710, 713, 716, 733, 734, 735, 736, 737, 738, 758, 874, 886], "morlet": [27, 32, 102, 104, 105, 112, 165, 201, 230, 231, 244, 264, 269, 287, 373, 424, 480, 706, 709, 712, 715, 720, 731, 733, 736, 737, 738, 758, 876, 884, 886], "stockwel": [27, 104, 105, 231, 244, 264, 269, 287, 373, 480, 706, 733, 735, 736, 737, 738, 758, 886], "hilbert": [27, 81, 104, 105, 112, 166, 231, 264, 265, 266, 267, 269, 287, 373, 479, 480, 706, 733, 736, 737, 738, 758, 886], "permut": [27, 97, 101, 111, 164, 226, 227, 228, 229, 232, 233, 236, 237, 238, 244, 264, 266, 267, 269, 275, 276, 277, 318, 360, 434, 479, 527, 528, 542, 552, 558, 620, 633, 635, 678, 686, 693, 694, 695, 696, 697, 698, 709, 736, 754, 775, 778, 874, 886], "1d": [27, 97, 101, 116, 209, 264, 269, 283, 287, 476, 477, 479, 515, 558, 572, 582, 593, 602, 620, 693, 694, 696, 697, 758, 795], "fdr": [27, 97, 100, 101, 264, 269, 479, 558, 620, 684, 690, 886], "rer": [27, 97, 101, 264, 266, 267, 269, 353, 452, 479, 558, 692], "p": [27, 47, 51, 58, 95, 96, 97, 99, 100, 101, 111, 155, 159, 171, 187, 201, 223, 226, 227, 228, 230, 231, 234, 235, 236, 241, 244, 256, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 353, 450, 452, 474, 479, 480, 539, 558, 561, 572, 663, 666, 668, 684, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 706, 709, 772, 785, 845, 861, 865, 868, 886], "sloreta": [27, 28, 30, 31, 36, 38, 39, 41, 48, 50, 56, 59, 89, 103, 164, 165, 174, 177, 178, 180, 185, 186, 222, 234, 236, 244, 261, 264, 266, 267, 269, 270, 271, 272, 275, 278, 279, 280, 354, 452, 479, 527, 528, 529, 530, 531, 532, 534, 535, 539, 540, 541, 542, 544, 545, 625, 627, 754, 779, 841, 886], "timecours": [27, 33, 36, 42, 56, 261, 262, 264, 266, 267, 268, 269, 275, 279, 288, 292, 297, 302, 452, 454, 479, 522, 527, 528, 530, 539, 612, 614, 615, 625, 640, 707, 709, 717, 736, 754], "dic": [27, 31, 36, 56, 102, 164, 179, 224, 225, 244, 261, 264, 268, 269, 275, 288, 289, 290, 291, 292, 294, 297, 298, 354, 358, 452, 479, 480, 485, 516, 527, 528, 529, 539, 552, 557, 558, 625, 640, 660, 671, 707, 709, 715, 717, 736, 754, 841, 852, 862, 886], "beamform": [27, 36, 51, 56, 102, 164, 165, 185, 186, 223, 244, 261, 264, 266, 267, 268, 269, 275, 276, 277, 279, 354, 358, 360, 364, 371, 452, 454, 479, 529, 537, 539, 558, 614, 625, 635, 707, 709, 715, 717, 736, 754, 841, 854, 862, 876, 886], "er": [27, 32, 33, 36, 56, 111, 240, 244, 261, 264, 265, 268, 269, 275, 290, 294, 297, 298, 354, 358, 452, 479, 529, 539, 558, 625, 692, 715, 754, 785, 862, 886], "lcmv": [27, 31, 36, 56, 164, 174, 185, 186, 261, 264, 266, 267, 268, 269, 275, 276, 277, 279, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 354, 358, 360, 364, 371, 452, 455, 479, 529, 537, 539, 558, 614, 625, 635, 715, 754, 841, 886], "spars": [27, 36, 44, 46, 56, 118, 174, 226, 231, 234, 236, 244, 256, 261, 262, 266, 268, 269, 275, 276, 277, 308, 318, 329, 360, 371, 373, 455, 474, 475, 476, 477, 527, 528, 539, 614, 623, 625, 635, 672, 686, 692, 693, 694, 696, 697, 754, 781, 782, 813, 845, 852, 854, 868, 871, 886], "gamma": [27, 36, 56, 111, 112, 116, 244, 261, 264, 265, 266, 267, 268, 269, 275, 371, 474, 475, 479, 480, 536, 614, 623, 625, 708, 710, 722, 732, 733, 736, 781, 782, 786, 813, 868, 871, 886], "bayesian": [27, 36, 56, 244, 261, 266, 268, 269, 275, 354, 371, 474, 475, 614, 623, 625, 781, 782, 813, 852, 868], "mix": [27, 36, 56, 59, 102, 195, 204, 241, 244, 261, 262, 266, 268, 269, 271, 272, 275, 276, 277, 278, 279, 280, 297, 298, 360, 445, 456, 474, 475, 476, 477, 515, 523, 527, 528, 539, 561, 591, 614, 623, 625, 628, 633, 635, 654, 655, 661, 662, 663, 664, 665, 666, 667, 668, 698, 701, 754, 781, 782, 797, 812, 813, 817, 874, 886], "norm": [27, 31, 36, 47, 48, 49, 50, 56, 57, 59, 78, 83, 115, 148, 155, 161, 165, 176, 178, 184, 206, 222, 223, 244, 261, 262, 264, 265, 266, 267, 268, 269, 275, 276, 277, 360, 455, 474, 475, 476, 477, 479, 480, 527, 528, 529, 530, 531, 532, 534, 535, 537, 538, 539, 541, 543, 544, 545, 614, 623, 625, 635, 663, 666, 668, 718, 781, 782, 811, 813, 841, 852, 854, 861, 871, 886], "mxne": [27, 31, 36, 56, 174, 261, 262, 264, 266, 267, 268, 269, 275, 276, 277, 354, 360, 452, 475, 476, 477, 527, 528, 539, 614, 623, 625, 635, 754, 781, 782, 813, 841, 886], "irmxn": [27, 36, 56, 261, 262, 266, 268, 269, 275, 276, 277, 360, 475, 476, 527, 528, 539, 614, 623, 625, 635, 781, 782, 813], "volumetr": [27, 36, 50, 56, 134, 157, 159, 174, 176, 180, 266, 271, 272, 275, 276, 277, 278, 279, 280, 360, 515, 527, 528, 542, 588, 623, 635, 754, 812, 817, 818, 820, 841, 874, 886], "xfit": [27, 36, 56, 261, 262, 264, 266, 267, 268, 269, 279, 302, 452, 454, 479, 522, 527, 528, 530, 539, 612, 614, 615, 640, 886], "reweight": [27, 36, 40, 56, 244, 261, 264, 266, 267, 268, 275, 354, 452, 475, 476, 477, 625, 813], "tf": [27, 31, 36, 56, 59, 201, 261, 264, 266, 267, 268, 275, 354, 452, 475, 477, 625, 813, 886], "multiscal": [27, 36, 56, 261, 264, 266, 267, 268, 275, 354, 452, 475, 477, 625, 813], "circular": [27, 36, 56, 150, 222, 275, 277, 364, 469, 538, 540, 542, 625, 628, 754, 759, 852, 868, 886], "graph": [27, 36, 56, 116, 244, 275, 277, 364, 538, 540, 542, 625, 628, 676, 677, 678, 679, 680, 681, 682, 754, 759, 886], "spread": [27, 36, 42, 54, 55, 56, 71, 80, 82, 83, 112, 164, 167, 201, 206, 207, 209, 224, 225, 244, 261, 264, 266, 267, 268, 269, 270, 275, 277, 279, 354, 364, 452, 479, 523, 527, 528, 529, 537, 538, 539, 540, 542, 543, 569, 593, 614, 623, 625, 628, 655, 668, 670, 673, 754, 845, 868, 886], "psf": [27, 36, 54, 55, 56, 261, 266, 268, 269, 275, 277, 279, 364, 523, 527, 537, 538, 539, 540, 543, 614, 623, 625, 655, 754, 886], "talk": [27, 36, 56, 159, 201, 209, 228, 261, 264, 266, 268, 269, 275, 288, 298, 299, 354, 364, 371, 432, 452, 527, 537, 538, 539, 540, 543, 558, 571, 582, 593, 614, 623, 625, 754, 841, 867, 886], "rap": [27, 36, 56, 244, 261, 266, 268, 300, 614, 623, 625, 781, 782, 886], "music": [27, 36, 56, 204, 244, 261, 266, 268, 300, 614, 623, 625, 781, 782, 886], "resolut": [27, 30, 36, 44, 47, 48, 50, 56, 113, 119, 145, 155, 156, 157, 175, 211, 228, 229, 244, 257, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 299, 360, 364, 411, 418, 445, 467, 470, 479, 480, 527, 528, 537, 538, 539, 540, 543, 559, 560, 561, 614, 623, 625, 706, 708, 710, 722, 732, 733, 734, 735, 736, 737, 738, 754, 771, 786, 793, 797, 806, 809, 812, 814, 816, 817, 841, 852, 861, 867, 868, 886], "auto_examples_python": 27, "auto_examples_jupyt": 27, "fname_raw": [28, 29, 61, 102, 103, 126, 156, 181, 208], "fname_ev": [28, 93, 102, 103], "label_nam": [28, 29, 47, 91, 93, 103, 106, 180, 222, 464], "fname_label": [28, 29, 103, 106, 107], "assumpt": [28, 108, 120, 139, 140, 143, 151, 161, 201, 205, 209, 226, 266, 267, 601, 688, 794, 865, 868, 886], "read_label": [28, 29, 37, 39, 91, 103, 106, 107, 275, 278, 656, 876], "add": [28, 37, 43, 44, 70, 74, 89, 93, 94, 100, 113, 119, 125, 126, 135, 139, 140, 142, 143, 150, 160, 167, 170, 171, 174, 175, 180, 188, 190, 194, 198, 199, 200, 202, 204, 205, 207, 215, 217, 222, 223, 226, 231, 241, 256, 258, 260, 261, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 312, 372, 411, 413, 418, 422, 435, 447, 449, 450, 470, 479, 480, 560, 561, 571, 573, 574, 575, 576, 613, 635, 644, 647, 652, 654, 656, 657, 658, 659, 660, 670, 703, 706, 708, 709, 710, 749, 754, 757, 771, 774, 775, 784, 786, 791, 793, 797, 806, 809, 814, 816, 823, 841, 843, 845, 848, 851, 852, 871, 886], "053": [28, 49, 69, 73, 91, 92, 103, 106, 107, 109, 110, 116, 150, 161, 165, 166, 167, 168, 176, 198, 199, 200, 205, 206, 207, 209, 215, 216, 217, 218, 223, 228, 229], "sqrt": [28, 116, 182, 183, 222, 223, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 566, 591, 722, 732, 736, 808, 868], "mean_stc": 28, "flip": [28, 38, 39, 114, 160, 204, 226, 256, 271, 272, 275, 278, 279, 280, 303, 445, 514, 693, 824, 868, 886], "cancel": [28, 80, 179, 201, 209, 271, 272, 275, 278, 279, 280, 432, 445, 561, 593, 798, 861, 868, 871], "label_sign_flip": [28, 876, 886], "label_mean": 28, "label_mean_flip": 28, "stc_evok": 28, "sub": [28, 32, 33, 34, 41, 46, 65, 67, 70, 82, 112, 145, 154, 169, 211, 240, 241, 264, 265, 266, 267, 269, 438, 479, 480, 591, 655, 707, 754, 780, 857, 865, 868, 886], "stc_evoked_label": 28, "in_label": [28, 37, 38, 39, 275, 278, 279, 280, 886], "care": [28, 34, 140, 149, 150, 159, 201, 204, 205, 215, 217, 371, 477, 692, 868, 886], "polar": [28, 47, 141, 206, 776], "label_mean_evok": 28, "benefit": [28, 45, 46, 55, 59, 71, 125, 171, 189, 244, 543, 570, 666, 861, 867], "1e3": [28, 29, 38, 39, 41, 69, 72, 96, 112, 136, 148, 150, 155, 156, 176, 184, 191, 212, 222, 228, 229, 230, 236], "h0": [28, 95, 99, 226, 227, 228, 229, 230, 234, 235, 236, 693, 694, 695, 696, 697], "h1": [28, 95, 111, 226, 227, 228, 229, 230, 231, 234, 235, 236], "linewidth": [28, 39, 96, 111, 112, 135, 149, 159, 205, 226, 261, 264, 265, 266, 267, 411, 418, 479, 480, 560, 706, 708, 710, 754, 771, 778, 786, 793, 809, 810, 813, 814, 816], "h2": 28, "unflip": 28, "pool": [28, 139, 148, 150, 165, 216, 297, 298, 474, 476, 477, 528, 529, 530, 531, 532, 534, 535, 545, 874], "stc_trial": 28, "_nolegend_": 28, "857": [28, 56, 231, 234, 238], "compute_mne_inverse_epochs_in_label": [28, 56], "apply_inverse_raw": [29, 528, 529, 530, 532, 876, 886], "smaller": [29, 41, 75, 103, 126, 141, 148, 157, 201, 206, 209, 226, 227, 241, 259, 264, 265, 271, 272, 275, 278, 279, 280, 477, 498, 563, 578, 582, 591, 693, 694, 696, 697, 721, 729, 754, 812, 817, 861, 868, 886], "time_as_index": [29, 40, 83, 139, 148, 174, 215, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709, 886], "mne_": [29, 30, 871], "s_raw_inverse_": 29, "overwrit": [29, 41, 103, 107, 109, 139, 160, 171, 190, 217, 256, 258, 261, 262, 264, 265, 266, 267, 271, 272, 274, 275, 276, 277, 278, 279, 280, 288, 307, 308, 309, 312, 313, 441, 442, 443, 444, 479, 480, 512, 546, 560, 561, 570, 643, 644, 647, 651, 706, 707, 708, 709, 710, 739, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 839, 840, 886], "25800": [29, 45, 68, 71, 79, 82, 91, 92, 102, 103, 106, 109, 110, 117, 122, 126, 145, 155, 161, 166, 167, 171, 181, 198, 202, 203, 205, 206, 207, 215, 218, 222, 223, 228, 229, 230], "192599": [29, 45, 68, 71, 82, 91, 92, 102, 103, 106, 109, 110, 117, 122, 126, 145, 155, 161, 166, 167, 171, 181, 198, 202, 203, 205, 206, 215, 218, 222, 223, 228, 229, 230], "670": [29, 45, 68, 71, 80, 82, 91, 92, 102, 103, 106, 109, 110, 117, 122, 126, 145, 155, 161, 166, 167, 171, 181, 198, 202, 203, 205, 206, 208, 215, 218, 222, 223, 228, 229, 230, 231], "361": [29, 56, 80, 111, 168, 208, 226, 231, 235], "compute_mne_inverse_raw_in_label": [29, 56], "nilearn": [30, 41, 44, 170, 175, 180, 181, 279, 280, 818], "plot_stat_map": 30, "index_img": 30, "read_evok": [30, 31, 35, 38, 39, 40, 41, 44, 48, 50, 51, 54, 55, 57, 58, 59, 60, 78, 85, 86, 115, 118, 119, 123, 126, 148, 149, 171, 175, 177, 178, 180, 264, 265, 266, 267, 274, 479, 480, 832, 865, 876, 886], "vol": [30, 44, 50, 134, 159, 175, 179, 180, 262, 264, 265, 266, 267, 277, 300, 432, 633, 661, 662, 663, 664, 665, 666, 667, 668, 794], "4d": [30, 122, 164, 185, 186, 187, 261, 262, 264, 265, 266, 267, 269, 302, 354, 452, 454, 479, 480, 490, 524, 558, 559, 693, 694, 706, 708, 709, 710, 770, 782, 868, 871, 886], "img": [30, 115, 159, 181, 226, 279, 280], "as_volum": [30, 279, 280, 886], "nib": [30, 44, 155], "s_invers": 30, "gz": [30, 139, 154, 171, 205, 256, 263, 264, 265, 266, 267, 277, 312, 386, 479, 480, 500, 542, 546, 561, 605, 611, 614, 616, 623, 625, 631, 635, 671, 827, 830, 832, 833, 837, 838, 851, 886], "t1_fname": [30, 159, 175], "11271": [30, 44, 180, 886], "632": [30, 56, 195, 208, 231], "443": [30, 41, 142, 198, 208, 244], "compute_mne_inverse_volum": [30, 56], "plug": [31, 845, 868], "facil": [31, 257], "implement": [31, 70, 165, 168, 178, 195, 202, 204, 209, 223, 241, 257, 261, 269, 273, 288, 289, 291, 302, 332, 354, 360, 411, 418, 419, 424, 428, 451, 474, 476, 477, 479, 480, 523, 527, 528, 529, 530, 531, 532, 534, 535, 545, 561, 562, 569, 576, 582, 608, 630, 690, 731, 733, 741, 807, 845, 852, 860, 869, 874, 884, 886], "wmne": [31, 476, 477], "eloreta": [31, 164, 165, 174, 177, 178, 185, 186, 234, 236, 261, 264, 266, 267, 269, 275, 297, 298, 354, 452, 474, 476, 477, 527, 528, 529, 530, 531, 532, 534, 535, 539, 541, 544, 545, 625, 754, 779, 841, 886], "educ": [31, 867], "shall": [31, 143, 200, 266, 267, 435, 561, 674, 789, 845, 867, 874], "develop": [31, 70, 170, 204, 209, 255, 256, 332, 582, 705, 763, 848, 849, 851, 852, 862, 865, 867, 871, 886], "meant": [31, 89, 94, 108, 170, 226, 273, 289, 291, 341, 413, 423, 515, 652, 748, 749, 757, 886], "practic": [31, 71, 98, 113, 150, 159, 167, 200, 201, 207, 209, 241, 244, 270, 297, 561, 570, 627, 633, 692, 841, 845, 867, 868], "apply_solv": 31, "linalg": [31, 83, 155, 159, 184, 205, 358, 692, 865, 886], "plot_sparse_source_estim": [31, 35, 40, 46, 59, 91, 819, 876, 886], "ave_fnam": [31, 40, 59, 68, 91], "cov_fnam": [31, 35, 40, 45, 51, 59, 68, 91, 171, 223, 274], "handl": [31, 40, 46, 59, 126, 132, 139, 143, 145, 150, 154, 159, 164, 165, 167, 169, 171, 172, 206, 209, 213, 214, 259, 264, 265, 266, 267, 269, 342, 438, 452, 479, 480, 555, 558, 561, 593, 650, 755, 763, 771, 774, 776, 787, 798, 802, 826, 845, 871, 886], "365": [31, 40, 41, 45, 59, 80, 168, 194, 206, 226, 231, 244, 270, 275, 354], "auxiliari": [31, 141, 372], "def": [31, 34, 68, 76, 83, 91, 92, 93, 108, 112, 116, 132, 136, 149, 150, 155, 159, 201, 202, 205, 221, 223, 226, 230, 236, 241, 845], "ones": [31, 82, 87, 110, 140, 169, 177, 182, 184, 187, 205, 206, 226, 241, 257, 270, 387, 446, 472, 473, 479, 480, 519, 563, 582, 627, 633, 640, 691, 845, 865, 868, 871, 886], "account": [31, 79, 108, 122, 140, 141, 155, 157, 161, 179, 184, 191, 199, 200, 206, 207, 209, 215, 216, 226, 231, 241, 258, 261, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 454, 455, 474, 476, 477, 539, 561, 564, 591, 794, 845, 865, 868, 871, 886], "constraint": [31, 60, 157, 165, 177, 194, 207, 244, 264, 265, 287, 299, 454, 539, 785, 871, 886], "weigth": 31, "formul": [31, 722, 732, 733, 736, 868], "problem": [31, 40, 59, 70, 87, 95, 96, 113, 136, 143, 160, 165, 174, 175, 187, 188, 195, 199, 203, 204, 206, 207, 215, 226, 227, 231, 234, 235, 236, 241, 244, 476, 495, 561, 582, 611, 617, 693, 694, 696, 697, 699, 700, 820, 844, 845, 850, 865, 866, 868, 874, 886], "bia": [31, 40, 70, 83, 140, 150, 183, 201, 234, 236, 240, 244, 261, 266, 267, 297, 298, 360, 424, 474, 476, 477, 539, 591, 725, 788, 793, 868, 886], "callabl": [31, 149, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 283, 312, 314, 340, 365, 411, 414, 418, 421, 428, 440, 479, 480, 531, 560, 561, 576, 641, 672, 673, 685, 692, 693, 694, 696, 697, 706, 708, 709, 710, 752, 754, 767, 771, 778, 785, 786, 788, 793, 797, 806, 809, 812, 814, 815, 816, 817, 886], "boolean": [31, 100, 140, 142, 168, 170, 205, 206, 215, 217, 261, 264, 265, 266, 267, 273, 275, 411, 418, 479, 480, 560, 561, 693, 694, 696, 697, 706, 708, 710, 785, 786, 790, 793, 797, 806, 809, 814, 845, 872, 886], "what": [31, 59, 71, 82, 89, 93, 94, 116, 126, 127, 135, 139, 140, 141, 142, 143, 155, 159, 168, 170, 174, 179, 180, 181, 189, 199, 201, 210, 215, 216, 217, 223, 226, 228, 231, 239, 241, 259, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 354, 358, 365, 369, 370, 386, 403, 430, 435, 440, 444, 461, 478, 479, 480, 495, 547, 598, 611, 613, 617, 642, 644, 656, 706, 709, 734, 737, 777, 812, 817, 834, 841, 845, 848, 850, 851, 853, 871, 874, 876], "tangenti": [31, 297, 298, 456, 474, 476, 477, 539, 868, 871], "discret": [31, 45, 103, 157, 175, 195, 207, 239, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 277, 278, 279, 280, 418, 456, 474, 476, 477, 479, 480, 522, 539, 655, 706, 708, 709, 710, 718, 724, 867, 886], "coeffici": [31, 100, 108, 140, 145, 157, 194, 201, 203, 415, 417, 423, 429, 446, 447, 448, 476, 477, 560, 571, 572, 582, 593, 604, 608, 660, 669, 670, 691, 692, 708, 710, 719, 721, 724, 725, 729, 795, 886], "privat": [31, 845, 886], "inverse_spars": [31, 35, 40, 46, 59, 174, 854, 876, 886], "mxne_invers": 31, "_prepare_gain": 31, "is_fixed_ori": [31, 886], "_reapply_source_weight": 31, "_make_sparse_stc": 31, "all_ch_nam": 31, "gain_info": 31, "source_weight": 31, "weights_min": [31, 40, 59, 476, 477, 886], "dot": [31, 78, 86, 111, 118, 123, 126, 143, 149, 159, 174, 177, 181, 184, 189, 194, 199, 206, 210, 234, 236, 262, 266, 267, 271, 275, 279, 692, 782, 788, 845, 868, 886], "n_orient": [31, 271, 272, 275, 278, 279, 280, 445, 543], "active_set": 31, "l2": [31, 40, 54, 55, 244, 476, 477, 543, 666, 718, 854, 871], "penal": 31, "strongest": [31, 35, 40, 47, 59, 150], "n_dipol": [31, 51, 68, 91, 92, 157, 262, 271, 272, 275, 278, 279, 280, 300, 431, 537, 538, 540, 672], "depend": [31, 70, 81, 100, 125, 134, 135, 136, 140, 148, 150, 154, 156, 157, 161, 169, 170, 171, 189, 194, 200, 201, 203, 205, 206, 209, 217, 223, 226, 227, 228, 236, 241, 244, 258, 264, 265, 266, 267, 271, 272, 275, 277, 278, 279, 280, 299, 318, 329, 342, 343, 404, 417, 423, 437, 445, 455, 479, 480, 487, 494, 496, 561, 571, 582, 588, 601, 607, 687, 693, 694, 696, 697, 699, 701, 702, 705, 706, 708, 709, 710, 728, 754, 763, 775, 777, 778, 784, 785, 788, 801, 807, 843, 844, 845, 848, 851, 852, 853, 860, 861, 862, 865, 868], "n_active_dipol": 31, "bool": [31, 119, 170, 231, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 316, 317, 320, 321, 322, 323, 324, 326, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 436, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 459, 461, 462, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 598, 600, 601, 602, 605, 606, 607, 608, 612, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 687, 690, 693, 694, 695, 696, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 728, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 742, 743, 744, 749, 753, 754, 759, 762, 763, 767, 768, 770, 771, 772, 773, 775, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 824, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 865], "entri": [31, 108, 139, 141, 143, 149, 150, 165, 169, 170, 195, 199, 215, 258, 261, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 286, 314, 341, 342, 343, 344, 345, 346, 411, 418, 421, 433, 443, 446, 477, 478, 479, 480, 528, 536, 560, 561, 576, 651, 655, 657, 658, 659, 671, 686, 706, 708, 709, 710, 754, 771, 772, 784, 785, 786, 790, 793, 797, 806, 807, 809, 812, 813, 814, 816, 817, 845, 848, 868, 871, 886], "x_full": 31, "solv": [31, 59, 160, 174, 411, 495, 561, 611, 617, 692, 868, 874], "ey": [31, 74, 124, 134, 136, 157, 164, 171, 182, 198, 200, 203, 205, 206, 213, 214, 258, 264, 265, 266, 267, 380, 452, 479, 480, 495, 498, 558, 579, 581, 584, 617, 706, 708, 709, 710, 862, 875], "dtype": [31, 91, 93, 113, 119, 143, 155, 166, 221, 223, 231, 264, 265, 266, 267, 417, 478, 479, 480, 868], "bgcolor": [31, 35, 40, 46, 59, 91, 155, 159, 177, 479, 480, 763, 773, 807, 813], "227": [31, 56, 150, 168, 208, 226, 230, 231, 244, 389, 862], "141": [31, 95, 168, 195, 208, 226, 277], "custom_inverse_solv": [31, 56], "synchron": [32, 33, 34, 111, 145, 210, 240, 244, 257, 297, 481, 487, 494, 845, 862, 886], "marijn": [32, 33, 45, 60, 73, 102, 160, 223, 244, 297, 298, 873, 886], "van": [32, 33, 43, 45, 60, 73, 102, 125, 160, 179, 201, 223, 244, 276, 297, 298, 360, 388, 569, 868, 873, 886], "vliet": [32, 33, 45, 60, 73, 102, 160, 223, 244, 297, 298, 873, 886], "vanvliet": [32, 33, 45, 60, 73, 102, 160, 223], "rockhil": [32, 70, 71, 82, 113, 114, 115, 119, 134, 135, 230, 231, 244, 873, 886], "aprockhil": [32, 70, 71, 82, 113, 114, 115, 119, 134, 135, 230, 231], "mailbox": [32, 33, 70, 71, 82, 112, 113, 114, 115, 119, 126, 134, 135, 228, 230, 231, 234, 240], "tfr_morlet": [32, 113, 165, 228, 229, 230, 231, 240, 424, 731, 733, 734, 735, 737, 738, 876, 886], "csd_tfr": [32, 876, 886], "make_d": [32, 33, 34, 223, 289, 290, 291, 292, 841, 876, 886], "apply_dics_tfr_epoch": [32, 289, 290, 291, 876, 886], "organ": [32, 71, 230, 231, 244, 570, 696, 697, 862, 867, 871], "_task": [32, 33, 34, 46, 112, 240], "_meg": [32, 33, 34, 46, 112, 171, 240, 256, 479, 480, 500, 501, 886], "5000e": 32, "mostli": [32, 108, 140, 174, 177, 187, 200, 203, 377, 378, 379, 382, 383, 384, 386, 391, 394, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 456, 474, 476, 477, 479, 480, 539, 754, 841], "wavelet": [32, 102, 112, 165, 201, 230, 244, 424, 545, 706, 709, 712, 715, 720, 722, 731, 732, 733, 734, 736, 737, 841, 886], "tfr": [32, 111, 201, 228, 229, 240, 424, 528, 529, 530, 531, 706, 709, 712, 715, 717, 728, 733, 734, 736, 737, 738, 739, 814, 841, 874, 876, 884, 886], "wish": [32, 143, 170, 189, 207, 221, 227, 228, 234, 363, 479, 480, 582, 755, 757, 845, 853, 867], "epochs_tfr": [32, 292, 532, 717], "return_itc": [32, 111, 113, 165, 228, 229, 230, 231, 240, 735, 736, 737, 738], "buffer": [32, 113, 188, 256, 269, 478, 479, 480, 495, 582, 593, 611, 617, 871, 886], "01_task": [32, 33, 34, 46, 67, 112, 169, 240, 241], "somato_meg": [32, 33, 34, 46, 112, 240], "237600": [32, 33, 34, 46, 112, 240], "506999": [32, 33, 34, 46, 112, 240], "791": [32, 33, 34, 46, 112, 180, 194, 202, 214, 231, 240], "1688": [32, 33, 34, 46, 112, 208, 240], "9989760657919393": 32, "1052": [32, 33, 34], "0121": [32, 34, 144, 165, 168, 215, 223], "0211": [32, 34, 165, 168, 223], "1331": [32, 34, 144, 168, 200, 208, 223], "2211": [32, 34, 168, 223], "2241": [32, 34, 158, 168, 223], "2521": [32, 34, 139, 148, 168, 223], "1641": [32, 34, 168, 223], "1831": [32, 34, 168, 223], "1921": [32, 34, 168, 223], "1941": [32, 34, 35, 168, 223], "1611": [32, 34, 119, 168, 223], "0441": [32, 34, 168, 223], "1631": [32, 34, 119, 168, 223], "0231": [32, 34, 119, 165, 168, 223], "1411": [32, 34, 144, 145, 168, 200, 206, 223], "0341": [32, 34, 168, 223], "1621": [32, 34, 119, 168, 223], "1811": [32, 34, 119, 149, 168, 215, 223], "1521": [32, 34, 165, 168, 223], "1721": [32, 34, 168, 223], "1911": [32, 34, 168, 223], "1931": [32, 34, 168, 223], "2111": [32, 34, 168, 194, 223], "2121": [32, 34, 168, 223], "2021": [32, 34, 143, 168, 179, 189, 211, 223, 244, 389, 508, 575, 862, 867], "1341": [32, 34, 168, 208, 223], "0221": [32, 34, 165, 168, 223], "0241": [32, 34, 168, 223], "1731": [32, 34, 35, 168, 223], "2041": [32, 34, 168, 223], "0731": [32, 34, 168, 223], "1141": [32, 34, 168, 223], "1131": [32, 34, 168, 223], "0131": [32, 34, 144, 165, 168, 223], "period": [32, 80, 120, 139, 140, 143, 144, 148, 149, 171, 179, 198, 200, 201, 202, 204, 211, 241, 259, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 354, 498, 561, 564, 565, 566, 578, 623, 624, 718, 750, 788, 841, 845, 867, 886], "baseline_csd": 32, "scalar": [32, 140, 159, 179, 223, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 290, 297, 298, 299, 411, 418, 479, 480, 561, 692, 708, 710, 754, 786, 793, 797, 806, 812, 817, 886], "beamfom": 32, "noise_csd": [32, 33, 297], "reduce_rank": [32, 33, 34, 49, 297, 298, 886], "real_filt": [32, 33, 34, 223, 297, 886], "epochs_stc": 32, "return_gener": [32, 103, 291, 292, 295, 445, 530, 532, 535], "nsourc": [32, 52, 268, 871], "epoch_stc": 32, "conj": [32, 113, 297, 298], "apply_baselin": [32, 111, 126, 140, 148, 171, 177, 198, 203, 204, 206, 228, 229, 230, 231, 240, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 706, 709, 886], "8155": [32, 33, 34, 46], "sti": [32, 33, 42, 46, 69, 72, 73, 79, 89, 92, 93, 94, 106, 107, 109, 112, 139, 141, 148, 151, 165, 167, 168, 176, 187, 195, 199, 203, 204, 206, 216, 223, 228, 239, 240, 257, 452, 453, 479, 480, 496, 841, 886], "015": [32, 33, 127, 139, 141, 148, 168, 203, 204, 223, 234, 244, 262, 576, 666, 782], "014": [32, 33, 42, 46, 61, 69, 72, 73, 79, 89, 92, 93, 94, 106, 107, 109, 112, 127, 139, 141, 148, 151, 165, 167, 168, 176, 187, 195, 199, 203, 204, 206, 214, 216, 223, 228, 239, 240, 257, 452, 453, 479, 480, 496, 886], "003": [32, 33, 72, 120, 127, 139, 140, 141, 144, 148, 165, 166, 168, 171, 200, 201, 203, 204, 206, 215, 223, 244], "006": [32, 33, 120, 127, 139, 141, 144, 148, 157, 165, 168, 203, 206, 223, 244, 256, 270, 275, 517, 861], "001": [32, 33, 71, 79, 82, 83, 120, 127, 139, 140, 141, 143, 144, 148, 149, 150, 159, 165, 167, 168, 171, 187, 194, 198, 200, 201, 202, 203, 206, 211, 215, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 240, 244, 536, 570, 656, 693, 694, 696, 697, 862, 868], "005": [32, 33, 40, 56, 120, 127, 139, 141, 148, 156, 158, 161, 165, 168, 203, 223, 236, 240, 262, 344, 563, 782], "074": [32, 243], "gyri": [32, 93, 154, 157, 222, 244], "border": [32, 38, 59, 103, 115, 125, 154, 180, 261, 264, 265, 266, 267, 273, 411, 418, 437, 479, 480, 560, 561, 576, 706, 708, 710, 754, 786, 792, 793, 797, 806, 809, 814, 815, 816, 886], "central": [32, 127, 140], "sulcu": 32, "primari": [32, 93, 148, 867, 868], "s1": [32, 503], "m1": [32, 67, 169, 207, 226, 241, 264, 265, 266, 267, 479, 480, 650, 886], "4500": 32, "dorsal": [32, 754], "brain_kwarg": [32, 41, 115, 179, 180, 271, 272, 275, 278, 279, 280, 812, 817], "add_data_kwarg": [32, 134, 180, 271, 272, 275, 278, 279, 280, 812, 817], "fmid": [32, 271, 272, 275, 278, 279, 280, 754, 773, 812, 817, 818, 886], "scale_factor": [32, 35, 48, 49, 50, 59, 176, 272, 278, 280, 312, 754, 804, 813, 817], "colorbar_kwarg": [32, 134, 180, 754], "label_font_s": [32, 134, 180], "movi": [32, 60, 134, 135, 176, 180, 754, 886], "websit": [32, 134, 135, 150, 176, 180, 188, 206, 403, 404, 576, 845, 848, 867], "save_movi": [32, 60, 134, 135, 176, 180, 754, 886], "time_view": [32, 60, 108, 126, 134, 135, 176, 180, 190, 271, 272, 275, 278, 279, 280, 754, 812, 817, 886], "onc": [32, 34, 43, 44, 60, 70, 93, 119, 126, 132, 134, 141, 142, 143, 144, 149, 150, 165, 167, 168, 169, 171, 176, 180, 198, 199, 201, 203, 204, 205, 206, 215, 217, 257, 258, 264, 265, 266, 267, 276, 282, 375, 446, 447, 449, 450, 479, 480, 580, 591, 734, 737, 775, 807, 845, 861, 867, 868, 886], "688": [32, 208, 231], "33913449": 32, "817": [32, 231], "80202112": 32, "3163": 32, "68479992": 32, "246": [32, 46, 56, 168, 179, 208, 226, 231, 244], "1353": [32, 56, 195], "dics_epoch": [32, 56, 886], "roman": [33, 244, 860, 886], "goj": [33, 244, 860, 886], "appelhoff": [33, 112, 126, 228, 231, 234, 240, 873, 886], "csd_morlet": [33, 34, 102, 223, 707, 711, 712, 713, 714, 716, 876, 886], "apply_dics_csd": [33, 34, 223, 289, 291, 292, 297, 876, 886], "shorter": [33, 113, 201, 209, 241, 271, 272, 275, 278, 279, 280, 435, 440, 479, 480, 566, 594, 600, 722, 732, 733, 734, 736, 737, 807, 886], "498464098687909": [33, 34], "logspac": [33, 34, 194, 240, 354], "log10": [33, 34, 99, 132, 201, 211, 223, 226, 240, 241, 706], "loss": [33, 70, 200, 205, 264, 265, 266, 267, 414, 421, 441, 442, 443, 444, 479, 480, 688, 868], "csd_baselin": [33, 34], "csd_er": [33, 34], "block": [33, 34, 59, 63, 102, 132, 141, 142, 171, 190, 191, 200, 212, 223, 262, 264, 265, 266, 267, 274, 452, 470, 471, 476, 479, 480, 498, 550, 561, 591, 624, 693, 694, 696, 697, 708, 710, 754, 782, 784, 801, 807, 808, 810, 843, 850, 868, 871, 886], "rather": [33, 34, 60, 139, 140, 145, 148, 155, 165, 166, 167, 169, 170, 177, 187, 195, 200, 206, 207, 211, 215, 226, 230, 234, 239, 264, 265, 268, 271, 272, 275, 278, 279, 280, 418, 479, 480, 526, 534, 535, 545, 592, 698, 701, 754, 772, 807, 841, 843, 845, 861, 862, 867, 868, 886], "entir": [33, 74, 103, 143, 150, 175, 183, 200, 201, 203, 209, 211, 216, 226, 241, 259, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 287, 412, 427, 528, 529, 530, 531, 532, 561, 578, 623, 656, 706, 845, 886], "baseline_source_pow": 33, "beta_source_pow": 33, "messag": [33, 170, 212, 239, 256, 271, 272, 275, 278, 279, 280, 365, 445, 495, 498, 611, 617, 651, 652, 749, 750, 751, 754, 843, 845, 851, 856, 865, 871, 886], "40188307": 33, "5102619": 33, "34636424": 33, "joachim": [33, 179, 223, 244, 290, 297], "gro\u00df": [33, 179, 223, 244, 290, 297], "jan": [33, 179, 223, 244, 290, 297, 298, 861, 886], "kujala": [33, 179, 223, 244, 290, 297, 298], "matti": [33, 40, 54, 55, 58, 59, 125, 161, 177, 179, 209, 223, 244, 275, 290, 297, 476, 477, 528, 539, 543, 572, 577, 593, 663, 668, 852, 860, 865, 868, 886], "h\u00e4m\u00e4l\u00e4inen": [33, 40, 58, 59, 125, 177, 179, 223, 244, 275, 290, 297, 432, 476, 477, 528, 539, 543, 577, 663, 666, 668, 852, 886], "lar": [33, 179, 223, 244, 290, 297], "timmermann": [33, 179, 223, 244, 290, 297], "alfon": [33, 179, 223, 244, 290, 297], "schnitzler": [33, 179, 223, 244, 290, 297], "riitta": [33, 112, 177, 179, 223, 244, 290, 297, 298], "salmelin": [33, 112, 179, 223, 244, 290, 297, 298], "nation": [33, 179, 223, 244, 255, 290, 297, 873], "academi": [33, 179, 223, 244, 290, 297], "694": [33, 179, 223, 231, 244, 290, 297], "699": [33, 89, 90, 139, 150, 179, 223, 231, 244, 290, 297], "2001": [33, 41, 70, 179, 194, 207, 223, 244, 264, 265, 266, 267, 290, 297, 417, 479, 480, 569, 650, 690], "1073": [33, 179, 194, 208, 223, 244, 290, 297], "pna": [33, 179, 223, 244, 290, 297], "dics_source_pow": [33, 56, 886], "luke": [34, 38, 42, 75, 80, 81, 108, 873, 886], "bloi": [34, 38, 42, 80, 81, 108, 873, 886], "make_lcmv": [34, 49, 179, 289, 291, 293, 294, 295, 296, 297, 299, 841, 876, 886], "apply_lcmv_cov": [34, 179, 293, 295, 296, 876, 886], "apply_inverse_cov": [34, 42, 528, 530, 531, 532, 876, 886], "90092": 34, "maxfilt": [34, 187, 209, 269, 350, 351, 352, 432, 479, 480, 534, 535, 544, 545, 571, 572, 582, 593, 657, 658, 659, 671, 871, 886], "conserv": [34, 70, 145, 226, 569, 655, 754, 886], "advanc": [34, 73, 126, 160, 161, 170, 203, 217, 244, 261, 264, 265, 266, 267, 273, 354, 373, 411, 418, 470, 474, 479, 480, 560, 561, 576, 671, 706, 708, 710, 763, 771, 786, 793, 797, 806, 809, 814, 816, 844, 847, 849, 865, 866, 868, 870, 874, 886], "correctli": [34, 43, 44, 149, 189, 203, 236, 264, 265, 266, 267, 332, 444, 479, 480, 581, 769, 788, 843, 844, 851, 861, 862, 868, 871, 886], "compute_rank": [34, 261, 419, 779, 876, 886], "tol": [34, 40, 46, 59, 74, 171, 358, 454, 474, 476, 477, 886], "tol_kind": [34, 358, 886], "active_win": 34, "baseline_win": 34, "baseline_cov": 34, "active_cov": 34, "common_cov": 34, "3737": 34, "ref": [34, 61, 67, 122, 150, 256, 754, 770, 845, 886], "ex": [34, 209, 845, 849, 850], "_gen_dic": 34, "stc_base": [34, 42], "stc_act": 34, "_gen_lcmv": 34, "_gen_mn": 34, "stc_dic": 34, "stc_lcmv": 34, "stc_dspm": [34, 40, 59], "2631": [34, 168, 200, 223], "1241": [34, 168, 223], "1041": [34, 168, 223], "1111": [34, 140, 150, 168, 195, 201, 223, 231, 244, 354, 692, 693, 694, 696, 697, 845], "0941": [34, 168, 223], "0421": [34, 168, 223], "1821": [34, 168, 223], "2321": [34, 168, 223], "0311": [34, 165, 168, 223], "1021": [34, 168, 223, 244, 264, 265, 266, 267, 479, 480], "1741": [34, 168, 194, 200, 223, 244], "0511": [34, 145, 168, 223], "2331": [34, 168, 223, 555], "0111": [34, 144, 165, 168, 200, 206, 215, 223, 640], "0141": [34, 168, 200, 223], "2031": [34, 168, 223], "2541": [34, 168, 200, 223], "2611": [34, 168, 200, 223], "0631": [34, 168, 223], "1311": [34, 134, 168, 208, 223], "0611": [34, 168, 223], "1431": [34, 168, 200, 223], "1441": [34, 144, 168, 190, 200, 208, 223], "0531": [34, 168, 223], "2621": [34, 168, 200, 223], "1211": [34, 168, 223], "2431": [34, 168, 223], "2641": [34, 168, 223], "0411": [34, 168, 223], "1031": [34, 168, 223, 844], "2511": [34, 168, 223], "0811": [34, 168, 200, 223], "2411": [34, 119, 168, 223], "1841": [34, 168, 223], "1011": [34, 168, 194, 223], "0641": [34, 168, 223], "0431": [34, 168, 223], "1321": [34, 168, 200, 223], "2221": [34, 168, 223], "1421": [34, 144, 145, 168, 200, 206, 223], "2131": [34, 168, 194, 200, 223, 226, 244, 699, 700], "0911": [34, 168, 200, 223], "0331": [34, 165, 168, 223], "2421": [34, 119, 168, 200, 223], "2531": [34, 168, 200, 223], "0931": [34, 168, 223], "2311": [34, 168, 223], "0521": [34, 168, 200, 223], "0821": [34, 168, 223], "0321": [34, 165, 168, 223], "2341": [34, 168, 223], "1221": [34, 168, 200, 223], "2441": [34, 168, 223], "0741": [34, 168, 223], "0921": [34, 168, 223], "1541": [34, 168, 200, 208, 223], "0621": [34, 168, 223], "1231": [34, 168, 223], "2231": [34, 168, 223], "1531": [34, 165, 168, 223, 256], "0541": [34, 168, 223], "0711": [34, 168, 223], "1121": [34, 168, 223], "0721": [34, 168, 223], "1511": [34, 165, 168, 223], "planar": [34, 40, 42, 50, 58, 59, 71, 83, 91, 93, 108, 110, 118, 130, 141, 145, 171, 176, 177, 178, 182, 187, 195, 198, 205, 206, 209, 223, 226, 771, 868, 871, 886], "7615": [34, 125, 244, 388], "004172": 34, "17919e": 34, "exp": [34, 40, 42, 50, 58, 59, 89, 91, 93, 108, 176, 177, 178, 181, 190, 195, 206, 223, 226, 297, 298, 455, 474, 476, 477, 539], "37511": 34, "81775e": 34, "brain_dic": 34, "5205929": 34, "6585548": 34, "71744034": 34, "brain_lcmv": 34, "47949264": 34, "58585385": 34, "05032456": 34, "brain_dspm": 34, "71118668": 34, "88724176": 34, "99076424": 34, "717": [34, 56, 195], "274": [34, 46, 80, 81, 122, 165, 168, 190, 208, 226, 231], "evoked_ers_source_pow": [34, 56], "detail": [35, 44, 45, 79, 118, 139, 141, 148, 149, 150, 154, 155, 157, 165, 166, 167, 168, 169, 170, 171, 174, 176, 179, 187, 188, 189, 194, 195, 199, 200, 202, 204, 205, 206, 209, 215, 216, 217, 218, 236, 239, 244, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418, 419, 421, 422, 424, 427, 428, 430, 432, 436, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 461, 462, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 522, 523, 524, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 557, 560, 561, 563, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 584, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 600, 601, 602, 605, 606, 607, 608, 610, 612, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 650, 654, 655, 657, 658, 659, 660, 669, 670, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 693, 694, 695, 696, 697, 699, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 724, 725, 728, 729, 733, 734, 736, 737, 738, 739, 742, 743, 744, 749, 753, 754, 762, 769, 770, 771, 778, 779, 782, 785, 786, 787, 788, 789, 792, 793, 794, 796, 797, 798, 799, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 823, 825, 826, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 845, 861, 862, 864, 865, 869, 874, 886], "luessi": [35, 47, 103, 244, 860, 886], "mluessi": [35, 47, 103], "nmr": [35, 43, 47, 103, 113, 154, 215, 271, 275, 279, 367, 812, 868], "mgh": [35, 43, 47, 58, 103, 113, 154, 169, 215, 271, 275, 279, 328, 367, 655, 812, 856, 862, 868, 874, 886], "harvard": [35, 43, 47, 58, 103, 113, 154, 255, 271, 275, 279, 367, 812, 868, 873], "daniel": [35, 40, 46, 58, 59, 91, 126, 208, 244, 275, 476, 477, 860, 873, 886], "strohmeier": [35, 40, 46, 59, 91, 244, 476, 477, 860, 886], "tu": [35, 40, 46, 59, 91], "ilmenau": [35, 40, 46, 59, 91, 255, 873], "de": [35, 40, 46, 59, 91, 98, 111, 194, 195, 212, 241, 244, 255, 417, 561, 576, 861, 873, 886], "gamma_map": [35, 876, 886], "make_stc_from_dipol": [35, 40, 46, 59, 876, 886], "plot_dipole_loc": [35, 40, 51, 59, 177, 182, 184, 876, 886], "plot_dipole_amplitud": [35, 40, 51, 59, 876], "evoked_fnam": [35, 51, 89, 94, 264, 265, 266, 267, 479, 480], "50e": [35, 91, 150, 203], "300e": 35, "xyz_same_gamma": [35, 474, 886], "return_residu": [35, 40, 46, 51, 59, 176, 300, 474, 476, 477, 528, 886], "return_as_dipol": [35, 40, 46, 59, 474, 476, 477, 886], "303": [35, 87, 111, 168, 222, 235], "364": [35, 40, 48, 49, 54, 55, 58, 59, 68, 80, 91, 93, 120, 161, 165, 168, 177, 208, 239], "converg": [35, 40, 46, 59, 171, 178, 204, 474, 528, 561, 713, 724, 868, 886], "055e": 35, "22233": 35, "856e": 35, "20712": 35, "375e": 35, "17166": 35, "061e": 35, "12996": 35, "273e": 35, "10107": 35, "574e": 35, "8307": 35, "319e": 35, "7209": 35, "369e": 35, "6342": 35, "631e": 35, "5694": 35, "047e": 35, "5142": 35, "579e": 35, "4692": 35, "199e": 35, "4287": 35, "889e": 35, "4002": [35, 868], "634e": 35, "3696": 35, "422e": 35, "3429": 35, "246e": 35, "3153": 35, "099e": 35, "2952": [35, 161], "747e": 35, "2745": 35, "702e": 35, "2559": 35, "817e": 35, "2394": 35, "062e": 35, "2229": 35, "417e": 35, "2067": 35, "883e": 35, "711e": 35, "1836": 35, "552e": 35, "400e": 35, "1617": 35, "266e": 35, "1509": 35, "166e": 35, "1440": 35, "066e": 35, "1350": 35, "965e": 35, "861e": 35, "1200": [35, 222], "754e": 35, "1128": 35, "643e": 35, "1077": [35, 58, 244, 275, 543, 666], "529e": 35, "1017": [35, 208, 244], "410e": 35, "975": [35, 73], "288e": 35, "924": [35, 208, 231], "163e": 35, "873": [35, 231], "036e": 35, "837": [35, 105, 229, 231], "906e": 35, "798": [35, 143, 231], "776e": 35, "744": [35, 195, 231], "644e": 35, "513e": 35, "687": [35, 61], "382e": 35, "660": [35, 80, 195, 231], "253e": 35, "627": [35, 222, 225], "125e": 35, "600": [35, 40, 58, 59, 71, 74, 80, 82, 89, 92, 125, 126, 133, 154, 155, 159, 166, 167, 177, 178, 179, 183, 190, 194, 198, 199, 202, 205, 206, 207, 208, 209, 211, 215, 216, 217, 218, 223, 244, 477, 754, 886], "000e": 35, "588": [35, 231], "877e": 35, "758e": 35, "552": [35, 231], "642e": 35, "528": [35, 142, 148, 153, 195, 231], "495": [35, 81, 221, 231], "421e": 35, "486": [35, 142, 195, 208, 231], "316e": 35, "465": [35, 202, 231], "215e": 35, "118e": 35, "417": [35, 118, 161, 226, 244, 561, 591, 771], "026e": 35, "937e": 35, "402": [35, 44, 56, 80, 143, 208, 226, 231, 871], "853e": 35, "387": [35, 80, 208, 231, 244, 297], "772e": 35, "378": [35, 80, 195, 231], "695e": 35, "348": [35, 111, 168, 194, 201, 231, 886], "622e": 35, "339": [35, 111, 168, 208, 226, 231], "333": [35, 75, 111, 168, 208, 226, 231], "486e": 35, "423e": 35, "312": [35, 84, 86, 168, 231], "306e": 35, "252e": 35, "297": [35, 111, 168, 208, 231], "201e": 35, "152e": 35, "273": [35, 46, 56, 165, 168, 183, 886], "106e": 35, "261": [35, 95, 168, 226, 231], "020e": 35, "807e": 35, "234": [35, 168, 208], "432e": 35, "222": [35, 46, 168, 190, 208, 226, 231, 236], "074e": 35, "219": [35, 41, 168, 208, 226, 230, 886], "735e": 35, "413e": 35, "207": [35, 111, 113, 143, 147, 157, 168, 208, 226, 230, 231, 244], "814e": 35, "198": [35, 63, 66, 123, 129, 168, 183, 208, 226, 230, 231, 236], "536e": 35, "271e": 35, "186": [35, 45, 105, 143, 168, 175, 180, 226, 230], "019e": 35, "778e": 35, "174": [35, 125, 168, 208, 226, 231, 244, 277], "549e": 35, "168": [35, 45, 128, 129, 168, 175, 180, 226, 230, 231, 236], "122e": 35, "159": [35, 113, 122, 148, 168, 208, 226, 231], "922e": 35, "156": [35, 45, 168, 175, 180, 208, 226, 230, 231, 238, 277], "732e": 35, "550e": 35, "138": [35, 105, 165, 168, 208, 226, 230, 231, 244, 277, 566, 886], "896e": 35, "749e": 35, "609e": 35, "126": [35, 65, 168, 208, 226, 231], "344e": 35, "123": [35, 56, 122, 160, 163, 168, 204, 206, 230, 231, 345], "220e": 35, "104": [35, 61, 168, 208, 226, 231, 244, 666, 871, 886], "101e": 35, "117": [35, 61, 144, 168, 208, 226, 231, 244, 735, 738, 886], "986e": 35, "875e": 35, "107": [35, 61, 105, 109, 112, 114, 139, 168, 226, 230, 231, 244, 871, 886], "769e": 35, "667e": 35, "473e": 35, "209e": 35, "126e": 35, "115": [35, 45, 50, 56, 61, 83, 93, 168, 182, 231, 244, 569], "689e": 35, "500e": 35, "441e": 35, "384e": 35, "329e": 35, "127": [35, 168, 195, 208, 212, 214, 230, 231], "275e": 35, "985e": 35, "154": [35, 136, 167, 168, 195, 208, 226, 230, 231], "155": [35, 168, 226, 230, 231, 241, 886], "247e": 35, "650e": 35, "117e": 35, "179": [35, 75, 168, 195, 208, 226, 230, 244, 600, 868], "815e": 35, "524e": 35, "211": [35, 41, 59, 144, 168, 208, 230, 231], "307e": 35, "226": [35, 139, 143, 147, 168, 183, 231, 886], "274e": 35, "042e": 35, "293": [35, 111, 168, 182, 208, 244], "161e": 35, "313": [35, 111, 168, 231, 886], "784e": 35, "169e": 35, "343": [35, 111, 142, 168, 169, 231, 886], "949e": 35, "886e": 35, "420": [35, 80, 165, 173, 194, 208, 231], "reach": [35, 40, 46, 59, 171, 241, 257, 264, 265, 266, 267, 479, 480, 662, 706, 708, 710, 713, 724, 734, 737, 751, 786, 793, 814, 886], "dip": [35, 40, 59, 83, 115, 175, 180, 182, 183, 184, 210, 241, 262, 454, 615, 886], "mri_head_t": [35, 40, 51, 59, 180, 268, 269, 472, 473, 871], "fig_nam": [35, 40, 46, 59, 813], "david": [35, 42, 118, 125, 128, 194, 201, 239, 244, 264, 265, 266, 267, 354, 388, 417, 474, 479, 480, 529, 708, 710, 718, 724, 735, 738, 771, 868, 886], "wipf": [35, 244, 474], "srikantan": [35, 223, 244, 297, 298, 474], "nagarajan": [35, 223, 244, 297, 298, 474], "unifi": [35, 136, 179, 201, 244, 474, 666, 886], "947": [35, 231, 244, 474], "966": [35, 42, 128, 161, 171, 204, 206, 231, 244, 474], "059": [35, 139, 141, 148, 168, 199, 215, 223, 244, 474], "796": [35, 56, 143, 231], "gamma_map_invers": [35, 56], "form": [37, 140, 142, 159, 167, 174, 177, 198, 201, 203, 204, 205, 209, 226, 228, 231, 234, 261, 264, 265, 266, 267, 269, 271, 272, 273, 275, 278, 279, 280, 335, 411, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 446, 474, 476, 477, 479, 480, 513, 522, 528, 530, 531, 532, 560, 561, 562, 570, 576, 593, 636, 639, 655, 656, 657, 658, 659, 671, 693, 694, 696, 697, 706, 708, 709, 710, 718, 771, 786, 788, 793, 797, 806, 809, 814, 816, 834, 839, 845, 864, 865, 867, 868, 871, 886], "merg": [37, 140, 216, 217, 259, 264, 266, 267, 353, 453, 498, 526, 647, 655, 845, 867, 886], "christian": [37, 119, 125, 133, 143, 244, 388, 389, 411, 435, 666, 860, 862, 886], "brodbeck": [37, 119, 133, 244, 860, 886], "christianbrodbeck": [37, 119, 133], "read_source_estim": [37, 43, 53, 115, 126, 133, 174, 180, 235, 876, 886], "aud_lh": 37, "aud_rh": 37, "stc_lh": [37, 47], "stc_rh": [37, 47], "stc_bh": 37, "calcul": [37, 38, 58, 80, 100, 111, 127, 143, 149, 150, 157, 161, 165, 169, 175, 179, 187, 194, 200, 201, 204, 206, 211, 215, 226, 227, 231, 240, 259, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 297, 298, 304, 318, 354, 358, 359, 369, 370, 371, 411, 418, 419, 446, 454, 455, 468, 474, 476, 477, 479, 480, 517, 522, 523, 524, 539, 561, 568, 573, 574, 578, 582, 593, 597, 613, 623, 635, 671, 685, 693, 694, 696, 697, 699, 700, 707, 718, 725, 794, 799, 808, 841, 865, 871, 886], "mass": [37, 164, 226, 227, 232, 233, 264, 269, 270, 275, 479, 558, 620, 655, 663, 669, 672, 687, 689, 690, 694, 709, 736, 744, 883, 886], "mni": [37, 134, 135, 158, 175, 180, 181, 189, 262, 279, 280, 312, 328, 367, 472, 637, 746, 753, 754, 818, 868, 886], "vtx": 37, "t_lh": 37, "center_of_mass": [37, 222, 270, 275, 669, 672, 886], "mni_lh": 37, "vertex_to_mni": [37, 270, 275, 876], "t_rh": 37, "mni_rh": 37, "275": [37, 46, 122, 165, 168, 169, 190, 208, 226, 244, 338, 411, 862, 868], "625": [37, 142, 231], "hl": 37, "hr": 37, "hb": 37, "figlegend": 37, "541": [37, 56, 228, 244, 432], "label_activation_from_stc": [37, 56], "typic": [38, 44, 60, 70, 82, 142, 144, 148, 150, 155, 159, 166, 167, 169, 187, 190, 191, 195, 198, 199, 201, 203, 204, 205, 206, 207, 209, 211, 217, 226, 241, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 278, 279, 280, 297, 298, 312, 313, 331, 342, 344, 354, 358, 359, 360, 362, 418, 429, 454, 464, 467, 479, 480, 541, 560, 561, 563, 571, 576, 594, 604, 607, 617, 655, 677, 691, 692, 693, 694, 696, 697, 706, 709, 754, 792, 801, 805, 807, 841, 844, 845, 851, 862, 863, 865, 867, 868, 886], "anatom": [38, 44, 70, 93, 134, 155, 159, 175, 180, 244, 262, 279, 280, 365, 463, 754, 772, 776, 818, 841, 868, 886], "yield": [38, 139, 141, 144, 148, 150, 154, 160, 170, 179, 191, 202, 204, 215, 216, 241, 259, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 318, 428, 432, 561, 564, 571, 572, 582, 593, 619, 658, 659, 698, 722, 732, 733, 734, 736, 737, 754, 841, 863, 865, 868, 886], "peak": [38, 54, 55, 60, 70, 72, 74, 81, 89, 93, 94, 126, 131, 144, 148, 149, 165, 171, 174, 176, 177, 179, 182, 183, 184, 190, 198, 200, 203, 204, 206, 208, 210, 226, 241, 256, 259, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 359, 543, 561, 563, 566, 573, 574, 578, 579, 582, 583, 584, 586, 587, 588, 602, 663, 692, 706, 784, 789, 791, 792, 793, 861, 868, 886], "banksst": [38, 41, 47], "aparc_label_nam": 38, "stc_mean": 38, "grow": [38, 89, 94, 241, 469, 513, 610, 852, 867], "halt": [38, 141, 262, 264, 265, 266, 267, 470, 471, 479, 480, 561, 708, 710, 782, 784, 801, 807, 810, 851, 886], "read_labels_from_annot": [38, 41, 47, 68, 89, 93, 94, 125, 222, 547, 627, 836, 876, 886], "parc": [38, 41, 47, 628, 836], "aparc": [38, 41, 47, 68, 89, 93, 94, 125, 134, 154, 175, 180, 222, 262, 271, 272, 275, 278, 279, 280, 385, 445, 463, 515, 628, 643, 754, 841, 886], "regexp": [38, 89, 93, 94, 199, 204, 206, 211, 440, 555, 628, 886], "stc_mean_label": 38, "func_label": 38, "stc_to_label": [38, 876, 886], "maximum": [38, 47, 48, 50, 58, 82, 114, 118, 150, 175, 176, 180, 181, 200, 201, 204, 215, 244, 259, 264, 265, 266, 267, 271, 272, 275, 277, 278, 279, 280, 297, 298, 326, 342, 365, 419, 444, 445, 448, 469, 474, 476, 477, 479, 480, 513, 521, 528, 537, 538, 543, 561, 563, 578, 588, 591, 592, 671, 693, 694, 696, 697, 702, 706, 711, 712, 713, 714, 715, 716, 717, 718, 720, 722, 724, 732, 735, 736, 738, 754, 778, 783, 789, 792, 812, 817, 818, 841, 868, 886], "anat_label": 38, "stc_anat_label": 38, "pca_anat": 38, "extract_label_time_cours": [38, 39, 41, 180, 271, 272, 275, 278, 279, 280, 515, 876, 886], "pca_flip": [38, 39, 271, 272, 275, 278, 279, 280, 445], "stc_func_label": 38, "pca_func": 38, "show_view": [38, 48, 108, 115, 134, 159, 180, 189, 210, 223, 236, 271, 272, 275, 278, 279, 280, 754, 812, 817, 886], "add_label": [38, 59, 103, 115, 125, 754], "73227205": 38, "80078852": 38, "62750681": 38, "label_from_stc": [38, 56], "strategi": [39, 195, 198, 204, 206, 207, 244, 353, 365, 416, 428, 476, 666, 724, 786, 865], "simpl": [39, 46, 127, 143, 144, 150, 159, 160, 165, 180, 194, 195, 201, 205, 223, 226, 241, 244, 256, 324, 353, 411, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 496, 562, 722, 732, 802, 845, 862, 868, 886], "patheffect": [39, 159], "path_effect": [39, 159], "label_fnam": 39, "stc_label": 39, "mean_flip": [39, 271, 272, 275, 278, 279, 280, 445, 886], "tc": 39, "pe": 39, "stroke": [39, 159], "foreground": [39, 141, 159, 271, 272, 275, 278, 279, 280, 754, 812, 817, 886], "possibl": [39, 43, 45, 113, 136, 139, 141, 142, 144, 148, 149, 150, 155, 159, 160, 167, 168, 169, 170, 171, 177, 179, 187, 189, 191, 195, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 211, 215, 216, 217, 218, 221, 223, 226, 230, 231, 239, 241, 258, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 326, 354, 411, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 428, 434, 452, 462, 470, 479, 480, 487, 504, 561, 562, 600, 601, 619, 620, 650, 688, 693, 695, 706, 707, 710, 740, 770, 780, 788, 789, 792, 797, 800, 801, 808, 843, 850, 862, 863, 865, 867, 868, 871, 872, 886], "vectorsourceestim": [39, 60, 174, 271, 272, 275, 276, 279, 280, 292, 293, 474, 476, 477, 528, 529, 530, 531, 532, 537, 538, 633, 817, 818, 841, 876, 886], "stc_vec": [39, 41, 179], "stc_vec_label": 39, "ee6677": [39, 159, 722, 732], "228833": 39, "4477aa": [39, 722, 732], "xyz": [39, 155, 159, 177, 271, 272, 275, 278, 279, 280, 312, 330, 445, 474, 504, 824, 886], "zorder": [39, 159, 266, 267, 722, 732, 788, 791, 886], "654": [39, 56, 103, 105, 207, 214, 231], "label_source_activ": [39, 56], "ir": 40, "l0": [40, 476], "sparser": [40, 271, 275, 279, 812], "convex": [40, 46, 59, 244, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 886], "mixed_norm": [40, 174, 477, 876, 886], "sure": [40, 43, 45, 67, 70, 108, 112, 134, 139, 140, 143, 150, 155, 160, 161, 165, 169, 170, 171, 175, 188, 199, 202, 203, 204, 206, 209, 215, 230, 234, 235, 236, 256, 266, 267, 442, 443, 476, 491, 545, 560, 571, 701, 722, 732, 733, 734, 736, 791, 832, 843, 844, 845, 853, 886], "criterion": [40, 528, 886], "n_mxne_it": [40, 476], "use_cp": [40, 91, 157, 222, 272, 278, 280, 284, 285, 364, 528, 529, 530, 531, 532, 535, 539, 544, 545, 670, 671, 868, 886], "maxit": [40, 59, 474, 476, 477], "3000": [40, 49, 112, 136, 141, 144, 145, 191, 200, 206, 211, 256, 476, 477], "active_set_s": [40, 476], "debia": [40, 59, 476, 477], "slower": [40, 44, 46, 201, 259, 264, 363, 410, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 520, 531, 601, 845, 874], "sure_alpha_grid": [40, 476], "083": [40, 123, 141, 147], "tidx": [40, 180], "7262": [40, 58, 59, 93, 177, 195, 223], "020866": [40, 58, 195], "58122e": [40, 58, 59, 93, 177, 195, 223], "element": [40, 58, 89, 167, 171, 177, 178, 181, 190, 195, 201, 205, 206, 215, 217, 226, 228, 244, 258, 261, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 322, 323, 411, 418, 423, 432, 433, 445, 446, 466, 479, 480, 515, 516, 517, 560, 576, 593, 655, 686, 694, 706, 708, 710, 759, 771, 773, 778, 786, 793, 806, 809, 812, 814, 816, 817, 818, 841, 845, 851, 866, 867, 871, 886], "21995": 40, "82623e": 40, "360": [40, 48, 49, 54, 55, 58, 59, 80, 81, 92, 93, 111, 120, 151, 161, 168, 171, 177, 190, 195, 208, 231, 240], "warm": 40, "33333333333333": 40, "66666666666667": 40, "66666666666666": 40, "666666666666664": 40, "60279": 40, "6036917851": 40, "59855": 40, "33381591424": 40, "60434": 40, "8708663271": 40, "60386": 40, "806545232204": 40, "60336": 40, "58240550615": 40, "60303": 40, "83155507343": 40, "60157": 40, "01344242948": 40, "59974": 40, "67525570807": 40, "59597": 40, "86913656531": 40, "59084": 40, "52688073421": 40, "compute_source_morph": [40, 43, 44, 133, 157, 159, 179, 180, 234, 235, 236, 271, 275, 276, 279, 280, 630, 812, 818, 861, 876, 886], "subject_from": [40, 43, 44, 179, 270, 276, 360, 547, 548, 630, 642, 643, 644, 645, 861], "stc_fsaverag": [40, 43, 44, 861], "src_fsaverage_fnam": 40, "src_fsaverag": 40, "matthieu": [40, 59, 244, 476, 477], "kowalski": [40, 59, 244, 476, 477], "acceler": [40, 244, 476, 851, 865, 868, 886], "gradient": [40, 118, 211, 244, 259, 264, 265, 266, 267, 269, 476, 478, 479, 480, 523, 561, 575, 706, 708, 709, 710, 771, 886], "physic": [40, 155, 159, 169, 175, 177, 188, 209, 244, 266, 267, 269, 432, 444, 476, 479, 480, 528, 572, 582, 593, 788, 841, 868, 871, 886], "medicin": [40, 82, 175, 209, 244, 476, 561, 593, 868], "biologi": [40, 82, 175, 209, 244, 476, 561, 593, 868], "1937": [40, 244, 476], "1961": [40, 244, 476], "2012": [40, 59, 150, 168, 201, 226, 244, 270, 275, 282, 354, 476, 477, 699, 700, 874], "1088": [40, 175, 194, 207, 209, 244, 264, 265, 266, 267, 417, 476, 479, 480, 593, 650, 868], "0031": [40, 175, 209, 244, 476, 593, 868], "9155": [40, 175, 209, 244, 476, 593, 868], "jen": [40, 46, 59, 244, 476, 477, 886], "haueisen": [40, 46, 59, 244, 476, 477], "improv": [40, 70, 143, 194, 195, 203, 206, 211, 244, 264, 265, 266, 267, 305, 341, 343, 347, 370, 371, 413, 422, 447, 449, 450, 451, 479, 480, 539, 562, 601, 604, 663, 668, 734, 737, 845, 861, 863, 864, 865, 886], "prni": [40, 46, 244, 477], "t\u00fcbingen": [40, 244], "6858545": [40, 244], "charl": [40, 44, 244, 276, 360, 476], "alban": [40, 244, 476], "deledal": [40, 244, 476], "samuel": [40, 93, 94, 244, 476, 886], "vaiter": [40, 244, 476], "jalal": [40, 244, 476], "fadili": [40, 244, 476], "peyr\u00e9": [40, 244, 476], "stein": [40, 244, 476], "unbias": [40, 244, 476], "risk": [40, 180, 201, 204, 230, 244, 264, 265, 266, 267, 476, 479, 480, 582, 754], "sugar": [40, 244, 476], "siam": [40, 244, 476], "journal": [40, 43, 70, 71, 74, 118, 156, 195, 201, 209, 231, 239, 244, 264, 265, 266, 267, 276, 354, 360, 432, 476, 479, 480, 561, 569, 570, 572, 593, 666, 693, 694, 696, 697, 708, 710, 718, 722, 724, 732, 733, 735, 736, 738, 771, 860], "2448": [40, 244, 476], "140968045": [40, 244, 476], "393": [40, 56, 80, 208, 231], "mixed_norm_invers": [40, 56], "annalisa": [41, 886], "pascarella": [41, 886], "iac": 41, "cnr": 41, "dir": [41, 170, 256, 754, 868, 871], "data_dir": [41, 57, 133, 143], "bem_dir": [41, 45, 108, 158, 160, 181], "fname_mixed_src": 41, "fname_aseg": [41, 180], "fname_model": 41, "_audvi": 41, "_audvis_raw": [41, 156], "substructur": 41, "labels_vol": 41, "amygdala": 41, "thalamu": 41, "proper": [41, 70, 226, 241, 265, 266, 267, 270, 297, 298, 354, 358, 359, 365, 369, 370, 371, 373, 411, 418, 454, 455, 474, 476, 477, 480, 539, 765, 794, 845, 862, 874, 886], "stem": [41, 72, 212, 275, 279, 486, 506], "oct6": [41, 108, 157, 256, 271, 275, 279, 645, 654, 812, 861], "oct5": [41, 108, 861], "1026": [41, 108, 861], "bound": [41, 157, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 411, 418, 455, 479, 480, 560, 561, 655, 706, 707, 708, 710, 724, 742, 769, 771, 773, 778, 786, 793, 797, 806, 807, 808, 809, 812, 814, 816, 817, 818, 868, 871, 886], "10mm": 41, "someth": [41, 126, 148, 160, 170, 171, 190, 201, 206, 207, 215, 271, 272, 275, 278, 279, 280, 754, 755, 812, 817, 841, 844, 845, 848, 849, 850, 852, 886], "vol_src": [41, 134, 157], "add_interpol": [41, 50, 157, 655], "usual": [41, 50, 70, 82, 111, 113, 139, 142, 144, 148, 149, 150, 154, 155, 159, 160, 165, 166, 167, 169, 171, 179, 182, 187, 190, 191, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 215, 216, 217, 218, 234, 236, 239, 240, 256, 262, 263, 264, 265, 266, 267, 268, 269, 277, 303, 325, 330, 335, 337, 339, 462, 479, 480, 504, 671, 693, 694, 696, 697, 841, 845, 846, 848, 851, 853, 865, 868, 871], "nuse": [41, 269, 277, 871], "2562": [41, 108, 149, 157, 861], "node": [41, 47, 157, 680, 681, 682, 759, 871, 886], "4590": 41, "2961": 41, "346": [41, 143, 168, 208, 226, 231], "1275": 41, "2615": 41, "1340": 41, "1589": 41, "729": [41, 182, 183, 184, 190, 193, 195, 231], "1372": 41, "283": [41, 71, 111, 168, 244, 570], "1306": [41, 208], "010000": [41, 155], "2169": 41, "write_source_spac": [41, 635, 861, 876, 886], "again": [41, 140, 141, 143, 149, 150, 154, 155, 160, 171, 195, 198, 199, 201, 203, 204, 205, 206, 215, 226, 231, 241, 264, 265, 266, 267, 274, 479, 480, 561, 601, 805, 832, 844, 867, 868, 886], "plot_img": 41, "nipy_spectr": 41, "5mm": [41, 83, 134, 431, 754], "innerskul": 41, "815": [41, 208, 231], "446": [41, 69, 244, 860], "807": [41, 195, 208], "6003": 41, "inv_method": [41, 89], "a2009": [41, 93, 134, 154, 175, 271, 272, 275, 278, 279, 280, 445, 515, 628], "39266": 41, "01344e": 41, "coron": [41, 134, 157, 159, 179, 262, 754, 772, 782], "silhouett": [41, 179, 180, 271, 272, 275, 278, 279, 280, 754, 812, 817, 886], "43101017": 41, "98225664": 41, "7504814": 41, "45409596": 41, "02821047": 41, "97219252": 41, "vox": [41, 159, 179, 180, 181], "2045": 41, "21567156": 41, "47889133": 41, "39837939": 41, "labels_parc": 41, "label_t": 41, "allow_empti": [41, 271, 272, 275, 278, 279, 280, 445], "nam": [41, 92, 93, 94, 182, 183, 223, 672, 886], "336": [41, 56, 111, 168, 170, 226, 886], "324": [41, 56, 90, 94, 111, 168, 208, 226, 231], "mixed_source_space_invers": [41, 56], "computation": [42, 171, 201, 204, 205, 601, 868, 874], "sabbagh": [42, 244, 529, 886], "pierr": [42, 76, 204, 244, 529, 561, 886], "ablin": [42, 76, 204, 244, 529, 561, 886], "ga\u00ebl": [42, 244, 529], "varoquaux": [42, 244, 529], "state": [42, 89, 92, 108, 125, 139, 161, 165, 167, 174, 198, 199, 206, 207, 216, 221, 226, 241, 244, 257, 259, 264, 265, 349, 435, 476, 495, 513, 520, 529, 561, 591, 610, 611, 616, 617, 658, 659, 660, 669, 670, 672, 693, 694, 695, 696, 697, 706, 708, 709, 754, 797, 841, 843, 845, 853, 867, 868, 871, 874, 886], "2020": [42, 74, 143, 156, 244, 389, 529, 561, 862], "116893": [42, 244, 529], "alexand": [42, 211, 244, 575, 862, 886], "captur": [42, 46, 136, 143, 165, 171, 182, 183, 195, 203, 204, 205, 206, 207, 269, 274, 455, 560, 573, 574, 578, 607, 608, 841, 886], "environ": [42, 43, 44, 154, 171, 174, 262, 270, 271, 272, 274, 275, 277, 278, 279, 280, 303, 307, 308, 309, 312, 360, 365, 366, 367, 372, 377, 378, 379, 380, 382, 383, 384, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 430, 459, 461, 463, 467, 469, 470, 471, 472, 473, 513, 517, 519, 547, 548, 589, 610, 628, 630, 637, 642, 643, 644, 645, 649, 652, 654, 655, 669, 672, 683, 701, 702, 746, 753, 754, 770, 772, 782, 812, 817, 818, 820, 836, 843, 844, 848, 849, 850, 851, 853, 861, 865, 868, 886], "raw_empty_room_fnam": [42, 161], "ernoise_raw": [42, 128, 161, 171, 206], "raw_empty_room": [42, 161], "compute_raw_covari": [42, 87, 108, 161, 183, 190, 200, 261, 354, 614, 752, 861, 876, 886], "19800": [42, 128, 161, 171, 194, 206], "85867": [42, 128, 161, 171, 206], "142": [42, 82, 128, 161, 168, 171, 195, 206, 226, 230, 231, 277, 886], "965": [42, 128, 161, 171, 206, 231], "18000": 42, "249": [42, 46, 73, 150, 168, 195, 208, 230, 231, 244], "658": [42, 161, 163, 195, 231], "319": [42, 49, 72, 73, 90, 98, 111, 140, 151, 165, 168, 176, 179, 195, 200, 208, 231, 244, 561], "environment": [42, 165, 198, 202, 205, 207, 209, 215, 217, 218, 861], "rest": [42, 70, 73, 108, 125, 136, 139, 161, 165, 167, 168, 216, 244, 264, 265, 266, 267, 275, 373, 393, 479, 480, 650, 659, 841, 845, 867, 869, 874, 886], "base_cov": 42, "data_cov": [42, 179, 294, 298], "fig_noise_cov": 42, "plot_cov": [42, 176, 876, 886], "show_svd": [42, 64, 261, 779], "fig_base_cov": 42, "fig_data_cov": 42, "1680": 42, "_cov": 42, "_kw": 42, "7265": [42, 176, 178], "037795": [42, 176], "52065e": [42, 176, 178], "40105": 42, "62956e": 42, "stc_data": [42, 93, 673], "11859103": 42, "45698488": 42, "03713927": 42, "mne_cov_pow": [42, 56], "pre": [43, 49, 139, 140, 161, 165, 179, 200, 201, 204, 215, 221, 264, 265, 266, 267, 354, 479, 480, 561, 647, 650, 845, 846, 850, 857, 886], "spheric": [43, 71, 78, 150, 155, 169, 182, 183, 184, 199, 206, 209, 244, 261, 264, 265, 266, 267, 270, 273, 275, 276, 312, 328, 330, 360, 411, 418, 432, 479, 480, 524, 560, 561, 570, 571, 572, 575, 576, 582, 593, 655, 669, 672, 683, 687, 706, 708, 710, 754, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 868, 886], "surfer": [43, 154, 271, 275, 279, 367, 754, 812, 868], "fswiki": [43, 154, 271, 275, 279, 367, 812, 868], "surfaceregandtempl": 43, "depict": [43, 266, 267, 272, 278, 280, 794, 817, 868], "success": [43, 143, 256, 264, 265, 271, 272, 275, 276, 278, 279, 280, 360, 477, 537, 538, 591, 656, 693, 694, 696, 697, 708, 709, 721, 729, 744, 775, 845], "inflat": [43, 48, 49, 54, 55, 59, 60, 125, 134, 150, 174, 190, 244, 271, 275, 279, 410, 754, 770, 812, 851, 868, 886], "overlaid": [43, 44, 135, 171, 256, 655, 868, 886], "tommi": [43, 44, 886], "clausner": [43, 44, 886], "sample_dir": [43, 44, 115, 157, 171, 174], "fname_src": [43, 134, 158, 181], "fname_fsaverage_src": 43, "fname_stc": [43, 126, 174, 180], "repres": [43, 70, 74, 80, 114, 118, 139, 140, 141, 142, 143, 148, 150, 155, 157, 160, 161, 165, 167, 168, 169, 170, 174, 188, 194, 201, 204, 218, 244, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 274, 275, 277, 278, 279, 280, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 445, 454, 455, 474, 476, 477, 479, 480, 495, 501, 504, 513, 527, 539, 561, 576, 617, 619, 694, 706, 709, 754, 771, 794, 797, 799, 801, 812, 813, 817, 841, 845, 861, 865, 868, 871, 886], "itself": [43, 70, 142, 150, 159, 171, 187, 201, 204, 205, 206, 217, 226, 258, 264, 265, 270, 275, 278, 307, 444, 479, 480, 548, 754, 843, 845, 865, 868, 871], "proxim": [43, 134, 268, 701, 886], "src_orig": [43, 275, 278], "3732": [43, 174], "3766": 43, "src_to": [43, 44, 179, 360, 886], "argument": [43, 44, 119, 150, 154, 160, 161, 168, 169, 171, 179, 187, 188, 189, 190, 191, 200, 201, 202, 205, 209, 212, 215, 226, 230, 236, 240, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 319, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 416, 417, 421, 422, 424, 427, 428, 430, 432, 436, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 461, 462, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 522, 523, 524, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 556, 557, 561, 563, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 584, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 600, 601, 602, 605, 606, 607, 608, 612, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 650, 654, 655, 657, 658, 659, 660, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 688, 693, 694, 695, 696, 697, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 724, 725, 728, 729, 733, 734, 736, 737, 738, 739, 742, 743, 744, 749, 750, 751, 752, 753, 754, 755, 762, 769, 770, 774, 776, 779, 782, 785, 786, 787, 788, 789, 791, 794, 797, 798, 799, 804, 805, 806, 807, 808, 810, 811, 812, 813, 815, 817, 818, 819, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 861, 871, 874, 886], "special": [43, 159, 168, 205, 215, 241, 371, 487, 494, 849, 867, 868, 874, 886], "alwai": [43, 73, 142, 143, 148, 150, 159, 166, 167, 168, 174, 189, 198, 200, 201, 202, 203, 204, 205, 206, 207, 212, 215, 221, 226, 241, 262, 264, 265, 269, 271, 272, 274, 275, 277, 278, 279, 280, 318, 435, 445, 511, 561, 582, 623, 625, 693, 707, 762, 772, 782, 783, 813, 815, 824, 833, 841, 845, 868, 871, 872, 886], "10239": 43, "10240": 43, "10241": 43, "give": [43, 44, 59, 70, 74, 94, 141, 151, 160, 167, 170, 179, 181, 195, 199, 201, 202, 205, 226, 256, 261, 264, 265, 266, 267, 273, 277, 312, 411, 412, 413, 418, 422, 427, 428, 432, 447, 449, 450, 454, 476, 477, 479, 480, 495, 560, 561, 576, 582, 593, 611, 617, 692, 693, 694, 696, 697, 706, 708, 710, 718, 722, 732, 736, 754, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 841, 843, 845, 851, 861, 865, 867, 868, 871, 886], "surfer_kwarg": [43, 174, 176], "brain_inf": 43, "under": [43, 44, 60, 126, 142, 143, 161, 188, 195, 198, 201, 205, 222, 226, 228, 234, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 312, 324, 354, 355, 357, 359, 377, 378, 379, 380, 382, 383, 384, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 414, 421, 424, 427, 428, 454, 467, 469, 479, 480, 491, 499, 519, 522, 523, 534, 535, 544, 545, 566, 573, 574, 576, 601, 618, 622, 654, 657, 658, 659, 667, 671, 691, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 786, 789, 808, 845, 861, 867, 868, 874, 886], "h5": [43, 44, 171, 179, 223, 271, 272, 274, 275, 276, 278, 279, 280, 288, 560, 603, 706, 707, 709, 726, 728, 739, 828, 829, 886], "respect": [43, 44, 47, 55, 68, 71, 89, 131, 139, 143, 150, 155, 158, 167, 168, 171, 174, 187, 195, 199, 201, 204, 205, 207, 208, 215, 216, 231, 259, 261, 264, 265, 266, 267, 269, 273, 274, 275, 279, 280, 297, 298, 299, 335, 354, 358, 359, 365, 369, 370, 371, 411, 413, 418, 422, 435, 447, 449, 454, 455, 474, 476, 477, 479, 480, 485, 504, 513, 516, 524, 539, 560, 561, 562, 563, 565, 576, 578, 611, 619, 655, 663, 666, 668, 674, 694, 706, 708, 710, 725, 733, 734, 736, 737, 754, 770, 771, 775, 778, 784, 786, 788, 793, 794, 797, 798, 801, 806, 807, 809, 814, 816, 818, 845, 848, 851, 861, 865, 868, 871, 886], "my": [43, 44, 171, 181, 221], "read_source_morph": [43, 44, 276, 876], "further": [43, 140, 150, 156, 165, 167, 177, 187, 195, 200, 204, 206, 209, 215, 226, 231, 236, 241, 264, 265, 289, 291, 320, 365, 561, 565, 693, 694, 696, 697, 709, 769, 785, 857, 863, 867, 868, 886], "assign": [43, 45, 100, 102, 119, 135, 139, 142, 143, 150, 160, 167, 169, 174, 177, 187, 188, 191, 206, 209, 216, 221, 258, 264, 269, 274, 277, 469, 471, 487, 491, 494, 496, 502, 504, 513, 522, 561, 578, 579, 583, 584, 586, 587, 615, 649, 754, 776, 836, 861, 868, 871, 886], "chain": [43, 166, 195, 199, 215, 417, 863, 868], "handi": [43, 189, 204], "liner": 43, "shortest": [43, 155, 201, 264, 265, 266, 267, 413, 422, 447, 449, 450, 479, 480, 566], "dougla": [43, 244, 276, 360], "greve": [43, 244, 276, 360], "lise": [43, 244, 276, 360], "der": [43, 244, 276, 360, 868, 886], "haegen": [43, 244, 276, 360], "qing": [43, 244, 276, 360], "cai": [43, 244, 276, 360], "steven": [43, 58, 125, 143, 150, 201, 244, 275, 276, 360, 411, 539, 663, 668, 862, 886], "stufflebeam": [43, 58, 125, 244, 275, 276, 360, 539, 543, 663, 666, 668], "mert": [43, 244, 276, 360], "sabuncu": [43, 244, 276, 360], "bruce": [43, 93, 154, 244, 276, 360, 528, 868], "fischl": [43, 93, 154, 244, 276, 360, 528, 868], "marc": [43, 244, 276, 360], "brysbaert": [43, 244, 276, 360], "languag": [43, 150, 171, 201, 230, 236, 244, 261, 264, 265, 266, 267, 273, 274, 276, 360, 411, 418, 479, 480, 560, 561, 706, 708, 710, 786, 793, 797, 806, 809, 814, 849, 870, 886], "asymmetri": [43, 244, 276, 360], "1477": [43, 244, 276, 360], "1492": [43, 244, 276, 360, 861], "1162": [43, 244, 276, 360, 561], "jocn_a_00405": [43, 244, 276, 360], "morph_surface_stc": [43, 56], "affin": [44, 155, 179, 181, 276, 360, 367, 590, 629, 637, 742, 743, 744, 841, 868, 886], "nonlinear": [44, 244, 692], "symmetr": [44, 201, 244, 264, 265, 266, 267, 271, 272, 275, 276, 278, 279, 280, 360, 446, 447, 449, 450, 479, 480, 590, 693, 694, 696, 697, 707, 718, 742, 743, 744, 754, 773, 812, 817, 818, 886], "diffeomorph": [44, 244, 276, 360, 590, 742, 743, 744, 886], "sdr": [44, 179, 276, 360, 590, 742, 743, 744, 886], "afterward": [44, 148, 264, 265, 266, 267, 479, 480, 650, 670, 886], "nibabel": [44, 155, 159, 170, 181, 277, 471, 472, 473, 588, 754, 844, 868, 886], "fetch_fsaverag": [44, 124, 134, 158, 179, 189, 862, 876, 886], "plot_glass_brain": [44, 181], "sample_dir_raw": [44, 174], "fname_t1_fsaverag": 44, "ensur": [44, 45, 82, 111, 143, 148, 158, 160, 161, 179, 201, 202, 205, 207, 209, 210, 223, 261, 264, 265, 266, 267, 269, 270, 271, 272, 275, 278, 279, 280, 320, 341, 354, 445, 446, 479, 480, 481, 525, 552, 553, 554, 564, 593, 594, 625, 706, 707, 708, 709, 710, 722, 723, 732, 736, 749, 843, 845, 867, 868, 886], "exist": [44, 98, 100, 126, 139, 142, 148, 149, 155, 160, 169, 170, 171, 175, 179, 200, 201, 202, 205, 206, 207, 217, 221, 226, 228, 256, 258, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 276, 277, 278, 279, 280, 288, 307, 308, 309, 312, 313, 372, 377, 378, 379, 380, 382, 383, 384, 386, 387, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 433, 437, 441, 442, 443, 444, 446, 463, 479, 480, 481, 494, 498, 512, 546, 548, 550, 560, 561, 564, 571, 594, 613, 623, 643, 644, 647, 650, 651, 652, 656, 658, 659, 676, 677, 680, 706, 707, 708, 709, 710, 739, 742, 754, 777, 793, 808, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 839, 840, 845, 853, 861, 862, 865, 867, 872, 874, 886], "fname_src_fsaverag": 44, "root": [44, 81, 134, 135, 148, 149, 150, 158, 171, 179, 189, 223, 261, 266, 267, 271, 272, 275, 278, 279, 280, 297, 298, 380, 386, 403, 779, 788, 845, 868, 886], "txt": [44, 134, 158, 179, 182, 216, 217, 258, 330, 339, 386, 482, 486, 504, 611, 619, 620, 831, 843, 845, 865, 886], "zoom": [44, 70, 150, 159, 179, 204, 206, 276, 360, 744, 886], "reslic": [44, 179, 360, 744], "isotrop": [44, 868], "niter_affin": [44, 179, 276, 360, 886], "niter_sdr": [44, 179, 276, 360, 886], "999999888241291": 44, "translat": [44, 134, 155, 159, 179, 188, 209, 234, 256, 264, 265, 266, 267, 350, 365, 411, 418, 432, 490, 561, 565, 593, 706, 744, 754, 770, 785, 790, 793, 798, 801, 871, 886], "optim": [44, 59, 81, 141, 156, 159, 161, 178, 179, 200, 201, 204, 209, 226, 234, 235, 236, 244, 266, 267, 270, 354, 411, 454, 476, 479, 480, 561, 571, 593, 683, 735, 738, 744, 841, 865, 886], "r\u00b2": [44, 179], "rigid": [44, 179, 211, 744], "compute_vol_morph_mat": [44, 276, 360, 886], "equival": [44, 134, 140, 149, 155, 157, 159, 161, 164, 170, 185, 186, 188, 201, 204, 207, 222, 226, 239, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 278, 279, 280, 297, 298, 312, 353, 411, 417, 418, 451, 454, 455, 474, 476, 477, 479, 480, 522, 528, 539, 560, 561, 564, 566, 576, 582, 623, 652, 670, 693, 706, 708, 710, 722, 732, 736, 737, 744, 754, 770, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 812, 814, 816, 817, 841, 845, 861, 865, 868, 871, 872, 886], "reus": [44, 74, 136, 266, 267, 706, 790, 868], "exce": [44, 226, 259, 264, 265, 266, 267, 341, 343, 411, 418, 479, 480, 563, 566, 578, 693, 793, 807, 886], "thousand": [44, 100, 205, 227, 244, 360, 394, 862, 886], "nifti1": [44, 276, 279, 280], "img_fsaverag": 44, "t1_fsaverag": 44, "plot_anat": [44, 175], "draw_cross": 44, "overlai": [44, 154, 159, 171, 179, 204, 271, 272, 275, 278, 279, 280, 561, 754, 798, 812, 817, 886], "add_overlai": [44, 754], "brian": [44, 194, 244, 276, 360, 417, 868], "avant": [44, 244, 276, 360], "epstein": [44, 244, 276, 360], "murrai": [44, 150, 244, 276, 360], "grossman": [44, 244, 276, 360], "jame": [44, 201, 244, 276, 360], "gee": [44, 244, 276, 360], "autom": [44, 82, 112, 120, 143, 155, 161, 162, 163, 164, 165, 170, 198, 199, 200, 203, 204, 209, 244, 256, 266, 267, 269, 276, 354, 360, 365, 389, 484, 644, 653, 770, 794, 822, 853, 865, 868, 874, 886], "elderli": [44, 244, 276, 360], "neurodegen": [44, 244, 276, 360], "medic": [44, 59, 205, 206, 244, 255, 276, 360, 476, 477, 528, 868, 873], "media": [44, 244, 276, 360], "2007": [44, 179, 231, 244, 276, 360, 474, 561, 693, 694, 696, 697, 735, 738], "morph_volume_stc": [44, 56], "megin": [45, 155, 593, 886], "program": [45, 150, 160, 171, 256, 262, 264, 265, 266, 267, 269, 274, 307, 470, 471, 479, 480, 561, 708, 710, 782, 784, 801, 807, 810, 845, 849, 850, 851, 852, 868, 870, 871], "offer": [45, 180, 195, 201, 207, 223, 226, 227, 257, 258, 754, 843, 845, 872, 874, 886], "guid": [45, 154, 269, 843, 849, 864, 867, 869, 886], "ecd": [45, 164, 185, 186, 262, 263, 266, 267, 268, 269, 279, 353, 454, 522, 623, 670, 841, 886], "manual": [45, 82, 119, 126, 136, 141, 148, 150, 155, 156, 159, 160, 161, 171, 181, 187, 189, 191, 198, 199, 200, 202, 205, 209, 244, 257, 260, 269, 270, 318, 328, 354, 375, 432, 446, 561, 571, 572, 582, 593, 594, 646, 777, 851, 862, 865, 868, 871, 886], "advantag": [45, 112, 136, 149, 150, 166, 167, 201, 203, 204, 207, 211, 226, 241, 843, 853], "graphic": [45, 154, 188, 264, 265, 274, 471, 479, 480, 561, 784, 801, 807, 845, 849, 851, 852, 862, 886], "read_dipol": [45, 115, 262, 263, 454, 876, 886], "everyth": [45, 103, 111, 126, 134, 158, 159, 168, 177, 181, 190, 201, 215, 266, 267, 792, 843, 845, 847, 862, 863, 865], "read_vectorview_select": [45, 223, 228, 876, 886], "audvi": [45, 862], "evoked_left": [45, 210], "evoked_right": [45, 210], "09989760657919393": [45, 61], "80m": 45, "picks_left": 45, "evoked_fit_left": 45, "cov_fit_left": 45, "picks_right": 45, "evoked_fit_right": 45, "cov_fit_right": 45, "sss": [45, 161, 164, 198, 208, 213, 214, 264, 265, 266, 267, 269, 341, 343, 347, 348, 351, 371, 432, 479, 480, 500, 561, 572, 582, 593, 623, 784, 788, 796, 807, 865, 868, 886], "normalize_proj": [45, 269, 886], "dip_left": 45, "dip_right": 45, "153": [45, 168, 195, 208, 226, 231, 403], "38720": [45, 181], "58607874e": 45, "29495097e": 45, "04486582e": 45, "78988420e": 45, "81501987e": 45, "79536167e": 45, "22800262e": 45, "50545865e": 45, "24472969e": 45, "41763741e": 45, "51116585e": 45, "49899073e": 45, "11191910e": 45, "30776654e": 45, "58725785e": 45, "82015291e": 45, "83338121e": 45, "85132759e": 45, "76790821e": 45, "26581206e": 45, "61643686e": 45, "354": [45, 80, 111, 168, 175, 180, 195, 208, 231], "195": [45, 165, 168, 175, 180, 208, 226, 230, 231, 244], "9828": [45, 886], "69262885e": 45, "19272571e": 45, "91546253e": 45, "01298483e": 45, "64516797e": 45, "19806525e": 45, "33734643e": 45, "87121666e": 45, "27849772e": 45, "17670368e": 45, "61094719e": 45, "47048282e": 45, "57358697e": 45, "03235995e": 45, "14274862e": 45, "19294391e": 45, "09342253e": 45, "00283865e": 45, "12915739e": 45, "54166863e": 45, "75855684e": 45, "149": [45, 89, 160, 163, 168, 180, 195, 208, 226, 231, 277], "116": [45, 168, 195, 208, 226, 230, 231], "9340": [45, 886], "prevent": [45, 70, 119, 199, 209, 256, 513, 566, 588, 593, 671, 886], "lambda": [45, 67, 99, 111, 144, 195, 210, 222, 241, 261, 264, 265, 266, 267, 273, 314, 411, 418, 479, 480, 536, 560, 561, 576, 672, 706, 708, 710, 771, 778, 785, 793, 797, 806, 809, 814, 868, 871], "fulli": [45, 74, 171, 200, 202, 226, 230, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 320, 479, 480, 481, 687, 754, 773, 812, 817, 818, 843, 886], "make_forward_dipol": [45, 175, 876, 886], "stc_left": 45, "stc_right": 45, "sharei": [45, 73, 112, 113, 194, 206, 241], "supylabel": 45, "meter": [45, 80, 92, 93, 150, 155, 156, 159, 169, 175, 181, 191, 206, 221, 256, 261, 262, 264, 265, 266, 267, 269, 270, 273, 282, 312, 328, 337, 365, 411, 418, 432, 479, 480, 495, 504, 519, 560, 561, 565, 570, 571, 572, 576, 582, 593, 598, 599, 617, 627, 655, 701, 706, 708, 710, 754, 771, 778, 782, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 868, 886], "kb": [45, 50, 136, 142, 175, 180, 207, 221], "161": [45, 168, 195, 204, 231], "7006": 45, "97034e": 45, "stcs_left": 45, "stcs_right": 45, "90m": 45, "amplitudes_left": 45, "amplitudes_right": 45, "vstack": [45, 114, 135, 140, 183, 223], "ampltud": 45, "n_left": 45, "mean_left": 45, "mean_right": 45, "transition_point": 45, "c0": [45, 150, 205], "c1": [45, 70, 111, 150, 205], "text": [45, 68, 126, 134, 141, 150, 159, 176, 182, 187, 188, 190, 191, 201, 202, 205, 206, 216, 217, 226, 241, 256, 264, 265, 277, 332, 479, 480, 504, 620, 671, 754, 831, 845, 849, 861, 868, 886], "610": [45, 56, 80, 195, 208, 235, 238], "multi_dipole_model": [45, 56], "promot": [46, 59], "focal": [46, 59, 82, 179, 561, 754, 822, 886], "assum": [46, 59, 63, 92, 93, 114, 122, 134, 140, 143, 150, 157, 159, 164, 171, 181, 187, 188, 191, 200, 201, 204, 211, 217, 226, 228, 230, 241, 256, 258, 261, 262, 264, 265, 266, 267, 270, 273, 277, 297, 298, 303, 304, 307, 312, 325, 337, 354, 358, 359, 365, 369, 370, 371, 373, 411, 418, 430, 438, 446, 452, 453, 454, 455, 461, 474, 476, 477, 479, 480, 486, 487, 494, 509, 519, 523, 531, 539, 560, 561, 575, 576, 613, 620, 639, 642, 644, 655, 671, 693, 694, 696, 697, 700, 701, 706, 708, 709, 710, 742, 754, 770, 771, 778, 786, 788, 790, 793, 794, 795, 796, 797, 804, 806, 808, 809, 810, 814, 816, 834, 841, 845, 850, 853, 868, 871, 872, 886], "stationar": [46, 59, 450, 479, 480], "properti": [46, 59, 74, 100, 113, 126, 142, 160, 171, 188, 194, 199, 204, 205, 215, 218, 257, 258, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 302, 365, 410, 479, 480, 547, 561, 578, 579, 594, 656, 671, 688, 706, 707, 708, 709, 710, 741, 754, 756, 773, 782, 784, 788, 794, 795, 797, 799, 807, 812, 817, 818, 822, 872, 886], "bias": [46, 70, 150, 165, 179, 199, 201, 206, 230, 244, 455, 886], "short": [46, 59, 65, 81, 102, 111, 113, 126, 135, 136, 139, 159, 167, 171, 198, 201, 205, 206, 208, 210, 217, 227, 239, 241, 244, 264, 265, 266, 267, 479, 480, 496, 598, 601, 708, 710, 711, 714, 721, 722, 725, 729, 732, 841, 845, 862, 868, 869, 886], "transient": [46, 81, 198, 209, 241, 566], "mathurin": [46, 244, 886], "massia": [46, 244, 886], "yousra": [46, 51, 92, 125, 244, 476, 477, 886], "bekhti": [46, 51, 92, 125, 244, 476, 477, 886], "tf_mixed_norm": [46, 59, 476, 876, 886], "350e": [46, 112, 240], "49948803289596966": 46, "301": [46, 96, 101, 113, 168, 190, 208, 239, 871], "16610": 46, "multidict": 46, "l1_ratio": [46, 59, 477, 886], "wsize": [46, 59, 477, 721, 729, 730], "n_tfmxne_it": [46, 477], "dgap": [46, 59], "89e": 46, "p_obj": [46, 59], "289": [46, 148, 168, 194, 208, 226, 230, 231, 244, 417, 561], "000835": 46, "d_obj": [46, 59], "190": [46, 59, 75, 80, 115, 168, 183, 195, 208, 231, 244, 693, 694, 696, 697], "083203": 46, "n_activ": [46, 59, 209, 348], "247": [46, 168, 211, 230, 231, 244, 862], "27e": 46, "253": [46, 79, 84, 168, 208, 230, 244], "327890": 46, "582652": 46, "53e": 46, "707285": 46, "182101": 46, "18e": 46, "589468": 46, "408712": 46, "82e": 46, "243688": 46, "248": [46, 84, 122, 168, 208, 210, 226], "420556": 46, "67e": [46, 59], "094971": 46, "57e": 46, "991067": 46, "49e": [46, 59], "936498": 46, "442467": 46, "08e": 46, "906871": 46, "829870": 46, "70e": 46, "887205": 46, "017223": 46, "24e": 46, "872107": 46, "148583": 46, "11e": 46, "762424": 46, "94e": 46, "854012": 46, "259629": 46, "659": [46, 167, 231], "867870": 46, "46e": 46, "043596": 46, "270": [46, 80, 168, 190, 231, 886], "587841": 46, "87e": 46, "722230": 46, "272": [46, 118, 168, 170, 226, 244, 663, 668], "856399": 46, "29e": 46, "678013": 46, "849283": 46, "335": [46, 108, 111, 168, 195, 208, 231, 244, 868], "966495": 46, "73e": 46, "239": [46, 68, 80, 81, 157, 168, 190, 202, 208, 226, 230, 231], "215341": 46, "236": [46, 72, 84, 111, 168, 226, 230, 231], "481796": 46, "17e": 46, "095509": 46, "238": [46, 168, 227, 231], "178504": 46, "77e": 46, "068507": 46, "591286": 46, "298": [46, 75, 168, 208, 226, 231], "546285": 46, "06e": 46, "223": [46, 168, 208, 226, 230, 231], "133013": 46, "826666": 46, "295": [46, 48, 56, 95, 101, 105, 111, 168, 208, 231], "194637": 46, "debias": [46, 59], "d0": [46, 59], "235927e": 46, "000000e": [46, 59], "irtf": 46, "2015": [46, 71, 98, 100, 112, 120, 161, 201, 204, 227, 241, 244, 266, 267, 354, 389, 394, 570, 692, 735, 738, 794, 862, 865, 874], "intern": [46, 70, 71, 82, 126, 132, 135, 159, 167, 169, 182, 189, 191, 199, 206, 209, 212, 228, 244, 264, 265, 266, 267, 312, 354, 359, 365, 390, 411, 432, 479, 480, 494, 500, 558, 561, 569, 570, 571, 572, 582, 593, 623, 692, 693, 706, 707, 708, 709, 710, 754, 800, 845, 886], "workshop": [46, 244, 411], "roland": [46, 244, 477], "badeau": [46, 244, 477], "trento": [46, 244, 477], "7552337": [46, 244, 477], "864": [46, 56, 194, 277], "280": [46, 80, 111, 168, 169, 208, 226, 231, 338, 886], "multidict_reweighted_tfmxn": [46, 56], "plane": [47, 155, 169, 205, 228, 231, 240, 431, 659, 734, 737, 772, 841, 868], "olaf": [47, 48, 49, 50, 54, 55, 100, 244, 543, 663, 668, 886], "hauk": [47, 48, 49, 50, 54, 55, 100, 244, 543, 663, 668, 886], "mrc": [47, 48, 49, 50, 54, 55, 868], "cbu": [47, 48, 49, 50, 54, 55, 868], "cam": [47, 48, 49, 50, 54, 55, 868], "ac": [47, 48, 49, 50, 54, 55, 189, 198, 202, 244, 354, 371, 841, 868], "uk": [47, 48, 49, 50, 54, 55, 244, 354, 868], "rougier": 47, "borrow": [47, 230, 236], "hi": [47, 256], "make_inverse_resolution_matrix": [47, 48, 50, 54, 55, 876, 886], "get_point_spread": [47, 48, 50, 876, 886], "circular_layout": [47, 876], "plot_connectivity_circl": [47, 776], "rm_mne": [47, 54], "n_label": [47, 222, 271, 272, 275, 278, 279, 280, 445, 515, 673], "label_color": [47, 464], "lh_label": [47, 754], "endswith": [47, 169], "label_ypo": 47, "ypo": 47, "yp": 47, "rh_label": [47, 754], "summaris": [47, 211], "five": [47, 141, 149, 170, 182, 208, 218, 244, 341, 479, 480, 561, 754, 799, 868], "princip": [47, 204, 205, 244, 270, 354, 561, 683, 868, 886], "probabl": [47, 70, 164, 187, 198, 199, 200, 201, 204, 205, 226, 228, 231, 241, 415, 421, 440, 479, 480, 491, 754, 811, 843, 845, 850, 851, 852, 868], "n_comp": [47, 537, 538], "stcs_psf_mne": 47, "pca_vars_mn": 47, "return_pca_var": [47, 537, 538], "n_vert": 47, "printopt": 47, "caudalanteriorcingul": 47, "caudalmiddlefront": [47, 89, 94, 134], "cuneu": [47, 754], "entorhin": 47, "frontalpol": 47, "fusiform": 47, "inferiorpariet": [47, 222], "inferiortempor": 47, "insula": 47, "isthmuscingul": 47, "lateraloccipit": 47, "lateralorbitofront": 47, "lingual": 47, "medialorbitofront": 47, "middletempor": 47, "paracentr": 47, "parahippocamp": [47, 68], "parsoperculari": 47, "parsorbitali": 47, "parstriangulari": 47, "pericalcarin": 47, "postcentr": [47, 68], "posteriorcingul": 47, "precentr": [47, 134], "precuneu": 47, "rostralanteriorcingul": 47, "rostralmiddlefront": [47, 222], "superiorfront": [47, 134], "superiorpariet": 47, "superiortempor": 47, "supramargin": 47, "temporalpol": 47, "transversetempor": [47, 222], "overal": [47, 126, 206, 228, 234, 235, 477, 867, 886], "bigger": [47, 80, 126, 235, 479, 480], "leaker": 47, "psfs_mat": 47, "pearson": [47, 201, 204, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 561, 706, 709], "arbitrari": [47, 114, 159, 164, 165, 166, 170, 191, 201, 212, 221, 224, 228, 231, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 411, 418, 479, 480, 496, 561, 579, 584, 693, 694, 696, 697, 706, 708, 709, 710, 786, 793, 800, 806, 814, 867, 868, 886], "absolut": [47, 60, 81, 85, 122, 128, 134, 150, 178, 188, 226, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 358, 411, 479, 480, 482, 537, 538, 543, 561, 578, 605, 655, 667, 699, 706, 709, 772, 778, 798, 818, 841, 845, 851, 886], "leakage_mn": 47, "node_ord": [47, 759], "mirror": [47, 67, 70, 169, 264, 265, 266, 267, 271, 275, 279, 280, 449, 450, 451, 479, 480, 769, 773, 812, 818, 874, 886], "node_angl": [47, 759], "start_po": [47, 759], "group_boundari": [47, 759], "subplot_kw": 47, "n_line": 47, "node_color": 47, "neighbour": [47, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 786, 793, 797, 806, 809, 814, 816, 886], "deeper": [47, 54, 55, 179, 868], "versu": [47, 140, 150, 165, 216, 223, 299, 853], "fname_fig": 47, "plot_label_leakag": 47, "savefig": [47, 114], "inde": [47, 70, 140, 167, 174, 205, 206, 241, 843], "max_val": 47, "brain_lh": 47, "caudal": [47, 89, 94, 754], "pos_lim": [47, 54, 55, 179, 222, 234, 271, 272, 275, 278, 279, 280, 773, 812, 817, 818], "brain_rh": 47, "466": [47, 56, 226, 231], "psf_ctf_label_leakag": [47, 56], "get_cross_talk": [48, 49, 876, 886], "fname_evo": [48, 49, 50, 54, 55, 64], "regularis": [48, 54, 55, 540], "rm_lor": 48, "stc_psf": 48, "stc_ctf": 48, "31738": [48, 54, 55], "68644e": [48, 54, 55], "vertno_lh": 48, "verttru": [48, 49], "maxima": [48, 144, 266, 267, 602, 791, 793, 886], "vert_max_psf": 48, "vert_max_ctf": 48, "brain_psf": 48, "ventral": [48, 754], "add_foci": [48, 49, 50, 159, 174, 176, 223, 754, 886], "coords_as_vert": [48, 49, 50, 174, 176, 223, 754], "22842778": 48, "2956258": 48, "85246681": 48, "brain_ctf": 48, "10932369": 48, "16149934": 48, "93351158": 48, "438": [48, 49, 54, 55, 56, 208], "psf_ctf_vertic": [48, 56], "make_lcmv_resolution_matrix": [49, 876, 886], "vi": [49, 149, 231, 264, 778], "cov_pr": 49, "post": [49, 119, 179, 201, 206, 209, 841, 845, 851, 852, 864, 865, 867], "cov_post": 49, "4433": 49, "filters_pr": 49, "weight_norm": [49, 179, 223, 297, 298, 886], "filters_post": 49, "rm_pre": 49, "stc_pre": 49, "rm_post": 49, "stc_post": 49, "brain_pr": 49, "ndata": 49, "brain_post": 49, "034": [49, 56, 139, 148, 168, 223], "psf_ctf_vertices_lcmv": [49, 56], "coars": 50, "don": [50, 94, 114, 116, 119, 140, 143, 144, 145, 156, 157, 158, 161, 167, 170, 199, 202, 204, 205, 206, 215, 228, 229, 230, 231, 236, 241, 256, 259, 264, 265, 372, 490, 491, 550, 594, 610, 617, 619, 655, 693, 696, 845, 846, 851, 853, 865, 867, 869, 886], "src_vol": 50, "forward_vol": 50, "3375": 50, "1045": 50, "895": [50, 231], "015000": [50, 207], "304": [50, 108, 111, 123, 149, 168, 170, 183, 195, 208, 226, 227, 886], "158": [50, 80, 84, 168, 195, 230, 231], "488": [50, 166, 208, 231], "403": [50, 80, 195, 226, 231], "194": [50, 168, 194, 195, 208, 226, 231, 244, 868, 886], "492": [50, 194, 208], "inverse_operator_vol": 50, "rm_lor_vol": 50, "sources_vol": 50, "stc_psf_vol": 50, "383": [50, 80, 84, 208, 231], "140193": 50, "7904e": 50, "66519": 50, "31885e": 50, "1209": 50, "verttrue_vol": 50, "max_vert_idx": 50, "unravel_index": [50, 180, 228], "vert_max_ctf_vol": 50, "brain_psf_vol": 50, "plot_3d": [50, 134, 179, 279, 280, 886], "volume_opt": [50, 271, 272, 275, 278, 279, 280, 754, 812, 817], "32501697": 50, "38884743": 50, "87974682": 50, "397": [50, 56, 80, 231], "psf_volum": [50, 56], "recurs": [51, 159, 201, 244, 256, 271, 275, 279, 300, 654, 812], "rap_mus": [51, 56, 454, 876, 886], "n100": [51, 165, 190, 201, 206], "1834": 51, "ori": [51, 175, 179, 182, 184, 223, 262, 297, 298, 431, 454], "24703241413887647": 51, "776432601481173": 51, "5797649538579378": 51, "5304": 51, "5154591819142723": 51, "5345116894131523": 51, "6697753994145853": 51, "332": [51, 111, 168, 190, 226, 231, 244, 300], "1999": [51, 111, 241, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 300, 354, 479, 480, 561, 591, 706, 709, 868], "740118": [51, 244, 300], "692": [51, 56, 95, 108, 143, 195, 231, 241], "inv_fnam": 52, "fmri": [52, 195, 244, 476, 477, 528, 841, 862, 868, 871], "fmri_prior": 52, "rr": [52, 159, 160, 174, 177, 277, 342, 344, 345, 346, 636, 639, 655, 675, 834, 871], "use_tri": [52, 159, 277, 871], "8192": [52, 181, 184, 410], "942": [52, 56, 231], "read_invers": [52, 56], "nb": [53, 479, 480], "706": [53, 56, 143, 195, 208, 231], "read_stc": [53, 56], "localis": [54, 55, 184, 226, 227, 244, 543, 693, 694, 696, 697], "mimic": [54, 55, 412, 435, 528], "resolution_metr": [54, 55, 56, 876, 886], "ple": [54, 55, 543], "sd": [54, 55, 241, 668, 708, 710], "ple_mne_psf": 54, "peak_err": [54, 55, 543], "sd_mne_psf": 54, "sd_ext": [54, 55, 543], "rm_dspm": 54, "ple_dspm_psf": 54, "sd_dspm_psf": 54, "brain_ple_mn": 54, "brain_ple_dspm": 54, "subtract": [54, 55, 65, 70, 73, 106, 112, 119, 133, 140, 150, 175, 201, 207, 209, 226, 228, 256, 259, 260, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 287, 297, 298, 353, 354, 358, 359, 369, 370, 371, 411, 418, 419, 454, 455, 474, 476, 477, 479, 480, 481, 539, 544, 545, 561, 562, 578, 593, 623, 624, 647, 650, 693, 696, 706, 709, 794, 814, 841, 868, 871, 886], "diff_pl": [54, 55], "brain_ple_diff": [54, 55], "superfici": [54, 179, 868], "brain_sd_mn": 54, "brain_sd_dspm": 54, "diff_sd": [54, 55], "brain_sd_diff": [54, 55], "wors": [54, 170, 593, 861], "distinguish": [54, 72, 150, 171, 195, 198, 199, 200, 203, 204, 206, 215, 361, 841, 886], "stenroo": [54, 55, 244, 543, 663, 668], "matthia": [54, 55, 244, 543, 886], "treder": [54, 55, 244, 543], "kit": [54, 55, 169, 170, 183, 226, 244, 269, 338, 346, 432, 504, 523, 543, 572, 582, 593, 619, 868, 876, 877, 886], "biorxiv": [54, 55, 223, 244, 297, 298, 543], "2019": [54, 55, 65, 75, 140, 207, 210, 226, 231, 244, 543, 577, 600, 693, 694, 696, 697, 720, 722, 732, 735, 736, 738, 844, 851], "1101": [54, 55, 113, 223, 244, 297, 298, 543], "672956": [54, 55, 244, 543], "516": [54, 56, 143, 157, 231], "resolution_matrix": 55, "spatial_resolut": 55, "fname_fwd_emeg": 55, "forward_emeg": 55, "forward_meg": 55, "pick_types_forward": [55, 68, 91, 284, 285, 876], "inv_emeg": 55, "inv_meg": 55, "63485": 55, "05542e": 55, "rm_emeg": 55, "ple_psf_emeg": 55, "sd_psf_emeg": 55, "rm_meg": 55, "ple_psf_meg": 55, "sd_psf_meg": 55, "brain_ple_emeg": 55, "emeg": [55, 874], "brain_ple_meg": 55, "bring": [55, 70, 155, 180, 204, 217, 269, 279, 280, 432, 572, 582, 593, 818, 868, 871], "brain_sd_emeg": 55, "brain_sd_meg": 55, "160": [55, 56, 80, 81, 83, 122, 168, 169, 170, 187, 208, 230, 231, 244, 338, 539, 573, 583, 586, 663, 668], "resolution_metrics_eegmeg": [55, 56], "554": [56, 195, 231], "auto_examples_invers": 56, "vector_mne_solut": [56, 60], "722": [56, 102, 195, 231, 244, 722, 732, 733, 736], "279": [56, 71, 84, 168, 195, 202, 208, 226, 231, 244, 561, 735, 738], "time_frequency_mixed_norm_invers": [56, 59], "882": [56, 59, 231], "220": [56, 80, 136, 168, 208, 215, 220, 231], "source_space_snr": [56, 58], "442": [56, 214, 226, 231], "snr_estim": [56, 57], "352": [56, 57, 69, 80, 168, 170, 208, 231], "plot_snr_estim": [57, 876, 886], "padma": [58, 244, 577, 886], "sundaram": [58, 244, 577, 886], "tottochan": 58, "kaisu": [58, 886], "lankinen": [58, 886], "klankinen": 58, "inv_op": [58, 222], "snr_stc": [58, 275], "estimate_snr": [58, 275, 876, 886], "maxidx": 58, "med": [58, 93, 135, 165, 195, 222], "viridi": [58, 100, 126, 135, 142, 226, 707, 796], "70263": [58, 177], "18949e": [58, 177], "evoked_eeg": [58, 148, 206], "inv_op_eeg": 58, "stc_eeg": 58, "snr_stc_eeg": 58, "7499": [58, 89], "118742": [58, 89], "155292": [58, 89], "81981": 58, "0644e": 58, "goldenholz": [58, 244, 275], "seppo": [58, 244, 275, 539, 663, 668], "ahlfor": [58, 244, 275, 432, 539, 663, 668], "dahlia": [58, 244, 275], "sharon": [58, 244, 275], "mamiko": [58, 244, 275], "ishitobi": [58, 244, 275], "lucia": [58, 125, 244, 275], "vaina": [58, 125, 244, 275], "magnetoencephalographi": [58, 156, 177, 244, 275, 666, 735, 738, 868], "1086": [58, 208, 244, 275], "1002": [58, 83, 177, 239, 244, 264, 265, 266, 267, 275, 479, 480, 601, 659, 695, 708, 710, 718, 724, 861], "hbm": [58, 177, 244, 275, 695, 861], "20571": [58, 244, 275], "built": [59, 139, 149, 150, 156, 158, 164, 165, 166, 174, 180, 202, 204, 210, 215, 219, 220, 226, 262, 264, 265, 266, 267, 269, 304, 328, 329, 338, 366, 440, 462, 463, 471, 479, 480, 500, 519, 523, 589, 640, 674, 701, 710, 743, 754, 770, 845, 851, 857, 865, 866, 886], "fourier": [59, 102, 201, 239, 241, 244, 264, 265, 266, 267, 479, 480, 708, 710, 711, 714, 718, 721, 722, 724, 725, 729, 732, 733, 734, 736, 737], "stft": [59, 477, 721, 730, 841, 876, 886], "henc": [59, 113, 141, 149, 155, 161, 174, 189, 203, 206, 215, 226, 239, 241, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 479, 480, 706, 709, 767, 841, 852, 865], "trap": 59, "minima": [59, 602], "slightli": [59, 70, 126, 159, 179, 183, 201, 206, 209, 210, 221, 230, 264, 265, 266, 267, 270, 359, 479, 480, 531, 539, 683, 754, 791, 861, 862, 868, 886], "eventu": [59, 135, 318, 329, 580, 845, 861], "020865": [59, 93, 177, 223], "96729": 59, "38524e": 59, "985": [59, 65, 66, 208, 231], "descent": [59, 244, 476, 886], "4411": 59, "845726": 59, "4408": [59, 183, 190], "353441": 59, "4410": 59, "859492": 59, "292946": 59, "51e": 59, "670058": 59, "519426": 59, "61e": 59, "669663": 59, "668049": 59, "546628e": 59, "049948803289596964": [59, 94, 178, 180], "2996928197375818": [59, 139, 148, 150, 228], "10e": [59, 68, 89, 94], "15e": 59, "20e": [59, 264, 265, 274, 479, 480, 784, 807], "medial": [59, 236, 693, 694, 754], "yellow": [59, 206, 266, 267, 769, 788, 805], "scalar_thresh": [59, 754], "stationari": [59, 79, 204, 206, 211, 244, 347, 477, 861], "410": [59, 71, 80, 82, 128, 198, 202, 206, 208, 218, 231, 239, 244, 477], "422": [59, 226, 244, 477], "051": [59, 139, 141, 148, 168, 199, 223, 244, 477], "sparsiti": [59, 244, 477, 666], "g\u00e1bor": [59, 244, 477], "sz\u00e9keli": [59, 244, 477], "horst": [59, 244, 477], "hahn": [59, 244, 477], "editor": [59, 190, 244, 332, 474, 477, 561, 735, 738, 845, 849, 863], "6801": [59, 244, 477], "page": [59, 171, 201, 218, 244, 264, 265, 329, 388, 477, 479, 480, 561, 722, 732, 733, 735, 736, 738, 754, 784, 807, 843, 845, 846, 849, 851, 852, 857, 860, 861, 864, 865, 866, 867, 868, 869, 886], "611": [59, 208, 231, 244, 354, 477], "springer": [59, 223, 244, 297, 298, 388, 477, 561], "berlin": [59, 223, 244, 297, 298, 477], "heidelberg": [59, 223, 244, 297, 298, 477], "1007": [59, 150, 205, 206, 207, 223, 244, 297, 298, 411, 477, 528, 561, 577, 671, 868], "22092": [59, 244, 477], "0_49": [59, 244, 477], "221": [59, 145, 168, 208, 230, 231], "magnitud": [60, 63, 70, 111, 112, 134, 141, 144, 148, 149, 165, 167, 177, 179, 198, 199, 201, 216, 223, 234, 235, 272, 278, 280, 354, 411, 432, 455, 536, 566, 572, 582, 593, 602, 698, 795, 817, 843, 865, 886], "accomplish": [60, 134, 148, 160, 170, 843, 851, 861, 862, 868], "plot_vector_source_estim": [60, 819, 876, 886], "hood": [60, 126, 142, 188, 198, 201, 205, 886], "plot_source_estim": [60, 754, 819, 876, 886], "instruct": [60, 115, 160, 188, 210, 470, 843, 844, 845, 846, 847, 849, 850, 851, 852, 856, 859, 865, 871, 886], "impos": [60, 194, 200, 722, 732, 736, 886], "underli": [60, 159, 165, 201, 205, 226, 227, 239, 244, 258, 262, 263, 264, 265, 266, 267, 270, 271, 272, 275, 278, 279, 280, 411, 479, 480, 485, 584, 706, 709, 744, 886], "getter": [60, 176, 886], "peak_tim": [60, 174], "get_peak": [60, 126, 148, 150, 174, 176, 177, 179, 266, 267, 271, 272, 275, 278, 279, 280, 886], "time_dil": [60, 134, 135, 176, 180, 754], "framer": [60, 134, 135, 176, 180, 754], "95048065": 60, "56941314": 60, "72451438": 60, "stc_max": 60, "cosin": [60, 89, 201, 221, 661, 868], "source_nn": [60, 268, 297, 298, 871], "brain_max": 60, "975978731472672": 60, "90575168": 60, "52414196": 60, "71336747": 60, "brain_norm": 60, "83607509": 60, "44726242": 60, "57923594": 60, "lot": [60, 70, 126, 151, 157, 159, 165, 168, 199, 201, 203, 204, 205, 210, 215, 217, 359, 365, 430, 461, 613, 642, 644, 834, 845], "fname_inv_fix": 60, "inv_fix": 60, "stc_fix": 60, "brain_fix": [60, 177], "00351751": 60, "62842071": 60, "43519503": 60, "pars": [61, 139, 150, 164, 170, 172, 173, 189, 200, 216, 257, 258, 264, 269, 283, 440, 452, 459, 479, 487, 494, 495, 502, 521, 551, 620, 841, 886], "elekta": [61, 83, 155, 164, 185, 186, 209, 257, 261, 262, 264, 265, 266, 267, 269, 274, 302, 354, 431, 452, 454, 479, 480, 524, 770, 782, 784, 794, 807, 822, 857, 862, 868, 871, 886], "triux": [61, 182, 257, 264, 265, 266, 267, 390, 479, 480, 558, 706, 708, 709, 710, 862, 868], "dacq": [61, 257, 862], "acquisit": [61, 155, 159, 167, 187, 188, 189, 190, 206, 215, 244, 257, 258, 264, 265, 266, 267, 269, 283, 452, 479, 480, 481, 582, 593, 607, 671, 841, 857, 861, 868, 871, 886], "accordingli": [61, 149, 157, 177, 188, 215, 259, 264, 265, 266, 267, 470, 479, 480, 487, 494, 500, 594, 868, 886], "multimod": [61, 136, 170, 244, 872, 876, 886], "multimodal_raw": 61, "grad_ssp_upright": 61, "mag_ssp_upright": 61, "v4": [61, 208, 209], "v5": [61, 208, 209], "183600": 61, "576599": 61, "960": [61, 80, 100, 142, 227, 231, 862], "categori": [61, 111, 144, 257, 335, 624, 751, 868, 869, 886], "acqpars": [61, 257, 479, 886], "acqparserfif": [61, 269, 479, 876, 886], "get_condit": [61, 257], "plot_topo": [61, 149, 151, 165, 218, 239, 240, 264, 265, 266, 267, 321, 479, 480, 706, 708, 710, 886], "background_color": [61, 131, 266, 267, 792, 886], "cat": [61, 111], "flat": [61, 82, 110, 134, 139, 140, 149, 180, 199, 200, 201, 205, 206, 207, 209, 257, 259, 264, 265, 271, 275, 279, 357, 359, 561, 563, 573, 574, 578, 579, 582, 692, 754, 812, 841, 861, 886], "fiff": [61, 114, 155, 159, 264, 265, 268, 274, 277, 479, 480, 483, 496, 511, 512, 561, 573, 574, 740, 762, 862, 886], "fname_out": [61, 762], "write_evok": [61, 148, 266, 267, 442, 623, 865, 876, 886], "118": [61, 168, 180, 195, 226, 230, 231, 244, 561, 886], "0812": [61, 168], "0123": [61, 144, 165, 168, 215], "0942": [61, 168], "2232": [61, 168, 335], "newcat": 61, "longer": [61, 113, 144, 161, 166, 167, 171, 190, 199, 200, 201, 202, 204, 226, 241, 264, 265, 266, 267, 269, 341, 435, 446, 450, 452, 479, 480, 563, 593, 709, 733, 734, 736, 737, 754, 764, 784, 787, 845, 851, 865, 868, 886], "reqev": [61, 257], "requir": [61, 108, 134, 135, 139, 141, 143, 149, 155, 157, 160, 161, 165, 167, 169, 170, 171, 181, 188, 189, 190, 191, 195, 198, 201, 202, 204, 207, 209, 211, 212, 215, 221, 223, 226, 227, 230, 234, 256, 257, 261, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 282, 297, 298, 303, 308, 312, 354, 355, 356, 357, 359, 360, 363, 386, 410, 411, 413, 414, 418, 420, 421, 424, 427, 428, 449, 450, 452, 454, 467, 469, 472, 473, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 515, 519, 520, 522, 523, 531, 534, 535, 544, 545, 560, 561, 563, 566, 573, 574, 576, 585, 594, 602, 611, 648, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 702, 706, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 748, 754, 771, 777, 784, 786, 789, 793, 797, 801, 806, 807, 808, 809, 812, 814, 816, 817, 823, 841, 843, 846, 849, 850, 861, 862, 867, 868, 874, 886], "reqwithin": [61, 257], "reqwhen": [61, 257], "freeli": 61, "elekta_epoch": [61, 66], "scratch": [63, 139, 148, 164, 187, 189, 190, 215, 224, 225, 241, 264, 265, 266, 267, 269, 373, 479, 480, 521, 710, 725], "exampleio": 63, "fake": [63, 70, 158, 181], "won": [63, 150, 205, 206, 217, 230, 244, 264, 265, 266, 267, 360, 479, 480, 561, 623, 706, 708, 709, 710, 744], "consult": [63, 201, 205, 593, 845, 850, 851, 861, 865, 867, 868], "reader": [63, 165, 174, 187, 205, 215, 330, 478, 485, 487, 488, 489, 491, 494, 497, 498, 500, 502, 503, 504, 506, 507, 508, 509, 510, 617, 619, 621, 868, 872, 886], "fakedata": 63, "nof": 63, "lazi": 63, "analogsign": 63, "multichannel": [63, 70, 111, 150, 195, 209, 244, 432, 569, 572, 593], "sampling_r": 63, "misc": [63, 65, 79, 80, 81, 114, 134, 136, 148, 168, 170, 177, 181, 182, 184, 187, 188, 190, 191, 215, 221, 264, 265, 266, 267, 274, 311, 327, 346, 373, 444, 479, 480, 487, 489, 491, 494, 496, 502, 506, 558, 706, 708, 709, 710, 778, 784, 788, 790, 792, 807, 862, 876, 886], "show_scrollbar": [63, 75, 150, 204, 210, 221, 264, 265, 479, 480, 561, 784, 801, 807, 886], "100000": [63, 448], "99999": [63, 440], "read_neo_format": [63, 66], "ev_info": 64, "15972": 64, "27235589e": 64, "79818505e": 64, "12852747e": 64, "85348042e": 64, "02846360e": 64, "26727393e": 64, "33468523e": 64, "80261790e": 64, "33583009e": 64, "93161055e": 64, "35199238e": 64, "79073915e": 64, "09498615e": 64, "16924072e": 64, "93873875e": 64, "40677185e": 64, "27444183e": 64, "08634620e": 64, "59818134e": 64, "51070563e": 64, "53708918e": 64, "041": [64, 66, 139, 141, 148, 168, 223], "read_noise_covariance_matrix": [64, 66], "analyz": [65, 71, 139, 164, 167, 179, 191, 195, 198, 199, 201, 202, 209, 216, 217, 226, 244, 264, 265, 437, 564, 570, 689, 842, 845, 861, 868, 886], "pabr": 65, "maddox": [65, 244, 886], "lab": [65, 68, 864, 874], "clemen": [65, 111, 873, 886], "brunner": [65, 111, 873, 886], "pyxdf": [65, 188], "p001_se": 65, "s004_task": 65, "default_run": 65, "001_eeg_a2": 65, "stream": [65, 188, 199, 202, 886], "header": [65, 112, 122, 155, 159, 181, 188, 190, 266, 267, 297, 298, 339, 354, 358, 359, 369, 370, 371, 411, 418, 454, 455, 474, 476, 477, 478, 486, 489, 491, 506, 508, 509, 539, 794, 886], "load_xdf": 65, "time_seri": 65, "assert": [65, 108, 139, 143, 148, 155, 170, 190, 216, 223, 226, 228, 867, 886], "four": [65, 70, 140, 143, 150, 165, 184, 201, 226, 236, 244, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 754, 771, 786, 793, 797, 806, 809, 814, 816, 861, 868, 869], "plu": [65, 165, 167, 171, 176, 181, 201, 204, 206, 208, 230, 269, 725, 852, 863, 868, 871, 886], "rerefer": 65, "bipolar": [65, 67, 190, 203, 204, 226, 264, 265, 266, 267, 479, 480, 647, 650, 886], "subselect": [65, 115, 142, 148, 149, 150, 165, 215, 228, 231, 239, 241, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 370, 479, 480, 706, 707, 708, 709, 784, 865, 886], "uv": [65, 264, 265, 266, 267, 479, 480, 886], "preamp": 65, "nominal_sr": 65, "100e": [65, 144, 150, 200, 223], "2320128": 65, "2320127": 65, "232": [65, 118, 129, 143, 168, 186, 194, 208, 231], "013": [65, 127, 139, 140, 148, 150, 168, 223], "melissa": [65, 244], "polonenko": [65, 244], "ross": [65, 244, 886], "brainstem": [65, 244], "hear": [65, 244, 597], "2331216519871395": [65, 244], "read_xdf": [65, 66], "169": [66, 98, 168, 208, 244, 692], "auto_examples_io": 66, "mastoid": [67, 188, 207, 264, 265, 266, 267, 479, 480, 650], "bone": [67, 271, 272, 275, 278, 279, 280, 754, 812, 817], "sleep": [67, 137, 138, 164, 167, 244, 258, 264, 269, 403, 404, 440, 494, 611, 708, 787, 841, 865, 886], "ssvep_fold": [67, 169], "ssvep": [67, 164, 169, 170, 242, 243, 264, 269, 312, 328, 440, 489, 558, 708, 816, 876, 886], "ssvep_data_raw_path": [67, 169], "se": [67, 169, 200, 211, 241, 868], "02_se": [67, 169, 241], "ssvep_eeg": [67, 169, 241], "vhdr": [67, 135, 169, 241, 444, 479, 480, 611, 862, 868, 886], "read_raw": [67, 70, 134, 143, 171, 223, 256, 876, 886], "easycap": [67, 169, 226, 241, 886], "467579": 67, "467": 67, "tp9": 67, "tp10": 67, "rename_channel": [67, 74, 111, 127, 139, 148, 150, 158, 184, 210, 215, 264, 265, 266, 267, 312, 479, 480, 490, 503, 876, 886], "m2": [67, 207, 264, 265, 266, 267, 479, 480, 650, 871], "midlin": [67, 127, 168, 169, 218, 227, 324, 886], "make_1020_channel_select": [67, 127, 227, 876, 886], "return_ch_nam": [67, 324, 886], "rereferenc": [67, 166, 241], "rereferenced_midline_ch": 67, "alter": [67, 207, 209, 215, 258, 594, 886], "set_bipolar_refer": [67, 207, 264, 265, 266, 267, 479, 480, 650, 876, 886], "anod": [67, 207, 647, 886], "cathod": [67, 207, 647, 886], "strip": [67, 111, 244], "suffix": [67, 256, 274, 479, 480, 492, 886], "replac": [67, 78, 87, 100, 140, 142, 150, 158, 171, 187, 189, 200, 205, 206, 209, 215, 217, 244, 261, 264, 265, 266, 267, 273, 274, 411, 418, 433, 446, 479, 480, 491, 508, 526, 560, 561, 576, 706, 708, 710, 771, 793, 797, 806, 809, 814, 845, 849, 851, 853, 856, 868, 886], "unreferenc": [67, 647], "add_channel": [67, 70, 74, 264, 265, 266, 267, 479, 480, 561, 706, 708, 709, 710, 886], "467580": 67, "o1": [67, 70, 127, 158, 221, 241], "po9": [67, 241], "p7": [67, 70, 127, 158, 503], "p3": [67, 70, 127, 143, 158, 503], "cp5": [67, 127, 503], "cp1": [67, 70, 127], "t7": [67, 127, 158, 169, 261, 264, 265, 266, 267, 273, 312, 411, 418, 479, 480, 503, 560, 561, 576, 706, 708, 710, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 886], "c3": [67, 111, 127, 143, 158, 503], "fc1": [67, 70, 127, 478], "fc5": [67, 127, 503], "f3": [67, 70, 127, 143, 158, 207, 503], "f7": [67, 143, 158, 335, 503], "fp1": [67, 143, 158, 207, 221, 335, 447, 450, 487, 494, 579, 584], "o2": [67, 127, 158, 221, 241], "po10": [67, 241], "p8": [67, 70, 127, 158], "p4": [67, 70, 127, 143, 158], "cp6": [67, 127], "cp2": [67, 70, 127], "c4": [67, 70, 111, 127, 143, 158], "t8": [67, 70, 127, 158, 169, 261, 264, 265, 266, 267, 273, 312, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 886], "fc2": [67, 70, 127], "fc6": [67, 70, 127], "f4": [67, 70, 127, 143, 158, 169, 207], "f8": [67, 143, 158], "fp2": [67, 143, 158, 221, 335, 447, 450, 579, 584], "still": [67, 70, 74, 78, 114, 119, 141, 142, 143, 159, 170, 187, 188, 198, 199, 201, 202, 203, 205, 207, 209, 211, 215, 218, 226, 234, 264, 269, 277, 320, 365, 430, 461, 479, 561, 593, 613, 642, 644, 688, 709, 763, 777, 778, 819, 834, 843, 845, 851, 863, 874, 886], "plot_sensor": [67, 126, 141, 150, 169, 181, 189, 218, 264, 265, 266, 267, 479, 480, 876, 886], "fpz": [67, 127, 136, 169, 204, 261, 264, 265, 266, 267, 273, 312, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 886], "oz": [67, 70, 127, 136, 158, 169, 241, 261, 264, 265, 266, 267, 273, 312, 411, 418, 479, 480, 560, 561, 576, 655, 706, 708, 710, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 886], "752": [67, 84, 195, 231], "contralateral_referenc": [67, 84], "facilit": [68, 111, 134, 135, 166, 189, 195, 227, 264, 265, 266, 267, 479, 480, 706, 708, 709, 710, 861, 868, 871, 886], "subcort": [68, 244, 577, 886], "simul": [68, 70, 79, 90, 104, 105, 139, 148, 160, 175, 187, 189, 200, 201, 215, 221, 231, 234, 235, 236, 241, 244, 261, 264, 265, 266, 267, 268, 269, 270, 275, 277, 287, 354, 373, 452, 479, 480, 484, 513, 516, 522, 527, 528, 539, 558, 559, 597, 614, 620, 625, 627, 628, 631, 706, 708, 710, 719, 733, 736, 737, 738, 754, 758, 813, 862, 876, 886], "samuelsson": [68, 244, 577, 886], "johnsam": 68, "mit": [68, 71, 150, 244, 474, 570, 856, 862, 868], "simulate_sparse_stc": [68, 91, 92, 670, 671, 673, 876, 886], "simulate_evok": [68, 91, 175, 222, 522, 671, 672, 673, 876, 886], "all_label": 68, "select_label": 68, "hiplab": 68, "postcenlab": 68, "cortical_waveform": 68, "waveform": [68, 98, 201, 203, 206, 210, 244, 272, 278, 280, 656, 658, 672, 673, 692, 813, 852], "pi": [68, 89, 92, 93, 94, 113, 201, 206, 221, 222, 223, 536, 602, 672, 722, 730, 732, 736, 868], "subcortical_waveform": 68, "data_fun": [68, 91, 92, 93, 672], "isin": [68, 111, 143], "evoked_subcort": [68, 577], "cortical_signal_suppress": [68, 876, 886], "n_proj": [68, 577], "fft": [68, 107, 132, 201, 239, 241, 264, 265, 266, 267, 419, 423, 424, 479, 480, 534, 544, 545, 707, 711, 712, 713, 714, 715, 716, 718, 725, 731, 733, 734, 735, 736, 737, 738, 808, 886], "rfft": 68, "psd_proc": 68, "transax": 68, "footbibliographi": [68, 845], "put": [69, 115, 122, 126, 140, 143, 154, 155, 160, 169, 171, 181, 182, 184, 194, 201, 204, 215, 221, 222, 223, 226, 266, 267, 270, 386, 754, 788, 845, 850, 886], "earli": [69, 70, 140, 171, 199, 201, 241, 244, 259, 264, 265, 266, 267, 479, 480, 520, 616], "button": [69, 71, 93, 120, 127, 139, 141, 143, 151, 155, 160, 165, 167, 190, 198, 200, 205, 216, 217, 218, 261, 264, 265, 266, 267, 273, 274, 411, 418, 437, 479, 480, 560, 561, 706, 708, 710, 784, 785, 786, 788, 790, 793, 797, 806, 807, 808, 809, 814, 845, 862, 886], "press": [69, 71, 112, 120, 127, 139, 141, 143, 150, 151, 155, 160, 165, 167, 171, 190, 198, 200, 216, 217, 218, 244, 264, 265, 354, 437, 450, 474, 479, 480, 561, 570, 784, 799, 801, 807, 862, 886], "590": [69, 80, 231], "millisecond": [69, 81, 111, 139, 144, 148, 167, 215, 234, 235, 236, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 437, 479, 480, 706, 709, 754, 812, 817, 886], "late": [69, 161, 865], "quickli": [69, 164, 165, 194, 204, 205, 217, 869, 886], "slowli": 69, "define_target_ev": [69, 84, 127, 876], "quick": [69, 73, 92, 182, 198, 240, 526, 845], "reference_id": [69, 127, 437], "smilei": [69, 71, 93, 151, 165, 167, 216, 862], "target_id": [69, 127, 437], "new_id": [69, 127, 437, 526], "hit": [69, 241, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 706, 708, 710, 785, 786, 790, 793, 797, 806, 809, 814, 886], "fill_na": [69, 437], "fill": [69, 222, 270, 275, 277, 278, 360, 437, 467, 479, 480, 585, 673, 702, 754, 886], "events_": 69, "besid": [69, 200, 205], "tmin_": 69, "tmax_": 69, "8522": [69, 886], "10649": 69, "12859": 69, "14830": 69, "16850": 69, "18826": 69, "21224": 69, "23200": 69, "25272": 69, "27243": 69, "29525": 69, "31530": 69, "33481": 69, "35611": 69, "38007": 69, "08643728": 69, "532": [69, 207, 231], "78723509": 69, "97154325": 69, "359": [69, 80, 111, 156, 163, 168, 195, 208, 226, 231], "63138369": 69, "20930939": 69, "40611816": 69, "512": [69, 72, 231, 274, 277, 410], "80771377": 69, "ft": [69, 141, 144, 165, 200, 206, 240, 256, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 411, 418, 479, 480, 516, 560, 561, 576, 582, 706, 708, 710, 771, 785, 786, 788, 790, 793, 797, 806, 809, 814, 815, 816, 841, 868], "684": [69, 84, 195, 208, 227, 231], "conduct": [70, 71, 100, 150, 157, 190, 226, 227, 228, 230, 244, 256, 517, 524, 663, 668, 841, 845, 861, 864, 868, 871, 886], "undesir": [70, 203, 561, 886], "otherwis": [70, 82, 119, 143, 150, 161, 171, 187, 200, 201, 231, 234, 236, 258, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 288, 297, 298, 302, 312, 324, 337, 354, 358, 359, 360, 369, 370, 371, 386, 404, 411, 418, 446, 449, 450, 454, 455, 469, 474, 476, 477, 479, 480, 489, 525, 526, 527, 528, 534, 539, 560, 561, 576, 611, 620, 642, 643, 645, 651, 655, 672, 691, 692, 706, 708, 709, 710, 718, 730, 741, 744, 754, 770, 771, 778, 782, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 797, 804, 806, 807, 808, 809, 810, 812, 813, 814, 816, 817, 831, 843, 845, 868, 886], "introduct": [70, 89, 94, 150, 231, 239, 241, 244, 274, 870], "smear": [70, 79, 80, 141, 201, 241, 592, 733, 734, 736, 737, 886], "unfortun": [70, 161, 853, 865], "brigd": 70, "far": [70, 82, 126, 139, 140, 143, 156, 170, 177, 200, 201, 202, 205, 207, 215, 216, 226, 365, 491, 564, 693, 694, 696, 697, 734, 737, 778, 868, 871], "address": [70, 95, 96, 165, 201, 226, 227, 234, 235, 236, 244, 269, 693, 694, 696, 697, 845, 851], "Or": [70, 119, 170, 198, 208, 221, 576, 845], "quantifi": [70, 210, 241, 275], "introduc": [70, 75, 139, 140, 148, 150, 164, 165, 172, 174, 198, 200, 201, 202, 204, 205, 206, 211, 215, 234, 236, 259, 264, 265, 266, 267, 320, 479, 480, 561, 784, 788, 807, 865, 868, 874, 886], "outcom": 70, "awar": [70, 102, 139, 143, 166, 167, 217, 228, 234, 264, 265, 266, 267, 479, 480, 791, 886], "mitig": [70, 179, 201, 202, 209, 868], "confound": [70, 150, 561], "psychophysiologi": [70, 71, 98, 140, 150, 201, 231, 244, 570, 692, 693, 694, 696, 697], "cpmc": 70, "columbia": 70, "softwar": [70, 157, 164, 183, 188, 189, 207, 244, 257, 269, 320, 444, 470, 479, 480, 488, 508, 593, 636, 820, 839, 841, 843, 845, 846, 851, 853, 861, 862, 865, 866, 867, 870, 874, 876, 886], "ebridg": 70, "html": [70, 142, 168, 170, 244, 256, 274, 576, 651, 845, 869, 886], "linearsegmentedcolormap": [70, 769], "nearli": [70, 845], "exactli": [70, 126, 139, 143, 174, 183, 195, 215, 241, 563, 692, 772, 816, 886], "suffici": [70, 199, 201, 209, 228, 264, 265, 266, 267, 269, 282, 354, 479, 480, 519, 784, 807, 843, 845, 851, 861, 865, 868, 886], "portion": [70, 177, 198, 200, 215, 240, 264, 265, 321, 479, 480, 561, 784, 801, 807, 845, 865, 867, 886], "plenti": 70, "settl": [70, 297], "ed_data": 70, "raw_data": 70, "compute_bridged_electrod": [70, 592, 774, 876, 886], "1959919512423807e": 70, "665886892350542": 70, "iz": 70, "4367320903573773": 70, "fcz": [70, 143, 241], "fc4": [70, 143], "f2": 70, "4835197413857302e": 70, "587817798758312": 70, "fc3": [70, 143, 503], "cp3": [70, 503], "af7": 70, "af3": 70, "af4": 70, "af8": 70, "f5": [70, 503], "fz": [70, 127, 143, 158, 221, 227, 444, 479, 480, 494], "ft8": 70, "tp8": 70, "p5": [70, 503], "p1": [70, 111, 210], "p6": 70, "po3": [70, 127, 241], "po4": [70, 127, 241], "po8": [70, 127, 241, 886], "746002687400983": 70, "cz": [70, 111, 127, 136, 143, 158, 169, 188, 190, 205, 207, 221, 227, 264, 265, 266, 267, 479, 480, 650, 886], "c2": [70, 111, 205], "cp4": 70, "pz": [70, 127, 136, 142, 158, 190, 221, 227], "p2": [70, 111], "590631749463316": 70, "f6": 70, "understand": [70, 134, 143, 189, 201, 241, 845, 868, 869, 874, 886], "physiologi": 70, "clip": [70, 171, 218, 256, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 771, 786, 793, 797, 806, 807, 809, 814, 816, 886], "bridged_idx": [70, 569, 592, 774], "ed_matrix": [70, 569, 774], "ax1": [70, 85, 89, 98, 136, 182, 194], "ax2": [70, 85, 89, 95, 98, 136, 182, 194, 228, 229], "triangular": [70, 159, 160, 270, 636, 693, 694, 696, 697, 813, 839, 861, 868, 871], "ed_plot": 70, "triu_idx": 70, "triu_indic": 70, "idx0": 70, "idx1": 70, "nanmedian": 70, "im1": 70, "cax1": 70, "set_label": [70, 145, 195, 226], "mu": [70, 201, 226, 569, 886], "im2": 70, "cax2": 70, "histogram": [70, 157, 264, 265, 784], "previou": [70, 139, 143, 150, 160, 169, 170, 171, 180, 200, 201, 205, 207, 218, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 411, 417, 418, 454, 455, 474, 476, 477, 539, 571, 582, 593, 754, 772, 794, 856, 871, 886], "pair": [70, 102, 119, 136, 143, 167, 187, 188, 189, 191, 195, 209, 210, 226, 234, 241, 256, 261, 264, 265, 266, 267, 269, 271, 272, 273, 275, 277, 278, 279, 280, 283, 288, 302, 411, 418, 479, 480, 503, 527, 560, 561, 569, 592, 604, 636, 693, 695, 696, 706, 707, 708, 710, 741, 754, 770, 774, 775, 778, 786, 792, 793, 797, 809, 812, 814, 816, 817, 839, 845, 886], "isnan": 70, "arrang": [70, 126, 150, 164, 169, 218, 244, 324, 759], "light": [70, 136, 141, 170, 189, 199, 212, 264, 265, 266, 267, 414, 421, 479, 480, 561, 754, 784, 788, 801, 807, 841, 862, 886], "horizont": [70, 80, 134, 136, 139, 140, 141, 179, 190, 198, 209, 226, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 561, 754, 773, 788, 800, 801, 807, 812, 817, 886], "stand": [70, 154, 168, 174, 667, 845, 857], "insert": [70, 150, 168, 215, 261, 269, 273, 288, 302, 437, 453, 527, 741, 759], "syring": 70, "tip": [70, 204, 244, 354, 849, 850, 866, 872], "plot_bridged_electrod": [70, 876, 886], "saniti": [70, 119, 143, 181, 201, 447, 671, 874, 886], "implausibli": [70, 201, 226, 699], "interestingli": [70, 868], "though": [70, 74, 111, 150, 155, 159, 167, 171, 178, 182, 189, 198, 201, 202, 204, 205, 206, 211, 226, 269, 757, 777, 841, 862, 868, 886], "adjac": [70, 141, 145, 199, 227, 235, 236, 318, 329, 423, 452, 563, 566, 676, 677, 678, 679, 680, 681, 682, 686, 693, 694, 696, 697, 775, 874, 883, 886], "distinct": [70, 71, 195, 244, 261, 264, 265, 266, 267, 411, 418, 479, 480, 560, 706, 708, 710, 771, 786, 793, 809, 814, 816], "unlik": [70, 139, 140, 148, 149, 155, 159, 169, 180, 198, 201, 203, 215, 263, 264, 265, 266, 267, 272, 278, 280, 361, 390, 419, 594, 710, 817, 843, 861, 868, 886], "ch1": 70, "ch2": 70, "9760": [70, 82], "9759": [70, 82], "lesser": [70, 479, 480, 807, 886], "trough": [70, 143], "monoton": [70, 100, 490, 588, 758], "discrep": [70, 868], "driven": [70, 195, 226, 371, 418, 474], "blink": [70, 72, 82, 92, 93, 143, 171, 191, 198, 200, 203, 204, 206, 207, 212, 215, 217, 241, 244, 258, 264, 265, 498, 560, 576, 658, 659, 886], "flatten": [70, 118, 205, 226, 230, 236, 244, 771, 886], "axvspan": [70, 95, 150], "subplots_adjust": [70, 71, 73, 106, 108, 111, 119, 126, 145, 150, 159, 199, 202, 204, 205, 206, 207, 210, 216, 226, 228, 229, 231, 777], "725": [70, 195, 231], "wspace": [70, 73, 126, 226], "compel": 70, "evid": [70, 112, 201, 202, 244, 561, 735, 738], "judici": [70, 845], "electrolyt": [70, 244, 569], "tri": [70, 159, 160, 167, 174, 177, 264, 265, 270, 271, 275, 277, 279, 318, 365, 434, 466, 636, 639, 655, 675, 679, 682, 812, 834, 863, 868, 871, 886], "those": [70, 74, 78, 98, 126, 141, 143, 150, 156, 160, 164, 165, 167, 168, 169, 170, 171, 174, 179, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 215, 216, 217, 221, 222, 226, 256, 259, 264, 265, 266, 267, 269, 277, 297, 310, 312, 324, 327, 329, 355, 356, 357, 359, 368, 369, 413, 417, 427, 432, 434, 435, 440, 444, 463, 479, 480, 490, 508, 539, 547, 560, 561, 563, 564, 577, 578, 579, 585, 589, 599, 601, 608, 655, 658, 659, 674, 692, 701, 706, 708, 709, 710, 714, 715, 716, 717, 719, 733, 734, 736, 737, 778, 784, 785, 788, 790, 791, 798, 805, 808, 845, 861, 867, 868, 870, 886], "biolog": [70, 198, 205, 206, 244, 528, 861, 868], "interpolate_bridged_electrod": [70, 876, 886], "midwai": [70, 592], "aid": [70, 244, 592, 886], "recov": [70, 165, 365, 886], "impli": [70, 161, 222, 241, 269, 330, 364, 494, 865], "unbridg": 70, "ch0": 70, "bridged_idx_simul": 70, "data_orig": 70, "rng": [70, 91, 92, 93, 113, 194, 201, 226, 513, 561, 591, 610, 658, 659, 660, 669, 670, 672, 693, 694, 695, 696, 697], "random": [70, 83, 89, 91, 92, 93, 113, 158, 189, 190, 194, 198, 201, 204, 223, 226, 227, 234, 235, 236, 476, 513, 561, 591, 610, 658, 659, 660, 669, 670, 672, 693, 694, 695, 696, 697, 886], "default_rng": 70, "seed": [70, 89, 94, 111, 113, 204, 222, 223, 227, 234, 235, 236, 469, 513, 561, 591, 610, 658, 659, 660, 669, 670, 672, 685, 693, 694, 695, 696, 697, 886], "raw_sim": [70, 92, 93], "bridged_data": 70, "tile": [70, 113], "back": [70, 74, 82, 87, 115, 139, 142, 157, 160, 161, 165, 170, 171, 179, 180, 199, 201, 204, 205, 206, 207, 239, 257, 264, 265, 266, 267, 274, 365, 369, 426, 452, 479, 480, 561, 788, 845, 865, 886], "raw_virtu": 70, "data_virtu": 70, "raw_comp": 70, "data_comp": 70, "With": [70, 113, 120, 161, 170, 171, 187, 190, 205, 206, 211, 217, 223, 264, 265, 266, 267, 282, 453, 479, 480, 504, 561, 643, 754, 802, 841, 845, 848, 853, 857, 865, 867, 868], "comp": [70, 168, 269, 886], "1086289630948187e": 70, "1398345563221063e": 70, "brought": [70, 155], "impend": 70, "help": [70, 72, 119, 134, 139, 143, 144, 145, 150, 158, 159, 160, 161, 165, 168, 170, 171, 180, 187, 189, 195, 198, 199, 200, 202, 203, 204, 206, 218, 230, 256, 262, 263, 264, 265, 266, 267, 270, 271, 272, 275, 278, 279, 280, 438, 440, 446, 470, 479, 480, 487, 494, 495, 502, 511, 561, 611, 617, 650, 655, 669, 672, 698, 706, 709, 751, 754, 762, 784, 798, 812, 845, 850, 851, 861, 863, 867, 868, 869, 871, 874, 886], "quest": 70, "technician": [70, 861, 862], "noisi": [70, 91, 141, 149, 199, 201, 206, 209, 226, 234, 236, 241, 269, 582, 583, 586, 658, 659, 670, 861, 886], "bid": [70, 135, 170, 244, 264, 265, 312, 479, 480, 852, 862, 874, 886], "tsv": [70, 330, 886], "kohm": 70, "passiv": [70, 198], "accept": [70, 93, 139, 168, 170, 171, 187, 199, 200, 201, 204, 205, 206, 215, 259, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 314, 344, 359, 377, 378, 379, 386, 388, 479, 480, 504, 563, 578, 579, 691, 693, 694, 696, 697, 708, 710, 754, 778, 785, 786, 792, 810, 839, 845, 864, 886], "from_list": 70, "impedance_cmap": 70, "cn": [70, 816], "cax": [70, 111, 115, 126, 145, 231], "omega": [70, 108], "hopefulli": [70, 198, 241, 451], "convinc": [70, 150], "tenk": [70, 71, 244, 569, 570], "kayser": [70, 71, 244, 569, 570], "electroencephalogram": [70, 244, 569], "offici": [70, 71, 189, 244, 504, 561, 569, 570, 619, 845, 853, 867, 870, 886], "feder": [70, 244, 561, 569], "545": [70, 231, 244, 569], "550": [70, 80, 161, 223, 231, 244, 432, 569], "march": [70, 244, 569, 871, 886], "s1388": [70, 111, 244, 569], "2457": [70, 111, 194, 244, 569], "00553": [70, 244, 569], "arnaud": [70, 244, 561, 569], "delorm": [70, 244, 561, 569], "scott": [70, 111, 143, 212, 244, 435, 474, 561, 569, 861, 886], "makeig": [70, 111, 143, 244, 435, 474, 561, 569, 861], "134": [70, 168, 208, 226, 228, 231, 233, 244, 277, 526, 569], "jneumeth": [70, 74, 201, 231, 244, 561, 569, 666, 693, 694, 696, 697], "2003": [70, 194, 241, 244, 417, 569, 861], "009": [70, 73, 120, 127, 139, 148, 168, 223, 244, 569], "136": [70, 84, 165, 168, 208, 226, 231, 277], "eeg_bridg": [70, 84], "laplacian": [71, 194, 244, 423, 570, 650, 886], "sharper": [71, 201], "impact": [71, 136, 177, 199, 241, 411, 886], "166799": [71, 166, 181, 203], "714": [71, 166, 181, 195, 203, 231], "date": [71, 73, 76, 80, 81, 82, 89, 92, 126, 140, 145, 150, 166, 167, 168, 188, 198, 199, 200, 202, 204, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 221, 223, 256, 258, 264, 265, 266, 267, 269, 479, 480, 481, 491, 494, 594, 843, 845, 886], "decemb": [71, 73, 76, 80, 81, 82, 89, 92, 126, 140, 145, 150, 166, 167, 168, 198, 199, 200, 202, 204, 205, 206, 207, 209, 215, 216, 217, 218, 223], "2002": [71, 73, 76, 82, 89, 92, 111, 126, 140, 145, 150, 165, 166, 167, 168, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 215, 216, 217, 218, 223, 244, 258, 528, 688, 690, 695, 868], "gmt": [71, 73, 76, 80, 81, 82, 89, 92, 126, 140, 145, 150, 166, 167, 168, 198, 199, 200, 202, 204, 205, 206, 207, 209, 210, 212, 215, 216, 217, 218, 223], "146": [71, 73, 76, 82, 89, 92, 126, 140, 145, 150, 165, 166, 167, 168, 195, 198, 199, 200, 202, 204, 205, 206, 207, 209, 212, 215, 216, 217, 218, 223, 226, 230, 231, 244], "hh": [71, 73, 76, 80, 81, 82, 89, 92, 126, 140, 145, 150, 166, 167, 198, 199, 200, 202, 204, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 223], "ss": [71, 73, 76, 80, 81, 82, 89, 92, 126, 140, 145, 150, 166, 167, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 212, 215, 216, 217, 218, 223, 868], "raw_csd": 71, "compute_current_source_dens": [71, 650, 876, 886], "421": [71, 106, 109, 141, 161, 175, 181, 203, 222, 229, 230, 231], "evoked_csd": 71, "stiff": [71, 570], "spline": [71, 78, 199, 244, 264, 265, 266, 267, 479, 480, 570, 868, 886], "flexibl": [71, 142, 171, 188, 211, 754, 886], "hspace": [71, 73, 126, 226], "set_size_inch": [71, 203], "this_evoked_csd": 71, "contour": [71, 100, 119, 157, 171, 240, 256, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 589, 706, 708, 710, 771, 772, 786, 789, 790, 793, 797, 806, 809, 814, 816, 886], "n\u03bb\u00b2": 71, "perrin": [71, 78, 199, 244, 570, 868], "pernier": [71, 78, 199, 244, 570, 722, 732, 733, 736, 868], "bme": [71, 244, 570], "1987": [71, 175, 201, 244, 570], "326089": [71, 244, 570], "jacqu": [71, 78, 199, 244, 570, 722, 732, 733, 736, 868], "olivi": [71, 78, 199, 244, 354, 561, 570, 722, 732, 733, 736, 868], "fran\u0107oi": [71, 78, 199, 244, 570, 868], "echalli": [71, 78, 199, 244, 570, 868], "184": [71, 75, 78, 168, 195, 199, 208, 226, 231, 244, 570, 600, 868], "187": [71, 75, 78, 111, 119, 129, 168, 199, 230, 231, 244, 561, 570, 868], "1989": [71, 78, 199, 244, 570, 868], "90180": [71, 78, 199, 244, 570, 868], "mike": [71, 244, 570], "cohen": [71, 118, 128, 244, 570, 720, 722, 732, 736, 771, 886], "theori": [71, 164, 177, 209, 244, 570, 593], "j\u00fcrgen": [71, 204, 244, 561, 570], "craig": [71, 244, 570], "methodologi": [71, 100, 244, 354, 570], "electrophysiologi": [71, 244, 570], "173": [71, 144, 157, 168, 195, 230, 231, 244, 277, 570], "ijpsycho": [71, 244, 570], "eeg_csd": [71, 84], "eog_event_id": 72, "eog_ev": [72, 200, 258, 574, 584, 587], "find_eog_ev": [72, 198, 200, 217, 258, 574, 579, 863, 876, 886], "add_ev": [72, 171, 274, 479, 480, 886], "audr": 72, "visr": 72, "pick_ch": 72, "375": [72, 80, 93, 168, 198, 200, 206, 231], "dc": [72, 165, 167, 171, 189, 198, 200, 201, 202, 203, 204, 206, 211, 216, 259, 264, 266, 267, 269, 341, 479, 480, 561, 563, 593, 807, 841, 871, 886], "offset": [72, 92, 135, 160, 167, 171, 190, 198, 200, 201, 203, 204, 205, 206, 215, 216, 217, 258, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 361, 440, 452, 479, 480, 498, 564, 607, 620, 686, 706, 709, 754, 841, 871, 886], "saccad": [72, 171, 190, 191, 198, 200, 203, 204, 206, 212, 498, 560], "firwin2": [72, 145, 171, 190, 198, 200, 201, 203, 204, 206, 264, 265, 266, 267, 413, 422, 447, 449, 450, 479, 480, 886], "hann": [72, 83, 107, 108, 145, 171, 198, 200, 201, 203, 204, 206, 264, 265, 266, 267, 422, 447, 449, 450, 479, 480, 534, 535, 657, 658, 659, 671, 886], "1502": [72, 171, 200, 204], "eog_artifact_histogram": [72, 84], "basic": [73, 82, 111, 149, 150, 157, 160, 161, 164, 165, 170, 171, 172, 175, 192, 198, 203, 204, 205, 206, 209, 215, 218, 219, 223, 242, 243, 244, 256, 264, 269, 273, 312, 328, 373, 390, 440, 446, 489, 558, 708, 816, 862, 868, 886], "thorough": [73, 164, 199, 869], "modul": [73, 139, 141, 142, 144, 145, 148, 149, 150, 160, 165, 166, 167, 168, 169, 170, 171, 188, 189, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 215, 216, 217, 218, 221, 239, 241, 256, 347, 490, 555, 705, 751, 754, 844, 845, 852, 857, 865, 868, 874, 875, 876, 877, 878, 881, 884, 886], "eogregress": [73, 203, 211, 603, 809, 876, 886], "elimin": [73, 168, 203, 205, 209, 226, 234, 236, 355, 356, 357, 411, 585, 865, 868, 886], "slow": [73, 127, 136, 140, 143, 149, 201, 203, 210, 244, 264, 265, 403, 404, 416, 534, 535, 591, 724, 744, 786, 845, 862], "drift": [73, 140, 201, 203, 210, 211, 561, 607, 886], "1653": [73, 74, 208], "376": [73, 80, 92, 93, 94, 148, 165, 166, 168, 178, 208, 215, 226, 231], "offpca": [73, 76, 92, 166, 167, 168, 198, 199, 200, 202, 204, 205, 206, 209, 215, 216, 217, 218, 223], "offaverag": [73, 92, 168, 200, 204], "raw_clean": [73, 83, 203, 601], "evoked_befor": 73, "evoked_aft": 73, "epochs_aft": 73, "spatial_color": [73, 93, 98, 128, 136, 143, 149, 150, 206, 218, 221, 264, 265, 266, 267, 479, 480, 708, 710, 788, 791, 808, 886], "905": [73, 195], "eog_regress": [73, 84], "intermitt": 74, "extern": [74, 150, 179, 187, 209, 244, 264, 265, 266, 267, 341, 343, 347, 432, 441, 442, 443, 444, 479, 480, 561, 571, 572, 582, 593, 861, 862, 868, 886], "magnet": [74, 80, 118, 128, 149, 155, 175, 187, 202, 203, 211, 231, 244, 342, 528, 561, 575, 771, 841, 846, 861, 862], "fail": [74, 206, 358, 365, 430, 432, 461, 495, 496, 571, 572, 582, 593, 611, 613, 617, 642, 644, 834, 845, 867, 886], "succe": [74, 160, 170, 851], "choos": [74, 81, 113, 114, 134, 140, 145, 150, 159, 161, 179, 180, 188, 194, 198, 201, 203, 204, 209, 228, 241, 257, 264, 265, 271, 272, 275, 277, 278, 279, 280, 319, 452, 528, 536, 560, 566, 573, 583, 586, 593, 620, 669, 672, 692, 754, 770, 773, 812, 817, 818, 843, 845, 865, 867, 886], "made": [74, 115, 154, 171, 198, 201, 226, 264, 265, 270, 272, 277, 278, 280, 314, 328, 487, 607, 671, 785, 787, 817, 843, 845, 862, 867, 886], "whose": [74, 94, 143, 167, 169, 187, 195, 223, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 440, 445, 454, 455, 474, 476, 477, 479, 480, 520, 539, 561, 566, 576, 578, 579, 583, 659, 709, 710, 778, 781, 794, 799, 808, 809, 867, 868, 871, 886], "particularli": [74, 160, 189, 203, 226, 264, 265, 266, 267, 438, 479, 480, 561, 582, 848, 868], "heavi": [74, 234, 236, 865, 886], "jeff": [74, 244, 561, 886], "hanna": [74, 244, 561, 886], "refmeg_nois": [74, 170, 862, 876, 886], "sample_reference_meg_nois": 74, "refmeg": 74, "165353": 74, "530": [74, 80, 207, 231, 244], "30000": [74, 410], "select_pick": 74, "plot_kwarg": [74, 156, 203, 211], "480": [74, 80, 170, 190, 231], "raw_tog": 74, "ica_kwarg": 74, "picard": [74, 76, 82, 204, 561, 852, 886], "fit_param": [74, 76, 171, 411, 412, 413, 414, 415, 416, 418, 419, 421, 422, 428, 561, 562, 886], "all_pick": 74, "ica_tog": 74, "allow_ref_meg": [74, 561], "bad_comp": 74, "find_bads_ref": [74, 561, 886], "plot_properti": [74, 82, 165, 204, 561, 872, 886], "147": [74, 168, 175, 195, 226, 230, 231, 238], "patient": [74, 76, 82, 135, 165, 171, 204, 886], "took": [74, 76, 82, 165, 171, 204, 561], "dpss": [74, 82, 102, 103, 136, 141, 142, 165, 171, 204, 239, 240, 264, 265, 266, 267, 424, 479, 480, 708, 710, 718, 724, 734, 737, 886], "raw_sep": 74, "ref_pick": 74, "ica_ref": 74, "ica_sep": 74, "think": [74, 143, 171, 195, 201, 226, 841, 864], "ekg": [74, 135], "cardiac": [74, 210], "ref_comp": 74, "get_sourc": [74, 561, 886], "ref_": 74, "recognis": 74, "cora": [74, 244, 561, 886], "kim": [74, 244, 561, 886], "nadia": [74, 244, 561], "voggel": [74, 244, 561], "magnetoencephalograph": [74, 244, 561], "108592": [74, 244, 561], "920": [74, 80, 84, 100, 142, 227], "144": [74, 81, 84, 90, 92, 168, 170, 195, 203, 208, 210, 211, 214, 226, 230, 231, 277, 886], "find_ref_artifact": [74, 84], "fnir": [75, 164, 168, 169, 192, 193, 213, 214, 244, 264, 265, 266, 267, 269, 312, 328, 353, 371, 373, 440, 479, 480, 503, 508, 510, 558, 595, 596, 597, 599, 600, 706, 708, 709, 710, 754, 770, 778, 787, 792, 841, 852, 868, 886], "mail": [75, 212, 226, 856], "robertluk": 75, "net": [75, 169, 194, 244, 417, 688, 868, 886], "optical_dens": [75, 210, 876, 886], "temporal_derivative_distribution_repair": [75, 876, 886], "exact": [75, 102, 202, 226, 234, 241, 244, 264, 265, 266, 267, 290, 428, 479, 480, 528, 693, 695, 696, 707, 711, 713, 714, 716, 841, 849, 868, 886], "fnirs_data_fold": [75, 210], "fnirs_motor": [75, 170, 210, 862, 876, 886], "fnirs_cw_amplitude_dir": [75, 210], "raw_intens": [75, 210], "read_raw_nirx": [75, 189, 210, 485, 868, 876, 886], "raw_od": [75, 210], "new_annot": [75, 217], "317": [75, 111, 168, 208, 226, 231], "set_annot": [75, 80, 81, 136, 167, 190, 200, 217, 258, 264, 265, 479, 480, 563, 594, 886], "23238": [75, 210], "2974": [75, 210], "464": [75, 143, 170, 208, 210, 277], "spike": [75, 82, 257, 600, 861], "person": [75, 150, 191, 210, 269, 845, 861, 867], "optod": [75, 189, 210, 510, 597, 754, 770, 862, 886], "corrupted_data": 75, "450": [75, 80, 140, 159, 208, 231, 277, 886], "corrupted_od": 75, "245": [75, 168, 184, 200, 208, 230, 244, 868], "8924": 75, "8923": 75, "suppli": [75, 100, 151, 171, 179, 206, 221, 226, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 360, 386, 435, 445, 446, 479, 480, 561, 576, 599, 600, 647, 706, 709, 777, 778, 797, 886], "corrected_tddr": 75, "said": [75, 174], "fishburn": [75, 244, 600], "ruth": [75, 244, 600], "ludlum": [75, 244, 600], "chandan": [75, 244, 600], "vaidya": [75, 244, 600], "andrei": [75, 244, 600], "medvedev": [75, 244, 600], "tddr": [75, 244, 600, 886], "motion": [75, 244, 565, 600, 886], "2018": [75, 83, 125, 136, 195, 204, 223, 244, 297, 298, 561, 600, 601], "025": [75, 127, 135, 139, 145, 148, 168, 190, 198, 201, 223, 226, 244, 600], "434": [75, 84, 208, 231], "fnirs_artifact_remov": [75, 84], "pierreablin": 76, "9009": [76, 171, 204], "run_ica": [76, 886], "t0": [76, 99, 184, 241, 257, 711, 712, 713], "fit_tim": 76, "infomax": [76, 204, 244, 561, 872, 876, 886], "ica_comparison": [76, 84], "evoked_interp": 78, "product": [78, 86, 118, 123, 149, 169, 187, 188, 194, 199, 206, 244, 269, 331, 424, 686, 734, 735, 737, 738, 763, 867, 868, 886], "truncat": [78, 86, 118, 123, 149, 199, 206, 216, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 434, 440, 479, 480, 492, 706, 709, 778, 886], "evoked_interp_mn": 78, "\u03b1": [78, 141, 206, 218], "0e": [78, 194, 206], "interpolate_bad_channel": [78, 84], "bilater": [79, 206, 654, 886], "repeat": [79, 92, 100, 112, 139, 160, 164, 166, 205, 206, 215, 216, 226, 232, 233, 237, 238, 258, 264, 265, 266, 267, 269, 275, 277, 360, 435, 479, 527, 528, 542, 558, 561, 576, 602, 620, 635, 678, 687, 689, 690, 694, 697, 698, 709, 736, 754, 792, 845, 853, 865, 886], "maxwell_filt": [79, 183, 208, 209, 432, 571, 582, 594, 796, 865, 876, 886], "head_po": [79, 80, 208, 209, 432, 582, 593, 657, 658, 659, 671, 886], "chpi": [79, 80, 122, 168, 182, 208, 209, 256, 264, 265, 266, 267, 269, 274, 311, 432, 479, 480, 558, 565, 568, 593, 657, 658, 659, 671, 706, 708, 709, 710, 777, 784, 807, 841, 868, 874, 875, 876, 886], "read_head_po": [79, 208, 209, 342, 344, 350, 352, 432, 582, 593, 657, 658, 659, 671, 876], "simulated_quat": 79, "simulated_movement_raw": 79, "raw_stat": 79, "simulated_stationary_raw": 79, "34208": 79, "955": [79, 82, 142, 231], "backward": [79, 201, 256, 264, 265, 266, 267, 371, 411, 417, 418, 422, 439, 446, 447, 449, 450, 479, 480, 534, 708, 710, 754, 786, 795, 819, 868, 886], "plot_head_posit": [79, 80, 208, 209, 876, 886], "quiver": [79, 262, 754, 782, 796], "306m": [79, 108, 115, 122, 123, 149, 155, 157, 169, 171, 182], "topo_kwarg": [79, 140], "evoked_stat": 79, "naiv": [79, 230], "therebi": [79, 174, 203, 205, 734, 737, 868], "third": [79, 93, 94, 150, 168, 171, 187, 206, 210, 217, 258, 259, 264, 439, 440, 452, 453, 479, 480, 521, 556, 561, 619, 620, 696, 697, 710, 787, 831, 845, 868], "restor": [79, 200, 207, 266, 267, 411, 415, 561, 562, 605, 754, 832, 886], "raw_sss": [79, 171, 209, 256, 479, 480, 500, 593], "evoked_raw_mc": 79, "harmon": [79, 92, 182, 183, 190, 198, 202, 208, 209, 241, 244, 575, 868, 886], "fourth": [79, 201, 217, 469, 868], "cleanli": [79, 168], "evoked_evo_mc": 79, "average_mov": [79, 209, 593, 876, 886], "movement_compens": [79, 84], "contamin": [80, 201, 204, 244, 561], "similarli": [80, 98, 111, 142, 148, 170, 195, 201, 207, 210, 258, 561, 778, 863, 868], "suffer": [80, 861], "adonai": [80, 81, 886], "nune": [80, 81, 244, 666, 886], "bst_auditori": [80, 81, 190, 876], "annotate_mov": [80, 208, 876, 886], "compute_average_dev_head_t": [80, 565, 876, 886], "data_path_meg": 80, "raw_fname1": [80, 190], "s01_aef_20131218_01": [80, 81, 190], "raw_fname2": [80, 190], "s01_aef_20131218_02": [80, 190], "mismatch": [80, 159, 160, 190, 354, 445, 536, 811, 886], "on_mismatch": [80, 190, 354, 361, 363, 832, 886], "264": [80, 81, 150, 168, 190, 208, 244], "s01_20131218_01": [80, 81, 190], "2400": [80, 81, 183, 190], "864000": [80, 81, 190], "263": [80, 81, 168, 190, 194, 208, 209, 226, 231], "eab": [80, 81], "s01": [80, 81], "lt": [80, 114], "br": 80, "gt": 80, "chpi_loc": [80, 208, 342, 344, 345, 346], "extract_chpi_locs_ctf": [80, 342, 344, 876, 886], "compute_head_po": [80, 208, 209, 342, 345, 593, 876, 886], "original_head_dev_t": 80, "invert_transform": [80, 134], "average_head_dev_t": 80, "val": [80, 100], "val_ori": 80, "010": [80, 93, 127, 139, 148, 154, 168, 223, 244], "020": [80, 127, 139, 148, 168, 223], "090": [80, 208], "130": [80, 81, 82, 157, 168, 169, 231, 244, 338, 886], "260": [80, 168, 191, 208, 231, 602, 862], "290": [80, 111, 143, 168, 183, 231, 244, 666], "370": [80, 168, 231, 244, 270, 275], "380": [80, 208, 231], "430": [80, 167, 173, 226], "460": [80, 183, 226, 231, 244, 860], "470": [80, 208], "490": [80, 231], "510": [80, 143, 208, 226, 231, 241], "520": [80, 231, 240, 243], "540": [80, 194, 208, 223, 231, 244, 297, 298], "560": [80, 207, 231], "620": [80, 171, 173, 231], "630": [80, 231], "640": [80, 182, 208, 221, 231], "650": [80, 81, 145, 195, 208, 211, 231], "680": [80, 231], "690": [80, 231], "710": [80, 195, 208, 244, 569], "720": [80, 195, 208, 244, 569], "730": [80, 195, 231], "740": [80, 195], "760": [80, 105, 194, 208], "780": [80, 212, 214, 231], "790": [80, 208], "810": [80, 195, 208], "820": [80, 231], "830": [80, 208, 231], "840": 80, "850": [80, 208, 231, 886], "870": [80, 231, 244, 690], "890": [80, 208, 231, 244, 277], "910": [80, 231], "930": [80, 208, 231], "940": [80, 231], "950": [80, 208, 241], "970": 80, "980": [80, 204, 208, 231], "990": [80, 208, 231], "353": [80, 168, 194, 226, 231], "356": [80, 111, 168, 194, 226, 231], "357": [80, 111, 168, 201, 231], "358": [80, 168, 208, 226], "182": [80, 163, 168, 173, 190, 194, 200, 226, 231], "362": [80, 111, 168, 222, 226, 227, 231], "363": [80, 168, 226, 231], "367": [80, 168, 199, 208, 231], "368": [80, 168, 170, 208, 226, 231, 234], "371": [80, 168, 226, 231], "372": [80, 168, 208, 231], "373": [80, 168, 208, 226], "377": [80, 208, 231], "379": [80, 208, 226], "385": [80, 195, 226], "386": [80, 226, 231], "388": [80, 194, 226, 231, 244], "391": [80, 231], "392": [80, 226], "394": [80, 194, 226, 231, 233, 688], "395": [80, 208, 231], "399": [80, 226, 231], "404": [80, 226, 231], "405": [80, 208, 231], "406": [80, 231], "407": [80, 231], "409": [80, 118, 195, 208, 231, 244, 771], "mean_distance_limit": [80, 565], "0015": 80, "annotation_mov": 80, "hpi_disp": [80, 565], "disp": 80, "0015m": 80, "0038m": 80, "new_dev_head_t": 80, "show_ax": [80, 122, 124, 155, 156, 158, 181, 182, 313, 770, 803, 886], "outer_skin": [80, 108, 117, 155, 157, 158, 160, 171, 770, 861, 862, 868], "ctf_275": [80, 122, 183], "movement_detect": [80, 84], "contract": [81, 867], "clench": [81, 204], "jaw": [81, 204], "swallow": [81, 198, 204], "twitch": 81, "cranial": 81, "notic": [81, 83, 139, 140, 142, 144, 148, 149, 150, 155, 159, 161, 165, 166, 169, 174, 190, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 212, 215, 217, 218, 221, 222, 582, 845], "annotate_muscle_zscor": [81, 876, 886], "taken": [81, 93, 136, 141, 191, 199, 203, 205, 206, 231, 234, 241, 257, 258, 266, 267, 269, 270, 274, 275, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 454, 455, 474, 476, 477, 478, 479, 480, 539, 591, 611, 707, 718, 794, 807, 862, 867, 886], "analyt": [81, 112, 244, 264, 265, 266, 267, 479, 480, 886], "divid": [81, 100, 126, 141, 142, 143, 146, 147, 161, 164, 209, 226, 228, 231, 264, 265, 266, 267, 270, 271, 272, 275, 278, 279, 280, 287, 477, 479, 480, 520, 544, 545, 566, 569, 573, 593, 627, 683, 693, 696, 706, 708, 709, 710, 721, 729, 786, 810, 814, 841, 865, 869, 886], "squar": [81, 112, 127, 139, 148, 149, 150, 161, 167, 168, 177, 188, 201, 215, 221, 223, 226, 228, 239, 244, 261, 264, 265, 266, 267, 271, 272, 273, 275, 278, 279, 280, 297, 298, 327, 411, 418, 455, 479, 480, 536, 543, 560, 561, 576, 686, 691, 693, 694, 696, 697, 706, 707, 708, 710, 754, 771, 779, 780, 786, 788, 793, 795, 797, 800, 806, 809, 812, 814, 816, 817, 841, 865, 868, 871, 886], "hundr": [81, 204, 205, 469, 843], "bad_muscl": [81, 566], "min_length_good": [81, 566], "fraction": [81, 112, 143, 174, 198, 204, 226, 326, 534, 543, 561, 580, 701, 798, 867, 886], "notch": [81, 190, 202, 211, 347, 450, 479, 480], "1981": 81, "603": [81, 195, 231], "scores_muscl": [81, 566], "threshold_muscl": 81, "annot_muscl": 81, "filter_freq": [81, 566], "zscore": [81, 287, 544, 545, 561, 706, 709, 814], "164": [81, 129, 132, 168, 201, 208, 230, 231, 233, 244, 693, 694, 696, 697], "675": [81, 84, 231], "196": [81, 84, 168, 195, 230, 231], "muscle_detect": [81, 84], "gross": [82, 244, 411], "widespread": [82, 204], "recover": 82, "ubiquit": 82, "postur": [82, 204], "mainten": [82, 206, 845, 886], "appropri": [82, 145, 148, 161, 165, 181, 182, 189, 200, 204, 206, 209, 221, 226, 228, 230, 241, 244, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 318, 324, 360, 389, 390, 479, 480, 524, 539, 692, 754, 778, 807, 812, 817, 843, 845, 860, 865, 868, 871, 886], "wouldn": [82, 886], "pronounc": [82, 201, 865], "simultan": [82, 136, 141, 191, 195, 202, 204, 218, 419, 469, 503, 522, 607, 615, 695, 862, 868, 874, 886], "18019": 82, "1983": [82, 194, 203, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 560, 608, 706, 709], "18020": 82, "exclus": [82, 169, 199, 204, 496, 556, 561, 798, 800, 801, 886], "mdash": [82, 204], "plot_sourc": [82, 204, 264, 265, 479, 480, 561, 784, 801, 807, 886], "85861": 82, "103880": 82, "criteria": [82, 139, 165, 200, 205, 206, 210, 257, 264, 265, 274, 556, 561, 886], "slope": [82, 187, 201, 256, 257, 269, 341, 342, 504, 561, 886], "peripher": [82, 561], "pole": [82, 159], "foci": [82, 754, 886], "blob": [82, 234, 235], "worth": [82, 100, 148, 227, 244, 394, 487, 494, 845, 862, 863, 865], "fire": 82, "fuzzi": 82, "textbook": [82, 205, 244, 688], "temporali": 82, "ear": [82, 165, 169, 179, 862], "muscle_idx": [82, 561], "log_scal": [82, 561, 799], "blink_idx": 82, "heartbeat_idx": 82, "muscle_idx_auto": 82, "find_bads_muscl": [82, 561, 886], "s001r01": 82, "529": [82, 178, 186, 194, 231], "s002": [82, 204], "s002r01": 82, "dhani": [82, 244, 561], "dharmaprani": [82, 244, 561], "hoang": [82, 244, 561], "nguyen": [82, 244, 561], "trent": [82, 244, 561], "lewi": [82, 244, 561, 868], "delosangel": [82, 244, 561], "willoughbi": [82, 244, 561], "kenneth": [82, 143, 244, 435, 561], "pope": [82, 244, 561], "38th": [82, 244, 561], "annual": [82, 206, 244, 561, 870], "confer": [82, 143, 244, 435, 561, 870], "societi": [82, 189, 244, 354, 528, 561, 735, 738, 868], "embc": [82, 204, 244, 561], "828": [82, 195, 244, 561], "orlando": [82, 244, 561], "fl": [82, 244, 561], "usa": [82, 198, 244, 561], "7590828": [82, 244, 561], "muscle_ica": [82, 84], "otp": [83, 84, 601], "flux": [83, 209, 211, 264, 265, 266, 267, 479, 480, 558, 706, 708, 709, 710, 868], "jump": [83, 111, 143, 198, 209, 693, 694, 696, 697, 886], "bst_phantom_elekta": [83, 182], "phantom": [83, 164, 185, 186, 244, 261, 262, 264, 266, 267, 269, 302, 354, 359, 390, 431, 452, 454, 479, 490, 492, 524, 593, 770, 782, 794, 822, 862, 868, 886], "rid": [83, 230], "1522": [83, 168], "dipole_numb": 83, "kojak_all_200nam_pp_no_chpi_no_ms_raw": [83, 182], "47000": [83, 182], "437999": [83, 182], "alongsid": [83, 144, 148, 154, 199, 204, 205, 207, 216, 805, 841, 852], "oversampled_temporal_project": [83, 876, 886], "lump": [83, 593], "compute_bia": 83, "sti201": [83, 182, 269], "make_sphere_model": [83, 124, 155, 182, 183, 184, 207, 517, 868, 876, 886], "r0": [83, 124, 155, 182, 183, 184, 524], "head_radiu": [83, 124, 155, 182, 183, 184, 524, 886], "036": [83, 139, 148, 168, 182, 223, 244, 666], "actual_po": [83, 182, 184], "get_phantom_dipol": [83, 182, 390, 876, 886], "1fmm": 83, "worst": [83, 120, 354, 359, 662, 664, 665, 886], "bias_clean": 83, "2mm": [83, 868], "4mm": 83, "samu": [83, 161, 209, 244, 572, 593, 601, 671, 865, 886], "taulu": [83, 161, 209, 244, 432, 572, 593, 601, 671, 865, 886], "1013": [83, 168, 244, 601], "2017": [83, 150, 204, 244, 393, 561, 601, 666, 671], "2734641": [83, 244, 601], "672": [84, 231], "auto_examples_preprocess": 84, "virtual_evok": [84, 86], "xdawn_denois": [84, 87], "shift_evok": [84, 85], "097": [84, 85], "hut": 85, "2332": [85, 168, 555], "ax3": [85, 89, 98, 182, 194], "magnomet": 86, "virt_evok": 86, "as_typ": [86, 264, 265, 266, 267, 886], "plot_epochs_imag": [87, 116, 561, 797, 799, 876, 886], "signal_cov": [87, 562], "xd": 87, "1388": 87, "41640": 87, "epochs_denois": 87, "brief": [89, 94, 165, 198, 218, 226, 845], "simplest": [89, 94, 167, 195, 211, 226, 868], "kostiantyn": [89, 93, 94, 244, 666, 886], "maksymenko": [89, 93, 94, 244, 666, 886], "functool": [89, 226, 271, 272, 275, 278, 279, 280, 845], "partial": [89, 148, 150, 165, 200, 215, 216, 226, 244, 264, 265, 271, 272, 275, 278, 279, 280, 318, 595, 735, 738, 754, 778, 819, 823, 862, 874, 886], "region_localization_error": [89, 876], "f1_score": [89, 876], "precision_scor": [89, 876], "recall_scor": [89, 876], "cosine_scor": [89, 876], "peak_position_error": [89, 876], "spatial_deviation_error": [89, 876], "determinist": [89, 204, 886], "middl": [89, 94, 111, 159, 165, 201, 205, 221, 262, 269, 271, 272, 275, 278, 279, 280, 447, 773, 782, 812, 817, 818, 845, 868, 886], "frontal": [89, 94, 165, 198, 204, 206, 215, 223, 305, 640, 754], "selected_label": [89, 94], "term": [89, 102, 125, 165, 167, 194, 201, 205, 226, 230, 236, 241, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 330, 341, 377, 378, 379, 388, 479, 480, 536, 548, 570, 575, 666, 706, 709, 721, 722, 729, 732, 736, 841, 845, 862, 867, 868, 869, 874, 886], "label_region": 89, "select_sourc": [89, 94, 876, 886], "1915": 89, "One": [89, 95, 96, 99, 140, 142, 148, 149, 150, 154, 156, 165, 170, 177, 190, 201, 203, 204, 211, 215, 226, 244, 264, 265, 266, 267, 274, 312, 314, 438, 444, 479, 480, 561, 688, 695, 772, 784, 785, 801, 807, 845, 861, 868, 870, 871, 886], "label_dipol": 89, "source_time_seri": [89, 93, 94], "sin": [89, 91, 92, 93, 94, 113, 201, 221, 222, 223, 341, 602, 672], "n_event": [89, 94, 259, 264, 265, 269, 274, 283, 363, 439, 440, 452, 479, 480, 496, 521, 556, 564, 585, 607, 617, 619, 620, 656, 692, 709, 784, 787, 831, 841], "sourcesimul": [89, 93, 94, 671, 876, 886], "source_simulator_region": 89, "add_data": [89, 93, 94, 115, 271, 272, 275, 278, 279, 280, 656, 754, 812, 817], "source_simulator_dipol": 89, "gaussian": [89, 93, 113, 120, 151, 160, 161, 201, 204, 222, 226, 264, 265, 266, 267, 474, 591, 660, 722, 732, 735, 736, 738, 785, 794, 815, 861, 865, 868], "raw_region": 89, "simulate_raw": [89, 92, 93, 94, 223, 658, 659, 670, 672, 673, 876, 886], "make_ad_hoc_cov": [89, 92, 94, 223, 261, 298, 876, 886], "add_nois": [89, 92, 93, 94, 223, 658, 659, 671, 876, 886], "iir_filt": [89, 91, 92, 94, 223, 660, 670], "raw_dipol": 89, "cos2": [89, 92, 93, 94, 223, 657, 658, 659, 671], "498": [89, 226, 231], "evoked_region": 89, "evoked_dipol": 89, "stc_true_region": 89, "get_stc": [89, 93, 656], "start_sampl": [89, 215, 656], "stop_sampl": [89, 215, 656], "stc_true_dipol": 89, "stc_est_region": 89, "stc_est_dipol": 89, "0004": 89, "2931": 89, "34986e": 89, "scorer": [89, 417, 428, 886], "rle": [89, 666], "region_result": 89, "thx": 89, "per_sampl": [89, 661, 662, 663, 664, 665, 666, 667, 668], "ax4": 89, "col": [89, 111, 754, 886], "super": [89, 241], "ticklabel_format": 89, "style": [89, 126, 149, 150, 170, 187, 210, 256, 259, 261, 264, 265, 266, 267, 274, 279, 280, 297, 411, 417, 418, 470, 479, 480, 504, 560, 561, 706, 708, 709, 710, 754, 770, 771, 778, 785, 786, 789, 791, 792, 793, 801, 802, 807, 809, 814, 815, 816, 818, 886], "sci": [89, 210, 597], "scilimit": 89, "tweak": [89, 113, 126, 241, 843, 863, 865], "dipole_result": 89, "plot_stc_metr": [89, 90], "166": [90, 149, 168, 186, 195, 201, 226, 230, 231, 236, 244], "auto_examples_simul": 90, "simulated_raw_data_using_subject_anatomi": [90, 93], "749": [90, 93, 189, 193, 195, 231], "148": [90, 168, 174, 186, 195, 208, 226, 230, 231, 234], "source_simul": [90, 93, 94], "simulate_raw_data": [90, 92], "simulate_evoked_data": [90, 91], "949": [90, 91, 231], "fit_iir_model_raw": [91, 110, 876, 886], "templat": [91, 92, 124, 134, 154, 156, 162, 163, 164, 169, 175, 231, 244, 268, 269, 277, 284, 302, 312, 316, 317, 318, 328, 329, 330, 334, 365, 373, 389, 436, 480, 494, 523, 576, 590, 612, 635, 655, 770, 822, 841, 859, 886], "read_proj": [91, 110, 130, 141, 190, 205, 264, 265, 266, 267, 274, 479, 480, 837, 876], "sample_audvis_ecg": [91, 110, 130, 141, 171, 205, 256], "randomst": [91, 92, 93, 113, 158, 194, 201, 223, 226, 513, 561, 591, 610, 658, 659, 660, 669, 670, 672, 693, 694, 695, 696, 697, 886], "randn": [91, 113, 158, 194, 201, 223, 226, 234, 235, 236], "high_resolut": [91, 813], "wronkiewicz": [92, 886], "wronk": 92, "add_ecg": [92, 93, 659, 671, 876, 886], "add_eog": [92, 93, 658, 671, 876, 886], "epoch_dur": [92, 569], "stagger": 92, "sinusoid": [92, 93, 113, 182, 183, 201, 208, 221, 223, 341, 450, 479, 480, 672, 841], "10hz": 92, "global": [92, 112, 120, 127, 141, 143, 148, 149, 154, 161, 165, 182, 206, 244, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 435, 752, 778, 785, 788, 791, 793, 794, 812, 817, 841, 845, 865, 886], "n_samp": [92, 215, 223, 886], "25e": 92, "1e9": [92, 183, 223], "plt_show": [92, 179, 226], "input": [92, 93, 113, 154, 171, 187, 194, 195, 201, 206, 209, 215, 226, 230, 231, 236, 256, 264, 265, 266, 267, 270, 271, 272, 275, 278, 279, 280, 283, 314, 330, 355, 356, 357, 361, 368, 411, 412, 414, 415, 417, 418, 419, 421, 423, 428, 435, 440, 446, 468, 470, 471, 476, 479, 480, 504, 506, 561, 562, 570, 571, 573, 574, 578, 579, 582, 583, 588, 606, 620, 672, 683, 685, 692, 693, 694, 696, 697, 704, 706, 724, 725, 754, 755, 757, 758, 770, 778, 785, 789, 793, 801, 812, 815, 817, 861, 867, 868, 871, 886], "millimet": [92, 93, 155, 159, 181, 212, 335, 339, 454, 469, 495, 513, 617, 868, 886], "calc": 92, "orphan": 92, "ivana": [93, 886], "kojcic": [93, 886], "deslauri": [93, 94, 886], "gauthier": [93, 94, 886], "sam": [93, 94, 886], "doesn": [93, 139, 155, 169, 170, 204, 206, 207, 209, 215, 228, 231, 241, 377, 378, 379, 380, 382, 383, 384, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 550, 561, 564, 579, 584, 593, 613, 652, 707, 709, 726, 799, 845, 853, 861, 865, 886], "fname_info": 93, "g_temp_sup": 93, "g_t_transv": 93, "s_calcarin": 93, "vice": [93, 133, 159, 201, 275, 868], "versa": [93, 133, 159, 201, 275, 868], "moreov": [93, 136, 205, 206, 226], "ipsilater": [93, 150, 175], "activation_list": 93, "region_nam": 93, "latenc": [93, 142, 143, 144, 148, 231, 244, 266, 267, 271, 272, 275, 278, 279, 280, 435, 693, 694, 696, 697, 789, 886], "sigma": [93, 116, 127, 136, 141, 195, 226, 264, 265, 524, 699, 700, 722, 732, 736, 744, 785, 815, 868, 871], "gf": 93, "rand": [93, 223], "100m": 93, "30m": 93, "15m": 93, "region_id": 93, "events_tmp": 93, "label_tmp": 93, "amplitude_tmp": 93, "latency_tmp": 93, "wf_tmp": 93, "evoked_aud_left": 93, "evoked_vis_right": 93, "mere": [93, 171, 204, 623, 867], "stc_aud": 93, "stc_vi": 93, "stc_diff": 93, "49264": [93, 177], "64e": [93, 177], "32542029": 93, "92022543": 93, "5110744": 93, "christoph": [93, 114, 150, 154, 194, 244, 354, 417, 690, 886], "destrieux": [93, 154, 244], "ander": [93, 154, 177, 244, 528, 868], "dale": [93, 154, 177, 244, 528, 868], "halgren": [93, 154, 244, 528], "sulci": [93, 154, 159, 222, 244], "nomenclatur": [93, 154, 215, 244], "sine": [94, 221, 256, 721, 729], "everi": [94, 102, 112, 126, 140, 143, 150, 167, 171, 174, 195, 202, 203, 204, 218, 241, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 348, 460, 468, 476, 477, 479, 480, 513, 561, 563, 578, 579, 591, 610, 658, 659, 660, 669, 670, 672, 693, 694, 695, 696, 697, 706, 709, 845, 865, 866], "significantli": [95, 96, 99, 226, 229, 234, 235, 241, 271, 272, 275, 278, 279, 280, 693, 694, 696, 697, 867], "permutation_cluster_test": [95, 226, 229, 230, 697, 876, 886], "1332": [95, 96, 144, 165, 168, 208, 228, 229, 230], "epochs1": [95, 234, 434], "condition1": [95, 234], "epochs2": [95, 234, 434], "condition2": [95, 234], "t_ob": [95, 227, 228, 234, 693, 695, 696, 886], "cluster_p_valu": [95, 228, 229, 230, 234, 235, 236], "n_permut": [95, 99, 111, 226, 227, 228, 229, 230, 231, 235, 236, 693, 694, 695, 696, 697], "tail": [95, 111, 150, 226, 228, 229, 230, 231, 234, 241, 262, 693, 694, 695, 696, 697, 782, 813, 886], "out_typ": [95, 111, 226, 228, 229, 230, 693, 694, 696, 697, 886], "stat_fun": [95, 111, 112, 226, 227, 228, 229, 230, 231, 234, 235, 236, 685, 693, 694, 696, 697], "000227": 95, "167093": 95, "4083": 95, "3811": 95, "4059": 95, "569": [95, 148, 231], "4197": 95, "4068": 95, "851": 95, "4185": 95, "996": [95, 140, 147, 208, 231], "4200": 95, "4168": 95, "erf": [95, 116, 127, 190, 198, 201, 231, 244, 561, 797, 799, 852, 886], "i_c": 95, "cluster_stats_evok": [95, 101], "discoveri": [96, 230, 244, 690, 886], "bonferroni_correct": [96, 226, 876, 886], "fdr_correct": [96, 100, 226, 230, 876], "pval": [96, 230, 684, 690, 693, 694, 696, 697], "ttest_1samp": [96, 226, 699], "n_test": [96, 695], "threshold_uncorrect": 96, "ppf": [96, 210, 226, 228, 231, 234, 235, 595, 693, 694, 696, 697], "reject_bonferroni": 96, "pval_bonferroni": 96, "threshold_bonferroni": 96, "reject_fdr": 96, "pval_fdr": 96, "indep": [96, 690], "threshold_fdr": 96, "xmin": 96, "xmax": 96, "hline": [96, 140, 266, 267, 788], "uncorrect": [96, 226], "bonferroni": [96, 450, 479, 480, 684, 695, 886], "fdr_stats_evok": [96, 101], "generalis": 98, "tradit": [98, 142, 207, 211, 733, 734, 736, 737, 778], "predictor": [98, 140, 226, 560, 608, 692], "inapplic": 98, "rerp": [98, 244, 692], "smith": [98, 125, 226, 227, 244, 388, 692, 693, 694, 696, 697], "kuta": [98, 244, 692], "jona": [98, 100, 127, 195, 231, 244, 693, 694, 696, 697, 886], "sassenhagen": [98, 100, 127, 195, 231, 244, 693, 694, 696, 697, 886], "linear_regression_raw": [98, 101, 876, 886], "rerf": 98, "param": [98, 112, 411, 412, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 550, 562, 632, 886], "967": [98, 101], "permutation_t_test": [99, 226, 876], "temporal_mask": 99, "logical_and": [99, 113], "50000": 99, "p_valu": [99, 226, 231, 450, 479, 480, 695], "significant_sensor": 99, "significant_sensors_nam": 99, "49999": 99, "0243": [99, 141, 168], "1323": [99, 168], "1333": [99, 168, 234, 236], "1613": [99, 168], "1643": [99, 168], "2423": [99, 168], "2522": [99, 168], "2622": [99, 168], "2632": [99, 168], "2642": [99, 168], "2643": [99, 168], "stats_pick": 99, "cbar_fmt": [99, 108, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 706, 708, 710, 786, 793, 797, 806, 809, 814, 886], "573": [99, 101, 208, 231], "326": [99, 101, 111, 168, 208, 231], "sensor_permutation_test": [99, 101], "psycholinguist": [100, 226], "st\u00e9phane": [100, 227, 244, 394, 862], "dufau": [100, 227, 244, 394, 862], "grainger": [100, 227, 244, 394, 862], "katherin": [100, 227, 244, 394, 735, 738, 862], "midglei": [100, 227, 244, 394, 862], "phillip": [100, 140, 227, 244, 389, 394, 862, 886], "holcomb": [100, 227, 244, 394, 862], "pictur": [100, 227, 244, 274, 394, 862], "snapshot": [100, 171, 227, 244, 394, 824, 845, 862, 886], "megastudi": [100, 227, 244, 394, 862], "psycholog": [100, 227, 244, 394, 862], "1887": [100, 227, 244, 394, 862], "1897": [100, 194, 227, 244, 394, 862], "0956797615603934": [100, 227, 244, 394, 862], "matt": [100, 244, 886], "davi": [100, 244], "ford": [100, 244], "friedmann": [100, 244], "pulverm\u00fcl": [100, 244], "william": [100, 194, 244, 417], "marslen": [100, 244], "wilson": [100, 244], "1383": [100, 244], "1400": [100, 226, 244], "2006": [100, 177, 194, 209, 244, 264, 265, 539, 593, 663, 668, 735, 738], "2005": [100, 161, 209, 244, 432, 539, 572, 593, 663, 666, 668, 865], "048": [100, 139, 141, 148, 168, 182, 218, 223, 227, 244, 720, 722, 732, 736], "tal": [100, 119, 125, 244, 487, 494, 886], "linzen": [100, 119, 886], "pd": [100, 111, 135, 142, 150, 189, 190, 209], "kiloword": [100, 142, 170, 215, 227, 876], "kword_metadata": [100, 142, 227], "epo": [100, 139, 142, 171, 227, 256, 264, 265, 616, 886], "read_epoch": [100, 139, 142, 227, 865, 868, 876, 886], "visualcomplex": [100, 142], "film": [100, 142, 227, 874], "783710": [100, 142], "cent": [100, 142], "141553": [100, 142], "shot": [100, 142], "600033": [100, 142], "cold": [100, 142], "657457": [100, 142], "945661": [100, 142], "characterist": [100, 150, 201, 202, 244, 264, 265, 403, 434, 446, 582, 841], "concret": [100, 142, 143], "imagin": [100, 111, 205], "df": [100, 111, 139, 144, 190, 215, 226, 227, 228, 234, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 544, 693, 696, 706, 708, 709, 710], "cut": [100, 111, 112, 179, 205, 241, 256, 264, 265, 266, 267, 413, 422, 447, 449, 479, 480, 573, 574, 584, 587, 593, 597, 853, 871, 886], "split_legend": [100, 231, 778], "percentil": [100, 134, 135, 145, 264, 265, 271, 272, 274, 275, 278, 279, 280, 479, 480, 742, 773, 778, 784, 807, 812, 817, 818, 886], "gfp": [100, 112, 127, 141, 143, 149, 161, 165, 190, 231, 264, 265, 266, 267, 536, 778, 785, 788, 794, 811, 841, 865, 886], "7424": 100, "plot_evoked_imag": [100, 876, 886], "null": [100, 283, 437, 688, 886], "hypothesi": [100, 171, 227, 684, 688, 690, 695, 874], "colour": [100, 175, 886], "palett": [100, 111, 144], "dark": [100, 170, 171, 264, 265, 479, 480, 561, 754, 784, 801, 807, 886], "reject_h0": 100, "fdr_pval": 100, "plot_imag": [100, 127, 141, 142, 145, 149, 165, 198, 200, 210, 227, 264, 265, 266, 267, 886], "564": [100, 101, 195, 231, 244, 403], "sensor_regress": [100, 101], "auto_examples_stat": 101, "csd_fourier": [102, 707, 711, 712, 713, 715, 716, 876, 886], "csd_multitap": [102, 707, 711, 712, 713, 714, 715, 724, 876, 886], "core": [102, 143, 165, 167, 170, 188, 221, 244, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 414, 421, 424, 427, 428, 454, 467, 469, 479, 480, 519, 522, 523, 534, 535, 544, 545, 566, 573, 574, 593, 645, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 786, 789, 808, 843, 844, 845, 852, 867, 886], "clariti": [102, 872], "adapt": [102, 112, 165, 189, 207, 223, 226, 244, 264, 265, 266, 267, 297, 298, 416, 450, 451, 479, 480, 534, 535, 561, 593, 708, 710, 713, 716, 722, 724, 732, 750, 786, 845, 851, 862, 867, 886], "csd_fft": 102, "csd_mt": 102, "convolv": [102, 110, 201, 226, 241, 417, 424], "600hz": 102, "enough": [102, 157, 179, 202, 203, 204, 206, 209, 215, 226, 241, 261, 264, 265, 266, 267, 273, 305, 306, 312, 411, 418, 430, 479, 480, 560, 561, 576, 701, 706, 708, 709, 710, 763, 771, 778, 784, 786, 788, 790, 793, 794, 797, 801, 804, 806, 807, 808, 809, 810, 814, 816, 849, 867, 868, 886], "10th": 102, "greatli": 102, "minim": [102, 140, 168, 201, 221, 241, 264, 265, 360, 419, 434, 571, 692, 734, 737, 754, 843, 865, 868], "csd_wav": 102, "crossspectraldens": [102, 290, 297, 317, 436, 711, 712, 713, 714, 715, 716, 717, 723, 726, 780, 876, 886], "trick": [102, 199, 241, 244, 695, 849, 886], "comma": [102, 256, 845, 886], "plot_dict": [102, 240], "296": [102, 111, 168, 208, 226, 231], "compute_csd": [102, 105], "taper": [103, 113, 264, 265, 266, 267, 416, 424, 450, 479, 480, 534, 535, 708, 710, 713, 716, 718, 724, 734, 737, 786, 886], "prolat": [103, 239, 244, 264, 265, 266, 267, 479, 480, 708, 710, 718, 724], "spheroid": [103, 239, 244, 264, 265, 266, 267, 479, 480, 708, 710, 718, 724], "sequenc": [103, 136, 244, 256, 264, 265, 266, 267, 479, 480, 683, 708, 710, 718, 754, 786, 862, 868], "compute_source_psd_epoch": [103, 105, 534, 876, 886], "n_epochs_us": 103, "psd_avg": 103, "set_xlim": [103, 112, 150, 205], "auto_examples_time_frequ": 105, "source_power_spectrum_opm": [105, 108], "334": [105, 108, 111, 168, 195, 208], "time_frequency_erd": [105, 111, 886], "657": [105, 111], "time_frequency_global_field_pow": [105, 112], "748": [105, 112, 170, 173, 208], "time_frequency_simul": [105, 113], "651": [105, 113, 198, 214, 231], "source_label_time_frequ": [105, 106], "849": [105, 106], "source_space_time_frequ": [105, 109], "624": [105, 109, 139, 147, 231], "source_power_spectrum": [105, 107], "662": [105, 107, 158, 231], "temporal_whiten": [105, 110], "former": [106, 141, 230, 354, 561, 867, 886], "latter": [106, 141, 150, 167, 411, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 562, 868], "source_induced_pow": [106, 876, 886], "epochs_induc": 106, "subtract_evok": [106, 112, 203, 264, 265, 608, 886], "this_epoch": 106, "inter": [106, 244, 261, 264, 265, 266, 267, 273, 282, 411, 418, 435, 479, 480, 560, 561, 576, 658, 706, 708, 710, 733, 734, 736, 737, 771, 786, 793, 797, 806, 809, 814, 816], "itc": [106, 733, 734, 735, 736, 737, 738], "baseline_mod": [106, 544, 545], "compute_source_psd": [107, 108, 535, 876, 886], "100hz": 107, "2048": [107, 110, 113, 132, 194, 264, 265, 266, 267, 410, 479, 480, 534, 808], "psd_dspm": 107, "neuromag": [108, 155, 157, 159, 165, 167, 182, 184, 199, 206, 209, 215, 216, 217, 256, 257, 262, 264, 265, 266, 267, 269, 274, 320, 431, 452, 479, 480, 490, 496, 504, 510, 593, 615, 640, 708, 710, 784, 787, 792, 807, 841, 857, 862, 868, 871, 886], "welch": [108, 223, 239, 240, 241, 244, 264, 265, 266, 267, 479, 480, 708, 710, 725, 808, 886], "next_fast_len": 108, "src_fname": [108, 234, 235, 236], "vv_fname": 108, "squid_resting_st": 108, "vv_erm_fnam": 108, "squid_empty_room": 108, "vv_trans_fnam": 108, "opm_fnam": 108, "opm_resting_state_raw": 108, "opm_erm_fnam": 108, "opm_empty_room_raw": 108, "opm_tran": 108, "opm_coil_def_fnam": 108, "vv": 108, "simplifi": [108, 178, 201, 244, 256, 264, 265, 266, 267, 479, 480, 865, 866, 886], "housekeep": [108, 211], "raw_erm": [108, 128, 183, 190, 861], "new_sfreq": 108, "nyquist": [108, 201, 202, 886], "meg2233": 108, "meg1842": 108, "hold": [108, 190, 223, 226, 264, 265, 266, 267, 432, 479, 480, 582, 593, 704, 788, 808, 810, 841, 868, 874], "61999": 108, "60999": 108, "dist": [108, 155, 156, 210, 222, 256, 270, 277, 282, 365, 430, 463, 599, 676, 677, 678, 680, 681, 871], "make_bem_solut": [108, 157, 190, 365, 430, 461, 517, 523, 524, 612, 613, 642, 644, 834, 861, 868, 876, 886], "169022": 108, "169992": 108, "202": [108, 168, 227, 231, 871, 886], "2052": 108, "995623": 108, "029776": 108, "088592": 108, "062622": 108, "916188": 108, "395825": 108, "069381": 108, "399641": 108, "914042": 108, "993107": 108, "074371": 108, "090590": 108, "079171": 108, "995577": 108, "050589": 108, "086427": 108, "057412": 108, "994603": 108, "691": [108, 231], "445": [108, 135, 208, 226], "431": [108, 231], "411": [108, 134, 226, 231, 244, 354], "percentag": [108, 204, 264, 265, 563, 662, 663, 664, 665, 666, 668, 742, 783, 886], "freq_band": [108, 136], "topo": [108, 114, 141, 149, 210, 240, 264, 265, 757, 767, 778, 815, 874, 886], "stc_psd": [108, 534], "sensor_psd": [108, 534], "return_sensor": [108, 534, 535], "topo_norm": 108, "keepdim": [108, 136], "stc_norm": 108, "3660": 108, "1969": 108, "014611": 108, "18765e": 108, "34378": 108, "07671e": 108, "3720": 108, "007069": 108, "0841e": 108, "46031": 108, "26253e": 108, "coverag": 108, "worthwhil": [108, 150, 204], "plot_band": 108, "inferno": [108, 135, 226], "cau": 108, "show_trac": [108, 126, 134, 271, 272, 275, 278, 279, 280, 754, 812, 817, 886], "fig_alpha": 108, "brain_alpha": [108, 272, 278, 280, 817], "7033039": 108, "9654317": 108, "07428314": 108, "profil": [108, 170, 211, 843, 845], "beneath": 108, "fig_beta": 108, "brain_beta": 108, "18694376": 108, "33488803": 108, "88328024": 108, "fig_beta_opm": 108, "brain_beta_opm": 108, "28867831": 108, "68102302": 108, "8757832": 108, "source_band_induced_pow": [109, 876, 886], "use_fft": [109, 111, 240, 424, 544, 545, 712, 715, 731, 733, 734, 736, 737], "induced_power_": 109, "proj_fnam": [110, 190], "20000": 110, "innov": 110, "d_": 110, "lfilter": [110, 264, 265, 266, 267, 446, 447, 449, 450, 479, 480], "regener": [110, 264, 265, 886], "r_": [110, 663, 668, 868], "dummi": [110, 124, 221, 236], "nfft": [110, 223], "written": [111, 170, 171, 174, 191, 208, 217, 260, 303, 307, 443, 444, 478, 479, 480, 627, 633, 831, 836, 839, 852, 861, 874, 886], "desynchron": [111, 240, 244, 862], "conceptu": [111, 150, 201, 204, 244], "ersp": [111, 886], "perturb": 111, "goal": [111, 136, 845, 863, 867, 874], "35hz": 111, "customari": [111, 868], "klotzsch": [111, 886], "cb": 111, "mpg": 111, "twoslopenorm": 111, "seaborn": [111, 144, 209], "sn": [111, 144, 209], "tfr_multitap": [111, 113, 240, 424, 733, 734, 735, 736, 738, 876, 886], "permutation_cluster_1samp_test": [111, 226, 228, 696, 876, 886], "pcluster_test": 111, "961": [111, 159, 195, 231], "suitabl": [111, 145, 158, 160, 228, 230, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 306, 353, 373, 410, 435, 466, 479, 480, 503, 517, 693, 706, 708, 709, 710, 841, 861, 862, 868, 874], "cnorm": [111, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 886], "asymmetr": [111, 769], "thing": [111, 140, 144, 150, 159, 170, 171, 180, 187, 199, 201, 215, 223, 231, 234, 236, 312, 479, 480, 845, 865, 886], "rdbu": 111, "equal": [111, 139, 146, 147, 148, 150, 164, 167, 171, 174, 175, 179, 198, 201, 217, 218, 234, 236, 259, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 286, 297, 298, 317, 353, 354, 358, 359, 369, 370, 371, 411, 418, 419, 424, 434, 436, 454, 455, 468, 474, 476, 477, 479, 480, 496, 520, 528, 539, 544, 545, 560, 561, 573, 579, 591, 598, 599, 624, 662, 687, 688, 693, 694, 696, 697, 698, 700, 701, 706, 708, 709, 710, 725, 771, 772, 778, 782, 785, 786, 787, 788, 790, 793, 794, 809, 810, 814, 816, 841, 867, 868, 872, 886], "promin": [111, 142, 198, 210, 212, 241, 355, 356, 357], "extrem": [111, 141, 241, 266, 267, 297, 298, 321, 354, 358, 359, 369, 370, 371, 411, 418, 419, 454, 455, 474, 476, 477, 539, 693, 694, 696, 697, 794], "vcenter": 111, "step_down_p": [111, 693, 694, 696, 697], "buffer_s": [111, 226, 230, 231, 234, 235, 236, 531, 693, 694, 696, 697], "tfr_ev": 111, "gridspec_kw": [111, 126, 175, 210], "width_ratio": [111, 175, 210], "stack": [111, 140, 223, 234, 652, 749, 751, 849, 850, 853], "mask_styl": [111, 266, 267, 706, 790], "set_yscal": 111, "724718": 111, "552076": 111, "183231": 111, "308": [111, 168, 195], "345": [111, 168, 208, 231], "342": [111, 112, 120, 161, 168, 244, 266, 267, 354, 794, 865], "344": [111, 143, 168, 208, 226], "349": [111, 168, 208, 226, 231, 244, 868], "528367": 111, "706422": 111, "294": [111, 168, 208, 226, 231], "337": [111, 168, 231], "327": [111, 168, 204, 214, 226, 231], "581589": 111, "346448": 111, "287": [111, 168, 231], "328": [111, 112, 120, 161, 168, 208, 231, 244, 266, 267, 354, 794, 865], "329": [111, 168, 195, 208, 226, 231], "314": [111, 168, 208, 226, 231], "309": [111, 168, 208, 231, 244, 597, 735, 738], "307": [111, 112, 151, 153, 168, 226, 231], "713872": 111, "754759": 111, "360704": 111, "316": [111, 143, 168, 194, 208, 214, 226, 231, 244, 417], "318": [111, 168, 231], "992503": 111, "416450": 111, "322": [111, 141, 168, 208, 226, 231], "044340": 111, "070444": 111, "206": [111, 168, 208, 230], "217": [111, 167, 168, 208, 217, 220, 230, 231], "282": [111, 168, 176, 186, 195, 226, 231], "292": [111, 168, 208, 226, 231], "315": [111, 168, 208, 231, 886], "epochstfr": [111, 113, 292, 532, 706, 717, 728, 736, 737, 739, 876, 886], "datafram": [111, 139, 146, 147, 148, 150, 164, 189, 190, 209, 215, 227, 239, 258, 259, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 435, 479, 480, 498, 620, 692, 706, 708, 709, 710, 868, 886], "to_data_fram": [111, 135, 139, 144, 148, 215, 227, 258, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 708, 709, 710, 868, 886], "0000": [111, 845], "473093": 111, "474571": 111, "764021": 111, "9875": 111, "491659": 111, "480088": 111, "762445": 111, "9750": [111, 886], "500872": 111, "469376": 111, "749421": 111, "9625": 111, "500605": 111, "449373": 111, "728686": 111, "9500": 111, "515911": 111, "443439": 111, "719536": 111, "lineplot": [111, 144], "confid": [111, 112, 141, 144, 150, 165, 175, 206, 262, 269, 561, 685, 708, 710, 778, 799, 866, 886], "long_format": [111, 144, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 708, 709, 710, 886], "freq_bound": 111, "delta": [111, 136, 201, 264, 265, 266, 267, 476, 479, 480, 544, 708, 710, 786], "theta": [111, 112, 136, 264, 265, 266, 267, 479, 480, 708, 710, 786], "freq_bands_of_interest": 111, "remove_unused_categori": 111, "reorder_categori": 111, "facetgrid": 111, "margin_titl": 111, "n_boot": 111, "axline_kw": 111, "dash": [111, 139, 149, 171, 202, 205, 209, 210, 218, 261, 264, 265, 266, 267, 479, 480, 708, 710, 778, 779, 805, 808, 886], "set_axis_label": 111, "col_templ": 111, "col_nam": [111, 269, 871], "row_templ": 111, "row_nam": [111, 268, 871], "add_legend": [111, 754], "df_mean": 111, "queri": [111, 139, 144, 148, 164, 219, 227, 239, 259, 264, 265, 438, 709], "groupbi": [111, 144, 150, 227], "reset_index": [111, 144], "col_ord": 111, "violinplot": [111, 144], "deep": [111, 136, 144, 157, 180, 201, 244, 264, 265, 266, 267, 288, 411, 412, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 479, 480, 558, 559, 562, 706, 708, 709, 710, 751, 754, 770, 868, 886], "hue_ord": 111, "gert": [111, 244], "pfurtschel": [111, 244], "fernando": [111, 244, 861], "lope": [111, 244, 861], "da": [111, 244, 861], "silva": [111, 244, 861], "principl": [111, 202, 226, 231, 244, 863, 868], "1842": [111, 168, 244], "1857": [111, 244], "00141": [111, 244], "bernhard": [111, 244, 474], "graimann": [111, 244], "jane": [111, 244], "huggin": [111, 244], "simon": [111, 244, 886], "levin": [111, 244], "ecog": [111, 114, 134, 137, 138, 164, 168, 215, 221, 226, 244, 264, 265, 266, 267, 269, 275, 277, 311, 312, 321, 371, 373, 382, 440, 444, 479, 480, 494, 558, 559, 589, 635, 650, 701, 706, 708, 709, 710, 754, 770, 810, 822, 824, 841, 842, 852, 868, 886], "00697": [111, 244], "exposur": [111, 204, 244, 845], "tone": [111, 165, 244, 862], "1993": [111, 177, 244], "90110": [111, 244], "rectifi": 112, "uncertainti": [112, 239, 244, 264, 265, 266, 267, 479, 480, 708, 710, 718, 724, 852], "importantli": [112, 113, 200, 861], "hari": [112, 113, 125, 177, 244, 886], "neuromagnet": [112, 204, 244, 561], "1997": [112, 179, 205, 206, 244, 297, 298, 659, 722, 732, 733, 736, 868], "s0166": [112, 244], "10065": [112, 244], "bradlei": [112, 244], "efron": [112, 244], "trevor": [112, 244], "hasti": [112, 244], "institut": [112, 244, 735, 738], "mathemat": [112, 150, 175, 199, 201, 209, 226, 244, 508, 528, 693, 735, 738, 845, 861, 868, 886], "monograph": [112, 244], "cambridg": [112, 150, 244, 354], "univers": [112, 244, 255, 354, 450, 862, 867, 873, 886], "york": [112, 201, 244, 255, 450, 873, 886], "isbn": [112, 150, 201, 223, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 297, 298, 354, 479, 480, 688, 706, 709], "14989": [112, 244], "web": [112, 145, 204, 212, 241, 244, 274, 549, 762, 874, 886], "stanford": [112, 244], "casi": [112, 244], "bootstrap_confidence_interv": [112, 876], "iter_freq": 112, "frequency_map": 112, "job": [112, 202, 204, 211, 256, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 413, 414, 416, 417, 421, 422, 423, 424, 427, 428, 449, 450, 451, 454, 467, 469, 479, 480, 519, 522, 523, 534, 535, 544, 545, 566, 573, 574, 645, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 738, 786, 789, 808, 886], "skip": [112, 143, 148, 164, 165, 169, 170, 171, 189, 201, 241, 256, 342, 500, 534, 578, 643, 845, 861, 871, 886], "option": [112, 124, 134, 139, 141, 149, 150, 155, 160, 161, 164, 165, 166, 167, 170, 171, 172, 177, 187, 195, 198, 201, 204, 209, 210, 215, 217, 218, 221, 226, 227, 230, 236, 239, 241, 261, 262, 264, 265, 266, 267, 271, 272, 273, 274, 275, 277, 278, 279, 280, 284, 285, 303, 309, 312, 354, 364, 369, 372, 386, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 432, 442, 443, 444, 449, 450, 451, 453, 455, 474, 476, 477, 479, 480, 492, 494, 501, 519, 523, 528, 529, 530, 531, 532, 534, 535, 539, 541, 543, 544, 545, 553, 558, 560, 561, 562, 571, 572, 573, 574, 576, 582, 593, 613, 623, 625, 635, 671, 676, 680, 691, 693, 694, 696, 697, 700, 701, 706, 708, 709, 710, 744, 754, 770, 771, 772, 778, 782, 784, 786, 788, 790, 793, 794, 797, 801, 804, 806, 807, 808, 809, 810, 812, 814, 816, 817, 818, 820, 851, 853, 867, 868, 871, 883, 886], "apply_hilbert": [112, 113, 114, 135, 166, 264, 265, 266, 267, 479, 480, 886], "269399": 112, "897": [112, 208], "077": 112, "1202": 112, "emerg": 112, "bootstrap": [112, 141, 171, 685, 708, 710, 778, 886], "domin": [112, 203, 209, 241, 271, 272, 275, 278, 279, 280, 445, 561], "helper": [112, 226, 312, 330, 875], "winter_r": 112, "freq_nam": 112, "ci_low": 112, "ci_up": 112, "dhz": 112, "xy": [112, 114, 135, 180, 321, 431, 755, 824, 868], "horizontalalign": [112, 201, 205], "xycoord": 112, "838": [112, 159, 163, 208], "trade": [113, 201, 734, 737], "bharadwaj": [113, 125, 244, 886], "berkelei": [113, 114, 255, 873], "tfr_stockwel": [113, 240, 733, 734, 735, 736, 737, 876, 886], "tfr_array_morlet": [113, 734, 735, 736, 737, 738, 876, 886], "centers_to_edg": [113, 876, 886], "sim0001": 113, "sim0002": 113, "burst": [113, 182, 198, 862], "ramp": [113, 201], "logical_or": 113, "on_tim": 113, "han": [113, 585, 658, 659, 733, 734, 736, 737, 886], "sin50hz": 113, "4000": [113, 165, 206, 256, 503], "41160": 113, "41159": 113, "time_bandwidth": [113, 424, 734, 737], "sim": [113, 536, 868], "nmore": 113, "1025": [113, 143, 239], "balanc": [113, 200, 201, 226, 230, 662, 687, 886], "strictli": [113, 150, 160, 167, 168, 177, 201, 203, 290, 754, 886], "regard": [113, 207, 223, 231, 240, 868, 886], "recoverd": 113, "lossless": 113, "disregard": 113, "numer": [113, 155, 161, 170, 201, 204, 215, 226, 231, 270, 277, 353, 376, 446, 471, 479, 480, 561, 683, 693, 694, 696, 697, 719, 865, 867, 868, 874, 886], "all_n_cycl": 113, "isinst": [113, 139, 259, 478], "exagger": 113, "wise": [113, 161, 198, 202, 266, 267, 420, 695, 841, 886], "epochs_hilb": 113, "tfr_data": 113, "413": [113, 177, 226, 231, 244], "3301": 113, "avgpow": 113, "avg_pow": [113, 733, 734], "mesh": [113, 155, 159, 160, 174, 270, 272, 278, 280, 308, 309, 360, 410, 466, 467, 636, 754, 813, 817, 839, 851, 886], "electrocorticographi": [114, 135, 244, 264, 265, 266, 267, 479, 480, 558, 559, 706, 708, 709, 710, 862, 868, 886], "scatterplot": 114, "pyvista": [114, 170, 180, 262, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 754, 756, 764, 768, 770, 782, 810, 812, 813, 817, 819, 824, 843, 844, 863, 874, 886], "clickableimag": [114, 876], "own": [114, 126, 150, 176, 182, 206, 218, 228, 231, 264, 265, 266, 267, 271, 274, 275, 279, 321, 477, 479, 480, 593, 754, 785, 812, 845, 848, 849, 865, 867, 871], "dirnam": [114, 124, 158, 170], "pathlib": [114, 122, 143, 156, 169, 171, 274, 377, 378, 379, 382, 383, 384, 386, 391, 394, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 523, 841, 886], "noqa": [114, 116, 169, 205, 226], "f401": 114, "snapshot_brain_montag": [114, 135, 819, 876, 886], "misc_path": [114, 134, 181], "ecog_data_fnam": 114, "sample_ecog_ieeg": 114, "click": [114, 132, 141, 149, 150, 155, 160, 180, 190, 199, 204, 217, 218, 240, 261, 264, 265, 266, 267, 273, 279, 280, 411, 418, 479, 480, 560, 561, 706, 708, 710, 755, 767, 775, 784, 785, 786, 788, 790, 792, 793, 797, 801, 806, 807, 808, 809, 810, 814, 815, 816, 818, 843, 845, 851, 863, 874, 886], "layout_path": 114, "__file__": [114, 122, 169, 170, 171], "layout_nam": 114, "custom_layout": 114, "lout": [114, 169, 313, 326, 327, 338, 886], "coreg": [114, 134, 156, 157, 158, 159, 170, 312, 470, 473, 770, 861, 868, 876, 886], "estimate_head_mri_t": [114, 134, 876, 886], "sample_ecog": 114, "apply_tran": [114, 134, 155, 159, 181, 312, 886], "conjunct": [114, 226, 259, 264, 413, 874], "xy_pt": [114, 135], "beta_pow": 114, "fig2": [114, 150, 169], "coolwarm": 114, "cbar": [114, 126, 145, 195, 226, 773], "set_axis_off": [114, 135, 171], "bbox_inch": [114, 886], "tight": [114, 150, 160, 194, 266, 267, 729, 788, 790, 886], "669": [114, 195, 208], "mous": [114, 190, 217, 261, 262, 264, 265, 266, 267, 273, 411, 418, 470, 479, 480, 560, 561, 706, 708, 710, 755, 768, 770, 782, 784, 785, 786, 788, 789, 790, 793, 797, 806, 808, 809, 814, 863, 886], "imread": [114, 171], "plot_click": [114, 755], "to_layout": [114, 755], "got": [114, 143, 170, 199, 204, 223, 848, 886], "read_layout": [114, 169, 313, 876, 886], "537": [114, 129, 231], "3d_to_2d": [114, 129], "scalarmapp": 115, "low_contrast": [115, 125, 134, 180, 189, 271, 272, 275, 278, 279, 280, 754, 812, 817], "rh_data": [115, 174, 275, 278], "rh_vertno": [115, 174, 275, 278, 669], "recon": [115, 134, 154, 159, 309, 366, 547, 886], "brodmann": 115, "ba44": 115, "add_head": [115, 134, 155, 189, 754, 886], "seghead": [115, 155, 156, 157, 160, 171, 175, 181, 182, 256, 262, 754, 770, 782], "read_tran": [115, 117, 155, 159, 177, 190, 277, 462, 671, 840, 876, 886], "add_sensor": [115, 134, 135, 189, 210, 754, 886], "role": [115, 164, 169, 176, 185, 186, 261, 262, 266, 268, 269, 275, 364, 527, 528, 539, 614, 623, 625, 638, 654, 754, 763, 770, 782, 822, 845, 867], "sample_audvis_set1": 115, "ylorrd": 115, "add_dipol": [115, 754, 886], "1e8": 115, "static": [115, 179, 209, 215, 244, 256, 263, 388, 590, 742, 743, 744, 843, 871, 886], "add_ax": [115, 126, 145], "082": [115, 129], "embed": [116, 155, 171, 200, 201, 274, 845, 852, 886], "simplic": [116, 176, 195, 201, 226, 230, 865, 886], "instal": [116, 134, 135, 145, 154, 160, 170, 180, 256, 264, 265, 266, 267, 282, 303, 307, 338, 385, 388, 410, 413, 417, 422, 449, 450, 451, 479, 480, 709, 845, 853, 865, 866, 869, 886], "order_func": 116, "spectral_embed": 116, "rbf_kernel": 116, "this_data": 116, "good_pick": 116, "bad_pick": [116, 211], "plt_time": 116, "overlay_tim": [116, 127, 264, 265, 785, 886], "renaud": [116, 244], "keriven": [116, 244], "maureen": [116, 244], "clerc": [116, 244], "1051": [116, 208, 244], "1061": [116, 195, 244], "2037139": [116, 244], "589": [116, 129, 194], "channel_epochs_imag": [116, 129], "992": [117, 129, 208, 210, 231], "eeg_on_scalp": [117, 129], "upon": [118, 143, 156, 169, 171, 264, 265, 274, 417, 479, 480, 755, 771, 824, 845, 851, 867, 886], "hosaka": [118, 244, 771, 886], "flow": [118, 177, 244, 771, 886], "underneath": [118, 771, 886], "poor": [118, 198, 201, 210, 771, 886], "man": [118, 150, 171, 244, 771], "hidehiro": [118, 244, 771], "electrocardiologi": [118, 244, 771], "1976": [118, 244, 771], "s0022": [118, 244, 771], "0736": [118, 244, 771], "80041": [118, 244, 771], "sheraz": [118, 125, 128, 244, 577, 884, 886], "khan": [118, 125, 128, 244, 577, 884, 886], "khansheraz": 118, "plot_arrowmap": [118, 149, 876, 886], "evoked_mag": 118, "evoked_grad": 118, "topoplot": [118, 143, 169, 204, 241, 771, 774, 886], "max_time_idx": 118, "latitud": [118, 771], "longitud": [118, 159, 771], "radial": [118, 157, 534, 535, 545, 646, 771], "cartesian": [118, 174, 177, 771, 868, 871], "info_from": [118, 771, 886], "info_to": [118, 771], "raw_ctf": 118, "raw_ctf_info": 118, "evoked_arrowmap": [118, 129], "engeman": 119, "miko\u0142aj": [119, 873, 886], "magnuski": [119, 873, 886], "mmagnuski": [119, 886], "swp": [119, 255, 873], "pl": 119, "20m": 119, "regularli": [119, 165, 167], "multilin": [119, 886], "all_tim": 119, "rm": [119, 149, 150, 187, 223, 261, 264, 265, 266, 267, 275, 411, 418, 479, 480, 536, 560, 561, 706, 788, 792, 793, 797, 809, 816, 868, 886], "drawn": [119, 149, 218, 226, 261, 264, 265, 266, 267, 272, 273, 278, 280, 411, 418, 479, 480, 560, 561, 576, 658, 659, 706, 708, 710, 771, 772, 777, 778, 786, 787, 790, 792, 793, 797, 806, 808, 809, 810, 814, 816, 817, 886], "spectral_r": 119, "circl": [119, 160, 169, 191, 222, 261, 264, 265, 266, 267, 273, 312, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 759, 771, 776, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 841, 845, 886], "extrapol": [119, 149, 210, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 886], "box": [119, 160, 188, 261, 264, 265, 266, 267, 273, 313, 321, 338, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 750, 771, 786, 788, 790, 792, 793, 797, 806, 809, 814, 816, 851, 886], "stretch": [119, 200, 754], "beyond": [119, 143, 165, 189, 236, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 513, 560, 561, 576, 701, 706, 708, 710, 750, 771, 786, 793, 797, 806, 807, 809, 814, 816], "axes_row": 119, "extr": 119, "margin": [119, 126, 709, 777, 778], "exceed": [119, 183, 206, 209, 228, 264, 561, 591, 709], "mask_param": [119, 231, 261, 264, 265, 266, 267, 411, 418, 479, 480, 560, 706, 708, 710, 771, 786, 793, 809, 814, 816], "markers": [119, 231, 261, 264, 265, 266, 267, 411, 418, 479, 480, 560, 706, 708, 710, 771, 786, 793, 809, 814, 816], "markerfacecolor": [119, 261, 264, 265, 266, 267, 411, 418, 479, 480, 560, 706, 708, 710, 771, 786, 793, 809, 814, 816], "_time": 119, "significant_channel": 119, "_channel": 119, "in1d": 119, "_ch": 119, "perhap": [119, 201, 206, 215, 226], "imped": [119, 201, 244, 886], "image_interp": [119, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 886], "cubic": [119, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 754, 771, 786, 793, 797, 806, 809, 814, 816, 886], "smoothest": 119, "voronoi": [119, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 886], "debug": [119, 161, 170, 256, 377, 378, 379, 382, 383, 384, 391, 394, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 652, 749, 752, 845, 865], "unalt": [119, 361], "properli": [119, 135, 154, 155, 160, 167, 182, 188, 199, 205, 206, 215, 216, 234, 236, 244, 256, 259, 262, 263, 264, 265, 266, 267, 269, 271, 272, 275, 278, 279, 280, 303, 307, 347, 360, 413, 417, 422, 449, 450, 451, 479, 480, 578, 579, 650, 671, 706, 709, 750, 794, 820, 843, 845, 848, 850, 861, 886], "animate_topomap": [119, 266, 267, 886], "frame_r": [119, 266, 267], "blit": [119, 266, 267], "evoked_topomap": [119, 129], "excel": [120, 149, 159, 201, 223], "diagnost": [120, 164, 171, 204, 209, 213], "rare": [120, 274, 867, 886], "80e": [120, 210, 868], "uncom": 120, "fewer": [120, 143, 150, 160, 169, 171, 198, 201, 216, 226, 236, 264, 265, 266, 267, 274, 413, 417, 422, 423, 447, 449, 450, 479, 480, 584, 589, 734, 737, 754, 790, 886], "007": [120, 127, 139, 140, 141, 144, 148, 165, 168, 200, 206, 223, 227, 244, 282, 597], "008": [120, 127, 139, 144, 148, 150, 165, 168, 209, 223, 244, 593], "method_param": [120, 178, 354, 359, 528, 529, 530, 531, 532, 534, 535, 541, 544, 545], "diagonal_fix": [120, 161, 354, 886], "return_estim": [120, 161, 354, 359, 865], "likelihood": [120, 150, 161, 176, 244, 261, 266, 267, 354, 359, 561, 794, 865, 868], "loglik": [120, 261], "1891": 120, "unseen": [120, 161, 176, 354, 865], "descend": [120, 161, 176, 886], "1628": 120, "679": 120, "1659": 120, "783": [120, 155, 163, 231], "1802": [120, 179, 199, 244], "678903414706": 120, "7831816731043": 120, "1031535820766": 120, "724": [120, 129, 195, 231], "evoked_whiten": [120, 129], "read_raw_artemis123": [122, 187, 485, 868, 876, 886], "read_raw_bti": [122, 184, 187, 868, 876, 886], "read_raw_kit": [122, 170, 187, 485, 868, 876, 886], "set_3d_titl": [122, 124, 149, 876, 886], "root_path": 122, "parent": [122, 149, 160, 169, 170, 171, 886], "spm_ctf_meg_example_faces1_3d": 122, "241": [122, 168, 183, 186, 202, 222, 225, 226, 230, 231, 450, 479, 480], "324474": 122, "bti_path": 122, "test_pdf_linux": 122, "test_config_linux": 122, "test_hs_linux": 122, "magn": [122, 187, 868], "3600wh": 122, "pdf": [122, 184, 194, 244, 256, 388, 474, 490, 869], "critic": [122, 150, 159, 170, 177, 184, 201, 209, 226, 228, 231, 593, 652, 752, 862, 872], "mne_create_comp_data": [122, 184, 256, 490], "print_tabl": [122, 184], "routin": [122, 184, 202, 454, 561, 593, 874, 885, 886], "magnes_3600wh": [122, 184], "kit_path": 122, "sqd": [122, 170, 256, 482, 504, 619, 868], "artemis_data_2017": 122, "10h": 122, "38m": 122, "59s_phantom_1k_hpi_1": 122, "artemis123_mneloc": 122, "1863": 122, "hpifit": [122, 208, 256], "ok": [122, 187, 208, 260, 270], "997": [122, 195, 200, 201, 209, 214, 244], "cardin": [122, 165, 168, 215, 221, 305, 306, 335, 430, 841, 871, 886], "555": [122, 129, 231], "meg_sensor": [122, 129, 886], "create_3d_figur": [123, 155, 159, 177, 756, 876], "mne_helmet": [123, 129], "ship": [124, 169, 226, 264, 265, 266, 267, 269, 322, 323, 328, 329, 463, 479, 480, 857, 868, 886], "joan": [124, 136, 158, 886], "massich": [124, 136, 158, 886], "mailsik": [124, 136, 158], "op": [124, 158, 183, 184, 208, 264, 265, 266, 267, 479, 480], "get_builtin_montag": [124, 169, 264, 265, 266, 267, 269, 328, 463, 479, 480, 876, 886], "against": [124, 139, 140, 148, 204, 215, 244, 663, 668, 845, 886], "current_montag": 124, "fiduci": [124, 135, 155, 158, 159, 169, 187, 188, 312, 315, 316, 325, 335, 336, 365, 366, 367, 387, 483, 486, 504, 512, 619, 644, 770, 841, 861, 868, 871, 886], "mri_fiduci": [124, 155, 158, 182, 770, 886], "montage_sgskip": [124, 129], "hcp": [125, 244, 388, 852, 874, 886], "mmp1": [125, 244, 388, 886], "mmp": [125, 388], "Of": [125, 141, 198, 205, 206, 223, 598, 599], "acknowledg": [125, 201], "wu": 125, "minn": 125, "publicli": [125, 165, 403, 404, 862, 867], "get_brain_class": [125, 154, 876], "fetch_hcp_mmp_parcel": [125, 180, 876, 886], "fetch_aparc_sub_parcel": [125, 876], "hcpmmp1": 125, "add_annot": [125, 134, 154, 180, 754], "aud_label": 125, "l_a1_roi": 125, "hcpmmp1_combin": [125, 180, 388], "aparc_sub": 125, "matthew": [125, 179, 244, 388], "glasser": [125, 244, 388], "timothi": [125, 244, 388, 886], "coalson": [125, 244, 388], "emma": [125, 244, 388, 561], "robinson": [125, 179, 244, 388], "hacker": [125, 244, 388], "harwel": [125, 244, 388], "essa": [125, 244, 388], "yacoub": [125, 244, 388], "kamil": [125, 244, 388], "ugurbil": [125, 244, 388], "jesper": [125, 244, 388, 886], "andersson": [125, 244, 388], "beckmann": [125, 244, 388], "jenkinson": [125, 244, 388], "stephen": [125, 179, 194, 226, 227, 244, 388, 417, 561, 693, 694, 696, 697, 735, 738, 886], "essen": [125, 244, 388], "modal": [125, 188, 230, 236, 244, 388], "cerebr": [125, 244, 388], "536": [125, 195, 244, 388], "178": [125, 168, 182, 183, 184, 194, 195, 200, 208, 226, 231, 244, 388], "nature18933": [125, 244, 388], "javeria": [125, 244], "hashmi": [125, 244], "fahimeh": [125, 244, 886], "mamashli": [125, 244, 886], "konstantino": [125, 244], "michmizo": [125, 244], "manfr": [125, 244, 886], "kitzbichl": [125, 244, 886], "santosh": [125, 244], "ganesan": [125, 244], "keri": [125, 244], "lee": [125, 244, 270, 275, 561, 591, 886], "garel": [125, 244], "susan": [125, 244, 659], "whitfield": [125, 244], "gabri": [125, 244], "randi": [125, 244, 528], "gollub": [125, 244], "jian": [125, 244], "kong": [125, 244], "kunjan": [125, 244], "rana": [125, 244], "kenet": [125, 244], "matur": [125, 244], "trajectori": [125, 244], "network": [125, 194, 244, 297, 417, 561, 856], "mediat": [125, 244, 735, 738], "018": [125, 127, 139, 148, 168, 223, 244, 577], "072": [125, 129], "mccloi": [126, 208, 873, 886], "dan": [126, 208, 886], "mpl_toolkit": [126, 169, 205, 226, 231, 778], "axes_grid1": [126, 231, 778], "make_axes_locat": [126, 231], "imagegrid": 126, "inset_loc": [126, 778], "suppos": [126, 167, 205, 767, 868], "max_t": 126, "17909658": 126, "18448887": 126, "83197989": 126, "screenshot": [126, 171, 754, 824, 886], "pixel": [126, 141, 171, 191, 212, 226, 261, 262, 264, 265, 266, 267, 271, 272, 273, 274, 275, 278, 279, 280, 411, 418, 470, 479, 480, 560, 561, 706, 708, 710, 754, 770, 771, 782, 786, 793, 797, 806, 809, 812, 814, 816, 817, 841, 886], "integ": [126, 139, 141, 142, 144, 148, 149, 150, 159, 165, 167, 168, 170, 174, 188, 191, 202, 204, 215, 216, 221, 231, 256, 259, 261, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 297, 298, 310, 313, 314, 321, 327, 329, 354, 358, 359, 369, 370, 371, 411, 413, 418, 427, 428, 432, 433, 440, 449, 450, 453, 454, 455, 469, 474, 476, 477, 479, 480, 512, 537, 538, 539, 560, 561, 563, 576, 577, 578, 579, 585, 589, 599, 601, 608, 617, 619, 623, 654, 656, 674, 692, 701, 706, 708, 709, 710, 714, 715, 716, 717, 719, 737, 740, 771, 778, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 797, 798, 799, 801, 803, 805, 806, 807, 808, 809, 814, 816, 841, 868, 871, 886], "nonwhite_pix": 126, "nonwhite_row": 126, "nonwhite_col": 126, "cropped_screenshot": 126, "nrows_ncol": 126, "axes_pad": 126, "updat": [126, 145, 169, 171, 178, 188, 199, 201, 206, 209, 211, 215, 218, 241, 256, 261, 264, 265, 266, 267, 269, 273, 288, 302, 365, 370, 372, 377, 378, 379, 380, 382, 383, 384, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 446, 463, 474, 479, 480, 500, 527, 562, 645, 649, 741, 754, 843, 845, 862, 867, 871, 886], "rcparam": [126, 136, 201, 886], "labels": 126, "titles": 126, "medium": [126, 155, 182, 256, 308, 874, 886], "height": [126, 170, 256, 269, 271, 272, 275, 278, 279, 280, 309, 313, 321, 326, 470, 754, 763, 812, 817, 841, 886], "gridspec": [126, 266, 267, 793], "keyword": [126, 148, 154, 168, 171, 190, 201, 209, 240, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 416, 417, 421, 422, 424, 427, 428, 430, 432, 436, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 461, 462, 466, 467, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 522, 523, 524, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 557, 561, 563, 564, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 582, 583, 584, 586, 587, 588, 589, 590, 591, 593, 594, 596, 597, 600, 601, 602, 605, 606, 607, 608, 612, 613, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 650, 654, 655, 657, 658, 659, 660, 670, 671, 674, 676, 677, 678, 679, 680, 681, 682, 692, 693, 694, 695, 696, 697, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 723, 724, 725, 728, 729, 733, 734, 736, 737, 738, 739, 742, 743, 744, 749, 752, 753, 754, 755, 762, 770, 771, 776, 779, 782, 786, 787, 788, 789, 794, 797, 798, 799, 804, 805, 807, 808, 810, 811, 812, 813, 817, 818, 819, 823, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 845, 861, 886], "subplot2grid": [126, 194], "inch": [126, 170, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 706, 708, 710, 786, 793, 797, 806, 809, 814, 816], "height_ratio": 126, "rowspan": 126, "775": [126, 169, 173, 231], "bot": 126, "evoked_idx": 126, "brain_idx": 126, "peak_lin": 126, "66ccee": [126, 159, 722, 732], "columnspac": 126, "labelspac": 126, "fancybox": 126, "handlelength": 126, "n_ave": 126, "spine": [126, 180, 767, 778], "set_axisbelow": 126, "tick": [126, 241, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 771, 778, 786, 790, 793, 797, 806, 809, 814, 815, 816, 886], "225": [126, 143, 168, 208, 230, 231, 244, 862], "append_ax": [126, 231], "plot_brain_colorbar": [126, 876, 886], "get_posit": [126, 135, 312, 886], "ymax": [126, 202, 231, 236], "transfigur": 126, "va": [126, 159], "panel": [126, 150, 155, 161, 169, 179, 241, 256, 266, 267, 470, 561, 754, 794, 798, 865], "outlin": [126, 159, 171, 175, 201, 241, 261, 262, 264, 265, 266, 267, 273, 312, 411, 418, 479, 480, 560, 561, 576, 608, 706, 708, 710, 771, 778, 782, 786, 788, 790, 791, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 886], "familiar": [126, 143, 198, 847, 862], "to_plot": 126, "return_tim": [126, 215, 479, 480], "\u00b5v": [126, 141, 143, 144, 148, 150, 165, 200, 206, 227, 256, 261, 264, 265, 266, 267, 271, 272, 273, 274, 275, 278, 279, 280, 411, 418, 479, 480, 516, 560, 561, 576, 706, 708, 710, 771, 784, 785, 786, 788, 790, 793, 797, 806, 807, 809, 814, 815, 816, 841, 868, 886], "1e6": [126, 140, 148, 150, 261, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 354, 358, 359, 411, 418, 420, 479, 480, 785, 788, 790, 792, 793, 815], "inset_ax": [126, 778], "server": [126, 145, 165, 171, 202, 204, 215, 820, 849], "axin": 126, "edit": [126, 150, 168, 170, 199, 201, 204, 217, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 688, 706, 709, 775, 823, 845, 849, 865, 886], "stai": [126, 143, 201, 202, 221, 223, 264, 265, 266, 267, 479, 480, 481, 655, 841, 845], "intact": [126, 198, 215], "That": [126, 141, 143, 160, 161, 201, 231, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 454, 455, 474, 476, 477, 539, 794, 868], "nice": [126, 143, 149, 168, 170, 215, 226, 241, 845, 868, 886], "But": [126, 142, 143, 171, 183, 201, 209, 211, 221, 226, 234, 241, 561, 863], "big": [126, 187, 204, 420, 695, 863, 886], "tast": 126, "luckili": 126, "facet": [126, 159], "set_": 126, "get_children": 126, "line2d": 126, "0x7f57213b7490": 126, "0x7f56e3971c30": 126, "0x7f564f18d9f0": 126, "0x7f564f18e680": 126, "pathcollect": 126, "0x7f564f18f340": 126, "0x7f568ef3e3e0": 126, "0x7f568ef3c4f0": 126, "0x7f568ef3d5a0": 126, "0x7f568ef3ed70": 126, "0x7f568ef3e2c0": 126, "yaxi": [126, 206], "0x7f568ef3f9a0": 126, "rectangl": [126, 217, 706, 771], "0x7f564f1fc100": 126, "certainli": 126, "artistlist": 126, "sensor_dot": 126, "shrink": [126, 199, 226, 227, 589, 865], "set_siz": 126, "904": [126, 129, 231, 277], "publication_figur": [126, 129], "notat": [127, 205, 230, 236, 868], "odd": [127, 201, 324, 410, 868], "test_raw": [127, 167, 256], "read_raw_eeglab": [127, 167, 188, 485, 849, 868, 872, 876, 886], "eog1": 127, "eog2": 127, "011": [127, 139, 148, 168, 180, 186, 201, 223, 244], "012": [127, 139, 148, 168, 218, 223], "017": [127, 139, 148, 168, 215, 223], "019": [127, 128, 129, 134, 138, 139, 148, 168, 207, 223, 244], "021": [127, 139, 140, 148, 165, 168, 223], "022": [127, 139, 148, 168, 183, 223], "023": [127, 139, 141, 148, 168, 223, 244], "024": [127, 139, 148, 168, 223, 231, 244, 693, 694, 696, 697], "po7": [127, 241], "026": [127, 139, 148, 168, 223, 244], "poz": [127, 241], "027": [127, 139, 148, 168, 223, 226, 244, 297, 561, 699, 700, 860], "028": [127, 139, 148, 168, 223, 244, 569, 735, 738], "029": [127, 139, 148, 168, 223, 244], "standard_1020": [127, 150, 158, 169, 221, 503], "fdt": [127, 167, 495, 617], "msec": [127, 150, 706], "new_ev": [127, 216, 437, 439, 526], "203125": 127, "12z": [127, 227], "group_bi": [127, 141, 227, 256, 264, 265, 266, 267, 479, 480, 784, 785, 790, 807, 886], "vline": [127, 266, 267, 778, 792, 886], "224": [127, 129, 168, 170, 187, 208, 223, 225, 226], "roi_erpimage_by_rt": [127, 129], "plot_psd": [128, 139, 141, 165, 198, 218, 239, 240, 264, 265, 266, 267, 274, 479, 480, 845, 868, 886], "66067": 128, "109": [128, 136, 168, 195, 204, 208, 230, 231, 380, 862], "xscale": [128, 206, 264, 265, 266, 267, 479, 480, 708, 710, 808, 886], "wall": [128, 201, 202, 244, 693, 694], "shield": [128, 202, 211, 244, 264, 265, 266, 267, 269, 479, 480, 558, 593, 706, 708, 709, 710, 868], "review": [128, 150, 177, 203, 204, 244, 560, 566, 845, 867], "scientif": [128, 244, 849, 850, 870], "instrument": [128, 177, 198, 204, 244], "056101": [128, 244], "4802845": [128, 244], "sensor_noise_level": [128, 129], "auto_examples_visu": 129, "xhemi": [129, 133, 276, 360, 630], "681": [129, 133, 195, 231], "topo_custom": [129, 132], "ssp_projs_sensitivity_map": [129, 130], "546": [129, 130, 142, 231], "topo_compare_condit": [129, 131], "788": [129, 131, 208, 231], "ecg_fnam": 130, "ssp_ecg_map": 130, "arg": [130, 230, 236, 256, 269, 277, 688, 845], "plot_evoked_topo": [131, 149, 210, 876, 886], "audio": [131, 174, 190, 195, 239, 244, 264, 265, 266, 267, 418, 479, 480, 708, 709, 710, 725], "nleft": 131, "iter_topographi": [132, 876, 886], "20hz": 132, "return_freq": [132, 136, 239, 240, 241, 708, 710, 886], "my_callback": 132, "ch_idx": [132, 208, 228, 240], "callback": [132, 365, 754, 767, 886], "fig_facecolor": [132, 141, 239, 264, 265, 266, 267, 479, 480, 706, 708, 710, 767, 815], "axis_facecolor": [132, 239, 264, 265, 266, 267, 479, 480, 708, 710, 767], "axis_spinecolor": [132, 767], "on_pick": [132, 767], "gcf": 132, "639": [132, 165, 171, 231], "stc_path": [133, 171], "fsaverage_sym": [133, 360], "left_right": [133, 360], "stc_xhemi": 133, "70314401": 133, "48867635": 133, "29875944": 133, "stereoelectroencephalographi": [134, 862], "talairach": [134, 159, 179, 180, 279, 280, 366, 367, 637, 818, 865, 868, 886], "xfm": [134, 279, 280, 367, 637, 818, 868, 886], "involv": [134, 135, 155, 157, 159, 198, 201, 202, 205, 217, 367, 563, 867, 868], "pip": [134, 135, 145, 160, 843, 845, 847, 850, 853], "conda": [134, 135, 160, 843, 844, 845, 847, 850, 853, 886], "li": [134, 135, 159, 171, 207, 244, 868, 873, 886], "adam2392": [134, 135], "sample_seeg_ieeg": 134, "1310640": 134, "1370605": 134, "1371": [134, 156, 195, 239, 244, 264, 265, 266, 267, 479, 480, 708, 710, 718, 724], "fixat": [134, 191, 212, 498, 862], "isi": [134, 190], "mni_tal": [134, 135, 312, 325], "this_subject_dir": 134, "head_mri_t": 134, "sample_seeg": 134, "mri_mni_t": [134, 637], "read_talxfm": [134, 159, 876], "taliarach": 134, "fro": [134, 455, 741], "rostral": [134, 754], "warp": [134, 155, 158, 170, 244, 590, 862, 886], "compute_native_head_t": [134, 158, 181, 312, 876, 886], "combine_transform": 134, "view_kwarg": [134, 156, 159], "tan": [134, 211, 886], "dens": [134, 155, 156, 157, 159, 181, 182, 189, 244, 256, 277, 308, 569, 754, 770, 886], "video": [134, 155, 159, 160, 870, 886], "nearbi": [134, 135, 194, 198, 206, 209, 222, 244, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 588, 593, 701, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816], "atla": [134, 180, 244, 256, 262, 271, 272, 275, 277, 278, 279, 280, 309, 445, 515, 655, 841, 862, 865, 868, 874, 886], "get_montage_volume_label": [134, 754, 876, 886], "lami": [134, 471], "lttr": 134, "isdigit": 134, "lpm": 134, "lsma": 134, "elec": [134, 227], "plot_channel_labels_circl": [134, 876, 886], "rphp": 134, "ltpo": 134, "lphg": 134, "lent": 134, "lstg": 134, "lpli": 134, "lpcn": 134, "lpit": 134, "rahp": 134, "lofc": 134, "lacn": 134, "lbri": 134, "ctx": 134, "putamen": 134, "add_volume_label": [134, 180, 754, 886], "heatmap": [134, 209], "lfp": 134, "stc_near_sensor": [134, 135, 876, 886], "Its": [134, 208, 868], "view_layout": [134, 179, 271, 272, 275, 278, 279, 280, 754, 812, 817], "sagitt": [134, 159, 179, 262, 754, 772, 782], "m4": 134, "sai": [134, 135, 201, 202, 205, 207, 215, 221, 228, 231, 750, 845, 851, 861, 871], "20_seeg": [134, 138], "epilepsi": [135, 886], "seizur": [135, 886], "complementari": [135, 200, 874], "seeg": [135, 137, 138, 164, 168, 215, 221, 264, 265, 266, 267, 269, 277, 279, 311, 312, 316, 366, 371, 373, 440, 444, 463, 479, 480, 485, 494, 557, 558, 559, 561, 635, 637, 650, 701, 706, 708, 709, 710, 754, 770, 776, 810, 841, 842, 852, 868, 886], "liberti": [135, 244, 886], "hamilton": [135, 244, 886], "libertyhamilton": 135, "mne_bid": 135, "bidspath": 135, "read_raw_bid": 135, "bids_root": 135, "epilepsy_ecog": [135, 170, 876, 886], "bids_path": 135, "pt1": 135, "session": [135, 139, 141, 148, 149, 165, 170, 171, 199, 209, 211, 217, 264, 265, 375, 376, 479, 480, 561, 784, 801, 807, 815, 843, 861, 865, 869, 886], "presurgeri": 135, "ictal": 135, "datatyp": [135, 191, 886], "ieeg": [135, 874, 875, 876, 886], "trans_bandwidth": [135, 201, 447, 450, 479, 480], "add_mni_fiduci": [135, 312, 886], "posterior": [135, 155, 159, 270, 312, 324, 474, 683, 841, 886], "commissur": [135, 312], "epoch_length": 135, "269079": 135, "269": [135, 168, 208, 226, 231], "2201": 135, "ad1": 135, "att1": 135, "ast1": 135, "g16": 135, "slt1": 135, "sensor_color": [135, 770], "gamma_power_t": 135, "gamma_info": 135, "gamma_power_at_15": 135, "rgba": [135, 270, 271, 272, 275, 278, 279, 280, 754, 769, 773, 812, 817, 818, 886], "get_cmap": 135, "tolist": 135, "funcanim": [135, 266, 267], "gamma_pow": 135, "x_line": 135, "epileptiform": 135, "progress": [135, 150, 164, 170, 200, 244, 414, 421, 845, 886], "posteriorli": 135, "becom": [135, 140, 181, 200, 201, 203, 204, 209, 211, 234, 235, 236, 264, 265, 266, 267, 607, 775, 790, 845, 853, 867, 868, 886], "xyz_pt": 135, "vmid": 135, "intra": [135, 677], "4932": 135, "038": [135, 138, 139, 148, 168, 223], "30_ecog": [135, 138], "cite": [136, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 389, 450, 479, 480, 706, 709, 845, 862], "toi": [136, 226, 874], "answer": [136, 206, 231, 241, 845, 865], "question": [136, 140, 209, 241, 845, 848, 864, 866], "alic": 136, "tackl": 136, "chambon": [136, 244, 886], "stan": 136, "sleep_physionet": [136, 862, 876, 886], "fetch_data": [136, 862, 876, 886], "randomforestclassifi": 136, "accuracy_scor": 136, "functiontransform": 136, "associ": [136, 143, 167, 171, 190, 198, 205, 206, 208, 226, 228, 244, 258, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 419, 462, 479, 480, 522, 617, 619, 656, 688, 693, 698, 706, 709, 776, 784, 785, 787, 788, 790, 805, 806, 843, 845, 868, 871, 886], "ground": [136, 165, 206, 561, 805, 874], "truth": [136, 206, 561, 805], "expert": [136, 161, 845, 865, 867], "alice_fil": 136, "bob_fil": 136, "raw_train": 136, "marker": [136, 150, 167, 170, 176, 187, 188, 194, 200, 205, 256, 261, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 411, 414, 418, 421, 424, 427, 428, 454, 467, 469, 479, 480, 482, 504, 519, 522, 523, 534, 535, 544, 545, 560, 561, 566, 573, 574, 576, 619, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 706, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 771, 786, 789, 793, 797, 806, 807, 808, 809, 813, 814, 816, 862, 886], "infer_typ": [136, 487, 494, 886], "annot_train": 136, "read_annot": [136, 217, 754, 876, 886], "emit_warn": [136, 258, 479, 480, 594], "resp": [136, 168, 215, 264, 265, 266, 267, 274, 311, 479, 480, 494, 558, 706, 708, 709, 710, 784, 807, 868, 886], "physionet_sleep": 136, "sc4001e0": 136, "recogn": [136, 170, 206, 494, 867, 886], "renam": [136, 150, 188, 210, 215, 258, 264, 265, 266, 267, 312, 340, 479, 480, 487, 494, 641, 754, 764, 819, 845, 853, 886], "oro": 136, "nasal": 136, "subment": 136, "temp": [136, 269], "rectal": 136, "wake": 136, "rem": [136, 167], "abbrevi": [136, 174, 205, 754, 868, 886], "rapid": [136, 143, 194, 201, 244, 417], "long": [136, 139, 140, 145, 198, 201, 202, 204, 208, 216, 217, 221, 227, 234, 235, 262, 264, 265, 266, 267, 271, 272, 275, 276, 278, 279, 280, 354, 360, 479, 480, 531, 564, 569, 593, 706, 708, 709, 710, 754, 845, 848, 849, 861, 867, 874, 886], "awak": 136, "night": [136, 403, 862], "imbal": [136, 230, 571, 572, 582, 593, 604], "trim": [136, 264, 265], "occurr": [136, 143, 198, 435, 437], "annotation_desc_2_event_id": 136, "redefin": 136, "events_train": 136, "chunk_dur": [136, 167, 440, 886], "stage_color": 136, "prop_cycl": 136, "by_kei": 136, "188": [136, 168, 183, 194, 208, 226, 231], "raw_test": 136, "annot_test": 136, "events_test": 136, "epochs_test": 136, "sc4011e0": 136, "1103": [136, 177, 244], "562": [136, 231], "signatur": [136, 199, 230, 414, 421, 428, 845, 863, 886], "ci": [136, 145, 201, 210, 226, 239, 561, 685, 708, 710, 778, 799, 845, 886], "\u00b5v\u00b2": 136, "eeg_power_band": 136, "compat": [136, 143, 170, 175, 257, 264, 265, 266, 267, 320, 362, 371, 386, 394, 417, 419, 422, 424, 425, 426, 451, 470, 479, 480, 534, 561, 708, 710, 784, 786, 807, 808, 819, 843, 851, 853, 865, 868, 871, 886], "psds_band": 136, "boilerpl": 136, "sckit": 136, "manner": [136, 150, 177, 226, 227, 259, 264, 886], "thank": [136, 139, 845, 874], "pipe": [136, 845, 862], "n_estim": [136, 414, 421], "acc": 136, "6854034451495921": 136, "ye": [136, 208, 209, 226, 266, 479, 500, 623, 865, 886], "databas": [136, 244, 389, 403, 404], "mathieu": [136, 244, 886], "galtier": [136, 244], "pierrick": [136, 244], "arnal": [136, 244], "gill": [136, 244], "wainrib": [136, 244], "architectur": [136, 244, 886], "rehabilit": [136, 244], "758": [136, 195, 231, 244], "769": [136, 244], "tnsre": [136, 244], "2813138": [136, 244], "kemp": [136, 244, 403, 404, 862], "zwinderman": [136, 244, 403, 404, 862], "tuk": [136, 244, 404, 862], "kamphuisen": [136, 244, 403, 404, 862], "obery\u00e9": [136, 244, 404, 862], "feedback": [136, 244, 404, 862, 886], "microcontinu": [136, 244, 404, 862], "1185": [136, 244, 404, 862], "867928": [136, 244, 404, 862], "218": [136, 138, 168, 201, 226, 231, 244], "60_sleep": [136, 138], "mne_gui_addon": [137, 164, 471, 886], "stage": [137, 138, 143, 154, 155, 164, 171, 190, 199, 201, 204, 205, 210, 217, 244, 258, 259, 264, 265, 266, 267, 269, 276, 360, 403, 440, 479, 480, 494, 520, 576, 611, 616, 708, 744, 787, 841, 845, 852, 861, 862, 876, 886], "polysomnographi": [137, 138, 164, 258, 264, 269, 403, 404, 440, 494, 611, 708, 787, 862, 886], "psg": [137, 138, 164, 258, 264, 269, 403, 440, 494, 611, 708, 787, 862, 886], "auto_tutorials_clin": 138, "628": [138, 231], "cover": [139, 146, 148, 150, 152, 154, 161, 162, 164, 165, 167, 170, 171, 172, 185, 192, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 215, 218, 219, 226, 237, 241, 242, 270, 274, 593, 601, 610, 690, 836, 845, 868, 869, 886], "possibli": [139, 148, 165, 171, 201, 228, 229, 266, 267, 276, 297, 298, 310, 354, 358, 359, 369, 370, 371, 386, 411, 418, 454, 455, 474, 476, 477, 539, 561, 580, 582, 688, 754, 794, 861, 886], "del_proj": [139, 148, 198, 205, 206, 207, 264, 265, 266, 267, 479, 480, 886], "plot_projs_topomap": [139, 141, 148, 206, 218, 264, 265, 266, 267, 479, 480, 805, 876, 886], "plot_psd_topomap": [139, 141, 239, 264, 265, 266, 267, 479, 480, 886], "sample_data_fold": [139, 141, 144, 145, 154, 165, 166, 167, 168, 169, 198, 199, 200, 202, 204, 205, 206, 207, 209, 215, 216, 217, 218, 239], "sample_data_raw_fil": [139, 141, 144, 145, 165, 166, 167, 168, 198, 199, 200, 202, 204, 205, 206, 207, 209, 215, 216, 217, 218, 239], "sample_data_events_fil": [139, 144, 216], "events_from_fil": [139, 216], "bare": [139, 165], "299693": [139, 150], "699283": 139, "quot": [139, 194, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709, 845, 868], "didn": [139, 143, 264, 446, 709, 886], "string": [139, 142, 143, 144, 148, 149, 167, 168, 170, 171, 200, 215, 216, 217, 239, 257, 258, 259, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 283, 310, 312, 321, 327, 329, 340, 353, 354, 358, 359, 363, 369, 374, 377, 378, 379, 382, 383, 384, 386, 391, 392, 394, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 411, 413, 414, 418, 421, 427, 428, 432, 435, 440, 445, 446, 459, 461, 463, 471, 478, 479, 480, 481, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 515, 520, 528, 534, 535, 558, 559, 560, 561, 563, 564, 576, 577, 578, 579, 582, 584, 585, 589, 593, 599, 601, 608, 617, 619, 623, 641, 662, 663, 664, 665, 666, 668, 671, 674, 683, 687, 689, 692, 701, 702, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 737, 741, 742, 744, 754, 762, 770, 771, 778, 784, 785, 786, 788, 790, 791, 792, 793, 794, 797, 798, 805, 806, 807, 808, 809, 812, 814, 816, 817, 818, 843, 844, 845, 860, 865, 871, 886], "event_dict": [139, 141, 144, 148, 150, 165, 167, 210, 212, 216, 221, 239], "buttonpress": [139, 148, 150, 165, 167, 171, 216], "mention": [139, 143, 150, 165, 167, 168, 169, 174, 201, 205, 206, 207, 215, 231, 353, 845], "haven": [139, 217, 845, 869, 886], "turn": [139, 148, 149, 151, 174, 190, 199, 204, 205, 206, 207, 241, 257, 259, 264, 452, 517, 655, 755, 775, 862, 867, 868, 886], "accommod": [139, 886], "request": [139, 160, 165, 170, 171, 204, 206, 209, 215, 216, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 410, 479, 480, 561, 573, 574, 613, 650, 687, 689, 707, 708, 710, 763, 786, 795, 797, 812, 817, 841, 851, 852, 865, 866, 867, 871, 886], "drop_log": [139, 141, 200, 259, 264, 265, 274, 573, 574, 709, 783, 886], "too_short": [139, 150, 264, 709], "forget": [139, 156, 157, 167, 845], "brows": [139, 170, 171, 180, 199, 217, 262, 264, 265, 479, 480, 561, 782, 784, 801, 807, 857, 863, 886], "scrollbar": [139, 264, 265, 479, 480, 561, 784, 801, 807, 886], "focus": [139, 140, 180, 217, 264, 265, 479, 480, 561, 663, 668, 784, 801, 807, 845, 849, 852, 870], "screen": [139, 170, 191, 212, 244, 256, 264, 265, 479, 480, 784, 807, 820, 862, 886], "bracket": [139, 148, 150, 168, 188, 215, 221, 239, 886], "catch": [139, 141, 165, 180, 230, 236, 845], "charact": [139, 165, 168, 199, 215, 216, 324, 495, 511, 611, 617, 662, 663, 664, 665, 666, 668, 762, 845, 886], "tag": [139, 143, 150, 164, 242, 243, 244, 256, 264, 265, 269, 274, 312, 328, 435, 440, 489, 511, 558, 708, 709, 762, 816, 841, 845, 862, 874, 886], "complain": 139, "ask": [139, 143, 159, 845, 860, 862, 866, 867], "except": [139, 142, 170, 174, 175, 191, 209, 215, 264, 265, 266, 267, 284, 285, 328, 348, 349, 354, 403, 452, 479, 480, 481, 550, 562, 582, 633, 697, 701, 744, 845, 868, 871, 886], "keyerror": [139, 261, 264, 265, 269, 273, 288, 302, 527, 709, 741], "rais": [139, 143, 207, 259, 261, 264, 265, 266, 267, 269, 270, 273, 274, 275, 278, 284, 285, 288, 302, 316, 339, 342, 348, 349, 354, 358, 361, 363, 365, 369, 370, 403, 430, 438, 452, 458, 459, 461, 479, 480, 500, 527, 550, 561, 592, 613, 624, 642, 644, 647, 651, 656, 693, 694, 696, 697, 706, 708, 709, 710, 741, 787, 798, 832, 834, 845, 867, 886], "reorder_channel": [139, 148, 215, 264, 265, 266, 267, 479, 480, 706, 708, 709, 710, 886], "exploratori": [139, 148, 166, 205, 215, 227, 863], "epochs_eeg": 139, "new_ord": [139, 148], "epochs_subset": 139, "032": [139, 148, 168, 223, 227, 244], "033": [139, 148, 168, 223], "035": [139, 148, 168, 223], "037": [139, 148, 168, 215, 223], "039": [139, 141, 148, 168, 223], "042": [139, 148, 168, 223, 868], "043": [139, 148, 168, 223], "045": [139, 141, 148, 168, 223], "046": [139, 141, 148, 168, 223, 244, 666, 868], "047": [139, 141, 148, 168, 223], "049": [139, 141, 148, 168, 223], "052": [139, 141, 148, 161, 168, 184, 199, 223, 244, 735, 738], "054": [139, 141, 148, 168, 207, 223, 244, 539, 663, 668], "055": [139, 141, 148, 168, 207, 223, 244, 389], "056": [139, 141, 148, 168, 223], "058": [139, 141, 148, 168, 218, 223], "unchang": [139, 148, 205, 264, 265, 266, 267, 479, 480, 594, 645], "blinkchannel": 139, "20auditori": 139, "20buttonpress": 139, "4face": [139, 150], "4visual": 139, "19visual": 139, "shorter_epoch": 139, "include_tmax": [139, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709, 886], "obj": [139, 160, 636, 839, 886], "0998976": 139, "expand": [139, 143, 159, 200, 205, 264, 265, 266, 267, 270, 275, 278, 354, 441, 444, 469, 479, 480, 708, 710, 786, 865, 886], "later_epoch": 139, "tshift": [139, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 439, 479, 480, 706, 709], "amount": [139, 140, 161, 166, 177, 199, 206, 207, 222, 241, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 274, 275, 278, 279, 280, 363, 374, 411, 418, 451, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 520, 536, 560, 561, 602, 618, 706, 708, 709, 710, 784, 786, 793, 797, 806, 807, 809, 812, 814, 817, 865, 868, 886], "00166496": 139, "00332992": 139, "99833504": 139, "99667008": 139, "enforc": [139, 588, 886], "eog_data": 139, "channel_4_6_8": 139, "arr": [139, 215, 241, 685], "repeatedli": [139, 204, 206, 479, 480, 851, 886], "hierarch": [139, 142, 143, 239, 244, 435, 474, 526, 841, 886], "multiindex": [139, 264, 265, 706, 708, 709, 710], "aggreg": [139, 142, 144, 240, 264, 265, 266, 267, 314, 435, 479, 480, 706, 708, 710, 785, 786, 886], "endpoint": [139, 142, 167, 221, 259, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 287, 578, 623, 624, 722, 732, 736], "sort_index": 139, "inplac": [139, 144, 258, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 317, 436, 446, 479, 480, 557, 607, 660, 845], "read_epochs_eeglab": [139, 188, 868, 872, 876, 886], "read_epochs_kit": [139, 187, 868, 876, 886], "audiovisu": [139, 165, 215], "epochs_from_fil": 139, "convent": [139, 159, 169, 171, 187, 189, 205, 206, 216, 244, 256, 269, 303, 324, 334, 496, 601, 624, 640, 722, 731, 732, 754, 868, 871, 886], "basenam": [139, 216], "_epo": 139, "issu": [139, 140, 143, 150, 160, 194, 201, 202, 205, 216, 217, 264, 265, 270, 275, 289, 291, 422, 479, 480, 561, 600, 669, 672, 784, 801, 807, 841, 843, 845, 864, 866, 867, 874, 886], "adher": [139, 142, 358, 443], "epochsfif": [139, 142], "anyth": [139, 187, 204, 387, 754, 845], "baseepoch": [139, 561, 845, 876, 886], "ndarrai": [139, 215, 221, 223, 241, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 283, 297, 298, 305, 321, 344, 350, 363, 365, 368, 369, 410, 411, 412, 415, 418, 423, 427, 431, 437, 439, 447, 448, 449, 451, 454, 455, 456, 478, 479, 480, 482, 515, 536, 560, 561, 562, 569, 572, 573, 574, 576, 582, 586, 587, 590, 591, 608, 629, 655, 656, 671, 685, 686, 687, 691, 692, 693, 694, 696, 697, 706, 707, 708, 709, 710, 719, 722, 724, 725, 732, 735, 742, 743, 744, 754, 755, 758, 768, 771, 773, 786, 790, 792, 793, 795, 796, 809, 812, 813, 814, 816, 817, 818, 834, 884, 886], "10_epochs_overview": [139, 147], "aldai": [140, 244, 886], "reason": [140, 148, 149, 161, 165, 170, 171, 183, 199, 200, 201, 202, 203, 205, 206, 207, 215, 217, 226, 235, 236, 244, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 278, 279, 280, 298, 354, 371, 423, 479, 480, 561, 573, 583, 586, 593, 693, 694, 696, 697, 699, 706, 709, 783, 820, 845, 861, 865, 867, 868, 886], "safer": [140, 271, 272, 275, 278, 279, 280, 491], "distort": [140, 188, 201, 218, 241, 491, 744], "spuriou": [140, 145, 161, 452, 865], "carina": [140, 886], "forster": [140, 886], "email": [140, 845, 851], "carinaforster0611": 140, "merge_ev": [140, 216, 354, 876, 886], "baseline_tmin": 140, "baseline_tmax": 140, "4957": [140, 150, 335], "trad_aud": 140, "trad_vi": 140, "heterogen": [140, 200, 886], "aud_predictor": 140, "vis_predictor": 140, "trickier": 140, "seaprat": 140, "baseline_predictor": 140, "squeez": [140, 230, 231, 236], "singleton": [140, 754, 886], "\u03bcv": 140, "microvolt": [140, 187, 489, 868], "unstabl": [140, 161, 203, 354, 865, 886], "transpos": [140, 215, 226, 227, 231, 234, 235, 236, 871, 886], "reg_model": 140, "6254": 140, "lm": [140, 569], "namedtupl": [140, 691], "dict_kei": [140, 168, 205], "1998": [140, 148, 244, 868], "49949": [140, 148], "tell": [140, 149, 154, 161, 165, 170, 200, 204, 206, 212, 215, 228, 230, 236, 277, 845, 848, 849, 864, 868], "strongli": [140, 171, 198, 199, 207, 479, 480, 510, 843, 845, 861, 865, 868], "\u03b2": [140, 141, 218], "constant": [140, 155, 159, 169, 195, 198, 201, 211, 241, 259, 264, 265, 266, 267, 269, 371, 479, 480, 483, 512, 742, 841, 862, 868, 886], "effect_of_baselin": 140, "unsurprisingli": 140, "farther": [140, 865], "weaker": [140, 264, 265, 266, 267, 446, 447, 449, 450, 479, 480, 868], "pure": [140, 275, 845], "influenc": [140, 201, 203, 204, 244, 867], "reg_aud": 140, "reg_vi": 140, "show_sensor": [140, 143, 165, 778, 886], "truncate_yaxi": [140, 231, 778, 886], "subtl": 140, "apart": [140, 149, 167, 221], "diff_tradit": 140, "diff_regress": 140, "themselv": [140, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 454, 455, 474, 476, 477, 539, 794, 867], "ought": 140, "persist": [140, 141, 198, 202, 865, 886], "interaction_effect": 140, "seem": [140, 143, 150, 161, 190, 201, 204, 206, 241, 561, 845], "randomli": [140, 165, 226, 513, 591, 610, 672], "glm": [140, 244, 852], "lift": [140, 177, 195, 234, 236, 244], "psyp": [140, 150, 201, 231, 244, 692, 693, 694, 696, 697], "13451": [140, 244], "15_baseline_regress": [140, 147], "imagemap": 141, "discontinu": [141, 145, 146, 147, 150, 164, 167, 201, 204, 215, 216, 221, 239, 264, 452, 616, 708, 710, 841], "176": [141, 168, 170, 208, 231, 244, 561], "until": [141, 199, 200, 207, 210, 259, 262, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 470, 471, 478, 479, 480, 561, 564, 708, 710, 751, 754, 782, 784, 801, 807, 810, 845, 868], "scroll": [141, 165, 217, 218, 262, 264, 265, 479, 480, 561, 782, 784, 801, 807, 823, 886], "enabl": [141, 171, 218, 241, 256, 257, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 373, 470, 479, 480, 576, 600, 652, 693, 694, 696, 697, 708, 709, 749, 754, 763, 767, 770, 789, 807, 812, 817, 820, 843, 851, 861, 867, 868, 886], "unappli": [141, 149, 205, 207, 264, 265, 266, 267, 441, 442, 443, 444, 479, 480, 886], "purg": 141, "catch_trials_and_buttonpress": 141, "pick_ev": [141, 216, 876], "event_color": [141, 212, 216, 264, 265, 479, 480, 784, 807, 886], "butterfli": [141, 148, 150, 151, 171, 199, 205, 209, 218, 264, 265, 266, 267, 274, 479, 480, 561, 784, 788, 791, 798, 807, 823, 872, 886], "ecg_proj_fil": [141, 205], "ecg_proj": [141, 145, 205, 206], "41auditori": 141, "40button": 141, "8face": 141, "8visual": 141, "40visual": 141, "inherit": [141, 239, 354, 886], "joint": [141, 181, 206, 244, 264, 265, 266, 267, 273, 411, 418, 479, 480, 650, 708, 710, 786, 793, 806, 874, 886], "epochsspectrum": [141, 164, 242, 243, 264, 265, 266, 267, 452, 479, 710, 749, 876, 886], "\u03b4": [141, 218], "\u03b8": [141, 218], "\u03b3": [141, 218], "api": [141, 168, 191, 195, 218, 221, 226, 239, 412, 549, 754, 763, 767, 853, 857, 869], "jointli": [141, 161, 204, 206, 264, 265, 266, 267, 273, 297, 298, 355, 356, 357, 411, 418, 479, 480, 561, 573, 574, 708, 710, 786, 793, 805, 806, 865, 886], "prefer": [141, 150, 169, 170, 188, 189, 191, 201, 204, 205, 212, 259, 264, 265, 266, 267, 360, 418, 440, 459, 479, 480, 561, 649, 708, 710, 808, 843, 845, 849, 851, 852, 864, 867, 868, 871], "untransform": 141, "docstr": [141, 150, 179, 201, 202, 209, 215, 218, 239, 265, 283, 297, 298, 474, 476, 477, 539, 708, 750, 752, 769, 886], "plot_topo_imag": [141, 264, 265, 886], "accompani": [141, 671, 867], "scalebar": [141, 886], "highli": [141, 187, 206, 222, 230, 499, 618, 622, 692, 849], "customiz": [141, 266, 267, 706, 791], "respond": [141, 143, 194, 867], "opposit": [141, 167, 515, 868], "0242": [141, 168], "pop": [141, 149, 199, 261, 264, 265, 269, 273, 288, 302, 527, 741, 815, 843, 886], "had": [141, 150, 166, 167, 174, 180, 200, 201, 202, 205, 206, 218, 239, 241, 264, 265, 404, 434, 582, 623, 709, 868, 886], "At": [141, 190, 203, 204, 210, 320, 479, 845, 851, 861, 886], "fullscreen": [141, 470, 886], "unusu": [141, 183, 199, 203], "reject_criteria": [141, 144, 150, 165, 200, 210], "3000e": [141, 144, 200], "find_layout": [141, 169, 876, 886], "font_color": [141, 264, 265, 706, 815], "reinforc": 141, "disguis": 141, "mayb": [141, 263, 264, 265, 266, 267, 479, 480, 558, 706, 708, 709, 710], "20_visualize_epoch": [141, 147], "who": [142, 256, 269, 561, 845, 849, 862, 867, 886], "lexic": [142, 862], "decis": [142, 190, 201, 241, 259, 264, 415, 520, 616, 862], "kiloword_data_fold": 142, "kiloword_data_fil": 142, "capabl": [142, 154, 165, 167, 376, 754, 819, 823, 825, 826, 843, 845, 849, 852, 862, 886], "surviv": [142, 269], "reload": 142, "attach": [142, 168, 199, 215, 227, 239, 435, 841], "numberoflett": [142, 227], "english": [142, 862], "lexicon": 142, "wordfrequ": 142, "render": [142, 155, 159, 170, 171, 256, 264, 265, 271, 272, 274, 275, 278, 279, 280, 470, 479, 480, 561, 706, 754, 763, 784, 801, 807, 812, 813, 817, 820, 822, 845, 851, 868, 869, 886], "orthographicdist": 142, "bigramfrequ": 142, "consonantvowelproport": 142, "450000": 142, "189490": 142, "900000": 142, "700704": 142, "600000": 142, "858537": 142, "700000": 142, "454540": 142, "1095": 142, "539076": 142, "686": [142, 231], "drudgeri": 142, "473684": 142, "556303": 142, "732357": 142, "991226": 142, "859": [142, 231], "545879": 142, "billiard": 142, "500000": [142, 143, 194], "672098": 142, "838597": 142, "698970": 142, "615": [142, 194, 208, 231], "088112": 142, "959": [142, 208, 231], "solenoid": 142, "111111": 142, "301030": 142, "544507": 142, "iloc": [142, 144], "iat": 142, "nindex": 142, "arbitrarili": [142, 157, 231, 868], "highcomplex": 142, "startswith": [142, 886], "district": 142, "disarrai": 142, "disast": 142, "diseas": 142, "discord": 142, "dispos": 142, "267": [142, 167, 168, 244, 860], "lasso": [142, 244, 264, 265, 266, 267, 479, 480, 784, 807, 810, 886], "tentacl": 142, "banjo": 142, "corsag": 142, "fall": [142, 150, 167, 170, 209, 217, 257, 274, 365, 404, 435, 452, 563, 841, 868, 886], "rich": [142, 170, 843, 849], "typhoon": 142, "bungalow": 142, "colossu": 142, "linguist": 142, "dozen": [142, 199, 204, 206, 863], "share": [142, 189, 201, 217, 258, 297, 607, 693, 694, 696, 697, 845, 863, 868, 871, 874, 886], "letter": [142, 169, 187, 227, 244, 754, 886], "n_letter": 142, "intens": [142, 159, 170, 180, 181, 189, 204, 266, 267, 271, 272, 275, 278, 279, 280, 282, 537, 538, 588, 754, 789, 812, 817, 841, 886], "sort_ord": 142, "obviou": [142, 170, 199, 204, 218, 234], "reaction": [142, 226, 264, 265, 785, 886], "new_metadata": 142, "foo": [142, 149, 170, 264, 265, 386, 709, 845], "416": [142, 143, 147, 170, 231], "30_epochs_metadata": [142, 147], "eriksen": 143, "flanker": [143, 862], "introductori": [143, 149, 161, 167, 168, 198, 215, 216, 226, 865], "straight": [143, 264, 265, 266, 267, 479, 480, 810], "creation": [143, 148, 154, 167, 200, 217, 256, 258, 261, 264, 265, 274, 277, 308, 410, 573, 574, 868, 886], "ourselv": [143, 174, 203, 204, 206], "incorrect": [143, 175, 191, 200, 201, 211, 244, 843, 868, 886], "sophist": [143, 188, 453], "erp_cor": [143, 170, 862, 876], "infil": 143, "core_subject": 143, "001_task": [143, 211], "flankers_eeg": 143, "all_ev": 143, "all_event_id": 143, "935935": 143, "913": [143, 231], "33793": 143, "target_left": 143, "target_right": 143, "incompat": [143, 627, 633, 843, 886], "decid": [143, 210, 241, 259, 264, 265, 451, 520, 616, 783, 867], "1500": 143, "invalid": [143, 228, 886], "metadata_tmin": 143, "metadata_tmax": 143, "why": [143, 150, 157, 159, 191, 200, 201, 205, 215, 223, 226, 230, 244, 735, 738, 867], "event_nam": [143, 231, 435, 438], "551758": 143, "997070": 143, "434570": 143, "343750": 143, "917969": 143, "425781": 143, "416016": 143, "799": 143, "392578": 143, "990234": 143, "402344": 143, "802": [143, 195, 231], "eleg": 143, "row_ev": [143, 435], "pertain": 143, "sync": [143, 258, 269, 440, 496, 607], "508789": 143, "00000": 143, "503906": 143, "449219": 143, "542969": 143, "792": [143, 211, 214, 231], "496094": 143, "794": [143, 208, 231], "437500": 143, "465820": 143, "547852": 143, "46582": 143, "descriptor": [143, 165, 239, 244, 435, 479, 480, 841], "hed": [143, 150, 239, 244, 435, 841], "inspir": [143, 435, 450, 744, 845, 884], "keep_first": [143, 435], "regardless": [143, 150, 170, 189, 203, 206, 452, 805, 841], "first_respons": [143, 435], "notna": 143, "411133": 143, "454102": 143, "443359": 143, "466797": 143, "400391": 143, "499023": 143, "584961": 143, "421875": 143, "450195": 143, "399414": 143, "316406": 143, "416992": 143, "386719": 143, "410156": 143, "467773": 143, "377930": 143, "483398": 143, "454": [143, 226, 231, 277], "457031": 143, "456": [143, 277], "566406": 143, "395508": 143, "354492": 143, "326172": 143, "432617": 143, "538": [143, 208, 231], "322266": 143, "482422": 143, "484375": 143, "652": 143, "371094": 143, "342773": 143, "307617": 143, "442383": 143, "728": [143, 195], "376953": 143, "first_stimulu": 143, "perfect": [143, 157, 201, 209], "stimulus_sid": 143, "response_correct": 143, "correct_response_count": 143, "rememb": [143, 149, 160, 170, 175, 199, 204, 205, 215, 231, 868], "epochs_tmin": 143, "epochs_tmax": 143, "strong": [143, 182, 199, 204, 230, 561, 663, 668, 861], "099609375": 143, "lastli": [143, 171, 208, 210, 240, 241, 845], "greater": [143, 165, 199, 204, 226, 229, 264, 265, 276, 358, 452, 561, 588, 589, 695, 709, 735, 738, 754, 886], "vis_erp": 143, "vis_erp_slow": 143, "asid": [143, 171, 198, 236], "fact": [143, 148, 150, 180, 181, 198, 204, 205, 209, 216, 417, 423, 561, 623, 841, 861, 868], "noisier": [143, 190], "deal": [143, 161, 170, 179, 201, 204, 205, 207, 216, 226, 230, 234, 236, 266, 267, 271, 272, 275, 278, 279, 280, 297, 298, 455, 561, 572, 582, 593, 607, 874, 886], "keep_last": [143, 435], "previous": [143, 148, 169, 203, 204, 256, 290, 297, 298, 643, 754, 886], "last_": [143, 435], "last_stimulu": 143, "last_respons": 143, "431641": 143, "795": [143, 231], "576172": 143, "puls": [143, 145, 165, 167, 198, 204, 206, 216, 583, 586, 868], "c5": [143, 503], "cpz": 143, "isna": 143, "bummer": 143, "impress": 143, "resp_erp_correct": 143, "resp_erp_incorrect": 143, "deflect": [143, 198, 205, 206, 886], "immedi": [143, 155, 167, 199, 204, 207, 241, 257, 428, 479, 480, 564, 616, 678, 681, 763, 807, 841, 845, 867, 868, 886], "doubt": 143, "resp_erp_diff": 143, "bolder": 143, "set_linewidth": 143, "grai": [143, 155, 159, 171, 199, 209, 216, 228, 229, 230, 231, 236, 270, 469, 561, 610, 754, 769, 770, 778, 797], "trough_time_idx": 143, "trough_tim": 143, "emili": [143, 201, 244, 862, 886], "kappenman": [143, 201, 244, 862], "jaclyn": [143, 244, 862], "farren": [143, 244, 862], "wendi": [143, 194, 244, 417, 862], "zhang": [143, 244, 862, 868, 886], "andrew": [143, 179, 244, 561, 695, 862, 886], "stewart": [143, 244, 862], "luck": [143, 150, 201, 244, 862], "117465": [143, 244, 862], "nima": [143, 244, 435], "bigd": [143, 244, 435], "shamlo": [143, 244, 435], "kreutz": [143, 244, 435], "delgado": [143, 244, 435], "robbin": [143, 244, 435], "makoto": [143, 244, 435], "miyakoshi": [143, 244, 435], "marissa": [143, 244, 435], "westerfield": [143, 244, 435], "tarik": [143, 244, 435], "bel": [143, 244, 435], "bahar": [143, 244, 435], "koth": [143, 244, 435], "jessica": [143, 244, 435], "hsi": [143, 244, 435], "globalsip": [143, 244, 435], "6736796": [143, 244, 435], "40_autogenerate_metadata": [143, 147], "workflow": [144, 154, 200, 862, 864, 886], "200e": [144, 150, 200], "0113": [144, 165, 168, 175, 215], "0112": [144, 165, 168, 215], "0122": [144, 165, 168, 215, 240], "0132": [144, 168], "199795": 144, "320252": 144, "567619": 144, "248584": 144, "609895": 144, "700540": 144, "352746": 144, "908667": 144, "193135": 144, "049675": 144, "702938": 144, "168267": 144, "480975": 144, "182237": 144, "225684": 144, "072452": 144, "186476": 144, "283711": 144, "006895": 144, "912317": 144, "130290": 144, "157198": 144, "842466": 144, "986073": 144, "179816": 144, "040471": 144, "643716": 144, "835772": 144, "517952": 144, "214631": 144, "043144": 144, "672744": 144, "173156": 144, "688943": 144, "974112": 144, "561683": 144, "450115": 144, "778315": 144, "795987": 144, "277138": 144, "timedelta": [144, 217, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709], "132025e": 144, "156762e": 144, "324858e": 144, "060990e": 144, "870054e": 144, "835275e": 144, "790867e": 144, "049675e": 144, "702938e": 144, "416827e": 144, "748098e": 144, "018224e": 144, "212257e": 144, "072452e": 144, "283711e": 144, "300690e": 144, "691232e": 144, "213029e": 144, "515720e": 144, "178425e": 144, "986073e": 144, "304047e": 144, "643716e": 144, "783577e": 144, "851795e": 144, "521463e": 144, "204314e": 144, "672744e": 144, "568894e": 144, "974112e": 144, "556168e": 144, "450115e": 144, "377831e": 144, "117960e": 144, "727714e": 144, "0133": [144, 168], "dai": [144, 206, 256, 264, 265, 266, 267, 269, 479, 480, 481], "800204787": 144, "379736": 144, "123525": 144, "806864627": 144, "734826": 144, "339465": 144, "813524468": 144, "996158": 144, "627037": 144, "820184308": 144, "748030": 144, "024973": 144, "826844149": 144, "123811": 144, "917677": 144, "pivot": [144, 262, 782, 813], "long_df": [144, 227], "coupl": [144, 210, 215, 236, 414, 597, 852, 870, 886], "1342": [144, 168, 234, 236], "categorydtyp": 144, "nicer": [144, 205, 886], "hue": 144, "peak_lat": 144, "regex": [144, 886], "2123": [144, 168], "idxmax": 144, "melt": 144, "id_var": 144, "var_nam": 144, "value_nam": 144, "satur": [144, 508], "286": [144, 147, 168, 194, 195, 226], "514": [144, 231], "50_epochs_to_data_fram": [144, 147], "equidistantli": 145, "consecut": [145, 167, 234, 271, 272, 275, 278, 279, 280, 452, 520, 563, 564, 886], "briefli": [145, 150, 201, 218, 226], "hous": 145, "compute_proj_ecg": [145, 205, 206, 578, 583, 861, 876, 886], "envelope_correl": [145, 886], "manag": [145, 165, 170, 171, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 414, 421, 424, 427, 428, 454, 467, 469, 479, 480, 519, 522, 523, 534, 535, 544, 545, 550, 561, 566, 573, 574, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 748, 749, 784, 786, 789, 801, 807, 808, 843, 845, 850, 852, 867, 874, 886], "chan": [145, 255, 686], "heart": [145, 198, 203, 244, 735, 738, 886], "beat": [145, 210, 573, 583, 586, 658], "onpca": 145, "onecg": 145, "make_fixed_length_epoch": [145, 259, 876, 886], "unsuit": [145, 886], "misalign": [145, 177, 490, 886], "event_related_plot": 145, "1142": [145, 168], "n_sensor": [145, 240, 271, 275, 279, 770], "alpha_data": 145, "1530": [145, 208], "epochconnect": 145, "corr_matrix": 145, "first_30": 145, "last_30": 145, "corr_matric": 145, "color_lim": 145, "mpbl": 145, "60_make_fixed_length_epoch": [145, 147], "auto_tutorials_epoch": 147, "321": [147, 168, 194, 201, 208, 231], "raw_fil": [148, 150], "happen": [148, 150, 155, 159, 160, 166, 167, 170, 195, 200, 202, 204, 226, 257, 264, 265, 317, 434, 436, 841, 845, 862, 865, 867, 871, 886], "discuss": [148, 150, 155, 164, 165, 167, 172, 179, 190, 195, 198, 201, 202, 215, 218, 226, 231, 241, 244, 709, 844, 845, 862, 864, 865, 867, 868, 886], "transfer": [148, 195, 199, 201, 594, 841, 861], "maintain": [148, 199, 226, 264, 265, 266, 267, 479, 480, 481, 552, 845, 864, 867, 868, 886], "proven": [148, 886], "never": [148, 264, 265, 318, 580, 772, 845, 868, 886], "72160572e": 148, "57859354e": 148, "98040833e": 148, "75128428e": 148, "15309907e": 148, "83186429e": 148, "bewar": [148, 159, 868], "evoked_subset": 148, "repair": [148, 164, 165, 198, 199, 200, 205, 209, 213, 214, 218, 244, 261, 264, 266, 267, 269, 355, 357, 452, 479, 494, 555, 558, 560, 561, 573, 574, 576, 578, 579, 583, 600, 601, 605, 710, 805, 806, 826, 861, 886], "evk_fil": 148, "evokeds_list": [148, 149], "right_vi": 148, "remedi": 148, "left_right_aud": 148, "6992832460543575": [148, 150], "fairli": [148, 165, 198, 200, 201, 202, 204, 206, 207], "left_aud": 148, "right_aud": 148, "proport": [148, 226, 271, 272, 273, 275, 278, 279, 280, 353, 365, 477, 561, 569, 812, 817, 868, 886], "grand_averag": [148, 150, 876, 886], "intend": [148, 170, 209, 216, 257, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 435, 479, 480, 561, 594, 600, 852], "standard_error": [148, 264, 265, 266, 267, 623, 886], "iter_evok": [148, 150, 264, 265, 886], "ix": [148, 150], "return_amplitud": [148, 150, 266, 267], "648": [148, 195, 231], "508": [148, 150, 195, 227, 231], "10_evoked_overview": [148, 153], "evoked_fil": 149, "life": [149, 867], "evk": [149, 150], "superimpos": [149, 171, 198, 218, 561, 755, 798], "timeseri": [149, 223, 264, 265, 266, 267, 479, 480, 673, 707], "resembl": [149, 161, 174, 528, 586, 587], "wing": 149, "behav": [149, 201, 215, 268, 269, 440, 886], "time_ranges_of_interest": 149, "drag": [149, 150, 160, 217, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 706, 708, 710, 785, 786, 790, 793, 797, 806, 808, 809, 814, 816, 843, 863], "averaging_dur": 149, "augment": [149, 871], "custom_func": 149, "0x7f569f5456c0": 149, "substr": [149, 628, 640, 886], "action": [149, 170, 845, 871, 874], "ambigu": [149, 272, 278, 280, 886], "temp_list": 149, "_comment": 149, "_evk": 149, "overhead": [149, 652, 749, 886], "trans_fil": 149, "00097": 149, "meg_surf": [149, 519], "_map": 149, "20_visualize_evok": [149, 153], "materi": [150, 161, 841, 845, 865], "link": [150, 188, 244, 271, 275, 279, 446, 768, 812, 845, 851, 865, 868, 874, 886], "events_fil": [150, 200], "discard": [150, 199, 204, 205, 206, 209, 236, 592, 593, 620, 886], "last_samp": [150, 269, 362, 478, 479, 480, 841, 886], "13514": 150, "mislabel": 150, "lowercas": 150, "channel_renaming_dict": [150, 215], "schemat": 150, "diagram": [150, 204, 841], "addition": [150, 170, 189, 198, 205, 217, 239, 255, 272, 278, 280, 318, 329, 651, 734, 737, 817, 845, 860, 870], "realist": [150, 244, 861, 868], "dedic": [150, 198, 204, 206, 215, 479, 480, 807, 845, 849, 867, 875, 886], "use_browser_backend": [150, 199, 202, 204, 205, 206, 207, 264, 265, 479, 480, 561, 784, 801, 807, 876, 886], "xx": [150, 199, 202, 205, 206, 207, 258, 845], "qt": [150, 165, 170, 171, 199, 202, 204, 205, 206, 207, 264, 265, 479, 480, 561, 754, 784, 801, 807, 823, 826, 843, 865, 886], "scheme": [150, 187, 221, 230, 261, 264, 265, 266, 267, 273, 411, 418, 427, 479, 480, 560, 561, 576, 647, 650, 687, 706, 708, 710, 771, 784, 786, 793, 797, 806, 809, 810, 814, 816, 845, 868, 886], "eeg53": 150, "eog61": 150, "chose": 150, "proce": [150, 259, 264, 403, 561, 564, 571, 763, 865], "consol": [150, 849, 886], "duplic": [150, 160, 259, 264, 265, 266, 267, 270, 274, 312, 340, 479, 480, 641, 886], "eeg03": 150, "eeg01": 150, "eeg02": 150, "eeg04": 150, "eeg06": 150, "eeg07": 150, "eeg25": 150, "25auditori": 150, "27buttonpress": 150, "5visual": 150, "28visual": 150, "barplot": [150, 204], "lose": [150, 188, 217, 865], "plot_drop_log": [150, 200, 210, 264, 265, 876, 886], "break": [150, 164, 213, 214, 217, 258, 264, 266, 269, 479, 558, 564, 584, 620, 839, 845, 861, 886], "l_aud": [150, 236], "l_vi": [150, 236], "fig1": [150, 169], "speak": [150, 166, 167, 203, 853], "agreement": [150, 867], "warrant": 150, "popul": [150, 154, 164, 221, 224, 229, 244, 265, 267, 373, 411, 443, 480, 594, 688, 750, 841, 886], "leverag": [150, 867], "verifi": [150, 181, 241, 850, 851, 868], "plain": [150, 191, 203, 241, 332, 831], "ddof": [150, 161, 865], "lime": 150, "revisit": [150, 244, 411], "eeg17": 150, "eeg18": 150, "eeg26": 150, "eeg23": 150, "eeg24": 150, "eeg34": 150, "eeg35": 150, "left_ix": 150, "right_ix": 150, "roi_dict": 150, "left_roi": [150, 264, 265, 266, 267, 785, 790], "right_roi": [150, 264, 265, 266, 267, 785, 790], "roi_evok": 150, "combine_channel": [150, 876, 886], "aud_minus_vi": 150, "29969": 150, "69928": 150, "weak": [150, 204], "chapter": 150, "erplab": [150, 244], "consequ": [150, 161, 168, 209, 355, 356, 357, 440, 451, 496, 548, 865, 868, 886], "voltag": [150, 165, 167, 187, 188, 207, 216, 504, 841, 886], "p100": 150, "submit": [150, 227, 845, 867], "amp": [150, 177, 182, 184, 256, 886], "throughout": [150, 170, 210, 561, 862, 886], "remaind": 150, "print_peak_measur": 150, "3f": [150, 209, 227, 231, 241, 264, 265, 266, 267, 479, 480, 708, 710, 786, 793], "good_tmin": 150, "good_tmax": 150, "eeg55": 150, "pull": [150, 205, 824, 841, 852, 867], "priori": [150, 241, 868], "believ": [150, 241, 845, 868], "eeg59": 150, "fist": 150, "l_vis_roi": 150, "ch_roi": 150, "lat_roi": 150, "amp_roi": 150, "FOR": 150, "ONE": [150, 156, 195, 244], "713": [150, 195, 231], "suscept": [150, 202, 582], "challeng": [150, 211, 244, 862, 865, 874], "meth": [150, 171, 845, 886], "guarante": [150, 187, 199, 204, 207, 209, 226, 264, 265, 266, 267, 441, 442, 443, 444, 479, 480, 510, 886], "rise": [150, 495, 611, 617, 841], "crucial": [150, 155, 198, 234], "095": [150, 169, 261, 264, 265, 266, 267, 273, 312, 330, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 771, 778, 786, 788, 790, 793, 794, 797, 804, 806, 808, 809, 810, 814, 816, 886], "bad_tmin": 150, "bad_tmax": 150, "bad_lat_roi": 150, "bad_amp_roi": 150, "unclear": [150, 845], "truli": [150, 201, 693], "pink": [150, 155, 770, 841], "star": 150, "yourself": [150, 155, 168, 198, 202, 215, 256, 266, 267, 490, 793, 845], "c6": 150, "act": [150, 168, 202, 203, 205, 209, 264, 265, 266, 267, 277, 297, 298, 347, 474, 476, 477, 479, 480, 539, 593, 650, 709, 841, 863, 865, 867, 886], "eeg54": 150, "eeg57": 150, "l_vis_mean_roi": 150, "mean_amp_roi": 150, "mean_amp_roi_df": 150, "mean_amp": 150, "numeric_onli": 150, "279764": 150, "685840": 150, "reiter": 150, "hypothes": [150, 226, 227, 874], "l_vis_crop": 150, "mean_amp_al": 150, "mean_amp_all_df": 150, "option_context": 150, "max_column": 150, "689513": 150, "078492": 150, "381191": 150, "609264": 150, "eeg05": 150, "113717": 150, "eeg56": 150, "064174": 150, "259681": 150, "eeg58": 150, "156472": 150, "802306": 150, "eeg60": 150, "878811": 150, "dietrich": [150, 244, 528, 868], "lehmann": [150, 244, 528, 868], "wolfgang": [150, 244, 735, 738], "skrandi": [150, 244], "identif": [150, 204, 244, 576], "checkerboard": [150, 165, 241, 244, 862], "609": [150, 195, 231, 244], "90419": [150, 244], "neurobiologi": [150, 244], "1984": [150, 244], "0301": [150, 244], "0082": [150, 244], "90003": [150, 244], "micah": [150, 244], "brunet": [150, 244], "michel": [150, 184, 244, 389, 561, 666], "s10548": [150, 207, 244, 577, 671], "0054": [150, 244], "ma": [150, 244, 886], "52585": [150, 244], "mitpress": [150, 244], "book": [150, 244, 450, 845], "javier": [150, 244], "lopez": [150, 244], "calderon": [150, 244], "00213": [150, 244], "preclud": [150, 201, 209, 244, 593], "00131": [150, 201, 244], "rufin": [150, 201, 244], "vanrullen": [150, 201, 244], "fallaci": [150, 201, 244], "00365": [150, 201, 244], "nichola": [150, 211, 244, 575, 862], "gaspelin": [150, 244], "12639": [150, 244], "30_eeg_erp": [150, 153], "perspect": [151, 205, 754], "satisfi": [151, 160, 226, 297, 298, 688, 708, 710, 868], "40_whiten": [151, 153], "repetit": [152, 164, 671], "974": [153, 231], "auto_tutorials_evok": 153, "outer": [154, 157, 159, 160, 182, 256, 307, 561, 593, 754, 800, 841, 846, 849, 852, 861, 862, 865, 868, 871], "tissu": [154, 157, 841], "boundari": [154, 157, 171, 181, 190, 218, 261, 264, 265, 266, 267, 270, 273, 274, 363, 411, 418, 469, 479, 480, 560, 561, 582, 610, 671, 685, 706, 708, 710, 754, 759, 771, 772, 786, 793, 797, 806, 808, 809, 814, 816, 841, 851, 871, 886], "analog": [154, 187, 189, 195, 205, 209, 264, 265, 266, 267, 446, 479, 480, 487, 494, 502, 558, 706, 708, 709, 710, 841, 871, 886], "freesurfer_hom": [154, 372, 851], "setupfreesurf": 154, "sh": [154, 848, 851], "folder": [154, 155, 157, 160, 169, 187, 215, 274, 277, 303, 307, 338, 377, 378, 379, 380, 382, 383, 384, 386, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 459, 460, 465, 495, 508, 617, 649, 770, 772, 845, 848, 851, 886], "my_subject": 154, "my_nifti": 154, "subfold": [154, 386], "hour": [154, 479, 480, 561, 801, 807], "beforehand": [154, 264, 265, 784, 822], "set_config": [154, 170, 264, 265, 375, 386, 459, 479, 480, 561, 752, 784, 801, 807, 843, 845, 861, 876, 886], "scan": [154, 165, 175, 179, 182, 209, 269, 390, 588, 589, 846, 849, 852, 857, 871, 874], "overview": [154, 155, 164, 169, 170, 172, 173, 179, 200, 204, 206, 213, 214, 226, 240, 249, 264, 265, 266, 267, 269, 275, 353, 402, 452, 479, 480, 500, 521, 527, 528, 542, 558, 561, 578, 579, 583, 706, 736, 778, 784, 787, 801, 807, 823, 841, 865], "buckner40not": 154, "standalon": [154, 847, 878, 886], "10_background_freesurf": [154, 163], "landmark": [155, 221, 335, 365, 841, 861, 868, 871, 886], "t1w": [155, 312], "nifti1imag": [155, 181, 276, 279, 280, 307], "dataobj": [155, 159, 181], "xyzt_unit": 155, "uint8": 155, "t1_mgh": 155, "mghimag": [155, 868], "draw": [155, 169, 175, 176, 201, 228, 261, 264, 265, 266, 267, 273, 312, 411, 418, 479, 480, 560, 561, 576, 586, 706, 708, 710, 771, 777, 778, 785, 786, 788, 793, 797, 800, 804, 806, 809, 810, 814, 816, 868, 871, 886], "arrow": [155, 159, 160, 177, 182, 198, 202, 205, 218, 261, 262, 264, 265, 266, 267, 272, 273, 278, 279, 280, 411, 418, 479, 480, 560, 561, 706, 708, 710, 754, 771, 782, 784, 785, 786, 790, 793, 796, 797, 806, 807, 809, 814, 817, 818, 868, 886], "ight": 155, "nterior": 155, "longest": 155, "uperior": 155, "camera": [155, 159, 191, 266, 267, 470, 754, 768, 770, 789, 822, 886], "dig_mri_dist": [155, 365, 876, 886], "na": [155, 241, 486, 841], "preauricular": [155, 312, 336, 841, 868], "manufactur": [155, 169, 187, 188, 189, 191, 841, 868, 874, 886], "faq": [155, 188, 201, 207, 309, 371, 487, 593, 866], "intersect": [155, 159, 160, 183, 593, 610, 861, 886], "purpl": [155, 157, 236], "perpendicular": [155, 177, 868], "goe": [155, 159, 201, 217, 868], "upward": [155, 159, 204, 208, 754, 778], "compani": [155, 244, 688, 867], "acquir": [155, 199, 284, 285, 307, 503, 857, 862, 867, 868, 871, 886], "emit": [155, 208, 258, 264, 265, 266, 267, 269, 271, 272, 274, 275, 278, 279, 280, 284, 285, 316, 339, 348, 349, 354, 358, 361, 363, 365, 369, 370, 430, 445, 458, 461, 479, 480, 500, 561, 594, 613, 642, 644, 706, 708, 709, 710, 751, 787, 798, 832, 834, 841, 886], "coregist": [155, 307, 470], "front": [155, 266, 267, 306, 430, 754, 788, 841, 868], "magenta": 155, "1mm": 155, "anisotrop": [155, 244, 868], "incorrectli": [155, 471, 865, 886], "identity_tran": 155, "mri_voxel": [155, 325, 512, 741], "corner": [155, 190, 201, 202, 205, 218, 256, 264, 265, 266, 267, 269, 479, 480, 767, 778, 784, 792, 807, 871, 886], "inferior": [155, 159, 841], "seghead_rr": 155, "seghead_tri": 155, "read_surfac": [155, 159, 160, 270, 639, 655, 839, 861, 876, 886], "mri_to_head": 155, "scalp_pts_in_head_coord": 155, "head_to_meg": 155, "scalp_pts_in_meg_coord": 155, "vox_to_mri": 155, "get_vox2ras_tkr": [155, 159, 181], "mri_to_vox": 155, "scalp_points_in_vox": 155, "scene": [155, 159, 170, 194, 244, 256, 266, 267, 271, 272, 275, 278, 279, 280, 417, 470, 754, 760, 761, 763, 770, 789, 812, 817, 821, 822, 824, 843, 863, 886], "nose": [155, 207, 306], "behind": [155, 170, 194, 199, 204, 470, 773, 863], "roughli": [155, 354, 582, 843, 886], "world": [155, 159, 171, 181, 201, 217, 228, 276, 454], "anonym": [155, 264, 265, 266, 267, 479, 480, 481, 865, 886], "blur": [155, 868], "fiffv_point_cardin": [155, 159, 269, 871], "fiffv_point_nas": [155, 159, 269, 871], "fiffv_coord_head": [155, 268, 269, 871], "nasion_mri": [155, 159], "nasion_vox": [155, 159], "toggl": [155, 165, 171, 190, 199, 204, 218, 264, 265, 479, 480, 561, 754, 784, 799, 801, 807, 823, 886], "radio": [155, 874], "icon": [155, 171], "fid": [155, 705], "icp": [155, 886], "finetun": 155, "inner_skul": [155, 157, 158, 160, 171, 182, 277, 642, 770, 861, 862], "outer_skul": [155, 157, 158, 160, 169, 171, 277, 770, 861, 862], "equiv": [155, 182, 183, 184, 207], "rv": [155, 182, 183, 184, 207, 862], "00348961": [155, 207], "mu1": [155, 182, 183, 184, 207], "944714": [155, 207], "lambda1": [155, 182, 183, 184, 207], "137173": [155, 207], "mu2": [155, 182, 183, 184, 207], "667447": [155, 207], "683794": [155, 207], "mu3": [155, 182, 183, 184, 207], "26595": [155, 207], "lambda3": [155, 182, 183, 184, 207], "0105972": [155, 207], "6156": 155, "2300": 155, "1904": 155, "20_source_align": [155, 163], "hsp": [156, 187, 256, 312, 325, 337, 365, 504, 619, 868, 886], "preprat": 156, "jon": [156, 244, 886], "houck": [156, 244, 886], "faveli": [156, 873, 886], "skin": [156, 157, 160, 256, 264, 265, 266, 267, 307, 365, 479, 480, 558, 706, 708, 709, 710, 841, 862, 865, 868, 886], "fit_fiduci": [156, 365], "gui": [156, 157, 159, 264, 265, 271, 272, 275, 278, 279, 280, 308, 479, 480, 561, 770, 784, 801, 807, 812, 817, 843, 845, 849, 851, 852, 859, 861, 863, 865, 876, 886], "fit_icp": [156, 365], "n_iter": [156, 365, 591], "nasion_weight": [156, 365], "omit_head_shape_point": [156, 365], "compute_dig_mri_dist": [156, 365], "write_tran": [156, 638, 876], "abil": [156, 177, 179, 195, 664, 665, 734, 737, 863, 867, 874, 886], "set_scale_mod": [156, 365], "fetch_infant_templ": [156, 158, 862, 876, 886], "scale_mri": [156, 365, 645, 876, 886], "clau": [156, 244], "plo": [156, 195, 244], "e0232100": [156, 244], "pone": [156, 195, 244], "0232100": [156, 244], "25_automated_coreg": [156, 163], "concept": [157, 175, 226, 244, 841, 869, 872], "watershed_bem": [157, 589, 852, 865, 868, 886], "flash_bem": [157, 589, 852, 868, 886], "make_watershed_bem": [157, 190, 841, 865, 876, 886], "make_flash_bem": [157, 303, 841, 876, 886], "plot_bem": [157, 159, 309, 770, 865, 868, 876, 886], "plot_bem_kwarg": 157, "brain_surfac": [157, 772], "mrilab": [157, 871], "isn": [157, 165, 223, 241, 260, 264, 380, 403, 404, 627, 630, 633, 709, 845, 865], "candid": [157, 199, 841, 867], "oct4": 157, "90mm": 157, "57798": 157, "24365": 157, "20377": 157, "32480": 157, "22941": 157, "2787": 157, "9357": 157, "20154": 157, "846": [157, 181, 221, 225, 227, 231, 233], "10797": 157, "12738": 157, "13882": 157, "10203": 157, "2362": [157, 204, 244, 561], "10376": 157, "midpoint": [157, 189, 266, 267, 772, 868, 886], "make_bem_model": [157, 160, 190, 277, 365, 430, 461, 518, 524, 613, 642, 644, 834, 861, 876, 886], "4th": [157, 198, 264, 265, 266, 267, 413, 422, 446, 447, 449, 450, 479, 480, 573, 574], "icosahedron": [157, 159, 160, 256, 271, 275, 279, 654, 812], "n_tri": [157, 159, 270, 834], "topologi": [157, 201, 548, 886], "commonli": [157, 167, 169, 174, 201, 241, 269, 469, 561, 841, 886], "474": [157, 226, 231, 277], "gone": 157, "adequ": [157, 206, 269], "235": [157, 168, 180, 208, 230], "1422": [157, 168], "fwd_fix": 157, "explicitli": [157, 171, 187, 195, 200, 202, 203, 204, 234, 259, 264, 265, 266, 267, 269, 274, 297, 298, 303, 310, 313, 329, 354, 358, 359, 369, 370, 371, 411, 413, 418, 427, 432, 449, 450, 454, 455, 474, 476, 477, 479, 480, 513, 539, 560, 561, 563, 577, 578, 579, 585, 591, 599, 601, 608, 610, 650, 658, 659, 660, 669, 670, 672, 674, 692, 693, 694, 695, 696, 697, 706, 708, 709, 710, 714, 715, 716, 717, 719, 737, 778, 784, 785, 788, 790, 791, 794, 803, 808, 843, 845, 861, 867, 874, 886], "src_hemi": 157, "apply_forward": [157, 285, 876, 886], "write_forward_solut": [157, 625, 876, 886], "justifi": [157, 450, 479, 480, 886], "claim": 157, "30_forward": [157, 163], "centimet": 158, "fs_dir": [158, 387], "live": [158, 201, 845, 886], "1005": 158, "new_nam": 158, "rstrip": 158, "fp": [158, 447, 664], "999994": 158, "003552": 158, "000202": 158, "003558": 158, "998389": 158, "056626": 158, "000001": [158, 227, 230], "998395": 158, "2433": [158, 168], "7809": 158, "4566": 158, "8001": 158, "4387": 158, "6mo": [158, 389], "ants6": 158, "0months3t": 158, "come": [158, 174, 180, 187, 188, 201, 202, 204, 206, 217, 227, 241, 270, 275, 372, 503, 521, 581, 620, 841, 843, 845, 849, 850, 862, 868, 886], "fname_1020": 158, "mon": [158, 503], "read_dig_fif": [158, 312, 325, 328, 331, 332, 333, 335, 336, 337, 868, 876, 886], "03d": [158, 496], "99975431": 158, "01839625": 158, "01236795": 158, "00087239": 158, "0143472": 158, "96230429": 158, "27159646": 158, "01252444": 158, "01689809": 158, "27135229": 158, "96233177": 158, "03137219": 158, "48640": 158, "48214": 158, "472": [158, 163, 194, 226, 231, 244, 411], "35_eeg_no_mri": [158, 163], "readabl": [159, 264, 265, 266, 267, 374, 413, 422, 447, 449, 450, 479, 480, 588, 845], "anterior": [159, 270, 324, 683, 841, 868, 886], "superior": [159, 272, 278, 280, 628, 754, 841, 868], "wide": [159, 165, 215, 845, 867], "unfamiliar": [159, 849], "asarrai": [159, 230], "unsign": [159, 271, 272, 275, 278, 279, 280, 886], "triplet": [159, 269, 455, 528, 656], "geograph": 159, "earth": 159, "north": 159, "prime": [159, 169], "meridian": 159, "degre": [159, 161, 191, 205, 226, 228, 231, 234, 256, 261, 266, 267, 269, 303, 307, 490, 591, 659, 693, 694, 696, 697, 706, 754, 759, 790, 822, 841, 851, 865, 868, 886], "nonetheless": [159, 201], "scanner": [159, 277, 473, 862, 868], "nativ": [159, 181, 187, 188, 264, 265, 266, 267, 316, 325, 330, 441, 442, 443, 444, 479, 480, 496, 504, 619, 754, 756, 862, 865, 874, 886], "mind": [159, 161, 174, 201, 255, 845], "si": [159, 189, 191, 226, 240, 264, 265, 266, 267, 298, 455, 479, 480, 581, 788, 790], "xyz_ra": 159, "00000000e": 159, "15484021e": 159, "91852465e": 159, "22726395e": 159, "56816911e": 159, "57160827e": 159, "18960930e": 159, "49011647e": 159, "40284092e": 159, "00712036e": 159, "726": [159, 195, 208, 231], "ras_coords_mm": 159, "inv_affin": 159, "i_": [159, 187], "j_": 159, "k_": 159, "imshow_mri": 159, "aff2axcod": 159, "ori_slic": 159, "ori_nam": 159, "set_path_effect": 159, "reorient": 159, "rightward": 159, "x_order": 159, "lip": 159, "y_order": 159, "torig": 159, "vox2ras_tkr": [159, 181], "conform": [159, 189, 258, 868, 886], "matter": [159, 169, 264, 265, 266, 267, 270, 469, 479, 480, 513, 561, 610, 706, 708, 709, 710, 788, 861, 867, 886], "freeurfer": 159, "whenev": [159, 201, 845, 863], "everywher": 159, "xyz_mri": 159, "get_mni_fiduci": [159, 312, 366, 770, 876, 886], "digpoint": [159, 365, 886], "nasion_head": 159, "nasion_dig_mri": 159, "nasion_dig_vox": 159, "convention": 159, "rr_mm": 159, "313728": 159, "80481719970703": 159, "rr_vox": 159, "tricontour": 159, "renderer_kwarg": 159, "curv": [159, 195, 264, 265, 266, 267, 269, 479, 480, 667, 704, 708, 710, 868, 871], "read_curvatur": [159, 876], "y_shift": 159, "z_shift": 159, "this_rr": 159, "this_tri": 159, "copper_r": 159, "quiver3d": [159, 205, 886], "1050": 159, "wirefram": 159, "cyan": [159, 479, 480, 807], "line_width": 159, "cull": 159, "render_lines_as_tub": 159, "uniformli": [159, 190, 206, 476], "deform": [159, 169, 244], "uniform": [159, 365, 432, 528, 658, 673, 696, 697, 841, 886], "subsampl": [159, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 277, 278, 279, 280, 479, 480, 517, 578, 579, 654, 692, 706, 709, 718, 754, 861, 886], "rr_sph": 159, "mri_mni_tran": 159, "xyz_mni": 159, "02248488": 159, "00844919": 159, "03621711": 159, "00111715": 159, "07107091": 159, "91486582": 159, "40609791": 159, "02300193": 159, "00875602": 159, "43369992": 159, "02811882": 159, "03356932": 159, "land": [159, 221], "difficult": [159, 188, 200, 231, 561, 868], "gist": [159, 175, 188, 264, 265, 266, 267, 479, 480, 865], "github": [159, 264, 265, 266, 267, 479, 480, 843, 853, 857, 864, 865, 866, 867], "alexrockhil": 159, "b5a1ce6c6ba363cf3f277cd321a763bf": 159, "50_background_freesurfer_mn": [159, 163], "aris": [160, 198, 582], "ezemikulan": 160, "blender_freesurf": 160, "ezequiel": [160, 886], "mikulan": [160, 886], "manorama": [160, 886], "kadwani": [160, 886], "shutil": 160, "flash": [160, 212, 277, 303, 307, 589, 770, 862, 886], "surf_dir": 160, "problemat": [160, 188, 201, 204, 205, 209, 226, 264, 265, 274, 308, 330], "skill": [160, 845], "conv": 160, "conv_dir": 160, "makedir": 160, "exist_ok": 160, "read_metadata": [160, 636], "write_surfac": [160, 636, 639, 876, 886], "wavefront": [160, 636, 839, 886], "navig": [160, 215, 264, 265, 274, 279, 280, 479, 480, 784, 807, 818, 843, 849, 869], "vert": [160, 177, 223, 241, 277], "preset": [160, 271, 272, 275, 278, 279, 280, 754, 812, 817], "beginn": [160, 847, 870], "teach": [160, 176, 244, 886], "_fix": 160, "inner_skull_fix": 160, "Be": [160, 215, 217, 266, 267, 791], "backup": 160, "mistak": [160, 845, 865], "inner_skull_orig": 160, "volume_info": [160, 636, 839], "vol_info": 160, "faulti": 160, "write_head_bem": [160, 876, 886], "head_dir": 160, "read_bem_surfac": [160, 517, 518, 612, 876, 886], "make_scalp_surfac": [160, 852, 876, 886], "shrinkwrap": 160, "\u2460": 160, "\u2461": 160, "\u2462": 160, "\u2464": 160, "tab": [160, 191, 256, 470, 549, 762, 845, 863], "\u2465": 160, "\u2467": 160, "snap": [160, 886], "noth": [160, 183, 184, 200, 261, 264, 265, 266, 267, 273, 276, 354, 365, 411, 418, 422, 424, 479, 480, 560, 561, 576, 647, 706, 708, 710, 757, 767, 771, 786, 793, 797, 806, 809, 814, 816, 862, 871, 886], "toolbar": [160, 819], "\u2468": 160, "extrus": 160, "extrud": 160, "rough": [160, 865], "ahead": [160, 845], "kernel": [160, 189, 194, 226, 241, 244, 271, 272, 275, 278, 279, 280, 417, 659, 843, 849, 851, 865, 886], "mri_convert": [160, 868], "fwhm": [160, 722, 732, 736, 876, 886], "t1_smoothed_3": 160, "delet": [160, 170, 199, 200, 210, 258, 261, 264, 265, 266, 267, 273, 363, 411, 418, 479, 480, 560, 561, 576, 649, 706, 708, 710, 771, 793, 797, 806, 809, 814, 845, 853, 868, 886], "cleaner": [160, 201], "encount": [160, 164, 188, 201, 445, 843, 851, 865], "runtimeerror": 160, "20516": 160, "isomorph": 160, "defect": [160, 256, 308, 365, 430, 461, 613, 642, 644, 834, 865, 886], "733": [160, 195, 231], "1014": 160, "2068": 160, "7732": 160, "8435": [160, 886], "8489": 160, "10181": 160, "11120": [160, 886], "11121": 160, "11122": [160, 886], "11304": 160, "11788": 160, "disrupt": 160, "999668": 160, "wrong": [160, 844, 886], "easiest": [160, 198, 200, 202, 221, 845, 848], "unedit": 160, "gpl": 160, "water": 160, "clean_from_arrai": 160, "80_fix_bem_in_blend": [160, 163], "bb": [161, 440], "pp": [161, 264, 265, 300, 432, 688], "desc": [161, 205, 273], "66000": 161, "write_cov": [161, 614, 876, 886], "inaccur": [161, 215, 261, 264, 265, 266, 267, 273, 354, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 861, 868], "noise_cov_baselin": 161, "noise_cov_reg": 161, "1768": [161, 209, 244, 593], "freedom": [161, 205, 226, 228, 231, 234, 261, 266, 267, 470, 693, 694, 696, 697, 770, 789, 865, 886], "violat": [161, 845, 865], "hack": [161, 241], "evoked_meg": 161, "empty_room": 161, "improp": [161, 886], "overestim": [161, 203], "juha": [161, 209, 244, 593, 865], "simola": [161, 209, 244, 593, 865], "kajola": [161, 209, 244, 432, 572, 593, 865, 868], "3359": [161, 244, 865], "3372": [161, 244, 865], "tsp": [161, 204, 244, 354, 561, 865], "853302": [161, 244, 865], "90_compute_covari": [161, 163], "aka": [162, 164, 189], "auto_tutorials_forward": 163, "emphasi": [164, 266, 267, 788, 869], "topic": [164, 165, 188, 198, 201, 203, 244, 297, 860, 869, 870], "knowledg": [164, 241, 861, 867], "unexplain": 164, "experienc": [164, 563, 867], "troubl": [164, 886], "configur": [164, 167, 172, 173, 189, 206, 215, 231, 264, 265, 357, 386, 459, 460, 470, 479, 480, 504, 539, 549, 561, 573, 574, 649, 705, 749, 754, 784, 801, 807, 820, 821, 822, 843, 850, 862, 864, 865, 868, 871, 874, 876, 886], "eyetrack": [164, 192, 193, 212, 258, 264, 265, 266, 267, 311, 373, 479, 480, 498, 558, 706, 708, 709, 710, 868, 875, 876, 886], "infrar": [164, 189, 213, 214, 244, 264, 265, 266, 267, 269, 353, 440, 479, 480, 508, 558, 595, 596, 597, 599, 706, 708, 709, 710, 754, 778, 787, 792, 852, 862, 868, 886], "spectroscopi": [164, 189, 213, 214, 244, 264, 265, 266, 267, 269, 353, 440, 479, 480, 508, 558, 595, 596, 597, 599, 706, 708, 709, 710, 754, 778, 787, 792, 852, 862, 868, 886], "tracker": [164, 190, 213, 214, 258, 264, 452, 498, 845, 862, 865], "vssr": [164, 242, 243, 264, 269, 312, 328, 440, 489, 558, 708, 816, 862], "bti": [164, 185, 186, 226, 261, 262, 264, 266, 267, 269, 302, 354, 452, 454, 490, 524, 770, 782, 868, 886], "twowai": [164, 232, 233, 264, 269, 479, 558, 620, 687, 689, 690, 694, 709, 736, 886], "anova": [164, 195, 226, 229, 232, 233, 237, 238, 264, 266, 267, 269, 275, 277, 360, 479, 527, 528, 542, 558, 620, 635, 678, 687, 688, 689, 690, 694, 697, 698, 709, 736, 754, 886], "spatiotempor": [164, 228, 232, 233, 244, 264, 266, 267, 269, 318, 479, 558, 593, 620, 686, 693, 697, 698, 709, 736, 775, 778, 886], "strf": [164, 196, 197, 417, 423, 451], "submodul": [164, 165, 198, 204, 206, 215, 221, 224, 845, 886], "corrupt": [164, 198, 199, 224, 225, 261, 264, 267, 268, 269, 270, 275, 354, 364, 452, 479, 527, 528, 542, 625, 628, 670, 673, 754, 865, 886], "auto_tutorials_python": 164, "auto_tutorials_jupyt": 164, "varieti": [165, 187, 189, 198, 215, 868], "smoothli": [165, 200, 215, 261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 706, 708, 710, 786, 793, 797, 806, 809, 814], "substitut": [165, 372, 843, 867, 868], "glimps": [165, 215], "41700": 165, "custom_ref_appli": [165, 168, 215, 221, 269, 886], "file_id": [165, 168, 215, 264, 265, 266, 267, 269, 479, 480, 481, 871, 886], "hpi_mea": [165, 168, 215, 269, 886], "hpi_result": [165, 168, 215, 269, 886], "meas_dat": [165, 167, 168, 200, 215, 217, 221, 258, 264, 265, 266, 267, 269, 478, 479, 480, 481, 561, 594, 801, 807, 886], "utc": [165, 168, 215, 217, 264, 265, 266, 267, 269, 479, 480, 886], "meas_id": [165, 168, 215, 264, 265, 266, 267, 269, 479, 480, 481, 871, 886], "breviti": 165, "walk": [165, 204, 206], "orig_raw": 165, "chan_idx": 165, "sent": [165, 167, 189, 190, 204, 212, 216, 274], "deliveri": 165, "squarewav": 165, "unambigu": [165, 167], "older": [165, 167, 169, 320, 431, 479, 871, 886], "summat": [165, 167, 201, 698], "6994": 165, "7086": 165, "7192": 165, "7304": 165, "7413": 165, "ordinari": [165, 167, 199, 205, 226, 579, 584, 691, 867], "autoreject": [165, 199, 200, 852], "aren": [165, 207, 455], "fewest": 165, "conds_we_care_about": 165, "aud_epoch": 165, "vis_epoch": 165, "richer": 165, "aud_evok": 165, "vis_evok": 165, "classic": [165, 241, 271, 272, 275, 278, 279, 280, 735, 738, 754, 812, 817], "p200": [165, 190], "dorso": 165, "evoked_diff": [165, 210], "underdetermin": 165, "akin": 165, "inverse_operator_fil": 165, "inv_oper": 165, "\u03bb\u00b2": 165, "61922423e": 165, "06837855e": 165, "49139511e": 165, "772": 165, "10_overview": [165, 173], "obligatorili": 166, "unexpect": [166, 195, 244, 264, 265, 266, 267, 318, 354, 508, 865], "apply_funct": [166, 264, 265, 266, 267, 479, 480, 886], "unprocess": [166, 871], "original_raw": 166, "complex128": [166, 264, 265, 266, 267, 479, 480], "certain": [166, 167, 190, 198, 202, 204, 209, 212, 221, 240, 262, 266, 267, 386, 437, 466, 479, 480, 539, 561, 580, 594, 693, 694, 788, 820, 843, 845, 867, 868, 886], "unaffect": [166, 202, 417], "rereferenced_raw": 166, "ref_data": [166, 650], "fig_orig": 166, "fig_reref": 166, "unless": [166, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 411, 414, 418, 421, 424, 427, 428, 430, 435, 454, 456, 467, 469, 474, 476, 477, 479, 480, 489, 519, 522, 523, 534, 535, 539, 544, 545, 560, 561, 566, 573, 574, 593, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 744, 778, 784, 785, 786, 789, 793, 801, 807, 808, 809, 845, 867, 868, 886], "896": [166, 173, 231], "15_inplac": [166, 173], "broadli": 167, "ram": [167, 198, 200, 215, 216, 217, 218, 264, 265, 479, 480, 561, 784, 801, 807, 886], "36037": [167, 198, 202, 205, 206, 207, 209, 216, 217, 218], "necessarili": [167, 169, 188, 198, 200, 203, 257, 264, 265, 297, 763, 868], "instantan": [167, 223], "receiv": [167, 189, 432, 496, 667, 843, 868, 886], "rectangular": [167, 201, 226, 271, 272, 275, 278, 279, 280, 812, 817], "ttl": [167, 607], "upcom": 167, "newer": [167, 169, 204, 843, 848, 851, 853, 886], "27977": 167, "28345": 167, "28771": 167, "29219": 167, "29652": 167, "preced": [167, 264, 265, 360, 471, 754, 784, 841, 845, 886], "config": [167, 170, 187, 256, 257, 264, 265, 375, 377, 378, 379, 380, 382, 383, 384, 386, 387, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 452, 453, 459, 460, 470, 479, 480, 490, 551, 561, 632, 642, 645, 649, 754, 763, 784, 801, 807, 845, 886], "mne_stim_channel": [167, 170, 257, 452, 453, 479, 480], "mne_stim_channel_1": [167, 257, 452, 453], "saver": [167, 200, 202, 863, 865], "testing_data_fold": 167, "eeglab_raw_fil": 167, "eeglab_raw": 167, "began": 167, "000068": 167, "602": [167, 202, 871], "unmodifi": [167, 207, 508], "custom_map": 167, "annotations_from_ev": [167, 258, 440, 876, 886], "orig_tim": [167, 200, 217, 258, 283, 886], "annot_from_ev": 167, "event_desc": [167, 283], "rem_annot": 167, "rem_ev": 167, "rem_event_dict": 167, "modulo": 167, "501": [167, 181, 186, 202, 208], "onlin": [167, 199, 204, 218, 257, 857, 870, 886], "20_events_from_raw": [167, 173], "alon": [168, 857], "gantri": [168, 269, 886], "blank": [168, 215, 706, 851, 886], "subject_info": [168, 264, 265, 266, 267, 269, 479, 480, 481, 886], "device_info": [168, 264, 265, 266, 267, 269, 443, 479, 480, 481, 886], "helium_info": [168, 264, 265, 266, 267, 269, 479, 480, 481, 886], "hpi_subsystem": [168, 269], "proc_histori": [168, 264, 265, 266, 267, 269, 479, 480, 481], "proj_id": [168, 215, 264, 265, 266, 267, 269, 479, 480, 481], "proj_nam": [168, 215, 264, 265, 266, 267, 269, 479, 480, 481], "utc_offset": [168, 264, 265, 266, 267, 269, 479, 480, 481, 886], "line_freq": [168, 241, 269], "gantry_angl": [168, 269], "ctf_head_t": [168, 269, 871], "dev_ctf_t": [168, 269, 871], "acq_par": [168, 215, 257, 269], "acq_stim": [168, 269], "xplotter_layout": [168, 269], "kit_system_id": [168, 269], "0143": 168, "0142": 168, "0213": 168, "0212": [168, 335], "0222": 168, "0223": 168, "0232": 168, "0233": 168, "0313": 168, "0312": 168, "0322": 168, "0323": 168, "0333": 168, "0332": 168, "0343": 168, "0342": 168, "0413": 168, "0412": 168, "0422": 168, "0423": 168, "0432": 168, "0433": 168, "0443": 168, "0442": 168, "0513": 168, "0512": 168, "0523": [168, 244, 671], "0522": 168, "0532": 168, "0533": 168, "0542": 168, "0543": 168, "0613": 168, "0612": 168, "0622": 168, "0623": 168, "0633": 168, "0632": 168, "0643": 168, "0713": 168, "0712": 168, "0723": 168, "0722": 168, "0733": 168, "0732": 168, "0743": 168, "0742": 168, "0813": 168, "0822": 168, "0823": 168, "0913": 168, "0912": 168, "0923": 168, "0922": 168, "0932": 168, "0933": 168, "0943": 168, "1012": 168, "1023": 168, "1022": [168, 195], "1032": 168, "1033": 168, "1042": [168, 335], "1112": [168, 195], "1113": 168, "1123": [168, 208], "1122": [168, 202], "1133": 168, "1132": 168, "1143": 168, "1213": 168, "1212": [168, 194], "1223": 168, "1222": 168, "1232": 168, "1233": 168, "1243": 168, "1242": 168, "1312": 168, "1313": [168, 208], "1322": 168, "1343": 168, "1412": [168, 208], "1413": 168, "1423": 168, "1433": 168, "1432": 168, "1442": [168, 226], "1443": 168, "1512": [168, 244, 474], "1523": [168, 244, 722, 732, 733, 735, 736, 738], "1533": 168, "1532": 168, "1543": 168, "1542": 168, "1612": 168, "1622": [168, 194], "1623": 168, "1632": 168, "1633": 168, "1642": 168, "1713": 168, "1712": 168, "1722": 168, "1723": [168, 194], "1732": 168, "1733": 168, "1743": 168, "1742": 168, "1813": 168, "1812": 168, "1822": 168, "1823": 168, "1832": 168, "1833": 168, "1843": 168, "1912": 168, "1913": 168, "1923": 168, "1922": 168, "1932": 168, "1933": 168, "1943": 168, "1942": 168, "2023": [168, 170], "2022": [168, 179, 211, 212, 244, 245, 575, 862], "2032": 168, "2033": 168, "2042": 168, "2112": 168, "2122": 168, "2133": 168, "2132": 168, "2143": [168, 244, 735, 738], "2142": 168, "2212": 168, "2213": 168, "2223": 168, "2222": [168, 194], "2233": 168, "2242": [168, 215], "2243": [168, 194], "2312": 168, "2313": [168, 209], "2323": 168, "2322": 168, "2333": [168, 555], "2343": 168, "2342": 168, "2412": 168, "2413": 168, "2422": 168, "2432": 168, "2442": 168, "2512": 168, "2513": 168, "2523": 168, "2532": 168, "2543": 168, "2542": 168, "2612": 168, "2613": 168, "2623": 168, "2633": 168, "bear": [168, 845, 865, 886], "scanno": [168, 269, 871], "logno": [168, 269, 871], "cal": [168, 269, 320, 478, 871], "coil_typ": [168, 269, 862], "unit_mul": [168, 269, 871], "131": [168, 195, 199, 214, 226, 230, 231, 335], "162": [168, 195, 208, 226, 230, 231, 244, 277], "163": [168, 195, 208, 231, 277], "167": [168, 176, 208, 231], "185": [168, 194, 195, 200, 208, 226, 230, 231, 233, 239, 243, 277], "193": [168, 230, 231, 886], "197": [168, 208, 231, 862], "208": [168, 170, 187, 194, 203, 208, 214, 226, 231, 244], "209": [168, 183, 201, 208, 226, 230, 231, 244], "215": [168, 208, 230, 231, 244, 577], "216": [168, 226], "228": [168, 208, 231, 244, 577], "229": [168, 195, 208, 226, 230], "233": [168, 178, 208, 226, 230, 231], "237": [168, 195, 208, 226, 230], "242": [168, 208, 886], "254": [168, 195, 208, 226, 231], "259": [168, 208, 226, 231, 244, 868], "268": [168, 184, 190, 208, 226, 231], "276": [168, 208, 226, 231], "278": [168, 208, 231], "323": [168, 208, 209, 231], "338": [168, 194, 208, 231], "347": [168, 231, 886], "oxyhemoglobin": [168, 264, 265, 266, 267, 479, 480, 558, 706, 708, 709, 710, 841, 868], "deoxyhemoglobin": [168, 189, 264, 265, 266, 267, 479, 480, 558, 706, 708, 709, 710, 841, 868], "hbo": [168, 189, 210, 215, 221, 264, 265, 266, 267, 311, 371, 373, 479, 480, 558, 706, 708, 709, 710, 841, 868], "hbr": [168, 189, 210, 215, 221, 264, 265, 266, 267, 311, 371, 373, 479, 480, 558, 706, 708, 709, 710, 841, 868], "express": [168, 199, 428, 440, 487, 494, 502, 536, 555, 582, 611, 628, 720, 867, 868, 871, 886], "pick_channels_regexp": [168, 199, 204, 206, 211, 552, 876], "unawar": 168, "accident": [168, 217, 671, 886], "channel_typ": [168, 204, 264, 265, 266, 267, 269, 479, 480, 561, 706, 708, 709, 710, 876], "emb": 168, "comprehens": [168, 195, 215, 226, 228, 411, 845, 867], "channel_indices_by_typ": [168, 876], "ch_idx_by_typ": 168, "exci": [168, 215, 264, 265, 266, 267, 311, 479, 480, 558, 706, 708, 709, 710, 868], "ia": [168, 215, 264, 265, 266, 267, 269, 311, 479, 480, 558, 706, 708, 709, 710, 868, 886], "syst": [168, 215, 264, 265, 266, 267, 311, 479, 480, 558, 706, 708, 709, 710, 868], "bio": [168, 221, 264, 265, 266, 267, 311, 373, 444, 479, 480, 494, 558, 706, 708, 709, 710, 868], "temperatur": [168, 264, 265, 266, 267, 311, 479, 480, 558, 706, 708, 709, 710, 841, 862, 868, 886], "gsr": [168, 264, 265, 266, 267, 311, 479, 480, 558, 706, 708, 709, 710, 868, 886], "fnirs_cw_amplitud": [168, 189, 210, 264, 265, 266, 267, 371, 479, 480, 841], "fnirs_fd_ac_amplitud": [168, 189, 264, 265, 266, 267, 371, 479, 480, 841], "fnirs_fd_phas": [168, 189, 264, 265, 266, 267, 371, 479, 480, 841], "fnirs_od": [168, 264, 265, 266, 267, 371, 479, 480, 841], "eyegaz": [168, 191, 212, 264, 265, 266, 267, 479, 480, 558, 581, 706, 708, 709, 710], "pupil": [168, 264, 265, 266, 267, 479, 480, 558, 581, 706, 708, 709, 710, 862], "eeg_indic": 168, "ipython": [168, 264, 265, 479, 480, 561, 784, 801, 807, 843, 856, 865, 867, 869], "30_info": [168, 173], "mplot3d": [169, 205, 226], "axes3d": [169, 205, 226, 262, 264, 265, 266, 267, 312, 479, 480, 782, 804, 810, 886], "plai": [169, 204, 223, 241, 734, 737, 867, 868], "eeg_posit": 169, "builtin_montag": 169, "montage_nam": 169, "montage_descript": 169, "standard_alphabet": 169, "a1": [169, 207], "b2": 169, "standard_postfix": 169, "postfix": 169, "intermedi": [169, 199, 270, 289, 291, 692, 754, 868, 886], "standard_prefix": 169, "standard_prim": 169, "biosemi16": [169, 226], "biosemi": [169, 226, 338, 487, 868], "cap": [169, 195, 226, 841, 862, 886], "biosemi32": [169, 226], "biosemi64": [169, 226], "biosemi160": 169, "biosemi256": 169, "m10": [169, 886], "egi_256": 169, "geodes": [169, 469, 513, 676, 677, 678, 680, 681, 886], "gsn": [169, 443], "hydrocel": [169, 443], "64_1": 169, "65_1": 169, "mgh60": [169, 886], "mgh70": [169, 886], "brainvis": [169, 330, 331, 440, 444, 479, 480, 489, 611, 862, 868, 886], "artini": [169, 189, 328, 886], "octamon": [169, 189, 886], "detector": [169, 189, 210, 215, 503, 598, 599, 754, 770, 868, 886], "brite23": [169, 886], "brainproduct": 169, "rnp": 169, "ba": [169, 446, 868, 886], "easycap_montag": 169, "digmontag": [169, 181, 264, 265, 266, 267, 269, 315, 316, 325, 328, 330, 331, 332, 333, 334, 335, 336, 337, 365, 463, 479, 480, 491, 588, 590, 804, 824, 841, 876, 886], "headshap": [169, 256, 305, 312, 325, 337, 504, 886], "gca": 169, "view_init": [169, 205, 226], "azim": [169, 205], "ssvep_raw": 169, "read_raw_brainvis": [169, 188, 241, 485, 868, 876, 886], "circumfer": 169, "t4": 169, "t3": [169, 320, 479, 886], "075": 169, "sample_data_raw_path": 169, "sample_raw": 169, "ax2d": 169, "add_subplot": [169, 226], "ax3d": 169, "irregular": [169, 865, 886], "fastrak": 169, "predefin": [169, 841], "layout_dir": 169, "iterdir": 169, "IN": 169, "ctf151": [169, 226, 338], "lai": [169, 338, 509, 868, 886], "ctf275": [169, 226, 338], "eeg1005": [169, 338], "egi256": [169, 338], "geodesicheadweb": [169, 338], "AS": [169, 338], "umd": [169, 226, 338], "neuromag_122": [169, 338], "grad_norm": [169, 338], "magneswh3600": [169, 338, 490], "biosemi_layout": 169, "make_eeg_layout": [169, 321, 327, 876], "layout_from_raw": 169, "make_meg_layout": 169, "snugli": 169, "40_sensor_loc": [169, 173], "suit": [170, 857], "get_config": [170, 386, 649, 876, 886], "unnam": 170, "mne_use_cuda": [170, 375, 843], "json": [170, 460], "unset": [170, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 414, 421, 424, 427, 428, 454, 467, 469, 479, 480, 519, 522, 523, 534, 535, 544, 545, 566, 573, 574, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 786, 789, 808, 843, 886], "typeerror": [170, 175, 778, 886], "err": [170, 203, 344], "nonetyp": 170, "unsur": [170, 202, 845], "fallback": [170, 264, 265, 479, 480, 784, 807, 867, 886], "missing_config_kei": 170, "mne_browse_raw_s": 170, "979166666666666": 170, "mne_datasets_brainstorm_path": 170, "mne_datasets_eegbci_path": [170, 380, 386], "mne_datasets_epilepsy_ecog_path": [170, 382], "mne_datasets_erp_core_path": [170, 383], "mne_datasets_eyelink_path": [170, 384], "mne_datasets_fieldtrip_cmc_path": 170, "mne_datasets_fnirs_motor_path": [170, 391], "mne_datasets_hf_sef_path": [170, 393], "mne_datasets_kiloword_path": [170, 394], "mne_datasets_limo_path": [170, 395], "mne_datasets_misc_path": [170, 396], "mne_datasets_mtrf_path": [170, 397], "mne_datasets_multimodal_path": [170, 398], "mne_datasets_opm_path": 170, "mne_datasets_phantom_4dbti_path": [170, 400], "mne_datasets_refmeg_noise_path": [170, 401], "mne_datasets_sample_path": [170, 386, 402], "mne_datasets_somato_path": [170, 405], "mne_datasets_spm_face_path": 170, "mne_datasets_ssvep_path": [170, 407], "mne_datasets_testing_path": 170, "mne_datasets_ucl_opm_auditory_path": [170, 408], "mne_logging_level": [170, 652], "mne_3d_option_them": [170, 754, 886], "mne_browser_overview_mod": [170, 264, 265, 479, 480, 561, 784, 801, 807], "hidden": [170, 171, 264, 265, 479, 480, 561, 754, 784, 801, 807, 886], "mne_browser_precomput": [170, 264, 265, 479, 480, 561, 784, 801, 807], "mne_browser_them": [170, 264, 265, 479, 480, 561, 784, 801, 807, 886], "mne_browser_backend": [170, 264, 265, 479, 480, 561, 784, 801, 807, 886], "mne_3d_option_multi_sampl": [170, 843, 886], "mne_3d_option_antialia": [170, 820, 843, 886], "antialias": [170, 843, 886], "mne_3d_option_depth_peel": [170, 820], "peel": 170, "mne_3d_option_smooth_shad": [170, 763, 820], "theme": [170, 264, 265, 479, 480, 561, 754, 784, 801, 807, 886], "browser": [170, 171, 190, 215, 256, 264, 265, 274, 479, 480, 549, 561, 762, 766, 784, 801, 807, 823, 826, 845, 886], "plot_raw": [170, 264, 265, 266, 267, 479, 480, 810, 823, 876, 886], "mne_browser_use_opengl": [170, 264, 265, 479, 480, 561, 784, 801, 807, 886], "opengl": [170, 256, 264, 265, 470, 479, 480, 561, 784, 801, 807, 843, 851, 857], "mne_cache_dir": 170, "cach": [170, 843, 853], "mne_coreg_advanced_rend": 170, "mne_coreg_copy_annot": 170, "mne_coreg_fullscreen": [170, 470], "mne_coreg_guess_mri_subject": 170, "mne_coreg_head_high_r": [170, 470], "mne_coreg_head_opac": [170, 470], "mne_coreg_head_insid": 170, "opaqu": [170, 171, 274, 470, 886], "occlud": [170, 470], "mne_coreg_interact": 170, "trackbal": [170, 256, 266, 267, 470, 754, 770, 789], "terrain": [170, 256, 266, 267, 470, 754, 770, 789, 886], "mne_coreg_mark_insid": 170, "mne_coreg_prepare_bem": 170, "mne_coreg_orient_to_surfac": 170, "mne_coreg_scale_label": 170, "mne_coreg_scale_by_dist": 170, "mne_coreg_scene_scal": 170, "mne_coreg_window_height": 170, "mne_coreg_window_width": [170, 470], "mne_coreg_subjects_dir": 170, "mne_cuda_devic": [170, 886], "cuda": [170, 264, 265, 266, 267, 413, 417, 422, 423, 449, 450, 451, 479, 480, 849, 855, 865, 876, 886], "gpu": [170, 865, 886], "mne_datasets_megsim_path": 170, "megsim": [170, 886], "mne_datasets_spm_face_datasets_test": 170, "mne_datasets_visual_92_categories_path": [170, 409], "phantom_4dbti": [170, 184, 862, 876, 886], "mne_force_seri": 170, "serial": [170, 269], "decor": [170, 750, 752], "stabl": [170, 179, 201, 203, 244, 259, 297, 298, 341, 450, 478, 479, 480, 549, 561, 571, 763, 845, 851, 865], "auto_tutori": 170, "intro": [170, 171, 241], "50_configure_mn": [170, 173], "mne_memmap_min_s": 170, "1m": [170, 189, 653], "5g": 170, "mne_repr_html": [170, 886], "mne_skip_network_test": 170, "requires_good_network": 170, "mne_skip_testing_dataset_test": 170, "requires_spm_data": 170, "requires_bstraw_data": 170, "mne_tqdm": [170, 886], "tqdm": [170, 886], "presenc": [170, 199, 210, 223, 241, 244, 269, 392, 435, 845, 861, 886], "absenc": [170, 435], "mne_use_numba": 170, "numba": [170, 844, 886], "compil": [170, 594], "misspel": 170, "mnee_use_cuudaa": 170, "runtimewarn": [170, 751], "unrecogn": [170, 264, 265, 266, 267, 269, 479, 480, 886], "concern": [170, 203, 226, 499, 582, 618, 622], "userprofil": [170, 460], "linux": [170, 844, 845, 846, 848, 850, 851, 853, 886], "maco": [170, 845, 846, 848, 849, 850, 886], "get_config_path": [170, 876, 886], "home_dir": [170, 459, 460, 649], "use_env": [170, 459], "set_env": [170, 649, 886], "python_env": [170, 204], "minimal_cmd": 170, "usr": [170, 851, 856], "sbin": 170, "statement": [170, 171, 226, 651, 851], "fresh": 170, "me": [170, 701], "worrisom": 170, "set_log_level": [170, 651, 752, 876], "temporarili": [170, 205, 206, 264, 265, 266, 267, 376, 413, 449, 479, 480, 561, 784, 801, 807], "kit_data_path": 170, "abspath": 170, "use_log_level": [170, 239, 876], "432": [170, 226, 231], "496": [170, 208, 226, 231, 277], "meg160": 170, "v2r004": 170, "160ch": 170, "jan24": 170, "eq1160c": 170, "dewar": 170, "fll": 170, "board": 170, "adc": [170, 188], "alloc": [170, 693, 694, 696, 697], "shorthand": 170, "whatev": [170, 207, 479, 480, 709, 845], "recent": [170, 201, 411, 844, 845, 861, 886], "hasn": [170, 573, 886], "sys_info": [170, 274, 843, 844, 865, 876, 886], "stdout": [170, 651, 705, 886], "platform": [170, 264, 265, 266, 267, 479, 480, 708, 710, 807, 844, 848, 853, 857, 874], "1030": 170, "aw": [170, 255], "x86_64": [170, 844, 851], "glibc2": [170, 844], "mar": 170, "gcc": [170, 844], "cpu": [170, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 414, 421, 423, 424, 427, 428, 454, 467, 469, 479, 480, 519, 522, 523, 534, 535, 544, 545, 561, 566, 573, 574, 593, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 784, 786, 789, 801, 807, 808, 843, 844], "gb": [170, 843, 844, 851], "dev144": 170, "gdba7df191": 170, "openbla": [170, 844, 865], "thread": [170, 236, 264, 265, 479, 480, 561, 784, 801, 807, 868], "agg": 170, "pooch": [170, 386, 886], "jinja2": [170, 886], "dipi": [170, 276, 590, 742, 743, 744, 844, 886], "openmeeg": [170, 518, 523, 886], "unavail": [170, 886], "cupi": [170, 264, 265, 266, 267, 413, 417, 422, 449, 450, 451, 479, 480, 843, 844, 886], "mesa": [170, 470, 820, 886], "llvmpipe": [170, 843], "llvm": [170, 843], "pyvistaqt": [170, 271, 275, 279, 764, 812, 819, 825, 843, 844, 886], "ipyvtklink": [170, 874], "vtk": [170, 410, 754, 769, 843, 844, 886], "qtpy": [170, 844], "pyqt6": 170, "ipympl": 170, "pyqtgraph": [170, 264, 265, 479, 480, 561, 784, 801, 807, 886], "ecosystem": [170, 846, 849, 852], "dev0": [170, 844], "0dev0": 170, "icalabel": [170, 886], "shell": [171, 182, 209, 244, 256, 517, 524, 844, 845, 850, 851, 852, 865, 868], "deploi": [171, 865], "tempfil": 171, "ndimag": 171, "raw_tsss": [171, 256, 479, 480, 500], "_eeg": [171, 256, 479, 480, 886], "_ieeg": [171, 256, 479, 480, 886], "underscor": [171, 200, 204, 215, 561], "parse_fold": [171, 274, 886], "add_raw": [171, 274, 886], "slider": [171, 266, 267, 274, 793, 843, 886], "scrub": 171, "report_raw": 171, "jqueri": 171, "bundl": [171, 848, 850, 886], "tableexport": 171, "highlightj": 171, "atom": 171, "meaning": [171, 216, 273, 647, 845], "events_path": 171, "report_ev": 171, "add_epoch": [171, 274, 886], "fly": [171, 228, 264, 265, 479, 480, 739, 752, 784, 807, 886], "make_metadata": [171, 876, 886], "report_epoch": 171, "add_evok": [171, 274], "n_time_point": [171, 274], "evoked_path": 171, "cov_path": 171, "evokeds_subset": 171, "report_evok": 171, "add_covari": [171, 274], "report_cov": 171, "ecg_proj_path": 171, "eog_proj_path": 171, "sample_audvis_eog": [171, 865], "report_proj": 171, "add_ica": [171, 274, 886], "ecg_evok": [171, 204, 206, 274], "eog_evok": [171, 203, 204, 206, 274], "artifactu": [171, 198, 201, 204, 244, 561], "find_bads_ecg": [171, 204, 274, 561, 886], "ecg_scor": [171, 204, 274], "liber": 171, "eog_compon": 171, "report_ica": 171, "add_bem": [171, 274, 886], "th": [171, 264, 561, 663, 666, 668, 709, 865, 868], "report_mri_and_bem": 171, "add_tran": [171, 274, 886], "trans_path": 171, "report_coregistr": 171, "add_forward": [171, 274, 754, 886], "fwd_path": 171, "report_forward_sol": 171, "add_inverse_oper": [171, 274], "inverse_op_path": 171, "report_inverse_op": 171, "add_stc": [171, 274, 886], "report_inverse_sol": 171, "01632618": 171, "06303297": 171, "63565434": 171, "add_cod": [171, 274], "syntax": [171, 274, 845, 868], "snippet": [171, 234, 274, 865], "liter": [171, 274, 868], "mne_init_py_path": 171, "__init__": [171, 550], "mne_init_py_cont": 171, "read_text": 171, "utf": [171, 495, 611, 617, 886], "report_cod": 171, "add_figur": [171, 274, 886], "caption": [171, 274, 886], "num": [171, 240], "sky": 171, "image_format": [171, 256, 274, 886], "report_custom_figur": 171, "fig_1": 171, "ax_1": 171, "ax_2": 171, "report_custom_figure_sect": 171, "intuit": [171, 195, 241, 412, 427, 664, 665], "logo": [171, 886], "mne_logo_path": 171, "mne_icon": 171, "fig_arrai": 171, "rotation_angl": 171, "fig_array_rot": 171, "mneqtbrows": [171, 264, 265, 479, 480, 561, 784, 801, 807], "fun": [171, 264, 265, 266, 267, 479, 480], "768": [171, 182, 208, 231], "862": [171, 208, 231], "9176882624364033": 171, "photo": 171, "sketch": 171, "add_imag": [171, 274, 886], "jpeg": [171, 274], "gif": [171, 274, 754, 886], "svg": [171, 256, 274, 886], "report_custom_imag": 171, "add_": 171, "dropdown": [171, 886], "menu": [171, 217, 848, 851, 869], "hide": [171, 217, 239, 886], "checkbox": [171, 886], "report_tag": 171, "hdf5": [171, 271, 272, 274, 278, 280, 288, 301, 550, 560, 603, 633, 706, 707, 708, 709, 710, 726, 727, 728, 739, 828, 829, 849, 865, 886], "report_parti": 171, "amend": [171, 332], "report_from_disk": 171, "open_report": [171, 274, 876, 886], "report_fin": 171, "invok": [171, 256, 767, 851, 886], "barebon": [171, 256], "render_bem": [171, 274, 886], "raw_butterfli": [171, 274], "report_parse_folder_bas": 171, "raw_psd": [171, 274, 886], "refin": [171, 276, 320, 360], "report_parse_folder_raw_psd_proj": 171, "mri_decim": [171, 256, 274], "report_parse_folder_mri_bem": 171, "temporarydirectori": 171, "n_time_points_evok": [171, 274], "report_parse_folder_evok": 171, "tmp": 171, "tmphut61wzx": 171, "info_fnam": [171, 274], "report_parse_folder_cov": 171, "add_html": [171, 274, 886], "remind": [171, 561, 845], "my_html": 171, "ol": [171, 691, 874, 886], "manifest": [171, 202, 203, 204, 206, 841], "n1": 171, "report_add_html": 171, "70_report": [171, 173], "645": [173, 182, 231], "auto_tutorials_intro": 173, "771": 173, "volsourceestim": [174, 179, 180, 271, 272, 275, 276, 278, 280, 289, 291, 292, 293, 294, 295, 296, 515, 522, 528, 529, 530, 531, 532, 534, 544, 633, 646, 841, 876, 886], "mixedsourceestim": [174, 272, 275, 278, 279, 280, 633, 841, 876, 886], "realli": 174, "carri": [174, 198, 204, 241, 487, 687], "belong": [174, 269, 270, 274, 627, 683, 753, 754, 871], "shape_lh": 174, "is_equ": 174, "suspect": 174, "nth": [174, 204, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 578, 579, 706, 709], "peak_vertex": 174, "vert_as_index": [174, 179, 271, 272, 275, 278, 279, 280], "peak_vertex_surf": 174, "peak_valu": 174, "logic": [174, 221, 228, 231, 264, 265, 266, 267, 269, 470, 479, 480, 481, 561, 582, 871, 886], "lh_coordin": 174, "rh_coordin": 174, "10_stc_class": [174, 186], "load_mni152_templ": 175, "fname_av": 175, "fname_surf_lh": 175, "n100m": 175, "evoked_ful": 175, "posixpath": [175, 180], "6179": 175, "6941": 175, "2193": 175, "0405": 175, "4769": 175, "mni_po": 175, "to_mni": [175, 262, 886], "mri_po": 175, "to_mri": [175, 262, 886], "best_dip_idx": 175, "to_volume_label": [175, 262, 886], "fig_t1": 175, "cut_coord": 175, "fig_templ": 175, "pred_evok": 175, "inf": [175, 190, 198, 222, 264, 265, 266, 267, 282, 416, 476, 477, 479, 480, 511, 574, 706, 708, 710, 711, 713, 714, 716, 724, 725, 762, 808, 814, 886], "best_idx": 175, "best_tim": 175, "conf": [175, 262, 845], "plot_param": 175, "0f": [175, 266, 267, 789], "20_dipole_fit": [175, 186], "userwarn": 175, "dip_fix": 175, "7506": 175, "6606": 175, "jukka": [175, 177, 244, 886], "sarva": [175, 244], "electromagnet": [175, 177, 198, 206, 209, 223, 244, 297, 298, 432, 528, 572, 593, 841, 868], "biomagnet": [175, 244], "200m": 176, "500m": 176, "fig_cov": [176, 261, 779], "fig_spectra": 176, "1705": [176, 179], "1468": 176, "506": [176, 226], "1574": 176, "608": 176, "write_inverse_oper": [176, 542, 876, 886], "67933": 176, "16538e": 176, "set_color": [176, 182], "98df81": [176, 182], "vertno_max": 176, "time_max": [176, 177], "30_mne_dspm_loreta": [176, 186], "left_auditori": 177, "dip_po": 177, "dip_ori": 177, "dip_len": 177, "dip_tim": 177, "rgb": [177, 271, 272, 275, 278, 279, 280, 464, 469, 754, 770, 773, 812, 817, 818], "actual_amp": [177, 182, 184], "actual_gof": [177, 182, 184], "outward": [177, 262, 272, 278, 280, 365, 782, 865], "moment": [177, 179, 221, 269, 272, 278, 280, 318, 342, 344, 345, 346, 432, 571, 572, 582, 593, 817], "06165525": 177, "70033915": 177, "34794621": 177, "inward": [177, 865], "curvatur": [177, 271, 272, 275, 278, 279, 280, 704, 754, 812, 817, 871, 886], "collaps": [177, 274, 433], "brain_mag": 177, "overlay_alpha": [177, 272, 278, 280, 817], "2188": 177, "44205e": 177, "79973942": 177, "38378769": 177, "8347911": 177, "somewhat": [177, 198], "strai": 177, "unrestrict": 177, "brain_loos": 177, "03844879": 177, "68532258": 177, "12541436": 177, "risto": [177, 205, 206, 244, 528, 868], "ilmoniemi": [177, 205, 206, 244, 528, 868], "knuutila": [177, 244], "olli": [177, 244], "lounasmaa": [177, 244], "noninvas": [177, 244], "modern": [177, 187, 244, 387, 843, 868, 870, 886], "revmodphi": [177, 244], "fa": [177, 244, 539, 663, 668], "hsuan": [177, 244, 539, 663, 668], "lin": [177, 194, 244, 417, 539, 663, 668], "belliveau": [177, 244, 528, 539, 663, 668], "20155": [177, 244], "457": [177, 186, 226, 231], "504": [177, 208, 231], "35_dipole_orient": [177, 186], "variant": [178, 188, 464, 572, 843, 886], "1498464098687909": [178, 180], "037797": 178, "65922": 178, "72259e": 178, "28047949e": 178, "72734062e": 178, "97200565e": 178, "56295849": 178, "27742998": 178, "00597185": 178, "65359441": 178, "22223216": 178, "63030546": 178, "eigen": [178, 270, 683], "34003429e": 178, "79067976e": 178, "93243713e": 178, "61893": 178, "8713e": 178, "81398590e": 178, "00293217e": 178, "59049573e": 178, "79225614": 178, "45181115": 178, "88420759": 178, "65906465": 178, "11446799": 178, "4224023": 178, "41240750e": 178, "15338772e": 178, "80101709e": 178, "40_mne_fixed_fre": [178, 186], "britta": [179, 244, 873, 886], "westner": [179, 244, 873, 886], "wstnr": 179, "apply_lcmv": [179, 289, 291, 294, 295, 296, 876, 886], "linearli": [179, 205, 209, 244, 293, 294, 295, 296, 297, 298, 841, 865], "ingredi": 179, "valuabl": [179, 868], "gaug": 179, "incorpor": [179, 226, 231, 320, 435, 444, 479, 480, 566, 845, 868, 874, 886], "rule": [179, 198, 202, 244, 561, 868], "thumb": [179, 198, 202, 561, 862], "advic": [179, 845], "defici": [179, 369, 561, 868, 886], "misrepres": 179, "3757": [179, 180], "inher": [179, 188, 231, 428], "somehow": [179, 181, 204], "nai": [179, 297, 298, 886], "switch": [179, 182, 183, 201, 208, 223, 244, 256, 270, 275, 349, 479, 480, 843, 845, 851, 871, 886], "invari": [179, 297, 298], "filters_vec": 179, "apply_lcmv_raw": [179, 293, 294, 295, 876, 886], "apply_lcmv_epoch": [179, 271, 272, 275, 278, 279, 280, 293, 294, 296, 876, 886], "087": 179, "stat_map": [179, 279, 280, 818], "glass_brain": [179, 180, 279, 280, 818, 886], "022485": [179, 180], "008449": [179, 180], "036217": [179, 180], "071071": [179, 180], "914866": [179, 180], "406098": [179, 180], "008756": [179, 180], "433700": [179, 180], "028119": [179, 180], "plotter": [179, 264, 265, 561, 754, 756, 784, 801, 863, 886], "peak_vox": 179, "ori_label": 179, "sourcemorph": [179, 279, 280, 360, 634, 818, 849, 876, 886], "fname_fs_src": 179, "stc_f": [179, 180], "085": 179, "17352": 179, "barri": [179, 201, 203, 204, 244, 297, 298, 560, 576], "veen": [179, 244, 297, 298], "wim": [179, 244, 297, 298], "drongelen": [179, 244, 297, 298], "mosh": [179, 244, 297, 298], "yuchtman": [179, 244, 297, 298], "akifumi": [179, 244, 297, 298], "suzuki": [179, 244, 297, 298], "867": [179, 231, 244, 297, 298], "623056": [179, 244, 297, 298], "brook": [179, 244, 860, 886], "jiri": [179, 244], "vrba": [179, 244], "clair": [179, 244, 886], "stevenson": [179, 244], "gareth": [179, 211, 244, 575, 862], "barn": [179, 211, 244, 575, 862], "arjan": [179, 244], "hillebrand": [179, 244], "morri": [179, 244], "optimis": [179, 244], "sarang": [179, 244, 874], "dalal": [179, 244, 874], "vladimir": [179, 226, 244, 699, 700], "litvak": [179, 226, 244, 699, 700], "oostenveld": [179, 231, 244, 693, 694, 696, 697, 886], "mathij": [179, 244], "schoffelen": [179, 244], "118789": [179, 244], "918": [179, 186, 208], "50_beamformer_lcmv": [179, 186], "flatmap": [180, 271, 275, 279, 754, 812, 886], "mpl_fig": 180, "94880328959697": 180, "84640986879091": 180, "649601096532322": 180, "5653": 180, "67635542": 180, "11717401": 180, "19136023": 180, "atlas": [180, 655, 886], "get_volume_labels_from_aseg": [180, 876, 886], "label_tc": [180, 271, 272, 275, 278, 279, 280, 445], "lidx": 180, "xytext": 180, "arrowprop": [180, 194], "arrowstyl": [180, 194], "set_vis": 180, "grain": [180, 886], "loci": 180, "stc_back": 180, "labels_to_stc": [180, 876, 886], "6210": 180, "69834054": 180, "98871778": 180, "62206532": 180, "70708526": 180, "36619556": 180, "64056812": 180, "6864": 180, "787": 180, "60_visualize_stc": [180, 186], "read_custom_montag": [181, 189, 264, 265, 266, 267, 269, 328, 479, 480, 876, 886], "reconstrct": 181, "elc": [181, 330, 886], "synthes": [181, 187, 303, 307, 504, 583, 886], "fname_t1_electrod": 181, "sample_eeg_mri": 181, "t1_electrod": 181, "fname_mon": 181, "sample_mri_montag": 181, "ras_mni_t": [181, 746], "read_ras_mni_t": [181, 876], "mni_affin": 181, "img_mni": 181, "hot_black_bon": 181, "black_bg": 181, "resampling_interpol": 181, "pos_vox": 181, "fname_t1": 181, "vox2mri_t": 181, "pos_mri": [181, 262], "tkmedit": [181, 851, 868], "dig_montag": 181, "head_siz": [181, 328, 330], "99930957": 181, "00998471": 181, "03578661": 181, "00316747": 181, "01275917": 181, "81240435": 181, "58295487": 181, "00685511": 181, "03489383": 181, "58300899": 181, "81171605": 181, "02888406": 181, "812404": 181, "582955": 181, "583009": 181, "3252": 181, "3250": 181, "1694": 181, "3223": 181, "4097": [181, 201], "1610": 181, "8193": 181, "040598": 181, "157084": 181, "86184": 181, "24877e": 181, "17591891": 181, "939572": 181, "86348066": 181, "435": [181, 186, 231], "70_eeg_mri_coord": [181, 186], "fetch_phantom": [182, 431, 876, 886], "planor": 182, "meg1933": 182, "meg2421": 182, "1792": 182, "3840": 182, "7936": 182, "bmax": [182, 256], "ring": [182, 201, 446, 448, 886], "otaniemi": [182, 390, 431, 862, 886], "phantom_otaniemi": 182, "00364477": [182, 183, 184], "944121": [182, 183, 184], "138646": [182, 183, 184], "665982": [182, 183, 184], "684475": [182, 183, 184], "140083": [182, 183, 184], "0127517": [182, 183, 184], "plot_evoked_whit": [182, 266, 267, 788, 876, 886], "t_peak": 182, "32640": 182, "32639": 182, "55367811e": 182, "90213143e": 182, "55347147e": 182, "28605719e": 182, "96728167e": 182, "86739464e": 182, "38610872e": 182, "82304534e": 182, "48308374e": 182, "31818228e": 182, "16854987e": 182, "00130181e": 182, "01608756e": 182, "05724640e": 182, "66791928e": 182, "36603176e": 182, "50599819e": 182, "82644670e": 182, "99846050e": 182, "93593540e": 182, "60183041e": 182, "976295": 182, "211976": 182, "043756": 182, "206488": 182, "972764": 182, "105326": 182, "064891": 182, "093794": 182, "993475": 182, "actual_ori": 182, "rad2deg": 182, "arcco": 182, "dip_tru": [182, 184], "988": [182, 186, 194, 231], "80_brainstorm_phantom_elekta": [182, 186], "phantomctf": 183, "bst_phantom_ctf": 183, "phantom_200ua_20150709_01": 183, "dip_freq": 183, "phantom_20ua_20150603_03": 183, "erm_path": 183, "emptyroom_20150709_01": 183, "24000": 183, "23999": 183, "hdac006": 183, "zeros_lik": [183, 194], "ones_lik": [183, 228, 229], "tsss": [183, 266, 269, 479, 500, 593, 601, 623, 886], "apply_gradient_compens": [183, 187, 479, 480, 868, 886], "un": [183, 202, 205, 209, 218, 479, 480, 537, 538, 807, 868], "mf_kwarg": 183, "st_durat": [183, 209, 582, 593], "021666666666666667": 183, "458": [183, 195, 208, 231], "catch_warn": 183, "simplefilt": 183, "60000": 183, "99596855e": 183, "57828787e": 183, "09548814e": 183, "44821628e": 183, "22550465e": 183, "07831245e": 183, "16519699e": 183, "85599860e": 183, "24819011e": 183, "19149506e": 183, "49201625e": 183, "90435099e": 183, "37114004e": 183, "52368814e": 183, "95491435e": 183, "09260032e": 183, "84849095e": 183, "02461913e": 183, "40860739e": 183, "15627312e": 183, "58591259e": 183, "999939": 183, "002039": 183, "010868": 183, "001115": 183, "959234": 183, "282612": 183, "011001": 183, "282607": 183, "959173": 183, "expected_po": 183, "array_str": 183, "85_brainstorm_phantom_ctf": [183, 186], "4dbti": 184, "badier": [184, 244, 666], "marseil": [184, 862], "franc": 184, "rfhp1": 184, "0hz": 184, "a173": 184, "a213": 184, "a232": 184, "4350": 184, "not_and": [184, 257, 452, 620, 886], "hs_file": [184, 187, 490], "13599": 184, "20053968578577042": 184, "6576": 184, "6575": 184, "50691838e": 184, "61763336e": 184, "91409625e": 184, "91576159e": 184, "16898444e": 184, "75585208e": 184, "47442194e": 184, "45272203e": 184, "55529894e": 184, "46448717e": 184, "88484744e": 184, "05130802e": 184, "14443569e": 184, "70955369e": 184, "39503671e": 184, "16681391e": 184, "65491197e": 184, "24338008e": 184, "53281664e": 184, "47448228e": 184, "78257781e": 184, "975564": 184, "033891": 184, "217085": 184, "044586": 184, "998011": 184, "044560": 184, "215143": 184, "053150": 184, "975135": 184, "43530566e": 184, "00499851e": 184, "47056513e": 184, "49717001e": 184, "01651220e": 184, "39837298e": 184, "09320996e": 184, "53068976e": 184, "44272962e": 184, "07218608e": 184, "57916869e": 184, "24522939e": 184, "45459681e": 184, "19250060e": 184, "30544307e": 184, "26518629e": 184, "97497347e": 184, "82472005e": 184, "37787240e": 184, "96791371e": 184, "70423989e": 184, "975554": 184, "034041": 184, "217109": 184, "044503": 184, "998063": 184, "043482": 184, "215208": 184, "052081": 184, "975178": 184, "58999814e": 184, "84421337e": 184, "28166457e": 184, "67818745e": 184, "17428979e": 184, "76211498e": 184, "09542089e": 184, "22401648e": 184, "04141267e": 184, "15865669e": 184, "76599754e": 184, "17446488e": 184, "49708010e": 184, "60822410e": 184, "73060305e": 184, "05814038e": 184, "01071067e": 184, "20173942e": 184, "25861185e": 184, "85502070e": 184, "47521229e": 184, "975577": 184, "033678": 184, "217061": 184, "044611": 184, "997960": 184, "045666": 184, "215080": 184, "054233": 184, "975089": 184, "40101009e": 184, "10513936e": 184, "52303974e": 184, "27457778e": 184, "38233857e": 184, "06793751e": 184, "00477278e": 184, "15792686e": 184, "30206685e": 184, "40306943e": 184, "32057779e": 184, "22353020e": 184, "11884928e": 184, "17314181e": 184, "64256593e": 184, "23243102e": 184, "97110034e": 184, "94566869e": 184, "63267153e": 184, "08360546e": 184, "98210291e": 184, "975557": 184, "033946": 184, "217110": 184, "044391": 184, "998071": 184, "043409": 184, "215218": 184, "051986": 184, "975181": 184, "37436305": 184, "3777228": 184, "21169488": 184, "17616473": 184, "90_phantom_4dbti": [184, 186], "auto_tutorials_invers": 186, "786": [186, 231], "503": [186, 195, 226, 231], "558": [186, 190, 193, 194, 208, 231], "maxshield": [187, 256, 266, 269, 479, 500, 593, 623, 871, 886], "allow_maxshield": [187, 208, 209, 266, 479, 500, 623], "ucl": [187, 211, 244, 354, 886], "read_raw_fil": [187, 211, 485, 868, 876, 886], "mandatori": [187, 297, 298, 320, 479, 561, 868], "rfdc": [187, 256], "realiz": [187, 201], "carefulli": [187, 199, 201, 862], "read_dig_polhemus_isotrak": [187, 312, 325, 328, 331, 332, 333, 334, 335, 336, 339, 868, 876, 886], "technic": [187, 239, 244, 264, 265, 266, 267, 479, 480, 528, 708, 710, 718, 724, 861, 867, 868], "disturb": [187, 861, 868], "mainli": [187, 241, 845, 868], "nicknam": 187, "n_1": 187, "n_2": 187, "n_3": 187, "x_1": [187, 868], "x_2": [187, 868], "x_3": 187, "denot": [187, 195, 217, 272, 278, 280, 591, 663, 666, 668, 687, 689, 707, 841, 868], "x_": [187, 195, 868], "m_": 187, "bmatrix": [187, 868], "c_": [187, 226, 868], "standardize_nam": [187, 504, 619, 886], "nx3": [187, 466], "mrk": [187, 256, 482, 504, 619, 886], "elp": [187, 256, 330, 337, 504, 619, 621, 868, 886], "onward": [187, 656], "miscellan": [187, 215, 264, 265, 266, 267, 479, 480, 558, 706, 708, 709, 710, 868, 871], "eight": [187, 868, 886], "endian": [187, 886], "stimthresh": [187, 256, 504], "sum_": [187, 201, 666, 868], "t_p": 187, "d_p": 187, "bigg": 187, "leq": [187, 226], "read_raw_fieldtrip": [187, 485, 868, 876, 886], "read_epochs_fieldtrip": [187, 868, 876, 886], "read_evoked_fieldtrip": [187, 868, 876, 886], "intent": [187, 863], "original_data": 187, "read_raw_fiff": 187, "original_info": 187, "data_from_ft": 187, "evoked_data": [187, 228], "untest": 187, "cnt": [187, 440, 491, 611, 868, 886], "egi": [187, 330, 333, 496, 868, 886], "calibr": [187, 191, 209, 269, 432, 571, 572, 582, 593, 604, 609, 871, 886], "eximia": [187, 497, 868, 886], "3rd": [187, 198, 271, 272, 275, 278, 279, 280, 692], "parti": 187, "librari": [187, 756, 843, 845, 851, 852, 857, 863, 865, 886], "abund": 187, "electrophysiolog": [187, 201, 244, 841], "10_reading_meg_data": [187, 193], "meta": [188, 221, 264, 265, 266, 267, 479, 480, 481, 874], "ini": 188, "host": [188, 867, 886], "pybv": [188, 444, 479, 480], "mnelab": [188, 852], "pyedflib": 188, "read_raw_bdf": [188, 485, 494, 502, 868, 876, 886], "amplifi": [188, 203, 207, 508, 857, 886], "byte": [188, 264, 265, 479, 480, 511, 762, 871, 886], "read_raw_gdf": [188, 485, 487, 494, 868, 876, 886], "overcom": 188, "releas": [188, 845, 853, 865, 867, 886], "gender": [188, 244, 403], "read_raw_cnt": [188, 485, 868, 876, 886], "danger": [188, 269], "x_coord": 188, "y_coord": 188, "electloc": 188, "encourag": [188, 223, 856, 867, 886], "read_raw_egi": [188, 485, 868, 876, 886], "netstat": [188, 496, 886], "read_raw_nicolet": [188, 485, 868, 876, 886], "nexstim": 188, "read_raw_eximia": [188, 485, 868, 876], "read_raw_persyst": [188, 868, 876, 886], "nk": 188, "read_raw_nihon": [188, 876, 886], "11d": 188, "cmt": 188, "cn2": 188, "histori": [188, 269, 443, 841, 871, 886], "successfulli": [188, 189, 216, 845, 871], "neither": [188, 468, 479, 480, 853], "nor": [188, 207, 468, 479, 480, 853, 867], "20_reading_eeg_data": [188, 193], "emitt": 189, "transmitt": 189, "oxyhaemoglobin": [189, 210], "modif": [189, 191, 236, 330, 373, 852, 886], "Near": 189, "commun": [189, 194, 195, 223, 244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 417, 479, 480, 706, 709, 735, 738, 845, 849, 864, 874], "effort": [189, 487, 845, 866, 874], "sfnir": 189, "gowerlab": [189, 886], "cortivis": 189, "read_raw_snirf": [189, 876, 886], "provis": 189, "haemoglobin": [189, 595, 886], "optode_fram": [189, 510], "vendor": [189, 868], "icbm": 189, "2009b": 189, "nirstar": [189, 508], "aurora": [189, 508, 886], "nirscout": [189, 508], "nirsport": [189, 508, 886], "read_raw_hitachi": [189, 876, 886], "read_raw_boxi": [189, 485, 868, 876, 886], "iss": [189, 488, 886], "paren": 189, "unmodul": 189, "unpars": 189, "organis": 189, "digaux": 189, "port": [189, 212, 851, 857], "discourag": [189, 264, 265, 266, 267, 479, 480, 708, 710, 786, 865, 886], "standardis": [189, 886], "to_csv": [189, 215], "_d": 189, "wavelength": [189, 198], "s1_d1": [189, 210], "s2_d1": 189, "s3_d1": 189, "s4_d1": 189, "s5_d2": 189, "s6_d2": 189, "s7_d2": 189, "s8_d2": 189, "assist": [189, 250, 843, 851, 868], "ficidu": 189, "196m": 189, "67m": 189, "7mb": 189, "3m": 189, "9mb": 189, "0mb": 189, "0m": 189, "6mb": 189, "5m": 189, "3mb": 189, "2m": 189, "8m": 189, "6m": 189, "1mb": 189, "2mb": 189, "109m": 189, "118m": 189, "127m": 189, "135m": 189, "144m": 189, "8mb": 189, "153m": 189, "162m": 189, "171m": 189, "181m": 189, "190m": 189, "638gb": 189, "239m": 189, "82m": 189, "4mb": 189, "4m": 189, "9m": 189, "103m": 189, "111m": 189, "119m": 189, "128m": 189, "136m": 189, "145m": 189, "161m": 189, "169m": 189, "178m": 189, "186m": 189, "5mb": 189, "194m": 189, "202m": 189, "211m": 189, "219m": 189, "226m": 189, "234m": 189, "818gb": 189, "30_reading_fnirs_data": [189, 193], "site": [190, 203, 204, 209, 244, 269, 320, 479, 572, 582, 593, 845], "beep": 190, "deviant": [190, 201], "finger": [190, 862], "bug": [190, 257, 452, 470, 705, 754, 845, 864, 866, 867], "consumpt": [190, 266, 267, 428, 788, 886], "use_precomput": 190, "erm_fnam": 190, "s01_noise_20131218_01": 190, "demand": [190, 215, 428, 432, 478, 616, 868, 886], "n_times_run1": 190, "4800": 190, "unus": [190, 269, 277, 582, 886], "heog": [190, 491], "veog": [190, 491, 886], "favorit": [190, 845], "annotations_df": 190, "csv_fname": 190, "events_bad_0": 190, "concat": [190, 411], "saccades_ev": 190, "7625": 190, "142459": 190, "216954": 190, "345135": 190, "357687": 190, "409101": 190, "461110": 190, "479866": 190, "764914": 190, "798174": 190, "846880": 190, "858863": 190, "9256": 190, "14287": 190, "116432": 190, "134489": 190, "464527": 190, "494136": 190, "749288": 190, "788623": 190, "21179": 190, "72993": 190, "134527": 190, "196555": 190, "249894": 190, "343357": 190, "400771": 190, "450256": 190, "593101": 190, "733942": 190, "765939": 190, "789476": 190, "792852": 190, "833208": 190, "859869": 190, "862888": 190, "saccade_epoch": 190, "reject_by_annot": [190, 210, 217, 221, 264, 359, 479, 480, 520, 561, 578, 579, 583, 584, 710, 799, 808, 886], "projs_saccad": 190, "compute_proj_epoch": [190, 205, 206, 356, 357, 876, 886], "n_mag": [190, 206, 256, 355, 356, 357, 573, 574], "desc_prefix": [190, 355, 356], "projs_eog": 190, "compute_proj_eog": [190, 205, 206, 579, 584, 861, 876, 886], "1201": [190, 195, 300], "spectra": [190, 221, 239, 244, 261, 264, 265, 266, 267, 416, 479, 480, 534, 535, 693, 708, 710, 713, 716, 724, 725, 779, 786, 808, 841], "doubl": [190, 201, 204, 241, 264, 265, 266, 267, 413, 422, 444, 446, 447, 449, 450, 478, 479, 480, 501, 593, 845, 851, 868, 871, 886], "filter_length": [190, 201, 202, 206, 256, 264, 265, 266, 267, 413, 422, 447, 449, 450, 479, 480, 573, 574, 583, 584, 886], "sound": [190, 194, 195, 204, 244, 418, 735, 738], "uadc001": 190, "sound_data": 190, "min_diff": 190, "\u03bc": [190, 209, 420], "\u03c3": [190, 209, 420, 524], "mlo52": 190, "mrt51": 190, "mlo42": 190, "mlo43": 190, "epochs_standard": 190, "concatenate_epoch": [190, 876, 886], "epochs_devi": 190, "mlp52": 190, "evoked_std": 190, "evoked_dev": 190, "p50": 190, "paint": [190, 264, 265, 266, 267, 479, 480, 788, 808], "mmn": [190, 874], "emphasis": 190, "evoked_differ": 190, "ico4": [190, 645, 861], "8033": 190, "015871": 190, "10585e": 190, "09843": 190, "11765e": 190, "stc_standard": 190, "80289065": 190, "69025561": 190, "89954825": 190, "stc_deviant": 190, "12814543": 190, "29154718": 190, "6203076": 190, "stc_differ": 190, "96162575": 190, "78319301": 190, "94351171": 190, "60_ctf_bst_auditori": [190, 193], "radian": [191, 212, 365, 565], "set_channel_types_eyetrack": [191, 876], "glossari": [191, 845, 869], "ascii": [191, 256, 495, 611, 617, 639, 868, 886], "edf2asc": 191, "read_raw_eyelink": [191, 212, 868, 876, 886], "european": [191, 255, 868], "occular": [191, 212, 498], "binocular": 191, "ypos_right": 191, "fpath": 191, "px_textpage_w": 191, "create_annot": [191, 212, 498], "custom_sc": 191, "legibl": [191, 212], "bad_rec_gap": [191, 212, 498], "trackabl": 191, "href_textpage_w": 191, "diamet": [191, 868], "ellips": 191, "delimint": 191, "2000hz": 191, "timestamp": [191, 217, 258, 271, 272, 275, 278, 279, 280, 479, 480, 496, 611, 886], "70_reading_eyetracking_data": [191, 193], "auto_tutorials_io": 193, "timedelayingridg": [194, 417, 876, 886], "multivariate_norm": 194, "1337": 194, "path_audio": 194, "spectrogram": [194, 231, 241, 841, 874, 886], "n_decim": 194, "explicit": [194, 263, 358, 369, 370, 845, 871, 886], "delays_samp": 194, "delays_sec": 194, "5000": [194, 228], "meshgrid": [194, 205, 231], "swap": [194, 230, 236, 639, 868, 886], "swapax": [194, 230, 236], "gabor": 194, "means_high": 194, "means_low": 194, "2500": [194, 886], "gauss_high": 194, "gauss_low": 194, "autoscal": 194, "artifici": [194, 244, 496, 561, 862], "convolut": [194, 201, 241, 424, 544, 545, 712, 715, 722, 731, 732, 733, 734, 736, 737, 852, 886], "n_second": 194, "x_del": 194, "ix_delai": 194, "ndim": [194, 241], "elif": 194, "rollaxi": 194, "weights_sim": 194, "iep": 194, "noise_amp": 194, "x_plt": 194, "hstack": [194, 205], "y_plt": 194, "autocorrel": [194, 417, 423], "ix_best_alpha": 194, "best_mod": 194, "best_pr": 194, "iax": 194, "time_pr": 194, "3450": 194, "703": [194, 195, 231], "989": [194, 208, 231], "1235": 194, "1453": 194, "2088": 194, "426": [194, 226, 231], "2755": 194, "2972": 194, "3234": 194, "21122": 194, "641": [194, 208], "19997": 194, "17863": 194, "1079": 194, "16653": 194, "1404": 194, "17453": 194, "1759": [194, 209, 244, 593], "18337": 194, "2114": 194, "18966": 194, "19330": 194, "2663": 194, "18457": 194, "2880": 194, "17833": 194, "3143": 194, "17671": 194, "18043": 194, "11747": 194, "12001": 194, "11903": 194, "11859": 194, "954": [194, 204, 231], "11911": 194, "1302": 194, "13759": 194, "1657": 194, "15153": 194, "1909": 194, "15230": 194, "15040": 194, "2437": 194, "15547": 194, "2784": 194, "16255": 194, "3121": 194, "16775": 194, "16655": 194, "11325": 194, "11382": 194, "11640": 194, "745": [194, 195, 231], "11621": 194, "934": [194, 231], "11659": 194, "12427": 194, "1426": 194, "12847": 194, "1771": 194, "14139": 194, "2125": 194, "15211": 194, "2472": 194, "16014": 194, "2822": 194, "16692": 194, "3125": 194, "16935": 194, "3355": 194, "16666": 194, "16162": 194, "11506": 194, "11480": 194, "11584": 194, "779": 194, "12182": 194, "1008": [194, 195, 208], "12646": 194, "14112": 194, "1691": 194, "15453": 194, "16464": 194, "2407": 194, "17267": 194, "2690": 194, "17313": 194, "2917": 194, "16950": 194, "3246": 194, "17339": 194, "17113": 194, "11426": 194, "11372": 194, "11623": [194, 886], "11577": 194, "926": [194, 231], "11545": 194, "1226": [194, 195], "12898": 194, "1483": 194, "13418": 194, "1737": 194, "13781": 194, "13990": 194, "14105": 194, "2480": 194, "14334": 194, "2825": 194, "15117": 194, "3182": 194, "15853": 194, "15638": 194, "11118": 194, "11062": 194, "535": [194, 231], "11117": 194, "719": [194, 195, 231], "11204": 194, "902": 194, "11245": [194, 886], "1215": 194, "12809": 194, "1434": 194, "12946": 194, "1682": 194, "13323": 194, "1886": 194, "13242": 194, "2197": [194, 207], "14008": 194, "2549": 194, "14931": 194, "15630": 194, "3109": 194, "15419": 194, "3323": 194, "15216": 194, "14902": 194, "i_alpha": 194, "ddot": 194, "tikhonov": 194, "trf": [194, 230], "insensit": [194, 264, 265, 440, 487, 494, 502, 564, 709, 886], "whilst": [194, 211], "mse": 194, "scores_lap": 194, "models_lap": 194, "reg_typ": [194, 423], "ix_best_alpha_lap": 194, "16377": 194, "16498": 194, "773": [194, 231], "16050": 194, "1060": [194, 195, 244], "16552": 194, "1417": 194, "17819": 194, "1767": 194, "18576": 194, "19060": 194, "2460": 194, "19466": 194, "2811": 194, "3156": 194, "20014": 194, "19840": 194, "22246": 194, "711": [194, 195, 207, 231, 244, 264, 265, 266, 267, 479, 480, 650], "22212": 194, "22352": 194, "22262": 194, "22340": 194, "21966": 194, "2364": 194, "20901": 194, "2688": 194, "20799": 194, "2978": 194, "20436": 194, "3333": 194, "20652": 194, "20833": 194, "12377": 194, "12257": 194, "12212": 194, "12308": 194, "1004": [194, 871], "12527": 194, "1366": 194, "14424": 194, "15721": 194, "2083": 194, "16725": 194, "2444": 194, "17508": 194, "2806": 194, "18144": 194, "3152": 194, "18543": 194, "18194": 194, "12529": 194, "12476": 194, "12480": 194, "806": [194, 231], "12578": 194, "12620": 194, "14422": 194, "1730": 194, "15800": 194, "2093": 194, "16818": 194, "2454": 194, "17594": 194, "2814": 194, "18201": 194, "3064": 194, "17898": 194, "3383": 194, "18115": 194, "17654": 194, "11887": 194, "12102": 194, "591": [194, 231, 233], "12288": 194, "12341": 194, "12324": 194, "1344": 194, "14189": 194, "1701": 194, "15526": 194, "2064": 194, "16584": 194, "17185": 194, "2617": 194, "16719": 194, "2865": 194, "16575": 194, "17182": 194, "16958": 194, "19980": 194, "612": [194, 231], "19016": 194, "861": [194, 195, 208, 231], "17797": 194, "18901": 194, "19235": 194, "19820": 194, "20117": 194, "2578": 194, "20237": 194, "2779": 194, "19200": 194, "3139": 194, "19608": 194, "19818": 194, "12968": 194, "13100": 194, "12760": 194, "14135": 194, "1257": 194, "15919": 194, "17210": 194, "18064": 194, "2339": 194, "18712": 194, "2594": 194, "18333": 194, "2903": 194, "18450": 194, "3265": 194, "18930": 194, "18696": 194, "rf_lap": 194, "fr\u00e9d\u00e9ric": [194, 244, 417], "theunissen": [194, 244, 417], "nandini": [194, 244, 417], "singh": [194, 244, 417, 886], "ann": [194, 217, 244, 417, 886], "hsu": [194, 244, 417], "vinj": [194, 244, 417], "jack": [194, 244, 417, 886], "gallant": [194, 244, 417], "ben": [194, 244, 417, 886], "willmor": [194, 244, 417], "darragh": [194, 244, 417], "smyth": [194, 244, 417], "cell": [194, 198, 244, 417, 871, 886], "0954": [194, 244, 417], "898x_14_3_309": [194, 244, 417], "heer": [194, 244, 417], "paslei": [194, 244, 417], "jochem": [194, 244, 417], "rieger": [194, 244, 417], "nathan": [194, 244, 417], "crone": [194, 244, 417], "knight": [194, 244, 417], "tune": [194, 206, 244, 417], "ncomms13654": [194, 244, 417], "30_strf": [194, 197], "visit": [195, 244, 857], "insight": [195, 868], "eas": 195, "camel": 195, "n_meg_channel": 195, "standand": 195, "interquartil": 195, "robustscal": [195, 420], "n_frequenc": [195, 297, 707], "popular": [195, 841, 849], "win": [195, 241], "grasp": 195, "competit": 195, "kaggl": 195, "week": [195, 867], "clf_csp": 195, "ssnr": [195, 562], "rewrit": [195, 886], "plot_filt": [195, 201, 202, 411, 418, 802, 876, 886], "boil": [195, 843], "evoked_time_gen": 195, "joint_kwarg": 195, "diag": [195, 686, 871], "1296": [195, 208, 244], "525": 195, "634": [195, 244, 561], "689": [195, 231], "697": [195, 231], "708": [195, 231], "433": [195, 208, 231], "483": [195, 208, 226, 231], "715": [195, 231], "716": [195, 231], "584": [195, 217, 220], "721": [195, 209, 214, 231], "718": [195, 231], "754": [195, 231, 244, 861], "778": [195, 231], "854": [195, 231], "931": [195, 208, 231], "727": [195, 231], "982": [195, 231], "731": [195, 231], "732": 195, "735": [195, 231], "1085": 195, "736": [195, 231], "737": [195, 231], "1163": 195, "739": [195, 231], "1188": 195, "1214": 195, "1239": 195, "1264": 195, "1290": 195, "522": [195, 231], "631": [195, 208, 231], "671": [195, 231], "683": [195, 231], "696": 195, "702": [195, 208], "452": [195, 231, 277], "477": [195, 226, 231], "712": [195, 231], "761": [195, 231], "785": 195, "835": [195, 231], "885": [195, 208, 231], "911": [195, 231], "734": [195, 208, 231, 244, 722, 732, 733, 736], "936": [195, 208, 231], "987": [195, 208, 231], "1010": 195, "1035": 195, "1087": 195, "738": [195, 208, 231], "1240": 195, "1266": 195, "741": [195, 231], "747": [195, 208, 231], "755": [195, 231], "757": [195, 231], "412": [195, 208, 231], "759": [195, 231], "463": [195, 208, 226, 231, 277], "511": [195, 231], "635": [195, 208, 231], "876": [195, 231, 277], "921": [195, 231], "946": [195, 231], "971": [195, 231], "1048": 195, "1074": 195, "1100": 195, "1150": 195, "1176": 195, "1250": 195, "1276": 195, "lanczo": 195, "91709": 195, "26373e": 195, "98776221": 195, "41838256": 195, "06628583": 195, "methodolog": [195, 244], "uncov": [195, 244], "hal": [195, 244], "01848442": [195, 244], "archiv": [195, 244, 386, 845, 851, 853, 865, 874], "ouvert": [195, 244], "lionel": [195, 244], "naccach": [195, 244], "subtend": [195, 244, 868], "e85791": [195, 244], "0085791": [195, 244], "893": [195, 197, 231], "50_decod": [195, 197], "664": [197, 231], "auto_tutorials_machin": 197, "vibrat": 198, "door": [198, 200], "slam": [198, 200], "phone": 198, "geomagnet": 198, "unshield": 198, "headphon": 198, "malfunct": [198, 199, 861], "qr": [198, 256, 573, 583, 586, 886], "sensori": 198, "plan": [198, 199, 202, 207, 435, 843, 849, 867], "genesi": 198, "ssp_projector": 198, "readili": [198, 202, 874], "mag_channel": 198, "remove_dc": [198, 202, 479, 480, 807, 886], "get_xdata": [198, 202], "get_ydata": [198, 202], "searchsort": [198, 202], "dx": [198, 202], "dy": [198, 202], "head_width": [198, 202], "length_includes_head": [198, 202], "find_ecg_ev": [198, 200, 206, 217, 573, 578, 876, 886], "create_ecg_epoch": [198, 200, 204, 206, 573, 583, 876, 886], "ecg_epoch": [198, 204, 578], "6007": [198, 203], "streak": 198, "avg_ecg_epoch": 198, "blocki": 198, "efficaci": 198, "pro": [198, 201, 845], "con": [198, 201], "10_preprocessing_overview": [198, 214], "deepcopi": 199, "usabl": [199, 426, 571, 601, 886], "wildcard": 199, "original_bad": 199, "bad_chan": 199, "paus": [199, 266, 267, 754, 886], "codebas": [199, 845, 860, 869, 874], "good_eeg": 199, "all_eeg": 199, "setdiff1d": 199, "excess": [199, 201, 479, 480, 807, 886], "protocol": [199, 861], "sheet": [199, 861], "offlin": [199, 853], "raw2": [199, 217], "invest": [199, 867], "unrealist": [199, 861], "dramat": 199, "robust": [199, 203, 204, 240, 244, 264, 265, 411, 561, 663, 668, 886], "uninform": 199, "deweight": 199, "fair": [199, 207], "eeg_data": [199, 215], "eeg_data_interp": 199, "interp": [199, 657, 658, 659, 671, 886], "00000022": 199, "bad_color": [199, 479, 480, 807], "grad_data": 199, "grad_data_interp": 199, "00000009": 199, "propag": [199, 202, 258, 846], "15_handling_bad_channel": [199, 214], "fake_keypress": [200, 217], "keyboard": [200, 218, 754, 862, 886], "push": [200, 201, 845, 886], "enter": [200, 206, 217, 218, 844, 845, 848], "bad_cough": 200, "wrapper": [200, 268, 442, 446, 485, 696, 697, 886], "bad_blink": 200, "blink_annot": 200, "eeg_pick": 200, "albeit": 200, "annotate_break": [200, 876, 886], "first_tim": [200, 478, 479, 480, 500, 594, 886], "block_1": 200, "block_2": 200, "block_annot": 200, "break_annot": [200, 564], "min_break_dur": [200, 564], "t_start_after_previ": [200, 564], "t_stop_before_next": [200, 564], "bad_break": [200, 564], "events_subset": 200, "flat_criteria": 200, "stringent": 200, "reject_tmin": [200, 259, 264, 265, 578, 886], "reject_tmax": [200, 259, 264, 265, 578, 886], "disappear": [200, 241, 886], "subsum": 200, "stronger_reject_criteria": 200, "2000e": 200, "20_rejecting_bad_data": [200, 214], "park": [201, 244], "burru": [201, 244], "ifeachor": [201, 244], "jervi": [201, 244], "widmann": [201, 244], "somedai": 201, "conclud": [201, 230], "lightli": [201, 845], "cautious": 201, "hope": [201, 202, 204, 241], "math": [201, 205, 865], "b_0": 201, "b_1": [201, 868], "b_2": 201, "ldot": 201, "b_m": [201, 868], "a_1": 201, "a_2": 201, "a_n": 201, "mb_kz": 201, "na_kz": 201, "b_k": [201, 275, 868], "denomin": [201, 231, 297, 298, 660, 670, 694, 697, 719, 886], "a_k": 201, "autoregress": 201, "broken": [201, 269, 451, 845, 886], "finit": [201, 222, 231, 244, 455, 861, 868, 886], "impuls": [201, 865], "infinit": [201, 868, 886], "qquad": 201, "foral": [201, 868], "steeper": [201, 202], "accumul": [201, 264, 265], "despit": [201, 230], "throughput": 201, "sharp": [201, 226, 886], "steep": 201, "broader": [201, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709], "fundament": 201, "fftfreq": 201, "plot_ideal_filt": [201, 795, 876, 886], "f_p": [201, 868], "flim": [201, 202, 795, 802], "dlim": [201, 795], "f_": 201, "nyq": [201, 447, 450], "third_height": 201, "hypothet": [201, 561], "na\u00efv": 201, "brick": [201, 202], "correspondingli": [201, 264, 265, 868], "tighter": [201, 886], "fortun": [201, 205, 868], "remez": 201, "firl": 201, "ifft": 201, "relax": [201, 236, 886], "shallow": [201, 273], "gradual": 201, "shorten": [201, 218, 241, 778, 849, 868, 886], "benefici": [201, 276], "wherebi": 201, "came": [201, 851], "minimum_phas": 201, "falloff": 201, "h_min": 201, "uncompens": 201, "imaginari": [201, 244, 733, 734, 886], "dur": 201, "morlet_freq": 201, "tlim": 201, "ttick": 201, "blip": 201, "n_onset": 201, "x_orig": 201, "transition_band": 201, "create_filt": [201, 202, 264, 265, 266, 267, 449, 450, 479, 480, 795, 876, 886], "x_v16": 201, "twice": [201, 264, 265, 266, 267, 446, 447, 449, 450, 479, 480, 807], "filter_dur": 201, "x_v14": 201, "x_v13": 201, "h_eff": 201, "10001": [201, 886], "design_mne_c_filt": 201, "x_mne_c": 201, "hpw": 201, "lpw": 201, "x_min": [201, 313], "cost": [201, 271, 272, 275, 278, 279, 280, 417, 423, 561, 693, 694, 696, 697, 754, 812, 817, 868], "plot_sign": 201, "yscale": [201, 706, 886], "yticklabel": 201, "get_yticklabel": 201, "iirfilt": [201, 446], "iirdesign": [201, 446], "butterworth": [201, 264, 265, 266, 267, 413, 422, 446, 447, 449, 450, 479, 480, 573, 574, 886], "worsen": 201, "filtfilt": [201, 264, 265, 266, 267, 422, 446, 447, 449, 450, 479, 480, 807], "btype": [201, 446], "ftype": [201, 271, 272, 275, 278, 279, 280, 446], "butter": [201, 446], "x_shallow": 201, "sosfiltfilt": 201, "sosfilt": 201, "zpk2so": 201, "polynomi": [201, 264, 265, 266, 267, 479, 480, 519, 868, 886], "iir_param": [201, 206, 264, 265, 266, 267, 413, 422, 446, 447, 449, 450, 479, 480, 573, 574, 886], "filt": [201, 447], "x_steep": 201, "chebychev": [201, 446], "cheby1": [201, 446], "rp": [201, 446], "chebyshev": [201, 446, 886], "substanti": [201, 209, 264, 265, 270, 373, 467, 867, 868, 874], "adjust_ax": 201, "errant": 201, "misappl": 201, "deleteri": 201, "schr\u00f6ger": [201, 244], "uncontrol": 201, "acunzo": [201, 244], "misinterpret": 201, "tanner": [201, 244], "semant": 201, "syntact": 201, "n400": 201, "p600": 201, "5\u00b5v": 201, "sic": 201, "poststimulu": 201, "octav": 201, "energi": [201, 255, 865, 886], "understood": [201, 754], "cos_t": 201, "sig": [201, 230, 235, 236], "iir_lp_30": 201, "iir_hp_p1": 201, "iir_lp_2": 201, "iir_hp_2": 201, "x_lp_30": 201, "padlen": [201, 446], "x_hp_p1": 201, "x_lp_2": 201, "x_hp_2": 201, "x_f": 201, "lp": 201, "_2": [201, 868], "hp": [201, 209, 256], "evolv": 201, "maess": [201, 244, 886], "rebut": 201, "old": [201, 215, 217, 239, 244, 258, 261, 264, 265, 266, 267, 275, 278, 312, 320, 340, 403, 479, 480, 504, 526, 597, 619, 640, 641, 652, 754, 819, 823, 845, 853, 886], "baseline_plot": 201, "all_ax": 201, "ri": [201, 226, 244, 735, 738], "iir_hp": 201, "x_hp": 201, "leak": [201, 222, 867, 868], "n_pre": 201, "sig_pr": 201, "filter_data": [201, 264, 265, 266, 267, 422, 446, 447, 450, 479, 480, 876, 886], "adopt": [201, 843, 845], "reciproc": [201, 264, 265, 266, 267, 341, 413, 422, 432, 447, 449, 450, 479, 480, 572, 582, 593], "decent": 201, "blackman": [201, 264, 265, 266, 267, 422, 447, 449, 450, 479, 480], "fir_window": [201, 264, 265, 266, 267, 413, 422, 447, 449, 450, 479, 480], "fir_desgin": 201, "meet": [201, 867], "8197": 201, "outdat": 201, "construct_iir_filt": [201, 264, 265, 266, 267, 413, 422, 447, 449, 450, 479, 480, 573, 574, 876, 886], "transition_bandwidth": 201, "fir_coef": 201, "0545": 201, "0017": 201, "wider": [201, 202], "thoma": [201, 226, 227, 244, 539, 663, 668, 690, 693, 694, 695, 696, 697, 886], "sidnei": [201, 244], "wilei": [201, 244], "471": [201, 208, 231, 244], "82896": [201, 244], "andrea": [201, 244, 297, 886], "erich": [201, 244], "burkhard": [201, 244, 886], "00233": [201, 244], "graham": [201, 244], "mackenzi": [201, 244], "rossum": [201, 244], "darren": [201, 244], "kara": [201, 244], "morgan": [201, 244], "inappropri": [201, 244, 271, 272, 275, 278, 279, 280], "conclus": [201, 228, 244], "1009": [201, 244], "12437": [201, 244], "1469": [201, 244], "8986": [201, 244], "01009": [201, 244], "commentari": [201, 244], "artefact": [201, 211, 244], "norton": [201, 244], "ermf": [201, 244], "519": [201, 214, 231, 241], "25_background_filt": [201, 214], "mathrm": [202, 209, 226, 722, 732, 734, 736, 737], "raw_highpass": 202, "19821": 202, "9911": [202, 886], "filter_param": 202, "add_arrow": 202, "meg_pick": 202, "raw_notch": 202, "3965": 202, "raw_notch_fit": 202, "spectrum_fit": [202, 450, 479, 480, 886], "notabl": [202, 240, 886], "consum": [202, 274, 571, 699, 886], "raw_downsampl": 202, "pitfal": 202, "safe": [202, 215, 244, 264, 265, 320, 377, 378, 379, 382, 383, 384, 386, 391, 394, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 479, 851, 853], "614990234375": [202, 215], "current_sfreq": 202, "desired_sfreq": 202, "obtained_sfreq": 202, "lowpass_freq": 202, "19813025304873463": 202, "80214146205357": 202, "synch": 202, "831": [202, 214, 231], "30_filtering_resampl": [202, 214], "gratton": [203, 244, 560, 608], "croft": [203, 244, 560], "articl": [203, 860], "6607": 203, "bleed": [203, 282, 588], "250m": 203, "model_plain": 203, "picks_artifact": [203, 211, 560, 608], "epochs_clean_plain": 203, "redo": 203, "partli": 203, "variat": [203, 223, 411, 861, 886], "prone": 203, "allevi": [203, 868], "epochs_sub": 203, "model_sub": 203, "epochs_clean_sub": 203, "piec": [203, 217, 264, 265, 479, 480, 868], "ongo": [203, 564, 861, 874], "alik": 203, "model_evok": 203, "epochs_clean_evok": 203, "eog_evoked_clean": 203, "raw_kwarg": 203, "cole": [203, 244, 560, 608], "emanuel": [203, 244, 560, 608, 659, 886], "donchin": [203, 244, 560, 608], "ocular": [203, 204, 206, 244, 560, 608], "90135": [203, 244, 560, 608], "s0987": [203, 244, 560], "7053": [203, 244, 560], "00055": [203, 244, 560], "35_artifact_correction_regress": [203, 214], "corrmap": [204, 876, 886], "guidanc": [204, 206, 867], "blind": [204, 244, 561, 591], "microphon": 204, "unmix": [204, 561, 562, 591, 798, 801, 886], "analogi": 204, "unwant": [204, 206, 210, 318, 886], "ic": [204, 274, 561, 576, 797, 799, 801, 886], "n_pca_compon": [204, 561, 798, 886], "pc": 204, "smallest": [204, 231, 341, 411, 561, 865, 868], "runica": [204, 561], "mixing_matrix_": [204, 561], "unmixing_matrix_": [204, 561], "tesla": [204, 206, 221, 868], "artifact_pick": [204, 206], "harder": [204, 845], "filt_raw": 204, "huge": [204, 692], "9010": 204, "get_explained_variance_ratio": [204, 561, 886], "explained_var_ratio": 204, "9358001342790973": 204, "7717091491114122": 204, "ratio_perc": 204, "trackpad": [204, 266, 267, 470, 770, 789], "15459": 204, "ica000": [204, 886], "ica001": [204, 274, 561, 797, 799, 801], "anywai": [204, 216, 845, 851, 886], "read_ica": [204, 561, 876], "reconst_raw": 204, "tediou": 204, "reset": [204, 261, 264, 265, 266, 267, 273, 365, 411, 418, 479, 480, 560, 561, 706, 708, 709, 710, 754, 785, 786, 790, 793, 797, 806, 809, 814, 822, 871, 886], "eog_indic": 204, "prefront": 204, "ctp": [204, 561, 886], "ecg_indic": 204, "caught": 204, "ica014": 204, "refit": [204, 886], "new_ica": 204, "neck": [204, 308], "trail": [204, 561, 593, 750], "s001r03": 204, "s002r03": 204, "19679": 204, "s003": 204, "s003r03": 204, "lib": [204, 843, 851], "python3": [204, 844, 886], "_fastica": 204, "convergencewarn": 204, "s004": 204, "s004r03": 204, "6250": 204, "6249": 204, "6150": 204, "ica002": 204, "labels_": [204, 561, 576, 800], "get_compon": [204, 561, 886], "subject_index": 204, "component_index": 204, "template_eog_compon": 204, "33638605": 204, "32708878": 204, "32846765": 204, "32807248": 204, "35916344": 204, "37615216": 204, "42464993": 204, "21789139": 204, "22387812": 204, "22237922": 204, "21342143": 204, "2425263": 204, "26757238": 204, "27806995": 204, "15470616": 204, "1693302": 204, "17711037": 204, "17373137": 204, "19651749": 204, "21091786": 204, "22459439": 204, "68783519": 204, "46717407": 204, "64182737": 204, "34165002": 204, "28991817": 204, "76938995": 204, "0057612": 204, "54311043": 204, "54567127": 204, "63806031": 204, "57058636": 204, "52637437": 204, "51788659": 204, "55774431": 204, "56188149": 204, "69340923": 204, "73333856": 204, "2829121": 204, "39253171": 204, "16120286": 204, "25431324": 204, "06352167": 204, "1647002": 204, "11930156": 204, "1811579": 204, "10112171": 204, "12638332": 204, "13623739": 204, "1301851": 204, "14380943": 204, "15329772": 204, "1715539": 204, "16560352": 204, "13293812": 204, "08175318": 204, "10173655": 204, "10764581": 204, "12707317": 204, "09785876": 204, "07433338": 204, "08470678": 204, "07373196": 204, "03379354": 204, "recomput": [204, 207, 231, 452, 561, 591, 645, 886], "ecg_ind": 204, "francoi": [204, 244, 561], "cardoso": [204, 244, 561], "precondit": [204, 209, 244, 561, 594, 886], "hessian": [204, 244, 561], "4040": [204, 244, 561], "4049": [204, 244, 561], "2844203": [204, 244, 561], "iren": [204, 244], "winkler": [204, 244], "deben": [204, 244, 576], "4101": [204, 244], "4105": [204, 244], "milan": [204, 244, 886], "7319296": [204, 244], "dammer": [204, 244, 561, 886], "schiek": [204, 244, 561], "boer": [204, 244, 561], "carmen": [204, 244, 389, 561], "silex": [204, 244, 561], "mikhail": [204, 244, 561], "zvyagintsev": [204, 244, 561], "uw": [204, 244, 561], "pietrzyk": [204, 244, 561], "mathiak": [204, 244, 561], "2353": [204, 244, 561], "926677": [204, 244, 561], "filipa": [204, 244, 576], "campo": [204, 244, 576], "viola": [204, 244, 576, 886], "jeremi": [204, 244, 576], "thorn": [204, 244, 576], "edmond": [204, 244, 576], "till": [204, 244, 576], "schneider": [204, 244, 576], "tom": [204, 244, 576, 886], "eichel": [204, 244, 576], "semi": [204, 244, 576, 886], "868": [204, 231, 244, 576], "877": [204, 231, 244, 576], "clinph": [204, 244, 561, 569, 576, 735, 738], "40_artifact_correction_ica": [204, 214], "setup_3d_ax": 205, "set_zlabel": 205, "set_ylim": [205, 241], "set_zlim": 205, "geometr": [205, 271, 272, 275, 278, 279, 280, 445, 819, 861, 868], "shadow": [205, 646], "cast": [205, 257, 452, 758, 886], "sun": 205, "xy_projection_matrix": 205, "projected_point": 205, "projected_vector": 205, "arrow_coord": 205, "arrow_length_ratio": 205, "symbol": [205, 256, 705, 866, 868, 886], "expans": [205, 209, 264, 265, 266, 267, 432, 479, 480, 519, 571, 572, 582, 593, 868], "unpack": [205, 231, 767, 851], "lucki": 205, "bother": [205, 215], "trigger_effect": 205, "internet": [205, 867], "algebra": [205, 865, 886], "full_matric": 205, "trigger_projection_matrix": 205, "plot_trisurf": 205, "interchang": [205, 297, 841], "ten": [205, 241, 469, 849, 862], "hyperplan": [205, 414, 421], "synonym": [205, 871], "incident": [205, 266, 267, 470, 770, 789], "phrase": 205, "publish": [205, 244, 561, 863], "first_projector": 205, "explained_var": [205, 273, 886], "inact": [205, 209, 264, 265, 266, 267, 479, 480, 867], "compute_proj_raw": [205, 206, 355, 356, 868, 876, 886], "ortho": [205, 561], "write_proj": [205, 631, 876, 886], "forgo": 205, "offecg": 205, "remove_exist": [205, 206, 264, 265, 266, 267, 479, 480, 754], "perman": [205, 843, 861, 886], "mags_ecg": 205, "_projector": 205, "cheaper": 205, "consequenti": 205, "mikko": [205, 206, 244, 868], "uusitalo": [205, 206, 244, 868], "bf02534144": [205, 206, 244, 868], "45_projectors_background": [205, 214], "equip": [206, 868], "system_proj": 206, "empty_room_fil": 206, "empty_room_raw": 206, "empty_room_proj": 206, "distant": [206, 865], "_proj": [206, 886], "no_proj": [206, 573, 574], "picks_trac": [206, 805], "plot_projs_joint": [206, 876, 886], "ecg_l_freq": [206, 256, 573], "ecg_h_freq": [206, 256, 573], "filter_method": [206, 573, 574], "presum": 206, "clutter": 206, "eog_proj": 206, "okai": 206, "eog_projs_bad": 206, "perfectli": [206, 241, 729, 868], "get_titl": [206, 210], "get_ylabel": 206, "set_tick_param": 206, "labelbottom": 206, "50_artifact_correction_ssp": [206, 214], "earlob": 207, "collarbon": 207, "disadvantag": [207, 226], "add_reference_channel": [207, 264, 265, 266, 267, 479, 480, 706, 708, 709, 710, 876, 886], "ref_channel": [207, 264, 265, 266, 267, 281, 479, 480, 650, 706, 708, 709, 710], "raw_new_ref": 207, "raw_avg_ref": 207, "wasn": [207, 886], "infin": [207, 244, 264, 265, 266, 267, 479, 480, 650, 886], "raw_rest": 207, "_raw": [207, 210], "655": [207, 231], "00413199": 207, "0159844": 207, "05174612": 207, "eeg_bipolar": [207, 647], "transvers": [207, 262], "raw_bip_ref": 207, "36038": [207, 215], "61837": 207, "valueerror": [207, 275, 278, 445, 624, 647, 656, 778], "yao": [207, 244, 264, 265, 266, 267, 479, 480, 650, 666], "693": [207, 231, 244, 264, 265, 266, 267, 479, 480, 650], "0967": [207, 244, 264, 265, 266, 267, 479, 480, 650], "3334": [207, 244, 264, 265, 266, 267, 479, 480, 650], "dezhong": [207, 244], "yun": [207, 244], "qin": [207, 244], "shiang": [207, 244], "hu": [207, 244], "dong": [207, 244, 886], "maria": [207, 244], "bringa": [207, 244], "vega": [207, 244], "pedro": [207, 244], "vald": [207, 244], "\u00e9": [207, 244], "sosa": [207, 244], "00707": [207, 244], "55_setting_eeg_refer": [207, 214], "h\u00f6chenberg": [208, 240, 873, 886], "hoechenberg": [208, 240], "test_move_anon_raw": [208, 209], "v6": [208, 209], "v7": [208, 209, 886], "10800": [208, 209, 886], "31199": [208, 209], "20399": 208, "get_chpi_info": [208, 876, 886], "chpi_freq": 208, "chpi_cod": 208, "chpi_amplitud": [208, 341, 342], "compute_chpi_amplitud": [208, 342, 343, 876, 886], "526": [208, 231], "593": [208, 231], "429": [208, 226, 231], "826": [208, 231], "557": [208, 231, 244, 403], "844": [208, 231], "587": 208, "604": [208, 231], "916": [208, 231, 241], "647": [208, 231], "653": [208, 231], "976": [208, 231], "666": 208, "1036": 208, "1056": 208, "1091": 208, "774": 208, "1129": [208, 244, 561, 591], "1148": 208, "803": [208, 231], "1166": 208, "1203": 208, "1236": 208, "1255": 208, "1274": 208, "872": [208, 231], "1293": 208, "908": [208, 231], "1351": 208, "1370": [208, 245], "929": [208, 231], "1402": 208, "932": 208, "1419": [208, 226], "1437": 208, "943": [208, 231], "1455": 208, "1474": 208, "1493": 208, "968": [208, 231], "979": [208, 231], "981": [208, 231], "1547": 208, "983": 208, "1565": [208, 244], "1581": 208, "1597": 208, "986": [208, 231], "1615": 208, "1634": 208, "1673": 208, "1690": 208, "1019": 208, "compute_chpi_loc": [208, 209, 341, 343, 344, 876, 886], "4385": 208, "475": [208, 277], "453": [208, 231, 277], "459": [208, 226], "568": 208, "789": [208, 231], "805": [208, 231], "819": [208, 231], "823": [208, 231], "827": [208, 231], "833": [208, 231], "848": [208, 231], "886": [208, 229, 231], "948": 208, "1040": 208, "1062": 208, "1072": 208, "1224": 208, "1263": 208, "1286": 208, "1301": 208, "1315": 208, "1319": 208, "1325": 208, "1374": 208, "1476": 208, "1514": 208, "1562": 208, "1573": 208, "1580": [208, 264, 265], "1586": 208, "1590": 208, "1594": 208, "1599": 208, "1609": 208, "1638": 208, "1652": 208, "write_head_po": [208, 342, 344, 350, 351, 876], "compute_chpi_snr": [208, 341, 777, 876, 886], "plot_chpi_snr": [208, 876, 886], "snr_dict": [208, 777], "415": [208, 226, 231], "419": [208, 218, 220], "424": 208, "493": [208, 231], "565": [208, 214, 231], "59_head_posit": [208, 214], "find_bad_channels_maxwel": [209, 593, 876, 886], "obliqu": 209, "filter_chpi": [209, 593, 876, 886], "crosstalk": 209, "fine_cal_fil": 209, "sss_cal_mgh": 209, "crosstalk_fil": 209, "ct_sparse_mgh": 209, "raw_check": 209, "auto_noisy_ch": 209, "auto_flat_ch": 209, "auto_scor": 209, "cross_talk": [209, 571, 582, 593], "return_scor": [209, 582], "ei": 209, "ch_subset": 209, "scores_noisi": [209, 582], "limits_noisi": [209, 582], "bin_label": 209, "data_to_plot": 209, "cbar_kw": 209, "nanmin": 209, "rect": 209, "nanmax": [209, 229], "appar": [209, 861], "fashion": [209, 371, 886], "min_count": [209, 582], "qualifi": 209, "int_ord": [209, 432, 572, 582, 593, 886], "ext_ord": [209, 341, 343, 347, 432, 571, 572, 582, 593], "thick": [209, 868], "mathtt": [209, 722, 732, 733, 734, 736, 737], "st": [209, 256], "_durat": 209, "penultim": 209, "st_correl": [209, 582, 593, 601], "st_onli": [209, 582, 593, 886], "doublecheck": 209, "get_active_chpi": [209, 876, 886], "chpi_fif_fil": 209, "head_pos_fil": 209, "headpo": [209, 256, 351], "patent": [209, 593, 601], "legal": [209, 778, 867], "commerci": [209, 593], "124905": [209, 244, 432, 572, 593], "1935742": [209, 244, 572, 593], "60_maxwell_filtering_sss": [209, 214], "deoxyhaemoglobin": [210, 886], "itertool": 210, "compress": [210, 259, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 386, 479, 480, 578, 579, 706, 709, 851, 886], "novemb": [210, 212, 244, 663, 668], "cw": [210, 371, 841], "set_dur": [210, 258, 886], "mid": [210, 226], "source_detector_dist": [210, 876, 886], "photodetect": 210, "scalp_coupling_index": [210, 876, 886], "beer": 210, "lambert": 210, "law": [210, 867, 886], "raw_haemo": 210, "beer_lambert_law": [210, 876, 886], "haemodynam": 210, "predominantli": 210, "raw_haemo_unfilt": 210, "1291": 210, "s4_d4": 210, "s8_d8": 210, "s3_d3": 210, "s7_d6": 210, "s7_d7": 210, "s6_d8": 210, "oxi": [210, 886], "morphologi": 210, "evoked_dict": 210, "color_dict": 210, "aa3377": [210, 722, 732], "styles_dict": 210, "chroma": 210, "drive": [210, 363, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 520], "tidi": 210, "leg_lin": 210, "get_c": 210, "515": [210, 214, 231, 886], "70_fnirs_process": [210, 214], "technologi": [211, 244, 255, 873], "placement": [211, 266, 267, 791, 841, 886], "opm_data_fold": 211, "ucl_opm_auditori": [211, 862, 876], "opm_fil": 211, "002_se": 211, "aef_run": 211, "001_meg": 211, "540000": 211, "6000": [211, 591], "pt": [211, 483, 512], "amp_scal": 211, "1e12": [211, 370], "data_d": 211, "time_d": 211, "set_kwarg": 211, "ambient": 211, "knowldg": 211, "evironment": [211, 575], "g2": 211, "psd_kwarg": 211, "psd_pre": 211, "psd_post_reg": 211, "9901": [211, 886], "relatiship": 211, "hfc": [211, 575, 886], "homgen": 211, "compute_proj_hfc": [211, 876, 886], "psd_post_hfc": 211, "broadband": 211, "remnant": 211, "motiv": [211, 241], "minimis": 211, "interfec": 211, "39601": 211, "seymour": [211, 244, 575, 862, 886], "stephani": [211, 244, 575, 862], "mellor": [211, 244, 575, 862], "neill": [211, 244, 575, 862, 886], "tim": [211, 244, 575, 862], "tiernei": [211, 244, 575, 862], "eleanor": [211, 244, 575, 862], "maguir": [211, 244, 575, 862], "opportun": [211, 244, 862], "118834": [211, 244, 862], "februari": [211, 244, 300, 862], "80_opm_process": [211, 214], "pupillari": 212, "reflex": 212, "dominik": [212, 241, 886], "welk": [212, 241, 886], "huberti": [212, 886], "mcgill": 212, "ca": 212, "proprietari": [212, 843, 862, 867], "asc": [212, 498, 862, 868], "eyelink": [212, 498, 868, 876], "monocular": [212, 862], "eyelink_fnam": 212, "mono_multi": 212, "block_multi": 212, "gaze": [212, 581, 862], "feed": [212, 576, 868], "shortest_ev": [212, 452], "uint_cast": [212, 257, 452], "categor": 212, "5301": 212, "90_eyetracking_data": [212, 214], "auto_tutorials_preprocess": 214, "166800": 215, "read_raw_": [215, 478, 868, 886], "famili": [215, 695], "seriou": [215, 867], "parenthes": [215, 868], "estimate_rank": [215, 886], "n_time_samp": 215, "time_sec": 215, "n_chan": [215, 686, 733, 734, 816], "000167471573526": 215, "megacq": 215, "acqch001": 215, "110113": 215, "acqch002": 215, "110112": 215, "acqch003": 215, "110111": 215, "acqch004": 215, "110122": 215, "frequent": [215, 843, 845, 863, 866, 886], "12012": 215, "18018": 215, "24024": 215, "underlyingli": [215, 863], "n_timepoint": [215, 691], "pose": [215, 845], "undo": [215, 623, 886], "eeg_and_eog": 215, "raw_temp": 215, "channel_nam": [215, 496, 624, 886], "eog_and_frontal_eeg": 215, "frivol": 215, "eeg_059": 215, "eeg_060": 215, "blink_detector": 215, "makeshift": 215, "eeg_001": 215, "raw_select": 215, "1503": 215, "unspecifi": [215, 221, 778], "500770084699155": 215, "5001290587975622": 215, "raw_selection1": 215, "raw_selection2": 215, "raw_selection3": 215, "5041000049184614": 215, "sampling_freq": [215, 221], "start_stop_second": 215, "channel_index": [215, 767], "85742192e": 215, "64355481e": 215, "89306644e": 215, "99872648": 215, "00039144": 215, "0020564": 215, "9933487": 215, "99501366": 215, "99667862": 215, "data_arrai": 215, "times_arrai": 215, "meg_0712": 215, "meg_1022": 215, "two_meg_chan": 215, "y_offset": 215, "safest": [215, 861], "eeg_channel_indic": 215, "planar1": [215, 261, 264, 265, 266, 267, 411, 418, 479, 480, 558, 559, 560, 561, 576, 706, 708, 709, 710, 786, 793, 797, 809, 814, 816], "planar2": [215, 261, 264, 265, 266, 267, 411, 418, 479, 480, 558, 559, 560, 561, 576, 706, 708, 709, 710, 786, 793, 797, 809, 814, 816], "first_channel_data": [215, 868], "eeg_and_eog_data": 215, "two_meg_chans_data": 215, "my_data": 215, "npy": [215, 216], "afford": 215, "scaling_tim": 215, "start_end_sec": 215, "to_hdf": 215, "999750": 215, "952283e": 215, "001415": 215, "069226e": 215, "003080": 215, "080921e": 215, "004745": 215, "010755e": 215, "006410": 215, "10_raw_overview": [215, 220], "write_ev": [216, 452, 620, 876, 886], "lst": [216, 620, 831], "array_equ": 216, "_eve": 216, "my_experi": 216, "told": 216, "events_no_button": 216, "merged_ev": 216, "ultim": [216, 845], "send": [216, 751], "cumbersom": 216, "20_event_arrai": [216, 220], "datetim": [217, 258, 264, 265, 266, 267, 269, 283, 479, 480, 886], "compris": [217, 221, 264, 265, 694, 708, 709, 710, 868, 874], "posix": [217, 258], "my_annot": 217, "aaa": 217, "bbb": 217, "ccc": 217, "microsecond": [217, 258, 264, 265, 266, 267, 269, 479, 480, 871], "time_of_first_sampl": 217, "95597083": 217, "iso": 217, "8601": 217, "new_orig_tim": 217, "strftime": 217, "later_annot": 217, "ddd": 217, "eee": 217, "fff": 217, "720100": 217, "darker": 217, "spinbox": 217, "safeguard": [217, 269, 886], "interactive_annot": 217, "bad_": [217, 886], "ordereddict": 217, "95597082905339": [217, 258], "tzinfo": 217, "timezon": [217, 264, 265, 266, 267, 479, 480], "descr": 217, "70597082905339": 217, "45597082905339": 217, "20597082905339": 217, "WILL": 217, "NOT": 217, "annot_from_fil": 217, "30_annotate_raw": [217, 220], "versatil": 218, "lengthen": 218, "unmark": 218, "newli": [218, 775], "hover": 218, "thumbnail": 218, "plot_psd_topo": [218, 239, 264, 265, 266, 267, 479, 480], "40_visualize_raw": [218, 220], "853": [220, 231], "auto_tutorials_raw": 220, "synthet": [221, 496, 578, 583, 868, 886], "hertz": [221, 223, 269, 707, 711, 712, 713, 714, 715, 716], "eog001": 221, "meg001": 221, "meg002": 221, "meg003": 221, "meg004": 221, "meg005": 221, "meg006": 221, "meg007": 221, "meg008": 221, "seven": [221, 868, 886], "molar": [221, 868], "amper": [221, 868], "simulated_raw": 221, "show_scalebar": [221, 264, 265, 479, 480, 784, 807, 886], "995": [221, 231], "simulated_epoch": 221, "column_stack": 221, "condition_a": 221, "condition_b": 221, "evoked_arrai": 221, "n_per_seg": [221, 241, 264, 265, 266, 267, 479, 480, 708, 710, 725, 886], "psd_ave": 221, "spectrum_from_arrai": 221, "inst_info": 221, "my_welch": 221, "inst_type_str": 221, "data_typ": 221, "10_array_obj": [221, 225], "simulate_stc": [222, 670, 671, 672, 876, 886], "dt": [222, 432, 718], "17545": 222, "hemi_to_ind": 222, "elig": [222, 867], "surf_vertic": 222, "restrict_vert": 222, "intersect1d": 222, "restrict_vertic": [222, 270, 275], "cent_idx": 222, "elsewher": 222, "distances_to_outsid": [222, 270, 886], "compute_area": [222, 270, 886], "stc_gen": 222, "value_fun": [222, 673], "brain_gen": 222, "evoked_gen": 222, "stc_inv": 222, "brain_inv": 222, "45968308": 222, "57021267": 222, "69354621": 222, "evoked_snr": 222, "70_point_spread": [222, 225], "unit_impuls": 223, "coh_signal_gen": 223, "t_rand": 223, "dev": [223, 549, 651], "base_freq": 223, "cumsum": 223, "signal1": 223, "signal2": 223, "am": [223, 262, 265, 267, 373, 480, 871, 886], "nperseg": 223, "coh": [223, 707, 780], "noverlap": 223, "146374": 223, "33830": 223, "stc_signal": 223, "stc_nois": 223, "pretend": [223, 226], "s_rm": 223, "59828": 223, "89697e": 223, "40489756": 223, "65479053": 223, "61269642": 223, "dampen": [223, 646], "consensu": [223, 867], "csd_signal": 223, "filters_approach1": 223, "filters_approach2": 223, "filters_1": 223, "power_approach1": 223, "power_approach2": 223, "plot_approach": 223, "brain1": 223, "42918831e": 223, "04345299e": 223, "40589757e": 223, "brain2": 223, "mia": [223, 244, 297, 298], "liljestr\u00f6m": [223, 244, 297, 298], "susanna": [223, 244, 297, 298, 886], "aro": [223, 244, 297, 298, 886], "245530": [223, 244, 297, 298], "kensuk": [223, 244, 297, 298], "sekihara": [223, 244, 297, 298], "79369": [223, 244, 297, 298], "79370": [223, 244, 297, 298], "80_dic": [223, 225], "418": [225, 226, 231, 886], "auto_tutorials_simul": 225, "ttest_1samp_no_p": [226, 693, 696, 700, 876, 886], "phenomena": 226, "n_subject": [226, 234, 236, 689], "signal_mean": 226, "signal_sd": 226, "noise_sd": 226, "gaussian_sd": 226, "n_src": [226, 272, 277], "h_0": 226, "colon": [226, 256, 386, 871], "h_1": 226, "neq": [226, 868], "geq": 226, "cdot": [226, 666, 868], "1600": 226, "mcc": 226, "plot_t_p": 226, "p_lim": 226, "t_lim": 226, "mgrid": 226, "plot_surfac": [226, 886], "rstride": 226, "cstride": 226, "ztick": 226, "mappabl": 226, "set_tick": 226, "set_ticklabel": 226, "get_xaxi": 226, "set_label_coord": 226, "set_weight": 226, "use_p": 226, "log_": 226, "t_": [226, 868], "exchang": [226, 886], "verid": 226, "n_": [226, 868], "samp": 226, "gymnast": 226, "declar": [226, 867], "p_type_i": 226, "combat": 226, "familywis": 226, "fwer": 226, "benjamini": [226, 690], "hochberg": [226, 690], "strict": [226, 454, 849], "indistinguish": 226, "mathbf": [226, 572], "perm_": 226, "aforement": 226, "rethink": 226, "thought": [226, 687, 841], "refram": 226, "drawback": 226, "touch": [226, 321], "feature_extract": 226, "grid_to_graph": 226, "e402": 226, "mini_adjac": 226, "toarrai": 226, "find_ch_adjac": [226, 227, 228, 231, 329, 686, 693, 694, 696, 697, 775, 876, 886], "combine_adjac": [226, 228, 231, 234, 318, 329, 693, 694, 696, 697, 876, 886], "get_builtin_ch_adjac": [226, 318, 329, 775, 876], "builtin_ch_adj": 226, "adj_nam": 226, "adj_descript": 226, "bti148": 226, "bti248": 226, "bti248grad": 226, "ctf64": 226, "easycap128ch": 226, "easycap32ch": 226, "easycap64ch": 226, "easycapm1": [226, 886], "easycapm11": 226, "m11": 226, "easycapm14": 226, "m14": 226, "easycapm15": 226, "m15": 226, "ecog256": 226, "256channel": 226, "ecog256bipolar": 226, "eeg1010_neighb": 226, "elec1005": 226, "elec1010": 226, "elec1020": 226, "itab153": 226, "itab": 226, "itab28": 226, "language29ch": 226, "mpi": 226, "mpi_59_channel": 226, "neuromag122cmb": 226, "neuromag122": [226, 886], "neuromag306cmb": 226, "neuromag306": 226, "neuromag306mag": [226, 231], "neuromag306planar": [226, 228], "yokogawa160": 226, "yokogawa440": 226, "read_ch_adjac": [226, 318, 322, 686, 775, 876, 886], "n_space": 226, "t_thresh": [226, 228], "t_clust": 226, "viewabl": 226, "p_clust": 226, "cl": 226, "195527": 226, "120434": 226, "1416": 226, "1473": 226, "1420": 226, "1399": 226, "1387": 226, "1407": 226, "481": [226, 231], "1424": 226, "stat_fun_hat": 226, "t_hat": 226, "p_hat": 226, "043603": 226, "127369": 226, "3289": 226, "3863": 226, "3952": 226, "3926": 226, "riemann": 226, "threshold_tfc": 226, "t_tfce": 226, "p_tfce": 226, "h_power": [226, 227], "e_pow": [226, 227], "436": [226, 244], "439": [226, 231, 446], "451": [226, 231, 277], "469": 226, "476": [226, 231, 244, 411], "479": [226, 231], "494": 226, "509": [226, 227, 231], "t_tfce_hat": 226, "p_tfce_hat": 226, "449": [226, 231, 277], "489": [226, 241], "jag": 226, "peaki": 226, "broad": [226, 241], "tighten": 226, "broaden": 226, "exhaust": [226, 297], "unbalanc": 226, "statsmodel": [226, 874, 883], "anova_lm": 226, "wrap": [226, 268, 534, 886], "q": [226, 256, 666, 693, 694, 696, 697, 868], "f_onewai": [226, 687, 689, 694, 697, 876], "f_mway_rm": [226, 230, 236, 689, 876, 886], "f_threshold_mway_rm": [226, 230, 236, 687, 876], "unpair": 226, "spatio_temporal_cluster_test": [226, 227, 231, 235, 236, 876, 886], "spatio_temporal_cluster_1samp_test": [226, 234, 693, 876, 886], "gerard": [226, 244, 699, 700], "ridgwai": [226, 244, 699, 700], "flandin": [226, 244, 699, 700], "karl": [226, 244, 255, 699, 700, 873], "friston": [226, 244, 699, 700], "Will": [226, 244, 256, 268, 311, 447, 478, 561, 699, 700, 705, 718, 725, 750, 827, 850], "penni": [226, 244, 699, 700], "haircut": [226, 244, 699, 700], "nichol": [226, 227, 244, 690, 693, 694, 695, 696, 697], "10_background_stat": [226, 233], "confirmatori": 227, "tfce": [227, 693, 694, 696, 697, 874, 886], "ttest_ind": [227, 700], "unsaf": [227, 709], "median_valu": 227, "long_word": 227, "short_word": 227, "time_window": [227, 706], "ntarget": 227, "short_df": 227, "format_dict": 227, "096": 227, "453939": 227, "222424": 227, "518939": 227, "371515": 227, "064": [227, 244, 346, 543, 666], "811667": 227, "250152": 227, "039697": 227, "318030": 227, "163030": 227, "425152": 227, "682": 227, "absent": [227, 365, 871, 886], "amongst": [227, 241], "temor": 227, "cluster_pv": [227, 693, 694, 696, 697], "significant_point": 227, "delaunai": [227, 228, 318, 886], "917298": 227, "1856": 227, "20_erp_stat": [227, 233], "whom": [228, 231, 845], "downstream": [228, 229], "nonparametr": [228, 229, 231, 244, 693, 694, 695, 696, 697], "spectrotempor": [228, 229, 733, 734, 736, 737], "tfr_epoch": 228, "logratio": [228, 240, 287, 544, 545, 706, 709, 814], "epochs_pow": [228, 230, 231], "lattic": [228, 231, 686, 693, 694, 696, 697], "sensor_adjac": 228, "use_idx": 228, "n_ch": 228, "unrol": 228, "degrees_of_freedom": 228, "455144": 228, "265125": 228, "caveat": [228, 231, 244, 561, 868], "anywher": [228, 886], "t_obs_plot": 228, "f_idx": 228, "t_idx": [228, 479, 480], "nanargmax": 228, "40_cluster_1samp_time_freq": [228, 233], "epochs_condition_1": 229, "epochs_condition_2": 229, "comptuat": 229, "tfr_epochs_1": 229, "tfr_epochs_2": 229, "epochs_power_1": 229, "epochs_power_2": 229, "f_ob": [229, 230, 231, 235, 236, 694, 697], "566824": 229, "884": [229, 231, 244], "evoked_power_1": 229, "evoked_power_2": 229, "evoked_power_contrast": 229, "f_obs_plot": [229, 230, 231], "max_f": 229, "evoked_condition_1": 229, "evoked_condition_2": 229, "evoked_contrast": 229, "50_cluster_between_time_freq": [229, 233], "interplai": 230, "perceptu": 230, "56aud_r": 230, "60vis_l": 230, "64vis_r": 230, "forgiv": 230, "zero_mean": [230, 545, 722, 732, 733, 734, 736], "this_tfr": [230, 231], "this_pow": 230, "n_condit": [230, 231, 236, 694, 697], "n_replic": 230, "factor_level": [230, 236, 687, 689], "formula": [230, 236, 297, 298, 354, 662, 666, 719, 720, 868, 886], "a1b1": [230, 687], "a1b2": [230, 687], "a2b1": [230, 687], "b2b2": 230, "fval": 230, "effect_label": 230, "autumn": [230, 231], "overrid": [230, 274, 370, 372, 479, 480, 496, 642, 643, 644, 645, 752, 778, 849, 851, 867], "necessit": [230, 236, 886], "return_pv": [230, 236, 687], "pthresh": [230, 236], "f_thresh": [230, 231, 236], "419588": 230, "good_clust": [230, 234], "f_imag": [230, 231], "f_obs_plot2": 230, "638": [230, 231, 233], "70_cluster_rmanova_time_freq": [230, 233], "differenti": [231, 244, 264, 265, 266, 267, 435, 479, 480, 735, 738, 874], "plot_ch_adjac": [231, 318, 329, 876, 886], "_csr": 231, "csr_matrix": [231, 276, 277, 318, 329, 630], "bind": [231, 236], "stackexchang": 231, "73993": 231, "alpha_cluster_form": 231, "n_observ": [231, 691, 693, 694, 696, 697, 778], "dfn": [231, 694, 697], "dfd": [231, 694, 697], "cluster_stat": 231, "004107": 231, "094418": 231, "423": 231, "425": 231, "461": 231, "502": [231, 526, 871], "517": 231, "534": 231, "575": 231, "585": [231, 244], "596": 231, "598": 231, "614": 231, "616": 231, "623": 231, "633": 231, "636": 231, "644": 231, "667": 231, "765": 231, "767": [231, 244, 861], "776": 231, "781": 231, "809": 231, "811": 231, "814": 231, "822": 231, "824": 231, "832": 231, "834": 231, "839": [231, 868], "842": 231, "847": 231, "865": 231, "874": 231, "879": 231, "887": 231, "899": [231, 241], "907": 231, "909": 231, "912": 231, "914": 231, "917": 231, "922": 231, "925": 231, "933": 231, "941": 231, "944": 231, "952": 231, "963": 231, "984": 231, "p_accept": 231, "good_cluster_ind": [231, 235, 236], "crimson": [231, 754], "steelblu": [231, 479, 480, 807], "i_clu": 231, "clu_idx": 231, "time_ind": 231, "space_ind": 231, "ch_ind": 231, "f_map": 231, "sig_tim": 231, "ax_topo": 231, "f_evok": 231, "ax_colorbar": 231, "ax_sign": 231, "ymin": [231, 236], "get_ylim": 231, "fill_betweenx": [231, 236], "tfr_adjac": 231, "tfr_threshold": 231, "333033": 231, "505": 231, "521": [231, 244, 354], "544": 231, "548": 231, "556": 231, "595": [231, 244], "607": 231, "617": 231, "622": [231, 244, 354], "637": 231, "643": 231, "663": 231, "668": 231, "673": 231, "677": 231, "695": 231, "698": 231, "742": 231, "753": 231, "763": 231, "784": 231, "804": 231, "808": 231, "812": 231, "813": 231, "818": 231, "829": 231, "836": 231, "845": 231, "858": 231, "871": 231, "878": [231, 244, 690], "889": [231, 277], "892": 231, "903": 231, "915": 231, "937": 231, "964": 231, "969": 231, "972": 231, "977": 231, "difficulti": [231, 404, 843, 865], "freq_ind": 231, "ax_spec": 231, "f_obs_plot_sig": 231, "ax_colorbar2": 231, "mari": [231, 244, 693, 694, 696, 697, 886], "dejan": [231, 244, 693, 694, 696, 697], "draschkow": [231, 244, 693, 694, 696, 697], "e13335": [231, 244, 693, 694, 696, 697], "13335": [231, 244, 693, 694, 696, 697], "75_cluster_ftest_spatiotempor": [231, 233], "auto_tutorials_stat": [233, 238], "equalize_epoch_count": [234, 876], "summarize_clusters_stc": [234, 235, 236, 876, 886], "1000e": [234, 236], "sample_vertic": [234, 236], "evoked1": [234, 872], "evoked2": [234, 872], "n_vertices_sampl": [234, 236], "morph_data": [234, 886], "fsave_vertic": [234, 235, 236], "morph_mat": [234, 236, 276], "n_vertices_fsav": [234, 235, 236], "govern": 234, "member": [234, 691, 867, 871, 874], "max_step": [234, 693, 694, 696, 697], "spatial_src_adjac": [234, 235, 236, 876, 886], "p_threshold": [234, 235], "t_threshold": 234, "clu": [234, 235, 236, 698], "563537": 234, "791547": 234, "permutationt": 234, "good_clusters_idx": 234, "stc_all_cluster_vi": [234, 235, 236], "20_cluster_1samp_spatiotempor": [234, 238], "stc_fname": 235, "n_subjects1": 235, "n_subjects2": 235, "x1": [235, 691, 694], "x2": [235, 691, 694], "subjects_k": 235, "f_threshold": [235, 689], "632172": 235, "30_cluster_ftest_spatiotempor": [235, 238], "engemannn": 236, "r_aud": 236, "r_vi": 236, "tini": [236, 298], "1782": 236, "851281": 236, "brighter": 236, "inds_t": 236, "inds_v": 236, "cluster_ind": 236, "eve_id": 236, "mean_tc": 236, "std_tc": 236, "60_cluster_rmanova_spatiotempor": [236, 238], "v\u00b2": 239, "\u00b2": [239, 240], "t\u00b2": [239, 241], "overridden": [239, 477, 886], "esp": 239, "method_kw": [239, 264, 265, 266, 267, 479, 480, 708, 710], "psd_array_multitap": [239, 264, 265, 266, 267, 416, 479, 480, 708, 710, 734, 737, 876, 886], "irrelev": [239, 256, 845, 868], "epo_spectrum": 239, "npsd": 239, "__getitem__": [239, 257, 258, 259, 261, 262, 264, 265, 269, 273, 277, 288, 302, 479, 480, 527, 707, 708, 709, 710, 741, 886], "evk_spectrum": 239, "61863537e": 239, "13487136e": 239, "88010499e": 239, "89065956e": 239, "24056397e": 239, "91160668e": 239, "56762015e": 239, "65842303e": 239, "39426775e": 239, "38758770e": 239, "03771739e": 239, "98519756e": 239, "agg_fun": [239, 264, 265, 266, 267, 479, 480, 708, 710, 786], "psd_welch": [239, 886], "psd_multitap": [239, 886], "area_mod": [239, 264, 265, 266, 267, 479, 480, 808], "kept": [239, 259, 264, 270, 324, 371, 435, 474, 476, 477, 498, 520, 528, 529, 530, 531, 532, 534, 535, 545, 561, 562, 572, 616, 798, 845, 886], "periodogram": [239, 244, 264, 265, 266, 267, 479, 480, 708, 710, 725], "electroacoust": [239, 244, 264, 265, 266, 267, 479, 480, 708, 710, 725], "tau": [239, 244, 264, 265, 266, 267, 479, 480, 708, 710, 725], "1161901": [239, 244, 264, 265, 266, 267, 479, 480, 708, 710, 725], "slepian": [239, 244, 264, 265, 266, 267, 479, 480, 708, 710, 718, 724], "bell": [239, 244, 264, 265, 266, 267, 479, 480, 561, 591, 708, 710, 718, 724], "1430": [239, 244, 264, 265, 266, 267, 479, 480, 708, 710, 718, 724], "1978": [239, 244, 264, 265, 266, 267, 479, 480, 708, 710, 718, 724], "1538": [239, 244, 264, 265, 266, 267, 479, 480, 708, 710, 718, 724], "7305": [239, 244, 264, 265, 266, 267, 479, 480, 708, 710, 718, 724], "tb02104": [239, 244, 264, 265, 266, 267, 479, 480, 708, 710, 718, 724], "10_spectrum_class": [239, 243], "72074": 240, "mean_spectrum": 240, "psds_mean": [240, 241], "psds_std": [240, 241], "arithmet": [240, 561, 725, 886], "psds_welch_mean": 240, "freqs_mean": 240, "psds_welch_median": 240, "freqs_median": 240, "epo_idx": 240, "unaggreg": [240, 725, 886], "n_segment": [240, 725], "welch_unagg": 240, "topomap_kw": 240, "fmin_fmax": 240, "timefreq": [240, 706], "20_sensors_time_frequ": [240, 243], "fpv": 241, "steadi": 241, "assr": 241, "norcia": 241, "picton": 241, "wet": [241, 862], "evgenii": [241, 886], "kalenkovich": [241, 886], "ttest_rel": 241, "bids_fnam": 241, "12hz": 241, "15hz": 241, "decai": 241, "stabil": [241, 446, 561, 572, 886], "bach": 241, "meigen": 241, "boxcar": [241, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 451, 479, 480, 865, 886], "n_overlap": [241, 264, 265, 266, 267, 479, 480, 708, 710, 725, 808], "snr_spectrum": 241, "noise_n_neighbor_freq": 241, "noise_skip_neighbor_freq": 241, "n_trial": [241, 427], "n_frequency_bin": 241, "increment": [241, 476, 561], "ON": 241, "averaging_kernel": 241, "mean_nois": 241, "apply_along_axi": 241, "psd_": 241, "edge_width": 241, "pad_width": 241, "constant_valu": 241, "drastic": [241, 276, 886], "reappear": 241, "grand": [241, 468, 868, 886], "floor": [241, 424, 591, 734, 737], "ceil": [241, 729], "psds_plot": 241, "snr_mean": 241, "snr_std": 241, "stim_freq": 241, "i_bin_12hz": 241, "1st": [241, 647], "i_bin_24hz": 241, "i_bin_36hz": 241, "i_bin_15hz": 241, "i_bin_30hz": 241, "i_bin_45hz": 241, "i_trial_12hz": 241, "i_trial_15hz": 241, "roi_vi": 241, "o9": 241, "o10": 241, "picks_roi_vi": 241, "hotel": 241, "snrs_target": 241, "69365541718619": 241, "wait": [241, 259, 264, 845, 853, 886], "snrs_12hz": 241, "snrs_12hz_chaverag": 241, "tstat_roi_vs_scalp": 241, "985902": 241, "693655": 241, "000067": 241, "Such": [241, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 297, 298, 479, 480, 646, 706, 709, 841, 867, 868], "somewher": [241, 479, 480, 807, 850, 869], "unintend": 241, "preregist": 241, "peopl": [241, 845, 856, 867, 886], "detour": 241, "snrs_roi": 241, "freq_plot": 241, "color_plot": 241, "darkblu": [241, 479, 480, 807], "darkgreen": 241, "mediumblu": 241, "seagreen": 241, "xpos_plot": 241, "stim_12hz_tmp": 241, "stim_15hz_tmp": 241, "snr_tmp": 241, "yerr": 241, "stim_12hz_snrs_": 241, "ihz": 241, "stim_15hz_snrs_": 241, "strike": 241, "tstat_12hz_trial_stim": 241, "stim_12hz_snrs_12hz": 241, "stim_12hz_snrs_15hz": 241, "tstat_12hz_trial_1st_harmon": 241, "stim_12hz_snrs_24hz": 241, "stim_12hz_snrs_30hz": 241, "tstat_12hz_trial_2nd_harmon": 241, "stim_12hz_snrs_36hz": 241, "stim_12hz_snrs_45hz": 241, "tstat_15hz_trial_stim": 241, "stim_15hz_snrs_12hz": 241, "stim_15hz_snrs_15hz": 241, "tstat_15hz_trial_1st_harmon": 241, "stim_15hz_snrs_24hz": 241, "stim_15hz_snrs_30hz": 241, "tstat_15hz_trial_2nd_harmon": 241, "stim_15hz_snrs_36hz": 241, "stim_15hz_snrs_45hz": 241, "000037": 241, "000014": 241, "000297": 241, "000024": 241, "006525": 241, "tour": [241, 886], "overli": 241, "stim_bandwidth": 241, "window_length": 241, "window_snr": 241, "i_win": 241, "this_spectrum": 241, "windowed_psd": 241, "windowed_freq": 241, "stimfreq": 241, "bin_width": 241, "skip_neighbor_freq": 241, "n_neighbor_freq": 241, "windowed_snr": 241, "boxplot": 241, "stochast": [241, 244, 561], "window_start": 241, "greyscal": 241, "optimist": 241, "serious": [241, 868], "50_ssvep": [241, 243], "auto_tutorials_tim": 243, "alphabet": [244, 845, 886], "fiorenzo": [244, 561], "artoni": [244, 561], "magazin": [244, 411], "962275": 244, "stephan": [244, 411], "bonnet": [244, 411], "marco": [244, 411], "congedo": [244, 411], "jutten": [244, 411], "riemannian": [244, 411], "multimedia": [244, 411], "mmsp": [244, 411], "5662067": [244, 411], "barber": [244, 354], "51814": [244, 354], "www": [244, 354, 450, 487, 576, 845, 865], "staff": [244, 354, 851], "brml": [244, 354], "becker": [244, 666], "albera": [244, 666], "comon": [244, 666], "gribonv": [244, 666], "fleureau": [244, 666], "guillotel": [244, 666], "merlet": [244, 666], "sissi": [244, 666], "august": [244, 666], "anthoni": [244, 561], "terrenc": [244, 561], "sejnowski": [244, 561, 591], "deconvolut": [244, 561, 591], "1995": [244, 403, 561, 591, 868], "neco": [244, 561], "anna": [244, 659, 886], "rita": [244, 659], "bentivoglio": [244, 659], "bressman": [244, 659], "cassetta": [244, 659], "donatella": [244, 659], "carretta": [244, 659], "pietro": [244, 659], "tonali": [244, 659], "alberto": [244, 659], "albanes": [244, 659], "disord": [244, 659], "1028": [244, 659], "870120629": [244, 659], "berg": [244, 868], "scherg": [244, 868], "1994": [244, 528, 868], "90113": [244, 868], "quentin": [244, 886], "anderson": [244, 886], "arindam": 244, "banerje": 244, "kenji": 244, "fukumizu": 244, "24th": 244, "1288": 244, "pmlr": 244, "apr": 244, "mlr": 244, "v130": 244, "bertrand21a": 244, "ryota": [244, 411], "tomioka": [244, 411], "lemm": [244, 411], "motoaki": [244, 411], "kawanab": [244, 411], "msp": [244, 411], "4408441": [244, 411], "fred": 244, "bookstein": 244, "thin": 244, "plate": 244, "24792": 244, "oleg": 244, "burdakov": 244, "bori": 244, "merkulov": 244, "lith": 244, "\u00f6": 244, "ping": 244, "yilun": [244, 354], "chen": [244, 354], "ami": [244, 354], "wiesel": [244, 354], "yonina": [244, 354], "eldar": [244, 354], "alfr": [244, 354, 861], "hero": [244, 354], "shrinkag": [244, 354, 411, 418, 419, 562, 886], "mmse": [244, 354], "5016": [244, 354], "5029": [244, 354], "2053029": [244, 354], "contributor": [244, 849, 852, 864, 865, 867, 874, 886], "readthedoc": 244, "octob": [244, 666], "ronald": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709], "crochier": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709], "lawrenc": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 569, 706, 709], "rabin": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709], "multir": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709], "englewood": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709], "cliff": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709], "nj": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709], "605162": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709], "adrian": [244, 270, 275], "guggisberg": 244, "erik": [244, 886], "edward": 244, "findlai": 244, "ryan": [244, 575, 886], "canolti": 244, "mitchel": 244, "berger": 244, "barbaro": 244, "heidi": 244, "kirsch": 244, "1686": 244, "1700": 244, "sereno": [244, 868], "1006": [244, 690, 868], "nimg": [244, 690, 868], "0395": [244, 868], "arthur": [244, 528, 735, 738], "liu": [244, 528], "buckner": [244, 528], "lewin": [244, 528], "s0896": [244, 528], "6273": [244, 528], "81138": [244, 528], "jocn": 244, "darva": 244, "ermer": 244, "20171": 244, "salat": [244, 868], "andr\u00e9": [244, 868], "kouw": [244, 868], "niko": [244, 868], "makri": [244, 868], "florent": [244, 868], "s\u00e9gonn": [244, 868], "quinn": [244, 868, 886], "reson": [244, 868], "s69": [244, 868], "s84": [244, 868], "0396": 244, "tootel": 244, "intersubject": 244, "sici": 244, "1097": 244, "0193": 244, "hbm10": 244, "genoves": [244, 690], "nicol": [244, 690, 886], "lazar": [244, 411, 690], "1037": [244, 690], "supplementari": [244, 388], "neuroanatom": [244, 388], "esm": [244, 388], "art": [244, 388, 874], "3a10": [244, 388], "2fnature18933": [244, 388], "mediaobject": [244, 388], "41586_2016_bfnature18933_moesm330_esm": [244, 388], "s\u00f3nia": [244, 861], "gon\u00e7alv": [244, 861], "casper": [244, 861], "munck": [244, 861], "jeroen": [244, 861, 886], "verbunt": [244, 861], "fetsj": [244, 861], "bijma": [244, 861], "rob": [244, 861, 886], "heethaar": [244, 861], "vivo": [244, 861], "resist": [244, 861], "eit": [244, 861], "812164": [244, 861], "teon": [244, 860, 886], "lauri": [244, 860], "parkkonen": [244, 860], "\u00e4": [244, 419, 860], "inen": [244, 860], "fnin": [244, 860], "00267": [244, 860], "greischar": [244, 569], "cori": [244, 569], "burghi": [244, 569], "carien": [244, 569], "reekum": [244, 569], "daren": [244, 569], "jackson": [244, 569], "diego": [244, 569], "pizzag": [244, 569], "corrina": [244, 569], "mueller": [244, 569], "davidson": [244, 569], "electroencephalograph": [244, 569], "neuroinformat": 244, "fninf": 244, "00062": 244, "hne": [244, 419], "597": [244, 419], "073": [244, 419], "gari": [244, 688], "heiman": [244, 688], "houghton": [244, 688], "mifflin": [244, 688], "boston": [244, 255, 688, 873], "17028": [244, 688], "joerg": [244, 297], "hipp": [244, 297], "hawellek": 244, "maurizio": 244, "corbetta": 244, "marku": [244, 297], "siegel": [244, 297], "engel": [244, 297], "spontan": [244, 861], "3101": 244, "percept": [244, 297, 841, 862, 886], "aapo": [244, 561], "hyv\u00e4rinen": [244, 561], "761722": [244, 561], "toga": 244, "mazziotta": 244, "academ": 244, "san": 244, "b978": 244, "012693019": 244, "50012": 244, "bf02512476": [244, 528], "tkk": 244, "a559": 244, "helsinki": 244, "16463": 244, "kevin": [244, 735, 738], "jone": [244, 735, 738], "bernic": [244, 735, 738], "porjesz": [244, 735, 738], "chorlian": [244, 735, 738], "madhavi": [244, 735, 738], "rangaswami": [244, 735, 738], "chella": [244, 735, 738], "kamarajan": [244, 735, 738], "ajayan": [244, 735, 738], "padmanabhapillai": [244, 735, 738], "stimu": [244, 735, 738], "henri": [244, 735, 738], "begleit": [244, 735, 738], "deficit": [244, 735, 738], "diagnos": [244, 735, 738, 886], "alcohol": [244, 735, 738], "2128": [244, 735, 738], "jorg": 244, "jovicich": 244, "silvest": 244, "czanner": 244, "elizabeth": 244, "halei": 244, "andr": [244, 886], "kennedi": 244, "franz": 244, "schmitt": 244, "gregori": 244, "brown": [244, 543, 666], "macfal": 244, "antti": [244, 886], "ahonen": 244, "lain": 244, "claudia": [244, 868], "tesch": [244, 868], "3320": 244, "281163": 244, "zhou": [244, 411], "1990": [244, 411], "bf01129656": [244, 411], "philipp": 244, "lachaux": 244, "eugenio": 244, "rodriguez": [244, 886], "martineri": 244, "francisco": 244, "varela": 244, "synchroni": 244, "hbm4": 244, "attent": [244, 270, 275, 871], "ledoit": [244, 354], "wolf": [244, 354], "s0047": [244, 354], "259x": [244, 354], "00096": [244, 354], "te": [244, 561, 886], "girolami": [244, 561, 591], "subgaussian": [244, 561, 591, 886], "supergaussian": [244, 561, 591], "089976699300016719": [244, 561], "seok": [244, 861], "lew": [244, 861], "carsten": [244, 861], "wolter": [244, 861], "anwand": [244, 861], "macleod": [244, 861], "compart": [244, 256, 524, 841, 861, 871], "2862": [244, 861], "2878": [244, 861], "20714": [244, 861], "witzel": [244, 539, 663, 668], "8945": 244, "8950": 244, "10024": [244, 886], "lowri": [244, 688], "vassarstat": [244, 688], "bernard": [244, 666], "giusiano": [244, 666], "roehri": [244, 666], "b\u00e9nar": [244, 666], "kathryn": [244, 388], "mill": [244, 388], "6084": [244, 388], "m9": [244, 388], "figshar": [244, 388], "3498446": [244, 388], "molin": [244, 543, 666], "quantif": [244, 432, 543, 666, 852], "1069": [244, 543, 666], "paul": [244, 868, 886], "748978": [244, 868], "ali": [244, 735, 738], "moukadem": [244, 735, 738], "zi": [244, 735, 738], "bouguila": [244, 735, 738], "djaffar": [244, 735, 738], "ould": [244, 735, 738], "abdeslam": [244, 735, 738], "alain": [244, 735, 738], "dieterlen": [244, 735, 738], "lisbon": [244, 735, 738], "6952743": [244, 735, 738], "mourtazaev": [244, 403], "1093": [244, 403], "suresh": [244, 566], "muthukumaraswami": [244, 566], "00138": [244, 566], "ndiay": 244, "fercoq": 244, "salmon": 244, "sugiyama": 244, "luxburg": 244, "guyon": 244, "garnett": 244, "curran": 244, "inc": [244, 845, 850], "nip": [244, 474], "cc": [244, 474, 867], "6405": 244, "holm": [244, 575, 695], "primer": [244, 695], "ou": 244, "bai": 244, "wheaton": 244, "sherri": 244, "vorbach": 244, "hallett": 244, "2292": 244, "2307": 244, "zieh": 244, "aloi": 244, "schl\u00f6gl": 244, "kr\u00e4mer": 244, "brismar": 244, "robustli": 244, "physrevlett": 244, "234101": 244, "hilla": [244, 393], "paananen": [244, 393], "jyrki": [244, 393], "m\u00e4kel\u00e4": [244, 393], "5281": [244, 393, 860], "zenodo": [244, 393, 860], "889234": [244, 393], "reilli": [244, 389, 862, 886], "mayada": [244, 389, 862], "elsabbagh": [244, 389, 862], "infant": [244, 389, 886], "117682": [244, 389, 862], "thom": [244, 861], "oostendorp": [244, 861], "delbek": [244, 861], "dick": [244, 861], "stegeman": [244, 861], "vitro": [244, 861], "1487": [244, 861], "880100": [244, 861], "oppenheim": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709], "schafer": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709], "buck": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709], "prentic": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709], "hall": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709], "saddl": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709], "river": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709], "754920": [244, 262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709], "roberto": [244, 528, 868], "pascual": [244, 528, 868], "marqui": [244, 528, 868], "martha": [244, 528, 868], "koukkou": [244, 528, 868], "kieko": [244, 528, 868], "kochi": [244, 528, 868], "bernd": [244, 528, 868], "saletu": [244, 528, 868], "hideaki": [244, 528, 868], "tanaka": [244, 528, 868], "koichi": [244, 528, 868], "hirata": [244, 528, 868], "lesli": [244, 528, 868], "prichep": [244, 528, 868], "rolando": [244, 528, 868], "biscai": [244, 528, 868], "lirio": [244, 528, 868], "toshihiko": [244, 528, 868], "kinoshita": [244, 528, 868], "tomographi": [244, 528, 841, 868, 886], "royal": [244, 354, 528, 868], "1952": [244, 528, 868], "3768": [244, 528, 868], "3784": [244, 528, 868], "rsta": [244, 528, 868], "0081": [244, 528, 868], "donald": 244, "perciv": 244, "walden": 244, "35532": 244, "cbo9780511622762": 244, "dinh": [244, 886], "tuan": 244, "pham": 244, "hermitian": 244, "1136": 244, "1152": 244, "s089547980035689x": 244, "luca": [244, 597], "pollonini": [244, 597], "cristen": [244, 597], "homer": [244, 597], "abaya": [244, 597], "heather": [244, 597], "bortfeld": [244, 597], "beauchamp": [244, 271, 275, 279, 597, 812], "oghalai": [244, 597], "cochlear": [244, 597], "implant": [244, 597], "ernesto": 244, "pereda": 244, "ricardo": 244, "bru": 244, "\u00f1": 244, "maest": 244, "\u00fa": 244, "dog": 244, "056011": 244, "2552": 244, "aacfe4": 244, "sanchez": [244, 389], "meek": [244, 389], "wanz": [244, 389], "xie": [244, 389], "1254": [244, 389], "1259": [244, 389], "hat": [244, 536, 572, 666, 699, 700, 868, 886], "brittani": 244, "stedelin": 244, "alessandra": 244, "mantovani": 244, "ahm": 244, "raslan": 244, "swann": 244, "3897": 244, "21105": 244, "joss": 244, "03897": 244, "noam": [244, 577], "pele": [244, 577], "00694": [244, 577], "abraham": [244, 264, 265, 266, 267, 479, 480], "savitzki": [244, 264, 265, 266, 267, 479, 480], "marcel": [244, 264, 265, 266, 267, 479, 480], "golai": [244, 264, 265, 266, 267, 479, 480, 886], "chemistri": [244, 264, 265, 266, 267, 479, 480], "1627": [244, 264, 265, 266, 267, 479, 480], "1639": [244, 264, 265, 266, 267, 479, 480], "1964": [244, 264, 265, 266, 267, 479, 480], "ac60214a047": [244, 264, 265, 266, 267, 479, 480], "nathaniel": [244, 692], "marta": [244, 692], "12320": [244, 692], "corn": 244, "stam": 244, "daffertshof": 244, "diminish": 244, "1178": 244, "1193": 244, "20346": 244, "luigi": [244, 735, 738], "rodino": [244, 735, 738], "bert": [244, 735, 738], "schulz": [244, 735, 738, 886], "wong": [244, 735, 738, 886], "pseudo": [244, 297, 298, 314, 735, 738], "american": [244, 735, 738], "1090": [244, 735, 738], "fic": [244, 735, 738], "2218": [244, 476], "2228": [244, 476], "tmi": [244, 476], "2553445": [244, 476], "evelina": 244, "busa": 244, "glessner": 244, "hybrid": 244, "1075": 244, "catherin": [244, 722, 732, 733, 736], "tallon": [244, 722, 732, 733, 736], "baudri": [244, 722, 732, 733, 736], "claud": [244, 722, 732, 733, 736], "delpuech": [244, 722, 732, 733, 736], "jneurosci": [244, 722, 732, 733, 735, 736, 738], "00722": [244, 722, 732, 733, 736], "minna": [244, 868], "huotilainen": [244, 868], "oili": [244, 868], "salonen": [244, 868], "00064": [244, 868], "niall": [244, 575], "118484": [244, 575], "nd": [244, 575], "timm": [244, 575], "119338": [244, 575], "bishop": [244, 354], "1467": [244, 354], "9868": [244, 354], "00196": [244, 354], "vinck": 244, "wingerden": 244, "franscesco": 244, "battaglia": 244, "cyriel": 244, "pennartz": 244, "1548": 244, "womelsdorf": 244, "pascal": 244, "fri": 244, "rhythmic": 244, "wehner": [244, 432], "modi": [244, 432], "children": [244, 255, 432, 871, 873], "wheat": [244, 735, 738], "pier": [244, 735, 738], "cornelissen": [244, 735, 738], "frost": [244, 735, 738], "hansen": [244, 735, 738], "phonologi": [244, 735, 738], "5233": [244, 735, 738], "4448": [244, 735, 738], "whitham": [244, 561], "sean": [244, 561], "fitzgibbon": [244, 561], "clark": [244, 561, 886], "loveless": [244, 561], "marita": [244, 561], "broberg": [244, 561], "angu": [244, 561], "wallac": [244, 561], "lilli": [244, 561], "hardi": [244, 561], "rik": [244, 561], "fronsko": [244, 561], "alyson": [244, 561], "pulbrook": [244, 561], "paralysi": [244, 561], "1877": [244, 561], "1888": [244, 561], "rei": [244, 474], "ram\u00edrez": [244, 474], "jason": [244, 474], "palmer": [244, 474], "bhaskar": [244, 474], "rao": [244, 474], "neuroelectromagnet": [244, 474], "sch\u00f6lkopf": [244, 474], "platt": [244, 474], "hoffman": [244, 474], "1505": [244, 474], "3089": [244, 474], "jun": [244, 666], "juliu": [244, 666, 886], "dewald": [244, 666], "april": [244, 666], "zhi": [244, 868, 886], "multilay": [244, 868], "moritz": [244, 411, 886], "wentrup": [244, 411], "buss": [244, 411], "921154": [244, 411], "jair": [244, 561, 886], "montoya": [244, 561, 886], "mart\u00ednez": [244, 561], "petr": [244, 561], "tichavsk\u00fd": [244, 561], "massoud": [244, 561], "babai": [244, 561], "zadeh": [244, 561], "nad\u00e8g": [244, 561], "thirion": [244, 561], "moreau": [244, 561], "latent": [244, 561, 801], "10169": [244, 561], "lectur": [244, 561, 870], "cham": [244, 561], "53547": [244, 561], "0_27": [244, 561], "pharmacologi": [244, 528, 868], "pubm": [244, 528, 868], "ncbi": [244, 528, 868], "nlm": [244, 528, 868], "nih": [244, 528, 868], "gov": [244, 528, 868], "12575463": [244, 528, 868], "encyclopedia": 244, "php": 244, "international_system_of_unit": 244, "oldid": 244, "982683558": 244, "googl": [245, 255, 819, 874, 886], "scholar": 245, "dec": [245, 752, 844], "1640": 245, "health": 255, "r01": 255, "eb009048": 255, "eb006385": 255, "hd040712": 255, "ns044319": 255, "ns037462": 255, "ns104585": 255, "p41": 255, "eb015896": 255, "rr014075": 255, "foundat": [255, 867], "0958669": 255, "1042134": 255, "council": 255, "ystg": 255, "263584": 255, "676943": 255, "depart": 255, "fg02": 255, "99er62764": 255, "agenc": 255, "national": 255, "la": [255, 862, 873, 886], "recherch": [255, 873], "neuc": 255, "0002": 255, "idex": 255, "pari": [255, 886], "saclai": 255, "0003": 255, "summer": [255, 874, 886], "year": [255, 269, 403, 860, 867, 874], "amazon": 255, "grant": [255, 266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 454, 455, 474, 476, 477, 539, 794, 845, 867, 886], "zuckerberg": 255, "eoss2": [255, 874], "eoss4": 255, "employe": [255, 867], "duti": [255, 867], "aalto": [255, 862, 873], "yliopiston": [255, 873], "perustieteiden": [255, 873], "korkeakoulu": [255, 873], "athinoula": [255, 862, 873], "martino": [255, 862, 873], "hospit": [255, 862, 873], "philadelphia": [255, 873], "donder": [255, 873], "behaviour": [255, 258, 508, 510, 873], "radboud": [255, 873], "school": [255, 873], "informatiqu": [255, 873], "automatiqu": [255, 873], "franzen": [255, 873], "universit\u00e4t": [255, 873], "graz": [255, 873], "macquari": [255, 862, 873], "massachusett": [255, 873], "planck": [255, 873], "f\u00fcr": [255, 873], "bildungsforschung": [255, 873], "uniwersytet": [255, 873], "humanistycznospo\u0142eczni": [255, 873], "washington": [255, 873], "aarhu": [255, 873], "universitet": [255, 873], "commissariat": [255, 873], "\u00e0": [255, 873], "\u00e9nergi": [255, 873], "atomiqu": [255, 873], "aux": [255, 873], "forschungszentrum": [255, 873], "j\u00fclich": [255, 873], "du": [255, 873], "cerveau": [255, 873], "moell": [255, 873], "\u00e9pini\u00e8r": [255, 873], "sant\u00e9": [255, 873], "m\u00e9dical": [255, 873], "technisch": [255, 873], "t\u00e9l\u00e9com": [255, 873], "exit": [256, 270, 470, 550, 845], "outfil": 256, "anon": 256, "keep_hi": [256, 264, 265, 266, 267, 479, 480, 481, 886], "n_dai": 256, "daysback": [256, 264, 265, 266, 267, 479, 480, 481], "anonymize_info": [256, 264, 265, 266, 267, 479, 480, 876, 886], "resav": 256, "projoff": [256, 886], "navigaton": 256, "show_opt": [256, 479, 480, 807], "dialog": [256, 264, 265, 266, 267, 479, 480, 807, 810, 851, 886], "allowmaxshield": 256, "filtord": [256, 479, 480, 807, 886], "iir": [256, 264, 265, 266, 267, 413, 422, 446, 447, 449, 450, 479, 480, 573, 574, 597, 660, 670, 719, 795, 807, 875, 886], "clamp": [256, 479, 480, 754, 807], "filterchpi": [256, 886], "head_shap": 256, "out_fnam": 256, "rotation_x": [256, 490], "compensatori": 256, "deg": [256, 581], "ecg_ch": [256, 490], "eog_ch": [256, 490, 886], "e31": [256, 490], "e63": [256, 490], "my_raw": 256, "quiet": [256, 264, 265, 709], "mne_process_raw": [256, 871], "in_raw": 256, "clean_raw": 256, "file_a": 256, "file_b": 256, "test_raw_sss": 256, "filters": 256, "tap": [256, 573, 574, 583, 584, 862], "rej": 256, "rej_grad": 256, "rej_mag": 256, "rej_eeg": 256, "rej_eog": 256, "bad_fnam": 256, "raw_event_fnam": 256, "tstart": [256, 271, 272, 275, 278, 279, 280, 573, 574, 583, 584, 586, 886], "qrsthr": 256, "qrs_threshold": [256, 573, 583, 586], "eog_l_freq": [256, 574], "eog_h_freq": [256, 574], "head_opac": [256, 470], "flash30": [256, 303, 868, 886], "noflash30": [256, 868], "flash5": [256, 303, 307, 868, 886], "multiecho": [256, 303, 307], "echo": [256, 303, 844, 850, 851, 868], "regist": [256, 307, 590, 742, 743, 744, 841, 867, 868], "noconvert": 256, "deprec": [256, 338, 471, 806, 876, 886], "unwarp": [256, 303, 868], "grad_unwarp": [256, 303, 868], "symlink": [256, 307, 309, 886], "flash_path": 256, "parameter_map": [256, 307, 868], "mef05": 256, "mef30": 256, "mef05_": [256, 303, 886], "mef30_": [256, 303, 886], "spin": [256, 307], "termin": [256, 843, 844, 845, 848, 849, 851, 856, 865, 876, 886], "kt2fiff": 256, "mkheadsurf": [256, 308], "topolog": [256, 308, 365, 410, 430, 461, 613, 642, 644, 834, 861, 886], "_sss": 256, "origin_out": 256, "autobad": 256, "maxst": 256, "buflen": 256, "st_buflen": 256, "st_corr": 256, "mv_tran": 256, "in_fnam": 256, "movecomp": 256, "mv_hp": 256, "hpistep": 256, "mv_hpistep": 256, "hpisubt": 256, "mv_hpisubt": 256, "nohpicon": 256, "linefreq": 256, "nooverwrit": 256, "mx_arg": 256, "sof": 256, "bmin": 256, "bash": [256, 844, 845, 850, 851, 856], "TO": 256, "1280": [256, 410, 517], "brainc": 256, "skullc": 256, "scalpc": 256, "homog": [256, 517, 861], "7mm": 256, "joblib": [256, 264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 414, 421, 424, 427, 428, 454, 467, 469, 479, 480, 519, 522, 523, 534, 535, 544, 545, 566, 573, 574, 648, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 786, 789, 808, 874, 886], "cp": [256, 851, 868, 886], "unicod": [256, 705, 886], "mri_watersh": [256, 309, 865, 868], "gcaatla": [256, 309, 865], "brain_atla": [256, 309], "preflood": [256, 309, 865], "brainmask": [256, 309, 865, 886], "fname2": 256, "parser": [257, 440, 886], "reaverag": 257, "category_nam": 257, "acq_dict": 257, "subav": 257, "subaverag": [257, 871], "__len__": [257, 258, 260, 261, 262, 264, 265, 269, 270, 273, 274, 288, 302, 479, 480, 527, 707, 708, 709, 741], "n_cat": 257, "delayed_lookup": 257, "acqp": 257, "mne_stim_channel_2": [257, 452, 453], "uint16": [257, 452], "sti014": [257, 452, 886], "sti016": [257, 452], "32768": [257, 410, 452], "mne_fix_stim14": [257, 452], "slight": [257, 886], "asynchroni": 257, "conds_data": 257, "n_epochs_out": 257, "n_annot": 258, "iso8601": 258, "delimit": 258, "bad_flux": 258, "bad_nois": 258, "meg0111": [258, 259, 264, 265, 266, 267, 269, 310, 327, 329, 359, 369, 413, 427, 432, 479, 480, 560, 561, 563, 577, 578, 579, 585, 589, 599, 601, 608, 640, 674, 692, 701, 706, 708, 709, 710, 714, 715, 716, 717, 719, 737, 778, 784, 785, 788, 790, 791, 798, 805, 808], "meg2563": 258, "meg1443": 258, "n_blink": 258, "yy": [258, 491], "______________": 258, "_________": 258, "anot": 258, "___________________": 258, "o_________": 258, "________________________": 258, "o______________": 258, "crash": [258, 886], "o________________________": 258, "bad_acq_skip": [258, 264, 265, 266, 267, 479, 480, 500, 582, 593, 886], "__add__": [258, 260, 261, 270, 271, 272, 275, 277, 278, 279, 280, 312, 706], "concatenc": 258, "with_ch_nam": 258, "__iter__": [258, 261, 264, 265, 269, 273, 288, 302, 527, 656, 708, 709, 741], "array_lik": [258, 259, 261, 262, 264, 265, 266, 267, 269, 273, 274, 283, 310, 312, 327, 329, 359, 368, 369, 411, 413, 418, 421, 424, 426, 427, 428, 432, 438, 477, 479, 480, 490, 504, 519, 524, 560, 561, 562, 563, 566, 570, 571, 572, 575, 576, 577, 578, 579, 582, 585, 589, 593, 599, 601, 607, 608, 643, 644, 660, 674, 684, 685, 688, 690, 691, 692, 700, 701, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 722, 732, 736, 737, 754, 759, 770, 771, 778, 784, 785, 786, 788, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 802, 804, 805, 806, 808, 809, 810, 814, 816], "use_orig_tim": [258, 886], "676071": 258, "shortstimulu": 258, "longstimulu": 258, "tabular": [258, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 708, 709, 710], "on_miss": [259, 264, 265, 266, 267, 269, 284, 285, 316, 348, 349, 403, 438, 458, 479, 480, 706, 708, 709, 710, 787, 886], "preload_at_end": 259, "event_rep": [259, 264, 886], "raw_sfreq": [259, 265], "abstract": [259, 874], "meg2623": [259, 264, 265, 266, 267, 269, 310, 327, 329, 359, 369, 413, 427, 432, 479, 480, 560, 561, 563, 577, 578, 579, 585, 589, 599, 601, 608, 674, 692, 701, 706, 708, 709, 710, 714, 715, 716, 717, 719, 737, 778, 784, 785, 788, 790, 791, 798, 805, 808], "ptp": [259, 264, 265, 561, 563, 578], "40e": [259, 264, 265, 359, 561, 578, 579, 692], "zeroth": [259, 264, 886], "unproject": [259, 264, 520, 616], "postpon": [259, 264, 520, 616], "silent": [259, 264, 403, 594, 863, 886], "irrespect": [259, 264, 365, 430, 461, 613, 642, 644, 834, 868], "coincid": [259, 264], "my_epoch": 259, "compensation_grad": [259, 264, 265, 266, 267, 269, 478, 479, 480, 561, 706, 708, 709, 710], "__sub__": [260, 270, 271, 272, 275, 278, 279, 280, 706], "nfree": [261, 262, 871, 886], "eig": [261, 871], "eigvec": [261, 871], "eigenvector": [261, 868, 871], "__contains__": [261, 264, 265, 266, 267, 269, 273, 288, 302, 479, 480, 527, 561, 706, 708, 709, 710, 741], "as_diag": 261, "diagnois": 261, "fromkei": [261, 269, 273, 288, 302, 527, 741], "fig_svd": [261, 779], "1e13": [261, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 354, 358, 359, 411, 418, 420, 479, 480, 785, 788, 790, 792, 793, 815], "1e15": [261, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 354, 358, 359, 411, 418, 420, 479, 480, 785, 788, 790, 792, 793, 815], "pluss": [261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816], "markeredgecolor": [261, 264, 265, 266, 267, 411, 418, 479, 480, 560, 706, 708, 710, 771, 786, 793, 809, 814, 816], "mask_po": [261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816], "cloughtocher2dinterpol": [261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816], "linearndinterpol": [261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816], "encompass": [261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816], "polygon": [261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 820, 886], "hull": [261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 576, 706, 708, 710, 771, 786, 793, 797, 806, 809, 814, 816, 886], "doc": [261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 651, 706, 708, 710, 722, 732, 771, 786, 793, 797, 806, 809, 814, 816, 845, 865, 874, 886], "rightmost": [261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 706, 708, 710, 786, 793, 797, 806, 809, 814], "mini": [261, 264, 265, 266, 267, 273, 411, 418, 479, 480, 560, 561, 706, 708, 710, 786, 793, 797, 806, 809, 814], "unrepresent": [261, 269, 273, 288, 302, 527, 741], "popitem": [261, 269, 273, 288, 302, 527, 741], "lifo": [261, 269, 273, 288, 302, 527, 741], "setdefault": [261, 269, 273, 288, 302, 527, 741], "khi2": 262, "mne_dipole_fit": [262, 886], "longitudin": 262, "qlong": 262, "qtran": 262, "\u03c7": 262, "dipolefix": [262, 454, 615, 876], "plot_amplitud": 262, "show_al": [262, 782], "highlight_color": [262, 782], "head_sourc": [262, 519, 782, 886], "glyph": [262, 272, 278, 280, 754, 770, 782, 813, 817, 819, 886], "cube": [262, 782, 886], "mri_rot": [262, 782], "figure3d": [262, 266, 267, 271, 272, 274, 275, 277, 278, 279, 280, 763, 770, 782, 789, 812, 813, 817, 824, 845, 863, 876], "600x600": [262, 770, 782], "get_head_surf": [262, 519, 782, 876, 886], "bdip": [262, 615, 886], "use_round": [262, 263, 264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 440, 479, 480, 706, 709], "pos_mni": 262, "n_po": [262, 342, 344, 472, 473, 796], "subdirectori": [262, 463, 754], "aspect_kind": 263, "combine_event_id": [264, 876], "id_numb": 264, "event_id_1": 264, "event_id_2": 264, "new_id_numb": 264, "programmat": 264, "lost": [264, 265, 266, 267, 441, 442, 443, 444, 479, 480, 843], "no_data": [264, 709], "equalized_count": [264, 709], "membership": [264, 265, 266, 267, 479, 480, 561, 706, 708, 709, 710, 886], "audio_left": [264, 265, 709], "name_1": [264, 265, 709], "name_2": [264, 265, 709], "likewis": [264, 265, 709, 867, 868], "eval": [264, 265, 709], "col_a": [264, 265, 709], "col_b": [264, 265, 709], "add_annotations_to_metadata": [264, 265], "annot_onset": [264, 265], "annot_dur": [264, 265], "annot_descript": [264, 265], "add_list": [264, 265, 266, 267, 479, 480, 706, 708, 709, 710], "force_update_info": [264, 265, 266, 267, 479, 480, 706, 708, 709, 710], "overwritten": [264, 265, 266, 267, 387, 479, 480, 481, 576, 594, 706, 708, 709, 710, 886], "memmap": [264, 265, 266, 267, 479, 480, 648, 653, 706, 708, 709, 710, 886], "resiz": [264, 265, 266, 267, 479, 480, 706, 708, 709, 710, 793, 886], "januari": [264, 265, 266, 267, 479, 480, 481, 871], "1\u02e2\u1d57": [264, 265, 266, 267, 479, 480, 481], "his_id": [264, 265, 266, 267, 269, 479, 480, 481], "birthdai": [264, 265, 266, 267, 269, 479, 480, 481, 886], "revert": [264, 265, 625, 833, 886], "channel_wis": [264, 265, 266, 267, 479, 480, 886], "parallel_backend": [264, 265, 266, 267, 270, 271, 272, 274, 275, 278, 279, 280, 282, 354, 355, 357, 359, 414, 421, 424, 427, 428, 454, 467, 469, 479, 480, 519, 522, 523, 534, 535, 544, 545, 566, 573, 574, 654, 657, 658, 659, 671, 693, 694, 695, 696, 697, 708, 710, 711, 712, 713, 714, 715, 716, 724, 725, 733, 734, 735, 736, 737, 786, 789, 808, 886], "workload": [264, 265, 266, 267, 479, 480], "x_a": [264, 265, 266, 267, 479, 480], "2u": [264, 265, 266, 267, 479, 480], "enevlop": [264, 265, 266, 267, 479, 480], "hint": [264, 265, 266, 267, 479, 480, 785], "projs_a": [264, 265, 266, 267, 479, 480], "proj_a": [264, 265, 266, 267, 479, 480], "projs_b": [264, 265, 266, 267, 479, 480], "proj_b": [264, 265, 266, 267, 479, 480], "_v": [264, 265, 266, 267, 886], "emphas": [264, 265, 266, 267], "legendr": [264, 265, 266, 267, 479, 480, 519, 570, 868], "by_event_typ": [264, 265, 886], "trim_mean": [264, 265], "low_bia": [264, 265, 266, 267, 416, 479, 480, 534, 535, 708, 710, 713, 716, 718, 724, 786], "undrop": [264, 265], "timeout": [264, 265], "forev": [264, 265, 886], "lenient": [264, 265], "drop_log_stat": [264, 265], "perc": [264, 265], "mintim": [264, 265, 434], "seek": [264, 265, 419, 434], "nonspati": [264, 265], "fmt": [264, 265, 266, 267, 441, 442, 444, 479, 480, 868, 886], "eeglabio": [264, 265, 441, 444, 479, 480, 886], "cart_to_eeglab": [264, 265, 441, 444, 479, 480], "5500m": [264, 265, 266, 267, 413, 422, 447, 449, 450, 479, 480], "reflect_limit": [264, 265, 266, 267, 449, 450, 451, 479, 480], "savgol_filt": [264, 265, 266, 267, 479, 480], "get_annotations_per_epoch": [264, 265], "epoch_annot": [264, 265], "only_data_ch": [264, 265, 266, 267, 269, 479, 480, 561, 706, 708, 709, 710], "alia": [264, 265, 266, 267, 277, 479, 480, 600, 752, 770, 807, 845, 886], "unitless": [264, 265, 266, 267, 479, 480, 868], "return_event_id": [264, 265, 620, 708, 709, 886], "respiratori": [264, 265, 266, 267, 479, 480, 558, 706, 708, 709, 710, 886], "excit": [264, 265, 266, 267, 269, 479, 480, 558, 706, 708, 709, 710, 868], "stereotact": [264, 265, 266, 267, 479, 480, 558, 559, 706, 708, 709, 710, 868, 886], "galvan": [264, 265, 266, 267, 479, 480, 558, 706, 708, 709, 710, 868, 886], "epoch_color": [264, 265, 784], "use_opengl": [264, 265, 479, 480, 561, 784, 801, 807, 886], "overview_mod": [264, 265, 479, 480, 561, 784, 801, 807, 886], "5th": [264, 265, 266, 267, 274, 479, 480, 784, 807], "1e2": [264, 265, 274, 479, 480, 784, 807], "20\u00b5v": [264, 265, 274, 479, 480, 784, 807], "ital": [264, 265, 266, 267, 479, 480, 784, 788, 792, 807, 871], "zen": [264, 265, 479, 480, 561, 784, 801, 807, 886], "selector": [264, 265, 266, 267, 479, 480, 784, 807, 810, 871, 886], "processor": [264, 265, 386, 479, 480, 561, 784, 801, 807], "pyopengl": [264, 265, 479, 480, 561, 784, 801, 807], "stylesheet": [264, 265, 479, 480, 561, 754, 784, 801, 807], "qdarkstyl": [264, 265, 479, 480, 561, 754, 784, 801, 807], "darkdetect": [264, 265, 479, 480, 561, 754, 784, 801, 807], "mne_qt_brows": [264, 265, 479, 480, 561, 784, 801, 807, 886], "mpl": [264, 265, 271, 272, 275, 278, 279, 280, 479, 480, 754, 784, 807, 812, 817], "tkagg": [264, 265, 479, 480, 784, 807], "f11": [264, 265, 479, 480, 784, 807], "set_browser_backend": [264, 265, 479, 480, 561, 784, 801, 807, 826, 876, 886], "magic": [264, 265, 479, 480, 561, 784, 801, 807, 843, 865], "qt5": [264, 265, 479, 480, 561, 784, 801, 807, 849], "n_max_plot": [264, 265, 783], "good_epoch": [264, 265, 785], "area_alpha": [264, 265, 266, 267, 479, 480, 808], "line_alpha": [264, 265, 266, 267, 479, 480, 808], "asd": [264, 265, 266, 267, 479, 480, 808], "idiom": [264, 265, 266, 267, 479, 480, 808, 845], "decibel": [264, 265, 266, 267, 275, 479, 480, 534, 708, 710, 786], "log\u2081\u2080": [264, 265, 266, 267, 479, 480, 691, 708, 710, 786], "ch_group": [264, 265, 266, 267, 479, 480, 810, 886], "to_spher": [264, 265, 266, 267, 479, 480, 810, 886], "n_ch_group": [264, 265, 266, 267, 479, 480], "n_pick": [264, 265, 266, 267, 479, 480, 608], "downward": [264, 265, 266, 267, 479, 480, 810], "plot_layout": [264, 265, 266, 267, 479, 480, 810, 876, 886], "layout_scal": [264, 265, 266, 267, 706, 767, 792, 815], "fig_background": [264, 265, 266, 267, 706, 792, 815], "canva": [264, 265, 266, 267, 706, 767, 792, 815, 868], "allow_dupl": [264, 265, 266, 267, 312, 340, 479, 480, 641, 886], "eeg061": [264, 265, 266, 267, 312, 340, 479, 480, 641], "eeg161": [264, 265, 266, 267, 312, 340, 479, 480, 641], "anti": [264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 820, 886], "reset_drop_log_select": [264, 265, 886], "meaningless": [264, 265], "split_siz": [264, 265, 479, 480], "2gb": [264, 265, 479, 480, 886], "split_nam": [264, 265, 479, 480, 886], "100mb": [264, 265, 479, 480], "partit": [264, 265, 359, 479, 480, 694, 868, 886], "schema": [264, 265, 479, 480], "fname_split": [264, 265, 479, 480], "bbac101d50176611136b": [264, 265, 266, 267, 479, 480], "setter": [264, 265, 479, 480], "on_unit_chang": [264, 265, 266, 267, 479, 480, 886], "eyetrack_po": [264, 265, 266, 267, 479, 480], "eyetrack_pupil": [264, 265, 266, 267, 479, 480], "set_meas_d": [264, 265, 266, 267, 479, 480, 886], "match_cas": [264, 265, 266, 267, 269, 479, 480, 886], "match_alia": [264, 265, 266, 267, 269, 479, 480, 886], "channel_loc_alias": [264, 265, 266, 267, 269, 479, 480], "make_dig_montag": [264, 265, 266, 267, 269, 312, 328, 330, 331, 332, 333, 334, 335, 336, 337, 339, 479, 480, 503, 868, 876, 886], "std_err": [264, 265], "mechan": [264, 265, 867], "1591": [264, 265], "juli": [264, 265], "rangeindex": [264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 708, 709, 710], "timedeltaindex": [264, 265, 266, 267, 271, 272, 275, 278, 279, 280, 479, 480, 706, 709], "elicit": [266, 479, 500, 623, 862], "__neg__": [266, 267, 271, 272, 275, 278, 279, 280], "negat": [266, 267, 271, 272, 275, 278, 279, 280], "evoked_neg": [266, 267], "prepend": [266, 267], "resum": [266, 267, 867], "mff": [266, 267, 333, 442, 443, 496, 624, 868, 886], "export_evokeds_mff": [266, 267, 442, 876, 886], "merge_grad": [266, 267, 792, 886], "unsort": [266, 267, 788], "weakest": [266, 267, 788, 886], "obscur": [266, 267, 788], "multiax": [266, 267, 788], "t_start": [266, 267, 788], "t_end": [266, 267, 788], "surf_map": [266, 267, 519, 789], "n_contour": [266, 267, 789], "turntabl": [266, 267, 470, 754, 770, 789], "unintent": [266, 267, 470, 770, 789], "mask_cmap": [266, 267, 706, 790], "mask_alpha": [266, 267, 706, 790], "do_mask": [266, 267, 790], "illeg": [266, 267, 791], "01d": [266, 267, 411, 418, 793], "set_posit": [266, 267, 793], "amplif": [266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 454, 455, 474, 476, 477, 539, 794], "improperli": [266, 267, 297, 298, 354, 358, 359, 369, 370, 371, 411, 418, 454, 455, 471, 474, 476, 477, 539, 794, 886], "logger": [266, 267, 749, 751, 794], "_ave": [266, 267], "source_ori": [268, 871], "fiffv_mne_fixed_ori": [268, 871], "fiffv_mne_free_ori": [268, 871], "n_ori": 268, "source_rr": [268, 871], "n_sourc": [268, 297, 298, 411, 418, 456, 474, 476, 477], "nest": [269, 411, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 562, 751, 845], "fiffv_coil_meg": 269, "fiffv_eeg_ch": 269, "3x3": [269, 503, 528], "fiff_unit_t_m": 269, "fiff_unitm_non": 269, "ctfkind": [269, 871], "colcal": 269, "rowcal": 269, "save_calibr": [269, 871], "fiffv_point_eeg": [269, 871], "fiffc_vers": 269, "machid": [269, 871], "mac": 269, "usec": [269, 871], "he_level_raw": 269, "helium": 269, "helium_level": 269, "orig_file_guid": 269, "mea": 269, "creator": 269, "ncoil": 269, "hpi_coil": 269, "corr_coeff": 269, "coil_freq": 269, "dig_point": 269, "good_limit": 269, "dist_limit": [269, 277, 282, 344, 871, 886], "coord_tran": 269, "event_channel": 269, "mri_id": 269, "block_id": 269, "max_info": 269, "sss_info": 269, "max_st": 269, "sss_ctc": 269, "sss_cal": 269, "smartshield": [269, 886], "last_nam": 269, "first_nam": 269, "middle_nam": 269, "month": 269, "sex": [269, 886], "male": [269, 403], "femal": [269, 403], "handed": 269, "ambidextr": 269, "kilogram": 269, "command_lin": [269, 277], "tilt": [269, 490, 754, 868, 886], "subsystem": [269, 845], "meas_fil": 269, "mri_fil": 269, "roundtrip": [269, 886], "shh": 269, "working_dir": [269, 277], "xplotter": 269, "__setitem__": 269, "conflict": [270, 843, 845, 849, 886], "accuru": [270, 275], "m\u00b2": [270, 841], "versionad": [270, 709, 770], "outside_vertic": 270, "lie": [270, 868], "get_tri": 270, "label_tri": 270, "get_vertices_us": 270, "label_vert": 270, "n_label_vertic": 270, "icosahedr": [270, 360, 410, 466, 467], "morph_label": [270, 628, 876, 886], "div1": [270, 683], "div2": [270, 683], "split_label": [270, 876, 886], "mris_divide_parcel": [270, 683], "n_part": [270, 683], "fring": 270, "sens_data": [271, 272, 275, 278, 279, 280], "volvectorsourceestim": [271, 272, 275, 276, 279, 876, 886], "__div__": [271, 272, 275, 278, 279, 280], "__mul__": [271, 272, 275, 278, 279, 280, 706], "tstop": [271, 272, 275, 278, 279, 280], "bihemilabel": [271, 272, 275, 278, 279, 280, 445, 514, 515, 876], "pane": [271, 275, 279, 754, 812, 851], "n_color": [271, 272, 275, 278, 279, 280, 773, 812, 817, 818], "hot": [271, 272, 275, 278, 279, 280, 812, 817], "diverg": [271, 272, 275, 278, 279, 280, 754, 773, 812, 817, 818, 845], "viewer": [271, 272, 275, 278, 279, 280, 754, 812, 817, 841, 874, 886], "binar": [271, 272, 275, 278, 279, 280, 662, 664, 665, 754, 812, 817], "colorschem": [271, 272, 275, 278, 279, 280, 812, 817], "high_contrast": [271, 272, 275, 278, 279, 280, 754, 812, 817], "resort": [271, 275, 279, 812, 865], "devot": [271, 272, 275, 278, 279, 280, 812, 817], "occupi": [271, 272, 275, 278, 279, 280, 469, 655, 812, 817], "blend": [271, 272, 275, 278, 279, 280, 754, 773, 812, 817], "mip": [271, 272, 275, 278, 279, 280, 754, 812, 817], "surface_alpha": [271, 272, 275, 278, 279, 280, 754, 812, 817], "enclos": [271, 272, 275, 278, 279, 280, 754, 812, 817, 868, 886], "silhouette_alpha": [271, 272, 275, 278, 279, 280, 754, 812, 817], "silhouette_linewidth": [271, 272, 275, 278, 279, 280, 754, 812, 817], "time_label_s": [271, 272, 275, 278, 279, 280, 754, 812, 817], "freesurferoccipitalflattenedpatch": [271, 275, 279, 812], "openwetwar": [271, 275, 279, 812], "transform_data": [271, 272, 275, 278, 279, 280], "tmin_idx": [271, 272, 275, 278, 279, 280], "tmax_idx": [271, 272, 275, 278, 279, 280], "indicic": [271, 272, 275, 278, 279, 280], "data_t": [271, 272, 275, 278, 279, 280], "direction": [272, 278, 280], "vector_alpha": [272, 278, 280, 754, 817], "sane": [272, 278, 280, 817], "fiffv_proj_item_field": [273, 871], "compute_proj_": 273, "webp": [274, 886], "fidel": 274, "lang": [274, 886], "n_file": 274, "clearer": [274, 886], "add_custom_css": [274, 886], "add_custom_j": [274, 886], "javascript": [274, 886], "topomap_kwarg": [274, 805], "drop_log_ignor": [274, 886], "declutt": 274, "inverseoper": [274, 528, 529, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 811, 876, 886], "inverse_op": 274, "altogeth": 274, "stc_plot_kwarg": 274, "add_sys_info": 274, "sysinfo": 274, "sort_cont": [274, 886], "on_error": 274, "n_time_points_stc": 274, "remove_al": 274, "removed_index": 274, "open_brows": 274, "nanoamper": 275, "log_10": 275, "sum_k": [275, 868], "s_k": [275, 868], "subject_orig": [275, 278], "vertices_to": [276, 360], "pre_affin": 276, "sdr_morph": [276, 590, 742, 743, 744], "src_data": 276, "vol_morph_mat": 276, "affinemap": 276, "diffeomorphicmap": [276, 590, 742, 743, 744, 886], "stc_from": 276, "mri_spac": [276, 886], "nifti2": [276, 279, 280], "stc_to": 276, "nifti2imag": 276, "src_from": [276, 548], "monolith": 277, "fiffv_mne_surf_left_hemi": [277, 871], "fiffv_mne_surf_right_hemi": [277, 871], "fiffv_mne_surf_unknown": 277, "fiffv_coord_mri": [277, 871], "inus": [277, 871], "subject_his_id": [277, 360], "ntri": [277, 871], "nuse_tri": [277, 871], "pinfo": 277, "155295": 277, "155323": 277, "155330": 277, "patch_ind": 277, "n_src_remain": 277, "essenti": [277, 387, 861, 868, 871], "115407": 277, "nearest_dist": [277, 871], "mri_width": 277, "mri_height": 277, "mri_depth": 277, "neighbor_vert": 277, "mri_ras_t": 277, "fiffv_mne_coord_ra": 277, "src_mri_t": [277, 886], "vox_mri_t": 277, "fiffv_mne_coord_mri_voxel": 277, "mri_volume_nam": 277, "seg_nam": 277, "include_surfac": 277, "include_discret": 277, "dest": [277, 279, 280, 740], "use_lut": [277, 886], "mne_analyz": [277, 671, 769, 851, 862, 874, 886], "4x4": [277, 503, 657, 658, 659, 671], "subvolum": [279, 280, 886], "upsampl": [279, 280, 445, 451], "trilinear": [279, 280, 445], "ensnur": [279, 280, 445], "bg_img": [279, 280, 818, 886], "initial_po": [279, 280, 818], "nutmeg": [279, 280, 818], "spatialimag": [279, 280, 303, 471, 588, 590, 742, 743, 744, 818], "src_sampl": [279, 280, 818], "stc_vol_sampl": [279, 280, 818], "vl": [279, 633], "save_as_volum": [279, 280, 886], "pick_channels_forward": [284, 285, 876], "evoked_templ": 284, "apply_forward_raw": [284, 876, 886], "zlogratio": [287, 544, 545, 706, 709, 814], "data_sc": 287, "apply_dics_epoch": [289, 290, 292, 876, 886], "meaningfulli": 290, "quadrant": 290, "apply_d": [290, 291, 292, 876, 886], "borgiotti": [297, 298], "kaplan": [297, 298], "\u03b8i": [297, 298], "arguabl": [297, 298], "max_pow": [297, 298], "expon": [297, 298, 455, 474, 476, 477, 539], "compute_depth_prior": [297, 298, 456, 474, 476, 477, 539, 876, 886], "n_weight": 297, "src_type": [297, 298], "is_free_ori": [297, 298], "supplement": 297, "is_ssp": 298, "vec_stc": 298, "rework": [298, 886], "resmat": [299, 537, 538, 540, 543], "n_dipoles_lcmv": 299, "n_dipoles_fwd": 299, "1996": 300, "1207": 300, "nov": 300, "acssc": 300, "599135": 300, "mef": [303, 868], "mef05_001": 303, "mef30_001": 303, "flash5_img": [303, 307], "dig_kind": [305, 306, 430, 886], "origin_head": 305, "origin_devic": 305, "exclude_front": [306, 430], "n_pt": 306, "convert_flash_mri": [307, 868, 876, 886], "no_decim": 308, "watersh": [309, 862, 886], "autorecon1": [309, 865, 886], "idx_by_typ": 310, "read_dig_captrak": [312, 325, 328, 332, 333, 334, 335, 336, 337, 868, 876, 886], "read_dig_dat": [312, 328, 331, 333, 334, 335, 336, 337, 491, 868, 876, 886], "read_dig_egi": [312, 325, 328, 331, 332, 334, 335, 336, 337, 868, 876, 886], "read_dig_hpt": [312, 328, 331, 332, 333, 334, 336, 868, 876, 886], "read_dig_localit": [312, 325, 331, 332, 333, 334, 335, 337, 876, 886], "add_estimated_fiduci": [312, 886], "acpc": 312, "ch_po": [312, 325], "remove_fiduci": [312, 886], "circumst": [312, 440, 886], "x_max": 313, "y_min": 313, "y_max": 313, "my_layout": 313, "keep_stim": 314, "combined_inst": 314, "native_head_t": 316, "equalized_inst": [317, 436], "ch_adjac": [318, 329], "use_c": 320, "3022": [320, 479, 868], "sq20483n": [320, 479], "3023": [320, 479, 868], "sq20483": [320, 479], "3024": [320, 479, 868], "sq20950n": [320, 479], "upgrad": [320, 479, 886], "ch_indic": 321, "bg_imag": 321, "reserv": [321, 845, 867, 886], "make_grid_layout": [321, 326, 876], "neighbor_nam": 322, "builtin": [322, 323, 754, 845, 886], "heurist": 324, "capit": [324, 886], "periauricular": [325, 868], "n_point": [325, 339, 365, 430, 482, 504, 619], "n_hpi": 325, "compute_dev_head_t": [325, 876, 886], "fs_tal": [325, 512, 741], "ctf_head": [325, 512, 741], "ctf_meg": [325, 512, 741], "viewport": [326, 479, 480, 807], "generate_2d_layout": [326, 327, 755, 876], "n_col": [327, 561, 707, 709, 780, 800, 886], "95mm": 328, "eloc": 330, "sfp": [330, 886], "besa": [330, 621, 886], "bvef": [330, 886], "095m": 330, "weakli": 330, "eg": [330, 886], "captrak": [331, 886], "xml": [331, 333, 443, 624, 868, 886], "bvct": [331, 868, 886], "compumed": [332, 491, 868], "eeg001": 334, "eeg002": 334, "hpt": [335, 868], "filepath": [335, 337, 704, 754], "digitz": 335, "pound": [335, 868], "auricular": [335, 868, 871], "signifi": [335, 561], "6729": 335, "3873": 335, "3671": 335, "6782": 335, "5228": 335, "3127": 335, "3976": 335, "2363": 335, "4493": 335, "8450": 335, "3601": 335, "5353": 335, "6828": 335, "8518": 335, "0697": 335, "0829": 335, "3744": 335, "6297": 335, "1376": 335, "4264": 335, "7352": 335, "7756": 335, "8676": 335, "0439": 335, "9297": 335, "6852": 335, "4881": 335, "2969": 335, "4939": 335, "localit": [336, 886], "read_polhemus_fastscan": [337, 876, 886], "on_header_miss": [339, 886], "fastscan": [339, 504, 868], "t_step_min": [341, 342, 343], "t_window": [341, 343, 347, 571], "interf": [341, 343, 347], "_setup_hpi_amplitude_fit": 341, "disambigu": 341, "t_step_max": 342, "too_clos": 342, "adjust_dig": [342, 344], "\u03b4t": 342, "veloc": [342, 565], "chpi_snr": 343, "snr_mag": 343, "power_mag": 343, "resid_mag": 343, "snr_grad": 343, "power_grad": 343, "resid_grad": 343, "gof_limit": 344, "quat": [344, 350, 745, 747], "q1": [344, 479, 480, 745, 747], "q2": [344, 745, 747], "q3": [344, 479, 480, 745, 747], "monitor": [345, 868, 871], "hlc001": 345, "hlc002": 345, "hlc003": 345, "rawkit": [346, 504], "include_lin": 347, "t_step": 347, "allow_line_onli": [347, 886], "hpi_freq": 349, "n_coil": 349, "hpi_pick": 349, "hpi_on": 349, "head_pos_to_trans_rot_t": [351, 352, 657, 658, 659, 671, 876], "all_evok": 353, "keep_sample_mean": 354, "ledoit_wolf": [354, 886], "factor_analysi": 354, "store_precis": 354, "assume_cent": 354, "shrikag": 354, "iter_n_compon": 354, "emprici": 354, "redund": [354, 868, 886], "on_rank_mismatch": [358, 369, 370], "orth": [358, 886], "implicitli": [358, 423, 593, 861, 868], "resultingmorph": 360, "vertices_from": 360, "vert_rh": 360, "vert_lh": 360, "mris_left_right_regist": 360, "epochs_list": [361, 434], "add_offset": 361, "events_list": [363, 886], "event_list": [363, 886], "on_defect": [365, 430, 461, 613, 642, 644, 834, 886], "read_fiduci": [365, 876, 886], "canon": [365, 486, 754, 770, 860, 886], "quantiti": [365, 591, 867, 868], "lpa_weight": 365, "rpa_weight": 365, "hsp_weight": 365, "eeg_weight": 365, "hpi_weight": 365, "set_fid_match": 365, "set_grow_hair": 365, "hair": 365, "set_rot": 365, "rot": [365, 745, 747], "set_scal": 365, "sca": 365, "scale_mod": 365, "set_transl": 365, "tra": 365, "fids_mri": 367, "coordinatesystem": [367, 868], "return_rank": 369, "return_color": [369, 464], "prepare_noise_cov": [369, 876, 886], "n_nonzero": 369, "1e11": 370, "1e5": 370, "fd": [371, 841], "reg_cov": 371, "fs_home": 372, "create_raw": 373, "ignore_config": 375, "env": [375, 459, 843, 845, 849, 853], "device_id": 376, "force_upd": [377, 378, 379, 380, 382, 383, 384, 386, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409], "update_path": [377, 378, 379, 380, 382, 383, 384, 386, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409], "mne_datasets_brainstorm_data_path": [377, 378, 379], "prompt": [377, 378, 379, 380, 382, 383, 384, 386, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 844, 848, 850, 856, 865], "base_url": [380, 403, 404], "getenv": 380, "foot": 380, "khanetal2018": 385, "dataset_param": 386, "check_vers": 386, "return_vers": 386, "auth": 386, "token": 386, "archive_nam": [386, 392], "folder_nam": [386, 392], "hash": [386, 392, 886], "config_kei": 386, "unzip": [386, 845], "untar": [386, 843], "decompress": 386, "authent": [386, 845], "usernam": [386, 845], "password": [386, 845], "httpdownload": 386, "012345": 386, "has_dataset": [386, 876, 886], "uncompress": 386, "cryptograph": 386, "sha256": 386, "19uheid": 386, "md5": 386, "upodh2io": 386, "dataset_nam": [386, 392, 886], "tar": [386, 843, 851], "12b75d1cb7df9dfb4ad73ed82f61094f": 386, "osf": 386, "86qa2": 386, "webpag": 388, "2wk": 389, "1mo": 389, "2mo": 389, "3mo": 389, "5mo": 389, "9mo": 389, "12mo": 389, "15mo": 389, "18mo": 389, "2yr": 389, "ants4": 389, "5month3t": 389, "subject_dir": 390, "fetch_dataset": [392, 876, 886], "\u00ecnt": 395, "mne_datasets_opml_path": 399, "edfx": [403, 404], "cassett": 403, "physionet_sleep_path": [403, 404], "temazepam": [403, 862, 876, 886], "telemetri": 404, "mild": 404, "asleep": 404, "mne_datasets_spm_data_path": 406, "n_triangl": 410, "quadric": 410, "30001": 410, "20480": 410, "cov_est": 411, "transform_into": [411, 418, 886], "average_pow": [411, 418], "cov_method_param": [411, 418, 419], "component_ord": [411, 886], "mutual_info": [411, 886], "csp_space": [411, 418], "mutual": [411, 496, 744], "simplif": 411, "mean_": [411, 418], "std_": [411, 418], "x_new": [411, 412, 413, 416, 418, 419, 422, 562], "n_features_new": [411, 412, 413, 416, 418, 419, 422, 562], "get_param": [411, 412, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 562], "subobject": [411, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 562], "name_format": [411, 418], "n_pattern": [411, 418], "set_param": [411, 412, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 562], "__": [411, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 562], "classes_": [412, 414], "n_class": [412, 414, 415, 421, 427], "rtepoch": [413, 886], "temporalfilt": [413, 876, 886], "mne_realtim": [413, 878, 886], "base_estim": [414, 421, 886], "score_func": [414, 421, 561], "decision_funct": [414, 415, 421], "nd_featur": [414, 421], "n_slice": 414, "n_features_1": [414, 421], "n_features_2": [414, 421], "n_task": [414, 421], "clone": [414, 421, 843, 845, 853, 886], "n_target": [414, 415, 421, 428], "xt": [414, 421, 424], "283185307179586": 416, "nitim": [416, 718, 724, 786, 886], "n_signal": [416, 729, 731], "fit_intercept": [417, 423], "r2": 417, "edge_correct": [417, 423], "baseestim": [417, 425, 428], "return_filt": 419, "flank": 419, "spectal": 419, "sprectal": 419, "sorter_spec": 419, "x_ssd": 419, "with_mean": 420, "with_std": 420, "quantil": 420, "estimators_": 421, "filterestim": [422, 876, 886], "unsupervis": 425, "spatialfilt": 426, "_xdawntransform": 426, "features_shape_": 426, "objective_funct": 427, "leaveoneout": 427, "surrogate_tri": 427, "mean_spatial_filt": 427, "pre_dispatch": 428, "n_dimensional_featur": 428, "dispatch": 428, "explos": 428, "spawn": [428, 886], "lightweight": [428, 843], "n_score": 428, "attr": [429, 845], "get_fitting_dig": [430, 876], "extrema": [431, 588, 602], "orig_sfreq": 432, "weight_al": 432, "ignore_ref": [432, 523, 572, 582, 593], "return_map": 432, "mag_scal": [432, 572, 582, 593], "multipolar": [432, 571, 572, 582, 593], "fit_sphere_to_headshap": [432, 571, 572, 582, 593, 876, 886], "magenetomet": [432, 572, 582, 593], "pickup": [432, 572, 582, 593, 868], "0168": [432, 572, 582, 593], "sp": 432, "old_event_id": 433, "new_event_id": 433, "safeti": [433, 853], "collat": 435, "ancillari": 435, "union": [435, 452, 561, 594], "myevent": 435, "last_myev": 435, "first_": 435, "event_typ": 435, "respet": 435, "slash": [438, 841, 886], "n_new_ev": 439, "aa": 440, "dd": [440, 491, 886], "ee": 440, "gg": 440, "syncstatu": 440, "99998": 440, "neuroscan": [440, 868, 886], "mffpy": [443, 886], "xml_file": 443, "physical_rang": [444, 479, 480], "add_ch_typ": [444, 479, 480], "vmrk": [444, 479, 480, 611, 862, 886], "edflib": [444, 479, 480, 886], "f_pass": 446, "f_stop": 446, "return_copi": 446, "ellipt": 446, "gpass": 446, "gstop": 446, "weren": 446, "triag": [446, 705], "fs1": 447, "fs2": [447, 450], "fstop": 447, "max_tri": 448, "mt_bandwidth": [450, 479, 480], "centr": [450, 479, 480, 543], "xf": 450, "chronux": 450, "partha": 450, "mitra": 450, "hemant": 450, "bokil": 450, "oxford": [450, 845], "upfirdn": 451, "find_stim_step": [452, 876, 886], "00000101": 452, "0000111": 452, "0100101": 452, "0000101": 452, "0000010": 452, "pad_start": 453, "pad_stop": 453, "whichev": [453, 455, 772], "v_from": 453, "v_to": 453, "min_dist": 454, "rhoend": 454, "fmin_cobyla": 454, "limit_depth_ch": [455, 886], "combine_xyz": 455, "gk": 455, "frobeniu": 455, "depth_prior": 455, "compute_orient_prior": [455, 876], "orient_prior": 456, "fwd_out": [457, 458], "restrict_forward_to_stc": [457, 876, 886], "restrict_forward_to_label": [458, 876, 886], "raise_error": 459, "config_path": 460, "mnemn": 460, "mgz_fname": 464, "atlas_id": [464, 626], "read_freesurfer_lut": [464, 876, 886], "labels_aseg": 465, "spatio_temporal_tris_adjac": [466, 876, 886], "all_inst": 468, "grown": 469, "territori": 469, "invad": 469, "broadcast": 469, "guess_mri_subject": 470, "head_high_r": 470, "scrollabl": 470, "orient_to_surfac": 470, "scale_by_dist": 470, "mark_insid": 470, "advanced_rend": 470, "head_insid": 470, "launch": [470, 549, 843, 845, 849, 851, 886], "movabl": 470, "splitter": 470, "qt4": 470, "unnecessari": [470, 487, 494, 502, 861, 863], "wx": 470, "coregistrationui": 470, "base_imag": [471, 588, 886], "ct": [471, 588, 744, 886], "mr": [471, 744, 868, 874, 886], "intracranialelectrodeloc": 471, "unscal": [473, 886], "update_mod": 474, "bay": 474, "mackai": 474, "time_pca": 476, "dgap_freq": [476, 477, 886], "cd": [476, 845, 851, 865, 868, 886], "bcd": [476, 886], "dualiti": [476, 477, 886], "alpha_max": [476, 477], "epsilon": [476, 528], "alpha_spac": [477, 886], "alpha_tim": [477, 886], "raw_extra": 478, "orig_format": [478, 479, 480, 886], "buffer_size_sec": [478, 479, 480, 886], "orig_unit": 478, "unsplit": 478, "orig_nchan": 478, "nv": 478, "my_raw_object": 478, "subclass": 478, "_read_segment_fil": 478, "mult": 478, "time_slic": [479, 480], "rawfif": [479, 480], "crop_by_annot": [479, 480, 886], "data_fram": [479, 480], "quartil": [479, 480], "fix_mag_coil_typ": [479, 876, 886], "mne_fix_mag_coil_typ": 479, "load_bad_channel": [479, 480, 886], "bad_fil": [479, 480], "mne_mark_bad_channel": [479, 480], "europ": [479, 480], "lightgrai": [479, 480, 783, 807], "show_first_samp": [479, 480, 561, 801, 807], "eventloop": [479, 480, 807], "prj": [479, 480, 807], "secondari": [479, 480, 807], "stim_pick": [479, 480, 886], "supersampl": [479, 480], "optimum": [479, 480], "drop_small_buff": [479, 480], "gzip": [479, 480, 886], "projecton": [479, 480], "datetimeindex": [479, 480], "pickl": 482, "mrk_point": 482, "fiffv_coord_": [483, 512], "input_fnam": [486, 487, 491, 494, 495, 496, 502, 504, 506, 617, 619], "pos_fnam": 486, "add_head_tran": 486, "artemis123": [486, 868, 886], "utf8": [487, 494, 886], "bdf": [487, 494, 502, 868, 886], "rawedf": [487, 494, 886], "gdf": [487, 494, 502, 868, 886], "batteri": 487, "trigger_sign": 487, "htm": 487, "cms_bit": 487, "cms_high": 487, "boxi": [488, 868, 886], "rawboxi": 488, "vhdr_fname": 489, "heogl": 489, "heogr": 489, "veogb": 489, "vision": [489, 867, 886], "rawbrainvis": [489, 886], "pdf_fname": 490, "config_fnam": 490, "head_shape_fnam": 490, "sort_by_ch_nam": 490, "e64": 490, "rawbti": 490, "data_format": 491, "date_format": 491, "int16": 491, "int32": [491, 871], "numsampl": 491, "rawcnt": 491, "system_clock": 492, "clean_nam": [492, 886], "rawctf": 492, "curri": [493, 611, 886], "dap": [493, 611], "rs3": 493, "cdt": [493, 611, 886], "dpa": [493, 611], "cef": [493, 611], "rawcurri": 493, "export_raw": [494, 876, 886], "storag": [494, 648], "sao2": 494, "subsecond": 494, "uint16_codec": [495, 611, 617, 886], "montage_unit": [495, 617, 886], "codec": [495, 611, 617, 754], "latin1": [495, 611, 617], "raweeglab": [495, 886], "trev": 496, "e1": [496, 624], "e2": [496, 624], "e3": [496, 624], "rawegi": 496, "nxe": [497, 868], "raweximia": 497, "apply_offset": 498, "find_overlap": 498, "overlap_threshold": 498, "gap_descript": 498, "blink_l": 498, "blink_r": 498, "blink_both": 498, "raweyelink": 498, "data_nam": [499, 618, 622], "ft_datatype_raw": 499, "binfil": 501, "fil": [501, 862, 868, 886], "opmeg": 501, "rawfil": 501, "rawgdf": 502, "hitachi": [503, 886], "probe": [503, 886], "rawhitachi": 503, "3x5": 503, "etg": 503, "7000": 503, "d1": 503, "s2": 503, "d2": 503, "s3": 503, "d3": 503, "s4": 503, "d4": 503, "s5": 503, "d5": 503, "s6": 503, "d6": 503, "s7": 503, "d7": 503, "s8": 503, "ft7": 503, "tp7": 503, "laid": 503, "d8": 503, "s9": 503, "d9": 503, "s10": 503, "3x11": 503, "d10": 503, "s11": 503, "d11": 503, "s12": 503, "d12": 503, "s13": 503, "d13": 503, "s14": 503, "d14": 503, "s16": 503, "d16": 503, "s17": 503, "d17": 503, "s18": 503, "stim_cod": 504, "allow_unknown_format": [504, 619], "ricoh": [504, 619, 886], "laboratori": [504, 619], "neuroelectr": 505, "nedf": [505, 886], "rawnedf": 505, "nicolet": [506, 868, 886], "nihon": 507, "kohden": 507, "rawnihon": 507, "nirx": [508, 868, 886], "nosatflag": 508, "rawnirx": 508, "wlx": 508, "nosatflags_wlx": 508, "persyst": [509, 868, 886], "rawpersyst": 509, "snirf": [510, 886], "jnir": 510, "rawsnirf": 510, "indent": [511, 762], "read_limit": [511, 762], "max_str": [511, 762], "mne_show_fiff": 511, "mri_tal": [512, 741], "grow_outsid": 513, "hoc": [516, 852, 886], "standard_devi": 516, "write_bem_surfac": [517, 518, 612, 613, 861, 876, 886], "write_bem_solut": [518, 612, 613, 861, 876, 886], "relative_radii": 524, "radii": [524, 658], "csf": [524, 868], "replace_ev": [526, 886], "n_events_in": 526, "n_events_out": 526, "1111111111111111": [528, 529, 534, 535, 540, 544, 545], "prepare_inverse_oper": [528, 529, 530, 531, 532, 534, 535, 544, 545, 876, 886], "apply_inverse_tfr_epoch": [528, 529, 530, 531, 876, 886], "force_equ": [528, 886], "time_func": 531, "approx": [531, 868], "inv_split": [534, 535], "snr_est": 536, "unregular": 536, "tild": [536, 868, 886], "lambda_k": [536, 868], "gamma_k": [536, 868], "biggest": 536, "chi": 536, "normalis": [537, 538], "willb": [537, 538], "n_orient_inv": [537, 538, 540], "n_orient_fwd": [537, 538, 540], "pca_var": [537, 538], "mantl": [539, 868], "cog_err": 543, "graviti": 543, "cog": 543, "maxrad_ext": 543, "peak_amp": 543, "sum_amp": 543, "surf_nam": [547, 628], "mne_docs_kind": 549, "mne_docs_vers": 549, "grad_reject": 551, "mag_reject": 551, "eeg_reject": 551, "eog_reject": 551, "explanatori": [560, 608], "info_": 560, "intercept_": 560, "cumul": 561, "999999": [561, 886], "n_components_": [561, 886], "n_iter_": [561, 886], "pseudoinvers": [561, 572, 868, 886], "instabl": 561, "migrat": [561, 886], "debat": 561, "zca": 561, "tol_fastica": 561, "tol_picard": 561, "current_fit": 561, "unfit": 561, "pre_whitener_": 561, "pca_components_": 561, "pca_mean_": 561, "pca_explained_variance_": 561, "scrap": 561, "n_samples_": 561, "on_baselin": [561, 798, 886], "ummix": [561, 562], "reappli": [561, 798, 833, 886], "anymor": [561, 853, 886], "supra": [561, 563], "ecg_idx": 561, "kuiper": 561, "eog_idx": 561, "paralyz": 561, "threefold": 561, "farthest": 561, "msucl": 561, "ref_ica": 561, "ref_idx": 561, "baseraw": [561, 569, 876, 886], "unclean": 561, "pvaf": 561, "usecas": [561, 801], "plot_std": [561, 797, 799], "image_arg": [561, 706, 797, 799], "psd_arg": [561, 797, 799], "plot_ica_compon": [561, 876, 886], "topomap_axi": [561, 799], "image_axi": [561, 799], "erp_axi": [561, 799], "spectrum_axi": [561, 799], "variance_axi": [561, 799], "logarithm": [561, 799], "ass": [561, 800], "n_ica_compon": [561, 800], "sublabel": [561, 800], "score_sourc": [561, 886], "pearsonr": 561, "skew": 561, "correct_overlap": 562, "overlapp_correct": 562, "evokeds_": 562, "event_id_": 562, "correct_overlap_": 562, "n_event_typ": 562, "bad_perc": 563, "bad_peak": 563, "bad_flat": 563, "uncommon": 563, "sole": [564, 862, 867], "rotation_velocity_limit": 565, "translation_velocity_limit": 565, "use_dev_head_tran": [565, 886], "lm_cutoff": 569, "epoch_threshold": 569, "bw_method": 569, "intrins": 569, "hjorth": 569, "gaussian_kd": 569, "n_legendre_term": 570, "lap": [570, 650], "inst_csd": 570, "n_imbal": 571, "multipol": [571, 593], "bad_condit": [572, 582, 593], "extended_proj": [572, 582, 593], "ill": [572, 582, 593], "esss": [572, 582, 593, 874, 886], "n_meg": [572, 582], "n_moment": 572, "n_good_meg": 572, "reg_moment": 572, "n_use_in": 572, "dagger": 572, "phi": 572, "phi_in": 572, "data_meg_good": 572, "raw_ev": [573, 574], "avg_ref": [573, 574], "return_drop_log": [573, 574, 886], "ecg_ev": [573, 583, 586], "0005": [574, 865], "e0g": 574, "magentomet": 575, "quadratur": 575, "corrmapplugin1": 576, "categoris": 576, "preexist": 576, "dry": 576, "template_fig": 576, "labelled_": 576, "mag_pick": 577, "grad_pick": 577, "keep_ecg": [578, 886], "r_peak_events_arrai": 578, "doctest": 578, "thresh": [579, 584, 588, 602, 693, 694, 696, 697, 754], "interp_thresh": 580, "insts_bad": 580, "formerli": [580, 886], "px": 581, "l_x": 581, "r_pupil": 581, "noisy_ch": 582, "flat_ch": 582, "Their": [582, 845], "scores_flat": 582, "limits_flat": 582, "annotate_amplitud": [582, 593, 876, 886], "st_fix": [582, 593], "d_k": 582, "mu_d": 582, "sigma_d": [582, 868], "textrm": 582, "return_ecg": 583, "ch_ecg": [583, 586], "average_puls": [583, 586], "ecg_sourc": 586, "eog_sourc": 587, "max_peak_dist": 588, "voxels_max": 588, "use_min": 588, "hypointens": 588, "hyperintens": 588, "elec_imag": 588, "n_neighbor": 589, "pressur": 589, "craniotomi": 589, "reg_affin": [590, 742, 743, 744], "montage_warp": 590, "l_rate": 591, "w_chang": 591, "anneal_deg": 591, "anneal_step": 591, "n_subgauss": 591, "kurt_siz": 591, "ext_block": 591, "blowup": [591, 671], "blowup_fac": 591, "n_small_angl": 591, "use_bia": 591, "return_n_it": [591, 886], "kurtosi": 591, "unmixing_matrix": 591, "return_max_it": 591, "bad_limit": 592, "forth": 593, "relicens": 593, "permiss": 593, "certifi": 593, "seamless": 593, "vet": [593, 874], "abramowitz": 593, "stegun": 593, "us2006031038": 593, "us6876196": 593, "wo2005067789": 593, "wo2005078467": 593, "wo2006114473": 593, "lawyer": 593, "raw_er": 594, "from_raw": 594, "inject": 594, "raw_er_prepar": 594, "pathlength": [595, 886], "hemoglobin": [600, 886], "wherev": 600, "realtim": [601, 876, 886], "provision": 601, "x0": [602, 691], "peak_loc": 602, "peak_mag": 602, "nathanael": 602, "yoder": 602, "ncyoder": 602, "purdu": 602, "36900026": 602, "76007351": 602, "imb_cal": 604, "t_raw": 607, "t_other": 607, "realign": [607, 841, 886], "first_ev": 607, "n_picks_ref": 608, "epochs_no_av": 608, "epochs_clean": 608, "n_parcel": 610, "amrk": 611, "ahdr": [611, 886], "patch_stat": [613, 635], "s_id": 613, "eventtyp": 617, "trialinfo_column": 618, "trialinfo": [618, 886], "mne_browse_raw": [620, 871], "avr": [621, 886], "mul": [621, 886], "sidecar": 621, "timelock": 622, "write_labels_to_annot": [627, 628, 835, 876, 886], "annot_fnam": [628, 836], "ascend": [628, 795, 802, 865, 886], "lta": [629, 886], "mne_make_morph_map": [630, 871], "morph_map": 630, "left_map": 630, "right_map": 630, "asterisk": 633, "source_morph": 634, "return_dict": 636, "file_format": [636, 839], "voxels": [636, 839], "xra": [636, 839], "yra": [636, 839], "zra": [636, 839], "cra": [636, 839], "n_face": [636, 639, 839], "read_tri": [636, 839, 876], "return_al": 638, "fname_in": 639, "clockwis": [639, 759], "counterclockwis": [639, 871], "spcecifi": 640, "bem_nam": 642, "subjects_from": [642, 645], "ba3a": 643, "cfg": 643, "skip_fiduci": 644, "oserror": 644, "scale_bem": [644, 876, 886], "scale_label": [644, 876], "scale_source_spac": [644, 876], "src_name": 645, "my_source_spac": 645, "mne_sensitivity_map": 646, "ch_info": [647, 886], "drop_ref": [647, 886], "on_bad": 647, "cache_dir": 648, "output_format": 651, "howto": 651, "asctim": 651, "levelnam": 651, "notifi": [651, 845], "return_old_level": 652, "add_fram": [652, 749], "old_level": 652, "memmap_min_s": 653, "megabyt": 653, "single_volum": [655, 886], "ox": 655, "oi": 655, "iii": 655, "get_stim_channel": 656, "stim_data": 656, "add_chpi": [658, 659, 671, 876, 886], "inhomogen": 659, "poisson": 659, "stc_true": [661, 662, 663, 664, 665, 666, 667, 668], "stc_est": [661, 662, 663, 664, 665, 666, 667, 668], "ppe": 663, "dfrac": [663, 668], "sum_i": [663, 668], "s_i": [663, 668], "r_i": [663, 668, 868], "tp": [664, 665], "fn": 665, "2q": 666, "min_": [666, 868], "r_k": 666, "r_l": 666, "mathbb": 666, "dle": 666, "ed": [666, 886], "terminologi": 666, "actual_snr": 670, "sti001": 671, "allow_overlap": 673, "coo_matrix": [676, 677, 678, 679, 680, 681, 682, 686], "additit": 677, "remap_vertic": [679, 682], "reassign": [679, 682], "2n": [680, 681, 682, 868], "pval_correct": [684, 690], "n_bootstrap": 685, "spmatrix": [686, 693, 694, 696, 697], "n_ob": 686, "chan_adj": 686, "5600x5600": 686, "27076": 686, "compliant": [687, 874], "slowest": 687, "a2b2": 687, "greenhous": 687, "geisser": 687, "f_val": 687, "homoscedast": 688, "kruskal": 688, "walli": 688, "pvalu": 689, "yekuti": 690, "negcorr": 690, "n_regressor": 691, "choleski": [692, 868, 886], "n_cond": 692, "bx": 692, "enorm": 692, "overload": 692, "subepoch": 692, "n_predictor": 692, "time_window_length": 692, "t_power": [693, 694, 696, 697], "check_disjoint": [693, 694, 696, 697], "subarrai": 693, "kth": 693, "unconnect": [693, 694, 696, 697], "disjoint": [693, 694, 696, 697], "set_cache_dir": [693, 694, 696, 697, 876], "rv_continu": [693, 694, 696, 697], "untract": 695, "spatial_exclud": [696, 697], "p_thresh": 698, "equal_var": 700, "ball": 701, "volu": 701, "do_neighbor_vert": 703, "do_neighbor_tri": 703, "show_path": 705, "sy": [705, 849, 886], "power_baselin": 706, "frequency_window": 706, "read_tfr": [706, 709, 739, 876, 886], "write_tfr": [706, 709, 728, 876], "csd_array_fouri": [707, 712, 713, 714, 715, 716, 876, 886], "csd_array_multitap": [707, 711, 712, 714, 715, 716, 876, 886], "csd_array_morlet": [707, 711, 713, 714, 715, 716, 876, 886], "as_cov": 707, "pack": 707, "pick_frequ": 707, "read_csd": [707, 876, 886], "getitem_epochspectrum_return": 708, "ci_alpha": [708, 710], "read_spectrum": [708, 710, 876], "latex": [708, 710], "pertin": 709, "12676": 709, "getitem_spectrum_return": 710, "sixth": 710, "subscript": 710, "freq_indic": 710, "half_nbw": 718, "kmax": 718, "sym": [718, 886], "nw": 718, "half_bw": 718, "bw": 718, "f0": 718, "tridiagon": 718, "jw": 719, "jnw": 719, "tx": 721, "n_step": [721, 729, 754], "_cycl": [722, 732, 733, 734, 736, 737], "desired_fwhm": [722, 732, 736], "morlet2": [722, 732], "sp_morlet": [722, 732], "this_fwhm": [722, 732], "wavelet_sp": [722, 732], "half_max": [722, 732], "n_taper": [724, 734], "get_window": [725, 808], "istft": [729, 730, 876, 886], "stftfreq": [729, 876], "epoch_data": [733, 734], "avg_power_itc": [733, 734], "power_": [733, 734], "tfr_array_multitap": [733, 735, 736, 737, 738, 876, 886], "tfr_array_stockwel": [733, 734, 736, 737, 738, 876, 886], "interrel": [733, 734, 736, 737, 852], "strive": [734, 737, 867], "finer": [734, 737, 886], "undermin": [734, 737], "intertri": [735, 738], "st_power": 735, "from_str": 741, "to_str": 741, "cval": [742, 886], "compute_volume_registr": [742, 743, 876, 886], "reg_img": 742, "trans2": 743, "niter": [744, 886], "starting_affin": [744, 886], "shear": 744, "affine_registr": 744, "rot_to_quat": [745, 876], "quat_to_rot": [747, 876], "contextlib": 748, "contextmanag": 748, "my_fnam": 748, "moin": 750, "pythondecoratorlibrari": 750, "sentenc": 750, "futurewarn": [750, 845, 886], "ignore_namespac": 751, "namespac": [751, 845, 876, 886], "travers": 751, "_funct": 752, "filler": 752, "5880": 752, "offscreen": 754, "subject_id": [754, 886], "buggi": 754, "soon": [754, 862, 867, 868], "add_skul": 754, "remove_data": 754, "remove_dipol": [754, 886], "remove_forward": [754, 886], "remove_head": 754, "remove_label": 754, "remove_annot": 754, "remove_sensor": 754, "remove_skul": 754, "remove_text": 754, "remove_volume_label": 754, "timeview": 754, "get_picked_point": 754, "geo": 754, "ctab": 754, "lh_ctab": 754, "rh_ctab": 754, "rbga": 754, "icefir": 754, "rocket": 754, "nvtx": 754, "thrown": [754, 886], "font": [754, 813], "add_scalar_bar": 754, "title_font_s": 754, "hex": [754, 778], "map_surfac": [754, 886], "n_coord": 754, "stereotax": 754, "coord_as_vert": 754, "1cm": 754, "subdir": 754, "reset_camera": [754, 822], "max_dist": 754, "justif": 754, "update_text": 754, "fill_hole_s": [754, 886], "hole": [754, 886], "dilat": 754, "apply_auto_sc": 754, "clear_glyph": 754, "cleanup": [754, 874], "widget": [754, 756, 886], "get_view": [754, 886], "zenith": [754, 822], "plot_time_cours": 754, "vertex_id": 754, "plot_time_lin": 754, "reset_view": 754, "restore_user_sc": 754, "bitrat": 754, "imageio": 754, "mov": 754, "interp1d": 754, "slinear": 754, "quadrat": 754, "n_frame": 754, "separate_canva": 754, "set_data_smooth": 754, "set_playback_spe": 754, "playback": 754, "set_tim": [754, 886], "set_time_interpol": 754, "set_time_point": 754, "time_idx": 754, "setup_time_view": 754, "rear": [754, 841], "time_interpol": 754, "toggle_interfac": 754, "toggle_playback": 754, "update_lut": 754, "imdata": 755, "cursor": [755, 886], "onclick": 755, "backend_bas": 755, "bg": [755, 757], "set_ratio": 757, "ax_im": 757, "node_nam": 759, "start_between": 759, "group_sep": 759, "n_node_nam": 759, "fname_1": 762, "fname_2": 762, "show_fiff": [762, 876, 886], "smooth_shad": [763, 820], "_render": 763, "undocu": 763, "backend_us": [764, 766], "gen": 767, "ch_dx": 767, "teal": 769, "onselect": [771, 816], "rectangleselector": [771, 816], "show_indic": 772, "show_orient": [772, 886], "halfwai": 772, "colorbarbas": 773, "polarax": 776, "type_snr": 777, "type_pow": 777, "type_resid": 777, "truncate_xaxi": [778, 886], "invert_i": 778, "unweight": 778, "inset": [778, 886], "n_evok": 778, "hexadecim": 778, "equal_spac": 787, "1f77b4": 795, "fscale": [795, 802], "alim": [795, 802], "pointsiz": 810, "bet": 810, "bluish": 811, "brain_color": [813, 886], "fig_numb": 813, "cone": 813, "axesimag": 816, "contourset": 816, "fieldlin": 816, "mixedvectorsourceestim": [817, 876, 886], "backend_nam": [819, 823, 825, 826], "old_backend_nam": [819, 823], "plot_evoked_field": [819, 876, 886], "link_brain": [819, 876, 886], "inlin": [819, 843, 849], "jupyterlab": 819, "colab": 819, "antialia": [820, 843], "depth_peel": 820, "multi_sampl": 820, "plot_epoch": [823, 845, 876, 886], "plot_ica_sourc": [823, 876, 886], "hide_sensor": 824, "dn": 824, "set_3d_backend": [825, 843, 876, 886], "hsv": 836, "table_nam": 836, "colort": 836, "create_stamp": 839, "vocabulari": [841, 869], "textual": [841, 886], "spindl": 841, "acronym": [841, 869], "definion": 841, "mv": [841, 886], "\u00b5m": 841, "od": 841, "dealt": 841, "synapt": 841, "intracellular": 841, "pyramid": [841, 868], "perpendicularli": 841, "erron": [841, 886], "peculiar": 841, "encapsul": [841, 868], "hcpmmp": [841, 886], "gave": [841, 886], "cartoon": 841, "pependicular": 841, "laser": 841, "ga": 841, "rubidium": 841, "superconduct": 841, "quantum": 841, "scaleogram": 841, "uncorrel": 841, "nb_conda_kernel": 843, "anaconda": [843, 845, 849, 850, 856, 886], "forum": [843, 844, 845, 848, 851, 852, 862, 864, 865, 866], "osmesa": 843, "xvfb": 843, "forg": [843, 845, 849, 853], "mesalib": 843, "latest": [843, 845, 853, 865, 886], "git": [843, 852], "miniconda": [843, 845], "miniforg": 843, "pythonpath": 843, "pythonhom": 843, "curl": [843, 845], "githubusercont": [843, 845], "unabl": [843, 867, 886], "nvidia": [843, 865], "driver": 843, "init_cuda": [843, 876], "pytest": [843, 845], "test_filt": 843, "multithread": [843, 865], "swr": 843, "cento": 843, "spyder": [843, 845, 848, 849, 865], "mesa_gl_version_overrid": 843, "rend": 843, "msaa": 843, "set_3d_opt": [843, 876, 886], "incomplet": [843, 874, 886], "prebuilt": 843, "xzvf": 843, "mesa_18": 843, "6_centos_lib": 843, "tgz": 843, "libgl_drivers_path": 843, "pwd": 843, "ld_library_path": 843, "went": [843, 844], "glxinfo": 843, "grep": [843, 845, 853], "uninstal": [843, 853], "gcp": 844, "travi": [844, 886], "virtualenv": 844, "8dfaa4a": 844, "bla": 844, "lapack": 844, "f614064": 844, "qtagg": 844, "post1": 844, "pyside6": 844, "traceback": 844, "modulenotfounderror": 844, "bashrc": [844, 850, 851], "zprofil": [844, 850], "zsh": [844, 850, 851], "troubleshoot": [844, 864, 866], "sustain": [845, 867], "volunt": 845, "welcom": 845, "anyon": [845, 867], "abid": 845, "fastest": [845, 851], "feel": [845, 852, 867, 886], "upstream": 845, "desktop": 845, "appreci": 845, "sudo": [845, 846, 851], "apt": [845, 846], "dmg": [845, 851], "atlassian": 845, "macport": [845, 851], "homebrew": [845, 851], "yourdomain": 845, "sooner": 845, "commit": [845, 867, 874, 886], "emac": 845, "vim": 845, "nano": 845, "subl": 845, "makefil": 845, "newest": 845, "guil": 845, "w32": 845, "ezwinport": 845, "path_to_git": 845, "mingw64": 845, "mnedev": 845, "path_to_anaconda": 845, "team": [845, 867], "yml": 845, "github_usernam": 845, "insert_your_actual_github_username_her": 845, "install_loc": 845, "opt": [845, 849, 850, 851], "blame": 845, "ignorerevsfil": 845, "rev": 845, "site_packag": 845, "requirements_test": 845, "requirements_doc": 845, "graphviz": 845, "graphviz_dot": 845, "conda_prefix": 845, "optipng": 845, "linter": 845, "restructuredtext": 845, "autobuild": 845, "doc8": 845, "url_of_remote_repo": 845, "nickname_of_remot": 845, "repo": [845, 867], "undoubtedli": 845, "checkout": 845, "colleagu": 845, "unstag": 845, "some_fil": 845, "some_new_fil": 845, "entireti": 845, "some_other_fil": 845, "bypass": [845, 886], "enh": 845, "some_testing_fil": 845, "new_tutorial_fil": 845, "stuck": 845, "secur": [845, 851], "secret": 845, "client": [845, 886], "test_evok": 845, "python_refer": 845, "rst": 845, "my_funct": 845, "my_new_funct": 845, "old_param": 845, "new_param": 845, "my_other_funct": 845, "depr_messag": 845, "changeset": 845, "minor": [845, 871, 874, 886], "typo": [845, 864, 886], "subsect": 845, "bugfix": [845, 853], "happi": 845, "credit": 845, "gh": [845, 886], "newcontrib": 845, "firstnam": 845, "lastnam": 845, "_your": 845, "test_topo": 845, "pep": 845, "ruff": 845, "hook": 845, "ins": 845, "camelcas": [845, 876], "snake_cas": 845, "nsampl": 845, "complic": [845, 886], "sphinxcontrib": 845, "bibtex": [845, 860], "citat": [845, 886], "bibliograph": 845, "bib": 845, "singleauthor2019": 845, "authoroneauthortwo2020": 845, "firstauthoretal2021a": 845, "firstauthoretal2021b": 845, "param_nam": 845, "test_docstring_paramet": 845, "mod": 845, "intersphinx": 845, "inventori": 845, "sphobjinv": 845, "dump": 845, "ext": 845, "backtick": [845, 865], "pdb": 845, "debugg": [845, 886], "failur": [845, 886], "test_io_evok": 845, "imit": 845, "noplot": 845, "regex_to_select_my_tutori": 845, "unrel": 845, "browse_raw": [845, 886], "mortem": 845, "pm": 845, "everyon": 845, "scientist": [845, 849, 864], "spare": 845, "streamlin": 845, "collabor": [845, 852, 867], "fruit": 845, "road": 845, "someon": 845, "occasion": [845, 862], "cosmet": 845, "backport": [845, 886], "whats_new": 845, "draft": 845, "wip": 845, "mrg": 845, "sty": 845, "azp": 845, "azur": 845, "exemplifi": 845, "tcsh": [846, 850, 851], "ubuntu": [846, 848, 851, 874], "bionic": 848, "beaver": 848, "1_0": 848, "intel": [848, 865], "catalina": [848, 850, 886], "appl": 848, "silicon": 848, "studio": [848, 849], "python_1": 848, "0_1": 848, "mamba": 849, "prioriti": 849, "h5io": [849, 865], "h5py": [849, 865], "pymatread": [849, 886], "vscode": 849, "microsoft": 849, "anaconda3": [849, 850], "pyqt5": 849, "pyqt": [849, 886], "pycharm": [849, 865], "paid": 849, "profession": 849, "cmd": 850, "bash_profil": 850, "__conda_setup": 850, "overflow": [850, 886], "leopard": 851, "powerpc": 851, "runtim": 851, "mne_convert_mne_data": 851, "mne_epochs2mat": [851, 871], "mne_raw2mat": 851, "mne_simu": 851, "xcode": 851, "xquartz": 851, "x11": 851, "libxt": 851, "dylib": 851, "bak": 851, "flat_namespac": 851, "netpbm": 851, "brew": 851, "app": 851, "nightli": [851, 886], "path_to_desired_install_loc": 851, "zxvf": 851, "path_to_archive_fil": 851, "pkg": 851, "untrust": 851, "privaci": [851, 867], "mne_root": [851, 868, 871, 886], "matlab_root": 851, "r2018b": 851, "undefin": 851, "mne_setup_sh": 851, "csh": 851, "mne_setup": [851, 871], "path_to_mn": 851, "path_to_matlab": 851, "emul": 851, "zshrc": 851, "cshrc": 851, "tcshrc": 851, "setenv": [851, 856], "mne_opengl_test": 851, "redraw": 851, "spent": 851, "revolut": 851, "interrupt": 851, "glx": 851, "nondirect": 851, "IT": 851, "vnc": 851, "card": [851, 886], "libxp": 851, "libxp6": 851, "debian": [851, 874, 886], "dpkg": 851, "libxp6_1": 851, "1ubuntu1_amd64": 851, "deb": 851, "libgfortran": 851, "libfortran": 851, "gnu": 851, "maxdepth": 851, "interoper": 852, "reimplement": 852, "cpp": [852, 886], "connectom": [852, 874], "compli": [852, 886], "alphacsc": 852, "pactool": 852, "microst": 852, "conpi": 852, "eelbrain": 852, "posthoc": 852, "prep": 852, "pyprep": 852, "sesam": 852, "sesameeg": 852, "invertmeeg": 852, "unix": [852, 886], "name_of_environ": 853, "fool": 853, "proof": 853, "old_mn": 853, "dep": 853, "hm": [856, 862], "pubsw": 856, "subscrib": 856, "modular": 857, "qt3d": 857, "babymeg": 857, "tmsi": 857, "refa": 857, "brainamp": 857, "ant": 857, "eegosport": 857, "gusbamp": 857, "sidebar": 860, "592483": 860, "gramfortetal2013a": 860, "gramfortetal2014": 860, "bibliographi": 860, "meg2443": 861, "vanish": 861, "advers": 861, "preliminari": 861, "stamp": 861, "mm2": 861, "ico5": 861, "tessel": [861, 871], "prerequisit": 861, "bulletproof": 861, "feasibl": 861, "sep": 861, "bem_sol": 861, "reestablish": 861, "corregistr": 861, "charg": 861, "photograph": 861, "uninterest": 861, "epilept": 861, "infrequ": 861, "hesit": [862, 865], "siemen": [862, 868], "sonata": 862, "mprage": [862, 865, 868], "interspers": 862, "lv": 862, "audvis_raw": 862, "auvi": 862, "agre": 862, "bst_rest": [862, 876], "khz": 862, "dicom": [862, 871, 886], "richli": 862, "timon": [862, 886], "9999": 862, "msr": 862, "retrospect": 862, "satisfactori": 862, "chin": 862, "respir": [862, 868, 871], "hypnogram": 862, "rechtschaffen": 862, "kale": 862, "erlangen": 862, "germani": 862, "shaft": [862, 874], "pend": 862, "craft": 862, "lrp": 862, "ern": 862, "neuroscientist": 863, "keystrok": 863, "peak_find": [863, 876, 886], "appnop": 865, "nope": 865, "nsappsleepdis": 865, "tempt": 865, "benfrederickson": 865, "dont": 865, "stackoverflow": 865, "21752259": 865, "write_": 865, "resid": 865, "plot_find_ecg_artifact": 865, "ordinarili": 865, "mkl": 865, "openmp": 865, "omp_num_thread": 865, "openblas_num_thread": 865, "num_cpu": 865, "implic": 865, "simplist": 865, "epochs_path": 865, "protrud": 865, "shrunken": 865, "dura": 865, "mri_norm": 865, "xopt": 865, "gentl": 865, "listserv": 865, "recon_al": 865, "autorecon2": 865, "autorecon3": 865, "formal": 867, "extraordinari": 867, "clarifi": [867, 886], "profit": 867, "entiti": [867, 871], "openli": 867, "affili": 867, "discours": 867, "behalf": 867, "barrier": 867, "leadership": 867, "neutral": 867, "tradition": [867, 868], "reward": 867, "benevol": 867, "dictat": 867, "defer": 867, "vote": 867, "deadlock": 867, "fork": 867, "disagre": 867, "deleg": 867, "appoint": 867, "successor": 867, "faith": 867, "director": 867, "ceo": [867, 886], "everydai": 867, "peer": 867, "privileg": 867, "servic": [867, 886], "scope": 867, "strateg": 867, "polici": [867, 886], "nomin": 867, "willing": 867, "capac": 867, "infrastructur": [867, 886], "outreach": 867, "deliber": 867, "divers": 867, "viewpoint": 867, "talent": 867, "grace": 867, "retir": 867, "eject": 867, "deem": 867, "harm": 867, "financi": 867, "employ": 867, "disclos": 867, "recus": 867, "themself": 867, "sparingli": 867, "apach": 867, "veto": 867, "rational": 867, "opinion": 867, "anticip": [867, 886], "suffic": 867, "usurp": 867, "countri": 867, "gift": 867, "partnership": 867, "approv": 867, "commenc": 867, "laps": 867, "pursu": 867, "monei": 867, "donor": 867, "umbrella": 867, "trademark": 867, "invit": 867, "waiv": 867, "copyright": 867, "mole": 868, "sensibl": 868, "femtotesla": 868, "typecast": 868, "unread": [868, 886], "electrocardiographi": 868, "electromyographi": 868, "celsiu": 868, "channels_3_and_4": 868, "boldsymbol": 868, "c_0": 868, "g_": 868, "infti": 868, "r_j": 868, "t_d": 868, "underbrac": 868, "b_": 868, "b_n": 868, "dotso": 868, "uc_n": 868, "constitut": 868, "orthonorm": 868, "c_e": 868, "complement": 868, "perp": 868, "uu": 868, "segonn": 868, "_brain_surfac": 868, "_inner_skull_surfac": 868, "_outer_skull_surfac": 868, "_outer_skin_surfac": 868, "availablili": 868, "fov": 868, "dcm2niix": 868, "mne_organize_dicom": 868, "flash05": 868, "fat32": 868, "mri_ms_fitparm": 868, "mri_synthes": 868, "fsl_rigid_regist": 868, "flash5_reg": 868, "cor": 868, "mri_make_bem_surfac": 868, "tringul": 868, "t_x": 868, "ti": 868, "mm3": 868, "hardli": 868, "mnitalairach": 868, "mni305": 868, "y_2": 868, "z_2": 868, "y_1": 868, "z_1": 868, "x_0": 868, "y_0": 868, "z_0": 868, "x_k": 868, "y_k": 868, "z_k": 868, "jk": 868, "9688": [868, 886], "0485": 868, "9189": 868, "t_1": 868, "s_1": 868, "s_n": 868, "t_2": 868, "filessepar": 868, "t_3": 868, "mghformat": 868, "t_4": 868, "hardcod": 868, "idiosyncrasi": 868, "conceiv": 868, "s_p": 868, "50mm": 868, "r_0": 868, "e_x": 868, "e_i": 868, "e_z": 868, "r_c": 868, "r_d": 868, "0d": 868, "n_k": 868, "w_": 868, "kp": 868, "sixteen": 868, "tm": [868, 871, 886], "centerpoint": 868, "mne_list_coil_def": 868, "3012": 868, "8mm": 868, "3013": 868, "4001": 868, "wh": 868, "3600": 868, "4003": 868, "4004": 868, "4005": 868, "5001": 868, "5002": 868, "5003": 868, "5004": 868, "6001": 868, "nx": 868, "ny": 868, "nz": [868, 886], "r_1": 868, "dotsc": 868, "r_m": 868, "mu_1": 868, "mu_m": 868, "int_": 868, "v_": 868, "ly": 868, "average_forward_solut": [868, 876], "ensu": 868, "posteriori": 868, "viabl": 868, "3p": 868, "unconstrain": 868, "mx": 868, "smoother": [868, 886], "arriv": 868, "bigl": 868, "bigr": 868, "u_c": 868, "lambda_c": 868, "grg": 868, "possess": 868, "varepsilon_k": 868, "sigma_k": 868, "rout": 868, "superscript": 868, "v_k": 868, "w_k": 868, "propto": 868, "dimensionless": 868, "tendenc": 868, "divis": [868, 886], "2_k": 868, "g_i": 868, "u_": 868, "lambda_": 868, "_i": 868, "noiseless": 868, "misfit": 868, "pi_k": 868, "recolor": 868, "eigenfield": 868, "n_d": 868, "a_d": 868, "postsynapt": 868, "microscop": 868, "rigidli": 868, "floc": 868, "thereaft": 868, "vloc": 868, "favor": [868, 886], "1p": 868, "2p": 868, "l_": 868, "eff": 868, "w_i": 868, "x_i": 868, "c_y": 868, "l_i": 868, "w_1": 868, "w_2": 868, "l_1": 868, "l_2": 868, "supposedli": 868, "x_j": 868, "t_j": 868, "biject": 868, "smudg": 868, "n_j": 868, "prod_": 868, "kindli": 869, "function_nam": 869, "w3school": 870, "carpentri": 870, "lesson": 870, "fiff_": 871, "startup": 871, "mne_ex": 871, "fiff_setup_read_raw": 871, "fiff_read_raw_seg": 871, "fiff_find_evok": 871, "fiff_read_bad_channel": 871, "fiff_read_ctf_comp": 871, "fiff_read_evok": 871, "fiff_read_evoked_al": 871, "fiff_read_meas_info": 871, "fiff_read_mri": 871, "fiff_read_proj": 871, "fiff_read_raw_segment_tim": 871, "fiff_pick_channel": 871, "fiff_pick_channels_evok": 871, "fiff_pick_info": 871, "fiff_pick_typ": 871, "fiff_pick_types_evok": 871, "fiff_invert_transform": 871, "fiff_reset_ch_po": 871, "fiff_transform_eeg_ch": 871, "fiff_transform_meg_ch": 871, "fiff_define_const": 871, "fiff_dir_tree_find": 871, "fiff_list_dir_tre": 871, "fiff_make_dir_tre": 871, "fiff_open": 871, "fiff_read_named_matrix": 871, "fiff_read_tag": 871, "fiff_read_tag_info": 871, "fiff_split_name_list": 871, "fiff_end_block": 871, "fiff_end_fil": 871, "fiff_start_block": 871, "fiff_start_fil": 871, "fiff_write_ch_info": 871, "fiff_write_coord_tran": 871, "fiff_write_ctf_comp": 871, "fiff_write_dig_point": 871, "fiff_write_complex": 871, "fiff_write_complex_matrix": 871, "fiff_write_doubl": 871, "fiff_write_double_complex": 871, "fiff_write_double_complex_matrix": 871, "fiff_write_double_matrix": 871, "fiff_write_evok": 871, "repons": 871, "fiff_write_float": 871, "fiff_write_float_matrix": 871, "fiff_write_id": 871, "fiff_write_int": 871, "fiff_write_int_matrix": 871, "fiff_write_name_list": 871, "fiff_write_named_matrix": 871, "fiff_write_proj": 871, "fiff_write_short": 871, "fiff_write_str": 871, "fiff_finish_writing_raw": 871, "fiff_start_writing_raw": 871, "fiff_write_dig_fil": 871, "fiff_write_raw_buff": 871, "mne_add_coil_def": 871, "mne_load_coil_def": 871, "mne_compensate_to": 871, "mne_get_current_comp": 871, "mne_make_compens": 871, "mne_make_projector_info": 871, "mne_make_projector": 871, "mne_set_current_comp": 871, "mne_pick_channels_cov": 871, "mne_pick_channels_forward": 871, "mne_read_bem_surfac": 871, "mne_read_cov": 871, "mne_read_epoch": 871, "mne_read_ev": 871, "mne_read_forward_solut": 871, "mne_read_inverse_oper": 871, "mne_read_morph_map": 871, "mne_read_noise_cov": 871, "mne_read_source_spac": 871, "mne_write_cov": 871, "mne_write_cov_fil": 871, "mne_write_ev": 871, "mne_write_inverse_sol_stc": 871, "mne_write_inverse_sol_w": 871, "mne_read_stc_fil": 871, "mne_read_stc_file1": 871, "mne_read_w_fil": 871, "mne_read_w_file1": 871, "mne_write_stc_fil": 871, "mne_write_stc_file1": 871, "mne_write_w_fil": 871, "mne_write_w_file1": 871, "mne_read_label_fil": 871, "mne_write_label_fil": 871, "mne_label_time_cours": 871, "mne_read_curvatur": 871, "mne_read_surfac": 871, "mne_reduce_surfac": 871, "reducepatch": 871, "mne_write_surfac": 871, "mne_block_diag": 871, "mne_combine_xyz": 871, "mne_file_nam": 871, "mne_find_channel": 871, "mne_find_source_space_hemi": 871, "mne_fread3": 871, "mne_fwrite3": 871, "mne_make_combined_event_fil": 871, "mne_omit_first_lin": 871, "mne_setup_toolbox": 871, "mne_transform_coordin": 871, "mne_collect_transform": 871, "mne_transpose_named_matrix": 871, "mne_transform_source_space_to": 871, "mne_ex_average_epoch": 871, "mne_ex_cancel_nois": 871, "mne_ex_compute_invers": 871, "mne_ex_data_set": 871, "mne_ex_evoked_grad_amp": 871, "mne_ex_read_epoch": 871, "mne_ex_read_evok": 871, "mne_ex_read_raw": 871, "mne_ex_read_write_raw": 871, "mne_copy_processing_histori": 871, "revis": 871, "coil_geometry_inform": 871, "fiffb_meas_info": 871, "mne_compute_raw_invers": 871, "fiffv_meg_ch": 871, "fiffv_ref_meg_ch": 871, "fiffv_eef_ch": 871, "fiffv_mcg_ch": 871, "mcg": 871, "fiffv_stim_ch": 871, "fiffv_eog_ch": 871, "fiffv_emg_ch": 871, "fiffv_ecg_ch": 871, "fiffv_misc_ch": 871, "fiffv_resp_ch": 871, "fiffv_coord_unknown": 871, "fiffv_coord_devic": 871, "fiffv_coord_isotrak": 871, "fiffv_coord_hpi": 871, "fiffv_coord_mri_slic": 871, "fiffv_coord_mri_displai": 871, "fiffv_coord_dicom_devic": 871, "fiffv_coord_imaging_devic": 871, "fiffv_mne_coord_tufts_eeg": 871, "tuft": 871, "fiffv_mne_coord_ctf_devic": 871, "1001": 871, "fiffv_mne_coord_ctf_head": 871, "fiffv_aspect_averag": 871, "fiffv_aspect_std_err": 871, "fiffv_aspect_singl": 871, "fiffv_aspect_subaverag": 871, "fiffv_aspect_altaverag": 871, "fiffv_aspect_sampl": 871, "fiffv_aspect_power_dens": 871, "fiffv_aspect_dipole_wav": 871, "fiffv_bem_surf_id_unknown": 871, "fiffv_bem_surf_id_brain": 871, "fiffv_bem_surf_id_skul": 871, "fiffv_bem_surf_id_head": 871, "fiffv_point_hpi": 871, "fiffv_point_ecg": 871, "fiffv_point_extra": 871, "fiffv_point_lpa": 871, "fiffv_point_rpa": 871, "fiffv_mne_meg": 871, "fiffv_mne_eeg": 871, "fiffv_mne_meg_eeg": 871, "fiffv_mne_unknown_cov": 871, "fiffv_mne_noise_cov": 871, "fiffv_mne_sensor_cov": 871, "fiffv_mne_source_cov": 871, "fiffv_mne_fmri_prior_cov": 871, "fiffv_mne_signal_cov": 871, "fiffv_mne_depth_prior_cov": 871, "fiffv_mne_orient_prior_cov": 871, "fiffv_proj_item_non": 871, "fiffv_proj_item_dip_fix": 871, "fiffv_proj_item_dip_rot": 871, "fiffv_proj_item_homog_grad": 871, "fiffv_proj_item_homog_field": 871, "fiffv_proj_item_eeg_avref": 871, "uint32": 871, "parent_id": 871, "nent": 871, "nchild": 871, "1970": [871, 886], "fiffv_coord": 871, "fiffv_mne_coord": 871, "fiff_point": 871, "num_point": 871, "char": [871, 886], "fv": 871, "struct": 871, "fiff_eeg_ch": 871, "coil_tran": 871, "eeg_loc": 871, "six": 871, "10unit_mul": 871, "fiffv_proj_item": 871, "fiffv_mne_proj_item": 871, "decalibr": 871, "row_cal": 871, "col_cal": 871, "tri_area": 871, "tri_cent": 871, "centroid": 871, "tri_nn": 871, "mne_add_patch_info": 871, "sol_grad": 871, "sing": 871, "eigen_lead": 871, "eigen_field": 871, "source_cov": 871, "cond1": 872, "cond2": 872, "addpath": 872, "pop_fileio": 872, "pop_eegfiltnew": 872, "pop_averef": 872, "pop_select": 872, "pop_runica": 872, "pop_binica": 872, "pop_compprop": 872, "comp_num": 872, "winhandl": 872, "comphead": 872, "pop_selectcomp": 872, "list_of_components_to_exclud": 872, "pop_epoch": 872, "eeg_epoch": 872, "pop_timtopo": 872, "pop_compareerp": 872, "eeg_epochs1": 872, "eeg_epochs2": 872, "pop_saveset": 872, "lfreq": 872, "hfreq": 872, "filtered_raw": 872, "bdfl": 873, "nutmegtrip": 874, "youtub": [874, 886], "cluster_based_statist": 874, "patsi": 874, "dmatric": 874, "4859": 874, "2852": 874, "3585": 874, "openneuro": 874, "adult": 874, "dcm": 874, "kymata": 874, "watch": 874, "bnci": 874, "horizon": 874, "pde": 874, "swig": 874, "ambit": 874, "useless": 874, "recruit": 874, "rudimentari": 874, "crossspectrum": 874, "multitaperspectrum": 874, "6290": 874, "7671": 874, "8026": 874, "8724": 874, "9045": 874, "pr": 874, "6609": 874, "6629": 874, "6672": 874, "6673": 874, "8397": 874, "8892": 874, "mnefun": 874, "ptfce": 874, "mayavi": [874, 886], "7162": 874, "cloud": 874, "dask": 874, "czi": 874, "7751": 874, "docker": 874, "underscore_cas": 876, "themat": 876, "read_raw_curri": [876, 886], "read_raw_nedf": [876, 886], "read_mrk": 876, "get_meg_helmet_surf": 876, "get_volume_labels_from_src": [876, 886], "parse_config": 876, "read_evoked_besa": [876, 886], "read_evokeds_mff": [876, 886], "read_morph_map": [876, 886], "read_reject_paramet": 876, "write_label": 876, "export_epoch": [876, 886], "export_evok": [876, 886], "add_background_imag": 876, "compare_fiff": 876, "mne_analyze_colormap": 876, "plot_csd": 876, "plot_epochs_psd_topomap": [876, 886], "plot_evok": [876, 886], "plot_evoked_topomap": [876, 886], "plot_evoked_joint": [876, 886], "plot_ica_properti": [876, 886], "plot_ica_scor": [876, 886], "plot_ica_overlai": [876, 886], "plot_montag": [876, 886], "plot_raw_psd": [876, 886], "plot_regression_weight": [876, 886], "plot_volume_source_estim": [876, 886], "plot_tfr_topomap": [876, 886], "plot_topo_image_epoch": [876, 886], "get_3d_backend": [876, 886], "use_3d_backend": [876, 886], "close_3d_figur": 876, "close_all_3d_figur": 876, "get_browser_backend": [876, 886], "equalize_channel": [876, 886], "annotate_nan": [876, 886], "compute_fine_calibr": [876, 886], "compute_maxwell_basi": [876, 886], "ica_find_ecg_ev": 876, "ica_find_eog_ev": 876, "equalize_bad": [876, 886], "maxwell_filter_prepare_emptyroom": [876, 886], "read_eog_regress": 876, "realign_raw": [876, 886], "regress_artifact": [876, 886], "read_ica_eeglab": [876, 886], "read_fine_calibr": 876, "write_fine_calibr": 876, "short_channel": [876, 886], "project_sensors_onto_brain": [876, 886], "make_montage_volum": [876, 886], "warp_montag": [876, 886], "estimate_ringing_sampl": 876, "extract_chpi_locs_kit": [876, 886], "concatenate_ev": 876, "count_ev": [876, 886], "match_event_nam": [876, 886], "shift_time_ev": [876, 886], "match_channel_ord": 876, "pick_channels_cov": 876, "compute_whiten": [876, 886], "write_fiduci": 876, "locate_ieeg": [876, 886], "create_default_subject": [876, 886], "head_to_mni": 876, "head_to_mri": [876, 886], "read_lta": [876, 886], "apply_volume_registr": [876, 886], "apply_volume_registration_point": [876, 886], "add_source_space_dist": [876, 886], "decimate_surfac": [876, 886], "complete_surface_info": 876, "distance_to_bem": [876, 886], "compute_rank_invers": 876, "read_beamform": [876, 886], "grade_to_tri": 876, "grade_to_vertic": 876, "grow_label": [876, 886], "random_parcel": 876, "transform_surface_to": [876, 886], "get_decimated_surfac": [876, 886], "pick_channels_csd": 876, "dpss_window": [876, 886], "cwt": 876, "ttest_ind_no_p": [876, 886], "spatial_dist_adjac": [876, 886], "spatial_tris_adjac": [876, 886], "spatial_inter_hemi_adjac": [876, 886], "spatio_temporal_src_adjac": [876, 886], "spatio_temporal_dist_adjac": [876, 886], "select_source_in_label": 876, "psdestim": 876, "timefrequ": [876, 886], "open_doc": [876, 886], "set_log_fil": 876, "set_memmap_min_s": 876, "get_cuda_memori": 876, "set_cuda_devic": [876, 886], "11631": 886, "jacob": 886, "woessner": 886, "11469": 886, "sawradip": 886, "saha": 886, "11458": 886, "binn": 886, "11465": 886, "hyonyoung": 886, "shin": 886, "11366": 886, "11536": 886, "11470": 886, "ebert": 886, "scheltienn": 886, "11078": 886, "barth\u00e9lemi": 886, "11397": 886, "11401": 886, "11407": 886, "11166": 886, "11388": 886, "11556": 886, "11419": 886, "11430": 886, "11440": 886, "11436": 886, "microelectrod": 886, "11567": 886, "imwarp": 886, "transform_point": 886, "11572": 886, "11614": 886, "10554": 886, "11152": 886, "11632": 886, "11668": 886, "qt6": 886, "aa_usehighdpipixmap": 886, "11662": 886, "florin": 886, "11479": 886, "stone": 886, "setuptool": 886, "11454": 886, "arn": 886, "pelzer": 886, "11666": 886, "timur": 886, "sokhin": 886, "11457": 886, "zvi": 886, "baratz": 886, "sanit": 886, "11399": 886, "splash": 886, "11398": 886, "11402": 886, "11421": 886, "11427": 886, "11441": 886, "11450": 886, "11489": 886, "inconsist": 886, "11473": 886, "11499": 886, "11409": 886, "11537": 886, "11562": 886, "11563": 886, "11521": 886, "11569": 886, "11502": 886, "gerster": 886, "11607": 886, "11612": 886, "11664": 886, "11654": 886, "11616": 886, "11500": 886, "aligned_ct": 886, "unalign": 886, "warp_montage_volum": 886, "pick_channels_evok": 886, "11665": 886, "11333": 886, "tooma": 886, "anij\u00e4rv": 886, "11237": 886, "11236": 886, "11241": 886, "jevri": 886, "repr": 886, "11357": 886, "11359": 886, "11096": 886, "11353": 886, "11283": 886, "11329": 886, "11375": 886, "hennei": 886, "11310": 886, "santeri": 886, "ruuskanen": 886, "11289": 886, "mauricio": 886, "cesped": 886, "tenorio": 886, "11235": 886, "hasegan": 886, "dinara": 886, "issagaliyeva": 886, "jennif": 886, "behnk": 886, "hakimeh": 886, "aslsardroud": 886, "pavel": 886, "navratil": 886, "ear_left": 886, "ear_right": 886, "11255": 886, "11263": 886, "torr": 886, "ortiz": 886, "11351": 886, "enzo": 886, "altamiranda": 886, "reject_": 886, "11244": 886, "11303": 886, "11290": 886, "wrongli": 886, "11248": 886, "11258": 886, "erkka": 886, "heinila": 886, "outli": 886, "11298": 886, "11345": 886, "11311": 886, "11300": 886, "11340": 886, "11318": 886, "11346": 886, "11344": 886, "errantli": 886, "11347": 886, "11293": 886, "11322": 886, "11369": 886, "11361": 886, "nowadai": 886, "interp_from": 886, "interp_kind": 886, "11371": 886, "brayet": 886, "luka": 886, "hecker": 886, "omer": 886, "shubi": 886, "merk": 886, "11073": 886, "10656": 886, "10784": 886, "11011": 886, "11006": 886, "6233": 886, "10986": 886, "11048": 886, "8639": 886, "11083": 886, "11051": 886, "11020": 886, "11075": 886, "valerii": 886, "chirkov": 886, "electroderm": 886, "11090": 886, "11108": 886, "19080": 886, "11099": 886, "11077": 886, "11094": 886, "11095": 886, "11186": 886, "eduard": 886, "ort": 886, "11116": 886, "11147": 886, "11150": 886, "11185": 886, "11154": 886, "11141": 886, "11232": 886, "11159": 886, "11196": 886, "gemein": 886, "unlabel": 886, "11074": 886, "sebastiaan": 886, "mathot": 886, "11072": 886, "chetan": 886, "gohil": 886, "11004": 886, "carlstr\u00f6m": 886, "schad": 886, "11190": 886, "wetzel": 886, "11019": 886, "sena": 886, "11049": 886, "11084": 886, "11145": 886, "11182": 886, "11040": 886, "marian": 886, "dovgialo": 886, "11171": 886, "11181": 886, "11193": 886, "11102": 886, "11081": 886, "11191": 886, "6870": 886, "simeon": 886, "11197": 886, "11212": 886, "11203": 886, "11201": 886, "h\u00fcseyin": 886, "orkun": 886, "elma": 886, "deprecationwarn": 886, "11123": 886, "11050": 886, "show_toolbar": 886, "10184": 886, "skirt": 886, "add_channels_epoch": 886, "11180": 886, "11046": 886, "welzel": 886, "luzpaz": 886, "10974": 886, "ilia": 886, "machaira": 886, "10942": 886, "tziona": 886, "nessaiv": 886, "10922": 886, "mingjian": 886, "he": 886, "10736": 886, "jordan": 886, "drew": 886, "10632": 886, "courtemanch": 886, "10515": 886, "alessandro": 886, "tonin": 886, "10555": 886, "powel": 886, "10627": 886, "evan": 886, "hathawai": 886, "10615": 886, "10501": 886, "10460": 886, "10544": 886, "10720": 886, "10464": 886, "10699": 886, "10534": 886, "10568": 886, "10567": 886, "10533": 886, "10557": 886, "10591": 886, "10571": 886, "10587": 886, "10125": 886, "benerradi": 886, "10606": 886, "10610": 886, "10614": 886, "10611": 886, "10633": 886, "10661": 886, "10668": 886, "10681": 886, "timeformat": 886, "yyyi": 886, "_convert_tim": 886, "10674": 886, "kern": 886, "10694": 886, "10572": 886, "10373": 886, "10734": 886, "michiru": 886, "kaneda": 886, "10284": 886, "10749": 886, "10788": 886, "10892": 886, "10940": 886, "vref": 886, "10823": 886, "10979": 886, "_project_onto_surfac": 886, "return_nn": 886, "10930": 886, "10927": 886, "reza": 886, "nasri": 886, "hypnodyn": 886, "zmax": 886, "10754": 886, "frederik": 886, "weber": 886, "10718": 886, "t1t2": 886, "10639": 886, "toivonen": 886, "10217": 886, "wang": 886, "10517": 886, "10470": 886, "dold": 886, "10485": 886, "10487": 886, "10500": 886, "10491": 886, "10662": 886, "10866": 886, "10957": 886, "10513": 886, "10493": 886, "10504": 886, "10705": 886, "10521": 886, "10547": 886, "10543": 886, "10912": 886, "10560": 886, "10619": 886, "10618": 886, "shoorangiz": 886, "10638": 886, "10664": 886, "honor": 886, "10686": 886, "10685": 886, "10688": 886, "8754": 886, "10703": 886, "10730": 886, "10753": 886, "10765": 886, "po6": 886, "blender": 886, "10778": 886, "10802": 886, "10471": 886, "10851": 886, "10898": 886, "10990": 886, "10968": 886, "10936": 886, "10963": 886, "10978": 886, "10531": 886, "bilinear": 886, "set_interpol": 886, "10617": 886, "10715": 886, "10950": 886, "10925": 886, "10945": 886, "adelin": 886, "fecker": 886, "ciok": 886, "archit": 886, "singhal": 886, "ashlei": 886, "beaslei": 886, "dominiqu": 886, "makowski": 886, "hamid": 886, "maymandi": 886, "naveen": 886, "srinivasan": 886, "sondr": 886, "foslien": 886, "10396": 886, "10089": 886, "senwen": 886, "deng": 886, "10076": 886, "zerfowski": 886, "10054": 886, "etienn": 886, "montalivet": 886, "10174": 886, "veillett": 886, "10307": 886, "10281": 886, "9952": 886, "10379": 886, "9922": 886, "9978": 886, "9994": 886, "9929": 886, "concis": 886, "__repr__": 886, "10042": 886, "sosulski": 886, "10056": 886, "10077": 886, "10102": 886, "10058": 886, "10109": 886, "10115": 886, "10119": 886, "10114": 886, "10116": 886, "dpi": 886, "10126": 886, "10129": 886, "10135": 886, "10142": 886, "10166": 886, "10175": 886, "10182": 886, "10186": 886, "10185": 886, "9969": 886, "10019": 886, "10200": 886, "10255": 886, "10202": 886, "9972": 886, "10206": 886, "10220": 886, "10230": 886, "10249": 886, "10243": 886, "10212": 886, "ui": 886, "10222": 886, "10183": 886, "10247": 886, "10297": 886, "10299": 886, "10330": 886, "10384": 886, "10417": 886, "10418": 886, "10408": 886, "subsurfac": 886, "10421": 886, "joshua": 886, "teve": 886, "latin": 886, "10429": 886, "eberlein": 886, "10431": 886, "rawmff": 886, "10304": 886, "10361": 886, "shift_jist": 886, "10356": 886, "10093": 886, "adina": 886, "wagner": 886, "loadtxt": 886, "10189": 886, "federico": 886, "zamberlan": 886, "nikolai": 886, "chapochnikov": 886, "9957": 886, "led": 886, "9966": 886, "9998": 886, "9968": 886, "alphanumer": 886, "10002": 886, "9975": 886, "9980": 886, "9990": 886, "suboptim": 886, "9991": 886, "10004": 886, "9970": 886, "10021": 886, "10040": 886, "10358": 886, "10047": 886, "10399": 886, "10073": 886, "10087": 886, "annotate_": 886, "meas_tim": 886, "10067": 886, "10118": 886, "10074": 886, "10082": 886, "10112": 886, "trip": 886, "10177": 886, "10127": 886, "10132": 886, "10095": 886, "10176": 886, "stout": 886, "10210": 886, "10235": 886, "10267": 886, "german": 886, "de_d": 886, "french": 886, "fr_fr": 886, "italian": 886, "it_it": 886, "10277": 886, "10292": 886, "10309": 886, "10265": 886, "10415": 886, "initial_valu": 886, "10289": 886, "10324": 886, "10342": 886, "10347": 886, "10313": 886, "10400": 886, "10335": 886, "mislead": 886, "10393": 886, "10392": 886, "10401": 886, "9960": 886, "10039": 886, "10348": 886, "annotate_flat": 886, "10143": 886, "max_ori_out": 886, "10366": 886, "10323": 886, "tempita": 886, "10211": 886, "julia": 886, "guiomar": 886, "niso": 886, "gal\u00e1n": 886, "steve": 886, "matindi": 886, "hartmann": 886, "julien": 886, "derollepot": 886, "xiaokai": 886, "xia": 886, "bannier": 886, "darin": 886, "erat": 886, "sleiter": 886, "gate": 886, "evgeni": 886, "goldstein": 886, "riessariu": 886, "stargardski": 886, "9801": 886, "9575": 886, "nirsport2": 886, "9348": 886, "9401": 886, "9376": 886, "9430": 886, "9481": 886, "9637": 886, "9872": 886, "9782": 886, "9858": 886, "9640": 886, "9892": 886, "9725": 886, "ckdtree": 886, "9568": 886, "9643": 886, "9369": 886, "9427": 886, "9391": 886, "9396": 886, "9424": 886, "9403": 886, "9463": 886, "9431": 886, "9443": 886, "9406": 886, "9438": 886, "datablock": 886, "acquist": 886, "9437": 886, "raimondo": 886, "9445": 886, "9419": 886, "9458": 886, "9444": 886, "9503": 886, "9484": 886, "9697": 886, "9468": 886, "9514": 886, "erica": 886, "9541": 886, "9519": 886, "9525": 886, "9529": 886, "9558": 886, "9555": 886, "9553": 886, "insens": 886, "9544": 886, "9556": 886, "9578": 886, "9570": 886, "9545": 886, "9540": 886, "9601": 886, "9605": 886, "abort": 886, "9614": 886, "9516": 886, "9618": 886, "9658": 886, "9585": 886, "9682": 886, "9684": 886, "9789": 886, "9694": 886, "9586": 886, "9742": 886, "9796": 886, "9763": 886, "9784": 886, "9810": 886, "revamp": 886, "9754": 886, "9847": 886, "9860": 886, "9861": 886, "9862": 886, "9863": 886, "9871": 886, "9881": 886, "9891": 886, "9795": 886, "9800": 886, "9613": 886, "9845": 886, "9851": 886, "9869": 886, "9859": 886, "9687": 886, "9708": 886, "9706": 886, "9378": 886, "9381": 886, "9712": 886, "9719": 886, "chronolog": 886, "9765": 886, "9849": 886, "9897": 886, "9920": 886, "9384": 886, "9404": 886, "9435": 886, "9531": 886, "9447": 886, "assertionerror": 886, "9612": 886, "9831": 886, "protect": 886, "9522": 886, "9485": 886, "9513": 886, "9489": 886, "9524": 886, "9603": 886, "9528": 886, "imposs": 886, "9893": 886, "9535": 886, "9564": 886, "9565": 886, "9629": 886, "9771": 886, "9607": 886, "9663": 886, "9630": 886, "9580": 886, "9758": 886, "dollar": 886, "9695": 886, "9746": 886, "9799": 886, "9804": 886, "9777": 886, "9780": 886, "9933": 886, "9864": 886, "9873": 886, "9940": 886, "9867": 886, "9904": 886, "pysurf": 886, "kit2fiff": 886, "mne_kit_gui": 886, "9505": 886, "9596": 886, "prox": 886, "outperform": 886, "9608": 886, "9493": 886, "9685": 886, "has_": 886, "_data": 886, "9781": 886, "add_figs_to_sect": 886, "add_slider_to_sect": 886, "add_images_to_sect": 886, "add_bem_to_sect": 886, "add_htmls_to_sect": 886, "sort_sect": 886, "9815": 886, "center_cmap": 886, "9843": 886, "detect_artifact": 886, "9909": 886, "fede": 886, "gansheng": 886, "banvil": 886, "josh": 886, "koen": 886, "sumalyo": 886, "datta": 886, "pade": 886, "koehler": 886, "rotem": 886, "falach": 886, "sanderson": 886, "enrico": 886, "varano": 886, "judi": 886, "zhu": 886, "matteo": 886, "anelli": 886, "apoorva": 886, "karek": 886, "silvia": 886, "cotroneo": 886, "maggi": 886, "9192": 886, "9285": 886, "9278": 886, "9124": 886, "9203": 886, "9174": 886, "refactor": 886, "9088": 886, "9156": 886, "9043": 886, "9096": 886, "8867": 886, "8739": 886, "9169": 886, "yokogawa": 886, "8813": 886, "8799": 886, "ipyvtk_simpl": 886, "8503": 886, "8346": 886, "8896": 886, "8723": 886, "8738": 886, "8789": 886, "9268": 886, "8790": 886, "8697": 886, "8801": 886, "8829": 886, "8744": 886, "8762": 886, "9037": 886, "8793": 886, "9262": 886, "keypress": 886, "8806": 886, "starstim": 886, "enobio": 886, "8734": 886, "tristan": 886, "stenner": 886, "8760": 886, "8783": 886, "8822": 886, "8771": 886, "8805": 886, "8794": 886, "auto_clos": 886, "8730": 886, "8841": 886, "yu": 886, "luo": 886, "8858": 886, "checker": 886, "pylanc": 886, "8862": 886, "8874": 886, "interobail": 886, "8868": 886, "qt_mac_wants_lay": 886, "8959": 886, "8879": 886, "8834": 886, "9023": 886, "9015": 886, "9087": 886, "9113": 886, "9118": 886, "9103": 886, "9175": 886, "9149": 886, "9166": 886, "bierer": 886, "9210": 886, "9136": 886, "9241": 886, "9261": 886, "9269": 886, "9270": 886, "9141": 886, "9347": 886, "misbehav": 886, "8013": 886, "9207": 886, "9187": 886, "9151": 886, "9162": 886, "9152": 886, "x_label": 886, "9115": 886, "9062": 886, "8989": 886, "spectral_connect": 886, "8839": 886, "8844": 886, "8311": 886, "macosx": 886, "8688": 886, "8983": 886, "superset": 886, "8675": 886, "8713": 886, "8689": 886, "8954": 886, "8884": 886, "num_sampl": 886, "duration_in_sec": 886, "8712": 886, "8780": 886, "8804": 886, "8842": 886, "8857": 886, "9315": 886, "8956": 886, "9284": 886, "9317": 886, "8845": 886, "8811": 886, "bailei": 886, "8736": 886, "8831": 886, "8728": 886, "8731": 886, "8996": 886, "8752": 886, "8759": 886, "8775": 886, "8800": 886, "8817": 886, "8821": 886, "8856": 886, "8965": 886, "8985": 886, "8891": 886, "8963": 886, "9109": 886, "9178": 886, "9252": 886, "9027": 886, "9236": 886, "9246": 886, "9305": 886, "9277": 886, "9099": 886, "plot_sensors_connect": 886, "cbar_label": 886, "9248": 886, "read_select": 886, "8870": 886, "tf_dic": 886, "9122": 886, "9033": 886, "ana": 886, "radanov": 886, "magalvan": 886, "mista": 886, "christina": 886, "zhao": 886, "giorgio": 886, "marinato": 886, "jori": 886, "den": 886, "bossch": 886, "gensollen": 886, "treguer": 886, "austin": 886, "hurst": 886, "aniket": 886, "pradhan": 886, "hongjiang": 886, "kuziek": 886, "qianliang": 886, "tod": 886, "flak": 886, "8354": 886, "7070": 886, "imgag": 886, "7717": 886, "kyle": 886, "mathewson": 886, "8275": 886, "8445": 886, "keith": 886, "doell": 886, "8553": 886, "8351": 886, "8190": 886, "8539": 886, "8379": 886, "8366": 886, "8642": 886, "8447": 886, "8323": 886, "8449": 886, "8402": 886, "8460": 886, "8532": 886, "8482": 886, "8608": 886, "8502": 886, "8515": 886, "8622": 886, "8381": 886, "8584": 886, "8442": 886, "8534": 886, "8624": 886, "8519": 886, "8452": 886, "8415": 886, "8395": 886, "8658": 886, "cascad": 886, "8633": 886, "8580": 886, "8400": 886, "test_egi": 886, "mandatorili": 886, "8474": 886, "8339": 886, "8558": 886, "s390x": 886, "8618": 886, "8594": 886, "8610": 886, "8377": 886, "8285": 886, "8344": 886, "8318": 886, "8637": 886, "8306": 886, "8448": 886, "8283": 886, "name_split": 886, "01_meg": 886, "name_meg": 886, "8464": 886, "8326": 886, "8343": 886, "8425": 886, "8317": 886, "8663": 886, "8320": 886, "8303": 886, "8484": 886, "8349": 886, "max_pca_compon": 886, "max_pca_components_": 886, "8321": 886, "8341": 886, "everyhwer": 886, "8368": 886, "8393": 886, "8416": 886, "8434": 886, "8486": 886, "8491": 886, "8492": 886, "8545": 886, "8590": 886, "tukei": 886, "8542": 886, "8520": 886, "8589": 886, "8564": 886, "8605": 886, "8374": 886, "8357": 886, "8356": 886, "8389": 886, "justu": 886, "schwabed": 886, "mad": 886, "jensen": 886, "mikolaj": 886, "rahul": 886, "nadkarni": 886, "lau": 886, "m\u00f8ller": 886, "andersen": 886, "sedivi": 886, "donckt": 886, "svea": 886, "meyer": 886, "lx37": 886, "rai": 886, "n_iter_sdr": 886, "immut": 886, "fxaa": 886, "_split": 886, "_part": 886, "read_raw_xxx": 886, "simpler": 886, "permit": 886, "outermost": 886, "setup_forward_model": 886, "conjug": 886, "throw": 886, "spatio_temporal_src_connect": 886, "find_ch_connect": 886, "read_ch_connect": 886, "spatial_dist_connect": 886, "spatial_inter_hemi_connect": 886, "spatial_src_connect": 886, "spatial_tris_connect": 886, "spatio_temporal_dist_connect": 886, "spatio_temporal_tris_connect": 886, "normalize_fwd": 886, "stc_mix": 886, "read_dig_captrack": 886, "spell": 886, "captrack": 886, "mark_flat": 886, "alejandro": 886, "weinstein": 886, "anton": 886, "nikola": 886, "waniek": 886, "harmelen": 886, "sara": 886, "sommariva": 886, "chapochn": 886, "mshader": 886, "sophi": 886, "herbst": 886, "victor": 886, "ferat": 886, "mohammad": 886, "daneshzand": 886, "reppling": 886, "plv": 886, "dmitrii": 886, "altukhov": 886, "epochs_color": 886, "prepare_bem_model": 886, "compromis": 886, "roc_auc_ovo": 886, "roc_auc_ovo_weight": 886, "sebastian": 886, "old_tim": 886, "subprocess": 886, "htp": 886, "insuffici": 886, "demetr": 886, "kosta": 886, "gridsearchcv": 886, "chun": 886, "hui": 886, "henrich": 886, "kolkhorst": 886, "fu": 886, "geoff": 886, "brookshir": 886, "eegmi_url": 886, "ramiro": 886, "gatti": 886, "get_channel_type_const": 886, "bump": 886, "tandem": 886, "point_spread_funct": 886, "cross_talk_funct": 886, "ariel": 886, "rokem": 886, "jos\u00e9": 886, "garc\u00eda": 886, "moham": 886, "sherif": 886, "nataliia": 886, "kozhemiako": 886, "legrand": 886, "f\u00e9rat": 886, "theodor": 886, "papadopoulo": 886, "markerfil": 886, "dirk": 886, "g\u00fctlin": 886, "10x": 886, "jit": 886, "ryb\u00e1\u0159": 886, "abram": 886, "hindl": 886, "eberhard": 886, "eich": 886, "radman": 886, "hidpi": 886, "pycord": 886, "read_montag": 886, "read_dig_montag": 886, "set_dig": 886, "update_ch_nam": 886, "raise_if_subset": 886, "_smsh_": 886, "_smartshield": 886, "max_tick": 886, "show_legend": 886, "biosig": 886, "nathali": 886, "gayraud": 886, "crist\u00f3bal": 886, "mo\u00ebnn": 886, "loccoz": 886, "mixin": 886, "lslclient": 886, "lsl": 886, "chala": 886, "mocklslstream": 886, "roujanski": 886, "fault": 886, "kovrig": 886, "n_pad": 886, "bruno": 886, "nicenboim": 886, "32bit": 886, "edge_": 886, "v0": 886, "retina": 886, "larri": 886, "eisenman": 886, "mishandl": 886, "haslach": 886, "clean_eog_ecg": 886, "jeythekei": 886, "_criterion": 886, "katarina": 886, "slama": 886, "synthesi": 886, "find_edf_ev": 886, "patch_info": 886, "castano": 886, "finder": 886, "rasmu": 886, "zetter": 886, "orgin": 886, "gsoc": 886, "molfes": 886, "sphx_glr_auto_examples_datasets_plot_opm_rest_data": 886, "gutstein": 886, "trig_shift_by_typ": 886, "read_annotations_brainvis": 886, "get_blas_func": 886, "_compute_covariance_auto": 886, "onewai": 886, "marcin": 886, "koculak": 886, "buildup": 886, "incom": 886, "bethard": 886, "dateutil": 886, "jasper": 886, "bosch": 886, "_current": 886, "unit_noise_gain": 886, "buildqa": 886, "read_annotations_eeglab": 886, "annotmap": 886, "runtimeexcept": 886, "morph_precomput": 886, "compute_morph_matrix": 886, "morph_data_precomput": 886, "pycuda": 886, "warn_explicit": 886, "save_stc_as_volum": 886, "stop_receive_thread": 886, "johan": 886, "meer": 886, "kambiz": 886, "tavabi": 886, "lorenz": 886, "esch": 886, "manu": 886, "sutela": 886, "perri": 886, "sergei": 886, "antopolskii": 886, "teekuninga": 886, "jochmann": 886, "dupr\u00e9": 886, "workaround": 886, "trainsform": 886, "dubarri": 886, "tf_mxne_optim": 886, "mxne_optim": 886, "multidictionari": 886, "image_mask": 886, "csd_epoch": 886, "csd_arrai": 886, "oleh": 886, "kozynet": 886, "lcmv_epoch": 886, "lcmv_raw": 886, "braboszcz": 886, "desislava": 886, "petkova": 886, "krzemi\u0144ski": 886, "hornberg": 886, "juergen": 886, "katrin": 886, "leinweb": 886, "yaroslav": 886, "halchenko": 886, "baptist": 886, "schiratti": 886, "utilis": 886, "dgap_l21l1": 886, "ramonapariciog": 886, "get_pos2d": 886, "\u03c7\u00b2": 886, "writabl": 886, "plot_roi_erpimage_by_rt": 886, "ansi": 886, "codepag": 886, "okba": 886, "bekhelifi": 886, "boggess": 886, "duemos": 886, "nielsen": 886, "luk\u00e1\u0161": 886, "hejtm\u00e1nek": 886, "_virtual": 886, "treatment": 886, "mrn": 886, "reformat": 886, "timedecod": 886, "generalizationacrosstim": 886, "plot_gat_tim": 886, "plot_gat_matrix": 886, "read_events_eeglab": 886, "plot_tran": 886, "tf_lcmv": 886, "scale_tim": 886, "scalings_tim": 886, "akshay0724": 886, "rudiuk": 886, "dykstra": 886, "laetitia": 886, "grabot": 886, "proulx": 886, "apariciogarcia": 886, "robin": 886, "tibor": 886, "schirrmeist": 886, "rodrigo": 886, "h\u00fcbner": 886, "toddler": 886, "fasttrack": 886, "brovelli": 886, "_plot_topo_onpick": 886, "nikla": 886, "wilm": 886, "rantala": 886, "_bad_drop": 886, "_filenam": 886, "pasler": 886, "predict_mod": 886, "chanloc": 886, "dgap_l21": 886, "band_pass_filt": 886, "band_stop_filt": 886, "low_pass_filt": 886, "high_pass_filt": 886, "eeg_sensor": 886, "typecheck": 886, "leonardo": 886, "barbosa": 886, "superflu": 886, "hermann": 886, "sonntag": 886, "jakub": 886, "kaczmarzyk": 886, "lorenzo": 886, "alfin": 886, "visconti": 886, "nick": 886, "foti": 886, "pop_prop": 886, "maryland": 886, "preview": 886, "raimundo": 886, "hid": 886, "martinez": 886, "pablo": 886, "aria": 886, "duma": 886, "fieldtripcli": 886, "get_data_as_epoch": 886, "unitsposit": 886, "mullin": 886, "bva": 886, "strictest": 886, "hojlund": 886, "niediek": 886, "add_eeg_ref": 886, "csd_compute_epoch": 886, "ev2": 886, "\u00b5": 886, "aru": 886, "unsupport": 886, "config_opt": 886, "epochsvector": 886, "favour": 886, "cwt_morlet": 886, "single_trial_pow": 886, "committ": 886, "camilo": 886, "lamu": 886, "f\u00e9lix": 886, "kraus": 886, "shlomo": 886, "poil": 886, "show_info": 886, "compute_raw_psd": 886, "compute_epochs_psd": 886, "614990234": 886, "00064103": 886, "99897607": 886, "train_tim": 886, "ecg_criterion": 886, "eog_criterion": 886, "natali": 886, "klein": 886, "coordinan": 886, "ware": 886, "score_mod": 886, "stimserv": 886, "ip": 886, "mesh_color": 886, "multitaper_psd": 886, "vertor": 886, "renorm": 886, "drop_bad_epoch": 886, "drop_epoch": 886, "do_forward_solut": 886, "kaichogami": 886, "cl\u00e9ment": 886, "moutard": 886, "martinbab": 886, "sagun": 886, "pai": 886, "sourav": 886, "kambyses": 886, "pbnsilva": 886, "sviter": 886, "zuxfoucault": 886, "nenonen": 886, "add_eeg_average_proj": 886, "n_samp_tot": 886, "emilyps14": 886, "lennyvarghes": 886, "freeview_bem_surfac": 886, "desanti": 886, "_setup_vmin_vmax": 886, "concatenatechannel": 886, "redesign": 886, "rewrot": 886, "plot_image_epoch": 886, "preload_data": 886, "santi": 886, "roan": 886, "laplant": 886, "wakeman": 886, "add_sect": 886, "marmaduk": 886, "woodman": 886, "whiten_evok": 886, "oddbal": 886, "label_1": 886, "label_2": 886, "savitski": 886, "_baseraw": 886, "prof": 886, "decoupl": 886, "read_hsp": 886, "read_elp": 886, "write_hsp": 886, "write_mrk": 886, "label_time_cours": 886, "as_data_fram": 886, "pick_types_evok": 886, "textbox": 886, "iir_filter_raw": 886, "ingoo": 886, "kj": 886, "basil": 886, "pinsard": 886, "hafeza": 886, "anevar": 886, "manoj": 886, "kumar": 886, "tucker": 886, "ward": 886, "radic": 886, "tack": 886, "equalize_channnel": 886, "s\u00e9bastien": 886, "connector": 886, "cathi": 886, "nangini": 886, "succintli": 886, "breuer": 886, "aesthet": 886, "qunxi": 886, "drop_pick": 886, "labels_from_parc": 886, "parc_from_label": 886, "setno": 886, "plot_": 886, "praveen": 886, "sripad": 886, "tanai": 886, "saket": 886, "choudhari": 886, "brad": 886, "buran": 886, "stimclient": 886, "rtclient": 886, "mockrtclient": 886, "trelli": 886, "ki2fiff": 886, "pick_norm": 886, "write_stc": 886, "olivetti": 886, "kornblith": 886, "smarter": 886, "sources_as_epoch": 886, "psi": 886, "mne_compute_proj_eog": 886, "applicationon": 886, "proj_act": 886, "keep_comp": 886, "dest_comp": 886, "speedup": 886, "clike": 886, "l21": 886, "bessel": 886, "time_to_index": 886, "mne_compute_proj_ecg": 886, "mne_maxfilt": 886, "loui": 886, "thibault": 886, "ellen": 886, "ruzich": 886}, "objects": {"": [[876, 0, 0, "-", "mne"]], "mne": [[257, 1, 1, "", "AcqParserFIF"], [258, 1, 1, "", "Annotations"], [259, 1, 1, "", "BaseEpochs"], [260, 1, 1, "", "BiHemiLabel"], [261, 1, 1, "", "Covariance"], [262, 1, 1, "", "Dipole"], [263, 1, 1, "", "DipoleFixed"], [264, 1, 1, "", "Epochs"], [265, 1, 1, "", "EpochsArray"], [266, 1, 1, "", "Evoked"], [267, 1, 1, "", "EvokedArray"], [268, 1, 1, "", "Forward"], [269, 1, 1, "", "Info"], [270, 1, 1, "", "Label"], [271, 1, 1, "", "MixedSourceEstimate"], [272, 1, 1, "", "MixedVectorSourceEstimate"], [273, 1, 1, "", "Projection"], [274, 1, 1, "", "Report"], [275, 1, 1, "", "SourceEstimate"], [276, 1, 1, "", "SourceMorph"], [277, 1, 1, "", "SourceSpaces"], [278, 1, 1, "", "VectorSourceEstimate"], [279, 1, 1, "", "VolSourceEstimate"], [280, 1, 1, "", "VolVectorSourceEstimate"], [281, 4, 1, "", "add_reference_channels"], [282, 4, 1, "", "add_source_space_distances"], [283, 4, 1, "", "annotations_from_events"], [284, 4, 1, "", "apply_forward"], [285, 4, 1, "", "apply_forward_raw"], [286, 4, 1, "", "average_forward_solutions"], [880, 0, 0, "-", "baseline"], [854, 0, 0, "-", "beamformer"], [254, 0, 0, "-", "bem"], [310, 4, 1, "", "channel_indices_by_type"], [311, 4, 1, "", "channel_type"], [875, 0, 0, "-", "channels"], [875, 0, 0, "-", "chpi"], [353, 4, 1, "", "combine_evoked"], [354, 4, 1, "", "compute_covariance"], [355, 4, 1, "", "compute_proj_epochs"], [356, 4, 1, "", "compute_proj_evoked"], [357, 4, 1, "", "compute_proj_raw"], [358, 4, 1, "", "compute_rank"], [359, 4, 1, "", "compute_raw_covariance"], [360, 4, 1, "", "compute_source_morph"], [361, 4, 1, "", "concatenate_epochs"], [362, 4, 1, "", "concatenate_events"], [363, 4, 1, "", "concatenate_raws"], [364, 4, 1, "", "convert_forward_solution"], [368, 4, 1, "", "count_events"], [372, 4, 1, "", "create_default_subject"], [373, 4, 1, "", "create_info"], [855, 0, 0, "-", "cuda"], [249, 0, 0, "-", "datasets"], [410, 4, 1, "", "decimate_surface"], [250, 0, 0, "-", "decoding"], [430, 4, 1, "", "dig_mri_distances"], [854, 0, 0, "-", "dipole"], [251, 0, 0, "-", "epochs"], [436, 4, 1, "", "equalize_channels"], [251, 0, 0, "-", "event"], [440, 4, 1, "", "events_from_annotations"], [252, 0, 0, "-", "export"], [445, 4, 1, "", "extract_label_time_course"], [875, 0, 0, "-", "filter"], [452, 4, 1, "", "find_events"], [453, 4, 1, "", "find_stim_steps"], [454, 4, 1, "", "fit_dipole"], [459, 4, 1, "", "get_config"], [460, 4, 1, "", "get_config_path"], [461, 4, 1, "", "get_head_surf"], [462, 4, 1, "", "get_meg_helmet_surf"], [463, 4, 1, "", "get_montage_volume_labels"], [464, 4, 1, "", "get_volume_labels_from_aseg"], [465, 4, 1, "", "get_volume_labels_from_src"], [466, 4, 1, "", "grade_to_tris"], [467, 4, 1, "", "grade_to_vertices"], [468, 4, 1, "", "grand_average"], [469, 4, 1, "", "grow_labels"], [472, 4, 1, "", "head_to_mni"], [473, 4, 1, "", "head_to_mri"], [854, 0, 0, "-", "inverse_sparse"], [877, 0, 0, "-", "io"], [514, 4, 1, "", "label_sign_flip"], [515, 4, 1, "", "labels_to_stc"], [516, 4, 1, "", "make_ad_hoc_cov"], [517, 4, 1, "", "make_bem_model"], [518, 4, 1, "", "make_bem_solution"], [519, 4, 1, "", "make_field_map"], [520, 4, 1, "", "make_fixed_length_epochs"], [521, 4, 1, "", "make_fixed_length_events"], [522, 4, 1, "", "make_forward_dipole"], [523, 4, 1, "", "make_forward_solution"], [524, 4, 1, "", "make_sphere_model"], [525, 4, 1, "", "match_channel_orders"], [526, 4, 1, "", "merge_events"], [854, 0, 0, "-", "minimum_norm"], [547, 4, 1, "", "morph_labels"], [548, 4, 1, "", "morph_source_spaces"], [549, 4, 1, "", "open_docs"], [550, 4, 1, "", "open_report"], [551, 4, 1, "", "parse_config"], [552, 4, 1, "", "pick_channels"], [553, 4, 1, "", "pick_channels_cov"], [554, 4, 1, "", "pick_channels_forward"], [555, 4, 1, "", "pick_channels_regexp"], [556, 4, 1, "", "pick_events"], [557, 4, 1, "", "pick_info"], [558, 4, 1, "", "pick_types"], [559, 4, 1, "", "pick_types_forward"], [875, 0, 0, "-", "preprocessing"], [610, 4, 1, "", "random_parcellation"], [611, 4, 1, "", "read_annotations"], [612, 4, 1, "", "read_bem_solution"], [613, 4, 1, "", "read_bem_surfaces"], [614, 4, 1, "", "read_cov"], [615, 4, 1, "", "read_dipole"], [616, 4, 1, "", "read_epochs"], [617, 4, 1, "", "read_epochs_eeglab"], [618, 4, 1, "", "read_epochs_fieldtrip"], [619, 4, 1, "", "read_epochs_kit"], [620, 4, 1, "", "read_events"], [621, 4, 1, "", "read_evoked_besa"], [622, 4, 1, "", "read_evoked_fieldtrip"], [623, 4, 1, "", "read_evokeds"], [624, 4, 1, "", "read_evokeds_mff"], [625, 4, 1, "", "read_forward_solution"], [626, 4, 1, "", "read_freesurfer_lut"], [627, 4, 1, "", "read_label"], [628, 4, 1, "", "read_labels_from_annot"], [629, 4, 1, "", "read_lta"], [630, 4, 1, "", "read_morph_map"], [631, 4, 1, "", "read_proj"], [632, 4, 1, "", "read_reject_parameters"], [633, 4, 1, "", "read_source_estimate"], [634, 4, 1, "", "read_source_morph"], [635, 4, 1, "", "read_source_spaces"], [636, 4, 1, "", "read_surface"], [637, 4, 1, "", "read_talxfm"], [638, 4, 1, "", "read_trans"], [639, 4, 1, "", "read_tri"], [640, 4, 1, "", "read_vectorview_selection"], [641, 4, 1, "", "rename_channels"], [642, 4, 1, "", "scale_bem"], [643, 4, 1, "", "scale_labels"], [644, 4, 1, "", "scale_mri"], [645, 4, 1, "", "scale_source_space"], [646, 4, 1, "", "sensitivity_map"], [647, 4, 1, "", "set_bipolar_reference"], [648, 4, 1, "", "set_cache_dir"], [649, 4, 1, "", "set_config"], [650, 4, 1, "", "set_eeg_reference"], [651, 4, 1, "", "set_log_file"], [652, 4, 1, "", "set_log_level"], [653, 4, 1, "", "set_memmap_min_size"], [654, 4, 1, "", "setup_source_space"], [655, 4, 1, "", "setup_volume_source_space"], [881, 0, 0, "-", "simulation"], [676, 4, 1, "", "spatial_dist_adjacency"], [677, 4, 1, "", "spatial_inter_hemi_adjacency"], [678, 4, 1, "", "spatial_src_adjacency"], [679, 4, 1, "", "spatial_tris_adjacency"], [680, 4, 1, "", "spatio_temporal_dist_adjacency"], [681, 4, 1, "", "spatio_temporal_src_adjacency"], [682, 4, 1, "", "spatio_temporal_tris_adjacency"], [683, 4, 1, "", "split_label"], [883, 0, 0, "-", "stats"], [701, 4, 1, "", "stc_near_sensors"], [702, 4, 1, "", "stc_to_label"], [705, 4, 1, "", "sys_info"], [884, 0, 0, "-", "time_frequency"], [740, 4, 1, "", "transform_surface_to"], [875, 0, 0, "-", "transforms"], [748, 4, 1, "", "use_coil_def"], [749, 1, 1, "", "use_log_level"], [855, 0, 0, "-", "utils"], [752, 4, 1, "", "verbose"], [753, 4, 1, "", "vertex_to_mni"], [885, 0, 0, "-", "viz"], [827, 4, 1, "", "what"], [828, 4, 1, "", "write_bem_solution"], [829, 4, 1, "", "write_bem_surfaces"], [830, 4, 1, "", "write_cov"], [831, 4, 1, "", "write_events"], [832, 4, 1, "", "write_evokeds"], [833, 4, 1, "", "write_forward_solution"], [834, 4, 1, "", "write_head_bem"], [835, 4, 1, "", "write_label"], [836, 4, 1, "", "write_labels_to_annot"], [837, 4, 1, "", "write_proj"], [838, 4, 1, "", "write_source_spaces"], [839, 4, 1, "", "write_surface"], [840, 4, 1, "", "write_trans"]], "mne.AcqParserFIF": [[257, 2, 1, "", "__getitem__"], [257, 2, 1, "", "__len__"], [257, 3, 1, "", "categories"], [257, 3, 1, "", "events"], [257, 2, 1, "", "get_condition"]], "mne.Annotations": [[258, 2, 1, "", "__add__"], [258, 2, 1, "", "__getitem__"], [258, 2, 1, "", "__iter__"], [258, 2, 1, "", "__len__"], [258, 2, 1, "", "append"], [258, 2, 1, "", "copy"], [258, 2, 1, "", "crop"], [258, 2, 1, "", "delete"], [258, 3, 1, "", "orig_time"], [258, 2, 1, "", "rename"], [258, 2, 1, "", "save"], [258, 2, 1, "", "set_durations"], [258, 2, 1, "", "to_data_frame"]], "mne.BiHemiLabel": [[260, 2, 1, "", "__add__"], [260, 2, 1, "", "__len__"], [260, 2, 1, "", "__sub__"]], "mne.Covariance": [[261, 2, 1, "", "__add__"], [261, 2, 1, "", "__contains__"], [261, 2, 1, "", "__getitem__"], [261, 2, 1, "", "__iter__"], [261, 2, 1, "", "__len__"], [261, 2, 1, "", "as_diag"], [261, 3, 1, "", "ch_names"], [261, 2, 1, "", "clear"], [261, 2, 1, "", "copy"], [261, 3, 1, "", "data"], [261, 2, 1, "", "fromkeys"], [261, 2, 1, "", "get"], [261, 2, 1, "", "items"], [261, 2, 1, "", "keys"], [261, 3, 1, "", "nfree"], [261, 2, 1, "", "pick_channels"], [261, 2, 1, "", "plot"], [261, 2, 1, "", "plot_topomap"], [261, 2, 1, "", "pop"], [261, 2, 1, "", "popitem"], [261, 2, 1, "", "save"], [261, 2, 1, "", "setdefault"], [261, 2, 1, "", "update"], [261, 2, 1, "", "values"]], "mne.Dipole": [[262, 2, 1, "", "__getitem__"], [262, 2, 1, "", "__len__"], [262, 2, 1, "", "copy"], [262, 2, 1, "", "crop"], [262, 2, 1, "", "decimate"], [262, 2, 1, "", "plot_amplitudes"], [262, 2, 1, "", "plot_locations"], [262, 2, 1, "", "save"], [262, 2, 1, "", "shift_time"], [262, 2, 1, "", "time_as_index"], [262, 3, 1, "", "times"], [262, 3, 1, "", "tmax"], [262, 3, 1, "", "tmin"], [262, 2, 1, "", "to_mni"], [262, 2, 1, "", "to_mri"], [262, 2, 1, "", "to_volume_labels"]], "mne.DipoleFixed": [[263, 3, 1, "", "ch_names"], [263, 2, 1, "", "copy"], [263, 2, 1, "", "crop"], [263, 2, 1, "", "decimate"], [263, 2, 1, "", "plot"], [263, 2, 1, "", "save"], [263, 2, 1, "", "shift_time"], [263, 2, 1, "", "time_as_index"], [263, 3, 1, "", "times"], [263, 3, 1, "", "tmax"], [263, 3, 1, "", "tmin"]], "mne.Epochs": [[264, 2, 1, "", "__contains__"], [264, 2, 1, "", "__getitem__"], [264, 2, 1, "", "__iter__"], [264, 2, 1, "", "__len__"], [264, 2, 1, "", "add_annotations_to_metadata"], [264, 2, 1, "", "add_channels"], [264, 2, 1, "", "add_proj"], [264, 2, 1, "", "add_reference_channels"], [264, 2, 1, "", "anonymize"], [264, 2, 1, "", "apply_baseline"], [264, 2, 1, "", "apply_function"], [264, 2, 1, "", "apply_hilbert"], [264, 2, 1, "", "apply_proj"], [264, 2, 1, "", "as_type"], [264, 2, 1, "", "average"], [264, 3, 1, "", "ch_names"], [264, 3, 1, "", "compensation_grade"], [264, 2, 1, "", "compute_psd"], [264, 2, 1, "", "copy"], [264, 2, 1, "", "crop"], [264, 2, 1, "", "decimate"], [264, 2, 1, "", "del_proj"], [264, 2, 1, "", "drop"], [264, 2, 1, "", "drop_bad"], [264, 2, 1, "", "drop_channels"], [264, 2, 1, "", "drop_log_stats"], [264, 2, 1, "", "equalize_event_counts"], [264, 2, 1, "", "export"], [264, 3, 1, "", "filename"], [264, 2, 1, "", "filter"], [264, 2, 1, "", "get_annotations_per_epoch"], [264, 2, 1, "", "get_channel_types"], [264, 2, 1, "", "get_data"], [264, 2, 1, "", "get_montage"], [264, 2, 1, "", "interpolate_bads"], [264, 2, 1, "", "iter_evoked"], [264, 2, 1, "", "load_data"], [264, 3, 1, "", "metadata"], [264, 2, 1, "", "next"], [264, 2, 1, "", "pick"], [264, 2, 1, "", "pick_channels"], [264, 2, 1, "", "pick_types"], [264, 2, 1, "", "plot"], [264, 2, 1, "", "plot_drop_log"], [264, 2, 1, "", "plot_image"], [264, 2, 1, "", "plot_projs_topomap"], [264, 2, 1, "", "plot_psd"], [264, 2, 1, "", "plot_psd_topo"], [264, 2, 1, "", "plot_psd_topomap"], [264, 2, 1, "", "plot_sensors"], [264, 2, 1, "", "plot_topo_image"], [264, 3, 1, "", "proj"], [264, 2, 1, "", "rename_channels"], [264, 2, 1, "", "reorder_channels"], [264, 2, 1, "", "resample"], [264, 2, 1, "", "reset_drop_log_selection"], [264, 2, 1, "", "save"], [264, 2, 1, "", "savgol_filter"], [264, 2, 1, "", "set_annotations"], [264, 2, 1, "", "set_channel_types"], [264, 2, 1, "", "set_eeg_reference"], [264, 2, 1, "", "set_meas_date"], [264, 2, 1, "", "set_montage"], [264, 2, 1, "", "shift_time"], [264, 2, 1, "", "standard_error"], [264, 2, 1, "", "subtract_evoked"], [264, 2, 1, "", "time_as_index"], [264, 3, 1, "", "times"], [264, 3, 1, "", "tmax"], [264, 3, 1, "", "tmin"], [264, 2, 1, "", "to_data_frame"]], "mne.EpochsArray": [[265, 2, 1, "", "__contains__"], [265, 2, 1, "", "__getitem__"], [265, 2, 1, "", "__iter__"], [265, 2, 1, "", "__len__"], [265, 2, 1, "", "add_annotations_to_metadata"], [265, 2, 1, "", "add_channels"], [265, 2, 1, "", "add_proj"], [265, 2, 1, "", "add_reference_channels"], [265, 2, 1, "", "anonymize"], [265, 2, 1, "", "apply_baseline"], [265, 2, 1, "", "apply_function"], [265, 2, 1, "", "apply_hilbert"], [265, 2, 1, "", "apply_proj"], [265, 2, 1, "", "as_type"], [265, 2, 1, "", "average"], [265, 3, 1, "", "ch_names"], [265, 3, 1, "", "compensation_grade"], [265, 2, 1, "", "compute_psd"], [265, 2, 1, "", "copy"], [265, 2, 1, "", "crop"], [265, 2, 1, "", "decimate"], [265, 2, 1, "", "del_proj"], [265, 2, 1, "", "drop"], [265, 2, 1, "", "drop_bad"], [265, 2, 1, "", "drop_channels"], [265, 2, 1, "", "drop_log_stats"], [265, 2, 1, "", "equalize_event_counts"], [265, 2, 1, "", "export"], [265, 3, 1, "", "filename"], [265, 2, 1, "", "filter"], [265, 2, 1, "", "get_annotations_per_epoch"], [265, 2, 1, "", "get_channel_types"], [265, 2, 1, "", "get_data"], [265, 2, 1, "", "get_montage"], [265, 2, 1, "", "interpolate_bads"], [265, 2, 1, "", "iter_evoked"], [265, 2, 1, "", "load_data"], [265, 3, 1, "", "metadata"], [265, 2, 1, "", "next"], [265, 2, 1, "", "pick"], [265, 2, 1, "", "pick_channels"], [265, 2, 1, "", "pick_types"], [265, 2, 1, "", "plot"], [265, 2, 1, "", "plot_drop_log"], [265, 2, 1, "", "plot_image"], [265, 2, 1, "", "plot_projs_topomap"], [265, 2, 1, "", "plot_psd"], [265, 2, 1, "", "plot_psd_topo"], [265, 2, 1, "", "plot_psd_topomap"], [265, 2, 1, "", "plot_sensors"], [265, 2, 1, "", "plot_topo_image"], [265, 3, 1, "", "proj"], [265, 2, 1, "", "rename_channels"], [265, 2, 1, "", "reorder_channels"], [265, 2, 1, "", "resample"], [265, 2, 1, "", "reset_drop_log_selection"], [265, 2, 1, "", "save"], [265, 2, 1, "", "savgol_filter"], [265, 2, 1, "", "set_annotations"], [265, 2, 1, "", "set_channel_types"], [265, 2, 1, "", "set_eeg_reference"], [265, 2, 1, "", "set_meas_date"], [265, 2, 1, "", "set_montage"], [265, 2, 1, "", "shift_time"], [265, 2, 1, "", "standard_error"], [265, 2, 1, "", "subtract_evoked"], [265, 2, 1, "", "time_as_index"], [265, 3, 1, "", "times"], [265, 3, 1, "", "tmax"], [265, 3, 1, "", "tmin"], [265, 2, 1, "", "to_data_frame"]], "mne.Evoked": [[266, 2, 1, "", "__contains__"], [266, 2, 1, "", "__neg__"], [266, 2, 1, "", "add_channels"], [266, 2, 1, "", "add_proj"], [266, 2, 1, "", "add_reference_channels"], [266, 2, 1, "", "animate_topomap"], [266, 2, 1, "", "anonymize"], [266, 2, 1, "", "apply_baseline"], [266, 2, 1, "", "apply_function"], [266, 2, 1, "", "apply_hilbert"], [266, 2, 1, "", "apply_proj"], [266, 2, 1, "", "as_type"], [266, 3, 1, "", "ch_names"], [266, 3, 1, "", "compensation_grade"], [266, 2, 1, "", "compute_psd"], [266, 2, 1, "", "copy"], [266, 2, 1, "", "crop"], [266, 3, 1, "", "data"], [266, 2, 1, "", "decimate"], [266, 2, 1, "", "del_proj"], [266, 2, 1, "", "detrend"], [266, 2, 1, "", "drop_channels"], [266, 2, 1, "", "export"], [266, 2, 1, "", "filter"], [266, 2, 1, "", "get_channel_types"], [266, 2, 1, "", "get_data"], [266, 2, 1, "", "get_montage"], [266, 2, 1, "", "get_peak"], [266, 2, 1, "", "interpolate_bads"], [266, 3, 1, "", "kind"], [266, 2, 1, "", "pick"], [266, 2, 1, "", "pick_channels"], [266, 2, 1, "", "pick_types"], [266, 2, 1, "", "plot"], [266, 2, 1, "", "plot_field"], [266, 2, 1, "", "plot_image"], [266, 2, 1, "", "plot_joint"], [266, 2, 1, "", "plot_projs_topomap"], [266, 2, 1, "", "plot_psd"], [266, 2, 1, "", "plot_psd_topo"], [266, 2, 1, "", "plot_psd_topomap"], [266, 2, 1, "", "plot_sensors"], [266, 2, 1, "", "plot_topo"], [266, 2, 1, "", "plot_topomap"], [266, 2, 1, "", "plot_white"], [266, 3, 1, "", "proj"], [266, 2, 1, "", "rename_channels"], [266, 2, 1, "", "reorder_channels"], [266, 2, 1, "", "resample"], [266, 2, 1, "", "save"], [266, 2, 1, "", "savgol_filter"], [266, 2, 1, "", "set_channel_types"], [266, 2, 1, "", "set_eeg_reference"], [266, 2, 1, "", "set_meas_date"], [266, 2, 1, "", "set_montage"], [266, 2, 1, "", "shift_time"], [266, 2, 1, "", "time_as_index"], [266, 3, 1, "", "times"], [266, 3, 1, "", "tmax"], [266, 3, 1, "", "tmin"], [266, 2, 1, "", "to_data_frame"]], "mne.EvokedArray": [[267, 2, 1, "", "__contains__"], [267, 2, 1, "", "__neg__"], [267, 2, 1, "", "add_channels"], [267, 2, 1, "", "add_proj"], [267, 2, 1, "", "add_reference_channels"], [267, 2, 1, "", "animate_topomap"], [267, 2, 1, "", "anonymize"], [267, 2, 1, "", "apply_baseline"], [267, 2, 1, "", "apply_function"], [267, 2, 1, "", "apply_hilbert"], [267, 2, 1, "", "apply_proj"], [267, 2, 1, "", "as_type"], [267, 3, 1, "", "ch_names"], [267, 3, 1, "", "compensation_grade"], [267, 2, 1, "", "compute_psd"], [267, 2, 1, "", "copy"], [267, 2, 1, "", "crop"], [267, 3, 1, "", "data"], [267, 2, 1, "", "decimate"], [267, 2, 1, "", "del_proj"], [267, 2, 1, "", "detrend"], [267, 2, 1, "", "drop_channels"], [267, 2, 1, "", "export"], [267, 2, 1, "", "filter"], [267, 2, 1, "", "get_channel_types"], [267, 2, 1, "", "get_data"], [267, 2, 1, "", "get_montage"], [267, 2, 1, "", "get_peak"], [267, 2, 1, "", "interpolate_bads"], [267, 3, 1, "", "kind"], [267, 2, 1, "", "pick"], [267, 2, 1, "", "pick_channels"], [267, 2, 1, "", "pick_types"], [267, 2, 1, "", "plot"], [267, 2, 1, "", "plot_field"], [267, 2, 1, "", "plot_image"], [267, 2, 1, "", "plot_joint"], [267, 2, 1, "", "plot_projs_topomap"], [267, 2, 1, "", "plot_psd"], [267, 2, 1, "", "plot_psd_topo"], [267, 2, 1, "", "plot_psd_topomap"], [267, 2, 1, "", "plot_sensors"], [267, 2, 1, "", "plot_topo"], [267, 2, 1, "", "plot_topomap"], [267, 2, 1, "", "plot_white"], [267, 3, 1, "", "proj"], [267, 2, 1, "", "rename_channels"], [267, 2, 1, "", "reorder_channels"], [267, 2, 1, "", "resample"], [267, 2, 1, "", "save"], [267, 2, 1, "", "savgol_filter"], [267, 2, 1, "", "set_channel_types"], [267, 2, 1, "", "set_eeg_reference"], [267, 2, 1, "", "set_meas_date"], [267, 2, 1, "", "set_montage"], [267, 2, 1, "", "shift_time"], [267, 2, 1, "", "time_as_index"], [267, 3, 1, "", "times"], [267, 3, 1, "", "tmax"], [267, 3, 1, "", "tmin"], [267, 2, 1, "", "to_data_frame"]], "mne.Forward": [[268, 2, 1, "", "copy"], [268, 2, 1, "", "pick_channels"]], "mne.Info": [[269, 2, 1, "", "__contains__"], [269, 2, 1, "", "__getitem__"], [269, 2, 1, "", "__iter__"], [269, 2, 1, "", "__len__"], [269, 2, 1, "", "clear"], [269, 3, 1, "", "compensation_grade"], [269, 2, 1, "", "copy"], [269, 2, 1, "", "fromkeys"], [269, 2, 1, "", "get"], [269, 2, 1, "", "get_channel_types"], [269, 2, 1, "", "get_montage"], [269, 2, 1, "", "items"], [269, 2, 1, "", "keys"], [269, 2, 1, "", "normalize_proj"], [269, 2, 1, "", "pop"], [269, 2, 1, "", "popitem"], [269, 2, 1, "", "save"], [269, 2, 1, "", "set_montage"], [269, 2, 1, "", "setdefault"], [269, 2, 1, "", "update"], [269, 2, 1, "", "values"]], "mne.Label": [[270, 2, 1, "", "__add__"], [270, 2, 1, "", "__len__"], [270, 2, 1, "", "__sub__"], [270, 2, 1, "", "center_of_mass"], [270, 2, 1, "", "compute_area"], [270, 2, 1, "", "copy"], [270, 2, 1, "", "distances_to_outside"], [270, 2, 1, "", "fill"], [270, 2, 1, "", "get_tris"], [270, 2, 1, "", "get_vertices_used"], [270, 2, 1, "", "morph"], [270, 2, 1, "", "restrict"], [270, 2, 1, "", "save"], [270, 2, 1, "", "smooth"], [270, 2, 1, "", "split"]], "mne.MixedSourceEstimate": [[271, 2, 1, "", "__add__"], [271, 2, 1, "", "__div__"], [271, 2, 1, "", "__mul__"], [271, 2, 1, "", "__neg__"], [271, 2, 1, "", "__sub__"], [271, 2, 1, "", "apply_baseline"], [271, 2, 1, "", "bin"], [271, 2, 1, "", "copy"], [271, 2, 1, "", "crop"], [271, 3, 1, "", "data"], [271, 2, 1, "", "decimate"], [271, 2, 1, "", "extract_label_time_course"], [271, 2, 1, "", "get_peak"], [271, 2, 1, "", "mean"], [271, 2, 1, "", "plot"], [271, 2, 1, "", "resample"], [271, 2, 1, "", "save"], [271, 3, 1, "", "sfreq"], [271, 3, 1, "", "shape"], [271, 2, 1, "", "shift_time"], [271, 2, 1, "", "sqrt"], [271, 2, 1, "", "sum"], [271, 2, 1, "", "surface"], [271, 2, 1, "", "time_as_index"], [271, 3, 1, "", "times"], [271, 3, 1, "", "tmax"], [271, 3, 1, "", "tmin"], [271, 2, 1, "", "to_data_frame"], [271, 2, 1, "", "transform"], [271, 2, 1, "", "transform_data"], [271, 3, 1, "", "tstep"], [271, 2, 1, "", "volume"]], "mne.MixedVectorSourceEstimate": [[272, 2, 1, "", "__add__"], [272, 2, 1, "", "__div__"], [272, 2, 1, "", "__mul__"], [272, 2, 1, "", "__neg__"], [272, 2, 1, "", "__sub__"], [272, 2, 1, "", "apply_baseline"], [272, 2, 1, "", "bin"], [272, 2, 1, "", "copy"], [272, 2, 1, "", "crop"], [272, 3, 1, "", "data"], [272, 2, 1, "", "decimate"], [272, 2, 1, "", "extract_label_time_course"], [272, 2, 1, "", "get_peak"], [272, 2, 1, "", "magnitude"], [272, 2, 1, "", "mean"], [272, 2, 1, "", "plot"], [272, 2, 1, "", "project"], [272, 2, 1, "", "resample"], [272, 2, 1, "", "save"], [272, 3, 1, "", "sfreq"], [272, 3, 1, "", "shape"], [272, 2, 1, "", "shift_time"], [272, 2, 1, "", "sqrt"], [272, 2, 1, "", "sum"], [272, 2, 1, "", "surface"], [272, 2, 1, "", "time_as_index"], [272, 3, 1, "", "times"], [272, 3, 1, "", "tmax"], [272, 3, 1, "", "tmin"], [272, 2, 1, "", "to_data_frame"], [272, 2, 1, "", "transform"], [272, 2, 1, "", "transform_data"], [272, 3, 1, "", "tstep"], [272, 2, 1, "", "volume"]], "mne.Projection": [[273, 2, 1, "", "__contains__"], [273, 2, 1, "", "__getitem__"], [273, 2, 1, "", "__iter__"], [273, 2, 1, "", "__len__"], [273, 2, 1, "", "clear"], [273, 2, 1, "", "copy"], [273, 2, 1, "", "fromkeys"], [273, 2, 1, "", "get"], [273, 2, 1, "", "items"], [273, 2, 1, "", "keys"], [273, 2, 1, "", "plot_topomap"], [273, 2, 1, "", "pop"], [273, 2, 1, "", "popitem"], [273, 2, 1, "", "setdefault"], [273, 2, 1, "", "update"], [273, 2, 1, "", "values"]], "mne.Report": [[274, 2, 1, "", "__len__"], [274, 2, 1, "", "add_bem"], [274, 2, 1, "", "add_code"], [274, 2, 1, "", "add_covariance"], [274, 2, 1, "", "add_custom_css"], [274, 2, 1, "", "add_custom_js"], [274, 2, 1, "", "add_epochs"], [274, 2, 1, "", "add_events"], [274, 2, 1, "", "add_evokeds"], [274, 2, 1, "", "add_figure"], [274, 2, 1, "", "add_forward"], [274, 2, 1, "", "add_html"], [274, 2, 1, "", "add_ica"], [274, 2, 1, "", "add_image"], [274, 2, 1, "", "add_inverse_operator"], [274, 2, 1, "", "add_projs"], [274, 2, 1, "", "add_raw"], [274, 2, 1, "", "add_stc"], [274, 2, 1, "", "add_sys_info"], [274, 2, 1, "", "add_trans"], [274, 3, 1, "", "html"], [274, 2, 1, "", "parse_folder"], [274, 2, 1, "", "remove"], [274, 2, 1, "", "save"], [274, 3, 1, "", "tags"]], "mne.SourceEstimate": [[275, 2, 1, "", "__add__"], [275, 2, 1, "", "__div__"], [275, 2, 1, "", "__mul__"], [275, 2, 1, "", "__neg__"], [275, 2, 1, "", "__sub__"], [275, 2, 1, "", "apply_baseline"], [275, 2, 1, "", "bin"], [275, 2, 1, "", "center_of_mass"], [275, 2, 1, "", "copy"], [275, 2, 1, "", "crop"], [275, 3, 1, "", "data"], [275, 2, 1, "", "decimate"], [275, 2, 1, "", "estimate_snr"], [275, 2, 1, "", "expand"], [275, 2, 1, "", "extract_label_time_course"], [275, 2, 1, "", "get_peak"], [275, 2, 1, "", "in_label"], [275, 3, 1, "", "lh_data"], [275, 3, 1, "", "lh_vertno"], [275, 2, 1, "", "mean"], [275, 2, 1, "", "plot"], [275, 2, 1, "", "resample"], [275, 3, 1, "", "rh_data"], [275, 3, 1, "", "rh_vertno"], [275, 2, 1, "", "save"], [275, 3, 1, "", "sfreq"], [275, 3, 1, "", "shape"], [275, 2, 1, "", "shift_time"], [275, 2, 1, "", "sqrt"], [275, 2, 1, "", "sum"], [275, 2, 1, "", "time_as_index"], [275, 3, 1, "", "times"], [275, 3, 1, "", "tmax"], [275, 3, 1, "", "tmin"], [275, 2, 1, "", "to_data_frame"], [275, 2, 1, "", "to_original_src"], [275, 2, 1, "", "transform"], [275, 2, 1, "", "transform_data"], [275, 3, 1, "", "tstep"]], "mne.SourceMorph": [[276, 2, 1, "", "apply"], [276, 2, 1, "", "compute_vol_morph_mat"], [276, 2, 1, "", "save"]], "mne.SourceSpaces": [[277, 2, 1, "", "__add__"], [277, 2, 1, "", "__getitem__"], [277, 2, 1, "", "copy"], [277, 2, 1, "", "export_volume"], [277, 2, 1, "", "plot"], [277, 2, 1, "", "save"]], "mne.VectorSourceEstimate": [[278, 2, 1, "", "__add__"], [278, 2, 1, "", "__div__"], [278, 2, 1, "", "__mul__"], [278, 2, 1, "", "__neg__"], [278, 2, 1, "", "__sub__"], [278, 2, 1, "", "apply_baseline"], [278, 2, 1, "", "bin"], [278, 2, 1, "", "copy"], [278, 2, 1, "", "crop"], [278, 3, 1, "", "data"], [278, 2, 1, "", "decimate"], [278, 2, 1, "", "expand"], [278, 2, 1, "", "extract_label_time_course"], [278, 2, 1, "", "get_peak"], [278, 2, 1, "", "in_label"], [278, 3, 1, "", "lh_data"], [278, 3, 1, "", "lh_vertno"], [278, 2, 1, "", "magnitude"], [278, 2, 1, "", "mean"], [278, 2, 1, "", "plot"], [278, 2, 1, "", "project"], [278, 2, 1, "", "resample"], [278, 3, 1, "", "rh_data"], [278, 3, 1, "", "rh_vertno"], [278, 2, 1, "", "save"], [278, 3, 1, "", "sfreq"], [278, 3, 1, "", "shape"], [278, 2, 1, "", "shift_time"], [278, 2, 1, "", "sqrt"], [278, 2, 1, "", "sum"], [278, 2, 1, "", "time_as_index"], [278, 3, 1, "", "times"], [278, 3, 1, "", "tmax"], [278, 3, 1, "", "tmin"], [278, 2, 1, "", "to_data_frame"], [278, 2, 1, "", "to_original_src"], [278, 2, 1, "", "transform"], [278, 2, 1, "", "transform_data"], [278, 3, 1, "", "tstep"]], "mne.VolSourceEstimate": [[279, 2, 1, "", "__add__"], [279, 2, 1, "", "__div__"], [279, 2, 1, "", "__mul__"], [279, 2, 1, "", "__neg__"], [279, 2, 1, "", "__sub__"], [279, 2, 1, "", "apply_baseline"], [279, 2, 1, "", "as_volume"], [279, 2, 1, "", "bin"], [279, 2, 1, "", "copy"], [279, 2, 1, "", "crop"], [279, 3, 1, "", "data"], [279, 2, 1, "", "decimate"], [279, 2, 1, "", "extract_label_time_course"], [279, 2, 1, "", "get_peak"], [279, 2, 1, "", "in_label"], [279, 2, 1, "", "mean"], [279, 2, 1, "", "plot"], [279, 2, 1, "", "plot_3d"], [279, 2, 1, "", "resample"], [279, 2, 1, "", "save"], [279, 2, 1, "", "save_as_volume"], [279, 3, 1, "", "sfreq"], [279, 3, 1, "", "shape"], [279, 2, 1, "", "shift_time"], [279, 2, 1, "", "sqrt"], [279, 2, 1, "", "sum"], [279, 2, 1, "", "time_as_index"], [279, 3, 1, "", "times"], [279, 3, 1, "", "tmax"], [279, 3, 1, "", "tmin"], [279, 2, 1, "", "to_data_frame"], [279, 2, 1, "", "transform"], [279, 2, 1, "", "transform_data"], [279, 3, 1, "", "tstep"]], "mne.VolVectorSourceEstimate": [[280, 2, 1, "", "__add__"], [280, 2, 1, "", "__div__"], [280, 2, 1, "", "__mul__"], [280, 2, 1, "", "__neg__"], [280, 2, 1, "", "__sub__"], [280, 2, 1, "", "apply_baseline"], [280, 2, 1, "", "as_volume"], [280, 2, 1, "", "bin"], [280, 2, 1, "", "copy"], [280, 2, 1, "", "crop"], [280, 3, 1, "", "data"], [280, 2, 1, "", "decimate"], [280, 2, 1, "", "extract_label_time_course"], [280, 2, 1, "", "get_peak"], [280, 2, 1, "", "in_label"], [280, 2, 1, "", "magnitude"], [280, 2, 1, "", "mean"], [280, 2, 1, "", "plot"], [280, 2, 1, "", "plot_3d"], [280, 2, 1, "", "project"], [280, 2, 1, "", "resample"], [280, 2, 1, "", "save"], [280, 2, 1, "", "save_as_volume"], [280, 3, 1, "", "sfreq"], [280, 3, 1, "", "shape"], [280, 2, 1, "", "shift_time"], [280, 2, 1, "", "sqrt"], [280, 2, 1, "", "sum"], [280, 2, 1, "", "time_as_index"], [280, 3, 1, "", "times"], [280, 3, 1, "", "tmax"], [280, 3, 1, "", "tmin"], [280, 2, 1, "", "to_data_frame"], [280, 2, 1, "", "transform"], [280, 2, 1, "", "transform_data"], [280, 3, 1, "", "tstep"]], "mne.baseline": [[287, 4, 1, "", "rescale"]], "mne.beamformer": [[288, 1, 1, "", "Beamformer"], [289, 4, 1, "", "apply_dics"], [290, 4, 1, "", "apply_dics_csd"], [291, 4, 1, "", "apply_dics_epochs"], [292, 4, 1, "", "apply_dics_tfr_epochs"], [293, 4, 1, "", "apply_lcmv"], [294, 4, 1, "", "apply_lcmv_cov"], [295, 4, 1, "", "apply_lcmv_epochs"], [296, 4, 1, "", "apply_lcmv_raw"], [297, 4, 1, "", "make_dics"], [298, 4, 1, "", "make_lcmv"], [299, 4, 1, "", "make_lcmv_resolution_matrix"], [300, 4, 1, "", "rap_music"], [301, 4, 1, "", "read_beamformer"]], "mne.beamformer.Beamformer": [[288, 2, 1, "", "__contains__"], [288, 2, 1, "", "__getitem__"], [288, 2, 1, "", "__iter__"], [288, 2, 1, "", "__len__"], [288, 2, 1, "", "clear"], [288, 2, 1, "", "copy"], [288, 2, 1, "", "fromkeys"], [288, 2, 1, "", "get"], [288, 2, 1, "", "items"], [288, 2, 1, "", "keys"], [288, 2, 1, "", "pop"], [288, 2, 1, "", "popitem"], [288, 2, 1, "", "save"], [288, 2, 1, "", "setdefault"], [288, 2, 1, "", "update"], [288, 2, 1, "", "values"]], "mne.bem": [[302, 1, 1, "", "ConductorModel"], [303, 4, 1, "", "convert_flash_mris"], [304, 4, 1, "", "distance_to_bem"], [305, 4, 1, "", "fit_sphere_to_headshape"], [306, 4, 1, "", "get_fitting_dig"], [307, 4, 1, "", "make_flash_bem"], [308, 4, 1, "", "make_scalp_surfaces"], [309, 4, 1, "", "make_watershed_bem"]], "mne.bem.ConductorModel": [[302, 2, 1, "", "__contains__"], [302, 2, 1, "", "__getitem__"], [302, 2, 1, "", "__iter__"], [302, 2, 1, "", "__len__"], [302, 2, 1, "", "clear"], [302, 2, 1, "", "copy"], [302, 2, 1, "", "fromkeys"], [302, 2, 1, "", "get"], [302, 2, 1, "", "items"], [302, 2, 1, "", "keys"], [302, 2, 1, "", "pop"], [302, 2, 1, "", "popitem"], [302, 3, 1, "", "radius"], [302, 2, 1, "", "setdefault"], [302, 2, 1, "", "update"], [302, 2, 1, "", "values"]], "mne.channels": [[312, 1, 1, "", "DigMontage"], [313, 1, 1, "", "Layout"], [314, 4, 1, "", "combine_channels"], [315, 4, 1, "", "compute_dev_head_t"], [316, 4, 1, "", "compute_native_head_t"], [317, 4, 1, "", "equalize_channels"], [318, 4, 1, "", "find_ch_adjacency"], [319, 4, 1, "", "find_layout"], [320, 4, 1, "", "fix_mag_coil_types"], [321, 4, 1, "", "generate_2d_layout"], [322, 4, 1, "", "get_builtin_ch_adjacencies"], [323, 4, 1, "", "get_builtin_montages"], [324, 4, 1, "", "make_1020_channel_selections"], [325, 4, 1, "", "make_dig_montage"], [326, 4, 1, "", "make_eeg_layout"], [327, 4, 1, "", "make_grid_layout"], [328, 4, 1, "", "make_standard_montage"], [329, 4, 1, "", "read_ch_adjacency"], [330, 4, 1, "", "read_custom_montage"], [331, 4, 1, "", "read_dig_captrak"], [332, 4, 1, "", "read_dig_dat"], [333, 4, 1, "", "read_dig_egi"], [334, 4, 1, "", "read_dig_fif"], [335, 4, 1, "", "read_dig_hpts"], [336, 4, 1, "", "read_dig_localite"], [337, 4, 1, "", "read_dig_polhemus_isotrak"], [338, 4, 1, "", "read_layout"], [339, 4, 1, "", "read_polhemus_fastscan"], [340, 4, 1, "", "rename_channels"]], "mne.channels.DigMontage": [[312, 2, 1, "", "__add__"], [312, 2, 1, "", "add_estimated_fiducials"], [312, 2, 1, "", "add_mni_fiducials"], [312, 2, 1, "", "apply_trans"], [312, 2, 1, "", "copy"], [312, 2, 1, "", "get_positions"], [312, 2, 1, "", "plot"], [312, 2, 1, "", "remove_fiducials"], [312, 2, 1, "", "rename_channels"], [312, 2, 1, "", "save"]], "mne.channels.Layout": [[313, 2, 1, "", "plot"], [313, 2, 1, "", "save"]], "mne.chpi": [[341, 4, 1, "", "compute_chpi_amplitudes"], [342, 4, 1, "", "compute_chpi_locs"], [343, 4, 1, "", "compute_chpi_snr"], [344, 4, 1, "", "compute_head_pos"], [345, 4, 1, "", "extract_chpi_locs_ctf"], [346, 4, 1, "", "extract_chpi_locs_kit"], [347, 4, 1, "", "filter_chpi"], [348, 4, 1, "", "get_active_chpi"], [349, 4, 1, "", "get_chpi_info"], [350, 4, 1, "", "head_pos_to_trans_rot_t"], [351, 4, 1, "", "read_head_pos"], [352, 4, 1, "", "write_head_pos"]], "mne.coreg": [[365, 1, 1, "", "Coregistration"], [366, 4, 1, "", "estimate_head_mri_t"], [367, 4, 1, "", "get_mni_fiducials"]], "mne.coreg.Coregistration": [[365, 2, 1, "", "compute_dig_mri_distances"], [365, 2, 1, "", "fit_fiducials"], [365, 2, 1, "", "fit_icp"], [365, 2, 1, "", "omit_head_shape_points"], [365, 2, 1, "", "reset"], [365, 3, 1, "", "scale"], [365, 2, 1, "", "set_fid_match"], [365, 2, 1, "", "set_grow_hair"], [365, 2, 1, "", "set_rotation"], [365, 2, 1, "", "set_scale"], [365, 2, 1, "", "set_scale_mode"], [365, 2, 1, "", "set_translation"], [365, 3, 1, "", "trans"]], "mne.cov": [[369, 4, 1, "", "compute_whitener"], [370, 4, 1, "", "prepare_noise_cov"], [371, 4, 1, "", "regularize"]], "mne.cuda": [[374, 4, 1, "", "get_cuda_memory"], [375, 4, 1, "", "init_cuda"], [376, 4, 1, "", "set_cuda_device"]], "mne.datasets.brainstorm.bst_auditory": [[377, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_raw": [[378, 4, 1, "", "data_path"]], "mne.datasets.brainstorm.bst_resting": [[379, 4, 1, "", "data_path"]], "mne.datasets.eegbci": [[380, 4, 1, "", "load_data"], [381, 4, 1, "", "standardize"]], "mne.datasets.epilepsy_ecog": [[382, 4, 1, "", "data_path"]], "mne.datasets.erp_core": [[383, 4, 1, "", "data_path"]], "mne.datasets.eyelink": [[384, 4, 1, "", "data_path"]], "mne.datasets": [[385, 4, 1, "", "fetch_aparc_sub_parcellation"], [386, 4, 1, "", "fetch_dataset"], [387, 4, 1, "", "fetch_fsaverage"], [388, 4, 1, "", "fetch_hcp_mmp_parcellation"], [389, 4, 1, "", "fetch_infant_template"], [390, 4, 1, "", "fetch_phantom"], [392, 4, 1, "", "has_dataset"]], "mne.datasets.fnirs_motor": [[391, 4, 1, "", "data_path"]], "mne.datasets.hf_sef": [[393, 4, 1, "", "data_path"]], "mne.datasets.kiloword": [[394, 4, 1, "", "data_path"]], "mne.datasets.limo": [[395, 4, 1, "", "load_data"]], "mne.datasets.misc": [[396, 4, 1, "", "data_path"]], "mne.datasets.mtrf": [[397, 4, 1, "", "data_path"]], "mne.datasets.multimodal": [[398, 4, 1, "", "data_path"]], "mne.datasets.opm": [[399, 4, 1, "", "data_path"]], "mne.datasets.phantom_4dbti": [[400, 4, 1, "", "data_path"]], "mne.datasets.refmeg_noise": [[401, 4, 1, "", "data_path"]], "mne.datasets.sample": [[402, 4, 1, "", "data_path"]], "mne.datasets.sleep_physionet.age": [[403, 4, 1, "", "fetch_data"]], "mne.datasets.sleep_physionet.temazepam": [[404, 4, 1, "", "fetch_data"]], "mne.datasets.somato": [[405, 4, 1, "", "data_path"]], "mne.datasets.spm_face": [[406, 4, 1, "", "data_path"]], "mne.datasets.ssvep": [[407, 4, 1, "", "data_path"]], "mne.datasets.ucl_opm_auditory": [[408, 4, 1, "", "data_path"]], "mne.datasets.visual_92_categories": [[409, 4, 1, "", "data_path"]], "mne.decoding": [[411, 1, 1, "", "CSP"], [412, 1, 1, "", "EMS"], [413, 1, 1, "", "FilterEstimator"], [414, 1, 1, "", "GeneralizingEstimator"], [415, 1, 1, "", "LinearModel"], [416, 1, 1, "", "PSDEstimator"], [417, 1, 1, "", "ReceptiveField"], [418, 1, 1, "", "SPoC"], [419, 1, 1, "", "SSD"], [420, 1, 1, "", "Scaler"], [421, 1, 1, "", "SlidingEstimator"], [422, 1, 1, "", "TemporalFilter"], [423, 1, 1, "", "TimeDelayingRidge"], [424, 1, 1, "", "TimeFrequency"], [425, 1, 1, "", "UnsupervisedSpatialFilter"], [426, 1, 1, "", "Vectorizer"], [427, 4, 1, "", "compute_ems"], [428, 4, 1, "", "cross_val_multiscore"], [429, 4, 1, "", "get_coef"]], "mne.decoding.CSP": [[411, 2, 1, "", "fit"], [411, 2, 1, "", "fit_transform"], [411, 2, 1, "", "get_params"], [411, 2, 1, "", "plot_filters"], [411, 2, 1, "", "plot_patterns"], [411, 2, 1, "", "set_params"], [411, 2, 1, "", "transform"]], "mne.decoding.EMS": [[412, 2, 1, "", "fit"], [412, 2, 1, "", "fit_transform"], [412, 2, 1, "", "get_params"], [412, 2, 1, "", "set_params"], [412, 2, 1, "", "transform"]], "mne.decoding.FilterEstimator": [[413, 2, 1, "", "fit"], [413, 2, 1, "", "fit_transform"], [413, 2, 1, "", "transform"]], "mne.decoding.GeneralizingEstimator": [[414, 2, 1, "", "decision_function"], [414, 2, 1, "", "fit"], [414, 2, 1, "", "fit_transform"], [414, 2, 1, "", "get_params"], [414, 2, 1, "", "predict"], [414, 2, 1, "", "predict_proba"], [414, 2, 1, "", "score"], [414, 2, 1, "", "set_params"], [414, 2, 1, "", "transform"]], "mne.decoding.LinearModel": [[415, 2, 1, "", "decision_function"], [415, 2, 1, "", "fit"], [415, 2, 1, "", "fit_transform"], [415, 2, 1, "", "get_params"], [415, 2, 1, "", "predict"], [415, 2, 1, "", "predict_proba"], [415, 2, 1, "", "score"], [415, 2, 1, "", "set_params"], [415, 2, 1, "", "transform"]], "mne.decoding.PSDEstimator": [[416, 2, 1, "", "fit"], [416, 2, 1, "", "fit_transform"], [416, 2, 1, "", "transform"]], "mne.decoding.ReceptiveField": [[417, 2, 1, "", "fit"], [417, 2, 1, "", "get_params"], [417, 2, 1, "", "predict"], [417, 2, 1, "", "score"], [417, 2, 1, "", "set_params"]], "mne.decoding.SPoC": [[418, 2, 1, "", "fit"], [418, 2, 1, "", "fit_transform"], [418, 2, 1, "", "get_params"], [418, 2, 1, "", "plot_filters"], [418, 2, 1, "", "plot_patterns"], [418, 2, 1, "", "set_params"], [418, 2, 1, "", "transform"]], "mne.decoding.SSD": [[419, 2, 1, "", "apply"], [419, 2, 1, "", "fit"], [419, 2, 1, "", "fit_transform"], [419, 2, 1, "", "get_params"], [419, 2, 1, "", "get_spectral_ratio"], [419, 2, 1, "", "inverse_transform"], [419, 2, 1, "", "set_params"], [419, 2, 1, "", "transform"]], "mne.decoding.Scaler": [[420, 2, 1, "", "fit"], [420, 2, 1, "", "fit_transform"], [420, 2, 1, "", "get_params"], [420, 2, 1, "", "inverse_transform"], [420, 2, 1, "", "set_params"], [420, 2, 1, "", "transform"]], "mne.decoding.SlidingEstimator": [[421, 2, 1, "", "decision_function"], [421, 2, 1, "", "fit"], [421, 2, 1, "", "fit_transform"], [421, 2, 1, "", "get_params"], [421, 2, 1, "", "predict"], [421, 2, 1, "", "predict_proba"], [421, 2, 1, "", "score"], [421, 2, 1, "", "set_params"], [421, 2, 1, "", "transform"]], "mne.decoding.TemporalFilter": [[422, 2, 1, "", "fit"], [422, 2, 1, "", "fit_transform"], [422, 2, 1, "", "transform"]], "mne.decoding.TimeDelayingRidge": [[423, 2, 1, "", "fit"], [423, 2, 1, "", "get_params"], [423, 2, 1, "", "predict"], [423, 2, 1, "", "set_params"]], "mne.decoding.TimeFrequency": [[424, 2, 1, "", "fit"], [424, 2, 1, "", "fit_transform"], [424, 2, 1, "", "get_params"], [424, 2, 1, "", "set_params"], [424, 2, 1, "", "transform"]], "mne.decoding.UnsupervisedSpatialFilter": [[425, 2, 1, "", "fit"], [425, 2, 1, "", "fit_transform"], [425, 2, 1, "", "get_params"], [425, 2, 1, "", "inverse_transform"], [425, 2, 1, "", "set_params"], [425, 2, 1, "", "transform"]], "mne.decoding.Vectorizer": [[426, 2, 1, "", "fit"], [426, 2, 1, "", "fit_transform"], [426, 2, 1, "", "inverse_transform"], [426, 2, 1, "", "transform"]], "mne.dipole": [[431, 4, 1, "", "get_phantom_dipoles"]], "mne.epochs": [[432, 4, 1, "", "average_movements"], [433, 4, 1, "", "combine_event_ids"], [434, 4, 1, "", "equalize_epoch_counts"], [435, 4, 1, "", "make_metadata"]], "mne.event": [[437, 4, 1, "", "define_target_events"], [438, 4, 1, "", "match_event_names"], [439, 4, 1, "", "shift_time_events"]], "mne.export": [[441, 4, 1, "", "export_epochs"], [442, 4, 1, "", "export_evokeds"], [443, 4, 1, "", "export_evokeds_mff"], [444, 4, 1, "", "export_raw"]], "mne.filter": [[446, 4, 1, "", "construct_iir_filter"], [447, 4, 1, "", "create_filter"], [448, 4, 1, "", "estimate_ringing_samples"], [449, 4, 1, "", "filter_data"], [450, 4, 1, "", "notch_filter"], [451, 4, 1, "", "resample"]], "mne.forward": [[455, 4, 1, "", "compute_depth_prior"], [456, 4, 1, "", "compute_orient_prior"], [457, 4, 1, "", "restrict_forward_to_label"], [458, 4, 1, "", "restrict_forward_to_stc"]], "mne.gui": [[470, 4, 1, "", "coregistration"], [471, 4, 1, "", "locate_ieeg"]], "mne.inverse_sparse": [[474, 4, 1, "", "gamma_map"], [475, 4, 1, "", "make_stc_from_dipoles"], [476, 4, 1, "", "mixed_norm"], [477, 4, 1, "", "tf_mixed_norm"]], "mne.io": [[478, 1, 1, "", "BaseRaw"], [479, 1, 1, "", "Raw"], [480, 1, 1, "", "RawArray"], [481, 4, 1, "", "anonymize_info"], [877, 0, 0, "-", "kit"], [483, 4, 1, "", "read_fiducials"], [484, 4, 1, "", "read_info"], [485, 4, 1, "", "read_raw"], [486, 4, 1, "", "read_raw_artemis123"], [487, 4, 1, "", "read_raw_bdf"], [488, 4, 1, "", "read_raw_boxy"], [489, 4, 1, "", "read_raw_brainvision"], [490, 4, 1, "", "read_raw_bti"], [491, 4, 1, "", "read_raw_cnt"], [492, 4, 1, "", "read_raw_ctf"], [493, 4, 1, "", "read_raw_curry"], [494, 4, 1, "", "read_raw_edf"], [495, 4, 1, "", "read_raw_eeglab"], [496, 4, 1, "", "read_raw_egi"], [497, 4, 1, "", "read_raw_eximia"], [498, 4, 1, "", "read_raw_eyelink"], [499, 4, 1, "", "read_raw_fieldtrip"], [500, 4, 1, "", "read_raw_fif"], [501, 4, 1, "", "read_raw_fil"], [502, 4, 1, "", "read_raw_gdf"], [503, 4, 1, "", "read_raw_hitachi"], [504, 4, 1, "", "read_raw_kit"], [505, 4, 1, "", "read_raw_nedf"], [506, 4, 1, "", "read_raw_nicolet"], [507, 4, 1, "", "read_raw_nihon"], [508, 4, 1, "", "read_raw_nirx"], [509, 4, 1, "", "read_raw_persyst"], [510, 4, 1, "", "read_raw_snirf"], [511, 4, 1, "", "show_fiff"], [512, 4, 1, "", "write_fiducials"]], "mne.io.Raw": [[479, 2, 1, "", "__contains__"], [479, 2, 1, "", "__getitem__"], [479, 2, 1, "", "__len__"], [479, 3, 1, "", "acqparser"], [479, 2, 1, "", "add_channels"], [479, 2, 1, "", "add_events"], [479, 2, 1, "", "add_proj"], [479, 2, 1, "", "add_reference_channels"], [479, 3, 1, "", "annotations"], [479, 2, 1, "", "anonymize"], [479, 2, 1, "", "append"], [479, 2, 1, "", "apply_function"], [479, 2, 1, "", "apply_gradient_compensation"], [479, 2, 1, "", "apply_hilbert"], [479, 2, 1, "", "apply_proj"], [479, 3, 1, "", "ch_names"], [479, 2, 1, "", "close"], [479, 3, 1, "", "compensation_grade"], [479, 2, 1, "", "compute_psd"], [479, 2, 1, "", "copy"], [479, 2, 1, "", "crop"], [479, 2, 1, "", "crop_by_annotations"], [479, 2, 1, "", "decimate"], [479, 2, 1, "", "del_proj"], [479, 2, 1, "", "describe"], [479, 2, 1, "", "drop_channels"], [479, 2, 1, "", "export"], [479, 3, 1, "", "filenames"], [479, 2, 1, "", "filter"], [479, 3, 1, "", "first_samp"], [479, 3, 1, "", "first_time"], [479, 2, 1, "", "fix_mag_coil_types"], [479, 2, 1, "", "get_channel_types"], [479, 2, 1, "", "get_data"], [479, 2, 1, "", "get_montage"], [479, 2, 1, "", "interpolate_bads"], [479, 3, 1, "", "last_samp"], [479, 2, 1, "", "load_bad_channels"], [479, 2, 1, "", "load_data"], [479, 3, 1, "", "n_times"], [479, 2, 1, "", "notch_filter"], [479, 2, 1, "", "pick"], [479, 2, 1, "", "pick_channels"], [479, 2, 1, "", "pick_types"], [479, 2, 1, "", "plot"], [479, 2, 1, "", "plot_projs_topomap"], [479, 2, 1, "", "plot_psd"], [479, 2, 1, "", "plot_psd_topo"], [479, 2, 1, "", "plot_psd_topomap"], [479, 2, 1, "", "plot_sensors"], [479, 3, 1, "", "proj"], [479, 2, 1, "", "rename_channels"], [479, 2, 1, "", "reorder_channels"], [479, 2, 1, "", "resample"], [479, 2, 1, "", "save"], [479, 2, 1, "", "savgol_filter"], [479, 2, 1, "", "set_annotations"], [479, 2, 1, "", "set_channel_types"], [479, 2, 1, "", "set_eeg_reference"], [479, 2, 1, "", "set_meas_date"], [479, 2, 1, "", "set_montage"], [479, 2, 1, "", "shift_time"], [479, 2, 1, "", "time_as_index"], [479, 3, 1, "", "times"], [479, 3, 1, "", "tmax"], [479, 3, 1, "", "tmin"], [479, 2, 1, "", "to_data_frame"]], "mne.io.RawArray": [[480, 2, 1, "", "__contains__"], [480, 2, 1, "", "__getitem__"], [480, 2, 1, "", "__len__"], [480, 2, 1, "", "add_channels"], [480, 2, 1, "", "add_events"], [480, 2, 1, "", "add_proj"], [480, 2, 1, "", "add_reference_channels"], [480, 3, 1, "", "annotations"], [480, 2, 1, "", "anonymize"], [480, 2, 1, "", "append"], [480, 2, 1, "", "apply_function"], [480, 2, 1, "", "apply_gradient_compensation"], [480, 2, 1, "", "apply_hilbert"], [480, 2, 1, "", "apply_proj"], [480, 3, 1, "", "ch_names"], [480, 2, 1, "", "close"], [480, 3, 1, "", "compensation_grade"], [480, 2, 1, "", "compute_psd"], [480, 2, 1, "", "copy"], [480, 2, 1, "", "crop"], [480, 2, 1, "", "crop_by_annotations"], [480, 2, 1, "", "decimate"], [480, 2, 1, "", "del_proj"], [480, 2, 1, "", "describe"], [480, 2, 1, "", "drop_channels"], [480, 2, 1, "", "export"], [480, 3, 1, "", "filenames"], [480, 2, 1, "", "filter"], [480, 3, 1, "", "first_samp"], [480, 3, 1, "", "first_time"], [480, 2, 1, "", "get_channel_types"], [480, 2, 1, "", "get_data"], [480, 2, 1, "", "get_montage"], [480, 2, 1, "", "interpolate_bads"], [480, 3, 1, "", "last_samp"], [480, 2, 1, "", "load_bad_channels"], [480, 2, 1, "", "load_data"], [480, 3, 1, "", "n_times"], [480, 2, 1, "", "notch_filter"], [480, 2, 1, "", "pick"], [480, 2, 1, "", "pick_channels"], [480, 2, 1, "", "pick_types"], [480, 2, 1, "", "plot"], [480, 2, 1, "", "plot_projs_topomap"], [480, 2, 1, "", "plot_psd"], [480, 2, 1, "", "plot_psd_topo"], [480, 2, 1, "", "plot_psd_topomap"], [480, 2, 1, "", "plot_sensors"], [480, 3, 1, "", "proj"], [480, 2, 1, "", "rename_channels"], [480, 2, 1, "", "reorder_channels"], [480, 2, 1, "", "resample"], [480, 2, 1, "", "save"], [480, 2, 1, "", "savgol_filter"], [480, 2, 1, "", "set_annotations"], [480, 2, 1, "", "set_channel_types"], [480, 2, 1, "", "set_eeg_reference"], [480, 2, 1, "", "set_meas_date"], [480, 2, 1, "", "set_montage"], [480, 2, 1, "", "shift_time"], [480, 2, 1, "", "time_as_index"], [480, 3, 1, "", "times"], [480, 3, 1, "", "tmax"], [480, 3, 1, "", "tmin"], [480, 2, 1, "", "to_data_frame"]], "mne.io.kit": [[482, 4, 1, "", "read_mrk"]], "mne.label": [[513, 4, 1, "", "select_sources"]], "mne.minimum_norm": [[527, 1, 1, "", "InverseOperator"], [528, 4, 1, "", "apply_inverse"], [529, 4, 1, "", "apply_inverse_cov"], [530, 4, 1, "", "apply_inverse_epochs"], [531, 4, 1, "", "apply_inverse_raw"], [532, 4, 1, "", "apply_inverse_tfr_epochs"], [533, 4, 1, "", "compute_rank_inverse"], [534, 4, 1, "", "compute_source_psd"], [535, 4, 1, "", "compute_source_psd_epochs"], [536, 4, 1, "", "estimate_snr"], [537, 4, 1, "", "get_cross_talk"], [538, 4, 1, "", "get_point_spread"], [539, 4, 1, "", "make_inverse_operator"], [540, 4, 1, "", "make_inverse_resolution_matrix"], [541, 4, 1, "", "prepare_inverse_operator"], [542, 4, 1, "", "read_inverse_operator"], [543, 4, 1, "", "resolution_metrics"], [544, 4, 1, "", "source_band_induced_power"], [545, 4, 1, "", "source_induced_power"], [546, 4, 1, "", "write_inverse_operator"]], "mne.minimum_norm.InverseOperator": [[527, 2, 1, "", "__contains__"], [527, 2, 1, "", "__getitem__"], [527, 2, 1, "", "__iter__"], [527, 2, 1, "", "__len__"], [527, 2, 1, "", "clear"], [527, 2, 1, "", "copy"], [527, 2, 1, "", "fromkeys"], [527, 2, 1, "", "get"], [527, 2, 1, "", "items"], [527, 2, 1, "", "keys"], [527, 2, 1, "", "pop"], [527, 2, 1, "", "popitem"], [527, 2, 1, "", "setdefault"], [527, 2, 1, "", "update"], [527, 2, 1, "", "values"]], "mne.preprocessing": [[560, 1, 1, "", "EOGRegression"], [561, 1, 1, "", "ICA"], [562, 1, 1, "", "Xdawn"], [563, 4, 1, "", "annotate_amplitude"], [564, 4, 1, "", "annotate_break"], [565, 4, 1, "", "annotate_movement"], [566, 4, 1, "", "annotate_muscle_zscore"], [567, 4, 1, "", "annotate_nan"], [568, 4, 1, "", "compute_average_dev_head_t"], [569, 4, 1, "", "compute_bridged_electrodes"], [570, 4, 1, "", "compute_current_source_density"], [571, 4, 1, "", "compute_fine_calibration"], [572, 4, 1, "", "compute_maxwell_basis"], [573, 4, 1, "", "compute_proj_ecg"], [574, 4, 1, "", "compute_proj_eog"], [575, 4, 1, "", "compute_proj_hfc"], [576, 4, 1, "", "corrmap"], [577, 4, 1, "", "cortical_signal_suppression"], [578, 4, 1, "", "create_ecg_epochs"], [579, 4, 1, "", "create_eog_epochs"], [580, 4, 1, "", "equalize_bads"], [875, 0, 0, "-", "eyetracking"], [582, 4, 1, "", "find_bad_channels_maxwell"], [583, 4, 1, "", "find_ecg_events"], [584, 4, 1, "", "find_eog_events"], [585, 4, 1, "", "fix_stim_artifact"], [586, 4, 1, "", "ica_find_ecg_events"], [587, 4, 1, "", "ica_find_eog_events"], [875, 0, 0, "-", "ieeg"], [591, 4, 1, "", "infomax"], [592, 4, 1, "", "interpolate_bridged_electrodes"], [593, 4, 1, "", "maxwell_filter"], [594, 4, 1, "", "maxwell_filter_prepare_emptyroom"], [875, 0, 0, "-", "nirs"], [601, 4, 1, "", "oversampled_temporal_projection"], [602, 4, 1, "", "peak_finder"], [603, 4, 1, "", "read_eog_regression"], [604, 4, 1, "", "read_fine_calibration"], [605, 4, 1, "", "read_ica"], [606, 4, 1, "", "read_ica_eeglab"], [607, 4, 1, "", "realign_raw"], [608, 4, 1, "", "regress_artifact"], [609, 4, 1, "", "write_fine_calibration"]], "mne.preprocessing.EOGRegression": [[560, 2, 1, "", "apply"], [560, 2, 1, "", "fit"], [560, 2, 1, "", "plot"], [560, 2, 1, "", "save"]], "mne.preprocessing.ICA": [[561, 2, 1, "", "__contains__"], [561, 2, 1, "", "apply"], [561, 3, 1, "", "compensation_grade"], [561, 2, 1, "", "copy"], [561, 2, 1, "", "find_bads_ecg"], [561, 2, 1, "", "find_bads_eog"], [561, 2, 1, "", "find_bads_muscle"], [561, 2, 1, "", "find_bads_ref"], [561, 2, 1, "", "fit"], [561, 2, 1, "", "get_channel_types"], [561, 2, 1, "", "get_components"], [561, 2, 1, "", "get_explained_variance_ratio"], [561, 2, 1, "", "get_sources"], [561, 2, 1, "", "plot_components"], [561, 2, 1, "", "plot_overlay"], [561, 2, 1, "", "plot_properties"], [561, 2, 1, "", "plot_scores"], [561, 2, 1, "", "plot_sources"], [561, 2, 1, "", "save"], [561, 2, 1, "", "score_sources"]], "mne.preprocessing.Xdawn": [[562, 2, 1, "", "apply"], [562, 2, 1, "", "fit"], [562, 2, 1, "", "fit_transform"], [562, 2, 1, "", "get_params"], [562, 2, 1, "", "inverse_transform"], [562, 2, 1, "", "set_params"], [562, 2, 1, "", "transform"]], "mne.preprocessing.eyetracking": [[581, 4, 1, "", "set_channel_types_eyetrack"]], "mne.preprocessing.ieeg": [[588, 4, 1, "", "make_montage_volume"], [589, 4, 1, "", "project_sensors_onto_brain"], [590, 4, 1, "", "warp_montage"]], "mne.preprocessing.nirs": [[595, 4, 1, "", "beer_lambert_law"], [596, 4, 1, "", "optical_density"], [597, 4, 1, "", "scalp_coupling_index"], [598, 4, 1, "", "short_channels"], [599, 4, 1, "", "source_detector_distances"], [600, 4, 1, "", "temporal_derivative_distribution_repair"]], "mne.simulation": [[656, 1, 1, "", "SourceSimulator"], [657, 4, 1, "", "add_chpi"], [658, 4, 1, "", "add_ecg"], [659, 4, 1, "", "add_eog"], [660, 4, 1, "", "add_noise"], [881, 0, 0, "-", "metrics"], [669, 4, 1, "", "select_source_in_label"], [670, 4, 1, "", "simulate_evoked"], [671, 4, 1, "", "simulate_raw"], [672, 4, 1, "", "simulate_sparse_stc"], [673, 4, 1, "", "simulate_stc"]], "mne.simulation.SourceSimulator": [[656, 2, 1, "", "__iter__"], [656, 2, 1, "", "add_data"], [656, 3, 1, "", "duration"], [656, 2, 1, "", "get_stc"], [656, 2, 1, "", "get_stim_channel"], [656, 3, 1, "", "n_times"]], "mne.simulation.metrics": [[661, 4, 1, "", "cosine_score"], [662, 4, 1, "", "f1_score"], [663, 4, 1, "", "peak_position_error"], [664, 4, 1, "", "precision_score"], [665, 4, 1, "", "recall_score"], [666, 4, 1, "", "region_localization_error"], [667, 4, 1, "", "roc_auc_score"], [668, 4, 1, "", "spatial_deviation_error"]], "mne.source_space": [[674, 4, 1, "", "compute_distance_to_sensors"], [675, 4, 1, "", "get_decimated_surfaces"]], "mne.stats": [[684, 4, 1, "", "bonferroni_correction"], [685, 4, 1, "", "bootstrap_confidence_interval"], [686, 4, 1, "", "combine_adjacency"], [687, 4, 1, "", "f_mway_rm"], [688, 4, 1, "", "f_oneway"], [689, 4, 1, "", "f_threshold_mway_rm"], [690, 4, 1, "", "fdr_correction"], [691, 4, 1, "", "linear_regression"], [692, 4, 1, "", "linear_regression_raw"], [693, 4, 1, "", "permutation_cluster_1samp_test"], [694, 4, 1, "", "permutation_cluster_test"], [695, 4, 1, "", "permutation_t_test"], [696, 4, 1, "", "spatio_temporal_cluster_1samp_test"], [697, 4, 1, "", "spatio_temporal_cluster_test"], [698, 4, 1, "", "summarize_clusters_stc"], [699, 4, 1, "", "ttest_1samp_no_p"], [700, 4, 1, "", "ttest_ind_no_p"]], "mne.surface": [[703, 4, 1, "", "complete_surface_info"], [704, 4, 1, "", "read_curvature"]], "mne.time_frequency": [[706, 1, 1, "", "AverageTFR"], [707, 1, 1, "", "CrossSpectralDensity"], [708, 1, 1, "", "EpochsSpectrum"], [709, 1, 1, "", "EpochsTFR"], [710, 1, 1, "", "Spectrum"], [711, 4, 1, "", "csd_array_fourier"], [712, 4, 1, "", "csd_array_morlet"], [713, 4, 1, "", "csd_array_multitaper"], [714, 4, 1, "", "csd_fourier"], [715, 4, 1, "", "csd_morlet"], [716, 4, 1, "", "csd_multitaper"], [717, 4, 1, "", "csd_tfr"], [718, 4, 1, "", "dpss_windows"], [719, 4, 1, "", "fit_iir_model_raw"], [720, 4, 1, "", "fwhm"], [721, 4, 1, "", "istft"], [722, 4, 1, "", "morlet"], [723, 4, 1, "", "pick_channels_csd"], [724, 4, 1, "", "psd_array_multitaper"], [725, 4, 1, "", "psd_array_welch"], [726, 4, 1, "", "read_csd"], [727, 4, 1, "", "read_spectrum"], [728, 4, 1, "", "read_tfrs"], [729, 4, 1, "", "stft"], [730, 4, 1, "", "stftfreq"], [884, 0, 0, "-", "tfr"], [733, 4, 1, "", "tfr_array_morlet"], [734, 4, 1, "", "tfr_array_multitaper"], [735, 4, 1, "", "tfr_array_stockwell"], [736, 4, 1, "", "tfr_morlet"], [737, 4, 1, "", "tfr_multitaper"], [738, 4, 1, "", "tfr_stockwell"], [739, 4, 1, "", "write_tfrs"]], "mne.time_frequency.AverageTFR": [[706, 2, 1, "", "__add__"], [706, 2, 1, "", "__contains__"], [706, 2, 1, "", "__mul__"], [706, 2, 1, "", "__sub__"], [706, 2, 1, "", "add_channels"], [706, 2, 1, "", "add_reference_channels"], [706, 2, 1, "", "apply_baseline"], [706, 3, 1, "", "ch_names"], [706, 3, 1, "", "compensation_grade"], [706, 2, 1, "", "copy"], [706, 2, 1, "", "crop"], [706, 2, 1, "", "decimate"], [706, 2, 1, "", "drop_channels"], [706, 2, 1, "", "get_channel_types"], [706, 2, 1, "", "pick"], [706, 2, 1, "", "pick_channels"], [706, 2, 1, "", "pick_types"], [706, 2, 1, "", "plot"], [706, 2, 1, "", "plot_joint"], [706, 2, 1, "", "plot_topo"], [706, 2, 1, "", "plot_topomap"], [706, 2, 1, "", "reorder_channels"], [706, 2, 1, "", "save"], [706, 2, 1, "", "shift_time"], [706, 2, 1, "", "time_as_index"], [706, 3, 1, "", "times"], [706, 3, 1, "", "tmax"], [706, 3, 1, "", "tmin"], [706, 2, 1, "", "to_data_frame"]], "mne.time_frequency.CrossSpectralDensity": [[707, 2, 1, "", "__getitem__"], [707, 2, 1, "", "__len__"], [707, 2, 1, "", "copy"], [707, 2, 1, "", "get_data"], [707, 2, 1, "", "mean"], [707, 3, 1, "", "n_channels"], [707, 2, 1, "", "pick_channels"], [707, 2, 1, "", "pick_frequency"], [707, 2, 1, "", "plot"], [707, 2, 1, "", "save"], [707, 2, 1, "", "sum"]], "mne.time_frequency.EpochsSpectrum": [[708, 2, 1, "", "__contains__"], [708, 2, 1, "", "__getitem__"], [708, 2, 1, "", "__iter__"], [708, 2, 1, "", "__len__"], [708, 2, 1, "", "add_channels"], [708, 2, 1, "", "add_reference_channels"], [708, 2, 1, "", "average"], [708, 3, 1, "", "compensation_grade"], [708, 2, 1, "", "copy"], [708, 2, 1, "", "drop_channels"], [708, 2, 1, "", "get_channel_types"], [708, 2, 1, "", "get_data"], [708, 3, 1, "", "metadata"], [708, 2, 1, "", "next"], [708, 2, 1, "", "pick"], [708, 2, 1, "", "pick_channels"], [708, 2, 1, "", "pick_types"], [708, 2, 1, "", "plot"], [708, 2, 1, "", "plot_topo"], [708, 2, 1, "", "plot_topomap"], [708, 2, 1, "", "reorder_channels"], [708, 2, 1, "", "save"], [708, 2, 1, "", "to_data_frame"], [708, 2, 1, "", "units"]], "mne.time_frequency.EpochsTFR": [[709, 2, 1, "", "__contains__"], [709, 2, 1, "", "__getitem__"], [709, 2, 1, "", "__iter__"], [709, 2, 1, "", "__len__"], [709, 2, 1, "", "add_channels"], [709, 2, 1, "", "add_reference_channels"], [709, 2, 1, "", "apply_baseline"], [709, 2, 1, "", "average"], [709, 3, 1, "", "ch_names"], [709, 3, 1, "", "compensation_grade"], [709, 2, 1, "", "copy"], [709, 2, 1, "", "crop"], [709, 2, 1, "", "decimate"], [709, 2, 1, "", "drop_channels"], [709, 2, 1, "", "get_channel_types"], [709, 3, 1, "", "metadata"], [709, 2, 1, "", "next"], [709, 2, 1, "", "pick"], [709, 2, 1, "", "pick_channels"], [709, 2, 1, "", "pick_types"], [709, 2, 1, "", "reorder_channels"], [709, 2, 1, "", "save"], [709, 2, 1, "", "shift_time"], [709, 2, 1, "", "time_as_index"], [709, 3, 1, "", "times"], [709, 3, 1, "", "tmax"], [709, 3, 1, "", "tmin"], [709, 2, 1, "", "to_data_frame"]], "mne.time_frequency.Spectrum": [[710, 2, 1, "", "__contains__"], [710, 2, 1, "", "__getitem__"], [710, 2, 1, "", "add_channels"], [710, 2, 1, "", "add_reference_channels"], [710, 3, 1, "", "compensation_grade"], [710, 2, 1, "", "copy"], [710, 2, 1, "", "drop_channels"], [710, 2, 1, "", "get_channel_types"], [710, 2, 1, "", "get_data"], [710, 2, 1, "", "pick"], [710, 2, 1, "", "pick_channels"], [710, 2, 1, "", "pick_types"], [710, 2, 1, "", "plot"], [710, 2, 1, "", "plot_topo"], [710, 2, 1, "", "plot_topomap"], [710, 2, 1, "", "reorder_channels"], [710, 2, 1, "", "save"], [710, 2, 1, "", "to_data_frame"], [710, 2, 1, "", "units"]], "mne.time_frequency.tfr": [[731, 4, 1, "", "cwt"], [732, 4, 1, "", "morlet"]], "mne.transforms": [[741, 1, 1, "", "Transform"], [742, 4, 1, "", "apply_volume_registration"], [743, 4, 1, "", "apply_volume_registration_points"], [744, 4, 1, "", "compute_volume_registration"], [745, 4, 1, "", "quat_to_rot"], [746, 4, 1, "", "read_ras_mni_t"], [747, 4, 1, "", "rot_to_quat"]], "mne.transforms.Transform": [[741, 2, 1, "", "__contains__"], [741, 2, 1, "", "__getitem__"], [741, 2, 1, "", "__iter__"], [741, 2, 1, "", "__len__"], [741, 2, 1, "", "clear"], [741, 2, 1, "", "copy"], [741, 3, 1, "", "from_str"], [741, 2, 1, "", "fromkeys"], [741, 2, 1, "", "get"], [741, 2, 1, "", "items"], [741, 2, 1, "", "keys"], [741, 2, 1, "", "pop"], [741, 2, 1, "", "popitem"], [741, 2, 1, "", "save"], [741, 2, 1, "", "setdefault"], [741, 3, 1, "", "to_str"], [741, 2, 1, "", "update"], [741, 2, 1, "", "values"]], "mne.utils": [[750, 1, 1, "", "deprecated"], [751, 4, 1, "", "warn"]], "mne.viz": [[754, 1, 1, "", "Brain"], [755, 1, 1, "", "ClickableImage"], [756, 1, 1, "", "Figure3D"], [757, 4, 1, "", "add_background_image"], [758, 4, 1, "", "centers_to_edges"], [759, 4, 1, "", "circular_layout"], [760, 4, 1, "", "close_3d_figure"], [761, 4, 1, "", "close_all_3d_figures"], [762, 4, 1, "", "compare_fiff"], [763, 4, 1, "", "create_3d_figure"], [764, 4, 1, "", "get_3d_backend"], [765, 4, 1, "", "get_brain_class"], [766, 4, 1, "", "get_browser_backend"], [767, 4, 1, "", "iter_topography"], [768, 4, 1, "", "link_brains"], [769, 4, 1, "", "mne_analyze_colormap"], [770, 4, 1, "", "plot_alignment"], [771, 4, 1, "", "plot_arrowmap"], [772, 4, 1, "", "plot_bem"], [773, 4, 1, "", "plot_brain_colorbar"], [774, 4, 1, "", "plot_bridged_electrodes"], [775, 4, 1, "", "plot_ch_adjacency"], [776, 4, 1, "", "plot_channel_labels_circle"], [777, 4, 1, "", "plot_chpi_snr"], [778, 4, 1, "", "plot_compare_evokeds"], [779, 4, 1, "", "plot_cov"], [780, 4, 1, "", "plot_csd"], [781, 4, 1, "", "plot_dipole_amplitudes"], [782, 4, 1, "", "plot_dipole_locations"], [783, 4, 1, "", "plot_drop_log"], [784, 4, 1, "", "plot_epochs"], [785, 4, 1, "", "plot_epochs_image"], [786, 4, 1, "", "plot_epochs_psd_topomap"], [787, 4, 1, "", "plot_events"], [788, 4, 1, "", "plot_evoked"], [789, 4, 1, "", "plot_evoked_field"], [790, 4, 1, "", "plot_evoked_image"], [791, 4, 1, "", "plot_evoked_joint"], [792, 4, 1, "", "plot_evoked_topo"], [793, 4, 1, "", "plot_evoked_topomap"], [794, 4, 1, "", "plot_evoked_white"], [795, 4, 1, "", "plot_filter"], [796, 4, 1, "", "plot_head_positions"], [797, 4, 1, "", "plot_ica_components"], [798, 4, 1, "", "plot_ica_overlay"], [799, 4, 1, "", "plot_ica_properties"], [800, 4, 1, "", "plot_ica_scores"], [801, 4, 1, "", "plot_ica_sources"], [802, 4, 1, "", "plot_ideal_filter"], [803, 4, 1, "", "plot_layout"], [804, 4, 1, "", "plot_montage"], [805, 4, 1, "", "plot_projs_joint"], [806, 4, 1, "", "plot_projs_topomap"], [807, 4, 1, "", "plot_raw"], [808, 4, 1, "", "plot_raw_psd"], [809, 4, 1, "", "plot_regression_weights"], [810, 4, 1, "", "plot_sensors"], [811, 4, 1, "", "plot_snr_estimate"], [812, 4, 1, "", "plot_source_estimates"], [813, 4, 1, "", "plot_sparse_source_estimates"], [814, 4, 1, "", "plot_tfr_topomap"], [815, 4, 1, "", "plot_topo_image_epochs"], [816, 4, 1, "", "plot_topomap"], [817, 4, 1, "", "plot_vector_source_estimates"], [818, 4, 1, "", "plot_volume_source_estimates"], [819, 4, 1, "", "set_3d_backend"], [820, 4, 1, "", "set_3d_options"], [821, 4, 1, "", "set_3d_title"], [822, 4, 1, "", "set_3d_view"], [823, 4, 1, "", "set_browser_backend"], [824, 4, 1, "", "snapshot_brain_montage"], [825, 4, 1, "", "use_3d_backend"], [826, 4, 1, "", "use_browser_backend"]], "mne.viz.Brain": [[754, 2, 1, "", "add_annotation"], [754, 2, 1, "", "add_data"], [754, 2, 1, "", "add_dipole"], [754, 2, 1, "", "add_foci"], [754, 2, 1, "", "add_forward"], [754, 2, 1, "", "add_head"], [754, 2, 1, "", "add_label"], [754, 2, 1, "", "add_sensors"], [754, 2, 1, "", "add_skull"], [754, 2, 1, "", "add_text"], [754, 2, 1, "", "add_volume_labels"], [754, 2, 1, "", "apply_auto_scaling"], [754, 2, 1, "", "clear_glyphs"], [754, 2, 1, "", "close"], [754, 3, 1, "", "data"], [754, 2, 1, "", "get_picked_points"], [754, 2, 1, "", "get_view"], [754, 2, 1, "", "help"], [754, 3, 1, "", "interaction"], [754, 2, 1, "", "plot_time_course"], [754, 2, 1, "", "plot_time_line"], [754, 2, 1, "", "remove_annotations"], [754, 2, 1, "", "remove_data"], [754, 2, 1, "", "remove_dipole"], [754, 2, 1, "", "remove_forward"], [754, 2, 1, "", "remove_head"], [754, 2, 1, "", "remove_labels"], [754, 2, 1, "", "remove_sensors"], [754, 2, 1, "", "remove_skull"], [754, 2, 1, "", "remove_text"], [754, 2, 1, "", "remove_volume_labels"], [754, 2, 1, "", "reset"], [754, 2, 1, "", "reset_view"], [754, 2, 1, "", "restore_user_scaling"], [754, 2, 1, "", "save_image"], [754, 2, 1, "", "save_movie"], [754, 2, 1, "", "screenshot"], [754, 2, 1, "", "set_data_smoothing"], [754, 2, 1, "", "set_playback_speed"], [754, 2, 1, "", "set_time"], [754, 2, 1, "", "set_time_interpolation"], [754, 2, 1, "", "set_time_point"], [754, 2, 1, "", "setup_time_viewer"], [754, 2, 1, "", "show"], [754, 2, 1, "", "show_view"], [754, 3, 1, "", "time_interpolation"], [754, 2, 1, "", "toggle_interface"], [754, 2, 1, "", "toggle_playback"], [754, 2, 1, "", "update_lut"]], "mne.viz.ClickableImage": [[755, 2, 1, "", "onclick"], [755, 2, 1, "", "plot_clicks"], [755, 2, 1, "", "to_layout"]], "mne.viz.Figure3D": [[756, 3, 1, "", "plotter"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"connect": [0, 27, 145, 246, 845], "analysi": [0, 4, 10, 14, 27, 36, 136, 145, 150, 164, 165, 217, 232, 237, 240, 241, 242, 863, 865, 872], "exampl": [0, 3, 27, 97, 104, 137, 145, 155, 164, 174, 195, 204, 205, 206, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 287, 288, 290, 292, 293, 294, 297, 298, 299, 300, 302, 310, 311, 312, 313, 314, 316, 318, 322, 323, 324, 326, 328, 330, 334, 338, 341, 342, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 371, 373, 382, 389, 402, 403, 411, 412, 414, 415, 417, 418, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 437, 440, 445, 446, 447, 451, 452, 454, 459, 460, 463, 464, 468, 470, 474, 475, 476, 477, 479, 480, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 498, 500, 501, 502, 504, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 548, 550, 552, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 568, 569, 570, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 592, 593, 595, 596, 597, 599, 600, 601, 605, 611, 612, 613, 614, 615, 616, 617, 620, 623, 625, 627, 628, 631, 633, 635, 636, 637, 638, 640, 644, 646, 647, 649, 650, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 670, 671, 672, 673, 674, 678, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 704, 705, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 722, 725, 733, 736, 737, 738, 746, 748, 749, 753, 754, 755, 758, 759, 763, 765, 767, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 781, 782, 785, 787, 790, 792, 794, 795, 796, 802, 805, 806, 811, 812, 813, 816, 817, 821, 822, 824, 826, 834, 839, 862, 871, 874], "brainstorm": [1, 182, 183, 190, 377, 378, 379, 862], "raw": [1, 7, 29, 70, 80, 89, 92, 93, 136, 139, 151, 167, 171, 176, 203, 210, 211, 212, 215, 216, 217, 218, 221, 256, 479, 865, 868, 877], "median": [1, 862], "nerv": [1, 862], "dataset": [1, 2, 3, 4, 7, 27, 70, 82, 182, 183, 184, 190, 215, 241, 249, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 862, 865], "refer": [1, 4, 8, 10, 12, 13, 15, 16, 18, 19, 21, 33, 35, 40, 42, 43, 44, 46, 51, 54, 55, 58, 59, 65, 70, 71, 74, 75, 78, 82, 83, 87, 93, 100, 108, 111, 112, 116, 118, 120, 125, 128, 136, 140, 143, 150, 154, 156, 161, 175, 177, 179, 182, 183, 188, 190, 194, 195, 199, 201, 203, 204, 205, 206, 207, 209, 211, 223, 226, 227, 231, 239, 845, 861, 862, 865, 868, 876], "hf": 2, "sef": [2, 862], "open": [3, 27, 256, 845, 874], "singl": [4, 28, 103, 127, 228, 229, 230], "trial": [4, 127, 210, 216, 228, 229, 230, 240, 241], "linear": [4, 18, 256, 868], "regress": [4, 73, 98, 100, 140, 203, 211], "limo": [4, 395, 862], "about": [4, 169, 170, 198, 868], "data": [4, 5, 7, 8, 11, 13, 15, 18, 19, 21, 27, 29, 30, 41, 42, 49, 51, 57, 63, 65, 71, 73, 75, 79, 80, 85, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 108, 113, 114, 115, 118, 119, 120, 128, 134, 135, 136, 139, 140, 141, 145, 146, 148, 149, 151, 158, 164, 165, 166, 167, 168, 171, 174, 176, 177, 179, 187, 188, 189, 190, 191, 192, 194, 200, 202, 203, 210, 211, 212, 215, 216, 217, 218, 219, 221, 222, 223, 227, 230, 231, 232, 234, 235, 236, 239, 241, 248, 256, 671, 861, 862, 865, 868, 871, 877, 880, 882], "load": [4, 19, 47, 73, 114, 115, 135, 136, 139, 140, 148, 158, 165, 174, 177, 189, 194, 205, 212, 215, 222, 868], "visual": [4, 19, 27, 47, 48, 49, 50, 54, 55, 111, 116, 121, 135, 139, 141, 143, 148, 149, 155, 157, 169, 176, 179, 180, 181, 194, 203, 204, 205, 206, 208, 226, 231, 234, 235, 236, 239, 845, 862, 874, 885], "event": [4, 69, 112, 136, 143, 150, 165, 167, 171, 212, 216, 251, 437, 438, 439], "condit": [4, 13, 131, 150, 229, 230], "erp": [4, 140, 143, 150, 862], "effect": [4, 16, 194, 195, 203, 205, 226, 241, 868], "stimulu": [4, 19, 212], "phase": [4, 106], "coher": [4, 240], "prepar": [4, 5, 143, 203, 236], "defin": [4, 69, 89, 155, 226, 228], "predictor": 4, "variabl": [4, 170, 845], "design": [4, 136, 195, 201, 863], "matrix": [4, 41, 64, 70, 102, 161, 226, 234, 861, 865, 868, 871], "extract": [4, 37, 39, 93, 136, 139, 208, 210, 215, 241], "coeffici": [4, 19], "plot": [4, 18, 34, 41, 42, 43, 44, 47, 48, 50, 60, 69, 70, 80, 81, 83, 115, 117, 118, 119, 122, 123, 124, 125, 126, 127, 132, 135, 140, 141, 149, 151, 161, 169, 210, 212, 216, 218, 222, 228, 229, 240, 241, 843, 865], "model": [4, 19, 23, 27, 45, 110, 156, 157, 162, 164, 165, 176, 179, 194, 196, 207, 254, 256, 861, 867, 868, 874], "result": [4, 43, 44, 54, 241], "optic": [5, 210, 211], "pump": [5, 211], "magnetomet": [5, 211], "opm": [5, 108, 187, 211, 399, 862, 874], "local": [5, 31, 164, 175, 176, 177, 181, 185, 845, 861], "perform": [5, 73, 89, 135, 194], "dipol": [5, 45, 89, 115, 175, 177, 180, 262, 431], "fit": [5, 19, 156, 175, 180, 194, 204], "minimum": [5, 868], "norm": [5, 40, 868], "comput": [6, 16, 20, 21, 25, 28, 29, 30, 32, 33, 34, 35, 39, 40, 41, 42, 45, 46, 47, 49, 51, 54, 55, 56, 58, 59, 66, 70, 84, 89, 90, 93, 101, 102, 103, 105, 106, 107, 108, 109, 111, 129, 135, 138, 147, 153, 157, 158, 161, 163, 169, 173, 176, 178, 179, 186, 193, 197, 201, 203, 204, 205, 208, 214, 220, 225, 228, 229, 231, 233, 234, 235, 236, 238, 243, 247, 256, 861, 868, 874], "time": [6, 9, 13, 20, 25, 27, 32, 37, 39, 46, 56, 59, 66, 69, 70, 72, 84, 85, 90, 93, 101, 104, 105, 113, 129, 135, 138, 139, 141, 143, 144, 147, 153, 163, 164, 165, 173, 180, 186, 193, 195, 197, 204, 214, 215, 220, 225, 228, 229, 231, 233, 238, 240, 241, 242, 243, 845, 874, 884], "from": [7, 8, 15, 19, 37, 38, 43, 44, 61, 89, 103, 128, 136, 139, 141, 143, 148, 167, 168, 187, 188, 189, 191, 203, 206, 210, 212, 215, 216, 217, 218, 221, 222, 248, 256, 872], "dspm": [7, 28, 30, 34, 54, 93, 109, 176, 868], "spm": [7, 862], "face": [7, 862], "motor": [8, 862], "imageri": [8, 862], "decod": [8, 9, 11, 12, 13, 15, 17, 18, 27, 195, 250, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429], "eeg": [8, 15, 22, 55, 58, 65, 67, 70, 71, 78, 117, 124, 150, 158, 165, 181, 187, 188, 207, 227, 241, 861, 868, 874], "us": [8, 9, 14, 18, 26, 32, 33, 34, 35, 39, 47, 57, 63, 67, 71, 83, 93, 136, 142, 145, 148, 154, 155, 156, 159, 160, 170, 179, 194, 204, 207, 209, 230, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 287, 288, 290, 292, 293, 294, 297, 298, 299, 300, 302, 310, 311, 312, 313, 314, 316, 318, 322, 323, 324, 326, 328, 330, 334, 338, 341, 342, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 371, 373, 382, 389, 402, 403, 411, 412, 414, 415, 417, 418, 419, 420, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 437, 440, 445, 446, 447, 451, 452, 454, 459, 460, 463, 464, 468, 470, 474, 475, 476, 477, 479, 480, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 498, 500, 501, 502, 504, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 548, 550, 552, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 568, 569, 570, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 592, 593, 595, 596, 597, 599, 600, 601, 605, 611, 612, 613, 614, 615, 616, 617, 620, 623, 625, 627, 628, 631, 633, 635, 636, 637, 638, 640, 644, 646, 647, 649, 650, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 670, 671, 672, 673, 674, 678, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 704, 705, 706, 707, 708, 709, 710, 714, 715, 716, 717, 719, 722, 725, 733, 736, 737, 738, 746, 748, 749, 753, 754, 755, 758, 759, 763, 765, 767, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 781, 782, 785, 787, 790, 792, 794, 795, 796, 802, 805, 806, 811, 812, 813, 816, 817, 821, 822, 824, 826, 834, 839, 843, 845, 858, 861, 865, 868, 871], "common": [8, 9, 195, 234, 236, 239], "spatial": [8, 9, 16, 21, 54, 55, 179, 195, 222], "pattern": [8, 9, 18, 195], "csp": [8, 9, 411], "frequenc": [9, 27, 32, 46, 59, 104, 112, 113, 135, 164, 165, 189, 198, 201, 208, 228, 229, 231, 239, 240, 241, 242, 862, 874, 884], "space": [9, 11, 13, 18, 24, 26, 30, 41, 54, 58, 100, 103, 106, 109, 145, 157, 158, 162, 164, 177, 195, 205, 206, 209, 216, 222, 234, 236, 256, 861, 868, 871, 880, 882], "represent": [10, 113, 210, 230, 868], "similar": [10, 148], "sourc": [11, 24, 26, 27, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 45, 47, 54, 58, 71, 89, 93, 94, 103, 106, 107, 108, 109, 115, 155, 157, 158, 162, 164, 171, 175, 176, 177, 179, 180, 181, 185, 195, 207, 222, 234, 235, 236, 237, 256, 861, 868, 874, 882], "continu": [12, 80, 98, 100, 145, 146, 164, 165, 189, 194, 208, 215, 217, 218, 219, 868], "target": [12, 69], "spoc": [12, 195, 418], "sensor": [13, 18, 22, 83, 95, 96, 99, 100, 115, 117, 122, 124, 132, 135, 141, 164, 169, 189, 195, 206, 210, 211, 218, 222, 231, 232, 240, 868, 880], "gener": [13, 24, 38, 91, 92, 94, 143, 188, 195, 200, 211, 222, 244, 845, 865, 868], "across": [13, 70, 81, 150, 210], "evok": [14, 30, 34, 41, 51, 69, 85, 89, 91, 93, 118, 119, 120, 126, 131, 148, 149, 150, 151, 152, 164, 165, 171, 176, 203, 211, 221, 266, 861], "respons": [14, 69, 131, 143, 150, 152, 164, 165, 176, 194, 203, 210, 211, 212, 873], "ica": [14, 76, 82, 171, 204, 561, 861], "pca": [14, 47, 256], "reduct": [14, 204, 205, 206], "techniqu": 14, "xdawn": [15, 87, 195, 562], "match": [16, 195, 204], "filter": [16, 18, 21, 49, 79, 113, 150, 179, 195, 201, 202, 204, 209, 211, 446, 447, 448, 449, 450, 451, 868], "em": [16, 412], "machin": [17, 27, 164, 196], "learn": [17, 27, 136, 164, 196], "encod": [17, 27, 671], "mvpa": [17, 27, 195], "classifi": 18, "logisticregress": 18, "recept": [19, 194], "field": [19, 149, 150, 194, 211, 868, 871], "estim": [19, 34, 38, 41, 42, 43, 44, 57, 89, 152, 164, 165, 180, 181, 194, 208, 222, 237, 246, 861, 868], "predict": [19, 868], "public": [19, 126], "creat": [19, 89, 93, 114, 115, 136, 139, 143, 148, 187, 194, 203, 206, 207, 217, 221, 222, 230, 248, 256, 845, 861, 868], "investig": 19, "reconstruct": [19, 89, 93, 154, 159, 179, 206, 861], "spectro": [21, 194], "decomposit": 21, "ssd": [21, 419], "epoch": [21, 28, 42, 93, 103, 113, 116, 136, 139, 141, 142, 143, 144, 145, 146, 148, 150, 151, 164, 165, 171, 200, 203, 204, 210, 221, 231, 234, 236, 264, 432, 433, 434, 435, 861, 868], "displai": 22, "sensit": [22, 130], "map": [22, 35, 111, 119, 130, 141, 148, 149, 216, 223, 868], "meg": [22, 55, 74, 78, 86, 122, 132, 165, 187, 211, 222, 862, 868, 874], "forward": [23, 27, 47, 108, 157, 158, 162, 164, 171, 179, 254, 268, 455, 456, 457, 458, 861, 865, 868], "left": [24, 210], "cerebellum": 24, "volum": [24, 30, 41, 50, 180], "morph": [26, 43, 44, 179, 868], "galleri": 27, "input": [27, 62], "output": [27, 62, 159, 179], "simul": [27, 88, 89, 91, 92, 93, 94, 113, 164, 194, 204, 222, 223, 224, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 881], "preprocess": [27, 77, 108, 135, 140, 164, 165, 210, 211, 213, 217, 241, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 861, 875], "statist": [27, 97, 164, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 241, 868, 874, 883], "invers": [27, 28, 29, 30, 31, 35, 36, 39, 40, 41, 42, 47, 52, 57, 93, 103, 164, 165, 176, 185, 854, 860, 861, 865, 868], "problem": [27, 36, 201], "mne": [28, 30, 41, 42, 54, 60, 76, 115, 123, 137, 154, 159, 160, 164, 165, 170, 171, 176, 178, 187, 199, 201, 204, 205, 209, 212, 215, 221, 226, 245, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 842, 845, 847, 848, 849, 851, 852, 853, 857, 860, 864, 865, 868, 871, 879], "solut": [28, 29, 30, 35, 39, 40, 41, 47, 60, 103, 157, 171, 176, 178, 201, 204, 256, 854, 861, 865, 868], "sloreta": [29, 176, 868], "custom": [31, 126, 132, 171, 189], "solver": 31, "level": [32, 95, 128, 871], "timecours": [32, 45, 126], "dic": [32, 33, 34, 223], "beamform": [32, 33, 34, 49, 179, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301], "power": [33, 34, 42, 103, 106, 107, 108, 109, 135, 141, 150, 195, 198, 202, 223, 228, 229, 230, 240, 241], "er": 34, "lcmv": [34, 49, 179], "covari": [34, 42, 49, 64, 120, 161, 171, 176, 179, 222, 247, 261, 861, 865, 868], "spars": [35, 40, 59], "gamma": [35, 135], "empir": 35, "bayesian": 35, "method": [35, 75, 211, 215, 218, 226], "cours": [37, 93, 180], "source_estim": 37, "object": [37, 44, 136, 139, 141, 142, 144, 148, 149, 167, 168, 215, 217, 218, 221, 239, 248, 862, 865], "function": [38, 47, 48, 49, 50, 136, 210, 226, 236, 845, 849, 865, 871], "label": [38, 39, 41, 47, 103, 106, 107, 222, 270, 513, 871], "seri": [39, 70, 141], "activ": [39, 89, 93, 126, 127, 164, 179, 196, 210], "view": [39, 41, 81, 115, 142, 210, 228, 229, 256], "vector": [39, 43, 60, 171, 179, 180, 195, 426], "mix": [40, 41], "mxne": [40, 46, 59], "irmxn": 40, "set": [41, 43, 144, 150, 156, 170, 188, 207, 228, 230, 231, 234, 235, 236, 256, 845, 861, 862], "up": [41, 43, 156, 160, 256, 845, 861], "our": [41, 181], "fwd": [41, 871], "surfac": [41, 43, 157, 159, 160, 169, 180, 181, 210, 256, 703, 704, 861, 868, 871], "process": [41, 166, 179, 845, 859], "project": [42, 83, 114, 130, 169, 171, 195, 205, 256, 273, 867, 868, 871], "empti": [42, 128, 206], "room": [42, 128, 206], "appli": [42, 43, 44, 75, 136, 143, 179, 187, 189, 201, 203, 205, 241, 256], "oper": [42, 47, 52, 93, 113, 157, 158, 160, 217, 861, 863, 868], "sourcemorph": [43, 44, 276], "sourceestim": [43, 171, 174, 275], "read": [43, 44, 47, 52, 53, 64, 65, 136, 164, 167, 169, 188, 192, 216, 217, 231, 234, 236, 865, 871, 877], "write": [43, 44, 64, 216, 217, 871], "disk": [43, 44, 139], "volumetr": [44, 179, 868], "get": [44, 61, 158, 160, 170, 171, 181, 212, 241, 852, 865, 866, 870], "volsourceestim": [44, 279], "convert": [44, 114, 144, 167, 210, 256], "nifti": 44, "an": [45, 52, 53, 57, 70, 116, 141, 142, 144, 156, 158, 160, 167, 168, 171, 179, 181, 204, 207, 211, 241, 861], "xfit": 45, "like": [45, 169], "multi": 45, "iter": [46, 139], "reweight": 46, "tf": 46, "multiscal": 46, "dictionari": 46, "leakag": 47, "among": [47, 148], "circular": 47, "graph": 47, "organis": 47, "cortic": [47, 68, 125, 135, 159, 234, 236, 861, 868], "parcel": [47, 125], "point": [47, 48, 50, 156, 222, 868], "spread": [47, 48, 50, 222], "summari": [47, 70, 166, 174, 198, 199, 201, 215, 886], "all": [47, 179, 199, 230, 234, 236, 845, 849, 853, 865], "evalu": [47, 210], "base": [47, 69, 136, 140, 200, 256, 863, 868], "psf": [47, 48, 50], "correl": 47, "save": [47, 139, 148, 171, 205, 215], "figur": [47, 126, 171], "option": [47, 119, 256, 845, 865], "individu": [47, 871], "cross": [48, 49, 102, 133, 845], "talk": [48, 49], "ctf": [48, 122, 183, 187, 190], "differ": [49, 76, 89, 131, 140, 164, 192, 194, 241], "matric": [49, 161, 179], "resolut": [49, 54, 55, 160, 191, 256], "two": [49, 222], "rap": 51, "music": 51, "stc": [53, 89, 174, 180, 871], "file": [53, 61, 169, 171, 188, 216, 217, 253, 256, 861, 865, 868, 871], "metric": [54, 55, 70, 661, 662, 663, 664, 665, 666, 667, 668], "compar": [55, 70, 76, 89, 131, 149, 150, 194, 210, 211, 226, 256], "eegmeg": 55, "snr": [57, 58, 208, 241], "prior": 59, "full": [60, 231], "valu": [60, 144, 241], "averag": [61, 113, 148, 150, 207, 212, 868], "info": [61, 168, 215, 221, 256, 269, 871], "fif": [61, 187, 256, 865], "how": [63, 114, 159, 161, 199, 206, 217, 860, 865], "neural": [63, 164, 194, 196, 210], "ensembl": 63, "neo": 63, "format": [63, 144, 188, 189, 868], "nois": [64, 120, 128, 176, 198, 202, 205, 206, 222, 241, 861, 862, 868], "xdf": [65, 188], "contralater": 67, "referenc": [67, 191], "signal": [68, 149, 166, 167, 205, 206, 208, 209, 210, 211, 222, 241, 868, 871], "suppress": [68, 861], "css": 68, "remov": [68, 73, 82, 204, 205, 210, 234, 236], "lag": 69, "identifi": 70, "electrod": [70, 114, 135, 181, 188, 868], "bridg": 70, "too": 70, "much": 70, "gel": 70, "electr": 70, "distanc": 70, "examin": [70, 140, 211], "distribut": [70, 75, 177, 843, 874], "topomap": [70, 119], "voltag": 70, "subject": [70, 93, 208, 256, 862], "eegbci": [70, 82, 380, 381, 862], "The": [70, 139, 143, 148, 166, 167, 168, 169, 174, 177, 179, 200, 215, 239, 861, 862, 867, 868, 871], "relationship": [70, 174], "between": [70, 167, 229], "imped": 70, "transform": [71, 113, 136, 155, 159, 195, 234, 236, 741, 742, 743, 744, 745, 746, 747, 868, 871], "current": [71, 115, 175, 255, 868, 873, 886], "densiti": [71, 102, 103, 107, 108, 210, 218, 241], "csd": [71, 102], "show": [72, 128, 256], "eog": [72, 73, 198, 203, 204, 206, 256], "artifact": [72, 73, 74, 75, 80, 81, 198, 202, 203, 204, 206, 256, 861], "reduc": 73, "through": 73, "import": [73, 75, 126, 187, 188, 189, 191, 256, 845], "packag": [73, 853, 868], "befor": [73, 203, 845], "after": [73, 843], "comparison": [73, 133, 226, 230], "find": [74, 222, 231, 234], "channel": [74, 78, 86, 116, 139, 144, 148, 150, 166, 167, 168, 169, 187, 199, 200, 204, 207, 210, 212, 215, 231, 234, 236, 241, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 671, 861, 862, 868, 871], "visualis": [75, 227], "nir": [75, 595, 596, 597, 598, 599, 600], "correct": [75, 96, 140, 143, 211, 226], "add": [75, 115], "artifici": 75, "tempor": [75, 83, 110, 194, 195, 234, 235, 236], "deriv": 75, "repair": [75, 202, 203, 204, 206, 868], "algorithm": [76, 256, 860, 868], "interpol": [78, 119, 199, 868], "bad": [78, 155, 156, 160, 199, 200, 234, 236, 861, 868], "maxwel": [79, 209, 868], "movement": [79, 80, 208, 209], "compens": [79, 187, 209, 868, 871], "annot": [80, 81, 136, 167, 200, 210, 217, 258, 861], "reestim": 80, "dev_head_t": 80, "head": [80, 115, 155, 157, 159, 160, 181, 188, 191, 208, 256, 861, 868], "posit": [80, 114, 115, 191, 208], "respect": 80, "mean": [80, 150], "record": [80, 81, 164, 188, 192, 206], "muscl": [81, 82], "z": 81, "score": [81, 89], "compon": [82, 143, 179, 204], "let": 82, "": [82, 113, 159, 886], "now": 82, "replic": 82, "thi": [82, 194], "denois": [83, 87, 211], "oversampl": 83, "shift": 85, "scale": [85, 144, 151, 868], "remap": 86, "type": [86, 139, 150, 168, 194, 201, 215, 241, 256, 845, 868], "main": 89, "paramet": [89, 166, 200, 228, 230, 231, 234, 235, 236], "true": 89, "correspond": [89, 861], "amplitud": [89, 150, 200], "threshold": [89, 226, 227], "For": [89, 871], "region": [89, 115, 150], "anatomi": 93, "responss": 93, "permut": [95, 99, 230, 231, 234, 235], "f": [95, 98, 231], "test": [95, 96, 99, 136, 226, 230, 231, 234, 235, 844, 845, 851], "1d": 95, "cluster": [95, 226, 228, 229, 230, 231, 234, 235, 236, 874], "fdr": [96, 226, 230], "t": [96, 99, 234, 865], "rer": 98, "p": 98, "analys": [100, 861], "featur": [100, 135, 136], "bin": [100, 187, 865], "spectral": [102, 103, 107, 108, 218, 239, 241], "psd": [103, 107, 108, 241], "lock": [106, 143], "vectorview": [108, 187, 215], "align": [108, 155, 159, 256, 671, 861], "alpha": 108, "beta": 108, "induc": 109, "whiten": [110, 120, 151, 868, 871], "ar": [110, 148, 170, 198, 205, 865, 871], "erd": 111, "explor": [112, 135], "relat": [112, 150, 852, 871], "dynam": 112, "specif": 112, "band": 112, "multitap": 113, "v": [113, 195, 215, 848], "morlet": [113, 722, 732], "stockwel": 113, "hilbert": 113, "calcul": [113, 241, 861, 868], "tfr": [113, 230, 731, 732], "wavelet": 113, "narrow": 113, "bandpass": 113, "without": [113, 155], "over": [113, 116, 139, 195, 210], "arrai": [113, 167, 216, 248, 868], "3d": [114, 149, 169, 179, 843, 865, 868, 874], "2d": [114, 169, 179, 874], "imag": [114, 115, 116, 141, 149, 171, 210, 256, 860, 868, 874], "snapshot": 114, "manual": [114, 169, 204], "viz": [115, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826], "brain": [115, 123, 126, 135, 159, 179, 210, 754], "inform": [115, 168, 170, 177, 201, 210, 256, 861, 868, 871], "modifi": [115, 142, 166, 215, 845], "highlight": 115, "includ": [115, 216, 256], "screenshot": 115, "export": [115, 144, 160, 215, 252, 441, 442, 443, 444], "scalp": [117, 140, 149], "topograph": [118, 119, 149, 151, 210], "arrowmap": 118, "basic": [119, 135, 139, 143, 148, 201, 241, 845, 871], "plot_topomap": [119, 816], "addit": 119, "more": [119, 126, 210, 871], "advanc": [119, 843], "usag": 119, "anim": 119, "layout": [122, 124, 169, 230, 313], "system": [122, 124, 164, 170, 187, 189, 192, 256, 851, 868], "neuromag": [122, 187], "bti": [122, 184, 187, 256, 862], "kit": [122, 187, 256, 482], "artemis123": [122, 187], "helmet": 123, "make": [126, 167, 216, 845, 867], "readi": 126, "montag": [126, 169], "inset": 126, "group": [127, 143, 861], "roi": [127, 241], "sort": 127, "rt": 127, "ssp": [130, 205, 206, 256, 861, 868], "topographi": [132, 140, 149, 241], "hemispher": [133, 256, 861], "work": [134, 135, 142, 164, 169, 171, 190, 199, 212, 216, 219, 843, 865], "seeg": [134, 862, 874], "ecog": [135, 862, 874], "templat": [135, 158, 204, 862], "evolut": 135, "sleep": [136, 862], "stage": 136, "classif": 136, "polysomnographi": 136, "psg": 136, "hypnogram": 136, "30": 136, "found": [136, 865], "same": 136, "step": [136, 154, 848, 865], "bob": 136, "engin": 136, "scikit": 136, "python": [136, 137, 154, 159, 160, 164, 165, 170, 171, 199, 201, 204, 205, 209, 212, 215, 221, 245, 256, 842, 843, 845, 847, 848, 849, 850, 853, 860, 863, 864, 865, 870, 874, 876], "multiclass": 136, "workflow": [136, 845, 861], "further": 136, "exercis": [136, 157, 195, 222, 231, 240, 241], "clinic": [137, 164, 874], "applic": [137, 164], "gui": [137, 155, 164, 256, 470, 471], "addon": [137, 164], "structur": [139, 148, 167, 168, 174, 187, 215, 221, 868, 871], "discontinu": 139, "subselect": [139, 216], "select": [139, 142, 148, 204, 210, 215, 234, 871], "index": [139, 144, 215, 241], "drop": [139, 148, 168, 215], "reorder": [139, 148, 215], "chang": [139, 207, 215, 845, 886], "name": [139, 150, 187, 215, 845, 871], "domain": [139, 189, 204, 215, 239], "other": [139, 148, 201, 255, 843, 845, 849, 860, 868, 872], "form": [139, 241], "baselin": [140, 201, 222, 287], "tradit": 140, "regressor": 140, "wave": [140, 189], "interact": [140, 141, 217, 218, 863], "term": 140, "pipelin": [141, 874], "script": [141, 171, 863], "projector": [141, 205, 206, 207, 218], "locat": [141, 150, 169, 181, 188, 189, 210, 218, 868], "spectrum": [141, 239, 710], "metadata": [142, 143], "restrict": 142, "datafram": [142, 144], "queri": [142, 168, 215], "ad": [142, 143, 171, 205], "auto": 143, "make_metadata": [143, 435], "specifi": [143, 189], "keep": 143, "onli": [143, 849, 853], "first": [143, 154, 845, 848, 874], "new": [143, 845, 886], "column": [143, 167], "describ": [143, 845], "stimul": [143, 241], "side": 143, "knowledg": 143, "ern": 143, "panda": 144, "wide": 144, "versu": [144, 230, 863], "long": [144, 215], "divid": 145, "equal": [145, 216], "characterist": 145, "fix": [145, 160, 177, 178], "length": [145, 201], "case": 145, "segment": [146, 164], "subset": [148, 168, 241], "memori": [148, 187, 868], "core": [148, 849, 862, 865], "combin": [148, 216], "trace": 149, "butterfli": 149, "arrow": 149, "joint": [149, 240], "subplot": 149, "potenti": [150, 872], "global": 150, "gfp": 150, "interest": [150, 231, 867], "grand": 150, "latenc": 150, "measur": [150, 230, 236, 256], "peak": 150, "freesurf": [154, 159, 256, 846, 861, 868, 871], "mri": [154, 155, 158, 159, 171, 179, 181, 256, 859, 862, 868], "anatom": [154, 861], "fsaverag": [154, 158, 179, 862], "coordin": [155, 159, 189, 256, 861, 868, 871], "frame": [155, 159, 861], "understand": [155, 159], "definit": [155, 231, 868, 871], "A": [155, 865], "good": 155, "defac": 155, "tran": [155, 871], "autom": 156, "approach": [156, 256], "coregistr": [156, 157, 171, 256, 365, 470], "initi": 156, "fiduci": 156, "refin": 156, "icp": 156, "omit": 156, "final": 156, "bem": [157, 160, 171, 256, 302, 303, 304, 305, 306, 307, 308, 309, 861, 865, 868], "adult": 158, "setup": [158, 223, 230, 231, 843, 848, 856], "infant": [158, 862], "surrog": 158, "under": [159, 865], "hood": 159, "ra": [159, 181], "spheric": 159, "decim": [159, 865], "mni": [159, 179], "affin": 159, "inflat": 159, "blender": 160, "edit": [160, 171], "low": [160, 198, 201], "high": [160, 201, 256, 862, 871], "tip": 160, "what": [160, 167, 198, 204, 205, 206, 256, 827, 852, 865, 886], "you": 160, "still": [160, 865], "error": 160, "clean": [160, 256], "dens": 160, "smooth": [160, 868], "topolog": 160, "deal": 160, "topologi": [160, 868], "pymeshfix": 160, "should": [161, 852, 865], "i": [161, 167, 169, 204, 205, 206, 253, 843, 849, 851, 852, 865, 868], "regular": [161, 176, 194, 371, 865, 868], "tutori": [164, 172, 182, 183, 184, 874], "introductori": [164, 172], "overview": [165, 198, 845, 852, 861, 862, 869, 871], "detect": [165, 198, 200, 210], "experiment": 165, "place": [166, 169, 863], "pick": 166, "copi": 166, "pars": 167, "stim": [167, 671], "middl": 167, "embed": 167, "multipl": [167, 226, 230, 865], "per": [167, 861], "obtain": 168, "built": [169, 218], "eeglab": [169, 188, 849, 872], "sphere": [169, 868], "keyword": 169, "avail": 169, "mani": 169, "control": 169, "digit": [169, 868], "render": [169, 179, 843], "configur": [170, 845, 851, 855], "where": 170, "store": 170, "environ": [170, 845], "log": [170, 188, 855], "your": [170, 844, 845], "start": [171, 870], "report": [171, 201, 256, 274, 879], "inverseoper": [171, 527], "code": [171, 239, 845, 848, 862], "e": 171, "g": 171, "tag": [171, 241, 871], "entir": 171, "folder": [171, 256], "html": 171, "descript": [171, 868], "text": 171, "inspect": [174, 240, 868], "sourcespac": [174, 277], "src": 174, "equival": 175, "ecd": 175, "eloreta": [176, 868], "role": 177, "orient": [177, 178, 868], "loos": 177, "limit": 177, "them": 177, "discard": 177, "variou": 178, "free": [178, 226], "introduct": 179, "handl": [179, 199], "depth": [179, 868], "bia": [179, 206], "On": [179, 871], "slice": 179, "orthoview": 179, "glass": 179, "maximum": [179, 226], "voxel": [179, 181], "three": 179, "given": 181, "prerequisit": 181, "coord": 181, "elekta": [182, 187], "phantom": [182, 183, 184], "4d": [184, 256, 862], "neuroimag": [184, 187, 862], "devic": [187, 188, 189, 191, 868], "megin": 187, "triux": 187, "fil": 187, "4": [187, 886], "d": 187, "dir": 187, "polhemu": 187, "softwar": [187, 201, 852, 860, 868, 871, 872], "gradient": [187, 868, 871], "ricoh": 187, "con": 187, "sqd": 187, "fieldtrip": [187, 231], "mat": 187, "arbitrari": [187, 236], "brainvis": 188, "vhdr": 188, "vmrk": 188, "european": 188, "edf": 188, "biosemi": 188, "bdf": 188, "gdf": 188, "neuroscan": 188, "cnt": 188, "egi": 188, "simpl": [188, 865], "binari": 188, "mff": 188, "fdt": 188, "nicolet": 188, "eximia": 188, "nxe": 188, "persyst": 188, "lai": 188, "dat": 188, "nihon": 188, "kohden": 188, "21e": 188, "pnt": 188, "xdfz": 188, "shape": 188, "fnir": [189, 210, 862], "standard": [189, 210, 226, 381, 845], "snirf": 189, "nirx": 189, "directori": [189, 862, 868, 871], "hdr": 189, "hitachi": 189, "csv": 189, "boxi": 189, "txt": 189, "legaci": [189, 239], "tsv": 189, "auditori": [190, 862], "eyetrack": [191, 581], "sr": 191, "research": 191, "eyelink": [191, 384, 862], "asc": 191, "ey": [191, 212], "gaze": 191, "angl": 191, "href": 191, "pupil": [191, 212], "size": [191, 226], "veloc": 191, "strf": 194, "audio": 194, "recov": 194, "philosophi": [195, 863], "class": [195, 239, 843, 851, 858, 874], "scaler": [195, 420], "psdestim": [195, 416], "filterestim": [195, 413], "comodul": 195, "do": [198, 865], "drift": [198, 202, 204], "line": [198, 202, 256, 845, 871], "heartbeat": 198, "ecg": [198, 204, 206, 256], "ocular": 198, "mark": [199, 861], "block": 199, "execut": 199, "when": [199, 205, 845], "look": [199, 204, 865], "why": [199, 865, 868], "reject": [200, 861], "span": 200, "break": 200, "reject_by_annot": 200, "programmat": [200, 217], "background": [201, 202, 205, 207, 209, 222], "statement": 201, "fir": 201, "iir": 201, "some": [201, 871], "pitfal": [201, 872], "pass": 201, "default": [201, 868], "c": [201, 851], "cutoff": 201, "order": 201, "transit": 201, "bandwidth": 201, "roll": 201, "off": [201, 843], "passband": 201, "rippl": 201, "stopband": 201, "attenu": 201, "delai": 201, "direct": 201, "resampl": [202, 226, 451, 865], "slow": [202, 204, 865], "best": [202, 205], "practic": [202, 205], "origin": [203, 222], "subtract": 203, "dimension": 204, "ignor": 204, "terminologi": 205, "environment": 206, "affect": [206, 217], "choos": 206, "number": [206, 215, 868], "via": [206, 211, 849, 868, 874], "infinit": 207, "rest": [207, 862], "bipolar": 207, "hpi": 208, "separ": [209, 241], "sss": 209, "spatiotempor": [209, 231], "tsss": 209, "caveat": 209, "infrar": 210, "spectroscopi": 210, "provid": [210, 226], "meaning": 210, "appropri": 210, "intens": 210, "qualiti": 210, "haemoglobin": 210, "heart": 210, "rate": [210, 226], "consist": [210, 221, 845], "tap": 210, "right": 210, "hand": 210, "homogen": 211, "nuisanc": 211, "tracker": 212, "din": 212, "attribut": 215, "sampl": [215, 228, 230, 235, 402, 862], "len": 215, "get_data": 215, "wai": 215, "exclud": 216, "id": [216, 849, 871], "descriptor": 216, "togeth": 216, "brows": [218, 256], "scratch": 221, "unit": [221, 868], "corrupt": 222, "known": 222, "period": 222, "sinusoid": 222, "distant": 222, "center": [222, 856], "vertic": 222, "each": 222, "infer": 226, "hypothesi": 226, "null": 226, "parametr": [226, 228, 229], "hat": 226, "varianc": 226, "adjust": 226, "non": [226, 228, 229], "bonferroni": 226, "fals": 226, "discoveri": 226, "adjac": [226, 228, 231, 234], "enhanc": [226, 886], "tfce": 226, "signific": [227, 234], "1": [228, 886], "mass": 230, "univari": 230, "twowai": 230, "repeat": [230, 236], "anova": [230, 236], "account": 230, "neighbor": 231, "spatio": [234, 235, 236], "one": [234, 236], "2": [235, 886], "contrast": 236, "epochsspectrum": [239, 708], "migrat": [239, 872], "quick": 239, "action": 239, "inter": 240, "itc": 240, "ssvep": [241, 407, 862], "vssr": 241, "ratio": 241, "spectra": 241, "12": [241, 886], "hz": 241, "indic": 241, "check": [241, 256, 868], "15": [241, 886], "debrief": 241, "bonu": 241, "durat": 241, "resolv": 241, "bibliographi": 244, "paper": 245, "cite": [245, 860, 865], "o": [253, 849, 868], "fund": [255, 867], "support": [255, 849, 868, 874], "institut": [255, 867, 873], "partner": [255, 867, 873], "former": [255, 873], "command": [256, 845, 865], "tool": [256, 845, 852], "anonym": 256, "browse_raw": 256, "bti2fiff": 256, "magneswh3600": 256, "note": [256, 871], "clean_eog_ecg": 256, "ie": 256, "compare_fiff": [256, 762], "fiff": [256, 871], "compute_proj_ecg": [256, 573], "compute_proj_eog": [256, 574], "coreg": [256, 365, 366, 367], "flash_bem": 256, "3": [256, 886], "layer": 256, "flash": [256, 868], "freeview_bem_surfac": 256, "freeview": 256, "kit2fiff": 256, "nyu": 256, "make_scalp_surfac": [256, 308], "maxfilt": 256, "prepare_bem_model": 256, "colloc": 256, "setup_forward_model": 256, "setup_source_spac": [256, 654], "bilater": 256, "subsampl": 256, "show_fiff": [256, 511], "content": [256, 862, 874], "show_info": 256, "surf2bem": 256, "sys_info": [256, 705], "watershed_bem": 256, "watersh": [256, 865, 868], "acqparserfif": 257, "baseepoch": 259, "bihemilabel": 260, "dipolefix": 263, "epochsarrai": 265, "evokedarrai": 267, "mixedsourceestim": 271, "mixedvectorsourceestim": 272, "vectorsourceestim": 278, "volvectorsourceestim": 280, "add_reference_channel": 281, "add_source_space_dist": 282, "annotations_from_ev": 283, "apply_forward": 284, "apply_forward_raw": 285, "average_forward_solut": 286, "rescal": 287, "apply_d": 289, "apply_dics_csd": 290, "apply_dics_epoch": 291, "apply_dics_tfr_epoch": 292, "apply_lcmv": 293, "apply_lcmv_cov": 294, "apply_lcmv_epoch": 295, "apply_lcmv_raw": 296, "make_d": 297, "make_lcmv": 298, "make_lcmv_resolution_matrix": 299, "rap_mus": 300, "read_beamform": 301, "conductormodel": 302, "convert_flash_mri": 303, "distance_to_bem": 304, "fit_sphere_to_headshap": 305, "get_fitting_dig": 306, "make_flash_bem": 307, "make_watershed_bem": 309, "channel_indices_by_typ": 310, "channel_typ": 311, "digmontag": 312, "combine_channel": 314, "compute_dev_head_t": 315, "compute_native_head_t": 316, "equalize_channel": [317, 436], "find_ch_adjac": 318, "find_layout": 319, "fix_mag_coil_typ": 320, "generate_2d_layout": 321, "get_builtin_ch_adjac": 322, "get_builtin_montag": 323, "make_1020_channel_select": 324, "make_dig_montag": 325, "make_eeg_layout": 326, "make_grid_layout": 327, "make_standard_montag": 328, "read_ch_adjac": 329, "read_custom_montag": 330, "read_dig_captrak": 331, "read_dig_dat": 332, "read_dig_egi": 333, "read_dig_fif": 334, "read_dig_hpt": 335, "read_dig_localit": 336, "read_dig_polhemus_isotrak": 337, "read_layout": 338, "read_polhemus_fastscan": 339, "rename_channel": [340, 641], "chpi": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], "compute_chpi_amplitud": 341, "compute_chpi_loc": 342, "compute_chpi_snr": 343, "compute_head_po": 344, "extract_chpi_locs_ctf": 345, "extract_chpi_locs_kit": 346, "filter_chpi": 347, "get_active_chpi": 348, "get_chpi_info": 349, "head_pos_to_trans_rot_t": 350, "read_head_po": 351, "write_head_po": 352, "combine_evok": 353, "compute_covari": 354, "compute_proj_epoch": 355, "compute_proj_evok": 356, "compute_proj_raw": 357, "compute_rank": 358, "compute_raw_covari": 359, "compute_source_morph": 360, "concatenate_epoch": 361, "concatenate_ev": 362, "concatenate_raw": 363, "convert_forward_solut": 364, "estimate_head_mri_t": 366, "get_mni_fiduci": 367, "count_ev": 368, "cov": [369, 370, 371, 871], "compute_whiten": 369, "prepare_noise_cov": 370, "create_default_subject": 372, "create_info": 373, "cuda": [374, 375, 376, 843], "get_cuda_memori": 374, "init_cuda": 375, "set_cuda_devic": 376, "bst_auditori": 377, "data_path": [377, 378, 379, 382, 383, 384, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409], "bst_raw": 378, "bst_rest": 379, "load_data": [380, 395], "epilepsy_ecog": 382, "erp_cor": 383, "fetch_aparc_sub_parcel": 385, "fetch_dataset": 386, "fetch_fsaverag": 387, "fetch_hcp_mmp_parcel": 388, "fetch_infant_templ": 389, "fetch_phantom": 390, "fnirs_motor": 391, "has_dataset": 392, "hf_sef": 393, "kiloword": [394, 862], "misc": 396, "mtrf": [397, 862], "multimod": [398, 862], "phantom_4dbti": 400, "refmeg_nois": 401, "sleep_physionet": [403, 404], "ag": 403, "fetch_data": [403, 404], "temazepam": 404, "somato": 405, "spm_face": 406, "ucl_opm_auditori": 408, "visual_92_categori": 409, "decimate_surfac": 410, "generalizingestim": 414, "linearmodel": 415, "receptivefield": 417, "slidingestim": 421, "temporalfilt": 422, "timedelayingridg": 423, "timefrequ": 424, "unsupervisedspatialfilt": 425, "compute_em": 427, "cross_val_multiscor": 428, "get_coef": 429, "dig_mri_dist": 430, "get_phantom_dipol": 431, "average_mov": 432, "combine_event_id": 433, "equalize_epoch_count": 434, "define_target_ev": 437, "match_event_nam": 438, "shift_time_ev": 439, "events_from_annot": 440, "export_epoch": 441, "export_evok": 442, "export_evokeds_mff": 443, "export_raw": 444, "extract_label_time_cours": 445, "construct_iir_filt": 446, "create_filt": 447, "estimate_ringing_sampl": 448, "filter_data": 449, "notch_filt": 450, "find_ev": 452, "find_stim_step": 453, "fit_dipol": 454, "compute_depth_prior": 455, "compute_orient_prior": 456, "restrict_forward_to_label": 457, "restrict_forward_to_stc": 458, "get_config": 459, "get_config_path": 460, "get_head_surf": 461, "get_meg_helmet_surf": 462, "get_montage_volume_label": 463, "get_volume_labels_from_aseg": 464, "get_volume_labels_from_src": 465, "grade_to_tri": 466, "grade_to_vertic": 467, "grand_averag": 468, "grow_label": 469, "locate_ieeg": 471, "head_to_mni": 472, "head_to_mri": 473, "inverse_spars": [474, 475, 476, 477], "gamma_map": 474, "make_stc_from_dipol": 475, "mixed_norm": 476, "tf_mixed_norm": 477, "io": [478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512], "baseraw": 478, "rawarrai": 480, "anonymize_info": 481, "read_mrk": 482, "read_fiduci": 483, "read_info": 484, "read_raw": 485, "read_raw_artemis123": 486, "read_raw_bdf": 487, "read_raw_boxi": 488, "read_raw_brainvis": 489, "read_raw_bti": 490, "read_raw_cnt": 491, "read_raw_ctf": 492, "read_raw_curri": 493, "read_raw_edf": 494, "read_raw_eeglab": 495, "read_raw_egi": 496, "read_raw_eximia": 497, "read_raw_eyelink": 498, "read_raw_fieldtrip": 499, "read_raw_fif": 500, "read_raw_fil": 501, "read_raw_gdf": 502, "read_raw_hitachi": 503, "read_raw_kit": 504, "read_raw_nedf": 505, "read_raw_nicolet": 506, "read_raw_nihon": 507, "read_raw_nirx": 508, "read_raw_persyst": 509, "read_raw_snirf": 510, "write_fiduci": 512, "select_sourc": 513, "label_sign_flip": 514, "labels_to_stc": 515, "make_ad_hoc_cov": 516, "make_bem_model": 517, "make_bem_solut": 518, "make_field_map": 519, "make_fixed_length_epoch": 520, "make_fixed_length_ev": 521, "make_forward_dipol": 522, "make_forward_solut": 523, "make_sphere_model": 524, "match_channel_ord": 525, "merge_ev": 526, "minimum_norm": [527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546], "apply_invers": 528, "apply_inverse_cov": 529, "apply_inverse_epoch": 530, "apply_inverse_raw": 531, "apply_inverse_tfr_epoch": 532, "compute_rank_invers": 533, "compute_source_psd": 534, "compute_source_psd_epoch": 535, "estimate_snr": 536, "get_cross_talk": 537, "get_point_spread": 538, "make_inverse_oper": 539, "make_inverse_resolution_matrix": 540, "prepare_inverse_oper": 541, "read_inverse_oper": 542, "resolution_metr": 543, "source_band_induced_pow": 544, "source_induced_pow": 545, "write_inverse_oper": 546, "morph_label": 547, "morph_source_spac": 548, "open_doc": 549, "open_report": 550, "parse_config": 551, "pick_channel": 552, "pick_channels_cov": 553, "pick_channels_forward": 554, "pick_channels_regexp": 555, "pick_ev": 556, "pick_info": 557, "pick_typ": 558, "pick_types_forward": 559, "eogregress": 560, "annotate_amplitud": 563, "annotate_break": 564, "annotate_mov": 565, "annotate_muscle_zscor": 566, "annotate_nan": 567, "compute_average_dev_head_t": 568, "compute_bridged_electrod": 569, "compute_current_source_dens": 570, "compute_fine_calibr": 571, "compute_maxwell_basi": 572, "compute_proj_hfc": 575, "corrmap": 576, "cortical_signal_suppress": 577, "create_ecg_epoch": 578, "create_eog_epoch": 579, "equalize_bad": 580, "set_channel_types_eyetrack": 581, "find_bad_channels_maxwel": 582, "find_ecg_ev": 583, "find_eog_ev": 584, "fix_stim_artifact": 585, "ica_find_ecg_ev": 586, "ica_find_eog_ev": 587, "ieeg": [588, 589, 590], "make_montage_volum": 588, "project_sensors_onto_brain": 589, "warp_montag": 590, "infomax": 591, "interpolate_bridged_electrod": 592, "maxwell_filt": 593, "maxwell_filter_prepare_emptyroom": 594, "beer_lambert_law": 595, "optical_dens": 596, "scalp_coupling_index": 597, "short_channel": 598, "source_detector_dist": 599, "temporal_derivative_distribution_repair": 600, "oversampled_temporal_project": 601, "peak_find": 602, "read_eog_regress": 603, "read_fine_calibr": 604, "read_ica": 605, "read_ica_eeglab": 606, "realign_raw": 607, "regress_artifact": 608, "write_fine_calibr": 609, "random_parcel": 610, "read_annot": 611, "read_bem_solut": 612, "read_bem_surfac": 613, "read_cov": 614, "read_dipol": 615, "read_epoch": 616, "read_epochs_eeglab": 617, "read_epochs_fieldtrip": 618, "read_epochs_kit": 619, "read_ev": 620, "read_evoked_besa": 621, "read_evoked_fieldtrip": 622, "read_evok": 623, "read_evokeds_mff": 624, "read_forward_solut": 625, "read_freesurfer_lut": 626, "read_label": 627, "read_labels_from_annot": 628, "read_lta": 629, "read_morph_map": 630, "read_proj": 631, "read_reject_paramet": 632, "read_source_estim": 633, "read_source_morph": 634, "read_source_spac": 635, "read_surfac": 636, "read_talxfm": 637, "read_tran": 638, "read_tri": 639, "read_vectorview_select": 640, "scale_bem": 642, "scale_label": 643, "scale_mri": 644, "scale_source_spac": 645, "sensitivity_map": 646, "set_bipolar_refer": 647, "set_cache_dir": 648, "set_config": 649, "set_eeg_refer": 650, "set_log_fil": 651, "set_log_level": 652, "set_memmap_min_s": 653, "setup_volume_source_spac": 655, "sourcesimul": 656, "add_chpi": 657, "add_ecg": 658, "add_eog": 659, "add_nois": 660, "cosine_scor": 661, "f1_score": 662, "peak_position_error": 663, "precision_scor": 664, "recall_scor": 665, "region_localization_error": 666, "roc_auc_scor": 667, "spatial_deviation_error": 668, "select_source_in_label": 669, "simulate_evok": 670, "simulate_raw": 671, "simulate_sparse_stc": 672, "simulate_stc": 673, "source_spac": [674, 675], "compute_distance_to_sensor": 674, "get_decimated_surfac": 675, "spatial_dist_adjac": 676, "spatial_inter_hemi_adjac": 677, "spatial_src_adjac": 678, "spatial_tris_adjac": 679, "spatio_temporal_dist_adjac": 680, "spatio_temporal_src_adjac": 681, "spatio_temporal_tris_adjac": 682, "split_label": 683, "stat": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700], "bonferroni_correct": 684, "bootstrap_confidence_interv": 685, "combine_adjac": 686, "f_mway_rm": 687, "f_onewai": 688, "f_threshold_mway_rm": 689, "fdr_correct": 690, "linear_regress": 691, "linear_regression_raw": 692, "permutation_cluster_1samp_test": 693, "permutation_cluster_test": 694, "permutation_t_test": 695, "spatio_temporal_cluster_1samp_test": 696, "spatio_temporal_cluster_test": 697, "summarize_clusters_stc": 698, "ttest_1samp_no_p": 699, "ttest_ind_no_p": 700, "stc_near_sensor": 701, "stc_to_label": 702, "complete_surface_info": 703, "read_curvatur": 704, "time_frequ": [706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739], "averagetfr": 706, "crossspectraldens": 707, "epochstfr": 709, "csd_array_fouri": 711, "csd_array_morlet": 712, "csd_array_multitap": 713, "csd_fourier": 714, "csd_morlet": 715, "csd_multitap": 716, "csd_tfr": 717, "dpss_window": 718, "fit_iir_model_raw": 719, "fwhm": 720, "istft": 721, "pick_channels_csd": 723, "psd_array_multitap": 724, "psd_array_welch": 725, "read_csd": 726, "read_spectrum": 727, "read_tfr": 728, "stft": 729, "stftfreq": 730, "cwt": 731, "tfr_array_morlet": 733, "tfr_array_multitap": 734, "tfr_array_stockwel": 735, "tfr_morlet": 736, "tfr_multitap": 737, "tfr_stockwel": 738, "write_tfr": 739, "transform_surface_to": 740, "apply_volume_registr": 742, "apply_volume_registration_point": 743, "compute_volume_registr": 744, "quat_to_rot": 745, "read_ras_mni_t": 746, "rot_to_quat": 747, "use_coil_def": 748, "use_log_level": 749, "util": [750, 751, 871], "deprec": [750, 845], "warn": [751, 845], "verbos": 752, "vertex_to_mni": 753, "clickableimag": 755, "figure3d": 756, "add_background_imag": 757, "centers_to_edg": 758, "circular_layout": 759, "close_3d_figur": 760, "close_all_3d_figur": 761, "create_3d_figur": 763, "get_3d_backend": 764, "get_brain_class": 765, "get_browser_backend": 766, "iter_topographi": 767, "link_brain": 768, "mne_analyze_colormap": 769, "plot_align": 770, "plot_arrowmap": 771, "plot_bem": 772, "plot_brain_colorbar": 773, "plot_bridged_electrod": 774, "plot_ch_adjac": 775, "plot_channel_labels_circl": 776, "plot_chpi_snr": 777, "plot_compare_evok": 778, "plot_cov": 779, "plot_csd": 780, "plot_dipole_amplitud": 781, "plot_dipole_loc": 782, "plot_drop_log": 783, "plot_epoch": 784, "plot_epochs_imag": 785, "plot_epochs_psd_topomap": 786, "plot_ev": 787, "plot_evok": 788, "plot_evoked_field": 789, "plot_evoked_imag": 790, "plot_evoked_joint": 791, "plot_evoked_topo": 792, "plot_evoked_topomap": 793, "plot_evoked_whit": 794, "plot_filt": 795, "plot_head_posit": 796, "plot_ica_compon": 797, "plot_ica_overlai": 798, "plot_ica_properti": 799, "plot_ica_scor": 800, "plot_ica_sourc": 801, "plot_ideal_filt": 802, "plot_layout": 803, "plot_montag": 804, "plot_projs_joint": 805, "plot_projs_topomap": 806, "plot_raw": 807, "plot_raw_psd": 808, "plot_regression_weight": 809, "plot_sensor": 810, "plot_snr_estim": 811, "plot_source_estim": 812, "plot_sparse_source_estim": 813, "plot_tfr_topomap": 814, "plot_topo_image_epoch": 815, "plot_vector_source_estim": 817, "plot_volume_source_estim": 818, "set_3d_backend": 819, "set_3d_opt": 820, "set_3d_titl": 821, "set_3d_view": 822, "set_browser_backend": 823, "snapshot_brain_montag": 824, "use_3d_backend": 825, "use_browser_backend": 826, "write_bem_solut": 828, "write_bem_surfac": 829, "write_cov": 830, "write_ev": 831, "write_evok": 832, "write_forward_solut": 833, "write_head_bem": 834, "write_label": 835, "write_labels_to_annot": 836, "write_proj": 837, "write_source_spac": 838, "write_surfac": 839, "write_tran": 840, "glossari": 841, "homepag": 842, "jupyt": 843, "notebook": 843, "jupyterlab": 843, "fa": [843, 851], "brand": [843, 851], "window": [843, 865], "instal": [843, 844, 846, 847, 848, 849, 850, 851, 852], "headless": 843, "linux": 843, "server": 843, "develop": [843, 845, 853, 864], "version": [843, 853, 886], "gpu": 843, "acceler": 843, "screen": 843, "mesa": 843, "troubleshoot": [843, 851], "troubl": 843, "upgrad": [843, 853], "maco": [843, 851, 865], "contribut": 845, "guid": 845, "git": 845, "gnu": 845, "fork": 845, "repositori": 845, "virtual": 845, "github": 845, "ssh": 845, "convent": 845, "requir": [845, 851], "must": 845, "have": [845, 861, 865], "coverag": 845, "document": [845, 867, 869, 871, 873, 874], "avoid": 845, "api": [845, 863, 874, 876, 886], "possibl": 845, "decor": 845, "changelog": [845, 886], "contributor": 845, "recur": 845, "pull": 845, "request": 845, "pr": 845, "fast": 845, "thorough": 845, "style": 845, "adher": 845, "guidelin": [845, 873], "we": 845, "mostli": [845, 863], "follow": 845, "numpi": [845, 868], "docstr": 845, "everywher": 845, "guidanc": 845, "organ": [845, 863, 868], "return": 845, "run": [845, 865], "suit": [845, 852], "build": 845, "pip": 849, "conda": 849, "depend": [849, 886], "minim": 849, "scenario": 849, "appl": 851, "download": [851, 865], "help": [852, 865, 866], "updat": [853, 874], "martino": 856, "cpp": 857, "most": 858, "typic": 861, "m": [861, 865], "recommend": 861, "subdivis": 861, "icosahedron": 861, "octahedron": 861, "creation": 861, "approxim": 861, "area": 861, "been": 861, "assum": 861, "1000": 861, "cm2": 861, "mesh": [861, 865, 868], "triangul": 861, "boundari": [861, 868], "element": [861, 868], "trigger": 862, "ucl": 862, "state": 862, "somatosensori": 862, "92": 862, "categori": 862, "polysomnograph": 862, "databas": [862, 874], "miscellan": 862, "integr": [863, 874], "scientif": 863, "stack": 863, "submodul": 863, "unifi": 863, "In": [863, 874], "frequent": 865, "ask": 865, "question": 865, "faq": 865, "issu": 865, "can": 865, "pyvista": 865, "extrem": 865, "even": 865, "sure": 865, "x": 865, "my": 865, "y": 865, "think": 865, "bug": [865, 886], "danger": 865, "pickl": 865, "later": 865, "onc": 865, "again": 865, "cpu": 865, "though": 865, "didn": 865, "tell": 865, "mysteri": 865, "take": 865, "forev": 865, "incorrect": 865, "govern": 867, "bdfl": 867, "steer": [867, 873], "council": [867, 873], "membership": 867, "conflict": 867, "privat": 867, "commun": [867, 873], "decis": 867, "histori": [867, 873], "acknowledg": 867, "licens": 867, "implement": 868, "detail": [868, 871], "intern": 868, "float": 868, "precis": 868, "effici": [868, 874], "preload": 868, "explicitli": 868, "access": [868, 874], "concept": 868, "subspac": 868, "tessel": 868, "discret": 868, "geometri": [868, 871], "coil": [868, 871], "magnet": 868, "normal": 868, "accur": 868, "accuraci": 868, "purpos": 868, "patch": 868, "constraint": 868, "weight": 868, "matlab": 871, "routin": 871, "w": 871, "demonstr": 871, "toolbox": 871, "constant": 871, "taginfo": 871, "dig": 871, "coildef": 871, "see": 871, "ch": 871, "proj": 871, "comp": 871, "mea": 871, "surf": 871, "inv": 871, "reginv": 871, "noisenorm": 871, "fill": 871, "mne_prepare_inverse_oper": 871, "benevol": 873, "dictat": 873, "life": 873, "particip": 873, "lead": 873, "roadmap": 874, "page": 874, "openmeeg": 874, "improv": 874, "bind": 874, "progress": 874, "divers": 874, "equiti": 874, "inclus": 874, "dei": 874, "deep": 874, "better": 874, "db": 874, "pediatr": 874, "complet": 874, "overhaul": 874, "realtim": 878, "dev0": 886, "2023": 886, "02": 886, "23": 886, "0": 886, "2022": 886, "21": 886, "author": 886, "10": 886, "11": 886, "08": 886, "03": 886, "behavior": 886, "24": 886, "2021": 886, "04": 886, "27": 886, "22": 886, "2020": 886, "17": 886, "09": 886, "20": 886, "19": 886, "2019": 886, "18": 886, "05": 886, "2018": 886, "16": 886, "01": 886, "2017": 886, "14": 886, "13": 886, "2016": 886, "2015": 886, "26": 886, "9": 886, "8": 886, "2014": 886, "06": 886, "25": 886, "7": 886, "2013": 886, "6": 886, "5": 886, "2012": 886, "2011": 886}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Connectivity Analysis Examples": [[0, "connectivity-analysis-examples"], [27, "connectivity-analysis-examples"]], "Brainstorm raw (median nerve) dataset": [[1, "brainstorm-raw-median-nerve-dataset"]], "References": [[1, "references"], [4, "references"], [8, "references"], [10, "references"], [12, "references"], [13, "references"], [15, "references"], [16, "references"], [18, "references"], [19, "references"], [21, "references"], [33, "references"], [35, "references"], [40, "references"], [42, "references"], [43, "references"], [44, "references"], [46, "references"], [51, "references"], [54, "references"], [55, "references"], [58, "references"], [59, "references"], [65, "references"], [70, "references"], [71, "references"], [74, "references"], [75, "references"], [78, "references"], [82, "references"], [83, "references"], [87, "references"], [93, "references"], [100, "references"], [108, "references"], [111, "references"], [112, "references"], [116, "references"], [118, "references"], [120, "references"], [125, "references"], [128, "references"], [136, "references"], [140, "references"], [143, "references"], [150, "references"], [154, "references"], [156, "references"], [161, "references"], [175, "references"], [177, "references"], [179, "references"], [182, "references"], [183, "references"], [190, "references"], [194, "references"], [195, "references"], [199, "references"], [201, "references"], [203, "references"], [204, "references"], [205, "references"], [206, "references"], [207, "references"], [209, "references"], [211, "references"], [223, "references"], [226, "references"], [227, "references"], [231, "references"], [239, "references"], [861, "references"], [862, "references"], [865, "references"], [868, "references"]], "HF-SEF dataset": [[2, "hf-sef-dataset"]], "Examples on open datasets": [[3, "examples-on-open-datasets"], [27, "examples-on-open-datasets"]], "Single trial linear regression analysis with the LIMO dataset": [[4, "single-trial-linear-regression-analysis-with-the-limo-dataset"]], "About the data": [[4, "about-the-data"]], "Load the data": [[4, "load-the-data"], [136, "load-the-data"], [140, "load-the-data"], [158, "load-the-data"]], "Visualize events": [[4, "visualize-events"]], "Visualize condition ERPs": [[4, "visualize-condition-erps"]], "Visualize effect of stimulus phase-coherence": [[4, "visualize-effect-of-stimulus-phase-coherence"]], "Prepare data for linear regression analysis": [[4, "prepare-data-for-linear-regression-analysis"]], "Define predictor variables and design matrix": [[4, "define-predictor-variables-and-design-matrix"]], "Extract regression coefficients": [[4, "extract-regression-coefficients"]], "Plot model results": [[4, "plot-model-results"]], "Optically pumped magnetometer (OPM) data": [[5, "optically-pumped-magnetometer-opm-data"]], "Prepare data for localization": [[5, "prepare-data-for-localization"]], "Perform dipole fitting": [[5, "perform-dipole-fitting"]], "Perform minimum-norm localization": [[5, "perform-minimum-norm-localization"]], "Computation times": [[6, "computation-times"], [20, "computation-times"], [25, "computation-times"], [56, "computation-times"], [66, "computation-times"], [84, "computation-times"], [90, "computation-times"], [101, "computation-times"], [105, "computation-times"], [129, "computation-times"], [138, "computation-times"], [147, "computation-times"], [153, "computation-times"], [163, "computation-times"], [173, "computation-times"], [186, "computation-times"], [193, "computation-times"], [197, "computation-times"], [214, "computation-times"], [220, "computation-times"], [225, "computation-times"], [233, "computation-times"], [238, "computation-times"], [243, "computation-times"]], "From raw data to dSPM on SPM Faces dataset": [[7, "from-raw-data-to-dspm-on-spm-faces-dataset"]], "Motor imagery decoding from EEG data using the Common Spatial Pattern (CSP)": [[8, "motor-imagery-decoding-from-eeg-data-using-the-common-spatial-pattern-csp"]], "Decoding in time-frequency space using Common Spatial Patterns (CSP)": [[9, "decoding-in-time-frequency-space-using-common-spatial-patterns-csp"]], "Representational Similarity Analysis": [[10, "representational-similarity-analysis"]], "Decoding source space data": [[11, "decoding-source-space-data"]], "Continuous Target Decoding with SPoC": [[12, "continuous-target-decoding-with-spoc"]], "Decoding sensor space data with generalization across time and conditions": [[13, "decoding-sensor-space-data-with-generalization-across-time-and-conditions"]], "Analysis of evoked response using ICA and PCA reduction techniques": [[14, "analysis-of-evoked-response-using-ica-and-pca-reduction-techniques"]], "XDAWN Decoding From EEG data": [[15, "xdawn-decoding-from-eeg-data"]], "Compute effect-matched-spatial filtering (EMS)": [[16, "compute-effect-matched-spatial-filtering-ems"]], "Machine Learning (Decoding, Encoding, and MVPA)": [[17, "machine-learning-decoding-encoding-and-mvpa"], [27, "machine-learning-decoding-encoding-and-mvpa"]], "Linear classifier on sensor data with plot patterns and filters": [[18, "linear-classifier-on-sensor-data-with-plot-patterns-and-filters"]], "Decoding in sensor space using a LogisticRegression classifier": [[18, "decoding-in-sensor-space-using-a-logisticregression-classifier"]], "Receptive Field Estimation and Prediction": [[19, "receptive-field-estimation-and-prediction"]], "Load the data from the publication": [[19, "load-the-data-from-the-publication"]], "Create and fit a receptive field model": [[19, "create-and-fit-a-receptive-field-model"]], "Investigate model coefficients": [[19, "investigate-model-coefficients"], [19, "id5"]], "Create and fit a stimulus reconstruction model": [[19, "create-and-fit-a-stimulus-reconstruction-model"]], "Visualize stimulus reconstruction": [[19, "visualize-stimulus-reconstruction"]], "Compute Spectro-Spatial Decomposition (SSD) spatial filters": [[21, "compute-spectro-spatial-decomposition-ssd-spatial-filters"]], "Epoched data": [[21, "epoched-data"]], "Display sensitivity maps for EEG and MEG sensors": [[22, "display-sensitivity-maps-for-eeg-and-meg-sensors"]], "Forward modeling": [[23, "forward-modeling"], [27, "forward-modeling"]], "Generate a left cerebellum volume source space": [[24, "generate-a-left-cerebellum-volume-source-space"]], "Use source space morphing": [[26, "use-source-space-morphing"]], "Examples Gallery": [[27, "examples-gallery"]], "Input/Output": [[27, "input-output"], [62, "input-output"]], "Data Simulation": [[27, "data-simulation"], [88, "data-simulation"]], "Preprocessing": [[27, "preprocessing"], [77, "preprocessing"], [108, "preprocessing"], [140, "preprocessing"], [164, "preprocessing"], [165, "preprocessing"], [213, "preprocessing"], [861, "preprocessing"], [875, "preprocessing"]], "Visualization": [[27, "visualization"], [55, "visualization"], [121, "visualization"], [176, "visualization"], [845, "visualization"], [885, "visualization"]], "Time-Frequency Examples": [[27, "time-frequency-examples"], [104, "time-frequency-examples"]], "Statistics Examples": [[27, "statistics-examples"], [97, "statistics-examples"]], "Inverse problem and source analysis": [[27, "inverse-problem-and-source-analysis"], [36, "inverse-problem-and-source-analysis"]], "Compute MNE-dSPM inverse solution on single epochs": [[28, "compute-mne-dspm-inverse-solution-on-single-epochs"]], "Compute sLORETA inverse solution on raw data": [[29, "compute-sloreta-inverse-solution-on-raw-data"]], "Compute MNE-dSPM inverse solution on evoked data in volume source space": [[30, "compute-mne-dspm-inverse-solution-on-evoked-data-in-volume-source-space"]], "Source localization with a custom inverse solver": [[31, "source-localization-with-a-custom-inverse-solver"]], "Compute source level time-frequency timecourses using a DICS beamformer": [[32, "compute-source-level-time-frequency-timecourses-using-a-dics-beamformer"]], "Compute source power using DICS beamformer": [[33, "compute-source-power-using-dics-beamformer"]], "Compute evoked ERS source power using DICS, LCMV beamformer, and dSPM": [[34, "compute-evoked-ers-source-power-using-dics-lcmv-beamformer-and-dspm"]], "Compute covariances": [[34, "compute-covariances"]], "Plot source estimates": [[34, "plot-source-estimates"]], "Compute a sparse inverse solution using the Gamma-MAP empirical Bayesian method": [[35, "compute-a-sparse-inverse-solution-using-the-gamma-map-empirical-bayesian-method"]], "Extracting time course from source_estimate object": [[37, "extracting-time-course-from-source-estimate-object"]], "Generate a functional label from source estimates": [[38, "generate-a-functional-label-from-source-estimates"]], "Extracting the time series of activations in a label": [[39, "extracting-the-time-series-of-activations-in-a-label"]], "Compute inverse solution": [[39, "compute-inverse-solution"], [41, "compute-inverse-solution"], [176, "compute-inverse-solution"]], "View source activations": [[39, "view-source-activations"]], "Using vector solutions": [[39, "using-vector-solutions"]], "Compute sparse inverse solution with mixed norm: MxNE and irMxNE": [[40, "compute-sparse-inverse-solution-with-mixed-norm-mxne-and-irmxne"]], "Compute MNE inverse solution on evoked data with a mixed source space": [[41, "compute-mne-inverse-solution-on-evoked-data-with-a-mixed-source-space"]], "Set up our source space": [[41, "set-up-our-source-space"]], "View the source space": [[41, "view-the-source-space"]], "Compute the fwd matrix": [[41, "compute-the-fwd-matrix"]], "Plot the mixed source estimate": [[41, "plot-the-mixed-source-estimate"]], "Plot the surface": [[41, "plot-the-surface"]], "Plot the volume": [[41, "plot-the-volume"]], "Process labels": [[41, "process-labels"]], "Compute source power estimate by projecting the covariance with MNE": [[42, "compute-source-power-estimate-by-projecting-the-covariance-with-mne"]], "Compute empty-room covariance": [[42, "compute-empty-room-covariance"]], "Epoch the data": [[42, "epoch-the-data"]], "Compute and plot covariances": [[42, "compute-and-plot-covariances"]], "Apply inverse operator to covariance": [[42, "apply-inverse-operator-to-covariance"]], "Morph surface source estimate": [[43, "morph-surface-source-estimate"]], "Setting up SourceMorph for SourceEstimate": [[43, "setting-up-sourcemorph-for-sourceestimate"]], "Apply morph to (Vector) SourceEstimate": [[43, "apply-morph-to-vector-sourceestimate"]], "Plot results": [[43, "plot-results"], [44, "plot-results"]], "Reading and writing SourceMorph from and to disk": [[43, "reading-and-writing-sourcemorph-from-and-to-disk"], [44, "reading-and-writing-sourcemorph-from-and-to-disk"]], "Morph volumetric source estimate": [[44, "morph-volumetric-source-estimate"]], "Get a SourceMorph object for VolSourceEstimate": [[44, "get-a-sourcemorph-object-for-volsourceestimate"]], "Apply morph to VolSourceEstimate": [[44, "apply-morph-to-volsourceestimate"]], "Convert morphed VolSourceEstimate into NIfTI": [[44, "convert-morphed-volsourceestimate-into-nifti"]], "Computing source timecourses with an XFit-like multi-dipole model": [[45, "computing-source-timecourses-with-an-xfit-like-multi-dipole-model"]], "Compute iterative reweighted TF-MxNE with multiscale time-frequency dictionary": [[46, "compute-iterative-reweighted-tf-mxne-with-multiscale-time-frequency-dictionary"]], "Visualize source leakage among labels using a circular graph": [[47, "visualize-source-leakage-among-labels-using-a-circular-graph"]], "Load forward solution and inverse operator": [[47, "load-forward-solution-and-inverse-operator"]], "Read and organise labels for cortical parcellation": [[47, "read-and-organise-labels-for-cortical-parcellation"]], "Compute point-spread function summaries (PCA) for all labels": [[47, "compute-point-spread-function-summaries-pca-for-all-labels"]], "Evaluate leakage based on label-to-label PSF correlations": [[47, "evaluate-leakage-based-on-label-to-label-psf-correlations"]], "Save the figure (optional)": [[47, "save-the-figure-optional"]], "Plot PSFs for individual labels": [[47, "plot-psfs-for-individual-labels"]], "Plot point-spread functions (PSFs) and cross-talk functions (CTFs)": [[48, "plot-point-spread-functions-psfs-and-cross-talk-functions-ctfs"]], "Visualize": [[48, "visualize"], [49, "visualize"], [50, "visualize"]], "Compute cross-talk functions for LCMV beamformers": [[49, "compute-cross-talk-functions-for-lcmv-beamformers"]], "Compute LCMV filters with different data covariance matrices": [[49, "compute-lcmv-filters-with-different-data-covariance-matrices"]], "Compute resolution matrices for the two LCMV beamformers": [[49, "compute-resolution-matrices-for-the-two-lcmv-beamformers"]], "Plot point-spread functions (PSFs) for a volume": [[50, "plot-point-spread-functions-psfs-for-a-volume"]], "Compute Rap-Music on evoked data": [[51, "compute-rap-music-on-evoked-data"]], "Reading an inverse operator": [[52, "reading-an-inverse-operator"]], "Reading an STC file": [[53, "reading-an-stc-file"]], "Compute spatial resolution metrics in source space": [[54, "compute-spatial-resolution-metrics-in-source-space"]], "MNE": [[54, "mne"]], "dSPM": [[54, "dspm"], [868, "dspm"]], "Visualize results": [[54, "visualize-results"]], "Compute spatial resolution metrics to compare MEG with EEG+MEG": [[55, "compute-spatial-resolution-metrics-to-compare-meg-with-eeg-meg"]], "EEGMEG": [[55, "eegmeg"]], "MEG": [[55, "meg"]], "Estimate data SNR using an inverse": [[57, "estimate-data-snr-using-an-inverse"]], "Computing source space SNR": [[58, "computing-source-space-snr"]], "EEG": [[58, "eeg"]], "Compute MxNE with time-frequency sparse prior": [[59, "compute-mxne-with-time-frequency-sparse-prior"]], "Plotting the full vector-valued MNE solution": [[60, "plotting-the-full-vector-valued-mne-solution"]], "Getting averaging info from .fif files": [[61, "getting-averaging-info-from-fif-files"]], "How to use data in neural ensemble (NEO) format": [[63, "how-to-use-data-in-neural-ensemble-neo-format"]], "Reading/Writing a noise covariance matrix": [[64, "reading-writing-a-noise-covariance-matrix"]], "Reading XDF EEG data": [[65, "reading-xdf-eeg-data"]], "Using contralateral referencing for EEG": [[67, "using-contralateral-referencing-for-eeg"]], "Cortical Signal Suppression (CSS) for removal of cortical signals": [[68, "cortical-signal-suppression-css-for-removal-of-cortical-signals"]], "Define target events based on time lag, plot evoked response": [[69, "define-target-events-based-on-time-lag-plot-evoked-response"]], "Identify EEG Electrodes Bridged by too much Gel": [[70, "ex-eeg-bridging"]], "Compute Electrical Distance Metric": [[70, "compute-electrical-distance-metric"]], "Examine an Electrical Distance Matrix": [[70, "examine-an-electrical-distance-matrix"]], "Examine the Distribution of Electrical Distances": [[70, "examine-the-distribution-of-electrical-distances"]], "Plot Electrical Distances on a Topomap": [[70, "plot-electrical-distances-on-a-topomap"]], "Plot the Raw Voltage Time Series for Bridged Electrodes": [[70, "plot-the-raw-voltage-time-series-for-bridged-electrodes"]], "Compare Bridging Across Subjects in the EEGBCI Dataset": [[70, "compare-bridging-across-subjects-in-the-eegbci-dataset"]], "The Relationship Between Bridging and Impedances": [[70, "the-relationship-between-bridging-and-impedances"]], "Summary": [[70, "summary"], [166, "summary"], [174, "summary"], [198, "summary"], [199, "summary"], [201, "summary"]], "Transform EEG data using current source density (CSD)": [[71, "transform-eeg-data-using-current-source-density-csd"]], "Show EOG artifact timing": [[72, "show-eog-artifact-timing"]], "Reduce EOG artifacts through regression": [[73, "reduce-eog-artifacts-through-regression"]], "Import packages and load data": [[73, "import-packages-and-load-data"]], "Perform regression and remove EOG": [[73, "perform-regression-and-remove-eog"]], "Before/after comparison": [[73, "before-after-comparison"]], "Find MEG reference channel artifacts": [[74, "find-meg-reference-channel-artifacts"]], "Visualise NIRS artifact correction methods": [[75, "visualise-nirs-artifact-correction-methods"]], "Import data": [[75, "import-data"]], "Add artificial artifacts to data": [[75, "add-artificial-artifacts-to-data"]], "Apply temporal derivative distribution repair": [[75, "apply-temporal-derivative-distribution-repair"]], "Compare the different ICA algorithms in MNE": [[76, "compare-the-different-ica-algorithms-in-mne"]], "Interpolate bad channels for MEG/EEG channels": [[78, "interpolate-bad-channels-for-meg-eeg-channels"]], "Maxwell filter data with movement compensation": [[79, "maxwell-filter-data-with-movement-compensation"]], "Annotate movement artifacts and reestimate dev_head_t": [[80, "annotate-movement-artifacts-and-reestimate-dev-head-t"]], "Plot continuous head position with respect to the mean recording position": [[80, "plot-continuous-head-position-with-respect-to-the-mean-recording-position"]], "Plot raw data with annotated movement": [[80, "plot-raw-data-with-annotated-movement"]], "Annotate muscle artifacts": [[81, "annotate-muscle-artifacts"]], "Plot muscle z-scores across recording": [[81, "plot-muscle-z-scores-across-recording"]], "View the annotations": [[81, "view-the-annotations"]], "Removing muscle ICA components": [[82, "removing-muscle-ica-components"]], "Let\u2019s now replicate this on the EEGBCI dataset": [[82, "let-s-now-replicate-this-on-the-eegbci-dataset"]], "Plot sensor denoising using oversampled temporal projection": [[83, "plot-sensor-denoising-using-oversampled-temporal-projection"]], "Shifting time-scale in evoked data": [[85, "shifting-time-scale-in-evoked-data"]], "Remap MEG channel types": [[86, "remap-meg-channel-types"]], "XDAWN Denoising": [[87, "xdawn-denoising"]], "Compare simulated and estimated source activity": [[89, "compare-simulated-and-estimated-source-activity"]], "Define main parameters of sources": [[89, "define-main-parameters-of-sources"]], "Create simulated source activity": [[89, "create-simulated-source-activity"], [93, "create-simulated-source-activity"]], "Simulate raw data": [[89, "simulate-raw-data"], [93, "simulate-raw-data"]], "Compute evoked from raw data": [[89, "compute-evoked-from-raw-data"]], "Create true stcs corresponding to evoked": [[89, "create-true-stcs-corresponding-to-evoked"]], "Reconstruct simulated sources": [[89, "reconstruct-simulated-sources"]], "Compute performance scores for different source amplitude thresholds": [[89, "compute-performance-scores-for-different-source-amplitude-thresholds"]], "For region": [[89, "for-region"]], "For Dipoles": [[89, "for-dipoles"]], "Generate simulated evoked data": [[91, "generate-simulated-evoked-data"]], "Generate simulated raw data": [[92, "generate-simulated-raw-data"]], "Simulate raw data using subject anatomy": [[93, "simulate-raw-data-using-subject-anatomy"]], "Extract epochs and compute evoked responsses": [[93, "extract-epochs-and-compute-evoked-responsses"]], "Reconstruct simulated source time courses using dSPM inverse operator": [[93, "reconstruct-simulated-source-time-courses-using-dspm-inverse-operator"]], "Generate simulated source data": [[94, "generate-simulated-source-data"]], "Permutation F-test on sensor data with 1D cluster level": [[95, "permutation-f-test-on-sensor-data-with-1d-cluster-level"]], "FDR correction on T-test on sensor data": [[96, "fdr-correction-on-t-test-on-sensor-data"]], "Regression on continuous data (rER[P/F])": [[98, "regression-on-continuous-data-rer-p-f"]], "Permutation T-test on sensor data": [[99, "permutation-t-test-on-sensor-data"]], "Analysing continuous features with binning and regression in sensor space": [[100, "analysing-continuous-features-with-binning-and-regression-in-sensor-space"]], "Compute a cross-spectral density (CSD) matrix": [[102, "compute-a-cross-spectral-density-csd-matrix"]], "Compute Power Spectral Density of inverse solution from single epochs": [[103, "compute-power-spectral-density-of-inverse-solution-from-single-epochs"]], "Compute source space PSD in label": [[103, "compute-source-space-psd-in-label"]], "Compute power and phase lock in label of the source space": [[106, "compute-power-and-phase-lock-in-label-of-the-source-space"]], "Compute source power spectral density (PSD) in a label": [[107, "compute-source-power-spectral-density-psd-in-a-label"]], "Compute source power spectral density (PSD) of VectorView and OPM data": [[108, "compute-source-power-spectral-density-psd-of-vectorview-and-opm-data"]], "Alignment and forward": [[108, "alignment-and-forward"]], "Alpha": [[108, "alpha"]], "Beta": [[108, "beta"]], "Compute induced power in the source space with dSPM": [[109, "compute-induced-power-in-the-source-space-with-dspm"]], "Temporal whitening with AR model": [[110, "temporal-whitening-with-ar-model"]], "Compute and visualize ERDS maps": [[111, "compute-and-visualize-erds-maps"]], "Explore event-related dynamics for specific frequency bands": [[112, "explore-event-related-dynamics-for-specific-frequency-bands"]], "Time-frequency on simulated data (Multitaper vs. Morlet vs. Stockwell vs. Hilbert)": [[113, "time-frequency-on-simulated-data-multitaper-vs-morlet-vs-stockwell-vs-hilbert"]], "Simulate data": [[113, "simulate-data"]], "Calculate a time-frequency representation (TFR)": [[113, "calculate-a-time-frequency-representation-tfr"]], "Multitaper transform": [[113, "multitaper-transform"]], "Stockwell (S) transform": [[113, "stockwell-s-transform"]], "Morlet Wavelets": [[113, "morlet-wavelets"]], "Narrow-bandpass Filter and Hilbert Transform": [[113, "narrow-bandpass-filter-and-hilbert-transform"]], "Calculating a TFR without averaging over epochs": [[113, "calculating-a-tfr-without-averaging-over-epochs"]], "Operating on arrays": [[113, "operating-on-arrays"]], "How to convert 3D electrode positions to a 2D image": [[114, "how-to-convert-3d-electrode-positions-to-a-2d-image"]], "Load data": [[114, "load-data"], [115, "load-data"], [177, "load-data"]], "Project 3D electrodes to a 2D snapshot": [[114, "project-3d-electrodes-to-a-2d-snapshot"]], "Manually creating 2D electrode positions": [[114, "manually-creating-2d-electrode-positions"]], "Plotting with mne.viz.Brain": [[115, "plotting-with-mne-viz-brain"]], "Add source information": [[115, "add-source-information"]], "Modify the view of the brain": [[115, "modify-the-view-of-the-brain"]], "Highlight a region on the brain": [[115, "highlight-a-region-on-the-brain"]], "Include the head in the image": [[115, "include-the-head-in-the-image"]], "Add sensors positions": [[115, "add-sensors-positions"]], "Add current dipoles": [[115, "add-current-dipoles"]], "Create a screenshot for exporting the brain image": [[115, "create-a-screenshot-for-exporting-the-brain-image"]], "Visualize channel over epochs as an image": [[116, "visualize-channel-over-epochs-as-an-image"]], "Plotting EEG sensors on the scalp": [[117, "plotting-eeg-sensors-on-the-scalp"]], "Plotting topographic arrowmaps of evoked data": [[118, "plotting-topographic-arrowmaps-of-evoked-data"]], "Plotting topographic maps of evoked data": [[119, "plotting-topographic-maps-of-evoked-data"]], "Basic plot_topomap() options": [[119, "basic-plot-topomap-options"]], "Additional plot_topomap() options": [[119, "additional-plot-topomap-options"]], "More advanced usage": [[119, "more-advanced-usage"]], "Interpolating topomaps": [[119, "interpolating-topomaps"]], "Animating the topomap": [[119, "animating-the-topomap"]], "Whitening evoked data with a noise covariance": [[120, "whitening-evoked-data-with-a-noise-covariance"]], "Plotting sensor layouts of MEG systems": [[122, "plotting-sensor-layouts-of-meg-systems"]], "Neuromag": [[122, "neuromag"]], "CTF": [[122, "ctf"]], "BTi": [[122, "bti"]], "KIT": [[122, "kit"]], "Artemis123": [[122, "artemis123"]], "Plot the MNE brain and helmet": [[123, "plot-the-mne-brain-and-helmet"]], "Plotting sensor layouts of EEG systems": [[124, "plotting-sensor-layouts-of-eeg-systems"]], "Plot a cortical parcellation": [[125, "plot-a-cortical-parcellation"]], "Make figures more publication ready": [[126, "make-figures-more-publication-ready"]], "Imports": [[126, "imports"]], "Evoked plot with brain activation": [[126, "evoked-plot-with-brain-activation"]], "Custom timecourse with montage inset": [[126, "custom-timecourse-with-montage-inset"]], "Plot single trial activity, grouped by ROI and sorted by RT": [[127, "plot-single-trial-activity-grouped-by-roi-and-sorted-by-rt"]], "Show noise levels from empty room data": [[128, "show-noise-levels-from-empty-room-data"]], "Sensitivity map of SSP projections": [[130, "sensitivity-map-of-ssp-projections"]], "Compare evoked responses for different conditions": [[131, "compare-evoked-responses-for-different-conditions"]], "Plot custom topographies for MEG sensors": [[132, "plot-custom-topographies-for-meg-sensors"]], "Cross-hemisphere comparison": [[133, "cross-hemisphere-comparison"]], "Working with sEEG data": [[134, "working-with-seeg-data"]], "Working with ECoG data": [[135, "working-with-ecog-data"]], "Load in data and perform basic preprocessing": [[135, "load-in-data-and-perform-basic-preprocessing"]], "Explore the electrodes on a template brain": [[135, "explore-the-electrodes-on-a-template-brain"]], "Compute frequency features of the data": [[135, "compute-frequency-features-of-the-data"]], "Plot Gamma Power on cortical sensors": [[135, "plot-gamma-power-on-cortical-sensors"]], "Visualize the time-evolution of the gamma power on the brain": [[135, "visualize-the-time-evolution-of-the-gamma-power-on-the-brain"]], "Sleep stage classification from polysomnography (PSG) data": [[136, "sleep-stage-classification-from-polysomnography-psg-data"]], "Read the PSG data and Hypnograms to create a raw object": [[136, "read-the-psg-data-and-hypnograms-to-create-a-raw-object"]], "Extract 30s events from annotations": [[136, "extract-30s-events-from-annotations"]], "Create Epochs from the data based on the events found in the annotations": [[136, "create-epochs-from-the-data-based-on-the-events-found-in-the-annotations"]], "Applying the same steps to the test data from Bob": [[136, "applying-the-same-steps-to-the-test-data-from-bob"]], "Feature Engineering": [[136, "feature-engineering"]], "Design a scikit-learn transformer from a Python function": [[136, "design-a-scikit-learn-transformer-from-a-python-function"]], "Multiclass classification workflow using scikit-learn": [[136, "multiclass-classification-workflow-using-scikit-learn"]], "Further analysis of the data": [[136, "further-analysis-of-the-data"]], "Exercise": [[136, "exercise"], [157, "exercise"], [195, "exercise"], [240, "exercise"]], "Clinical applications": [[137, "clinical-applications"], [164, "clinical-applications"]], "MNE-GUI-addons examples": [[137, "mne-gui-addons-examples"], [164, "mne-gui-addons-examples"]], "MNE-Python examples": [[137, "mne-python-examples"], [164, "mne-python-examples"]], "The Epochs data structure: discontinuous data": [[139, "the-epochs-data-structure-discontinuous-data"]], "Creating Epoched data from a Raw object": [[139, "creating-epoched-data-from-a-raw-object"]], "Basic visualization of Epochs objects": [[139, "basic-visualization-of-epochs-objects"]], "Subselecting epochs": [[139, "subselecting-epochs"]], "Selecting epochs by index": [[139, "selecting-epochs-by-index"]], "Selecting, dropping, and reordering channels": [[139, "selecting-dropping-and-reordering-channels"], [148, "selecting-dropping-and-reordering-channels"], [215, "selecting-dropping-and-reordering-channels"]], "Changing channel name and type": [[139, "changing-channel-name-and-type"], [215, "changing-channel-name-and-type"]], "Selection in the time domain": [[139, "selection-in-the-time-domain"], [215, "selection-in-the-time-domain"]], "Extracting data in other forms": [[139, "extracting-data-in-other-forms"]], "Loading and saving Epochs objects to disk": [[139, "loading-and-saving-epochs-objects-to-disk"]], "Iterating over Epochs": [[139, "iterating-over-epochs"]], "Regression-based baseline correction": [[140, "regression-based-baseline-correction"]], "Traditional baselining": [[140, "traditional-baselining"]], "Regression-based baselining": [[140, "regression-based-baselining"]], "Plot the baseline regressor": [[140, "plot-the-baseline-regressor"]], "Plot the ERPs": [[140, "plot-the-erps"]], "Plot the scalp topographies and difference waves": [[140, "plot-the-scalp-topographies-and-difference-waves"]], "Examine the interaction term": [[140, "examine-the-interaction-term"]], "Visualizing epoched data": [[141, "visualizing-epoched-data"]], "Plotting Epochs as time series": [[141, "plotting-epochs-as-time-series"]], "Interactivity in pipelines and scripts": [[141, null]], "Plotting projectors from an Epochs object": [[141, "plotting-projectors-from-an-epochs-object"]], "Plotting sensor locations": [[141, "plotting-sensor-locations"]], "Plotting the power spectrum of Epochs": [[141, "plotting-the-power-spectrum-of-epochs"]], "Plotting Epochs as an image map": [[141, "plotting-epochs-as-an-image-map"]], "Working with Epoch metadata": [[142, "working-with-epoch-metadata"]], "Viewing Epochs metadata": [[142, "viewing-epochs-metadata"]], "Restrictions on metadata DataFrames": [[142, null]], "Modifying the metadata": [[142, "modifying-the-metadata"]], "Selecting epochs using metadata queries": [[142, "selecting-epochs-using-metadata-queries"]], "Adding metadata to an Epochs object": [[142, "adding-metadata-to-an-epochs-object"]], "Auto-generating Epochs metadata": [[143, "auto-generating-epochs-metadata"]], "Preparation": [[143, "preparation"]], "Creating metadata from events": [[143, "creating-metadata-from-events"]], "The basics of make_metadata": [[143, "the-basics-of-make-metadata"]], "Specifying time-locked events": [[143, "specifying-time-locked-events"]], "Keeping only the first events of a group": [[143, "keeping-only-the-first-events-of-a-group"]], "Adding new columns to describe stimulation side and response correctness": [[143, "adding-new-columns-to-describe-stimulation-side-and-response-correctness"]], "Creating Epochs with metadata, and visualizing ERPs": [[143, "creating-epochs-with-metadata-and-visualizing-erps"]], "Applying the knowledge: visualizing the ERN component": [[143, "applying-the-knowledge-visualizing-the-ern-component"]], "Exporting Epochs to Pandas DataFrames": [[144, "exporting-epochs-to-pandas-dataframes"]], "Converting an Epochs object to a DataFrame": [[144, "converting-an-epochs-object-to-a-dataframe"]], "Scaling time and channel values": [[144, "scaling-time-and-channel-values"]], "Setting the index": [[144, "setting-the-index"]], "Wide- versus long-format DataFrames": [[144, "wide-versus-long-format-dataframes"]], "Divide continuous data into equally-spaced epochs": [[145, "divide-continuous-data-into-equally-spaced-epochs"]], "Characteristics of Fixed Length Epochs": [[145, "characteristics-of-fixed-length-epochs"]], "Example Use Case for Fixed Length Epochs: Connectivity Analysis": [[145, "example-use-case-for-fixed-length-epochs-connectivity-analysis"]], "Segmenting continuous data into epochs": [[146, "segmenting-continuous-data-into-epochs"], [164, "segmenting-continuous-data-into-epochs"]], "The Evoked data structure: evoked/averaged data": [[148, "the-evoked-data-structure-evoked-averaged-data"]], "Creating Evoked objects from Epochs": [[148, "creating-evoked-objects-from-epochs"]], "Basic visualization of Evoked objects": [[148, "basic-visualization-of-evoked-objects"]], "Subsetting Evoked data": [[148, "subsetting-evoked-data"]], "Evokeds are not memory-mapped": [[148, null]], "Similarities among the core data structures": [[148, "similarities-among-the-core-data-structures"]], "Loading and saving Evoked data": [[148, "loading-and-saving-evoked-data"]], "Combining Evoked objects": [[148, "combining-evoked-objects"]], "Other uses of Evoked objects": [[148, "other-uses-of-evoked-objects"]], "Visualizing Evoked data": [[149, "visualizing-evoked-data"]], "Plotting signal traces": [[149, "plotting-signal-traces"]], "Butterfly plots": [[149, null]], "Plotting scalp topographies": [[149, "plotting-scalp-topographies"]], "Arrow maps": [[149, "arrow-maps"]], "Joint plots": [[149, "joint-plots"]], "Comparing Evoked objects": [[149, "comparing-evoked-objects"]], "Image plots": [[149, "image-plots"]], "Topographical subplots": [[149, "topographical-subplots"]], "3D Field Maps": [[149, "d-field-maps"]], "EEG analysis - Event-Related Potentials (ERPs)": [[150, "eeg-analysis-event-related-potentials-erps"]], "Channel names and types": [[150, "channel-names-and-types"]], "Channel locations": [[150, "channel-locations"]], "Setting the EEG reference": [[150, "setting-the-eeg-reference"], [207, "setting-the-eeg-reference"]], "Filtering": [[150, "filtering"]], "Evoked responses: epoching and averaging": [[150, "evoked-responses-epoching-and-averaging"]], "Global field power (GFP)": [[150, "global-field-power-gfp"]], "Averaging across channels with regions of interest": [[150, "averaging-across-channels-with-regions-of-interest"]], "Comparing conditions": [[150, "comparing-conditions"]], "Grand averages": [[150, "grand-averages"]], "Amplitude and latency measures": [[150, "amplitude-and-latency-measures"]], "Peak latency and amplitude": [[150, "peak-latency-and-amplitude"]], "Mean Amplitude": [[150, "mean-amplitude"]], "Plotting whitened data": [[151, "plotting-whitened-data"]], "Raw data with whitening": [[151, "raw-data-with-whitening"]], "Epochs with whitening": [[151, "epochs-with-whitening"]], "Evoked data with whitening": [[151, "evoked-data-with-whitening"]], "Evoked data with scaled whitening": [[151, "evoked-data-with-scaled-whitening"]], "Topographic plot with whitening": [[151, "topographic-plot-with-whitening"]], "Estimating evoked responses": [[152, "estimating-evoked-responses"], [164, "estimating-evoked-responses"], [165, "estimating-evoked-responses"]], "FreeSurfer MRI reconstruction": [[154, "freesurfer-mri-reconstruction"]], "First steps": [[154, "first-steps"], [848, "first-steps"]], "Anatomical reconstruction": [[154, "anatomical-reconstruction"]], "Use with MNE-Python": [[154, "use-with-mne-python"]], "\u2018fsaverage\u2019": [[154, "fsaverage"]], "Source alignment and coordinate frames": [[155, "source-alignment-and-coordinate-frames"]], "Understanding coordinate frames": [[155, "understanding-coordinate-frames"]], "Coordinate frame definitions": [[155, "coordinate-frame-definitions"]], "A bad example": [[155, "a-bad-example"]], "A good example": [[155, "a-good-example"]], "Visualizing the transformations": [[155, "visualizing-the-transformations"]], "Example: MRI defacing": [[155, "example-mri-defacing"]], "Defining the head\u2194MRI trans using the GUI": [[155, "defining-the-headmri-trans-using-the-gui"]], "Alignment without MRI": [[155, "alignment-without-mri"]], "Using an automated approach to coregistration": [[156, "using-an-automated-approach-to-coregistration"]], "Set up the coregistration model": [[156, "set-up-the-coregistration-model"]], "Initial fit with fiducials": [[156, "initial-fit-with-fiducials"]], "Refining with ICP": [[156, "refining-with-icp"]], "Omitting bad points": [[156, "omitting-bad-points"]], "Final coregistration fit": [[156, "final-coregistration-fit"]], "Head model and forward computation": [[157, "head-model-and-forward-computation"]], "Computing the forward operator": [[157, "computing-the-forward-operator"]], "Compute and visualize BEM surfaces": [[157, "compute-and-visualize-bem-surfaces"]], "Visualizing the coregistration": [[157, "visualizing-the-coregistration"]], "Compute Source Space": [[157, "compute-source-space"]], "Compute forward solution": [[157, "compute-forward-solution"]], "EEG forward operator with a template MRI": [[158, "eeg-forward-operator-with-a-template-mri"]], "Adult template MRI (fsaverage)": [[158, "adult-template-mri-fsaverage"]], "Setup source space and compute forward": [[158, "setup-source-space-and-compute-forward"]], "Infant MRI surrogates": [[158, "infant-mri-surrogates"]], "Get an infant MRI template": [[158, "get-an-infant-mri-template"]], "How MNE uses FreeSurfer\u2019s outputs": [[159, "how-mne-uses-freesurfer-s-outputs"]], "MRI coordinate frames": [[159, "mri-coordinate-frames"]], "Under the hood": [[159, null]], "\u201cMRI coordinates\u201d in MNE-Python: FreeSurfer surface RAS": [[159, "mri-coordinates-in-mne-python-freesurfer-surface-ras"]], "Head coordinate frame": [[159, null]], "Using FreeSurfer\u2019s surface reconstructions": [[159, "using-freesurfer-s-surface-reconstructions"]], "Cortical alignment (spherical)": [[159, "cortical-alignment-spherical"]], "Surface decimation": [[159, "surface-decimation"]], "FreeSurfer\u2019s MNI affine transformation": [[159, "freesurfer-s-mni-affine-transformation"]], "Understanding the inflated brain": [[159, "understanding-the-inflated-brain"]], "Fixing BEM and head surfaces": [[160, "fixing-bem-and-head-surfaces"]], "Exporting surfaces to Blender": [[160, "exporting-surfaces-to-blender"]], "Editing in Blender": [[160, "editing-in-blender"]], "Using the fixed surfaces in MNE-Python": [[160, "using-the-fixed-surfaces-in-mne-python"]], "Editing the head surfaces": [[160, "editing-the-head-surfaces"]], "Low-resolution head": [[160, "low-resolution-head"]], "High-resolution head": [[160, "high-resolution-head"]], "Blender editing tips": [[160, "blender-editing-tips"]], "What if you still get an error?": [[160, "what-if-you-still-get-an-error"]], "Blender operations": [[160, "blender-operations"]], "Cleaning up a bad dense head surface by smoothing": [[160, "cleaning-up-a-bad-dense-head-surface-by-smoothing"]], "Topological errors": [[160, "topological-errors"]], "Dealing with topology in blender": [[160, "dealing-with-topology-in-blender"]], "Dealing with topology using pymeshfix": [[160, "dealing-with-topology-using-pymeshfix"]], "Computing a covariance matrix": [[161, "computing-a-covariance-matrix"]], "Plot the covariance matrices": [[161, "plot-the-covariance-matrices"]], "How should I regularize the covariance matrix?": [[161, "how-should-i-regularize-the-covariance-matrix"], [865, "how-should-i-regularize-the-covariance-matrix"]], "Forward models and source spaces": [[162, "forward-models-and-source-spaces"], [164, "forward-models-and-source-spaces"]], "Tutorials": [[164, "tutorials"]], "Introductory tutorials": [[164, "introductory-tutorials"], [172, "introductory-tutorials"]], "Reading data for different recording systems": [[164, "reading-data-for-different-recording-systems"], [192, "reading-data-for-different-recording-systems"]], "Working with continuous data": [[164, "working-with-continuous-data"], [219, "working-with-continuous-data"]], "Time-frequency analysis": [[164, "time-frequency-analysis"], [165, "time-frequency-analysis"], [242, "time-frequency-analysis"]], "Source localization and inverses": [[164, "source-localization-and-inverses"], [185, "source-localization-and-inverses"]], "Statistical analysis of sensor data": [[164, "statistical-analysis-of-sensor-data"], [232, "statistical-analysis-of-sensor-data"]], "Statistical analysis of source estimates": [[164, "statistical-analysis-of-source-estimates"], [237, "statistical-analysis-of-source-estimates"]], "Machine learning models of neural activity": [[164, "machine-learning-models-of-neural-activity"], [196, "machine-learning-models-of-neural-activity"]], "Simulation": [[164, "simulation"], [224, "simulation"], [881, "simulation"]], "Overview of MEG/EEG analysis with MNE-Python": [[165, "overview-of-meg-eeg-analysis-with-mne-python"]], "Loading data": [[165, "loading-data"]], "Detecting experimental events": [[165, "detecting-experimental-events"]], "Epoching continuous data": [[165, "epoching-continuous-data"]], "Inverse modeling": [[165, "inverse-modeling"]], "Modifying data in-place": [[166, "modifying-data-in-place"]], "Signal processing": [[166, "signal-processing"]], "Channel picking": [[166, "channel-picking"]], "The copy parameter": [[166, "the-copy-parameter"]], "Parsing events from raw data": [[167, "parsing-events-from-raw-data"]], "The Events and Annotations data structures": [[167, "the-events-and-annotations-data-structures"]], "What is a STIM channel?": [[167, "what-is-a-stim-channel"]], "Converting a STIM channel signal to an Events array": [[167, "converting-a-stim-channel-signal-to-an-events-array"]], "The middle column of the Events array": [[167, null]], "Reading embedded events as Annotations": [[167, "reading-embedded-events-as-annotations"]], "Converting between Events arrays and Annotations objects": [[167, "converting-between-events-arrays-and-annotations-objects"]], "Making multiple events per annotation": [[167, "making-multiple-events-per-annotation"]], "The Info data structure": [[168, "the-info-data-structure"]], "Querying the Info object": [[168, "querying-the-info-object"]], "Obtaining subsets of channels": [[168, "obtaining-subsets-of-channels"]], "Obtaining channel type information": [[168, "obtaining-channel-type-information"]], "Dropping channels from an Info object": [[168, "dropping-channels-from-an-info-object"]], "Working with sensor locations": [[169, "working-with-sensor-locations"]], "About montages and layouts": [[169, "about-montages-and-layouts"]], "Working with built-in montages": [[169, "working-with-built-in-montages"]], "Computing sensor locations": [[169, null]], "Plotting 2D sensor locations like EEGLAB": [[169, "plotting-2d-sensor-locations-like-eeglab"]], "The sphere keyword is available in many places!": [[169, null]], "Manually controlling 2D channel projection": [[169, "manually-controlling-2d-channel-projection"]], "Reading sensor digitization files": [[169, "reading-sensor-digitization-files"]], "Visualizing sensors in 3D surface renderings": [[169, "visualizing-sensors-in-3d-surface-renderings"]], "Working with layout files": [[169, "working-with-layout-files"]], "Configuring MNE-Python": [[170, "configuring-mne-python"]], "Getting and setting configuration variables": [[170, "getting-and-setting-configuration-variables"]], "Where configurations are stored": [[170, "where-configurations-are-stored"]], "Using environment variables": [[170, "using-environment-variables"]], "Logging": [[170, "logging"]], "Getting information about your system": [[170, "getting-information-about-your-system"]], "Getting started with mne.Report": [[171, "getting-started-with-mne-report"]], "Adding Raw data": [[171, "adding-raw-data"]], "Adding events": [[171, "adding-events"]], "Adding Epochs": [[171, "adding-epochs"]], "Adding Evoked": [[171, "adding-evoked"]], "Adding Covariance": [[171, "adding-covariance"]], "Adding Projection vectors": [[171, "adding-projection-vectors"]], "Adding ICA": [[171, "adding-ica"]], "Adding MRI with BEM": [[171, "adding-mri-with-bem"]], "Adding coregistration": [[171, "adding-coregistration"]], "Adding a Forward solution": [[171, "adding-a-forward-solution"]], "Adding an InverseOperator": [[171, "adding-an-inverseoperator"]], "Adding a SourceEstimate": [[171, "adding-a-sourceestimate"]], "Adding source code (e.g., a Python script)": [[171, "adding-source-code-e-g-a-python-script"]], "Adding custom figures": [[171, "adding-custom-figures"]], "Adding image files": [[171, "adding-image-files"]], "Working with tags": [[171, "working-with-tags"]], "Editing a saved report": [[171, "editing-a-saved-report"]], "Adding an entire folder of files": [[171, "adding-an-entire-folder-of-files"]], "Adding custom HTML (e.g., a description text)": [[171, "adding-custom-html-e-g-a-description-text"]], "The SourceEstimate data structure": [[174, "the-sourceestimate-data-structure"]], "Load and inspect example data": [[174, "load-and-inspect-example-data"]], "SourceEstimate (stc)": [[174, "sourceestimate-stc"]], "Relationship to SourceSpaces (src)": [[174, "relationship-to-sourcespaces-src"]], "Source localization with equivalent current dipole (ECD) fit": [[175, "source-localization-with-equivalent-current-dipole-ecd-fit"]], "Source localization with MNE, dSPM, sLORETA, and eLORETA": [[176, "source-localization-with-mne-dspm-sloreta-and-eloreta"]], "Compute regularized noise covariance": [[176, "compute-regularized-noise-covariance"]], "Compute the evoked response": [[176, "compute-the-evoked-response"]], "Inverse modeling: MNE/dSPM on evoked and raw data": [[176, "inverse-modeling-mne-dspm-on-evoked-and-raw-data"]], "The role of dipole orientations in distributed source localization": [[177, "the-role-of-dipole-orientations-in-distributed-source-localization"]], "The source space": [[177, "the-source-space"]], "Fixed dipole orientations": [[177, "fixed-dipole-orientations"]], "Loose dipole orientations": [[177, "loose-dipole-orientations"]], "Limiting orientations, but not fixing them": [[177, "limiting-orientations-but-not-fixing-them"]], "Discarding dipole orientation information": [[177, "discarding-dipole-orientation-information"]], "Computing various MNE solutions": [[178, "computing-various-mne-solutions"]], "Fixed orientation": [[178, "fixed-orientation"]], "Free orientation": [[178, "free-orientation"]], "Source reconstruction using an LCMV beamformer": [[179, "source-reconstruction-using-an-lcmv-beamformer"]], "Introduction to beamformers": [[179, "introduction-to-beamformers"]], "Data processing": [[179, "data-processing"]], "Computing the covariance matrices": [[179, "computing-the-covariance-matrices"]], "The forward model": [[179, "the-forward-model"]], "Handling depth bias": [[179, "handling-depth-bias"]], "Compute the spatial filter": [[179, "compute-the-spatial-filter"]], "Apply the spatial filter": [[179, "apply-the-spatial-filter"]], "Visualize the reconstructed source activity": [[179, "visualize-the-reconstructed-source-activity"]], "On MRI slices (orthoview; 2D)": [[179, "on-mri-slices-orthoview-2d"]], "On MNI glass brain (orthoview; 2D)": [[179, "on-mni-glass-brain-orthoview-2d"]], "Volumetric rendering (3D) with vectors": [[179, "volumetric-rendering-3d-with-vectors"]], "Visualize the activity of the maximum voxel with all three components": [[179, "visualize-the-activity-of-the-maximum-voxel-with-all-three-components"]], "Morph the output to fsaverage": [[179, "morph-the-output-to-fsaverage"]], "Visualize source time courses (stcs)": [[180, "visualize-source-time-courses-stcs"]], "Surface Source Estimates": [[180, "surface-source-estimates"]], "Volume Source Estimates": [[180, "volume-source-estimates"]], "Vector Source Estimates": [[180, "vector-source-estimates"]], "Dipole fits": [[180, "dipole-fits"]], "EEG source localization given electrode locations on an MRI": [[181, "eeg-source-localization-given-electrode-locations-on-an-mri"]], "Prerequisites": [[181, "prerequisites"]], "Visualizing the MRI": [[181, "visualizing-the-mri"]], "Getting our MRI voxel EEG locations to head (and MRI surface RAS) coords": [[181, "getting-our-mri-voxel-eeg-locations-to-head-and-mri-surface-ras-coords"]], "Getting a source estimate": [[181, "getting-a-source-estimate"]], "Brainstorm Elekta phantom dataset tutorial": [[182, "brainstorm-elekta-phantom-dataset-tutorial"]], "Brainstorm CTF phantom dataset tutorial": [[183, "brainstorm-ctf-phantom-dataset-tutorial"]], "4D Neuroimaging/BTi phantom dataset tutorial": [[184, "d-neuroimaging-bti-phantom-dataset-tutorial"]], "Importing data from MEG devices": [[187, "importing-data-from-meg-devices"]], "MEGIN/Elekta Neuromag VectorView and TRIUX (.fif)": [[187, "megin-elekta-neuromag-vectorview-and-triux-fif"]], "FIL OPM (.bin)": [[187, "fil-opm-bin"]], "Artemis123 (.bin)": [[187, "artemis123-bin"]], "4-D Neuroimaging / BTI data (dir)": [[187, "d-neuroimaging-bti-data-dir"]], "CTF data (dir)": [[187, "ctf-data-dir"]], "CTF Polhemus data": [[187, "ctf-polhemus-data"]], "Applying software gradient compensation": [[187, "applying-software-gradient-compensation"]], "Ricoh/KIT MEG system data (.con/.sqd)": [[187, "ricoh-kit-meg-system-data-con-sqd"]], "Channel naming": [[187, null]], "FieldTrip MEG/EEG data (.mat)": [[187, "fieldtrip-meg-eeg-data-mat"]], "Creating MNE data structures from arbitrary data (from memory)": [[187, "creating-mne-data-structures-from-arbitrary-data-from-memory"]], "Importing data from EEG devices": [[188, "importing-data-from-eeg-devices"]], "BrainVision (.vhdr, .vmrk, .eeg)": [[188, "brainvision-vhdr-vmrk-eeg"]], "European data format (.edf)": [[188, "european-data-format-edf"]], "BioSemi data format (.bdf)": [[188, "biosemi-data-format-bdf"]], "General data format (.gdf)": [[188, "general-data-format-gdf"]], "Neuroscan CNT (.cnt)": [[188, "neuroscan-cnt-cnt"]], "EGI simple binary (.egi)": [[188, "egi-simple-binary-egi"]], "EGI MFF (.mff)": [[188, "egi-mff-mff"]], "EEGLAB files (.set, .fdt)": [[188, "eeglab-files-set-fdt"]], "Nicolet (.data)": [[188, "nicolet-data"]], "eXimia EEG data (.nxe)": [[188, "eximia-eeg-data-nxe"]], "Persyst EEG data (.lay, .dat)": [[188, "persyst-eeg-data-lay-dat"]], "Nihon Kohden EEG data (.eeg, .21e, .pnt, .log)": [[188, "nihon-kohden-eeg-data-eeg-21e-pnt-log"]], "XDF data (.xdf, .xdfz)": [[188, "xdf-data-xdf-xdfz"]], "Setting EEG references": [[188, "setting-eeg-references"]], "Reading electrode locations and head shapes for EEG recordings": [[188, "reading-electrode-locations-and-head-shapes-for-eeg-recordings"]], "Importing data from fNIRS devices": [[189, "importing-data-from-fnirs-devices"]], "Standardized data": [[189, "standardized-data"]], "SNIRF (.snirf)": [[189, "snirf-snirf"]], "Specifying the coordinate system": [[189, "specifying-the-coordinate-system"]], "Continuous Wave Devices": [[189, "continuous-wave-devices"]], "NIRx (directory or hdr)": [[189, "nirx-directory-or-hdr"]], "Hitachi (.csv)": [[189, "hitachi-csv"]], "Frequency Domain Devices": [[189, "frequency-domain-devices"]], "BOXY (.txt)": [[189, "boxy-txt"]], "Custom Data Import": [[189, "custom-data-import"]], "Loading legacy data in CSV or TSV format": [[189, "loading-legacy-data-in-csv-or-tsv-format"]], "Applying standard sensor locations to imported data": [[189, "applying-standard-sensor-locations-to-imported-data"]], "Working with CTF data: the Brainstorm auditory dataset": [[190, "working-with-ctf-data-the-brainstorm-auditory-dataset"]], "Importing Data from Eyetracking devices": [[191, "importing-data-from-eyetracking-devices"]], "SR Research (Eyelink) (.asc)": [[191, "sr-research-eyelink-asc"]], "Eye Position Data": [[191, "eye-position-data"]], "Gaze": [[191, "gaze"]], "Head-Referenced Eye Angle (HREF)": [[191, "head-referenced-eye-angle-href"]], "Pupil Position": [[191, "pupil-position"]], "Pupil Size Data": [[191, "pupil-size-data"]], "Velocity, resolution, and head position data": [[191, "velocity-resolution-and-head-position-data"]], "Spectro-temporal receptive field (STRF) estimation on continuous data": [[194, "spectro-temporal-receptive-field-strf-estimation-on-continuous-data"]], "Load audio data": [[194, "load-audio-data"]], "Create a receptive field": [[194, "create-a-receptive-field"]], "Simulate a neural response": [[194, "simulate-a-neural-response"]], "Fit a model to recover this receptive field": [[194, "fit-a-model-to-recover-this-receptive-field"]], "Visualize the effects of regularization": [[194, "visualize-the-effects-of-regularization"]], "Using different regularization types": [[194, "using-different-regularization-types"]], "Compare model performance": [[194, "compare-model-performance"]], "Decoding (MVPA)": [[195, "decoding-mvpa"]], "Design philosophy": [[195, "design-philosophy"], [863, "design-philosophy"]], "Transformation classes": [[195, "transformation-classes"]], "Scaler": [[195, "scaler"]], "Vectorizer": [[195, "vectorizer"]], "PSDEstimator": [[195, "psdestimator"]], "FilterEstimator": [[195, "filterestimator"]], "Spatial filters": [[195, "spatial-filters"]], "Common spatial pattern": [[195, "common-spatial-pattern"]], "Examples": [[195, null], [195, null], [195, null], [195, null], [195, null], [256, "examples"], [256, "id4"], [256, "id7"], [256, "id10"], [256, "id13"], [256, "id16"], [256, "id19"], [256, "id22"], [256, "id25"], [256, "id29"], [256, "id32"], [256, "id35"], [256, "id38"], [256, "id41"], [256, "id44"], [256, "id47"], [256, "id50"], [256, "id53"], [256, "id56"], [256, "id59"], [256, "id62"], [256, "id65"], [256, "id68"], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null], [862, null]], "Source power comodulation (SPoC)": [[195, "source-power-comodulation-spoc"]], "xDAWN": [[195, "xdawn"]], "Effect-matched spatial filtering": [[195, "effect-matched-spatial-filtering"]], "Patterns vs. filters": [[195, "patterns-vs-filters"]], "Decoding over time": [[195, "decoding-over-time"]], "Temporal decoding": [[195, "temporal-decoding"]], "Temporal generalization": [[195, "temporal-generalization"]], "Projecting sensor-space patterns to source space": [[195, "projecting-sensor-space-patterns-to-source-space"]], "Source-space decoding": [[195, "source-space-decoding"]], "Overview of artifact detection": [[198, "overview-of-artifact-detection"]], "What are artifacts?": [[198, "what-are-artifacts"]], "What to do about artifacts": [[198, "what-to-do-about-artifacts"]], "Artifact detection": [[198, "artifact-detection"]], "Low-frequency drifts": [[198, "low-frequency-drifts"]], "Power line noise": [[198, "power-line-noise"], [202, "power-line-noise"]], "Heartbeat artifacts (ECG)": [[198, "heartbeat-artifacts-ecg"]], "Ocular artifacts (EOG)": [[198, "ocular-artifacts-eog"]], "Handling bad channels": [[199, "handling-bad-channels"]], "Marking bad channels": [[199, "marking-bad-channels"], [861, "marking-bad-channels"]], "Blocking execution": [[199, null]], "When to look for bad channels": [[199, "when-to-look-for-bad-channels"]], "Why mark bad channels at all?": [[199, "why-mark-bad-channels-at-all"]], "Interpolating bad channels": [[199, "interpolating-bad-channels"]], "How interpolation works": [[199, "how-interpolation-works"]], "Interpolation in MNE-Python": [[199, "interpolation-in-mne-python"]], "Rejecting bad data spans and breaks": [[200, "rejecting-bad-data-spans-and-breaks"]], "Annotating bad spans of data": [[200, "annotating-bad-spans-of-data"]], "The reject_by_annotation parameter": [[200, "the-reject-by-annotation-parameter"]], "Generating annotations programmatically": [[200, "generating-annotations-programmatically"]], "Detecting and annotating breaks": [[200, "detecting-and-annotating-breaks"]], "Rejecting Epochs based on channel amplitude": [[200, "rejecting-epochs-based-on-channel-amplitude"]], "Background information on filtering": [[201, "background-information-on-filtering"]], "Problem statement": [[201, "problem-statement"]], "Filtering basics": [[201, "filtering-basics"]], "FIR Filters": [[201, "fir-filters"]], "Designing FIR filters": [[201, "designing-fir-filters"]], "Applying FIR filters": [[201, "applying-fir-filters"]], "IIR filters": [[201, "iir-filters"]], "Designing IIR filters": [[201, "designing-iir-filters"]], "Applying IIR filters": [[201, "applying-iir-filters"]], "Some pitfalls of filtering": [[201, "some-pitfalls-of-filtering"]], "Low-pass problems": [[201, "low-pass-problems"]], "High-pass problems": [[201, "high-pass-problems"]], "Baseline problems (or solutions?)": [[201, "baseline-problems-or-solutions"]], "Filtering defaults": [[201, "filtering-defaults"]], "Defaults in MNE-Python": [[201, "defaults-in-mne-python"]], "Defaults in MNE-C": [[201, "defaults-in-mne-c"]], "Defaults in other software": [[201, "defaults-in-other-software"]], "Reporting Filters": [[201, "reporting-filters"]], "Filter type": [[201, "filter-type"]], "Cutoff frequency": [[201, "cutoff-frequency"]], "Filter length (order) and transition bandwidth (roll-off)": [[201, "filter-length-order-and-transition-bandwidth-roll-off"]], "Passband ripple and stopband attenuation": [[201, "passband-ripple-and-stopband-attenuation"]], "Filter delay and direction of computation": [[201, "filter-delay-and-direction-of-computation"]], "Filtering and resampling data": [[202, "filtering-and-resampling-data"]], "Background on filtering": [[202, "background-on-filtering"]], "Repairing artifacts by filtering": [[202, "repairing-artifacts-by-filtering"]], "Slow drifts": [[202, "slow-drifts"]], "Resampling": [[202, "resampling"]], "Best practices": [[202, "best-practices"], [205, "best-practices"]], "Repairing artifacts with regression": [[203, "repairing-artifacts-with-regression"]], "Prepare the data": [[203, "prepare-the-data"]], "Visualize the original data": [[203, "visualize-the-original-data"]], "Compute and apply EOG regression": [[203, "compute-and-apply-eog-regression"]], "Subtract the evoked response from the epoch data before regression": [[203, "subtract-the-evoked-response-from-the-epoch-data-before-regression"]], "Create EOG evoked before regression": [[203, "create-eog-evoked-before-regression"]], "Visualize the effect on raw data": [[203, "visualize-the-effect-on-raw-data"]], "Repairing artifacts with ICA": [[204, "repairing-artifacts-with-ica"]], "What is ICA?": [[204, "what-is-ica"]], "ICA in MNE-Python": [[204, "ica-in-mne-python"]], "ICA and dimensionality reduction": [[204, null]], "Example: EOG and ECG artifact repair": [[204, "example-eog-and-ecg-artifact-repair"], [206, "example-eog-and-ecg-artifact-repair"]], "Visualizing the artifacts": [[204, "visualizing-the-artifacts"], [206, "visualizing-the-artifacts"]], "Filtering to remove slow drifts": [[204, "filtering-to-remove-slow-drifts"]], "Fitting ICA": [[204, "fitting-ica"]], "Ignoring the time domain": [[204, null]], "Looking at the ICA solution": [[204, "looking-at-the-ica-solution"]], "Selecting ICA components manually": [[204, "selecting-ica-components-manually"]], "Using an EOG channel to select ICA components": [[204, "using-an-eog-channel-to-select-ica-components"]], "Using a simulated channel to select ICA components": [[204, "using-a-simulated-channel-to-select-ica-components"]], "Selecting ICA components using template matching": [[204, "selecting-ica-components-using-template-matching"]], "Compute ICA components on Epochs": [[204, "compute-ica-components-on-epochs"]], "Background on projectors and projections": [[205, "background-on-projectors-and-projections"]], "What is a projection?": [[205, "what-is-a-projection"]], "Example: projection as noise reduction": [[205, "example-projection-as-noise-reduction"]], "Terminology": [[205, null]], "Signal-space projection (SSP)": [[205, "signal-space-projection-ssp"]], "Projectors in MNE-Python": [[205, "projectors-in-mne-python"]], "Computing projectors": [[205, "computing-projectors"]], "Visualizing the effect of projectors": [[205, "visualizing-the-effect-of-projectors"]], "Loading and saving projectors": [[205, "loading-and-saving-projectors"]], "Adding and removing projectors": [[205, "adding-and-removing-projectors"]], "When are projectors \u201capplied\u201d?": [[205, "when-are-projectors-applied"]], "Repairing artifacts with SSP": [[206, "repairing-artifacts-with-ssp"]], "What is SSP?": [[206, "what-is-ssp"]], "Example: Environmental noise reduction from empty-room recordings": [[206, "example-environmental-noise-reduction-from-empty-room-recordings"]], "Visualizing the empty-room noise": [[206, "visualizing-the-empty-room-noise"]], "Creating the empty-room projectors": [[206, "creating-the-empty-room-projectors"]], "Visualizing how projectors affect the signal": [[206, "visualizing-how-projectors-affect-the-signal"]], "Repairing ECG artifacts with SSP": [[206, "repairing-ecg-artifacts-with-ssp"]], "Repairing EOG artifacts with SSP": [[206, "repairing-eog-artifacts-with-ssp"]], "Choosing the number of projectors": [[206, "choosing-the-number-of-projectors"]], "Visualizing SSP sensor-space bias via signal reconstruction": [[206, "visualizing-ssp-sensor-space-bias-via-signal-reconstruction"]], "SSP reconstruction": [[206, null]], "Background": [[207, "background"]], "Setting or changing the reference channel": [[207, "setting-or-changing-the-reference-channel"]], "Setting average reference": [[207, "setting-average-reference"]], "Creating the average reference as a projector": [[207, "creating-the-average-reference-as-a-projector"]], "Using an infinite reference (REST)": [[207, "using-an-infinite-reference-rest"]], "Using a bipolar reference": [[207, "using-a-bipolar-reference"]], "EEG reference and source modeling": [[207, "eeg-reference-and-source-modeling"]], "Extracting and visualizing subject head movement": [[208, "extracting-and-visualizing-subject-head-movement"]], "HPI frequencies": [[208, "hpi-frequencies"]], "Estimating continuous head position": [[208, "estimating-continuous-head-position"]], "Visualizing continuous head position": [[208, "visualizing-continuous-head-position"]], "Computing SNR of the HPI signal": [[208, "computing-snr-of-the-hpi-signal"]], "Signal-space separation (SSS) and Maxwell filtering": [[209, "signal-space-separation-sss-and-maxwell-filtering"]], "Background on SSS and Maxwell filtering": [[209, "background-on-sss-and-maxwell-filtering"]], "Using SSS and Maxwell filtering in MNE-Python": [[209, "using-sss-and-maxwell-filtering-in-mne-python"]], "Spatiotemporal SSS (tSSS)": [[209, "spatiotemporal-sss-tsss"]], "Movement compensation": [[209, "movement-compensation"]], "Caveats to using SSS / Maxwell filtering": [[209, "caveats-to-using-sss-maxwell-filtering"]], "Preprocessing functional near-infrared spectroscopy (fNIRS) data": [[210, "preprocessing-functional-near-infrared-spectroscopy-fnirs-data"]], "Providing more meaningful annotation information": [[210, "providing-more-meaningful-annotation-information"]], "Viewing location of sensors over brain surface": [[210, "viewing-location-of-sensors-over-brain-surface"]], "Selecting channels appropriate for detecting neural responses": [[210, "selecting-channels-appropriate-for-detecting-neural-responses"]], "Converting from raw intensity to optical density": [[210, "converting-from-raw-intensity-to-optical-density"]], "Evaluating the quality of the data": [[210, "evaluating-the-quality-of-the-data"]], "Converting from optical density to haemoglobin": [[210, "converting-from-optical-density-to-haemoglobin"]], "Removing heart rate from signal": [[210, "removing-heart-rate-from-signal"]], "Extract epochs": [[210, "extract-epochs"]], "View consistency of responses across trials": [[210, "view-consistency-of-responses-across-trials"]], "View consistency of responses across channels": [[210, "view-consistency-of-responses-across-channels"]], "Plot standard fNIRS response image": [[210, "plot-standard-fnirs-response-image"]], "View topographic representation of activity": [[210, "view-topographic-representation-of-activity"]], "Compare tapping of left and right hands": [[210, "compare-tapping-of-left-and-right-hands"]], "Preprocessing optically pumped magnetometer (OPM) MEG data": [[211, "preprocessing-optically-pumped-magnetometer-opm-meg-data"]], "Examining raw data": [[211, "examining-raw-data"]], "Denoising: Regressing via reference sensors": [[211, "denoising-regressing-via-reference-sensors"]], "Denoising: Regressing via homogeneous field correction": [[211, "denoising-regressing-via-homogeneous-field-correction"]], "Comparing denoising methods": [[211, "comparing-denoising-methods"]], "Filtering nuisance signals": [[211, "filtering-nuisance-signals"]], "Generating an evoked response": [[211, "generating-an-evoked-response"]], "Working with eye tracker data in MNE-Python": [[212, "working-with-eye-tracker-data-in-mne-python"]], "Data loading": [[212, "data-loading"]], "Get stimulus events from DIN channel": [[212, "get-stimulus-events-from-din-channel"]], "Plot raw data": [[212, "plot-raw-data"]], "Plot average pupil response": [[212, "plot-average-pupil-response"]], "The Raw data structure: continuous data": [[215, "the-raw-data-structure-continuous-data"]], "Loading continuous data": [[215, "loading-continuous-data"]], "Datasets in MNE-Python": [[215, null]], "Querying the Raw object": [[215, "querying-the-raw-object"]], "Attributes vs. Methods": [[215, null]], "The Raw.info attribute": [[215, "the-raw-info-attribute"]], "Time, sample number, and sample index": [[215, "time-sample-number-and-sample-index"]], "Sample numbering in VectorView data": [[215, null]], "Modifying Raw objects": [[215, "modifying-raw-objects"]], "len(raw)": [[215, null]], "Long channel names": [[215, null]], "Extracting data from Raw objects": [[215, "extracting-data-from-raw-objects"]], "Extracting data by index": [[215, "extracting-data-by-index"]], "Extracting channels by name": [[215, "extracting-channels-by-name"]], "Extracting channels by type": [[215, "extracting-channels-by-type"]], "The Raw.get_data() method": [[215, "the-raw-get-data-method"]], "Summary of ways to extract data from Raw objects": [[215, "summary-of-ways-to-extract-data-from-raw-objects"]], "Exporting and saving Raw objects": [[215, "exporting-and-saving-raw-objects"]], "Working with events": [[216, "working-with-events"]], "Reading and writing events from/to a file": [[216, "reading-and-writing-events-from-to-a-file"]], "Subselecting and combining events": [[216, "subselecting-and-combining-events"]], "Including/excluding events": [[216, null]], "Mapping Event IDs to trial descriptors": [[216, "mapping-event-ids-to-trial-descriptors"]], "Plotting events": [[216, "plotting-events"]], "Plotting events and raw data together": [[216, "plotting-events-and-raw-data-together"]], "Making equally-spaced Events arrays": [[216, "making-equally-spaced-events-arrays"]], "Annotating continuous data": [[217, "annotating-continuous-data"]], "Creating annotations programmatically": [[217, "creating-annotations-programmatically"]], "Annotating Raw objects interactively": [[217, "annotating-raw-objects-interactively"]], "How annotations affect preprocessing and analysis": [[217, "how-annotations-affect-preprocessing-and-analysis"]], "Operations on Annotations objects": [[217, "operations-on-annotations-objects"]], "Reading and writing Annotations to/from a file": [[217, "reading-and-writing-annotations-to-from-a-file"]], "Built-in plotting methods for Raw objects": [[218, "built-in-plotting-methods-for-raw-objects"]], "Interactive data browsing with Raw.plot()": [[218, "interactive-data-browsing-with-raw-plot"]], "Plotting spectral density of continuous data": [[218, "plotting-spectral-density-of-continuous-data"]], "Plotting sensor locations from Raw objects": [[218, "plotting-sensor-locations-from-raw-objects"]], "Plotting projectors from Raw objects": [[218, "plotting-projectors-from-raw-objects"]], "Creating MNE-Python data structures from scratch": [[221, "creating-mne-python-data-structures-from-scratch"]], "Creating Info objects": [[221, "creating-info-objects"]], "Info objects": [[221, null]], "Info consistency": [[221, null]], "Creating Raw objects": [[221, "creating-raw-objects"]], "Units": [[221, null]], "Creating Epochs objects": [[221, "creating-epochs-objects"]], "Creating Evoked Objects": [[221, "creating-evoked-objects"]], "Corrupt known signal with point spread": [[222, "corrupt-known-signal-with-point-spread"]], "Load the MEG data": [[222, "load-the-meg-data"]], "Estimate the background noise covariance from the baseline period": [[222, "estimate-the-background-noise-covariance-from-the-baseline-period"]], "Generate sinusoids in two spatially distant labels": [[222, "generate-sinusoids-in-two-spatially-distant-labels"]], "Find the center vertices in source space of each label": [[222, "find-the-center-vertices-in-source-space-of-each-label"]], "Create source-space data with known signals": [[222, "create-source-space-data-with-known-signals"]], "Plot original signals": [[222, "plot-original-signals"]], "Simulate sensor-space signals": [[222, "simulate-sensor-space-signals"]], "Plot the point-spread of corrupted signal": [[222, "plot-the-point-spread-of-corrupted-signal"]], "Exercises": [[222, "exercises"], [231, "exercises"]], "DICS for power mapping": [[223, "dics-for-power-mapping"]], "Setup": [[223, "setup"]], "Data simulation": [[223, "data-simulation"]], "Power mapping": [[223, "power-mapping"]], "Statistical inference": [[226, "statistical-inference"]], "Hypothesis testing": [[226, "hypothesis-testing"]], "Null hypothesis": [[226, "null-hypothesis"]], "Parametric tests": [[226, "parametric-tests"]], "\u201cHat\u201d variance adjustment": [[226, "hat-variance-adjustment"], [226, "id3"]], "Non-parametric tests": [[226, "non-parametric-tests"]], "Multiple comparisons": [[226, "multiple-comparisons"]], "Bonferroni correction": [[226, "bonferroni-correction"]], "False discovery rate (FDR) correction": [[226, "false-discovery-rate-fdr-correction"]], "Non-parametric resampling test with a maximum statistic": [[226, "non-parametric-resampling-test-with-a-maximum-statistic"]], "Clustering": [[226, "clustering"]], "Effect size": [[226, null]], "Defining the adjacency matrix": [[226, "defining-the-adjacency-matrix"]], "Standard clustering": [[226, "standard-clustering"]], "Threshold-free cluster enhancement (TFCE)": [[226, "threshold-free-cluster-enhancement-tfce"]], "Visualize and compare methods": [[226, "visualize-and-compare-methods"]], "Statistical functions in MNE": [[226, "statistical-functions-in-mne"]], "Parametric methods provided by MNE": [[226, "parametric-methods-provided-by-mne"]], "Non-parametric methods": [[226, "non-parametric-methods"]], "Visualising statistical significance thresholds on EEG data": [[227, "visualising-statistical-significance-thresholds-on-eeg-data"]], "Non-parametric 1 sample cluster statistic on single trial power": [[228, "non-parametric-1-sample-cluster-statistic-on-single-trial-power"]], "Set parameters": [[228, "set-parameters"], [230, "set-parameters"], [231, "set-parameters"], [234, "set-parameters"], [235, "set-parameters"], [236, "set-parameters"]], "Define adjacency for statistics": [[228, "define-adjacency-for-statistics"]], "Compute statistic": [[228, "compute-statistic"], [229, "compute-statistic"], [234, "compute-statistic"], [235, "compute-statistic"]], "View time-frequency plots": [[228, "view-time-frequency-plots"], [229, "view-time-frequency-plots"]], "Non-parametric between conditions cluster statistic on single trial power": [[229, "non-parametric-between-conditions-cluster-statistic-on-single-trial-power"]], "Mass-univariate twoway repeated measures ANOVA on single trial power": [[230, "mass-univariate-twoway-repeated-measures-anova-on-single-trial-power"]], "Create TFR representations for all conditions": [[230, "create-tfr-representations-for-all-conditions"]], "Setup repeated measures ANOVA": [[230, "setup-repeated-measures-anova"]], "Sample data layout": [[230, "id1"]], "Account for multiple comparisons using FDR versus permutation clustering test": [[230, "account-for-multiple-comparisons-using-fdr-versus-permutation-clustering-test"]], "Spatiotemporal permutation F-test on full sensor data": [[231, "spatiotemporal-permutation-f-test-on-full-sensor-data"]], "Read epochs for the channel of interest": [[231, "read-epochs-for-the-channel-of-interest"]], "Find the FieldTrip neighbor definition to setup sensor adjacency": [[231, "find-the-fieldtrip-neighbor-definition-to-setup-sensor-adjacency"]], "Compute permutation statistic": [[231, "compute-permutation-statistic"]], "Visualize clusters": [[231, "visualize-clusters"]], "Permutation statistic for time-frequencies": [[231, "permutation-statistic-for-time-frequencies"]], "Permutation t-test on source data with spatio-temporal clustering": [[234, "permutation-t-test-on-source-data-with-spatio-temporal-clustering"]], "Read epochs for all channels, removing a bad one": [[234, "read-epochs-for-all-channels-removing-a-bad-one"], [236, "read-epochs-for-all-channels-removing-a-bad-one"]], "Transform to source space": [[234, "transform-to-source-space"], [236, "transform-to-source-space"]], "Transform to common cortical space": [[234, "transform-to-common-cortical-space"], [236, "transform-to-common-cortical-space"]], "Find adjacency matrix": [[234, "find-adjacency-matrix"]], "Selecting \u201csignificant\u201d clusters": [[234, "selecting-significant-clusters"]], "Visualize the clusters": [[234, "visualize-the-clusters"], [235, "visualize-the-clusters"], [236, "visualize-the-clusters"]], "2 samples permutation test on source data with spatio-temporal clustering": [[235, "samples-permutation-test-on-source-data-with-spatio-temporal-clustering"]], "Repeated measures ANOVA on source data with spatio-temporal clustering": [[236, "repeated-measures-anova-on-source-data-with-spatio-temporal-clustering"]], "Prepare function for arbitrary contrast": [[236, "prepare-function-for-arbitrary-contrast"]], "Compute clustering statistic": [[236, "compute-clustering-statistic"]], "The Spectrum and EpochsSpectrum classes: frequency-domain data": [[239, "the-spectrum-and-epochsspectrum-classes-frequency-domain-data"]], "Visualizing Spectrum objects": [[239, "visualizing-spectrum-objects"]], "Migrating legacy code": [[239, "migrating-legacy-code"]], "Quick reference for common Spectral class actions": [[239, "id4"]], "Frequency and time-frequency sensor analysis": [[240, "frequency-and-time-frequency-sensor-analysis"]], "Frequency analysis": [[240, "frequency-analysis"], [241, "frequency-analysis"]], "Time-frequency analysis: power and inter-trial coherence": [[240, "time-frequency-analysis-power-and-inter-trial-coherence"]], "Inspect power": [[240, "inspect-power"]], "Joint Plot": [[240, "joint-plot"]], "Inspect ITC": [[240, "inspect-itc"]], "Frequency-tagging: Basic analysis of an SSVEP/vSSR dataset": [[241, "frequency-tagging-basic-analysis-of-an-ssvep-vssr-dataset"]], "Data preprocessing": [[241, "data-preprocessing"]], "Calculate power spectral density (PSD)": [[241, "calculate-power-spectral-density-psd"]], "Calculate signal to noise ratio (SNR)": [[241, "calculate-signal-to-noise-ratio-snr"]], "Plot PSD and SNR spectra": [[241, "plot-psd-and-snr-spectra"]], "Extract SNR values at the stimulation frequency": [[241, "extract-snr-values-at-the-stimulation-frequency"]], "Get index for the stimulation frequency (12 Hz)": [[241, "get-index-for-the-stimulation-frequency-12-hz"]], "Get indices for the different trial types": [[241, "get-indices-for-the-different-trial-types"]], "Get indices of EEG channels forming the ROI": [[241, "get-indices-of-eeg-channels-forming-the-roi"]], "Apply the subset, and check the result": [[241, "apply-the-subset-and-check-the-result"]], "Topography of the vSSR": [[241, "topography-of-the-vssr"]], "Statistical separation of 12 Hz and 15 Hz vSSR": [[241, "statistical-separation-of-12-hz-and-15-hz-vssr"]], "Debriefing": [[241, "debriefing"]], "Bonus exercises": [[241, "bonus-exercises"]], "Effect of trial duration on SNR": [[241, "effect-of-trial-duration-on-snr"]], "Time resolved SNR": [[241, "time-resolved-snr"]], "General bibliography": [[244, "general-bibliography"]], "Papers citing MNE-Python": [[245, "papers-citing-mne-python"]], "Connectivity Estimation": [[246, "connectivity-estimation"]], "Covariance computation": [[247, "covariance-computation"]], "Creating data objects from arrays": [[248, "creating-data-objects-from-arrays"]], "Datasets": [[249, "datasets"]], "Decoding": [[250, "decoding"]], "Events": [[251, "events"]], "Exporting": [[252, "exporting"]], "File I/O": [[253, "file-i-o"]], "Forward Modeling": [[254, "forward-modeling"]], "Funding and other support": [[255, "funding-and-other-support"]], "Institutional partners": [[255, "institutional-partners"]], "Current partners": [[255, "current-partners"], [873, "current-partners"]], "Former partners": [[255, "former-partners"], [873, "former-partners"]], "Command line tools using Python": [[256, "command-line-tools-using-python"]], "mne anonymize": [[256, "mne-anonymize"]], "Anonymize raw fif file.": [[256, "anonymize-raw-fif-file"]], "Options": [[256, "options"], [256, "id3"], [256, "id6"], [256, "id9"], [256, "id12"], [256, "id15"], [256, "id18"], [256, "id21"], [256, "id24"], [256, "id28"], [256, "id31"], [256, "id34"], [256, "id37"], [256, "id40"], [256, "id43"], [256, "id46"], [256, "id49"], [256, "id52"], [256, "id55"], [256, "id58"], [256, "id61"], [256, "id64"], [256, "id67"]], "mne browse_raw": [[256, "mne-browse-raw"]], "Browse raw data.": [[256, "browse-raw-data"]], "mne bti2fiff": [[256, "mne-bti2fiff"]], "Import BTi / 4D MagnesWH3600 data to fif file.": [[256, "import-bti-4d-magneswh3600-data-to-fif-file"]], "Notes": [[256, "notes"], [256, "id26"]], "mne clean_eog_ecg": [[256, "mne-clean-eog-ecg"]], "Clean a raw file from EOG and ECG artifacts with PCA (ie SSP).": [[256, "clean-a-raw-file-from-eog-and-ecg-artifacts-with-pca-ie-ssp"]], "mne compare_fiff": [[256, "mne-compare-fiff"]], "Compare FIFF files.": [[256, "compare-fiff-files"]], "mne compute_proj_ecg": [[256, "mne-compute-proj-ecg"]], "Compute SSP/PCA projections for ECG artifacts.": [[256, "compute-ssp-pca-projections-for-ecg-artifacts"]], "mne compute_proj_eog": [[256, "mne-compute-proj-eog"]], "Compute SSP/PCA projections for EOG artifacts.": [[256, "compute-ssp-pca-projections-for-eog-artifacts"]], "mne coreg": [[256, "mne-coreg"]], "Open the coregistration GUI.": [[256, "open-the-coregistration-gui"]], "mne flash_bem": [[256, "mne-flash-bem"]], "Create 3-layer BEM model from Flash MRI images.": [[256, "create-3-layer-bem-model-from-flash-mri-images"]], "mne freeview_bem_surfaces": [[256, "mne-freeview-bem-surfaces"]], "View the 3-Layers BEM model using Freeview.": [[256, "view-the-3-layers-bem-model-using-freeview"]], "mne kit2fiff": [[256, "mne-kit2fiff"]], "Import KIT / NYU data to fif file.": [[256, "import-kit-nyu-data-to-fif-file"]], "mne make_scalp_surfaces": [[256, "mne-make-scalp-surfaces"]], "Create high-resolution head surfaces for coordinate alignment.": [[256, "create-high-resolution-head-surfaces-for-coordinate-alignment"]], "mne maxfilter": [[256, "mne-maxfilter"]], "Apply MaxFilter.": [[256, "apply-maxfilter"]], "mne prepare_bem_model": [[256, "mne-prepare-bem-model"]], "Create a BEM solution using the linear collocation approach.": [[256, "create-a-bem-solution-using-the-linear-collocation-approach"]], "mne report": [[256, "mne-report"]], "Create mne report for a folder.": [[256, "create-mne-report-for-a-folder"]], "mne setup_forward_model": [[256, "mne-setup-forward-model"]], "Create a BEM model for a subject.": [[256, "create-a-bem-model-for-a-subject"]], "mne setup_source_space": [[256, "mne-setup-source-space"]], "Set up bilateral hemisphere surface-based source space with subsampling.": [[256, "set-up-bilateral-hemisphere-surface-based-source-space-with-subsampling"]], "mne show_fiff": [[256, "mne-show-fiff"]], "Show the contents of a FIFF file.": [[256, "show-the-contents-of-a-fiff-file"]], "mne show_info": [[256, "mne-show-info"]], "Show measurement info from .fif file.": [[256, "show-measurement-info-from-fif-file"]], "mne surf2bem": [[256, "mne-surf2bem"]], "Convert surface to BEM FIF file.": [[256, "convert-surface-to-bem-fif-file"]], "mne sys_info": [[256, "mne-sys-info"]], "Show system information.": [[256, "show-system-information"]], "mne watershed_bem": [[256, "mne-watershed-bem"]], "Create BEM surfaces using the watershed algorithm included with FreeSurfer.": [[256, "create-bem-surfaces-using-the-watershed-algorithm-included-with-freesurfer"]], "mne what": [[256, "mne-what"]], "Check type of FIF file.": [[256, "check-type-of-fif-file"]], "mne.AcqParserFIF": [[257, "mne-acqparserfif"]], "mne.Annotations": [[258, "mne-annotations"]], "Examples using mne.Annotations": [[258, "examples-using-mne-annotations"]], "mne.BaseEpochs": [[259, "mne-baseepochs"]], "mne.BiHemiLabel": [[260, "mne-bihemilabel"]], "mne.Covariance": [[261, "mne-covariance"]], "Examples using mne.Covariance": [[261, "examples-using-mne-covariance"]], "mne.Dipole": [[262, "mne-dipole"]], "Examples using mne.Dipole": [[262, "examples-using-mne-dipole"]], "mne.DipoleFixed": [[263, "mne-dipolefixed"]], "Examples using mne.DipoleFixed": [[263, "examples-using-mne-dipolefixed"]], "mne.Epochs": [[264, "mne-epochs"]], "Examples using mne.Epochs": [[264, "examples-using-mne-epochs"]], "mne.EpochsArray": [[265, "mne-epochsarray"]], "Examples using mne.EpochsArray": [[265, "examples-using-mne-epochsarray"]], "mne.Evoked": [[266, "mne-evoked"]], "Examples using mne.Evoked": [[266, "examples-using-mne-evoked"]], "mne.EvokedArray": [[267, "mne-evokedarray"]], "Examples using mne.EvokedArray": [[267, "examples-using-mne-evokedarray"]], "mne.Forward": [[268, "mne-forward"]], "Examples using mne.Forward": [[268, "examples-using-mne-forward"]], "mne.Info": [[269, "mne-info"]], "Examples using mne.Info": [[269, "examples-using-mne-info"]], "mne.Label": [[270, "mne-label"]], "Examples using mne.Label": [[270, "examples-using-mne-label"]], "mne.MixedSourceEstimate": [[271, "mne-mixedsourceestimate"]], "Examples using mne.MixedSourceEstimate": [[271, "examples-using-mne-mixedsourceestimate"]], "mne.MixedVectorSourceEstimate": [[272, "mne-mixedvectorsourceestimate"]], "Examples using mne.MixedVectorSourceEstimate": [[272, "examples-using-mne-mixedvectorsourceestimate"]], "mne.Projection": [[273, "mne-projection"]], "Examples using mne.Projection": [[273, "examples-using-mne-projection"]], "mne.Report": [[274, "mne-report"]], "Examples using mne.Report": [[274, "examples-using-mne-report"]], "mne.SourceEstimate": [[275, "mne-sourceestimate"]], "Examples using mne.SourceEstimate": [[275, "examples-using-mne-sourceestimate"]], "mne.SourceMorph": [[276, "mne-sourcemorph"]], "Examples using mne.SourceMorph": [[276, "examples-using-mne-sourcemorph"]], "mne.SourceSpaces": [[277, "mne-sourcespaces"]], "Examples using mne.SourceSpaces": [[277, "examples-using-mne-sourcespaces"]], "mne.VectorSourceEstimate": [[278, "mne-vectorsourceestimate"]], "Examples using mne.VectorSourceEstimate": [[278, "examples-using-mne-vectorsourceestimate"]], "mne.VolSourceEstimate": [[279, "mne-volsourceestimate"]], "Examples using mne.VolSourceEstimate": [[279, "examples-using-mne-volsourceestimate"]], "mne.VolVectorSourceEstimate": [[280, "mne-volvectorsourceestimate"]], "mne.add_reference_channels": [[281, "mne-add-reference-channels"]], "Examples using mne.add_reference_channels": [[281, "examples-using-mne-add-reference-channels"]], "mne.add_source_space_distances": [[282, "mne-add-source-space-distances"]], "mne.annotations_from_events": [[283, "mne-annotations-from-events"]], "Examples using mne.annotations_from_events": [[283, "examples-using-mne-annotations-from-events"]], "mne.apply_forward": [[284, "mne-apply-forward"]], "mne.apply_forward_raw": [[285, "mne-apply-forward-raw"]], "mne.average_forward_solutions": [[286, "mne-average-forward-solutions"]], "mne.baseline.rescale": [[287, "mne-baseline-rescale"]], "Examples using mne.baseline.rescale": [[287, "examples-using-mne-baseline-rescale"]], "mne.beamformer.Beamformer": [[288, "mne-beamformer-beamformer"]], "Examples using mne.beamformer.Beamformer": [[288, "examples-using-mne-beamformer-beamformer"]], "mne.beamformer.apply_dics": [[289, "mne-beamformer-apply-dics"]], "mne.beamformer.apply_dics_csd": [[290, "mne-beamformer-apply-dics-csd"]], "Examples using mne.beamformer.apply_dics_csd": [[290, "examples-using-mne-beamformer-apply-dics-csd"]], "mne.beamformer.apply_dics_epochs": [[291, "mne-beamformer-apply-dics-epochs"]], "mne.beamformer.apply_dics_tfr_epochs": [[292, "mne-beamformer-apply-dics-tfr-epochs"]], "Examples using mne.beamformer.apply_dics_tfr_epochs": [[292, "examples-using-mne-beamformer-apply-dics-tfr-epochs"]], "mne.beamformer.apply_lcmv": [[293, "mne-beamformer-apply-lcmv"]], "Examples using mne.beamformer.apply_lcmv": [[293, "examples-using-mne-beamformer-apply-lcmv"]], "mne.beamformer.apply_lcmv_cov": [[294, "mne-beamformer-apply-lcmv-cov"]], "Examples using mne.beamformer.apply_lcmv_cov": [[294, "examples-using-mne-beamformer-apply-lcmv-cov"]], "mne.beamformer.apply_lcmv_epochs": [[295, "mne-beamformer-apply-lcmv-epochs"]], "mne.beamformer.apply_lcmv_raw": [[296, "mne-beamformer-apply-lcmv-raw"]], "mne.beamformer.make_dics": [[297, "mne-beamformer-make-dics"]], "Examples using mne.beamformer.make_dics": [[297, "examples-using-mne-beamformer-make-dics"]], "mne.beamformer.make_lcmv": [[298, "mne-beamformer-make-lcmv"]], "Examples using mne.beamformer.make_lcmv": [[298, "examples-using-mne-beamformer-make-lcmv"]], "mne.beamformer.make_lcmv_resolution_matrix": [[299, "mne-beamformer-make-lcmv-resolution-matrix"]], "Examples using mne.beamformer.make_lcmv_resolution_matrix": [[299, "examples-using-mne-beamformer-make-lcmv-resolution-matrix"]], "mne.beamformer.rap_music": [[300, "mne-beamformer-rap-music"]], "Examples using mne.beamformer.rap_music": [[300, "examples-using-mne-beamformer-rap-music"]], "mne.beamformer.read_beamformer": [[301, "mne-beamformer-read-beamformer"]], "mne.bem.ConductorModel": [[302, "mne-bem-conductormodel"]], "Examples using mne.bem.ConductorModel": [[302, "examples-using-mne-bem-conductormodel"]], "mne.bem.convert_flash_mris": [[303, "mne-bem-convert-flash-mris"]], "mne.bem.distance_to_bem": [[304, "mne-bem-distance-to-bem"]], "mne.bem.fit_sphere_to_headshape": [[305, "mne-bem-fit-sphere-to-headshape"]], "mne.bem.get_fitting_dig": [[306, "mne-bem-get-fitting-dig"]], "mne.bem.make_flash_bem": [[307, "mne-bem-make-flash-bem"]], "mne.bem.make_scalp_surfaces": [[308, "mne-bem-make-scalp-surfaces"]], "mne.bem.make_watershed_bem": [[309, "mne-bem-make-watershed-bem"]], "mne.channel_indices_by_type": [[310, "mne-channel-indices-by-type"]], "Examples using mne.channel_indices_by_type": [[310, "examples-using-mne-channel-indices-by-type"]], "mne.channel_type": [[311, "mne-channel-type"]], "Examples using mne.channel_type": [[311, "examples-using-mne-channel-type"]], "mne.channels.DigMontage": [[312, "mne-channels-digmontage"]], "Examples using mne.channels.DigMontage": [[312, "examples-using-mne-channels-digmontage"]], "mne.channels.Layout": [[313, "mne-channels-layout"]], "Examples using mne.channels.Layout": [[313, "examples-using-mne-channels-layout"]], "mne.channels.combine_channels": [[314, "mne-channels-combine-channels"]], "Examples using mne.channels.combine_channels": [[314, "examples-using-mne-channels-combine-channels"]], "mne.channels.compute_dev_head_t": [[315, "mne-channels-compute-dev-head-t"]], "mne.channels.compute_native_head_t": [[316, "mne-channels-compute-native-head-t"]], "Examples using mne.channels.compute_native_head_t": [[316, "examples-using-mne-channels-compute-native-head-t"]], "mne.channels.equalize_channels": [[317, "mne-channels-equalize-channels"]], "mne.channels.find_ch_adjacency": [[318, "mne-channels-find-ch-adjacency"]], "Examples using mne.channels.find_ch_adjacency": [[318, "examples-using-mne-channels-find-ch-adjacency"]], "mne.channels.find_layout": [[319, "mne-channels-find-layout"]], "mne.channels.fix_mag_coil_types": [[320, "mne-channels-fix-mag-coil-types"]], "mne.channels.generate_2d_layout": [[321, "mne-channels-generate-2d-layout"]], "mne.channels.get_builtin_ch_adjacencies": [[322, "mne-channels-get-builtin-ch-adjacencies"]], "Examples using mne.channels.get_builtin_ch_adjacencies": [[322, "examples-using-mne-channels-get-builtin-ch-adjacencies"]], "mne.channels.get_builtin_montages": [[323, "mne-channels-get-builtin-montages"]], "Examples using mne.channels.get_builtin_montages": [[323, "examples-using-mne-channels-get-builtin-montages"]], "mne.channels.make_1020_channel_selections": [[324, "mne-channels-make-1020-channel-selections"]], "Examples using mne.channels.make_1020_channel_selections": [[324, "examples-using-mne-channels-make-1020-channel-selections"]], "mne.channels.make_dig_montage": [[325, "mne-channels-make-dig-montage"]], "mne.channels.make_eeg_layout": [[326, "mne-channels-make-eeg-layout"]], "Examples using mne.channels.make_eeg_layout": [[326, "examples-using-mne-channels-make-eeg-layout"]], "mne.channels.make_grid_layout": [[327, "mne-channels-make-grid-layout"]], "mne.channels.make_standard_montage": [[328, "mne-channels-make-standard-montage"]], "Examples using mne.channels.make_standard_montage": [[328, "examples-using-mne-channels-make-standard-montage"]], "mne.channels.read_ch_adjacency": [[329, "mne-channels-read-ch-adjacency"]], "mne.channels.read_custom_montage": [[330, "mne-channels-read-custom-montage"]], "Examples using mne.channels.read_custom_montage": [[330, "examples-using-mne-channels-read-custom-montage"]], "mne.channels.read_dig_captrak": [[331, "mne-channels-read-dig-captrak"]], "mne.channels.read_dig_dat": [[332, "mne-channels-read-dig-dat"]], "mne.channels.read_dig_egi": [[333, "mne-channels-read-dig-egi"]], "mne.channels.read_dig_fif": [[334, "mne-channels-read-dig-fif"]], "Examples using mne.channels.read_dig_fif": [[334, "examples-using-mne-channels-read-dig-fif"]], "mne.channels.read_dig_hpts": [[335, "mne-channels-read-dig-hpts"]], "mne.channels.read_dig_localite": [[336, "mne-channels-read-dig-localite"]], "mne.channels.read_dig_polhemus_isotrak": [[337, "mne-channels-read-dig-polhemus-isotrak"]], "mne.channels.read_layout": [[338, "mne-channels-read-layout"]], "Examples using mne.channels.read_layout": [[338, "examples-using-mne-channels-read-layout"]], "mne.channels.read_polhemus_fastscan": [[339, "mne-channels-read-polhemus-fastscan"]], "mne.channels.rename_channels": [[340, "mne-channels-rename-channels"]], "mne.chpi.compute_chpi_amplitudes": [[341, "mne-chpi-compute-chpi-amplitudes"]], "Examples using mne.chpi.compute_chpi_amplitudes": [[341, "examples-using-mne-chpi-compute-chpi-amplitudes"]], "mne.chpi.compute_chpi_locs": [[342, "mne-chpi-compute-chpi-locs"]], "Examples using mne.chpi.compute_chpi_locs": [[342, "examples-using-mne-chpi-compute-chpi-locs"]], "mne.chpi.compute_chpi_snr": [[343, "mne-chpi-compute-chpi-snr"]], "Examples using mne.chpi.compute_chpi_snr": [[343, "examples-using-mne-chpi-compute-chpi-snr"]], "mne.chpi.compute_head_pos": [[344, "mne-chpi-compute-head-pos"]], "Examples using mne.chpi.compute_head_pos": [[344, "examples-using-mne-chpi-compute-head-pos"]], "mne.chpi.extract_chpi_locs_ctf": [[345, "mne-chpi-extract-chpi-locs-ctf"]], "Examples using mne.chpi.extract_chpi_locs_ctf": [[345, "examples-using-mne-chpi-extract-chpi-locs-ctf"]], "mne.chpi.extract_chpi_locs_kit": [[346, "mne-chpi-extract-chpi-locs-kit"]], "mne.chpi.filter_chpi": [[347, "mne-chpi-filter-chpi"]], "Examples using mne.chpi.filter_chpi": [[347, "examples-using-mne-chpi-filter-chpi"]], "mne.chpi.get_active_chpi": [[348, "mne-chpi-get-active-chpi"]], "Examples using mne.chpi.get_active_chpi": [[348, "examples-using-mne-chpi-get-active-chpi"]], "mne.chpi.get_chpi_info": [[349, "mne-chpi-get-chpi-info"]], "Examples using mne.chpi.get_chpi_info": [[349, "examples-using-mne-chpi-get-chpi-info"]], "mne.chpi.head_pos_to_trans_rot_t": [[350, "mne-chpi-head-pos-to-trans-rot-t"]], "mne.chpi.read_head_pos": [[351, "mne-chpi-read-head-pos"]], "Examples using mne.chpi.read_head_pos": [[351, "examples-using-mne-chpi-read-head-pos"]], "mne.chpi.write_head_pos": [[352, "mne-chpi-write-head-pos"]], "Examples using mne.chpi.write_head_pos": [[352, "examples-using-mne-chpi-write-head-pos"]], "mne.combine_evoked": [[353, "mne-combine-evoked"]], "Examples using mne.combine_evoked": [[353, "examples-using-mne-combine-evoked"]], "mne.compute_covariance": [[354, "mne-compute-covariance"]], "Examples using mne.compute_covariance": [[354, "examples-using-mne-compute-covariance"]], "mne.compute_proj_epochs": [[355, "mne-compute-proj-epochs"]], "Examples using mne.compute_proj_epochs": [[355, "examples-using-mne-compute-proj-epochs"]], "mne.compute_proj_evoked": [[356, "mne-compute-proj-evoked"]], "Examples using mne.compute_proj_evoked": [[356, "examples-using-mne-compute-proj-evoked"]], "mne.compute_proj_raw": [[357, "mne-compute-proj-raw"]], "Examples using mne.compute_proj_raw": [[357, "examples-using-mne-compute-proj-raw"]], "mne.compute_rank": [[358, "mne-compute-rank"]], "Examples using mne.compute_rank": [[358, "examples-using-mne-compute-rank"]], "mne.compute_raw_covariance": [[359, "mne-compute-raw-covariance"]], "Examples using mne.compute_raw_covariance": [[359, "examples-using-mne-compute-raw-covariance"]], "mne.compute_source_morph": [[360, "mne-compute-source-morph"]], "Examples using mne.compute_source_morph": [[360, "examples-using-mne-compute-source-morph"]], "mne.concatenate_epochs": [[361, "mne-concatenate-epochs"]], "Examples using mne.concatenate_epochs": [[361, "examples-using-mne-concatenate-epochs"]], "mne.concatenate_events": [[362, "mne-concatenate-events"]], "mne.concatenate_raws": [[363, "mne-concatenate-raws"]], "Examples using mne.concatenate_raws": [[363, "examples-using-mne-concatenate-raws"]], "mne.convert_forward_solution": [[364, "mne-convert-forward-solution"]], "Examples using mne.convert_forward_solution": [[364, "examples-using-mne-convert-forward-solution"]], "mne.coreg.Coregistration": [[365, "mne-coreg-coregistration"]], "Examples using mne.coreg.Coregistration": [[365, "examples-using-mne-coreg-coregistration"]], "mne.coreg.estimate_head_mri_t": [[366, "mne-coreg-estimate-head-mri-t"]], "Examples using mne.coreg.estimate_head_mri_t": [[366, "examples-using-mne-coreg-estimate-head-mri-t"]], "mne.coreg.get_mni_fiducials": [[367, "mne-coreg-get-mni-fiducials"]], "Examples using mne.coreg.get_mni_fiducials": [[367, "examples-using-mne-coreg-get-mni-fiducials"]], "mne.count_events": [[368, "mne-count-events"]], "mne.cov.compute_whitener": [[369, "mne-cov-compute-whitener"]], "mne.cov.prepare_noise_cov": [[370, "mne-cov-prepare-noise-cov"]], "mne.cov.regularize": [[371, "mne-cov-regularize"]], "Examples using mne.cov.regularize": [[371, "examples-using-mne-cov-regularize"]], "mne.create_default_subject": [[372, "mne-create-default-subject"]], "mne.create_info": [[373, "mne-create-info"]], "Examples using mne.create_info": [[373, "examples-using-mne-create-info"]], "mne.cuda.get_cuda_memory": [[374, "mne-cuda-get-cuda-memory"]], "mne.cuda.init_cuda": [[375, "mne-cuda-init-cuda"]], "mne.cuda.set_cuda_device": [[376, "mne-cuda-set-cuda-device"]], "mne.datasets.brainstorm.bst_auditory.data_path": [[377, "mne-datasets-brainstorm-bst-auditory-data-path"]], "mne.datasets.brainstorm.bst_raw.data_path": [[378, "mne-datasets-brainstorm-bst-raw-data-path"]], "mne.datasets.brainstorm.bst_resting.data_path": [[379, "mne-datasets-brainstorm-bst-resting-data-path"]], "mne.datasets.eegbci.load_data": [[380, "mne-datasets-eegbci-load-data"]], "mne.datasets.eegbci.standardize": [[381, "mne-datasets-eegbci-standardize"]], "mne.datasets.epilepsy_ecog.data_path": [[382, "mne-datasets-epilepsy-ecog-data-path"]], "Examples using mne.datasets.epilepsy_ecog.data_path": [[382, "examples-using-mne-datasets-epilepsy-ecog-data-path"]], "mne.datasets.erp_core.data_path": [[383, "mne-datasets-erp-core-data-path"]], "mne.datasets.eyelink.data_path": [[384, "mne-datasets-eyelink-data-path"]], "mne.datasets.fetch_aparc_sub_parcellation": [[385, "mne-datasets-fetch-aparc-sub-parcellation"]], "mne.datasets.fetch_dataset": [[386, "mne-datasets-fetch-dataset"]], "mne.datasets.fetch_fsaverage": [[387, "mne-datasets-fetch-fsaverage"]], "mne.datasets.fetch_hcp_mmp_parcellation": [[388, "mne-datasets-fetch-hcp-mmp-parcellation"]], "mne.datasets.fetch_infant_template": [[389, "mne-datasets-fetch-infant-template"]], "Examples using mne.datasets.fetch_infant_template": [[389, "examples-using-mne-datasets-fetch-infant-template"]], "mne.datasets.fetch_phantom": [[390, "mne-datasets-fetch-phantom"]], "mne.datasets.fnirs_motor.data_path": [[391, "mne-datasets-fnirs-motor-data-path"]], "mne.datasets.has_dataset": [[392, "mne-datasets-has-dataset"]], "mne.datasets.hf_sef.data_path": [[393, "mne-datasets-hf-sef-data-path"]], "mne.datasets.kiloword.data_path": [[394, "mne-datasets-kiloword-data-path"]], "mne.datasets.limo.load_data": [[395, "mne-datasets-limo-load-data"]], "mne.datasets.misc.data_path": [[396, "mne-datasets-misc-data-path"]], "mne.datasets.mtrf.data_path": [[397, "mne-datasets-mtrf-data-path"]], "mne.datasets.multimodal.data_path": [[398, "mne-datasets-multimodal-data-path"]], "mne.datasets.opm.data_path": [[399, "mne-datasets-opm-data-path"]], "mne.datasets.phantom_4dbti.data_path": [[400, "mne-datasets-phantom-4dbti-data-path"]], "mne.datasets.refmeg_noise.data_path": [[401, "mne-datasets-refmeg-noise-data-path"]], "mne.datasets.sample.data_path": [[402, "mne-datasets-sample-data-path"]], "Examples using mne.datasets.sample.data_path": [[402, "examples-using-mne-datasets-sample-data-path"]], "mne.datasets.sleep_physionet.age.fetch_data": [[403, "mne-datasets-sleep-physionet-age-fetch-data"]], "Examples using mne.datasets.sleep_physionet.age.fetch_data": [[403, "examples-using-mne-datasets-sleep-physionet-age-fetch-data"]], "mne.datasets.sleep_physionet.temazepam.fetch_data": [[404, "mne-datasets-sleep-physionet-temazepam-fetch-data"]], "mne.datasets.somato.data_path": [[405, "mne-datasets-somato-data-path"]], "mne.datasets.spm_face.data_path": [[406, "mne-datasets-spm-face-data-path"]], "mne.datasets.ssvep.data_path": [[407, "mne-datasets-ssvep-data-path"]], "mne.datasets.ucl_opm_auditory.data_path": [[408, "mne-datasets-ucl-opm-auditory-data-path"]], "mne.datasets.visual_92_categories.data_path": [[409, "mne-datasets-visual-92-categories-data-path"]], "mne.decimate_surface": [[410, "mne-decimate-surface"]], "mne.decoding.CSP": [[411, "mne-decoding-csp"]], "Examples using mne.decoding.CSP": [[411, "examples-using-mne-decoding-csp"]], "mne.decoding.EMS": [[412, "mne-decoding-ems"]], "Examples using mne.decoding.EMS": [[412, "examples-using-mne-decoding-ems"]], "mne.decoding.FilterEstimator": [[413, "mne-decoding-filterestimator"]], "mne.decoding.GeneralizingEstimator": [[414, "mne-decoding-generalizingestimator"]], "Examples using mne.decoding.GeneralizingEstimator": [[414, "examples-using-mne-decoding-generalizingestimator"]], "mne.decoding.LinearModel": [[415, "mne-decoding-linearmodel"]], "Examples using mne.decoding.LinearModel": [[415, "examples-using-mne-decoding-linearmodel"]], "mne.decoding.PSDEstimator": [[416, "mne-decoding-psdestimator"]], "mne.decoding.ReceptiveField": [[417, "mne-decoding-receptivefield"]], "Examples using mne.decoding.ReceptiveField": [[417, "examples-using-mne-decoding-receptivefield"]], "mne.decoding.SPoC": [[418, "mne-decoding-spoc"]], "Examples using mne.decoding.SPoC": [[418, "examples-using-mne-decoding-spoc"]], "mne.decoding.SSD": [[419, "mne-decoding-ssd"]], "Examples using mne.decoding.SSD": [[419, "examples-using-mne-decoding-ssd"]], "mne.decoding.Scaler": [[420, "mne-decoding-scaler"]], "Examples using mne.decoding.Scaler": [[420, "examples-using-mne-decoding-scaler"]], "mne.decoding.SlidingEstimator": [[421, "mne-decoding-slidingestimator"]], "Examples using mne.decoding.SlidingEstimator": [[421, "examples-using-mne-decoding-slidingestimator"]], "mne.decoding.TemporalFilter": [[422, "mne-decoding-temporalfilter"]], "mne.decoding.TimeDelayingRidge": [[423, "mne-decoding-timedelayingridge"]], "Examples using mne.decoding.TimeDelayingRidge": [[423, "examples-using-mne-decoding-timedelayingridge"]], "mne.decoding.TimeFrequency": [[424, "mne-decoding-timefrequency"]], "mne.decoding.UnsupervisedSpatialFilter": [[425, "mne-decoding-unsupervisedspatialfilter"]], "Examples using mne.decoding.UnsupervisedSpatialFilter": [[425, "examples-using-mne-decoding-unsupervisedspatialfilter"]], "mne.decoding.Vectorizer": [[426, "mne-decoding-vectorizer"]], "Examples using mne.decoding.Vectorizer": [[426, "examples-using-mne-decoding-vectorizer"]], "mne.decoding.compute_ems": [[427, "mne-decoding-compute-ems"]], "Examples using mne.decoding.compute_ems": [[427, "examples-using-mne-decoding-compute-ems"]], "mne.decoding.cross_val_multiscore": [[428, "mne-decoding-cross-val-multiscore"]], "Examples using mne.decoding.cross_val_multiscore": [[428, "examples-using-mne-decoding-cross-val-multiscore"]], "mne.decoding.get_coef": [[429, "mne-decoding-get-coef"]], "Examples using mne.decoding.get_coef": [[429, "examples-using-mne-decoding-get-coef"]], "mne.dig_mri_distances": [[430, "mne-dig-mri-distances"]], "Examples using mne.dig_mri_distances": [[430, "examples-using-mne-dig-mri-distances"]], "mne.dipole.get_phantom_dipoles": [[431, "mne-dipole-get-phantom-dipoles"]], "Examples using mne.dipole.get_phantom_dipoles": [[431, "examples-using-mne-dipole-get-phantom-dipoles"]], "mne.epochs.average_movements": [[432, "mne-epochs-average-movements"]], "Examples using mne.epochs.average_movements": [[432, "examples-using-mne-epochs-average-movements"]], "mne.epochs.combine_event_ids": [[433, "mne-epochs-combine-event-ids"]], "mne.epochs.equalize_epoch_counts": [[434, "mne-epochs-equalize-epoch-counts"]], "Examples using mne.epochs.equalize_epoch_counts": [[434, "examples-using-mne-epochs-equalize-epoch-counts"]], "mne.epochs.make_metadata": [[435, "mne-epochs-make-metadata"]], "Examples using mne.epochs.make_metadata": [[435, "examples-using-mne-epochs-make-metadata"]], "mne.equalize_channels": [[436, "mne-equalize-channels"]], "mne.event.define_target_events": [[437, "mne-event-define-target-events"]], "Examples using mne.event.define_target_events": [[437, "examples-using-mne-event-define-target-events"]], "mne.event.match_event_names": [[438, "mne-event-match-event-names"]], "mne.event.shift_time_events": [[439, "mne-event-shift-time-events"]], "mne.events_from_annotations": [[440, "mne-events-from-annotations"]], "Examples using mne.events_from_annotations": [[440, "examples-using-mne-events-from-annotations"]], "mne.export.export_epochs": [[441, "mne-export-export-epochs"]], "mne.export.export_evokeds": [[442, "mne-export-export-evokeds"]], "mne.export.export_evokeds_mff": [[443, "mne-export-export-evokeds-mff"]], "mne.export.export_raw": [[444, "mne-export-export-raw"]], "mne.extract_label_time_course": [[445, "mne-extract-label-time-course"]], "Examples using mne.extract_label_time_course": [[445, "examples-using-mne-extract-label-time-course"]], "mne.filter.construct_iir_filter": [[446, "mne-filter-construct-iir-filter"]], "Examples using mne.filter.construct_iir_filter": [[446, "examples-using-mne-filter-construct-iir-filter"]], "mne.filter.create_filter": [[447, "mne-filter-create-filter"]], "Examples using mne.filter.create_filter": [[447, "examples-using-mne-filter-create-filter"]], "mne.filter.estimate_ringing_samples": [[448, "mne-filter-estimate-ringing-samples"]], "mne.filter.filter_data": [[449, "mne-filter-filter-data"]], "mne.filter.notch_filter": [[450, "mne-filter-notch-filter"]], "mne.filter.resample": [[451, "mne-filter-resample"]], "Examples using mne.filter.resample": [[451, "examples-using-mne-filter-resample"]], "mne.find_events": [[452, "mne-find-events"]], "Examples using mne.find_events": [[452, "examples-using-mne-find-events"]], "mne.find_stim_steps": [[453, "mne-find-stim-steps"]], "mne.fit_dipole": [[454, "mne-fit-dipole"]], "Examples using mne.fit_dipole": [[454, "examples-using-mne-fit-dipole"]], "mne.forward.compute_depth_prior": [[455, "mne-forward-compute-depth-prior"]], "mne.forward.compute_orient_prior": [[456, "mne-forward-compute-orient-prior"]], "mne.forward.restrict_forward_to_label": [[457, "mne-forward-restrict-forward-to-label"]], "mne.forward.restrict_forward_to_stc": [[458, "mne-forward-restrict-forward-to-stc"]], "mne.get_config": [[459, "mne-get-config"]], "Examples using mne.get_config": [[459, "examples-using-mne-get-config"]], "mne.get_config_path": [[460, "mne-get-config-path"]], "Examples using mne.get_config_path": [[460, "examples-using-mne-get-config-path"]], "mne.get_head_surf": [[461, "mne-get-head-surf"]], "mne.get_meg_helmet_surf": [[462, "mne-get-meg-helmet-surf"]], "mne.get_montage_volume_labels": [[463, "mne-get-montage-volume-labels"]], "Examples using mne.get_montage_volume_labels": [[463, "examples-using-mne-get-montage-volume-labels"]], "mne.get_volume_labels_from_aseg": [[464, "mne-get-volume-labels-from-aseg"]], "Examples using mne.get_volume_labels_from_aseg": [[464, "examples-using-mne-get-volume-labels-from-aseg"]], "mne.get_volume_labels_from_src": [[465, "mne-get-volume-labels-from-src"]], "mne.grade_to_tris": [[466, "mne-grade-to-tris"]], "mne.grade_to_vertices": [[467, "mne-grade-to-vertices"]], "mne.grand_average": [[468, "mne-grand-average"]], "Examples using mne.grand_average": [[468, "examples-using-mne-grand-average"]], "mne.grow_labels": [[469, "mne-grow-labels"]], "mne.gui.coregistration": [[470, "mne-gui-coregistration"]], "Examples using mne.gui.coregistration": [[470, "examples-using-mne-gui-coregistration"]], "mne.gui.locate_ieeg": [[471, "mne-gui-locate-ieeg"]], "mne.head_to_mni": [[472, "mne-head-to-mni"]], "mne.head_to_mri": [[473, "mne-head-to-mri"]], "mne.inverse_sparse.gamma_map": [[474, "mne-inverse-sparse-gamma-map"]], "Examples using mne.inverse_sparse.gamma_map": [[474, "examples-using-mne-inverse-sparse-gamma-map"]], "mne.inverse_sparse.make_stc_from_dipoles": [[475, "mne-inverse-sparse-make-stc-from-dipoles"]], "Examples using mne.inverse_sparse.make_stc_from_dipoles": [[475, "examples-using-mne-inverse-sparse-make-stc-from-dipoles"]], "mne.inverse_sparse.mixed_norm": [[476, "mne-inverse-sparse-mixed-norm"]], "Examples using mne.inverse_sparse.mixed_norm": [[476, "examples-using-mne-inverse-sparse-mixed-norm"]], "mne.inverse_sparse.tf_mixed_norm": [[477, "mne-inverse-sparse-tf-mixed-norm"]], "Examples using mne.inverse_sparse.tf_mixed_norm": [[477, "examples-using-mne-inverse-sparse-tf-mixed-norm"]], "mne.io.BaseRaw": [[478, "mne-io-baseraw"]], "mne.io.Raw": [[479, "mne-io-raw"]], "Examples using mne.io.Raw": [[479, "examples-using-mne-io-raw"]], "mne.io.RawArray": [[480, "mne-io-rawarray"]], "Examples using mne.io.RawArray": [[480, "examples-using-mne-io-rawarray"]], "mne.io.anonymize_info": [[481, "mne-io-anonymize-info"]], "mne.io.kit.read_mrk": [[482, "mne-io-kit-read-mrk"]], "mne.io.read_fiducials": [[483, "mne-io-read-fiducials"]], "mne.io.read_info": [[484, "mne-io-read-info"]], "Examples using mne.io.read_info": [[484, "examples-using-mne-io-read-info"]], "mne.io.read_raw": [[485, "mne-io-read-raw"]], "Examples using mne.io.read_raw": [[485, "examples-using-mne-io-read-raw"]], "mne.io.read_raw_artemis123": [[486, "mne-io-read-raw-artemis123"]], "Examples using mne.io.read_raw_artemis123": [[486, "examples-using-mne-io-read-raw-artemis123"]], "mne.io.read_raw_bdf": [[487, "mne-io-read-raw-bdf"]], "Examples using mne.io.read_raw_bdf": [[487, "examples-using-mne-io-read-raw-bdf"]], "mne.io.read_raw_boxy": [[488, "mne-io-read-raw-boxy"]], "mne.io.read_raw_brainvision": [[489, "mne-io-read-raw-brainvision"]], "Examples using mne.io.read_raw_brainvision": [[489, "examples-using-mne-io-read-raw-brainvision"]], "mne.io.read_raw_bti": [[490, "mne-io-read-raw-bti"]], "Examples using mne.io.read_raw_bti": [[490, "examples-using-mne-io-read-raw-bti"]], "mne.io.read_raw_cnt": [[491, "mne-io-read-raw-cnt"]], "Examples using mne.io.read_raw_cnt": [[491, "examples-using-mne-io-read-raw-cnt"]], "mne.io.read_raw_ctf": [[492, "mne-io-read-raw-ctf"]], "Examples using mne.io.read_raw_ctf": [[492, "examples-using-mne-io-read-raw-ctf"]], "mne.io.read_raw_curry": [[493, "mne-io-read-raw-curry"]], "mne.io.read_raw_edf": [[494, "mne-io-read-raw-edf"]], "Examples using mne.io.read_raw_edf": [[494, "examples-using-mne-io-read-raw-edf"]], "mne.io.read_raw_eeglab": [[495, "mne-io-read-raw-eeglab"]], "Examples using mne.io.read_raw_eeglab": [[495, "examples-using-mne-io-read-raw-eeglab"]], "mne.io.read_raw_egi": [[496, "mne-io-read-raw-egi"]], "Examples using mne.io.read_raw_egi": [[496, "examples-using-mne-io-read-raw-egi"]], "mne.io.read_raw_eximia": [[497, "mne-io-read-raw-eximia"]], "Examples using mne.io.read_raw_eximia": [[497, "examples-using-mne-io-read-raw-eximia"]], "mne.io.read_raw_eyelink": [[498, "mne-io-read-raw-eyelink"]], "Examples using mne.io.read_raw_eyelink": [[498, "examples-using-mne-io-read-raw-eyelink"]], "mne.io.read_raw_fieldtrip": [[499, "mne-io-read-raw-fieldtrip"]], "mne.io.read_raw_fif": [[500, "mne-io-read-raw-fif"]], "Examples using mne.io.read_raw_fif": [[500, "examples-using-mne-io-read-raw-fif"]], "mne.io.read_raw_fil": [[501, "mne-io-read-raw-fil"]], "Examples using mne.io.read_raw_fil": [[501, "examples-using-mne-io-read-raw-fil"]], "mne.io.read_raw_gdf": [[502, "mne-io-read-raw-gdf"]], "Examples using mne.io.read_raw_gdf": [[502, "examples-using-mne-io-read-raw-gdf"]], "mne.io.read_raw_hitachi": [[503, "mne-io-read-raw-hitachi"]], "mne.io.read_raw_kit": [[504, "mne-io-read-raw-kit"]], "Examples using mne.io.read_raw_kit": [[504, "examples-using-mne-io-read-raw-kit"]], "mne.io.read_raw_nedf": [[505, "mne-io-read-raw-nedf"]], "mne.io.read_raw_nicolet": [[506, "mne-io-read-raw-nicolet"]], "Examples using mne.io.read_raw_nicolet": [[506, "examples-using-mne-io-read-raw-nicolet"]], "mne.io.read_raw_nihon": [[507, "mne-io-read-raw-nihon"]], "Examples using mne.io.read_raw_nihon": [[507, "examples-using-mne-io-read-raw-nihon"]], "mne.io.read_raw_nirx": [[508, "mne-io-read-raw-nirx"]], "Examples using mne.io.read_raw_nirx": [[508, "examples-using-mne-io-read-raw-nirx"]], "mne.io.read_raw_persyst": [[509, "mne-io-read-raw-persyst"]], "Examples using mne.io.read_raw_persyst": [[509, "examples-using-mne-io-read-raw-persyst"]], "mne.io.read_raw_snirf": [[510, "mne-io-read-raw-snirf"]], "Examples using mne.io.read_raw_snirf": [[510, "examples-using-mne-io-read-raw-snirf"]], "mne.io.show_fiff": [[511, "mne-io-show-fiff"]], "mne.io.write_fiducials": [[512, "mne-io-write-fiducials"]], "mne.label.select_sources": [[513, "mne-label-select-sources"]], "Examples using mne.label.select_sources": [[513, "examples-using-mne-label-select-sources"]], "mne.label_sign_flip": [[514, "mne-label-sign-flip"]], "Examples using mne.label_sign_flip": [[514, "examples-using-mne-label-sign-flip"]], "mne.labels_to_stc": [[515, "mne-labels-to-stc"]], "Examples using mne.labels_to_stc": [[515, "examples-using-mne-labels-to-stc"]], "mne.make_ad_hoc_cov": [[516, "mne-make-ad-hoc-cov"]], "Examples using mne.make_ad_hoc_cov": [[516, "examples-using-mne-make-ad-hoc-cov"]], "mne.make_bem_model": [[517, "mne-make-bem-model"]], "Examples using mne.make_bem_model": [[517, "examples-using-mne-make-bem-model"]], "mne.make_bem_solution": [[518, "mne-make-bem-solution"]], "Examples using mne.make_bem_solution": [[518, "examples-using-mne-make-bem-solution"]], "mne.make_field_map": [[519, "mne-make-field-map"]], "Examples using mne.make_field_map": [[519, "examples-using-mne-make-field-map"]], "mne.make_fixed_length_epochs": [[520, "mne-make-fixed-length-epochs"]], "Examples using mne.make_fixed_length_epochs": [[520, "examples-using-mne-make-fixed-length-epochs"]], "mne.make_fixed_length_events": [[521, "mne-make-fixed-length-events"]], "Examples using mne.make_fixed_length_events": [[521, "examples-using-mne-make-fixed-length-events"]], "mne.make_forward_dipole": [[522, "mne-make-forward-dipole"]], "Examples using mne.make_forward_dipole": [[522, "examples-using-mne-make-forward-dipole"]], "mne.make_forward_solution": [[523, "mne-make-forward-solution"]], "Examples using mne.make_forward_solution": [[523, "examples-using-mne-make-forward-solution"]], "mne.make_sphere_model": [[524, "mne-make-sphere-model"]], "Examples using mne.make_sphere_model": [[524, "examples-using-mne-make-sphere-model"]], "mne.match_channel_orders": [[525, "mne-match-channel-orders"]], "mne.merge_events": [[526, "mne-merge-events"]], "Examples using mne.merge_events": [[526, "examples-using-mne-merge-events"]], "mne.minimum_norm.InverseOperator": [[527, "mne-minimum-norm-inverseoperator"]], "Examples using mne.minimum_norm.InverseOperator": [[527, "examples-using-mne-minimum-norm-inverseoperator"]], "mne.minimum_norm.apply_inverse": [[528, "mne-minimum-norm-apply-inverse"]], "Examples using mne.minimum_norm.apply_inverse": [[528, "examples-using-mne-minimum-norm-apply-inverse"]], "mne.minimum_norm.apply_inverse_cov": [[529, "mne-minimum-norm-apply-inverse-cov"]], "Examples using mne.minimum_norm.apply_inverse_cov": [[529, "examples-using-mne-minimum-norm-apply-inverse-cov"]], "mne.minimum_norm.apply_inverse_epochs": [[530, "mne-minimum-norm-apply-inverse-epochs"]], "Examples using mne.minimum_norm.apply_inverse_epochs": [[530, "examples-using-mne-minimum-norm-apply-inverse-epochs"]], "mne.minimum_norm.apply_inverse_raw": [[531, "mne-minimum-norm-apply-inverse-raw"]], "Examples using mne.minimum_norm.apply_inverse_raw": [[531, "examples-using-mne-minimum-norm-apply-inverse-raw"]], "mne.minimum_norm.apply_inverse_tfr_epochs": [[532, "mne-minimum-norm-apply-inverse-tfr-epochs"]], "mne.minimum_norm.compute_rank_inverse": [[533, "mne-minimum-norm-compute-rank-inverse"]], "mne.minimum_norm.compute_source_psd": [[534, "mne-minimum-norm-compute-source-psd"]], "Examples using mne.minimum_norm.compute_source_psd": [[534, "examples-using-mne-minimum-norm-compute-source-psd"]], "mne.minimum_norm.compute_source_psd_epochs": [[535, "mne-minimum-norm-compute-source-psd-epochs"]], "Examples using mne.minimum_norm.compute_source_psd_epochs": [[535, "examples-using-mne-minimum-norm-compute-source-psd-epochs"]], "mne.minimum_norm.estimate_snr": [[536, "mne-minimum-norm-estimate-snr"]], "mne.minimum_norm.get_cross_talk": [[537, "mne-minimum-norm-get-cross-talk"]], "Examples using mne.minimum_norm.get_cross_talk": [[537, "examples-using-mne-minimum-norm-get-cross-talk"]], "mne.minimum_norm.get_point_spread": [[538, "mne-minimum-norm-get-point-spread"]], "Examples using mne.minimum_norm.get_point_spread": [[538, "examples-using-mne-minimum-norm-get-point-spread"]], "mne.minimum_norm.make_inverse_operator": [[539, "mne-minimum-norm-make-inverse-operator"]], "Examples using mne.minimum_norm.make_inverse_operator": [[539, "examples-using-mne-minimum-norm-make-inverse-operator"]], "mne.minimum_norm.make_inverse_resolution_matrix": [[540, "mne-minimum-norm-make-inverse-resolution-matrix"]], "Examples using mne.minimum_norm.make_inverse_resolution_matrix": [[540, "examples-using-mne-minimum-norm-make-inverse-resolution-matrix"]], "mne.minimum_norm.prepare_inverse_operator": [[541, "mne-minimum-norm-prepare-inverse-operator"]], "mne.minimum_norm.read_inverse_operator": [[542, "mne-minimum-norm-read-inverse-operator"]], "Examples using mne.minimum_norm.read_inverse_operator": [[542, "examples-using-mne-minimum-norm-read-inverse-operator"]], "mne.minimum_norm.resolution_metrics": [[543, "mne-minimum-norm-resolution-metrics"]], "Examples using mne.minimum_norm.resolution_metrics": [[543, "examples-using-mne-minimum-norm-resolution-metrics"]], "mne.minimum_norm.source_band_induced_power": [[544, "mne-minimum-norm-source-band-induced-power"]], "Examples using mne.minimum_norm.source_band_induced_power": [[544, "examples-using-mne-minimum-norm-source-band-induced-power"]], "mne.minimum_norm.source_induced_power": [[545, "mne-minimum-norm-source-induced-power"]], "Examples using mne.minimum_norm.source_induced_power": [[545, "examples-using-mne-minimum-norm-source-induced-power"]], "mne.minimum_norm.write_inverse_operator": [[546, "mne-minimum-norm-write-inverse-operator"]], "mne.morph_labels": [[547, "mne-morph-labels"]], "mne.morph_source_spaces": [[548, "mne-morph-source-spaces"]], "Examples using mne.morph_source_spaces": [[548, "examples-using-mne-morph-source-spaces"]], "mne.open_docs": [[549, "mne-open-docs"]], "mne.open_report": [[550, "mne-open-report"]], "Examples using mne.open_report": [[550, "examples-using-mne-open-report"]], "mne.parse_config": [[551, "mne-parse-config"]], "mne.pick_channels": [[552, "mne-pick-channels"]], "Examples using mne.pick_channels": [[552, "examples-using-mne-pick-channels"]], "mne.pick_channels_cov": [[553, "mne-pick-channels-cov"]], "mne.pick_channels_forward": [[554, "mne-pick-channels-forward"]], "mne.pick_channels_regexp": [[555, "mne-pick-channels-regexp"]], "Examples using mne.pick_channels_regexp": [[555, "examples-using-mne-pick-channels-regexp"]], "mne.pick_events": [[556, "mne-pick-events"]], "Examples using mne.pick_events": [[556, "examples-using-mne-pick-events"]], "mne.pick_info": [[557, "mne-pick-info"]], "Examples using mne.pick_info": [[557, "examples-using-mne-pick-info"]], "mne.pick_types": [[558, "mne-pick-types"]], "Examples using mne.pick_types": [[558, "examples-using-mne-pick-types"]], "mne.pick_types_forward": [[559, "mne-pick-types-forward"]], "Examples using mne.pick_types_forward": [[559, "examples-using-mne-pick-types-forward"]], "mne.preprocessing.EOGRegression": [[560, "mne-preprocessing-eogregression"]], "Examples using mne.preprocessing.EOGRegression": [[560, "examples-using-mne-preprocessing-eogregression"]], "mne.preprocessing.ICA": [[561, "mne-preprocessing-ica"]], "Examples using mne.preprocessing.ICA": [[561, "examples-using-mne-preprocessing-ica"]], "mne.preprocessing.Xdawn": [[562, "mne-preprocessing-xdawn"]], "Examples using mne.preprocessing.Xdawn": [[562, "examples-using-mne-preprocessing-xdawn"]], "mne.preprocessing.annotate_amplitude": [[563, "mne-preprocessing-annotate-amplitude"]], "mne.preprocessing.annotate_break": [[564, "mne-preprocessing-annotate-break"]], "Examples using mne.preprocessing.annotate_break": [[564, "examples-using-mne-preprocessing-annotate-break"]], "mne.preprocessing.annotate_movement": [[565, "mne-preprocessing-annotate-movement"]], "Examples using mne.preprocessing.annotate_movement": [[565, "examples-using-mne-preprocessing-annotate-movement"]], "mne.preprocessing.annotate_muscle_zscore": [[566, "mne-preprocessing-annotate-muscle-zscore"]], "Examples using mne.preprocessing.annotate_muscle_zscore": [[566, "examples-using-mne-preprocessing-annotate-muscle-zscore"]], "mne.preprocessing.annotate_nan": [[567, "mne-preprocessing-annotate-nan"]], "mne.preprocessing.compute_average_dev_head_t": [[568, "mne-preprocessing-compute-average-dev-head-t"]], "Examples using mne.preprocessing.compute_average_dev_head_t": [[568, "examples-using-mne-preprocessing-compute-average-dev-head-t"]], "mne.preprocessing.compute_bridged_electrodes": [[569, "mne-preprocessing-compute-bridged-electrodes"]], "Examples using mne.preprocessing.compute_bridged_electrodes": [[569, "examples-using-mne-preprocessing-compute-bridged-electrodes"]], "mne.preprocessing.compute_current_source_density": [[570, "mne-preprocessing-compute-current-source-density"]], "Examples using mne.preprocessing.compute_current_source_density": [[570, "examples-using-mne-preprocessing-compute-current-source-density"]], "mne.preprocessing.compute_fine_calibration": [[571, "mne-preprocessing-compute-fine-calibration"]], "mne.preprocessing.compute_maxwell_basis": [[572, "mne-preprocessing-compute-maxwell-basis"]], "mne.preprocessing.compute_proj_ecg": [[573, "mne-preprocessing-compute-proj-ecg"]], "Examples using mne.preprocessing.compute_proj_ecg": [[573, "examples-using-mne-preprocessing-compute-proj-ecg"]], "mne.preprocessing.compute_proj_eog": [[574, "mne-preprocessing-compute-proj-eog"]], "Examples using mne.preprocessing.compute_proj_eog": [[574, "examples-using-mne-preprocessing-compute-proj-eog"]], "mne.preprocessing.compute_proj_hfc": [[575, "mne-preprocessing-compute-proj-hfc"]], "Examples using mne.preprocessing.compute_proj_hfc": [[575, "examples-using-mne-preprocessing-compute-proj-hfc"]], "mne.preprocessing.corrmap": [[576, "mne-preprocessing-corrmap"]], "Examples using mne.preprocessing.corrmap": [[576, "examples-using-mne-preprocessing-corrmap"]], "mne.preprocessing.cortical_signal_suppression": [[577, "mne-preprocessing-cortical-signal-suppression"]], "Examples using mne.preprocessing.cortical_signal_suppression": [[577, "examples-using-mne-preprocessing-cortical-signal-suppression"]], "mne.preprocessing.create_ecg_epochs": [[578, "mne-preprocessing-create-ecg-epochs"]], "Examples using mne.preprocessing.create_ecg_epochs": [[578, "examples-using-mne-preprocessing-create-ecg-epochs"]], "mne.preprocessing.create_eog_epochs": [[579, "mne-preprocessing-create-eog-epochs"]], "Examples using mne.preprocessing.create_eog_epochs": [[579, "examples-using-mne-preprocessing-create-eog-epochs"]], "mne.preprocessing.equalize_bads": [[580, "mne-preprocessing-equalize-bads"]], "mne.preprocessing.eyetracking.set_channel_types_eyetrack": [[581, "mne-preprocessing-eyetracking-set-channel-types-eyetrack"]], "Examples using mne.preprocessing.eyetracking.set_channel_types_eyetrack": [[581, "examples-using-mne-preprocessing-eyetracking-set-channel-types-eyetrack"]], "mne.preprocessing.find_bad_channels_maxwell": [[582, "mne-preprocessing-find-bad-channels-maxwell"]], "Examples using mne.preprocessing.find_bad_channels_maxwell": [[582, "examples-using-mne-preprocessing-find-bad-channels-maxwell"]], "mne.preprocessing.find_ecg_events": [[583, "mne-preprocessing-find-ecg-events"]], "Examples using mne.preprocessing.find_ecg_events": [[583, "examples-using-mne-preprocessing-find-ecg-events"]], "mne.preprocessing.find_eog_events": [[584, "mne-preprocessing-find-eog-events"]], "Examples using mne.preprocessing.find_eog_events": [[584, "examples-using-mne-preprocessing-find-eog-events"]], "mne.preprocessing.fix_stim_artifact": [[585, "mne-preprocessing-fix-stim-artifact"]], "Examples using mne.preprocessing.fix_stim_artifact": [[585, "examples-using-mne-preprocessing-fix-stim-artifact"]], "mne.preprocessing.ica_find_ecg_events": [[586, "mne-preprocessing-ica-find-ecg-events"]], "mne.preprocessing.ica_find_eog_events": [[587, "mne-preprocessing-ica-find-eog-events"]], "mne.preprocessing.ieeg.make_montage_volume": [[588, "mne-preprocessing-ieeg-make-montage-volume"]], "mne.preprocessing.ieeg.project_sensors_onto_brain": [[589, "mne-preprocessing-ieeg-project-sensors-onto-brain"]], "mne.preprocessing.ieeg.warp_montage": [[590, "mne-preprocessing-ieeg-warp-montage"]], "mne.preprocessing.infomax": [[591, "mne-preprocessing-infomax"]], "mne.preprocessing.interpolate_bridged_electrodes": [[592, "mne-preprocessing-interpolate-bridged-electrodes"]], "Examples using mne.preprocessing.interpolate_bridged_electrodes": [[592, "examples-using-mne-preprocessing-interpolate-bridged-electrodes"]], "mne.preprocessing.maxwell_filter": [[593, "mne-preprocessing-maxwell-filter"]], "Examples using mne.preprocessing.maxwell_filter": [[593, "examples-using-mne-preprocessing-maxwell-filter"]], "mne.preprocessing.maxwell_filter_prepare_emptyroom": [[594, "mne-preprocessing-maxwell-filter-prepare-emptyroom"]], "mne.preprocessing.nirs.beer_lambert_law": [[595, "mne-preprocessing-nirs-beer-lambert-law"]], "Examples using mne.preprocessing.nirs.beer_lambert_law": [[595, "examples-using-mne-preprocessing-nirs-beer-lambert-law"]], "mne.preprocessing.nirs.optical_density": [[596, "mne-preprocessing-nirs-optical-density"]], "Examples using mne.preprocessing.nirs.optical_density": [[596, "examples-using-mne-preprocessing-nirs-optical-density"]], "mne.preprocessing.nirs.scalp_coupling_index": [[597, "mne-preprocessing-nirs-scalp-coupling-index"]], "Examples using mne.preprocessing.nirs.scalp_coupling_index": [[597, "examples-using-mne-preprocessing-nirs-scalp-coupling-index"]], "mne.preprocessing.nirs.short_channels": [[598, "mne-preprocessing-nirs-short-channels"]], "mne.preprocessing.nirs.source_detector_distances": [[599, "mne-preprocessing-nirs-source-detector-distances"]], "Examples using mne.preprocessing.nirs.source_detector_distances": [[599, "examples-using-mne-preprocessing-nirs-source-detector-distances"]], "mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[600, "mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "Examples using mne.preprocessing.nirs.temporal_derivative_distribution_repair": [[600, "examples-using-mne-preprocessing-nirs-temporal-derivative-distribution-repair"]], "mne.preprocessing.oversampled_temporal_projection": [[601, "mne-preprocessing-oversampled-temporal-projection"]], "Examples using mne.preprocessing.oversampled_temporal_projection": [[601, "examples-using-mne-preprocessing-oversampled-temporal-projection"]], "mne.preprocessing.peak_finder": [[602, "mne-preprocessing-peak-finder"]], "mne.preprocessing.read_eog_regression": [[603, "mne-preprocessing-read-eog-regression"]], "mne.preprocessing.read_fine_calibration": [[604, "mne-preprocessing-read-fine-calibration"]], "mne.preprocessing.read_ica": [[605, "mne-preprocessing-read-ica"]], "Examples using mne.preprocessing.read_ica": [[605, "examples-using-mne-preprocessing-read-ica"]], "mne.preprocessing.read_ica_eeglab": [[606, "mne-preprocessing-read-ica-eeglab"]], "mne.preprocessing.realign_raw": [[607, "mne-preprocessing-realign-raw"]], "mne.preprocessing.regress_artifact": [[608, "mne-preprocessing-regress-artifact"]], "mne.preprocessing.write_fine_calibration": [[609, "mne-preprocessing-write-fine-calibration"]], "mne.random_parcellation": [[610, "mne-random-parcellation"]], "mne.read_annotations": [[611, "mne-read-annotations"]], "Examples using mne.read_annotations": [[611, "examples-using-mne-read-annotations"]], "mne.read_bem_solution": [[612, "mne-read-bem-solution"]], "Examples using mne.read_bem_solution": [[612, "examples-using-mne-read-bem-solution"]], "mne.read_bem_surfaces": [[613, "mne-read-bem-surfaces"]], "Examples using mne.read_bem_surfaces": [[613, "examples-using-mne-read-bem-surfaces"]], "mne.read_cov": [[614, "mne-read-cov"]], "Examples using mne.read_cov": [[614, "examples-using-mne-read-cov"]], "mne.read_dipole": [[615, "mne-read-dipole"]], "Examples using mne.read_dipole": [[615, "examples-using-mne-read-dipole"]], "mne.read_epochs": [[616, "mne-read-epochs"]], "Examples using mne.read_epochs": [[616, "examples-using-mne-read-epochs"]], "mne.read_epochs_eeglab": [[617, "mne-read-epochs-eeglab"]], "Examples using mne.read_epochs_eeglab": [[617, "examples-using-mne-read-epochs-eeglab"]], "mne.read_epochs_fieldtrip": [[618, "mne-read-epochs-fieldtrip"]], "mne.read_epochs_kit": [[619, "mne-read-epochs-kit"]], "mne.read_events": [[620, "mne-read-events"]], "Examples using mne.read_events": [[620, "examples-using-mne-read-events"]], "mne.read_evoked_besa": [[621, "mne-read-evoked-besa"]], "mne.read_evoked_fieldtrip": [[622, "mne-read-evoked-fieldtrip"]], "mne.read_evokeds": [[623, "mne-read-evokeds"]], "Examples using mne.read_evokeds": [[623, "examples-using-mne-read-evokeds"]], "mne.read_evokeds_mff": [[624, "mne-read-evokeds-mff"]], "mne.read_forward_solution": [[625, "mne-read-forward-solution"]], "Examples using mne.read_forward_solution": [[625, "examples-using-mne-read-forward-solution"]], "mne.read_freesurfer_lut": [[626, "mne-read-freesurfer-lut"]], "mne.read_label": [[627, "mne-read-label"]], "Examples using mne.read_label": [[627, "examples-using-mne-read-label"]], "mne.read_labels_from_annot": [[628, "mne-read-labels-from-annot"]], "Examples using mne.read_labels_from_annot": [[628, "examples-using-mne-read-labels-from-annot"]], "mne.read_lta": [[629, "mne-read-lta"]], "mne.read_morph_map": [[630, "mne-read-morph-map"]], "mne.read_proj": [[631, "mne-read-proj"]], "Examples using mne.read_proj": [[631, "examples-using-mne-read-proj"]], "mne.read_reject_parameters": [[632, "mne-read-reject-parameters"]], "mne.read_source_estimate": [[633, "mne-read-source-estimate"]], "Examples using mne.read_source_estimate": [[633, "examples-using-mne-read-source-estimate"]], "mne.read_source_morph": [[634, "mne-read-source-morph"]], "mne.read_source_spaces": [[635, "mne-read-source-spaces"]], "Examples using mne.read_source_spaces": [[635, "examples-using-mne-read-source-spaces"]], "mne.read_surface": [[636, "mne-read-surface"]], "Examples using mne.read_surface": [[636, "examples-using-mne-read-surface"]], "mne.read_talxfm": [[637, "mne-read-talxfm"]], "Examples using mne.read_talxfm": [[637, "examples-using-mne-read-talxfm"]], "mne.read_trans": [[638, "mne-read-trans"]], "Examples using mne.read_trans": [[638, "examples-using-mne-read-trans"]], "mne.read_tri": [[639, "mne-read-tri"]], "mne.read_vectorview_selection": [[640, "mne-read-vectorview-selection"]], "Examples using mne.read_vectorview_selection": [[640, "examples-using-mne-read-vectorview-selection"]], "mne.rename_channels": [[641, "mne-rename-channels"]], "mne.scale_bem": [[642, "mne-scale-bem"]], "mne.scale_labels": [[643, "mne-scale-labels"]], "mne.scale_mri": [[644, "mne-scale-mri"]], "Examples using mne.scale_mri": [[644, "examples-using-mne-scale-mri"]], "mne.scale_source_space": [[645, "mne-scale-source-space"]], "mne.sensitivity_map": [[646, "mne-sensitivity-map"]], "Examples using mne.sensitivity_map": [[646, "examples-using-mne-sensitivity-map"]], "mne.set_bipolar_reference": [[647, "mne-set-bipolar-reference"]], "Examples using mne.set_bipolar_reference": [[647, "examples-using-mne-set-bipolar-reference"]], "mne.set_cache_dir": [[648, "mne-set-cache-dir"]], "mne.set_config": [[649, "mne-set-config"]], "Examples using mne.set_config": [[649, "examples-using-mne-set-config"]], "mne.set_eeg_reference": [[650, "mne-set-eeg-reference"]], "Examples using mne.set_eeg_reference": [[650, "examples-using-mne-set-eeg-reference"]], "mne.set_log_file": [[651, "mne-set-log-file"]], "mne.set_log_level": [[652, "mne-set-log-level"]], "mne.set_memmap_min_size": [[653, "mne-set-memmap-min-size"]], "mne.setup_source_space": [[654, "mne-setup-source-space"]], "Examples using mne.setup_source_space": [[654, "examples-using-mne-setup-source-space"]], "mne.setup_volume_source_space": [[655, "mne-setup-volume-source-space"]], "Examples using mne.setup_volume_source_space": [[655, "examples-using-mne-setup-volume-source-space"]], "mne.simulation.SourceSimulator": [[656, "mne-simulation-sourcesimulator"]], "Examples using mne.simulation.SourceSimulator": [[656, "examples-using-mne-simulation-sourcesimulator"]], "mne.simulation.add_chpi": [[657, "mne-simulation-add-chpi"]], "mne.simulation.add_ecg": [[658, "mne-simulation-add-ecg"]], "Examples using mne.simulation.add_ecg": [[658, "examples-using-mne-simulation-add-ecg"]], "mne.simulation.add_eog": [[659, "mne-simulation-add-eog"]], "Examples using mne.simulation.add_eog": [[659, "examples-using-mne-simulation-add-eog"]], "mne.simulation.add_noise": [[660, "mne-simulation-add-noise"]], "Examples using mne.simulation.add_noise": [[660, "examples-using-mne-simulation-add-noise"]], "mne.simulation.metrics.cosine_score": [[661, "mne-simulation-metrics-cosine-score"]], "Examples using mne.simulation.metrics.cosine_score": [[661, "examples-using-mne-simulation-metrics-cosine-score"]], "mne.simulation.metrics.f1_score": [[662, "mne-simulation-metrics-f1-score"]], "Examples using mne.simulation.metrics.f1_score": [[662, "examples-using-mne-simulation-metrics-f1-score"]], "mne.simulation.metrics.peak_position_error": [[663, "mne-simulation-metrics-peak-position-error"]], "Examples using mne.simulation.metrics.peak_position_error": [[663, "examples-using-mne-simulation-metrics-peak-position-error"]], "mne.simulation.metrics.precision_score": [[664, "mne-simulation-metrics-precision-score"]], "Examples using mne.simulation.metrics.precision_score": [[664, "examples-using-mne-simulation-metrics-precision-score"]], "mne.simulation.metrics.recall_score": [[665, "mne-simulation-metrics-recall-score"]], "Examples using mne.simulation.metrics.recall_score": [[665, "examples-using-mne-simulation-metrics-recall-score"]], "mne.simulation.metrics.region_localization_error": [[666, "mne-simulation-metrics-region-localization-error"]], "Examples using mne.simulation.metrics.region_localization_error": [[666, "examples-using-mne-simulation-metrics-region-localization-error"]], "mne.simulation.metrics.roc_auc_score": [[667, "mne-simulation-metrics-roc-auc-score"]], "mne.simulation.metrics.spatial_deviation_error": [[668, "mne-simulation-metrics-spatial-deviation-error"]], "Examples using mne.simulation.metrics.spatial_deviation_error": [[668, "examples-using-mne-simulation-metrics-spatial-deviation-error"]], "mne.simulation.select_source_in_label": [[669, "mne-simulation-select-source-in-label"]], "mne.simulation.simulate_evoked": [[670, "mne-simulation-simulate-evoked"]], "Examples using mne.simulation.simulate_evoked": [[670, "examples-using-mne-simulation-simulate-evoked"]], "mne.simulation.simulate_raw": [[671, "mne-simulation-simulate-raw"]], "Data alignment and stim channel encoding": [[671, "id3"]], "Examples using mne.simulation.simulate_raw": [[671, "examples-using-mne-simulation-simulate-raw"]], "mne.simulation.simulate_sparse_stc": [[672, "mne-simulation-simulate-sparse-stc"]], "Examples using mne.simulation.simulate_sparse_stc": [[672, "examples-using-mne-simulation-simulate-sparse-stc"]], "mne.simulation.simulate_stc": [[673, "mne-simulation-simulate-stc"]], "Examples using mne.simulation.simulate_stc": [[673, "examples-using-mne-simulation-simulate-stc"]], "mne.source_space.compute_distance_to_sensors": [[674, "mne-source-space-compute-distance-to-sensors"]], "Examples using mne.source_space.compute_distance_to_sensors": [[674, "examples-using-mne-source-space-compute-distance-to-sensors"]], "mne.source_space.get_decimated_surfaces": [[675, "mne-source-space-get-decimated-surfaces"]], "mne.spatial_dist_adjacency": [[676, "mne-spatial-dist-adjacency"]], "mne.spatial_inter_hemi_adjacency": [[677, "mne-spatial-inter-hemi-adjacency"]], "mne.spatial_src_adjacency": [[678, "mne-spatial-src-adjacency"]], "Examples using mne.spatial_src_adjacency": [[678, "examples-using-mne-spatial-src-adjacency"]], "mne.spatial_tris_adjacency": [[679, "mne-spatial-tris-adjacency"]], "mne.spatio_temporal_dist_adjacency": [[680, "mne-spatio-temporal-dist-adjacency"]], "mne.spatio_temporal_src_adjacency": [[681, "mne-spatio-temporal-src-adjacency"]], "mne.spatio_temporal_tris_adjacency": [[682, "mne-spatio-temporal-tris-adjacency"]], "mne.split_label": [[683, "mne-split-label"]], "mne.stats.bonferroni_correction": [[684, "mne-stats-bonferroni-correction"]], "Examples using mne.stats.bonferroni_correction": [[684, "examples-using-mne-stats-bonferroni-correction"]], "mne.stats.bootstrap_confidence_interval": [[685, "mne-stats-bootstrap-confidence-interval"]], "Examples using mne.stats.bootstrap_confidence_interval": [[685, "examples-using-mne-stats-bootstrap-confidence-interval"]], "mne.stats.combine_adjacency": [[686, "mne-stats-combine-adjacency"]], "Examples using mne.stats.combine_adjacency": [[686, "examples-using-mne-stats-combine-adjacency"]], "mne.stats.f_mway_rm": [[687, "mne-stats-f-mway-rm"]], "Examples using mne.stats.f_mway_rm": [[687, "examples-using-mne-stats-f-mway-rm"]], "mne.stats.f_oneway": [[688, "mne-stats-f-oneway"]], "mne.stats.f_threshold_mway_rm": [[689, "mne-stats-f-threshold-mway-rm"]], "Examples using mne.stats.f_threshold_mway_rm": [[689, "examples-using-mne-stats-f-threshold-mway-rm"]], "mne.stats.fdr_correction": [[690, "mne-stats-fdr-correction"]], "Examples using mne.stats.fdr_correction": [[690, "examples-using-mne-stats-fdr-correction"]], "mne.stats.linear_regression": [[691, "mne-stats-linear-regression"]], "Examples using mne.stats.linear_regression": [[691, "examples-using-mne-stats-linear-regression"]], "mne.stats.linear_regression_raw": [[692, "mne-stats-linear-regression-raw"]], "Examples using mne.stats.linear_regression_raw": [[692, "examples-using-mne-stats-linear-regression-raw"]], "mne.stats.permutation_cluster_1samp_test": [[693, "mne-stats-permutation-cluster-1samp-test"]], "Examples using mne.stats.permutation_cluster_1samp_test": [[693, "examples-using-mne-stats-permutation-cluster-1samp-test"]], "mne.stats.permutation_cluster_test": [[694, "mne-stats-permutation-cluster-test"]], "Examples using mne.stats.permutation_cluster_test": [[694, "examples-using-mne-stats-permutation-cluster-test"]], "mne.stats.permutation_t_test": [[695, "mne-stats-permutation-t-test"]], "Examples using mne.stats.permutation_t_test": [[695, "examples-using-mne-stats-permutation-t-test"]], "mne.stats.spatio_temporal_cluster_1samp_test": [[696, "mne-stats-spatio-temporal-cluster-1samp-test"]], "Examples using mne.stats.spatio_temporal_cluster_1samp_test": [[696, "examples-using-mne-stats-spatio-temporal-cluster-1samp-test"]], "mne.stats.spatio_temporal_cluster_test": [[697, "mne-stats-spatio-temporal-cluster-test"]], "Examples using mne.stats.spatio_temporal_cluster_test": [[697, "examples-using-mne-stats-spatio-temporal-cluster-test"]], "mne.stats.summarize_clusters_stc": [[698, "mne-stats-summarize-clusters-stc"]], "Examples using mne.stats.summarize_clusters_stc": [[698, "examples-using-mne-stats-summarize-clusters-stc"]], "mne.stats.ttest_1samp_no_p": [[699, "mne-stats-ttest-1samp-no-p"]], "Examples using mne.stats.ttest_1samp_no_p": [[699, "examples-using-mne-stats-ttest-1samp-no-p"]], "mne.stats.ttest_ind_no_p": [[700, "mne-stats-ttest-ind-no-p"]], "mne.stc_near_sensors": [[701, "mne-stc-near-sensors"]], "Examples using mne.stc_near_sensors": [[701, "examples-using-mne-stc-near-sensors"]], "mne.stc_to_label": [[702, "mne-stc-to-label"]], "Examples using mne.stc_to_label": [[702, "examples-using-mne-stc-to-label"]], "mne.surface.complete_surface_info": [[703, "mne-surface-complete-surface-info"]], "mne.surface.read_curvature": [[704, "mne-surface-read-curvature"]], "Examples using mne.surface.read_curvature": [[704, "examples-using-mne-surface-read-curvature"]], "mne.sys_info": [[705, "mne-sys-info"]], "Examples using mne.sys_info": [[705, "examples-using-mne-sys-info"]], "mne.time_frequency.AverageTFR": [[706, "mne-time-frequency-averagetfr"]], "Examples using mne.time_frequency.AverageTFR": [[706, "examples-using-mne-time-frequency-averagetfr"]], "mne.time_frequency.CrossSpectralDensity": [[707, "mne-time-frequency-crossspectraldensity"]], "Examples using mne.time_frequency.CrossSpectralDensity": [[707, "examples-using-mne-time-frequency-crossspectraldensity"]], "mne.time_frequency.EpochsSpectrum": [[708, "mne-time-frequency-epochsspectrum"]], "Examples using mne.time_frequency.EpochsSpectrum": [[708, "examples-using-mne-time-frequency-epochsspectrum"]], "mne.time_frequency.EpochsTFR": [[709, "mne-time-frequency-epochstfr"]], "Examples using mne.time_frequency.EpochsTFR": [[709, "examples-using-mne-time-frequency-epochstfr"]], "mne.time_frequency.Spectrum": [[710, "mne-time-frequency-spectrum"]], "Examples using mne.time_frequency.Spectrum": [[710, "examples-using-mne-time-frequency-spectrum"]], "mne.time_frequency.csd_array_fourier": [[711, "mne-time-frequency-csd-array-fourier"]], "mne.time_frequency.csd_array_morlet": [[712, "mne-time-frequency-csd-array-morlet"]], "mne.time_frequency.csd_array_multitaper": [[713, "mne-time-frequency-csd-array-multitaper"]], "mne.time_frequency.csd_fourier": [[714, "mne-time-frequency-csd-fourier"]], "Examples using mne.time_frequency.csd_fourier": [[714, "examples-using-mne-time-frequency-csd-fourier"]], "mne.time_frequency.csd_morlet": [[715, "mne-time-frequency-csd-morlet"]], "Examples using mne.time_frequency.csd_morlet": [[715, "examples-using-mne-time-frequency-csd-morlet"]], "mne.time_frequency.csd_multitaper": [[716, "mne-time-frequency-csd-multitaper"]], "Examples using mne.time_frequency.csd_multitaper": [[716, "examples-using-mne-time-frequency-csd-multitaper"]], "mne.time_frequency.csd_tfr": [[717, "mne-time-frequency-csd-tfr"]], "Examples using mne.time_frequency.csd_tfr": [[717, "examples-using-mne-time-frequency-csd-tfr"]], "mne.time_frequency.dpss_windows": [[718, "mne-time-frequency-dpss-windows"]], "mne.time_frequency.fit_iir_model_raw": [[719, "mne-time-frequency-fit-iir-model-raw"]], "Examples using mne.time_frequency.fit_iir_model_raw": [[719, "examples-using-mne-time-frequency-fit-iir-model-raw"]], "mne.time_frequency.fwhm": [[720, "mne-time-frequency-fwhm"]], "mne.time_frequency.istft": [[721, "mne-time-frequency-istft"]], "mne.time_frequency.morlet": [[722, "mne-time-frequency-morlet"]], "Examples using mne.time_frequency.morlet": [[722, "examples-using-mne-time-frequency-morlet"]], "mne.time_frequency.pick_channels_csd": [[723, "mne-time-frequency-pick-channels-csd"]], "mne.time_frequency.psd_array_multitaper": [[724, "mne-time-frequency-psd-array-multitaper"]], "mne.time_frequency.psd_array_welch": [[725, "mne-time-frequency-psd-array-welch"]], "Examples using mne.time_frequency.psd_array_welch": [[725, "examples-using-mne-time-frequency-psd-array-welch"]], "mne.time_frequency.read_csd": [[726, "mne-time-frequency-read-csd"]], "mne.time_frequency.read_spectrum": [[727, "mne-time-frequency-read-spectrum"]], "mne.time_frequency.read_tfrs": [[728, "mne-time-frequency-read-tfrs"]], "mne.time_frequency.stft": [[729, "mne-time-frequency-stft"]], "mne.time_frequency.stftfreq": [[730, "mne-time-frequency-stftfreq"]], "mne.time_frequency.tfr.cwt": [[731, "mne-time-frequency-tfr-cwt"]], "mne.time_frequency.tfr.morlet": [[732, "mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_array_morlet": [[733, "mne-time-frequency-tfr-array-morlet"]], "Examples using mne.time_frequency.tfr_array_morlet": [[733, "examples-using-mne-time-frequency-tfr-array-morlet"]], "mne.time_frequency.tfr_array_multitaper": [[734, "mne-time-frequency-tfr-array-multitaper"]], "mne.time_frequency.tfr_array_stockwell": [[735, "mne-time-frequency-tfr-array-stockwell"]], "mne.time_frequency.tfr_morlet": [[736, "mne-time-frequency-tfr-morlet"]], "Examples using mne.time_frequency.tfr_morlet": [[736, "examples-using-mne-time-frequency-tfr-morlet"]], "mne.time_frequency.tfr_multitaper": [[737, "mne-time-frequency-tfr-multitaper"]], "Examples using mne.time_frequency.tfr_multitaper": [[737, "examples-using-mne-time-frequency-tfr-multitaper"]], "mne.time_frequency.tfr_stockwell": [[738, "mne-time-frequency-tfr-stockwell"]], "Examples using mne.time_frequency.tfr_stockwell": [[738, "examples-using-mne-time-frequency-tfr-stockwell"]], "mne.time_frequency.write_tfrs": [[739, "mne-time-frequency-write-tfrs"]], "mne.transform_surface_to": [[740, "mne-transform-surface-to"]], "mne.transforms.Transform": [[741, "mne-transforms-transform"]], "mne.transforms.apply_volume_registration": [[742, "mne-transforms-apply-volume-registration"]], "mne.transforms.apply_volume_registration_points": [[743, "mne-transforms-apply-volume-registration-points"]], "mne.transforms.compute_volume_registration": [[744, "mne-transforms-compute-volume-registration"]], "mne.transforms.quat_to_rot": [[745, "mne-transforms-quat-to-rot"]], "mne.transforms.read_ras_mni_t": [[746, "mne-transforms-read-ras-mni-t"]], "Examples using mne.transforms.read_ras_mni_t": [[746, "examples-using-mne-transforms-read-ras-mni-t"]], "mne.transforms.rot_to_quat": [[747, "mne-transforms-rot-to-quat"]], "mne.use_coil_def": [[748, "mne-use-coil-def"]], "Examples using mne.use_coil_def": [[748, "examples-using-mne-use-coil-def"]], "mne.use_log_level": [[749, "mne-use-log-level"]], "Examples using mne.use_log_level": [[749, "examples-using-mne-use-log-level"]], "mne.utils.deprecated": [[750, "mne-utils-deprecated"]], "mne.utils.warn": [[751, "mne-utils-warn"]], "mne.verbose": [[752, "mne-verbose"]], "mne.vertex_to_mni": [[753, "mne-vertex-to-mni"]], "Examples using mne.vertex_to_mni": [[753, "examples-using-mne-vertex-to-mni"]], "mne.viz.Brain": [[754, "mne-viz-brain"]], "Examples using mne.viz.Brain": [[754, "examples-using-mne-viz-brain"]], "mne.viz.ClickableImage": [[755, "mne-viz-clickableimage"]], "Examples using mne.viz.ClickableImage": [[755, "examples-using-mne-viz-clickableimage"]], "mne.viz.Figure3D": [[756, "mne-viz-figure3d"]], "mne.viz.add_background_image": [[757, "mne-viz-add-background-image"]], "mne.viz.centers_to_edges": [[758, "mne-viz-centers-to-edges"]], "Examples using mne.viz.centers_to_edges": [[758, "examples-using-mne-viz-centers-to-edges"]], "mne.viz.circular_layout": [[759, "mne-viz-circular-layout"]], "Examples using mne.viz.circular_layout": [[759, "examples-using-mne-viz-circular-layout"]], "mne.viz.close_3d_figure": [[760, "mne-viz-close-3d-figure"]], "mne.viz.close_all_3d_figures": [[761, "mne-viz-close-all-3d-figures"]], "mne.viz.compare_fiff": [[762, "mne-viz-compare-fiff"]], "mne.viz.create_3d_figure": [[763, "mne-viz-create-3d-figure"]], "Examples using mne.viz.create_3d_figure": [[763, "examples-using-mne-viz-create-3d-figure"]], "mne.viz.get_3d_backend": [[764, "mne-viz-get-3d-backend"]], "mne.viz.get_brain_class": [[765, "mne-viz-get-brain-class"]], "Examples using mne.viz.get_brain_class": [[765, "examples-using-mne-viz-get-brain-class"]], "mne.viz.get_browser_backend": [[766, "mne-viz-get-browser-backend"]], "mne.viz.iter_topography": [[767, "mne-viz-iter-topography"]], "Examples using mne.viz.iter_topography": [[767, "examples-using-mne-viz-iter-topography"]], "mne.viz.link_brains": [[768, "mne-viz-link-brains"]], "mne.viz.mne_analyze_colormap": [[769, "mne-viz-mne-analyze-colormap"]], "mne.viz.plot_alignment": [[770, "mne-viz-plot-alignment"]], "Examples using mne.viz.plot_alignment": [[770, "examples-using-mne-viz-plot-alignment"]], "mne.viz.plot_arrowmap": [[771, "mne-viz-plot-arrowmap"]], "Examples using mne.viz.plot_arrowmap": [[771, "examples-using-mne-viz-plot-arrowmap"]], "mne.viz.plot_bem": [[772, "mne-viz-plot-bem"]], "Examples using mne.viz.plot_bem": [[772, "examples-using-mne-viz-plot-bem"]], "mne.viz.plot_brain_colorbar": [[773, "mne-viz-plot-brain-colorbar"]], "Examples using mne.viz.plot_brain_colorbar": [[773, "examples-using-mne-viz-plot-brain-colorbar"]], "mne.viz.plot_bridged_electrodes": [[774, "mne-viz-plot-bridged-electrodes"]], "Examples using mne.viz.plot_bridged_electrodes": [[774, "examples-using-mne-viz-plot-bridged-electrodes"]], "mne.viz.plot_ch_adjacency": [[775, "mne-viz-plot-ch-adjacency"]], "Examples using mne.viz.plot_ch_adjacency": [[775, "examples-using-mne-viz-plot-ch-adjacency"]], "mne.viz.plot_channel_labels_circle": [[776, "mne-viz-plot-channel-labels-circle"]], "Examples using mne.viz.plot_channel_labels_circle": [[776, "examples-using-mne-viz-plot-channel-labels-circle"]], "mne.viz.plot_chpi_snr": [[777, "mne-viz-plot-chpi-snr"]], "Examples using mne.viz.plot_chpi_snr": [[777, "examples-using-mne-viz-plot-chpi-snr"]], "mne.viz.plot_compare_evokeds": [[778, "mne-viz-plot-compare-evokeds"]], "Examples using mne.viz.plot_compare_evokeds": [[778, "examples-using-mne-viz-plot-compare-evokeds"]], "mne.viz.plot_cov": [[779, "mne-viz-plot-cov"]], "Examples using mne.viz.plot_cov": [[779, "examples-using-mne-viz-plot-cov"]], "mne.viz.plot_csd": [[780, "mne-viz-plot-csd"]], "mne.viz.plot_dipole_amplitudes": [[781, "mne-viz-plot-dipole-amplitudes"]], "Examples using mne.viz.plot_dipole_amplitudes": [[781, "examples-using-mne-viz-plot-dipole-amplitudes"]], "mne.viz.plot_dipole_locations": [[782, "mne-viz-plot-dipole-locations"]], "Examples using mne.viz.plot_dipole_locations": [[782, "examples-using-mne-viz-plot-dipole-locations"]], "mne.viz.plot_drop_log": [[783, "mne-viz-plot-drop-log"]], "mne.viz.plot_epochs": [[784, "mne-viz-plot-epochs"]], "mne.viz.plot_epochs_image": [[785, "mne-viz-plot-epochs-image"]], "Examples using mne.viz.plot_epochs_image": [[785, "examples-using-mne-viz-plot-epochs-image"]], "mne.viz.plot_epochs_psd_topomap": [[786, "mne-viz-plot-epochs-psd-topomap"]], "mne.viz.plot_events": [[787, "mne-viz-plot-events"]], "Examples using mne.viz.plot_events": [[787, "examples-using-mne-viz-plot-events"]], "mne.viz.plot_evoked": [[788, "mne-viz-plot-evoked"]], "mne.viz.plot_evoked_field": [[789, "mne-viz-plot-evoked-field"]], "mne.viz.plot_evoked_image": [[790, "mne-viz-plot-evoked-image"]], "Examples using mne.viz.plot_evoked_image": [[790, "examples-using-mne-viz-plot-evoked-image"]], "mne.viz.plot_evoked_joint": [[791, "mne-viz-plot-evoked-joint"]], "mne.viz.plot_evoked_topo": [[792, "mne-viz-plot-evoked-topo"]], "Examples using mne.viz.plot_evoked_topo": [[792, "examples-using-mne-viz-plot-evoked-topo"]], "mne.viz.plot_evoked_topomap": [[793, "mne-viz-plot-evoked-topomap"]], "mne.viz.plot_evoked_white": [[794, "mne-viz-plot-evoked-white"]], "Examples using mne.viz.plot_evoked_white": [[794, "examples-using-mne-viz-plot-evoked-white"]], "mne.viz.plot_filter": [[795, "mne-viz-plot-filter"]], "Examples using mne.viz.plot_filter": [[795, "examples-using-mne-viz-plot-filter"]], "mne.viz.plot_head_positions": [[796, "mne-viz-plot-head-positions"]], "Examples using mne.viz.plot_head_positions": [[796, "examples-using-mne-viz-plot-head-positions"]], "mne.viz.plot_ica_components": [[797, "mne-viz-plot-ica-components"]], "mne.viz.plot_ica_overlay": [[798, "mne-viz-plot-ica-overlay"]], "mne.viz.plot_ica_properties": [[799, "mne-viz-plot-ica-properties"]], "mne.viz.plot_ica_scores": [[800, "mne-viz-plot-ica-scores"]], "mne.viz.plot_ica_sources": [[801, "mne-viz-plot-ica-sources"]], "mne.viz.plot_ideal_filter": [[802, "mne-viz-plot-ideal-filter"]], "Examples using mne.viz.plot_ideal_filter": [[802, "examples-using-mne-viz-plot-ideal-filter"]], "mne.viz.plot_layout": [[803, "mne-viz-plot-layout"]], "mne.viz.plot_montage": [[804, "mne-viz-plot-montage"]], "mne.viz.plot_projs_joint": [[805, "mne-viz-plot-projs-joint"]], "Examples using mne.viz.plot_projs_joint": [[805, "examples-using-mne-viz-plot-projs-joint"]], "mne.viz.plot_projs_topomap": [[806, "mne-viz-plot-projs-topomap"]], "Examples using mne.viz.plot_projs_topomap": [[806, "examples-using-mne-viz-plot-projs-topomap"]], "mne.viz.plot_raw": [[807, "mne-viz-plot-raw"]], "mne.viz.plot_raw_psd": [[808, "mne-viz-plot-raw-psd"]], "mne.viz.plot_regression_weights": [[809, "mne-viz-plot-regression-weights"]], "mne.viz.plot_sensors": [[810, "mne-viz-plot-sensors"]], "mne.viz.plot_snr_estimate": [[811, "mne-viz-plot-snr-estimate"]], "Examples using mne.viz.plot_snr_estimate": [[811, "examples-using-mne-viz-plot-snr-estimate"]], "mne.viz.plot_source_estimates": [[812, "mne-viz-plot-source-estimates"]], "Examples using mne.viz.plot_source_estimates": [[812, "examples-using-mne-viz-plot-source-estimates"]], "mne.viz.plot_sparse_source_estimates": [[813, "mne-viz-plot-sparse-source-estimates"]], "Examples using mne.viz.plot_sparse_source_estimates": [[813, "examples-using-mne-viz-plot-sparse-source-estimates"]], "mne.viz.plot_tfr_topomap": [[814, "mne-viz-plot-tfr-topomap"]], "mne.viz.plot_topo_image_epochs": [[815, "mne-viz-plot-topo-image-epochs"]], "mne.viz.plot_topomap": [[816, "mne-viz-plot-topomap"]], "Examples using mne.viz.plot_topomap": [[816, "examples-using-mne-viz-plot-topomap"]], "mne.viz.plot_vector_source_estimates": [[817, "mne-viz-plot-vector-source-estimates"]], "Examples using mne.viz.plot_vector_source_estimates": [[817, "examples-using-mne-viz-plot-vector-source-estimates"]], "mne.viz.plot_volume_source_estimates": [[818, "mne-viz-plot-volume-source-estimates"]], "mne.viz.set_3d_backend": [[819, "mne-viz-set-3d-backend"]], "mne.viz.set_3d_options": [[820, "mne-viz-set-3d-options"]], "mne.viz.set_3d_title": [[821, "mne-viz-set-3d-title"]], "Examples using mne.viz.set_3d_title": [[821, "examples-using-mne-viz-set-3d-title"]], "mne.viz.set_3d_view": [[822, "mne-viz-set-3d-view"]], "Examples using mne.viz.set_3d_view": [[822, "examples-using-mne-viz-set-3d-view"]], "mne.viz.set_browser_backend": [[823, "mne-viz-set-browser-backend"]], "mne.viz.snapshot_brain_montage": [[824, "mne-viz-snapshot-brain-montage"]], "Examples using mne.viz.snapshot_brain_montage": [[824, "examples-using-mne-viz-snapshot-brain-montage"]], "mne.viz.use_3d_backend": [[825, "mne-viz-use-3d-backend"]], "mne.viz.use_browser_backend": [[826, "mne-viz-use-browser-backend"]], "Examples using mne.viz.use_browser_backend": [[826, "examples-using-mne-viz-use-browser-backend"]], "mne.what": [[827, "mne-what"]], "mne.write_bem_solution": [[828, "mne-write-bem-solution"]], "mne.write_bem_surfaces": [[829, "mne-write-bem-surfaces"]], "mne.write_cov": [[830, "mne-write-cov"]], "mne.write_events": [[831, "mne-write-events"]], "mne.write_evokeds": [[832, "mne-write-evokeds"]], "mne.write_forward_solution": [[833, "mne-write-forward-solution"]], "mne.write_head_bem": [[834, "mne-write-head-bem"]], "Examples using mne.write_head_bem": [[834, "examples-using-mne-write-head-bem"]], "mne.write_label": [[835, "mne-write-label"]], "mne.write_labels_to_annot": [[836, "mne-write-labels-to-annot"]], "mne.write_proj": [[837, "mne-write-proj"]], "mne.write_source_spaces": [[838, "mne-write-source-spaces"]], "mne.write_surface": [[839, "mne-write-surface"]], "Examples using mne.write_surface": [[839, "examples-using-mne-write-surface"]], "mne.write_trans": [[840, "mne-write-trans"]], "Glossary": [[841, "glossary"]], "MNE-Python Homepage": [[842, "mne-python-homepage"]], "Advanced setup": [[843, "advanced-setup"]], "Working with Jupyter Notebooks and JupyterLab": [[843, "working-with-jupyter-notebooks-and-jupyterlab"]], "<i class=\"fa-brands fa-windows\"></i> Windows": [[843, null]], "Installing to a headless Linux server": [[843, "installing-to-a-headless-linux-server"]], "Using the development version": [[843, "using-the-development-version"]], "Other Python distributions": [[843, "other-python-distributions"]], "GPU acceleration with CUDA": [[843, "gpu-acceleration-with-cuda"]], "Off-screen rendering with MESA": [[843, "off-screen-rendering-with-mesa"]], "Troubleshooting 3D plots": [[843, "troubleshooting-3d-plots"]], "3D plotting trouble after upgrade on macOS": [[843, "d-plotting-trouble-after-upgrade-on-macos"]], "Testing your installation": [[844, "testing-your-installation"]], "Contributing guide": [[845, "contributing-guide"]], "Overview of contribution process": [[845, "overview-of-contribution-process"]], "Setting up your local development environment": [[845, "setting-up-your-local-development-environment"]], "Configuring git": [[845, "configuring-git"]], "GNU Make": [[845, "gnu-make"]], "Forking the MNE-Python repository": [[845, "forking-the-mne-python-repository"]], "Creating the virtual environment": [[845, "creating-the-virtual-environment"]], "Basic git commands": [[845, "basic-git-commands"]], "Connecting to GitHub with SSH (optional)": [[845, "connecting-to-github-with-ssh-optional"]], "MNE-Python coding conventions": [[845, "mne-python-coding-conventions"]], "General requirements": [[845, "general-requirements"]], "All new functionality must have test coverage": [[845, "all-new-functionality-must-have-test-coverage"]], "All new functionality must be documented": [[845, "all-new-functionality-must-be-documented"]], "Avoid API changes when possible": [[845, "avoid-api-changes-when-possible"]], "Deprecate with a decorator or a warning": [[845, "deprecate-with-a-decorator-or-a-warning"]], "Describe your changes in the changelog": [[845, "describe-your-changes-in-the-changelog"]], "First-time contributors": [[845, "first-time-contributors"]], "Recurring contributors": [[845, "recurring-contributors"]], "Test locally before opening pull requests (PRs)": [[845, "test-locally-before-opening-pull-requests-prs"]], "Make tests fast and thorough": [[845, "make-tests-fast-and-thorough"]], "Code style": [[845, "code-style"]], "Adhere to standard Python style guidelines": [[845, "adhere-to-standard-python-style-guidelines"]], "Use consistent variable naming": [[845, "use-consistent-variable-naming"]], "We (mostly) follow NumPy style for docstrings": [[845, "we-mostly-follow-numpy-style-for-docstrings"]], "Cross-reference everywhere": [[845, "cross-reference-everywhere"]], "Other style guidance": [[845, "other-style-guidance"]], "Code organization": [[845, "code-organization"]], "Importing": [[845, "importing"]], "Return types": [[845, "return-types"]], "Running the test suite": [[845, "running-the-test-suite"]], "Building the documentation": [[845, "building-the-documentation"]], "Modifying command-line tools": [[845, "modifying-command-line-tools"]], "GitHub workflow": [[845, "github-workflow"]], "Installing FreeSurfer": [[846, "installing-freesurfer"]], "Installing MNE-Python": [[847, "installing-mne-python"]], "MNE-Python installers": [[848, "mne-python-installers"]], "VS Code Setup": [[848, "vs-code-setup"]], "Install via pip or conda": [[849, "install-via-pip-or-conda"]], "Installing MNE-Python with all dependencies": [[849, "installing-mne-python-with-all-dependencies"]], "Installing a minimal MNE-Python with core functionality only": [[849, "installing-a-minimal-mne-python-with-core-functionality-only"]], "Installing a minimal MNE-Python with EEGLAB I/O support": [[849, "installing-a-minimal-mne-python-with-eeglab-i-o-support"]], "Installing MNE-Python for other scenarios": [[849, "installing-mne-python-for-other-scenarios"]], "Python IDEs": [[849, "python-ides"]], "Installing Python": [[850, "installing-python"]], "Installing MNE-C": [[851, "installing-mne-c"]], "System requirements": [[851, "system-requirements"]], "<i class=\"fa-brands fa-apple\"></i> macOS": [[851, null]], "Downloading and Installing MNE-C": [[851, "downloading-and-installing-mne-c"]], "Configuring MNE-C": [[851, "configuring-mne-c"]], "Testing MNE-C installation": [[851, "testing-mne-c-installation"]], "Troubleshooting MNE-C installation": [[851, "troubleshooting-mne-c-installation"]], "Overview of the MNE tools suite": [[852, "overview-of-the-mne-tools-suite"]], "Related software": [[852, "related-software"]], "What should I install?": [[852, "what-should-i-install"]], "Getting help": [[852, "getting-help"], [866, "getting-help"]], "Updating MNE-Python": [[853, "updating-mne-python"]], "Upgrading MNE-Python only": [[853, "upgrading-mne-python-only"]], "Upgrading all packages": [[853, "upgrading-all-packages"]], "Upgrading to the development version": [[853, "upgrading-to-the-development-version"]], "Inverse Solutions": [[854, "inverse-solutions"]], "Logging and Configuration": [[855, "logging-and-configuration"]], "Martinos Center setup": [[856, "martinos-center-setup"]], "MNE with CPP": [[857, "mne-with-cpp"]], "Most-used classes": [[858, "most-used-classes"]], "MRI Processing": [[859, "mri-processing"]], "How to cite MNE-Python": [[860, "how-to-cite-mne-python"]], "Citing the software": [[860, "citing-the-software"]], "Citing the inverse imaging algorithms": [[860, "citing-the-inverse-imaging-algorithms"]], "Citing other algorithms": [[860, "citing-other-algorithms"]], "The typical M/EEG workflow": [[861, "the-typical-m-eeg-workflow"]], "Overview": [[861, "overview"], [871, "overview"]], "Artifact suppression": [[861, "artifact-suppression"]], "SSP": [[861, "ssp"]], "ICA": [[861, "ica"]], "Epoching and evoked data": [[861, "epoching-and-evoked-data"]], "Rejection using annotations": [[861, "rejection-using-annotations"]], "Source localization": [[861, "source-localization"]], "Anatomical information": [[861, "anatomical-information"]], "Cortical surface reconstruction with FreeSurfer": [[861, "cortical-surface-reconstruction-with-freesurfer"]], "Setting up the source space": [[861, "setting-up-the-source-space"]], "Recommended subdivisions of an icosahedron and an octahedron for\n       the creation of source spaces. The approximate source spacing and\n       corresponding surface area have been calculated assuming a\n       1000-cm2 surface area per hemisphere.": [[861, "id9"]], "Creating the BEM model meshes": [[861, "creating-the-bem-model-meshes"]], "Setting up the head surface triangulation files": [[861, "setting-up-the-head-surface-triangulation-files"]], "Setting up the boundary-element model": [[861, "setting-up-the-boundary-element-model"]], "Aligning coordinate frames": [[861, "aligning-coordinate-frames"]], "Computing the forward solution": [[861, "computing-the-forward-solution"], [868, "computing-the-forward-solution"]], "Computing the noise-covariance matrix": [[861, "computing-the-noise-covariance-matrix"]], "Calculating the inverse operator": [[861, "calculating-the-inverse-operator"]], "Creating source estimates": [[861, "creating-source-estimates"]], "Group analyses": [[861, "group-analyses"]], "Datasets Overview": [[862, "datasets-overview"]], "Sample": [[862, "sample"]], "Trigger codes for the sample data set.": [[862, "id20"]], "Contents of the data set": [[862, "contents-of-the-data-set"]], "Contents of the MEG/sample directory.": [[862, "id21"]], "Overview of the contents of the subjects/sample directory.": [[862, "id22"]], "UCL OPM Auditory": [[862, "ucl-opm-auditory"]], "Brainstorm": [[862, "brainstorm"]], "Auditory": [[862, "auditory"]], "Resting state": [[862, "resting-state"]], "Median nerve": [[862, "median-nerve"]], "SPM faces": [[862, "spm-faces"]], "EEGBCI motor imagery": [[862, "eegbci-motor-imagery"]], "Somatosensory": [[862, "somatosensory"]], "Multimodal": [[862, "multimodal"]], "fNIRS motor": [[862, "fnirs-motor"]], "High frequency SEF": [[862, "high-frequency-sef"]], "Visual 92 object categories": [[862, "visual-92-object-categories"]], "mTRF Dataset": [[862, "mtrf-dataset"]], "Kiloword dataset": [[862, "kiloword-dataset"]], "4D Neuroimaging / BTi dataset": [[862, "d-neuroimaging-bti-dataset"]], "OPM": [[862, "opm"]], "The Sleep PolySomnoGraphic Database": [[862, "the-sleep-polysomnographic-database"]], "Reference channel noise MEG data set": [[862, "reference-channel-noise-meg-data-set"]], "Miscellaneous Datasets": [[862, "miscellaneous-datasets"]], "fsaverage": [[862, "fsaverage"]], "Infant template MRIs": [[862, "infant-template-mris"]], "ECoG Dataset": [[862, "ecog-dataset"]], "sEEG Dataset": [[862, "seeg-dataset"]], "LIMO Dataset": [[862, "limo-dataset"]], "ERP CORE Dataset": [[862, "erp-core-dataset"]], "SSVEP": [[862, "ssvep"]], "EYELINK": [[862, "eyelink"]], "Interactive versus scripted analysis": [[863, "interactive-versus-scripted-analysis"]], "Integration with the scientific python stack": [[863, "integration-with-the-scientific-python-stack"]], "Submodule-based organization": [[863, "submodule-based-organization"]], "(Mostly) unified API": [[863, "mostly-unified-api"]], "In-place operation": [[863, "in-place-operation"]], "MNE-Python Development": [[864, "mne-python-development"]], "Frequently Asked Questions (FAQ)": [[865, "frequently-asked-questions-faq"]], "General MNE-Python issues": [[865, "general-mne-python-issues"]], "Help! I can\u2019t get Python and MNE-Python working!": [[865, "help-i-can-t-get-python-and-mne-python-working"]], "I still can\u2019t get it to work!": [[865, "i-still-can-t-get-it-to-work"]], "I can\u2019t get PyVista/3D plotting to work under Windows": [[865, "i-can-t-get-pyvista-3d-plotting-to-work-under-windows"]], "Python runs on macOS extremely slow even on simple commands!": [[865, "python-runs-on-macos-extremely-slow-even-on-simple-commands"]], "How do I cite MNE?": [[865, "how-do-i-cite-mne"]], "I\u2019m not sure how to do X analysis step with my Y data\u2026": [[865, "i-m-not-sure-how-to-do-x-analysis-step-with-my-y-data"]], "I think I found a bug, what do I do?": [[865, "i-think-i-found-a-bug-what-do-i-do"]], "Why is it dangerous to \u201cpickle\u201d my MNE-Python objects and data for later use?": [[865, "why-is-it-dangerous-to-pickle-my-mne-python-objects-and-data-for-later-use"]], "I downloaded a dataset once, but MNE-Python is asking to download it again. Why?": [[865, "i-downloaded-a-dataset-once-but-mne-python-is-asking-to-download-it-again-why"]], "A function uses multiple CPU cores even though I didn\u2019t tell it to. Why?": [[865, "a-function-uses-multiple-cpu-cores-even-though-i-didn-t-tell-it-to-why"]], "I have a mystery FIF file, how do I read it?": [[865, "i-have-a-mystery-fif-file-how-do-i-read-it"]], "Resampling and decimating data": [[865, "resampling-and-decimating-data"]], "What are all these options for resampling, decimating, and binning data?": [[865, "what-are-all-these-options-for-resampling-decimating-and-binning-data"]], "Resampling raw data is taking forever! What do I do?": [[865, "resampling-raw-data-is-taking-forever-what-do-i-do"]], "Forward and Inverse Solution": [[865, "forward-and-inverse-solution"]], "My watershed BEM meshes look incorrect": [[865, "my-watershed-bem-meshes-look-incorrect"]], "Project Governance": [[867, "project-governance"]], "The Project": [[867, "the-project"]], "Governance model": [[867, "governance-model"]], "BDFL": [[867, "bdfl"]], "Steering Council": [[867, "steering-council"], [873, "steering-council"]], "Council membership": [[867, "council-membership"]], "Conflict of interest": [[867, "conflict-of-interest"]], "Private communications of the Council": [[867, "private-communications-of-the-council"]], "Council decision making": [[867, "council-decision-making"]], "Institutional Partners and funding": [[867, "institutional-partners-and-funding"]], "Document history": [[867, "document-history"], [873, "document-history"]], "Acknowledgements": [[867, "acknowledgements"]], "License": [[867, "license"]], "Algorithms and other implementation details": [[868, "algorithms-and-other-implementation-details"]], "Internal representation (units)": [[868, "internal-representation-units"]], "Floating-point precision": [[868, "floating-point-precision"]], "Supported channel types": [[868, "supported-channel-types"]], "Supported data formats": [[868, "supported-data-formats"]], "Supported formats for digitized 3D locations": [[868, "supported-formats-for-digitized-3d-locations"]], "Memory-efficient I/O": [[868, "memory-efficient-i-o"]], "Preloading continuous (raw) data": [[868, "preloading-continuous-raw-data"]], "Preloading epoched data": [[868, "preloading-epoched-data"]], "Loading data explicitly": [[868, "loading-data-explicitly"]], "Accessing data as NumPy arrays": [[868, "accessing-data-as-numpy-arrays"]], "Bad channel repair via interpolation": [[868, "bad-channel-repair-via-interpolation"]], "Maxwell filtering": [[868, "maxwell-filtering"]], "Signal-Space Projection (SSP)": [[868, "signal-space-projection-ssp"]], "General concepts": [[868, "general-concepts"]], "Estimation of the noise subspace": [[868, "estimation-of-the-noise-subspace"]], "EEG average electrode reference": [[868, "eeg-average-electrode-reference"]], "The Boundary Element Model (BEM)": [[868, "the-boundary-element-model-bem"]], "Using the watershed algorithm": [[868, "using-the-watershed-algorithm"]], "Using FLASH images": [[868, "using-flash-images"]], "Organizing MRI data into directories": [[868, "organizing-mri-data-into-directories"]], "Creating the surface tessellations": [[868, "creating-the-surface-tessellations"]], "Inspecting the meshes": [[868, "inspecting-the-meshes"]], "The forward solution": [[868, "the-forward-solution"]], "MEG/EEG and MRI coordinate systems": [[868, "meg-eeg-and-mri-coordinate-systems"]], "Coordinate transformations in FreeSurfer and MNE software packages.": [[868, "id18"]], "The head and device coordinate systems": [[868, "the-head-and-device-coordinate-systems"]], "Creating a surface-based source space": [[868, "creating-a-surface-based-source-space"]], "Creating a volumetric or discrete source space": [[868, "creating-a-volumetric-or-discrete-source-space"]], "Creating the BEM meshes": [[868, "creating-the-bem-meshes"]], "Topology checks": [[868, "topology-checks"]], "Computing the BEM geometry data": [[868, "computing-the-bem-geometry-data"]], "Coil geometry information": [[868, "coil-geometry-information"]], "The sensor coordinate system": [[868, "the-sensor-coordinate-system"]], "Calculation of the magnetic field": [[868, "calculation-of-the-magnetic-field"]], "Implemented coil geometries": [[868, "implemented-coil-geometries"]], "Normal coil descriptions.": [[868, "id20"]], "Accurate coil descriptions": [[868, "id21"]], "The coil definition file": [[868, "the-coil-definition-file"]], "Coil representation accuracies.": [[868, "id22"]], "Purpose": [[868, "purpose"]], "Implementation of software gradient compensation": [[868, "implementation-of-software-gradient-compensation"]], "The EEG sphere model definition file": [[868, "the-eeg-sphere-model-definition-file"]], "Structure of the default EEG model": [[868, "id23"]], "EEG forward solution in the sphere model": [[868, "eeg-forward-solution-in-the-sphere-model"]], "Averaging forward solutions": [[868, "averaging-forward-solutions"]], "The minimum-norm current estimates": [[868, "the-minimum-norm-current-estimates"]], "The linear inverse operator": [[868, "the-linear-inverse-operator"]], "Regularization": [[868, "regularization"]], "Whitening and scaling": [[868, "whitening-and-scaling"]], "Regularization of the noise-covariance matrix": [[868, "regularization-of-the-noise-covariance-matrix"]], "Computation of the solution": [[868, "computation-of-the-solution"]], "Noise normalization": [[868, "noise-normalization"]], "sLORETA": [[868, "sloreta"]], "eLORETA": [[868, "eloreta"]], "Predicted data": [[868, "predicted-data"]], "Cortical patch statistics": [[868, "cortical-patch-statistics"]], "Orientation constraints": [[868, "orientation-constraints"]], "Depth weighting": [[868, "depth-weighting"]], "Effective number of averages": [[868, "effective-number-of-averages"]], "Morphing and averaging source estimates": [[868, "morphing-and-averaging-source-estimates"]], "Why morphing?": [[868, "why-morphing"]], "The morphing maps": [[868, "the-morphing-maps"]], "About smoothing": [[868, "about-smoothing"]], "Documentation overview": [[869, "documentation-overview"]], "Getting started with Python": [[870, "getting-started-with-python"]], "MNE-MATLAB documentation": [[871, "mne-matlab-documentation"]], "High-level reading routines.": [[871, "id2"]], "Channel selection utilities.": [[871, "id3"]], "Coordinate transformation utilities.": [[871, "id4"]], "Basic reading routines.": [[871, "id5"]], "Writing routines.": [[871, "id6"]], "High-level data writing routines.": [[871, "id7"]], "Coil definition utilities.": [[871, "id8"]], "Routines for software gradient compensation and signal-space projection.": [[871, "id9"]], "High-level routines for reading MNE data files.": [[871, "id10"]], "High-level routines for writing MNE data files.": [[871, "id11"]], "Routines related to stc, w, and label files.": [[871, "id12"]], "Routines for reading FreeSurfer surfaces.": [[871, "id13"]], "Utility functions.": [[871, "id14"]], "Examples demonstrating the use of the toolbox.": [[871, "id15"]], "Some data structures": [[871, "some-data-structures"]], "FIFF constants.": [[871, "id16"]], "The tag structure.": [[871, "id17"]], "The taginfo structure.": [[871, "id18"]], "The directory structure.": [[871, "id19"]], "The id structure.": [[871, "id20"]], "The named matrix structure.": [[871, "id21"]], "The trans structure.": [[871, "id22"]], "The dig structure.": [[871, "id23"]], "The coildef structure. For more detailed information, see Coil geometry information.": [[871, "id24"]], "The ch structure.": [[871, "id25"]], "The proj structure.": [[871, "id26"]], "The comp structure.": [[871, "id27"]], "The meas info structure.": [[871, "id28"]], "The surf structure.": [[871, "id29"]], "The cov structure.": [[871, "id30"]], "The fwd structure.": [[871, "id31"]], "The inv structure. Note: The fields proj, whitener, reginv, and noisenorm are filled in by the routine mne_prepare_inverse_operator.": [[871, "id32"]], "On-line documentation for individual routines": [[871, "on-line-documentation-for-individual-routines"]], "Migrating from other analysis software": [[872, "migrating-from-other-analysis-software"]], "EEGLAB": [[872, "eeglab"]], "Potential pitfalls": [[872, "potential-pitfalls"]], "Current steering council and institutional partners": [[873, "current-steering-council-and-institutional-partners"]], "Benevolent Dictator for Life": [[873, "benevolent-dictator-for-life"]], "Community Participation Guidelines Response Leads": [[873, "community-participation-guidelines-response-leads"]], "Institutional Partners": [[873, "institutional-partners"]], "Roadmap": [[874, "roadmap"]], "Page contents": [[874, "page-contents"]], "Open": [[874, "open"]], "Time-frequency visualization": [[874, "time-frequency-visualization"]], "Clustering statistics API": [[874, "clustering-statistics-api"]], "Access to open EEG/MEG databases": [[874, "access-to-open-eeg-meg-databases"]], "Integrate OpenMEEG via improved Python bindings": [[874, "integrate-openmeeg-via-improved-python-bindings"]], "In progress": [[874, "in-progress"]], "Diversity, Equity, and Inclusion (DEI)": [[874, "diversity-equity-and-inclusion-dei"]], "First-class OPM support": [[874, "first-class-opm-support"]], "Deep source modeling": [[874, "deep-source-modeling"]], "Better sEEG/ECoG/DBS support": [[874, "better-seeg-ecog-dbs-support"]], "Time-frequency classes": [[874, "time-frequency-classes"]], "Pediatric and clinical MEG pipelines": [[874, "pediatric-and-clinical-meg-pipelines"]], "Statistics efficiency": [[874, "statistics-efficiency"]], "3D visualization": [[874, "d-visualization"]], "Documentation updates": [[874, "documentation-updates"]], "Completed": [[874, "completed"]], "Distributed computing support": [[874, "distributed-computing-support"]], "2D visualization": [[874, "id3"]], "Tutorial / example overhaul": [[874, "tutorial-example-overhaul"]], "Cluster computing images": [[874, "cluster-computing-images"]], "Python API Reference": [[876, "python-api-reference"]], "Reading raw data": [[877, "reading-raw-data"]], "Realtime": [[878, "realtime"]], "MNE-Report": [[879, "mne-report"]], "Sensor Space Data": [[880, "sensor-space-data"]], "Source Space Data": [[882, "source-space-data"]], "Statistics": [[883, "statistics"]], "Time-Frequency": [[884, "time-frequency"]], "What\u2019s new": [[886, "what-s-new"]], "Current (1.4.dev0)": [[886, "current-1-4-dev0"]], "Enhancements": [[886, "enhancements"], [886, "id3"], [886, "id6"], [886, "id10"], [886, "id13"], [886, "id17"], [886, "id21"], [886, "id25"], [886, "id29"]], "Bugs": [[886, "bugs"], [886, "id2"], [886, "id4"], [886, "id7"], [886, "id11"], [886, "id14"], [886, "id18"], [886, "id22"], [886, "id26"], [886, "id30"]], "API changes": [[886, "api-changes"], [886, "id5"], [886, "id8"], [886, "id15"], [886, "id19"], [886, "id23"], [886, "id27"], [886, "id31"]], "Version 1.3.1 (2023-02-23)": [[886, "version-1-3-1-2023-02-23"]], "Version 1.3.0 (2022-12-21)": [[886, "version-1-3-0-2022-12-21"]], "Authors": [[886, "authors"], [886, "id9"], [886, "id12"], [886, "id16"], [886, "id20"], [886, "id24"], [886, "id28"], [886, "id32"], [886, "id33"], [886, "id43"], [886, "id47"], [886, "id51"], [886, "id55"], [886, "id59"], [886, "id63"], [886, "id67"], [886, "id71"], [886, "id75"], [886, "id79"], [886, "id82"], [886, "id85"], [886, "id88"], [886, "id90"], [886, "id92"], [886, "id94"], [886, "id95"]], "Version 1.2.0 (2022-10-11)": [[886, "version-1-2-0-2022-10-11"]], "Version 1.1.0 (2022-08-03)": [[886, "version-1-1-0-2022-08-03"]], "API and behavior changes": [[886, "api-and-behavior-changes"]], "Version 1.0.0 (2022-03-21)": [[886, "version-1-0-0-2022-03-21"]], "Dependencies": [[886, "dependencies"]], "Version 0.24.0 (2021-11-03)": [[886, "version-0-24-0-2021-11-03"]], "Version 0.23.0 (2021-04-27)": [[886, "version-0-23-0-2021-04-27"]], "Version 0.22.0 (2020-12-17)": [[886, "version-0-22-0-2020-12-17"]], "Version 0.21 (2020-09-21)": [[886, "version-0-21-2020-09-21"]], "Version 0.20 (2020-03-27)": [[886, "version-0-20-2020-03-27"]], "Changelog": [[886, "changelog"], [886, "id34"], [886, "id37"], [886, "id40"], [886, "id44"], [886, "id48"], [886, "id52"], [886, "id56"], [886, "id60"], [886, "id64"], [886, "id68"], [886, "id72"], [886, "id76"], [886, "id80"], [886, "id83"], [886, "id86"], [886, "id89"], [886, "id91"], [886, "id93"]], "Bug": [[886, "bug"], [886, "id35"], [886, "id38"], [886, "id41"], [886, "id45"]], "API": [[886, "api"], [886, "id36"], [886, "id39"], [886, "id42"], [886, "id46"], [886, "id50"], [886, "id54"], [886, "id58"], [886, "id62"], [886, "id66"], [886, "id70"], [886, "id74"], [886, "id78"], [886, "id81"], [886, "id84"], [886, "id87"]], "Version 0.19 (2019-09-24)": [[886, "version-0-19-2019-09-24"]], "Version 0.18 (2019-05-19)": [[886, "version-0-18-2019-05-19"]], "Version 0.17 (2018-11-19)": [[886, "version-0-17-2018-11-19"]], "Version 0.16 (2018-05-01)": [[886, "version-0-16-2018-05-01"]], "Version 0.15 (2017-10-20)": [[886, "version-0-15-2017-10-20"]], "BUG": [[886, "id49"], [886, "id53"], [886, "id57"], [886, "id61"], [886, "id65"], [886, "id69"], [886, "id73"], [886, "id77"]], "Version 0.14 (2017-03-24)": [[886, "version-0-14-2017-03-24"]], "Version 0.13 (2016-09-27)": [[886, "version-0-13-2016-09-27"]], "Version 0.12 (2016-05-10)": [[886, "version-0-12-2016-05-10"]], "Version 0.11 (2015-12-24)": [[886, "version-0-11-2015-12-24"]], "Version 0.10 (2015-10-26)": [[886, "version-0-10-2015-10-26"]], "Version 0.9 (2015-05-22)": [[886, "version-0-9-2015-05-22"]], "Version 0.8 (2014-06-25)": [[886, "version-0-8-2014-06-25"]], "Version 0.7 (2013-11-26)": [[886, "version-0-7-2013-11-26"]], "Version 0.6 (2013-06-15)": [[886, "version-0-6-2013-06-15"]], "Version 0.5 (2012-12-27)": [[886, "version-0-5-2012-12-27"]], "Version 0.4 (2012-08-24)": [[886, "version-0-4-2012-08-24"]], "Version 0.3 (2012-03-23)": [[886, "version-0-3-2012-03-23"]], "Version 0.2 (2011-11-08)": [[886, "version-0-2-2011-11-08"]], "API changes summary": [[886, "api-changes-summary"]], "Version 0.1 (2011-09-23)": [[886, "version-0-1-2011-09-23"]]}, "indexentries": {"mne.datasets": [[249, "module-mne.datasets"]], "module": [[249, "module-mne.datasets"], [250, "module-mne.decoding"], [251, "module-mne.epochs"], [251, "module-mne.event"], [252, "module-mne.export"], [254, "module-mne.bem"], [854, "module-mne.beamformer"], [854, "module-mne.dipole"], [854, "module-mne.inverse_sparse"], [854, "module-mne.minimum_norm"], [855, "module-mne.cuda"], [855, "module-mne.utils"], [875, "module-mne.channels"], [875, "module-mne.chpi"], [875, "module-mne.filter"], [875, "module-mne.preprocessing"], [875, "module-mne.preprocessing.eyetracking"], [875, "module-mne.preprocessing.ieeg"], [875, "module-mne.preprocessing.nirs"], [875, "module-mne.transforms"], [876, "module-mne"], [877, "module-mne.io"], [877, "module-mne.io.kit"], [880, "module-mne.baseline"], [881, "module-mne.simulation"], [881, "module-mne.simulation.metrics"], [883, "module-mne.stats"], [884, "module-mne.time_frequency"], [884, "module-mne.time_frequency.tfr"], [885, "module-mne.viz"]], "mne.decoding": [[250, "module-mne.decoding"]], "mne.epochs": [[251, "module-mne.epochs"]], "mne.event": [[251, "module-mne.event"]], "mne.export": [[252, "module-mne.export"]], "mne.bem": [[254, "module-mne.bem"]], "acqparserfif (class in mne)": [[257, "mne.AcqParserFIF"]], "__getitem__() (mne.acqparserfif method)": [[257, "mne.AcqParserFIF.__getitem__"]], "__len__() (mne.acqparserfif method)": [[257, "mne.AcqParserFIF.__len__"]], "categories (mne.acqparserfif property)": [[257, "mne.AcqParserFIF.categories"]], "events (mne.acqparserfif property)": [[257, "mne.AcqParserFIF.events"]], "get_condition() (mne.acqparserfif method)": [[257, "mne.AcqParserFIF.get_condition"]], "annotations (class in mne)": [[258, "mne.Annotations"]], "__add__() (mne.annotations method)": [[258, "mne.Annotations.__add__"]], "__getitem__() (mne.annotations method)": [[258, "mne.Annotations.__getitem__"]], "__iter__() (mne.annotations method)": [[258, "mne.Annotations.__iter__"]], "__len__() (mne.annotations method)": [[258, "mne.Annotations.__len__"]], "append() (mne.annotations method)": [[258, "mne.Annotations.append"]], "copy() (mne.annotations method)": [[258, "mne.Annotations.copy"]], "crop() (mne.annotations method)": [[258, "mne.Annotations.crop"]], "delete() (mne.annotations method)": [[258, "mne.Annotations.delete"]], "orig_time (mne.annotations property)": [[258, "mne.Annotations.orig_time"]], "rename() (mne.annotations method)": [[258, "mne.Annotations.rename"]], "save() (mne.annotations method)": [[258, "mne.Annotations.save"]], "set_durations() (mne.annotations method)": [[258, "mne.Annotations.set_durations"]], "to_data_frame() (mne.annotations method)": [[258, "mne.Annotations.to_data_frame"]], "baseepochs (class in mne)": [[259, "mne.BaseEpochs"]], "bihemilabel (class in mne)": [[260, "mne.BiHemiLabel"]], "__add__() (mne.bihemilabel method)": [[260, "mne.BiHemiLabel.__add__"]], "__len__() (mne.bihemilabel method)": [[260, "mne.BiHemiLabel.__len__"]], "__sub__() (mne.bihemilabel method)": [[260, "mne.BiHemiLabel.__sub__"]], "covariance (class in mne)": [[261, "mne.Covariance"]], "__add__() (mne.covariance method)": [[261, "mne.Covariance.__add__"]], "__contains__() (mne.covariance method)": [[261, "mne.Covariance.__contains__"]], "__getitem__() (mne.covariance method)": [[261, "mne.Covariance.__getitem__"]], "__iter__() (mne.covariance method)": [[261, "mne.Covariance.__iter__"]], "__len__() (mne.covariance method)": [[261, "mne.Covariance.__len__"]], "as_diag() (mne.covariance method)": [[261, "mne.Covariance.as_diag"]], "ch_names (mne.covariance property)": [[261, "mne.Covariance.ch_names"]], "clear() (mne.covariance method)": [[261, "mne.Covariance.clear"]], "copy() (mne.covariance method)": [[261, "mne.Covariance.copy"]], "data (mne.covariance property)": [[261, "mne.Covariance.data"]], "fromkeys() (mne.covariance method)": [[261, "mne.Covariance.fromkeys"]], "get() (mne.covariance method)": [[261, "mne.Covariance.get"]], "items() (mne.covariance method)": [[261, "mne.Covariance.items"]], "keys() (mne.covariance method)": [[261, "mne.Covariance.keys"]], "nfree (mne.covariance property)": [[261, "mne.Covariance.nfree"]], "pick_channels() (mne.covariance method)": [[261, "mne.Covariance.pick_channels"]], "plot() (mne.covariance method)": [[261, "mne.Covariance.plot"]], "plot_topomap() (mne.covariance method)": [[261, "mne.Covariance.plot_topomap"]], "pop() (mne.covariance method)": [[261, "mne.Covariance.pop"]], "popitem() (mne.covariance method)": [[261, "mne.Covariance.popitem"]], "save() (mne.covariance method)": [[261, "mne.Covariance.save"]], "setdefault() (mne.covariance method)": [[261, "mne.Covariance.setdefault"]], "update() (mne.covariance method)": [[261, "mne.Covariance.update"]], "values() (mne.covariance method)": [[261, "mne.Covariance.values"]], "dipole (class in mne)": [[262, "mne.Dipole"]], "__getitem__() (mne.dipole method)": [[262, "mne.Dipole.__getitem__"]], "__len__() (mne.dipole method)": [[262, "mne.Dipole.__len__"]], "copy() (mne.dipole method)": [[262, "mne.Dipole.copy"]], "crop() (mne.dipole method)": [[262, "mne.Dipole.crop"]], "decimate() (mne.dipole method)": [[262, "mne.Dipole.decimate"]], "plot_amplitudes() (mne.dipole method)": [[262, "mne.Dipole.plot_amplitudes"]], "plot_locations() (mne.dipole method)": [[262, "mne.Dipole.plot_locations"]], "save() (mne.dipole method)": [[262, "mne.Dipole.save"]], "shift_time() (mne.dipole method)": [[262, "mne.Dipole.shift_time"]], "time_as_index() (mne.dipole method)": [[262, "mne.Dipole.time_as_index"]], "times (mne.dipole property)": [[262, "mne.Dipole.times"]], "tmax (mne.dipole property)": [[262, "mne.Dipole.tmax"]], "tmin (mne.dipole property)": [[262, "mne.Dipole.tmin"]], "to_mni() (mne.dipole method)": [[262, "mne.Dipole.to_mni"]], "to_mri() (mne.dipole method)": [[262, "mne.Dipole.to_mri"]], "to_volume_labels() (mne.dipole method)": [[262, "mne.Dipole.to_volume_labels"]], "dipolefixed (class in mne)": [[263, "mne.DipoleFixed"]], "ch_names (mne.dipolefixed property)": [[263, "mne.DipoleFixed.ch_names"]], "copy() (mne.dipolefixed method)": [[263, "mne.DipoleFixed.copy"]], "crop() (mne.dipolefixed method)": [[263, "mne.DipoleFixed.crop"]], "decimate() (mne.dipolefixed method)": [[263, "mne.DipoleFixed.decimate"]], "plot() (mne.dipolefixed method)": [[263, "mne.DipoleFixed.plot"]], "save() (mne.dipolefixed method)": [[263, "mne.DipoleFixed.save"]], "shift_time() (mne.dipolefixed method)": [[263, "mne.DipoleFixed.shift_time"]], "time_as_index() (mne.dipolefixed method)": [[263, "mne.DipoleFixed.time_as_index"]], "times (mne.dipolefixed property)": [[263, "mne.DipoleFixed.times"]], "tmax (mne.dipolefixed property)": [[263, "mne.DipoleFixed.tmax"]], "tmin (mne.dipolefixed property)": [[263, "mne.DipoleFixed.tmin"]], "epochs (class in mne)": [[264, "mne.Epochs"]], "__contains__() (mne.epochs method)": [[264, "mne.Epochs.__contains__"]], "__getitem__() (mne.epochs method)": [[264, "mne.Epochs.__getitem__"]], "__iter__() (mne.epochs method)": [[264, "mne.Epochs.__iter__"]], "__len__() (mne.epochs method)": [[264, "mne.Epochs.__len__"]], "add_annotations_to_metadata() (mne.epochs method)": [[264, "mne.Epochs.add_annotations_to_metadata"]], "add_channels() (mne.epochs method)": [[264, "mne.Epochs.add_channels"]], "add_proj() (mne.epochs method)": [[264, "mne.Epochs.add_proj"]], "add_reference_channels() (mne.epochs method)": [[264, "mne.Epochs.add_reference_channels"]], "anonymize() (mne.epochs method)": [[264, "mne.Epochs.anonymize"]], "apply_baseline() (mne.epochs method)": [[264, "mne.Epochs.apply_baseline"]], "apply_function() (mne.epochs method)": [[264, "mne.Epochs.apply_function"]], "apply_hilbert() (mne.epochs method)": [[264, "mne.Epochs.apply_hilbert"]], "apply_proj() (mne.epochs method)": [[264, "mne.Epochs.apply_proj"]], "as_type() (mne.epochs method)": [[264, "mne.Epochs.as_type"]], "average() (mne.epochs method)": [[264, "mne.Epochs.average"]], "ch_names (mne.epochs property)": [[264, "mne.Epochs.ch_names"]], "compensation_grade (mne.epochs property)": [[264, "mne.Epochs.compensation_grade"]], "compute_psd() (mne.epochs method)": [[264, "mne.Epochs.compute_psd"]], "copy() (mne.epochs method)": [[264, "mne.Epochs.copy"]], "crop() (mne.epochs method)": [[264, "mne.Epochs.crop"]], "decimate() (mne.epochs method)": [[264, "mne.Epochs.decimate"]], "del_proj() (mne.epochs method)": [[264, "mne.Epochs.del_proj"]], "drop() (mne.epochs method)": [[264, "mne.Epochs.drop"]], "drop_bad() (mne.epochs method)": [[264, "mne.Epochs.drop_bad"]], "drop_channels() (mne.epochs method)": [[264, "mne.Epochs.drop_channels"]], "drop_log_stats() (mne.epochs method)": [[264, "mne.Epochs.drop_log_stats"]], "equalize_event_counts() (mne.epochs method)": [[264, "mne.Epochs.equalize_event_counts"]], "export() (mne.epochs method)": [[264, "mne.Epochs.export"]], "filename (mne.epochs property)": [[264, "mne.Epochs.filename"]], "filter() (mne.epochs method)": [[264, "mne.Epochs.filter"]], "get_annotations_per_epoch() (mne.epochs method)": [[264, "mne.Epochs.get_annotations_per_epoch"]], "get_channel_types() (mne.epochs method)": [[264, "mne.Epochs.get_channel_types"]], "get_data() (mne.epochs method)": [[264, "mne.Epochs.get_data"]], "get_montage() (mne.epochs method)": [[264, "mne.Epochs.get_montage"]], "interpolate_bads() (mne.epochs method)": [[264, "mne.Epochs.interpolate_bads"]], "iter_evoked() (mne.epochs method)": [[264, "mne.Epochs.iter_evoked"]], "load_data() (mne.epochs method)": [[264, "mne.Epochs.load_data"]], "metadata (mne.epochs property)": [[264, "mne.Epochs.metadata"]], "next() (mne.epochs method)": [[264, "mne.Epochs.next"]], "pick() (mne.epochs method)": [[264, "mne.Epochs.pick"]], "pick_channels() (mne.epochs method)": [[264, "mne.Epochs.pick_channels"]], "pick_types() (mne.epochs method)": [[264, "mne.Epochs.pick_types"]], "plot() (mne.epochs method)": [[264, "mne.Epochs.plot"]], "plot_drop_log() (mne.epochs method)": [[264, "mne.Epochs.plot_drop_log"]], "plot_image() (mne.epochs method)": [[264, "mne.Epochs.plot_image"]], "plot_projs_topomap() (mne.epochs method)": [[264, "mne.Epochs.plot_projs_topomap"]], "plot_psd() (mne.epochs method)": [[264, "mne.Epochs.plot_psd"]], "plot_psd_topo() (mne.epochs method)": [[264, "mne.Epochs.plot_psd_topo"]], "plot_psd_topomap() (mne.epochs method)": [[264, "mne.Epochs.plot_psd_topomap"]], "plot_sensors() (mne.epochs method)": [[264, "mne.Epochs.plot_sensors"]], "plot_topo_image() (mne.epochs method)": [[264, "mne.Epochs.plot_topo_image"]], "proj (mne.epochs property)": [[264, "mne.Epochs.proj"]], "rename_channels() (mne.epochs method)": [[264, "mne.Epochs.rename_channels"]], "reorder_channels() (mne.epochs method)": [[264, "mne.Epochs.reorder_channels"]], "resample() (mne.epochs method)": [[264, "mne.Epochs.resample"]], "reset_drop_log_selection() (mne.epochs method)": [[264, "mne.Epochs.reset_drop_log_selection"]], "save() (mne.epochs method)": [[264, "mne.Epochs.save"]], "savgol_filter() (mne.epochs method)": [[264, "mne.Epochs.savgol_filter"]], "set_annotations() (mne.epochs method)": [[264, "mne.Epochs.set_annotations"]], "set_channel_types() (mne.epochs method)": [[264, "mne.Epochs.set_channel_types"]], "set_eeg_reference() (mne.epochs method)": [[264, "mne.Epochs.set_eeg_reference"]], "set_meas_date() (mne.epochs method)": [[264, "mne.Epochs.set_meas_date"]], "set_montage() (mne.epochs method)": [[264, "mne.Epochs.set_montage"]], "shift_time() (mne.epochs method)": [[264, "mne.Epochs.shift_time"]], "standard_error() (mne.epochs method)": [[264, "mne.Epochs.standard_error"]], "subtract_evoked() (mne.epochs method)": [[264, "mne.Epochs.subtract_evoked"]], "time_as_index() (mne.epochs method)": [[264, "mne.Epochs.time_as_index"]], "times (mne.epochs property)": [[264, "mne.Epochs.times"]], "tmax (mne.epochs property)": [[264, "mne.Epochs.tmax"]], "tmin (mne.epochs property)": [[264, "mne.Epochs.tmin"]], "to_data_frame() (mne.epochs method)": [[264, "mne.Epochs.to_data_frame"]], "epochsarray (class in mne)": [[265, "mne.EpochsArray"]], "__contains__() (mne.epochsarray method)": [[265, "mne.EpochsArray.__contains__"]], "__getitem__() (mne.epochsarray method)": [[265, "mne.EpochsArray.__getitem__"]], "__iter__() (mne.epochsarray method)": [[265, "mne.EpochsArray.__iter__"]], "__len__() (mne.epochsarray method)": [[265, "mne.EpochsArray.__len__"]], "add_annotations_to_metadata() (mne.epochsarray method)": [[265, "mne.EpochsArray.add_annotations_to_metadata"]], "add_channels() (mne.epochsarray method)": [[265, "mne.EpochsArray.add_channels"]], "add_proj() (mne.epochsarray method)": [[265, "mne.EpochsArray.add_proj"]], "add_reference_channels() (mne.epochsarray method)": [[265, "mne.EpochsArray.add_reference_channels"]], "anonymize() (mne.epochsarray method)": [[265, "mne.EpochsArray.anonymize"]], "apply_baseline() (mne.epochsarray method)": [[265, "mne.EpochsArray.apply_baseline"]], "apply_function() (mne.epochsarray method)": [[265, "mne.EpochsArray.apply_function"]], "apply_hilbert() (mne.epochsarray method)": [[265, "mne.EpochsArray.apply_hilbert"]], "apply_proj() (mne.epochsarray method)": [[265, "mne.EpochsArray.apply_proj"]], "as_type() (mne.epochsarray method)": [[265, "mne.EpochsArray.as_type"]], "average() (mne.epochsarray method)": [[265, "mne.EpochsArray.average"]], "ch_names (mne.epochsarray property)": [[265, "mne.EpochsArray.ch_names"]], "compensation_grade (mne.epochsarray property)": [[265, "mne.EpochsArray.compensation_grade"]], "compute_psd() (mne.epochsarray method)": [[265, "mne.EpochsArray.compute_psd"]], "copy() (mne.epochsarray method)": [[265, "mne.EpochsArray.copy"]], "crop() (mne.epochsarray method)": [[265, "mne.EpochsArray.crop"]], "decimate() (mne.epochsarray method)": [[265, "mne.EpochsArray.decimate"]], "del_proj() (mne.epochsarray method)": [[265, "mne.EpochsArray.del_proj"]], "drop() (mne.epochsarray method)": [[265, "mne.EpochsArray.drop"]], "drop_bad() (mne.epochsarray method)": [[265, "mne.EpochsArray.drop_bad"]], "drop_channels() (mne.epochsarray method)": [[265, "mne.EpochsArray.drop_channels"]], "drop_log_stats() (mne.epochsarray method)": [[265, "mne.EpochsArray.drop_log_stats"]], "equalize_event_counts() (mne.epochsarray method)": [[265, "mne.EpochsArray.equalize_event_counts"]], "export() (mne.epochsarray method)": [[265, "mne.EpochsArray.export"]], "filename (mne.epochsarray property)": [[265, "mne.EpochsArray.filename"]], "filter() (mne.epochsarray method)": [[265, "mne.EpochsArray.filter"]], "get_annotations_per_epoch() (mne.epochsarray method)": [[265, "mne.EpochsArray.get_annotations_per_epoch"]], "get_channel_types() (mne.epochsarray method)": [[265, "mne.EpochsArray.get_channel_types"]], "get_data() (mne.epochsarray method)": [[265, "mne.EpochsArray.get_data"]], "get_montage() (mne.epochsarray method)": [[265, "mne.EpochsArray.get_montage"]], "interpolate_bads() (mne.epochsarray method)": [[265, "mne.EpochsArray.interpolate_bads"]], "iter_evoked() (mne.epochsarray method)": [[265, "mne.EpochsArray.iter_evoked"]], "load_data() (mne.epochsarray method)": [[265, "mne.EpochsArray.load_data"]], "metadata (mne.epochsarray property)": [[265, "mne.EpochsArray.metadata"]], "next() (mne.epochsarray method)": [[265, "mne.EpochsArray.next"]], "pick() (mne.epochsarray method)": [[265, "mne.EpochsArray.pick"]], "pick_channels() (mne.epochsarray method)": [[265, "mne.EpochsArray.pick_channels"]], "pick_types() (mne.epochsarray method)": [[265, "mne.EpochsArray.pick_types"]], "plot() (mne.epochsarray method)": [[265, "mne.EpochsArray.plot"]], "plot_drop_log() (mne.epochsarray method)": [[265, "mne.EpochsArray.plot_drop_log"]], "plot_image() (mne.epochsarray method)": [[265, "mne.EpochsArray.plot_image"]], "plot_projs_topomap() (mne.epochsarray method)": [[265, "mne.EpochsArray.plot_projs_topomap"]], "plot_psd() (mne.epochsarray method)": [[265, "mne.EpochsArray.plot_psd"]], "plot_psd_topo() (mne.epochsarray method)": [[265, "mne.EpochsArray.plot_psd_topo"]], "plot_psd_topomap() (mne.epochsarray method)": [[265, "mne.EpochsArray.plot_psd_topomap"]], "plot_sensors() (mne.epochsarray method)": [[265, "mne.EpochsArray.plot_sensors"]], "plot_topo_image() (mne.epochsarray method)": [[265, "mne.EpochsArray.plot_topo_image"]], "proj (mne.epochsarray property)": [[265, "mne.EpochsArray.proj"]], "rename_channels() (mne.epochsarray method)": [[265, "mne.EpochsArray.rename_channels"]], "reorder_channels() (mne.epochsarray method)": [[265, "mne.EpochsArray.reorder_channels"]], "resample() (mne.epochsarray method)": [[265, "mne.EpochsArray.resample"]], "reset_drop_log_selection() (mne.epochsarray method)": [[265, "mne.EpochsArray.reset_drop_log_selection"]], "save() (mne.epochsarray method)": [[265, "mne.EpochsArray.save"]], "savgol_filter() (mne.epochsarray method)": [[265, "mne.EpochsArray.savgol_filter"]], "set_annotations() (mne.epochsarray method)": [[265, "mne.EpochsArray.set_annotations"]], "set_channel_types() (mne.epochsarray method)": [[265, "mne.EpochsArray.set_channel_types"]], "set_eeg_reference() (mne.epochsarray method)": [[265, "mne.EpochsArray.set_eeg_reference"]], "set_meas_date() (mne.epochsarray method)": [[265, "mne.EpochsArray.set_meas_date"]], "set_montage() (mne.epochsarray method)": [[265, "mne.EpochsArray.set_montage"]], "shift_time() (mne.epochsarray method)": [[265, "mne.EpochsArray.shift_time"]], "standard_error() (mne.epochsarray method)": [[265, "mne.EpochsArray.standard_error"]], "subtract_evoked() (mne.epochsarray method)": [[265, "mne.EpochsArray.subtract_evoked"]], "time_as_index() (mne.epochsarray method)": [[265, "mne.EpochsArray.time_as_index"]], "times (mne.epochsarray property)": [[265, "mne.EpochsArray.times"]], "tmax (mne.epochsarray property)": [[265, "mne.EpochsArray.tmax"]], "tmin (mne.epochsarray property)": [[265, "mne.EpochsArray.tmin"]], "to_data_frame() (mne.epochsarray method)": [[265, "mne.EpochsArray.to_data_frame"]], "evoked (class in mne)": [[266, "mne.Evoked"]], "__contains__() (mne.evoked method)": [[266, "mne.Evoked.__contains__"]], "__neg__() (mne.evoked method)": [[266, "mne.Evoked.__neg__"]], "add_channels() (mne.evoked method)": [[266, "mne.Evoked.add_channels"]], "add_proj() (mne.evoked method)": [[266, "mne.Evoked.add_proj"]], "add_reference_channels() (mne.evoked method)": [[266, "mne.Evoked.add_reference_channels"]], "animate_topomap() (mne.evoked method)": [[266, "mne.Evoked.animate_topomap"]], "anonymize() (mne.evoked method)": [[266, "mne.Evoked.anonymize"]], "apply_baseline() (mne.evoked method)": [[266, "mne.Evoked.apply_baseline"]], "apply_function() (mne.evoked method)": [[266, "mne.Evoked.apply_function"]], "apply_hilbert() (mne.evoked method)": [[266, "mne.Evoked.apply_hilbert"]], "apply_proj() (mne.evoked method)": [[266, "mne.Evoked.apply_proj"]], "as_type() (mne.evoked method)": [[266, "mne.Evoked.as_type"]], "ch_names (mne.evoked property)": [[266, "mne.Evoked.ch_names"]], "compensation_grade (mne.evoked property)": [[266, "mne.Evoked.compensation_grade"]], "compute_psd() (mne.evoked method)": [[266, "mne.Evoked.compute_psd"]], "copy() (mne.evoked method)": [[266, "mne.Evoked.copy"]], "crop() (mne.evoked method)": [[266, "mne.Evoked.crop"]], "data (mne.evoked property)": [[266, "mne.Evoked.data"]], "decimate() (mne.evoked method)": [[266, "mne.Evoked.decimate"]], "del_proj() (mne.evoked method)": [[266, "mne.Evoked.del_proj"]], "detrend() (mne.evoked method)": [[266, "mne.Evoked.detrend"]], "drop_channels() (mne.evoked method)": [[266, "mne.Evoked.drop_channels"]], "export() (mne.evoked method)": [[266, "mne.Evoked.export"]], "filter() (mne.evoked method)": [[266, "mne.Evoked.filter"]], "get_channel_types() (mne.evoked method)": [[266, "mne.Evoked.get_channel_types"]], "get_data() (mne.evoked method)": [[266, "mne.Evoked.get_data"]], "get_montage() (mne.evoked method)": [[266, "mne.Evoked.get_montage"]], "get_peak() (mne.evoked method)": [[266, "mne.Evoked.get_peak"]], "interpolate_bads() (mne.evoked method)": [[266, "mne.Evoked.interpolate_bads"]], "kind (mne.evoked property)": [[266, "mne.Evoked.kind"]], "pick() (mne.evoked method)": [[266, "mne.Evoked.pick"]], "pick_channels() (mne.evoked method)": [[266, "mne.Evoked.pick_channels"]], "pick_types() (mne.evoked method)": [[266, "mne.Evoked.pick_types"]], "plot() (mne.evoked method)": [[266, "mne.Evoked.plot"]], "plot_field() (mne.evoked method)": [[266, "mne.Evoked.plot_field"]], "plot_image() (mne.evoked method)": [[266, "mne.Evoked.plot_image"]], "plot_joint() (mne.evoked method)": [[266, "mne.Evoked.plot_joint"]], "plot_projs_topomap() (mne.evoked method)": [[266, "mne.Evoked.plot_projs_topomap"]], "plot_psd() (mne.evoked method)": [[266, "mne.Evoked.plot_psd"]], "plot_psd_topo() (mne.evoked method)": [[266, "mne.Evoked.plot_psd_topo"]], "plot_psd_topomap() (mne.evoked method)": [[266, "mne.Evoked.plot_psd_topomap"]], "plot_sensors() (mne.evoked method)": [[266, "mne.Evoked.plot_sensors"]], "plot_topo() (mne.evoked method)": [[266, "mne.Evoked.plot_topo"]], "plot_topomap() (mne.evoked method)": [[266, "mne.Evoked.plot_topomap"]], "plot_white() (mne.evoked method)": [[266, "mne.Evoked.plot_white"]], "proj (mne.evoked property)": [[266, "mne.Evoked.proj"]], "rename_channels() (mne.evoked method)": [[266, "mne.Evoked.rename_channels"]], "reorder_channels() (mne.evoked method)": [[266, "mne.Evoked.reorder_channels"]], "resample() (mne.evoked method)": [[266, "mne.Evoked.resample"]], "save() (mne.evoked method)": [[266, "mne.Evoked.save"]], "savgol_filter() (mne.evoked method)": [[266, "mne.Evoked.savgol_filter"]], "set_channel_types() (mne.evoked method)": [[266, "mne.Evoked.set_channel_types"]], "set_eeg_reference() (mne.evoked method)": [[266, "mne.Evoked.set_eeg_reference"]], "set_meas_date() (mne.evoked method)": [[266, "mne.Evoked.set_meas_date"]], "set_montage() (mne.evoked method)": [[266, "mne.Evoked.set_montage"]], "shift_time() (mne.evoked method)": [[266, "mne.Evoked.shift_time"]], "time_as_index() (mne.evoked method)": [[266, "mne.Evoked.time_as_index"]], "times (mne.evoked property)": [[266, "mne.Evoked.times"]], "tmax (mne.evoked property)": [[266, "mne.Evoked.tmax"]], "tmin (mne.evoked property)": [[266, "mne.Evoked.tmin"]], "to_data_frame() (mne.evoked method)": [[266, "mne.Evoked.to_data_frame"]], "evokedarray (class in mne)": [[267, "mne.EvokedArray"]], "__contains__() (mne.evokedarray method)": [[267, "mne.EvokedArray.__contains__"]], "__neg__() (mne.evokedarray method)": [[267, "mne.EvokedArray.__neg__"]], "add_channels() (mne.evokedarray method)": [[267, "mne.EvokedArray.add_channels"]], "add_proj() (mne.evokedarray method)": [[267, "mne.EvokedArray.add_proj"]], "add_reference_channels() (mne.evokedarray method)": [[267, "mne.EvokedArray.add_reference_channels"]], "animate_topomap() (mne.evokedarray method)": [[267, "mne.EvokedArray.animate_topomap"]], "anonymize() (mne.evokedarray method)": [[267, "mne.EvokedArray.anonymize"]], "apply_baseline() (mne.evokedarray method)": [[267, "mne.EvokedArray.apply_baseline"]], "apply_function() (mne.evokedarray method)": [[267, "mne.EvokedArray.apply_function"]], "apply_hilbert() (mne.evokedarray method)": [[267, "mne.EvokedArray.apply_hilbert"]], "apply_proj() (mne.evokedarray method)": [[267, "mne.EvokedArray.apply_proj"]], "as_type() (mne.evokedarray method)": [[267, "mne.EvokedArray.as_type"]], "ch_names (mne.evokedarray property)": [[267, "mne.EvokedArray.ch_names"]], "compensation_grade (mne.evokedarray property)": [[267, "mne.EvokedArray.compensation_grade"]], "compute_psd() (mne.evokedarray method)": [[267, "mne.EvokedArray.compute_psd"]], "copy() (mne.evokedarray method)": [[267, "mne.EvokedArray.copy"]], "crop() (mne.evokedarray method)": [[267, "mne.EvokedArray.crop"]], "data (mne.evokedarray property)": [[267, "mne.EvokedArray.data"]], "decimate() (mne.evokedarray method)": [[267, "mne.EvokedArray.decimate"]], "del_proj() (mne.evokedarray method)": [[267, "mne.EvokedArray.del_proj"]], "detrend() (mne.evokedarray method)": [[267, "mne.EvokedArray.detrend"]], "drop_channels() (mne.evokedarray method)": [[267, "mne.EvokedArray.drop_channels"]], "export() (mne.evokedarray method)": [[267, "mne.EvokedArray.export"]], "filter() (mne.evokedarray method)": [[267, "mne.EvokedArray.filter"]], "get_channel_types() (mne.evokedarray method)": [[267, "mne.EvokedArray.get_channel_types"]], "get_data() (mne.evokedarray method)": [[267, "mne.EvokedArray.get_data"]], "get_montage() (mne.evokedarray method)": [[267, "mne.EvokedArray.get_montage"]], "get_peak() (mne.evokedarray method)": [[267, "mne.EvokedArray.get_peak"]], "interpolate_bads() (mne.evokedarray method)": [[267, "mne.EvokedArray.interpolate_bads"]], "kind (mne.evokedarray property)": [[267, "mne.EvokedArray.kind"]], "pick() (mne.evokedarray method)": [[267, "mne.EvokedArray.pick"]], "pick_channels() (mne.evokedarray method)": [[267, "mne.EvokedArray.pick_channels"]], "pick_types() (mne.evokedarray method)": [[267, "mne.EvokedArray.pick_types"]], "plot() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot"]], "plot_field() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_field"]], "plot_image() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_image"]], "plot_joint() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_joint"]], "plot_projs_topomap() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_projs_topomap"]], "plot_psd() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_psd"]], "plot_psd_topo() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_psd_topo"]], "plot_psd_topomap() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_psd_topomap"]], "plot_sensors() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_sensors"]], "plot_topo() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_topo"]], "plot_topomap() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_topomap"]], "plot_white() (mne.evokedarray method)": [[267, "mne.EvokedArray.plot_white"]], "proj (mne.evokedarray property)": [[267, "mne.EvokedArray.proj"]], "rename_channels() (mne.evokedarray method)": [[267, "mne.EvokedArray.rename_channels"]], "reorder_channels() (mne.evokedarray method)": [[267, "mne.EvokedArray.reorder_channels"]], "resample() (mne.evokedarray method)": [[267, "mne.EvokedArray.resample"]], "save() (mne.evokedarray method)": [[267, "mne.EvokedArray.save"]], "savgol_filter() (mne.evokedarray method)": [[267, "mne.EvokedArray.savgol_filter"]], "set_channel_types() (mne.evokedarray method)": [[267, "mne.EvokedArray.set_channel_types"]], "set_eeg_reference() (mne.evokedarray method)": [[267, "mne.EvokedArray.set_eeg_reference"]], "set_meas_date() (mne.evokedarray method)": [[267, "mne.EvokedArray.set_meas_date"]], "set_montage() (mne.evokedarray method)": [[267, "mne.EvokedArray.set_montage"]], "shift_time() (mne.evokedarray method)": [[267, "mne.EvokedArray.shift_time"]], "time_as_index() (mne.evokedarray method)": [[267, "mne.EvokedArray.time_as_index"]], "times (mne.evokedarray property)": [[267, "mne.EvokedArray.times"]], "tmax (mne.evokedarray property)": [[267, "mne.EvokedArray.tmax"]], "tmin (mne.evokedarray property)": [[267, "mne.EvokedArray.tmin"]], "to_data_frame() (mne.evokedarray method)": [[267, "mne.EvokedArray.to_data_frame"]], "forward (class in mne)": [[268, "mne.Forward"]], "copy() (mne.forward method)": [[268, "mne.Forward.copy"]], "pick_channels() (mne.forward method)": [[268, "mne.Forward.pick_channels"]], "info (class in mne)": [[269, "mne.Info"]], "__contains__() (mne.info method)": [[269, "mne.Info.__contains__"]], "__getitem__() (mne.info method)": [[269, "mne.Info.__getitem__"]], "__iter__() (mne.info method)": [[269, "mne.Info.__iter__"]], "__len__() (mne.info method)": [[269, "mne.Info.__len__"]], "clear() (mne.info method)": [[269, "mne.Info.clear"]], "compensation_grade (mne.info property)": [[269, "mne.Info.compensation_grade"]], "copy() (mne.info method)": [[269, "mne.Info.copy"]], "fromkeys() (mne.info method)": [[269, "mne.Info.fromkeys"]], "get() (mne.info method)": [[269, "mne.Info.get"]], "get_channel_types() (mne.info method)": [[269, "mne.Info.get_channel_types"]], "get_montage() (mne.info method)": [[269, "mne.Info.get_montage"]], "items() (mne.info method)": [[269, "mne.Info.items"]], "keys() (mne.info method)": [[269, "mne.Info.keys"]], "normalize_proj() (mne.info method)": [[269, "mne.Info.normalize_proj"]], "pop() (mne.info method)": [[269, "mne.Info.pop"]], "popitem() (mne.info method)": [[269, "mne.Info.popitem"]], "save() (mne.info method)": [[269, "mne.Info.save"]], "set_montage() (mne.info method)": [[269, "mne.Info.set_montage"]], "setdefault() (mne.info method)": [[269, "mne.Info.setdefault"]], "update() (mne.info method)": [[269, "mne.Info.update"]], "values() (mne.info method)": [[269, "mne.Info.values"]], "label (class in mne)": [[270, "mne.Label"]], "__add__() (mne.label method)": [[270, "mne.Label.__add__"]], "__len__() (mne.label method)": [[270, "mne.Label.__len__"]], "__sub__() (mne.label method)": [[270, "mne.Label.__sub__"]], "center_of_mass() (mne.label method)": [[270, "mne.Label.center_of_mass"]], "compute_area() (mne.label method)": [[270, "mne.Label.compute_area"]], "copy() (mne.label method)": [[270, "mne.Label.copy"]], "distances_to_outside() (mne.label method)": [[270, "mne.Label.distances_to_outside"]], "fill() (mne.label method)": [[270, "mne.Label.fill"]], "get_tris() (mne.label method)": [[270, "mne.Label.get_tris"]], "get_vertices_used() (mne.label method)": [[270, "mne.Label.get_vertices_used"]], "morph() (mne.label method)": [[270, "mne.Label.morph"]], "restrict() (mne.label method)": [[270, "mne.Label.restrict"]], "save() (mne.label method)": [[270, "mne.Label.save"]], "smooth() (mne.label method)": [[270, "mne.Label.smooth"]], "split() (mne.label method)": [[270, "mne.Label.split"]], "mixedsourceestimate (class in mne)": [[271, "mne.MixedSourceEstimate"]], "__add__() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.__add__"]], "__div__() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.__div__"]], "__mul__() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.__mul__"]], "__neg__() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.__neg__"]], "__sub__() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.apply_baseline"]], "bin() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.bin"]], "copy() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.copy"]], "crop() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.crop"]], "data (mne.mixedsourceestimate property)": [[271, "mne.MixedSourceEstimate.data"]], "decimate() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.decimate"]], "extract_label_time_course() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.get_peak"]], "mean() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.mean"]], "plot() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.plot"]], "resample() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.resample"]], "save() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.save"]], "sfreq (mne.mixedsourceestimate property)": [[271, "mne.MixedSourceEstimate.sfreq"]], "shape (mne.mixedsourceestimate property)": [[271, "mne.MixedSourceEstimate.shape"]], "shift_time() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.shift_time"]], "sqrt() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.sqrt"]], "sum() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.sum"]], "surface() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.surface"]], "time_as_index() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.time_as_index"]], "times (mne.mixedsourceestimate property)": [[271, "mne.MixedSourceEstimate.times"]], "tmax (mne.mixedsourceestimate property)": [[271, "mne.MixedSourceEstimate.tmax"]], "tmin (mne.mixedsourceestimate property)": [[271, "mne.MixedSourceEstimate.tmin"]], "to_data_frame() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.to_data_frame"]], "transform() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.transform"]], "transform_data() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.transform_data"]], "tstep (mne.mixedsourceestimate property)": [[271, "mne.MixedSourceEstimate.tstep"]], "volume() (mne.mixedsourceestimate method)": [[271, "mne.MixedSourceEstimate.volume"]], "mixedvectorsourceestimate (class in mne)": [[272, "mne.MixedVectorSourceEstimate"]], "__add__() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.__add__"]], "__div__() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.__div__"]], "__mul__() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.__mul__"]], "__neg__() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.__neg__"]], "__sub__() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.apply_baseline"]], "bin() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.bin"]], "copy() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.copy"]], "crop() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.crop"]], "data (mne.mixedvectorsourceestimate property)": [[272, "mne.MixedVectorSourceEstimate.data"]], "decimate() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.decimate"]], "extract_label_time_course() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.get_peak"]], "magnitude() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.magnitude"]], "mean() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.mean"]], "plot() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.plot"]], "project() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.project"]], "resample() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.resample"]], "save() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.save"]], "sfreq (mne.mixedvectorsourceestimate property)": [[272, "mne.MixedVectorSourceEstimate.sfreq"]], "shape (mne.mixedvectorsourceestimate property)": [[272, "mne.MixedVectorSourceEstimate.shape"]], "shift_time() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.shift_time"]], "sqrt() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.sqrt"]], "sum() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.sum"]], "surface() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.surface"]], "time_as_index() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.time_as_index"]], "times (mne.mixedvectorsourceestimate property)": [[272, "mne.MixedVectorSourceEstimate.times"]], "tmax (mne.mixedvectorsourceestimate property)": [[272, "mne.MixedVectorSourceEstimate.tmax"]], "tmin (mne.mixedvectorsourceestimate property)": [[272, "mne.MixedVectorSourceEstimate.tmin"]], "to_data_frame() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.to_data_frame"]], "transform() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.transform"]], "transform_data() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.transform_data"]], "tstep (mne.mixedvectorsourceestimate property)": [[272, "mne.MixedVectorSourceEstimate.tstep"]], "volume() (mne.mixedvectorsourceestimate method)": [[272, "mne.MixedVectorSourceEstimate.volume"]], "projection (class in mne)": [[273, "mne.Projection"]], "__contains__() (mne.projection method)": [[273, "mne.Projection.__contains__"]], "__getitem__() (mne.projection method)": [[273, "mne.Projection.__getitem__"]], "__iter__() (mne.projection method)": [[273, "mne.Projection.__iter__"]], "__len__() (mne.projection method)": [[273, "mne.Projection.__len__"]], "clear() (mne.projection method)": [[273, "mne.Projection.clear"]], "copy() (mne.projection method)": [[273, "mne.Projection.copy"]], "fromkeys() (mne.projection method)": [[273, "mne.Projection.fromkeys"]], "get() (mne.projection method)": [[273, "mne.Projection.get"]], "items() (mne.projection method)": [[273, "mne.Projection.items"]], "keys() (mne.projection method)": [[273, "mne.Projection.keys"]], "plot_topomap() (mne.projection method)": [[273, "mne.Projection.plot_topomap"]], "pop() (mne.projection method)": [[273, "mne.Projection.pop"]], "popitem() (mne.projection method)": [[273, "mne.Projection.popitem"]], "setdefault() (mne.projection method)": [[273, "mne.Projection.setdefault"]], "update() (mne.projection method)": [[273, "mne.Projection.update"]], "values() (mne.projection method)": [[273, "mne.Projection.values"]], "report (class in mne)": [[274, "mne.Report"]], "__len__() (mne.report method)": [[274, "mne.Report.__len__"]], "add_bem() (mne.report method)": [[274, "mne.Report.add_bem"]], "add_code() (mne.report method)": [[274, "mne.Report.add_code"]], "add_covariance() (mne.report method)": [[274, "mne.Report.add_covariance"]], "add_custom_css() (mne.report method)": [[274, "mne.Report.add_custom_css"]], "add_custom_js() (mne.report method)": [[274, "mne.Report.add_custom_js"]], "add_epochs() (mne.report method)": [[274, "mne.Report.add_epochs"]], "add_events() (mne.report method)": [[274, "mne.Report.add_events"]], "add_evokeds() (mne.report method)": [[274, "mne.Report.add_evokeds"]], "add_figure() (mne.report method)": [[274, "mne.Report.add_figure"]], "add_forward() (mne.report method)": [[274, "mne.Report.add_forward"]], "add_html() (mne.report method)": [[274, "mne.Report.add_html"]], "add_ica() (mne.report method)": [[274, "mne.Report.add_ica"]], "add_image() (mne.report method)": [[274, "mne.Report.add_image"]], "add_inverse_operator() (mne.report method)": [[274, "mne.Report.add_inverse_operator"]], "add_projs() (mne.report method)": [[274, "mne.Report.add_projs"]], "add_raw() (mne.report method)": [[274, "mne.Report.add_raw"]], "add_stc() (mne.report method)": [[274, "mne.Report.add_stc"]], "add_sys_info() (mne.report method)": [[274, "mne.Report.add_sys_info"]], "add_trans() (mne.report method)": [[274, "mne.Report.add_trans"]], "html (mne.report property)": [[274, "mne.Report.html"]], "parse_folder() (mne.report method)": [[274, "mne.Report.parse_folder"]], "remove() (mne.report method)": [[274, "mne.Report.remove"]], "save() (mne.report method)": [[274, "mne.Report.save"]], "tags (mne.report property)": [[274, "mne.Report.tags"]], "sourceestimate (class in mne)": [[275, "mne.SourceEstimate"]], "__add__() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.__add__"]], "__div__() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.__div__"]], "__mul__() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.__mul__"]], "__neg__() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.__neg__"]], "__sub__() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.__sub__"]], "apply_baseline() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.apply_baseline"]], "bin() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.bin"]], "center_of_mass() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.center_of_mass"]], "copy() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.copy"]], "crop() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.crop"]], "data (mne.sourceestimate property)": [[275, "mne.SourceEstimate.data"]], "decimate() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.decimate"]], "estimate_snr() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.estimate_snr"]], "expand() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.expand"]], "extract_label_time_course() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.extract_label_time_course"]], "get_peak() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.get_peak"]], "in_label() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.in_label"]], "lh_data (mne.sourceestimate property)": [[275, "mne.SourceEstimate.lh_data"]], "lh_vertno (mne.sourceestimate property)": [[275, "mne.SourceEstimate.lh_vertno"]], "mean() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.mean"]], "plot() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.plot"]], "resample() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.resample"]], "rh_data (mne.sourceestimate property)": [[275, "mne.SourceEstimate.rh_data"]], "rh_vertno (mne.sourceestimate property)": [[275, "mne.SourceEstimate.rh_vertno"]], "save() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.save"]], "sfreq (mne.sourceestimate property)": [[275, "mne.SourceEstimate.sfreq"]], "shape (mne.sourceestimate property)": [[275, "mne.SourceEstimate.shape"]], "shift_time() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.shift_time"]], "sqrt() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.sqrt"]], "sum() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.sum"]], "time_as_index() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.time_as_index"]], "times (mne.sourceestimate property)": [[275, "mne.SourceEstimate.times"]], "tmax (mne.sourceestimate property)": [[275, "mne.SourceEstimate.tmax"]], "tmin (mne.sourceestimate property)": [[275, "mne.SourceEstimate.tmin"]], "to_data_frame() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.to_data_frame"]], "to_original_src() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.to_original_src"]], "transform() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.transform"]], "transform_data() (mne.sourceestimate method)": [[275, "mne.SourceEstimate.transform_data"]], "tstep (mne.sourceestimate property)": [[275, "mne.SourceEstimate.tstep"]], "sourcemorph (class in mne)": [[276, "mne.SourceMorph"]], "apply() (mne.sourcemorph method)": [[276, "mne.SourceMorph.apply"]], "compute_vol_morph_mat() (mne.sourcemorph method)": [[276, "mne.SourceMorph.compute_vol_morph_mat"]], "save() (mne.sourcemorph method)": [[276, "mne.SourceMorph.save"]], "sourcespaces (class in mne)": [[277, "mne.SourceSpaces"]], "__add__() (mne.sourcespaces method)": [[277, "mne.SourceSpaces.__add__"]], "__getitem__() (mne.sourcespaces method)": [[277, "mne.SourceSpaces.__getitem__"]], "copy() (mne.sourcespaces method)": [[277, "mne.SourceSpaces.copy"]], "export_volume() (mne.sourcespaces method)": [[277, "mne.SourceSpaces.export_volume"]], "plot() (mne.sourcespaces method)": [[277, "mne.SourceSpaces.plot"]], "save() (mne.sourcespaces method)": [[277, "mne.SourceSpaces.save"]], "vectorsourceestimate (class in mne)": [[278, "mne.VectorSourceEstimate"]], "__add__() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.__add__"]], "__div__() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.__div__"]], "__mul__() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.__mul__"]], "__neg__() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.__neg__"]], "__sub__() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.__sub__"]], "apply_baseline() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.apply_baseline"]], "bin() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.bin"]], "copy() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.copy"]], "crop() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.crop"]], "data (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.data"]], "decimate() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.decimate"]], "expand() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.expand"]], "extract_label_time_course() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.get_peak"]], "in_label() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.in_label"]], "lh_data (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.lh_data"]], "lh_vertno (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.lh_vertno"]], "magnitude() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.magnitude"]], "mean() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.mean"]], "plot() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.plot"]], "project() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.project"]], "resample() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.resample"]], "rh_data (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.rh_data"]], "rh_vertno (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.rh_vertno"]], "save() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.save"]], "sfreq (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.sfreq"]], "shape (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.shape"]], "shift_time() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.shift_time"]], "sqrt() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.sqrt"]], "sum() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.sum"]], "time_as_index() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.time_as_index"]], "times (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.times"]], "tmax (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.tmax"]], "tmin (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.tmin"]], "to_data_frame() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.to_data_frame"]], "to_original_src() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.to_original_src"]], "transform() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.transform"]], "transform_data() (mne.vectorsourceestimate method)": [[278, "mne.VectorSourceEstimate.transform_data"]], "tstep (mne.vectorsourceestimate property)": [[278, "mne.VectorSourceEstimate.tstep"]], "volsourceestimate (class in mne)": [[279, "mne.VolSourceEstimate"]], "__add__() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.__add__"]], "__div__() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.__div__"]], "__mul__() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.__mul__"]], "__neg__() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.__neg__"]], "__sub__() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.__sub__"]], "apply_baseline() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.apply_baseline"]], "as_volume() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.as_volume"]], "bin() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.bin"]], "copy() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.copy"]], "crop() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.crop"]], "data (mne.volsourceestimate property)": [[279, "mne.VolSourceEstimate.data"]], "decimate() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.decimate"]], "extract_label_time_course() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.get_peak"]], "in_label() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.in_label"]], "mean() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.mean"]], "plot() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.plot"]], "plot_3d() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.plot_3d"]], "resample() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.resample"]], "save() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.save"]], "save_as_volume() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.save_as_volume"]], "sfreq (mne.volsourceestimate property)": [[279, "mne.VolSourceEstimate.sfreq"]], "shape (mne.volsourceestimate property)": [[279, "mne.VolSourceEstimate.shape"]], "shift_time() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.shift_time"]], "sqrt() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.sqrt"]], "sum() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.sum"]], "time_as_index() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.time_as_index"]], "times (mne.volsourceestimate property)": [[279, "mne.VolSourceEstimate.times"]], "tmax (mne.volsourceestimate property)": [[279, "mne.VolSourceEstimate.tmax"]], "tmin (mne.volsourceestimate property)": [[279, "mne.VolSourceEstimate.tmin"]], "to_data_frame() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.to_data_frame"]], "transform() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.transform"]], "transform_data() (mne.volsourceestimate method)": [[279, "mne.VolSourceEstimate.transform_data"]], "tstep (mne.volsourceestimate property)": [[279, "mne.VolSourceEstimate.tstep"]], "volvectorsourceestimate (class in mne)": [[280, "mne.VolVectorSourceEstimate"]], "__add__() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.__add__"]], "__div__() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.__div__"]], "__mul__() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.__mul__"]], "__neg__() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.__neg__"]], "__sub__() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.__sub__"]], "apply_baseline() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.apply_baseline"]], "as_volume() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.as_volume"]], "bin() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.bin"]], "copy() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.copy"]], "crop() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.crop"]], "data (mne.volvectorsourceestimate property)": [[280, "mne.VolVectorSourceEstimate.data"]], "decimate() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.decimate"]], "extract_label_time_course() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.extract_label_time_course"]], "get_peak() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.get_peak"]], "in_label() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.in_label"]], "magnitude() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.magnitude"]], "mean() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.mean"]], "plot() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.plot"]], "plot_3d() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.plot_3d"]], "project() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.project"]], "resample() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.resample"]], "save() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.save"]], "save_as_volume() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.save_as_volume"]], "sfreq (mne.volvectorsourceestimate property)": [[280, "mne.VolVectorSourceEstimate.sfreq"]], "shape (mne.volvectorsourceestimate property)": [[280, "mne.VolVectorSourceEstimate.shape"]], "shift_time() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.shift_time"]], "sqrt() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.sqrt"]], "sum() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.sum"]], "time_as_index() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.time_as_index"]], "times (mne.volvectorsourceestimate property)": [[280, "mne.VolVectorSourceEstimate.times"]], "tmax (mne.volvectorsourceestimate property)": [[280, "mne.VolVectorSourceEstimate.tmax"]], "tmin (mne.volvectorsourceestimate property)": [[280, "mne.VolVectorSourceEstimate.tmin"]], "to_data_frame() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.to_data_frame"]], "transform() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.transform"]], "transform_data() (mne.volvectorsourceestimate method)": [[280, "mne.VolVectorSourceEstimate.transform_data"]], "tstep (mne.volvectorsourceestimate property)": [[280, "mne.VolVectorSourceEstimate.tstep"]], "add_reference_channels() (in module mne)": [[281, "mne.add_reference_channels"]], "add_source_space_distances() (in module mne)": [[282, "mne.add_source_space_distances"]], "annotations_from_events() (in module mne)": [[283, "mne.annotations_from_events"]], "apply_forward() (in module mne)": [[284, "mne.apply_forward"]], "apply_forward_raw() (in module mne)": [[285, "mne.apply_forward_raw"]], "average_forward_solutions() (in module mne)": [[286, "mne.average_forward_solutions"]], "rescale() (in module mne.baseline)": [[287, "mne.baseline.rescale"]], "beamformer (class in mne.beamformer)": [[288, "mne.beamformer.Beamformer"]], "__contains__() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.__contains__"]], "__getitem__() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.__getitem__"]], "__iter__() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.__iter__"]], "__len__() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.__len__"]], "clear() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.clear"]], "copy() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.copy"]], "fromkeys() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.fromkeys"]], "get() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.get"]], "items() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.items"]], "keys() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.keys"]], "pop() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.pop"]], "popitem() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.popitem"]], "save() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.save"]], "setdefault() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.setdefault"]], "update() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.update"]], "values() (mne.beamformer.beamformer method)": [[288, "mne.beamformer.Beamformer.values"]], "apply_dics() (in module mne.beamformer)": [[289, "mne.beamformer.apply_dics"]], "apply_dics_csd() (in module mne.beamformer)": [[290, "mne.beamformer.apply_dics_csd"]], "apply_dics_epochs() (in module mne.beamformer)": [[291, "mne.beamformer.apply_dics_epochs"]], "apply_dics_tfr_epochs() (in module mne.beamformer)": [[292, "mne.beamformer.apply_dics_tfr_epochs"]], "apply_lcmv() (in module mne.beamformer)": [[293, "mne.beamformer.apply_lcmv"]], "apply_lcmv_cov() (in module mne.beamformer)": [[294, "mne.beamformer.apply_lcmv_cov"]], "apply_lcmv_epochs() (in module mne.beamformer)": [[295, "mne.beamformer.apply_lcmv_epochs"]], "apply_lcmv_raw() (in module mne.beamformer)": [[296, "mne.beamformer.apply_lcmv_raw"]], "make_dics() (in module mne.beamformer)": [[297, "mne.beamformer.make_dics"]], "make_lcmv() (in module mne.beamformer)": [[298, "mne.beamformer.make_lcmv"]], "make_lcmv_resolution_matrix() (in module mne.beamformer)": [[299, "mne.beamformer.make_lcmv_resolution_matrix"]], "rap_music() (in module mne.beamformer)": [[300, "mne.beamformer.rap_music"]], "read_beamformer() (in module mne.beamformer)": [[301, "mne.beamformer.read_beamformer"]], "conductormodel (class in mne.bem)": [[302, "mne.bem.ConductorModel"]], "__contains__() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.__contains__"]], "__getitem__() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.__getitem__"]], "__iter__() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.__iter__"]], "__len__() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.__len__"]], "clear() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.clear"]], "copy() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.copy"]], "fromkeys() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.fromkeys"]], "get() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.get"]], "items() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.items"]], "keys() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.keys"]], "pop() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.pop"]], "popitem() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.popitem"]], "radius (mne.bem.conductormodel property)": [[302, "mne.bem.ConductorModel.radius"]], "setdefault() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.setdefault"]], "update() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.update"]], "values() (mne.bem.conductormodel method)": [[302, "mne.bem.ConductorModel.values"]], "convert_flash_mris() (in module mne.bem)": [[303, "mne.bem.convert_flash_mris"]], "distance_to_bem() (in module mne.bem)": [[304, "mne.bem.distance_to_bem"]], "fit_sphere_to_headshape() (in module mne.bem)": [[305, "mne.bem.fit_sphere_to_headshape"]], "get_fitting_dig() (in module mne.bem)": [[306, "mne.bem.get_fitting_dig"]], "make_flash_bem() (in module mne.bem)": [[307, "mne.bem.make_flash_bem"]], "make_scalp_surfaces() (in module mne.bem)": [[308, "mne.bem.make_scalp_surfaces"]], "make_watershed_bem() (in module mne.bem)": [[309, "mne.bem.make_watershed_bem"]], "channel_indices_by_type() (in module mne)": [[310, "mne.channel_indices_by_type"]], "channel_type() (in module mne)": [[311, "mne.channel_type"]], "digmontage (class in mne.channels)": [[312, "mne.channels.DigMontage"]], "__add__() (mne.channels.digmontage method)": [[312, "mne.channels.DigMontage.__add__"]], "add_estimated_fiducials() (mne.channels.digmontage method)": [[312, "mne.channels.DigMontage.add_estimated_fiducials"]], "add_mni_fiducials() (mne.channels.digmontage method)": [[312, "mne.channels.DigMontage.add_mni_fiducials"]], "apply_trans() (mne.channels.digmontage method)": [[312, "mne.channels.DigMontage.apply_trans"]], "copy() (mne.channels.digmontage method)": [[312, "mne.channels.DigMontage.copy"]], "get_positions() (mne.channels.digmontage method)": [[312, "mne.channels.DigMontage.get_positions"]], "plot() (mne.channels.digmontage method)": [[312, "mne.channels.DigMontage.plot"]], "remove_fiducials() (mne.channels.digmontage method)": [[312, "mne.channels.DigMontage.remove_fiducials"]], "rename_channels() (mne.channels.digmontage method)": [[312, "mne.channels.DigMontage.rename_channels"]], "save() (mne.channels.digmontage method)": [[312, "mne.channels.DigMontage.save"]], "layout (class in mne.channels)": [[313, "mne.channels.Layout"]], "plot() (mne.channels.layout method)": [[313, "mne.channels.Layout.plot"]], "save() (mne.channels.layout method)": [[313, "mne.channels.Layout.save"]], "combine_channels() (in module mne.channels)": [[314, "mne.channels.combine_channels"]], "compute_dev_head_t() (in module mne.channels)": [[315, "mne.channels.compute_dev_head_t"]], "compute_native_head_t() (in module mne.channels)": [[316, "mne.channels.compute_native_head_t"]], "equalize_channels() (in module mne.channels)": [[317, "mne.channels.equalize_channels"]], "find_ch_adjacency() (in module mne.channels)": [[318, "mne.channels.find_ch_adjacency"]], "find_layout() (in module mne.channels)": [[319, "mne.channels.find_layout"]], "fix_mag_coil_types() (in module mne.channels)": [[320, "mne.channels.fix_mag_coil_types"]], "generate_2d_layout() (in module mne.channels)": [[321, "mne.channels.generate_2d_layout"]], "get_builtin_ch_adjacencies() (in module mne.channels)": [[322, "mne.channels.get_builtin_ch_adjacencies"]], "get_builtin_montages() (in module mne.channels)": [[323, "mne.channels.get_builtin_montages"]], "make_1020_channel_selections() (in module mne.channels)": [[324, "mne.channels.make_1020_channel_selections"]], "make_dig_montage() (in module mne.channels)": [[325, "mne.channels.make_dig_montage"]], "make_eeg_layout() (in module mne.channels)": [[326, "mne.channels.make_eeg_layout"]], "make_grid_layout() (in module mne.channels)": [[327, "mne.channels.make_grid_layout"]], "make_standard_montage() (in module mne.channels)": [[328, "mne.channels.make_standard_montage"]], "read_ch_adjacency() (in module mne.channels)": [[329, "mne.channels.read_ch_adjacency"]], "read_custom_montage() (in module mne.channels)": [[330, "mne.channels.read_custom_montage"]], "read_dig_captrak() (in module mne.channels)": [[331, "mne.channels.read_dig_captrak"]], "read_dig_dat() (in module mne.channels)": [[332, "mne.channels.read_dig_dat"]], "read_dig_egi() (in module mne.channels)": [[333, "mne.channels.read_dig_egi"]], "read_dig_fif() (in module mne.channels)": [[334, "mne.channels.read_dig_fif"]], "read_dig_hpts() (in module mne.channels)": [[335, "mne.channels.read_dig_hpts"]], "read_dig_localite() (in module mne.channels)": [[336, "mne.channels.read_dig_localite"]], "read_dig_polhemus_isotrak() (in module mne.channels)": [[337, "mne.channels.read_dig_polhemus_isotrak"]], "read_layout() (in module mne.channels)": [[338, "mne.channels.read_layout"]], "read_polhemus_fastscan() (in module mne.channels)": [[339, "mne.channels.read_polhemus_fastscan"]], "rename_channels() (in module mne.channels)": [[340, "mne.channels.rename_channels"]], "compute_chpi_amplitudes() (in module mne.chpi)": [[341, "mne.chpi.compute_chpi_amplitudes"]], "compute_chpi_locs() (in module mne.chpi)": [[342, "mne.chpi.compute_chpi_locs"]], "compute_chpi_snr() (in module mne.chpi)": [[343, "mne.chpi.compute_chpi_snr"]], "compute_head_pos() (in module mne.chpi)": [[344, "mne.chpi.compute_head_pos"]], "extract_chpi_locs_ctf() (in module mne.chpi)": [[345, "mne.chpi.extract_chpi_locs_ctf"]], "extract_chpi_locs_kit() (in module mne.chpi)": [[346, "mne.chpi.extract_chpi_locs_kit"]], "filter_chpi() (in module mne.chpi)": [[347, "mne.chpi.filter_chpi"]], "get_active_chpi() (in module mne.chpi)": [[348, "mne.chpi.get_active_chpi"]], "get_chpi_info() (in module mne.chpi)": [[349, "mne.chpi.get_chpi_info"]], "head_pos_to_trans_rot_t() (in module mne.chpi)": [[350, "mne.chpi.head_pos_to_trans_rot_t"]], "read_head_pos() (in module mne.chpi)": [[351, "mne.chpi.read_head_pos"]], "write_head_pos() (in module mne.chpi)": [[352, "mne.chpi.write_head_pos"]], "combine_evoked() (in module mne)": [[353, "mne.combine_evoked"]], "compute_covariance() (in module mne)": [[354, "mne.compute_covariance"]], "compute_proj_epochs() (in module mne)": [[355, "mne.compute_proj_epochs"]], "compute_proj_evoked() (in module mne)": [[356, "mne.compute_proj_evoked"]], "compute_proj_raw() (in module mne)": [[357, "mne.compute_proj_raw"]], "compute_rank() (in module mne)": [[358, "mne.compute_rank"]], "compute_raw_covariance() (in module mne)": [[359, "mne.compute_raw_covariance"]], "compute_source_morph() (in module mne)": [[360, "mne.compute_source_morph"]], "concatenate_epochs() (in module mne)": [[361, "mne.concatenate_epochs"]], "concatenate_events() (in module mne)": [[362, "mne.concatenate_events"]], "concatenate_raws() (in module mne)": [[363, "mne.concatenate_raws"]], "convert_forward_solution() (in module mne)": [[364, "mne.convert_forward_solution"]], "coregistration (class in mne.coreg)": [[365, "mne.coreg.Coregistration"]], "compute_dig_mri_distances() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.compute_dig_mri_distances"]], "fit_fiducials() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.fit_fiducials"]], "fit_icp() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.fit_icp"]], "omit_head_shape_points() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.omit_head_shape_points"]], "reset() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.reset"]], "scale (mne.coreg.coregistration property)": [[365, "mne.coreg.Coregistration.scale"]], "set_fid_match() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.set_fid_match"]], "set_grow_hair() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.set_grow_hair"]], "set_rotation() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.set_rotation"]], "set_scale() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.set_scale"]], "set_scale_mode() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.set_scale_mode"]], "set_translation() (mne.coreg.coregistration method)": [[365, "mne.coreg.Coregistration.set_translation"]], "trans (mne.coreg.coregistration property)": [[365, "mne.coreg.Coregistration.trans"]], "estimate_head_mri_t() (in module mne.coreg)": [[366, "mne.coreg.estimate_head_mri_t"]], "get_mni_fiducials() (in module mne.coreg)": [[367, "mne.coreg.get_mni_fiducials"]], "count_events() (in module mne)": [[368, "mne.count_events"]], "compute_whitener() (in module mne.cov)": [[369, "mne.cov.compute_whitener"]], "prepare_noise_cov() (in module mne.cov)": [[370, "mne.cov.prepare_noise_cov"]], "regularize() (in module mne.cov)": [[371, "mne.cov.regularize"]], "create_default_subject() (in module mne)": [[372, "mne.create_default_subject"]], "create_info() (in module mne)": [[373, "mne.create_info"]], "get_cuda_memory() (in module mne.cuda)": [[374, "mne.cuda.get_cuda_memory"]], "init_cuda() (in module mne.cuda)": [[375, "mne.cuda.init_cuda"]], "set_cuda_device() (in module mne.cuda)": [[376, "mne.cuda.set_cuda_device"]], "data_path() (in module mne.datasets.brainstorm.bst_auditory)": [[377, "mne.datasets.brainstorm.bst_auditory.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_raw)": [[378, "mne.datasets.brainstorm.bst_raw.data_path"]], "data_path() (in module mne.datasets.brainstorm.bst_resting)": [[379, "mne.datasets.brainstorm.bst_resting.data_path"]], "load_data() (in module mne.datasets.eegbci)": [[380, "mne.datasets.eegbci.load_data"]], "standardize() (in module mne.datasets.eegbci)": [[381, "mne.datasets.eegbci.standardize"]], "data_path() (in module mne.datasets.epilepsy_ecog)": [[382, "mne.datasets.epilepsy_ecog.data_path"]], "data_path() (in module mne.datasets.erp_core)": [[383, "mne.datasets.erp_core.data_path"]], "data_path() (in module mne.datasets.eyelink)": [[384, "mne.datasets.eyelink.data_path"]], "fetch_aparc_sub_parcellation() (in module mne.datasets)": [[385, "mne.datasets.fetch_aparc_sub_parcellation"]], "fetch_dataset() (in module mne.datasets)": [[386, "mne.datasets.fetch_dataset"]], "fetch_fsaverage() (in module mne.datasets)": [[387, "mne.datasets.fetch_fsaverage"]], "fetch_hcp_mmp_parcellation() (in module mne.datasets)": [[388, "mne.datasets.fetch_hcp_mmp_parcellation"]], "fetch_infant_template() (in module mne.datasets)": [[389, "mne.datasets.fetch_infant_template"]], "fetch_phantom() (in module mne.datasets)": [[390, "mne.datasets.fetch_phantom"]], "data_path() (in module mne.datasets.fnirs_motor)": [[391, "mne.datasets.fnirs_motor.data_path"]], "has_dataset() (in module mne.datasets)": [[392, "mne.datasets.has_dataset"]], "data_path() (in module mne.datasets.hf_sef)": [[393, "mne.datasets.hf_sef.data_path"]], "data_path() (in module mne.datasets.kiloword)": [[394, "mne.datasets.kiloword.data_path"]], "load_data() (in module mne.datasets.limo)": [[395, "mne.datasets.limo.load_data"]], "data_path() (in module mne.datasets.misc)": [[396, "mne.datasets.misc.data_path"]], "data_path() (in module mne.datasets.mtrf)": [[397, "mne.datasets.mtrf.data_path"]], "data_path() (in module mne.datasets.multimodal)": [[398, "mne.datasets.multimodal.data_path"]], "data_path() (in module mne.datasets.opm)": [[399, "mne.datasets.opm.data_path"]], "data_path() (in module mne.datasets.phantom_4dbti)": [[400, "mne.datasets.phantom_4dbti.data_path"]], "data_path() (in module mne.datasets.refmeg_noise)": [[401, "mne.datasets.refmeg_noise.data_path"]], "data_path() (in module mne.datasets.sample)": [[402, "mne.datasets.sample.data_path"]], "fetch_data() (in module mne.datasets.sleep_physionet.age)": [[403, "mne.datasets.sleep_physionet.age.fetch_data"]], "fetch_data() (in module mne.datasets.sleep_physionet.temazepam)": [[404, "mne.datasets.sleep_physionet.temazepam.fetch_data"]], "data_path() (in module mne.datasets.somato)": [[405, "mne.datasets.somato.data_path"]], "data_path() (in module mne.datasets.spm_face)": [[406, "mne.datasets.spm_face.data_path"]], "data_path() (in module mne.datasets.ssvep)": [[407, "mne.datasets.ssvep.data_path"]], "data_path() (in module mne.datasets.ucl_opm_auditory)": [[408, "mne.datasets.ucl_opm_auditory.data_path"]], "data_path() (in module mne.datasets.visual_92_categories)": [[409, "mne.datasets.visual_92_categories.data_path"]], "decimate_surface() (in module mne)": [[410, "mne.decimate_surface"]], "csp (class in mne.decoding)": [[411, "mne.decoding.CSP"]], "fit() (mne.decoding.csp method)": [[411, "mne.decoding.CSP.fit"]], "fit_transform() (mne.decoding.csp method)": [[411, "mne.decoding.CSP.fit_transform"]], "get_params() (mne.decoding.csp method)": [[411, "mne.decoding.CSP.get_params"]], "plot_filters() (mne.decoding.csp method)": [[411, "mne.decoding.CSP.plot_filters"]], "plot_patterns() (mne.decoding.csp method)": [[411, "mne.decoding.CSP.plot_patterns"]], "set_params() (mne.decoding.csp method)": [[411, "mne.decoding.CSP.set_params"]], "transform() (mne.decoding.csp method)": [[411, "mne.decoding.CSP.transform"]], "ems (class in mne.decoding)": [[412, "mne.decoding.EMS"]], "fit() (mne.decoding.ems method)": [[412, "mne.decoding.EMS.fit"]], "fit_transform() (mne.decoding.ems method)": [[412, "mne.decoding.EMS.fit_transform"]], "get_params() (mne.decoding.ems method)": [[412, "mne.decoding.EMS.get_params"]], "set_params() (mne.decoding.ems method)": [[412, "mne.decoding.EMS.set_params"]], "transform() (mne.decoding.ems method)": [[412, "mne.decoding.EMS.transform"]], "filterestimator (class in mne.decoding)": [[413, "mne.decoding.FilterEstimator"]], "fit() (mne.decoding.filterestimator method)": [[413, "mne.decoding.FilterEstimator.fit"]], "fit_transform() (mne.decoding.filterestimator method)": [[413, "mne.decoding.FilterEstimator.fit_transform"]], "transform() (mne.decoding.filterestimator method)": [[413, "mne.decoding.FilterEstimator.transform"]], "generalizingestimator (class in mne.decoding)": [[414, "mne.decoding.GeneralizingEstimator"]], "decision_function() (mne.decoding.generalizingestimator method)": [[414, "mne.decoding.GeneralizingEstimator.decision_function"]], "fit() (mne.decoding.generalizingestimator method)": [[414, "mne.decoding.GeneralizingEstimator.fit"]], "fit_transform() (mne.decoding.generalizingestimator method)": [[414, "mne.decoding.GeneralizingEstimator.fit_transform"]], "get_params() (mne.decoding.generalizingestimator method)": [[414, "mne.decoding.GeneralizingEstimator.get_params"]], "predict() (mne.decoding.generalizingestimator method)": [[414, "mne.decoding.GeneralizingEstimator.predict"]], "predict_proba() (mne.decoding.generalizingestimator method)": [[414, "mne.decoding.GeneralizingEstimator.predict_proba"]], "score() (mne.decoding.generalizingestimator method)": [[414, "mne.decoding.GeneralizingEstimator.score"]], "set_params() (mne.decoding.generalizingestimator method)": [[414, "mne.decoding.GeneralizingEstimator.set_params"]], "transform() (mne.decoding.generalizingestimator method)": [[414, "mne.decoding.GeneralizingEstimator.transform"]], "linearmodel (class in mne.decoding)": [[415, "mne.decoding.LinearModel"]], "decision_function() (mne.decoding.linearmodel method)": [[415, "mne.decoding.LinearModel.decision_function"]], "fit() (mne.decoding.linearmodel method)": [[415, "mne.decoding.LinearModel.fit"]], "fit_transform() (mne.decoding.linearmodel method)": [[415, "mne.decoding.LinearModel.fit_transform"]], "get_params() (mne.decoding.linearmodel method)": [[415, "mne.decoding.LinearModel.get_params"]], "predict() (mne.decoding.linearmodel method)": [[415, "mne.decoding.LinearModel.predict"]], "predict_proba() (mne.decoding.linearmodel method)": [[415, "mne.decoding.LinearModel.predict_proba"]], "score() (mne.decoding.linearmodel method)": [[415, "mne.decoding.LinearModel.score"]], "set_params() (mne.decoding.linearmodel method)": [[415, "mne.decoding.LinearModel.set_params"]], "transform() (mne.decoding.linearmodel method)": [[415, "mne.decoding.LinearModel.transform"]], "psdestimator (class in mne.decoding)": [[416, "mne.decoding.PSDEstimator"]], "fit() (mne.decoding.psdestimator method)": [[416, "mne.decoding.PSDEstimator.fit"]], "fit_transform() (mne.decoding.psdestimator method)": [[416, "mne.decoding.PSDEstimator.fit_transform"]], "transform() (mne.decoding.psdestimator method)": [[416, "mne.decoding.PSDEstimator.transform"]], "receptivefield (class in mne.decoding)": [[417, "mne.decoding.ReceptiveField"]], "fit() (mne.decoding.receptivefield method)": [[417, "mne.decoding.ReceptiveField.fit"]], "get_params() (mne.decoding.receptivefield method)": [[417, "mne.decoding.ReceptiveField.get_params"]], "predict() (mne.decoding.receptivefield method)": [[417, "mne.decoding.ReceptiveField.predict"]], "score() (mne.decoding.receptivefield method)": [[417, "mne.decoding.ReceptiveField.score"]], "set_params() (mne.decoding.receptivefield method)": [[417, "mne.decoding.ReceptiveField.set_params"]], "spoc (class in mne.decoding)": [[418, "mne.decoding.SPoC"]], "fit() (mne.decoding.spoc method)": [[418, "mne.decoding.SPoC.fit"]], "fit_transform() (mne.decoding.spoc method)": [[418, "mne.decoding.SPoC.fit_transform"]], "get_params() (mne.decoding.spoc method)": [[418, "mne.decoding.SPoC.get_params"]], "plot_filters() (mne.decoding.spoc method)": [[418, "mne.decoding.SPoC.plot_filters"]], "plot_patterns() (mne.decoding.spoc method)": [[418, "mne.decoding.SPoC.plot_patterns"]], "set_params() (mne.decoding.spoc method)": [[418, "mne.decoding.SPoC.set_params"]], "transform() (mne.decoding.spoc method)": [[418, "mne.decoding.SPoC.transform"]], "ssd (class in mne.decoding)": [[419, "mne.decoding.SSD"]], "apply() (mne.decoding.ssd method)": [[419, "mne.decoding.SSD.apply"]], "fit() (mne.decoding.ssd method)": [[419, "mne.decoding.SSD.fit"]], "fit_transform() (mne.decoding.ssd method)": [[419, "mne.decoding.SSD.fit_transform"]], "get_params() (mne.decoding.ssd method)": [[419, "mne.decoding.SSD.get_params"]], "get_spectral_ratio() (mne.decoding.ssd method)": [[419, "mne.decoding.SSD.get_spectral_ratio"]], "inverse_transform() (mne.decoding.ssd method)": [[419, "mne.decoding.SSD.inverse_transform"]], "set_params() (mne.decoding.ssd method)": [[419, "mne.decoding.SSD.set_params"]], "transform() (mne.decoding.ssd method)": [[419, "mne.decoding.SSD.transform"]], "scaler (class in mne.decoding)": [[420, "mne.decoding.Scaler"]], "fit() (mne.decoding.scaler method)": [[420, "mne.decoding.Scaler.fit"]], "fit_transform() (mne.decoding.scaler method)": [[420, "mne.decoding.Scaler.fit_transform"]], "get_params() (mne.decoding.scaler method)": [[420, "mne.decoding.Scaler.get_params"]], "inverse_transform() (mne.decoding.scaler method)": [[420, "mne.decoding.Scaler.inverse_transform"]], "set_params() (mne.decoding.scaler method)": [[420, "mne.decoding.Scaler.set_params"]], "transform() (mne.decoding.scaler method)": [[420, "mne.decoding.Scaler.transform"]], "slidingestimator (class in mne.decoding)": [[421, "mne.decoding.SlidingEstimator"]], "decision_function() (mne.decoding.slidingestimator method)": [[421, "mne.decoding.SlidingEstimator.decision_function"]], "fit() (mne.decoding.slidingestimator method)": [[421, "mne.decoding.SlidingEstimator.fit"]], "fit_transform() (mne.decoding.slidingestimator method)": [[421, "mne.decoding.SlidingEstimator.fit_transform"]], "get_params() (mne.decoding.slidingestimator method)": [[421, "mne.decoding.SlidingEstimator.get_params"]], "predict() (mne.decoding.slidingestimator method)": [[421, "mne.decoding.SlidingEstimator.predict"]], "predict_proba() (mne.decoding.slidingestimator method)": [[421, "mne.decoding.SlidingEstimator.predict_proba"]], "score() (mne.decoding.slidingestimator method)": [[421, "mne.decoding.SlidingEstimator.score"]], "set_params() (mne.decoding.slidingestimator method)": [[421, "mne.decoding.SlidingEstimator.set_params"]], "transform() (mne.decoding.slidingestimator method)": [[421, "mne.decoding.SlidingEstimator.transform"]], "temporalfilter (class in mne.decoding)": [[422, "mne.decoding.TemporalFilter"]], "fit() (mne.decoding.temporalfilter method)": [[422, "mne.decoding.TemporalFilter.fit"]], "fit_transform() (mne.decoding.temporalfilter method)": [[422, "mne.decoding.TemporalFilter.fit_transform"]], "transform() (mne.decoding.temporalfilter method)": [[422, "mne.decoding.TemporalFilter.transform"]], "timedelayingridge (class in mne.decoding)": [[423, "mne.decoding.TimeDelayingRidge"]], "fit() (mne.decoding.timedelayingridge method)": [[423, "mne.decoding.TimeDelayingRidge.fit"]], "get_params() (mne.decoding.timedelayingridge method)": [[423, "mne.decoding.TimeDelayingRidge.get_params"]], "predict() (mne.decoding.timedelayingridge method)": [[423, "mne.decoding.TimeDelayingRidge.predict"]], "set_params() (mne.decoding.timedelayingridge method)": [[423, "mne.decoding.TimeDelayingRidge.set_params"]], "timefrequency (class in mne.decoding)": [[424, "mne.decoding.TimeFrequency"]], "fit() (mne.decoding.timefrequency method)": [[424, "mne.decoding.TimeFrequency.fit"]], "fit_transform() (mne.decoding.timefrequency method)": [[424, "mne.decoding.TimeFrequency.fit_transform"]], "get_params() (mne.decoding.timefrequency method)": [[424, "mne.decoding.TimeFrequency.get_params"]], "set_params() (mne.decoding.timefrequency method)": [[424, "mne.decoding.TimeFrequency.set_params"]], "transform() (mne.decoding.timefrequency method)": [[424, "mne.decoding.TimeFrequency.transform"]], "unsupervisedspatialfilter (class in mne.decoding)": [[425, "mne.decoding.UnsupervisedSpatialFilter"]], "fit() (mne.decoding.unsupervisedspatialfilter method)": [[425, "mne.decoding.UnsupervisedSpatialFilter.fit"]], "fit_transform() (mne.decoding.unsupervisedspatialfilter method)": [[425, "mne.decoding.UnsupervisedSpatialFilter.fit_transform"]], "get_params() (mne.decoding.unsupervisedspatialfilter method)": [[425, "mne.decoding.UnsupervisedSpatialFilter.get_params"]], "inverse_transform() (mne.decoding.unsupervisedspatialfilter method)": [[425, "mne.decoding.UnsupervisedSpatialFilter.inverse_transform"]], "set_params() (mne.decoding.unsupervisedspatialfilter method)": [[425, "mne.decoding.UnsupervisedSpatialFilter.set_params"]], "transform() (mne.decoding.unsupervisedspatialfilter method)": [[425, "mne.decoding.UnsupervisedSpatialFilter.transform"]], "vectorizer (class in mne.decoding)": [[426, "mne.decoding.Vectorizer"]], "fit() (mne.decoding.vectorizer method)": [[426, "mne.decoding.Vectorizer.fit"]], "fit_transform() (mne.decoding.vectorizer method)": [[426, "mne.decoding.Vectorizer.fit_transform"]], "inverse_transform() (mne.decoding.vectorizer method)": [[426, "mne.decoding.Vectorizer.inverse_transform"]], "transform() (mne.decoding.vectorizer method)": [[426, "mne.decoding.Vectorizer.transform"]], "compute_ems() (in module mne.decoding)": [[427, "mne.decoding.compute_ems"]], "cross_val_multiscore() (in module mne.decoding)": [[428, "mne.decoding.cross_val_multiscore"]], "get_coef() (in module mne.decoding)": [[429, "mne.decoding.get_coef"]], "dig_mri_distances() (in module mne)": [[430, "mne.dig_mri_distances"]], "get_phantom_dipoles() (in module mne.dipole)": [[431, "mne.dipole.get_phantom_dipoles"]], "average_movements() (in module mne.epochs)": [[432, "mne.epochs.average_movements"]], "combine_event_ids() (in module mne.epochs)": [[433, "mne.epochs.combine_event_ids"]], "equalize_epoch_counts() (in module mne.epochs)": [[434, "mne.epochs.equalize_epoch_counts"]], "make_metadata() (in module mne.epochs)": [[435, "mne.epochs.make_metadata"]], "equalize_channels() (in module mne)": [[436, "mne.equalize_channels"]], "define_target_events() (in module mne.event)": [[437, "mne.event.define_target_events"]], "match_event_names() (in module mne.event)": [[438, "mne.event.match_event_names"]], "shift_time_events() (in module mne.event)": [[439, "mne.event.shift_time_events"]], "events_from_annotations() (in module mne)": [[440, "mne.events_from_annotations"]], "export_epochs() (in module mne.export)": [[441, "mne.export.export_epochs"]], "export_evokeds() (in module mne.export)": [[442, "mne.export.export_evokeds"]], "export_evokeds_mff() (in module mne.export)": [[443, "mne.export.export_evokeds_mff"]], "export_raw() (in module mne.export)": [[444, "mne.export.export_raw"]], "extract_label_time_course() (in module mne)": [[445, "mne.extract_label_time_course"]], "construct_iir_filter() (in module mne.filter)": [[446, "mne.filter.construct_iir_filter"]], "create_filter() (in module mne.filter)": [[447, "mne.filter.create_filter"]], "estimate_ringing_samples() (in module mne.filter)": [[448, "mne.filter.estimate_ringing_samples"]], "filter_data() (in module mne.filter)": [[449, "mne.filter.filter_data"]], "notch_filter() (in module mne.filter)": [[450, "mne.filter.notch_filter"]], "resample() (in module mne.filter)": [[451, "mne.filter.resample"]], "find_events() (in module mne)": [[452, "mne.find_events"]], "find_stim_steps() (in module mne)": [[453, "mne.find_stim_steps"]], "fit_dipole() (in module mne)": [[454, "mne.fit_dipole"]], "compute_depth_prior() (in module mne.forward)": [[455, "mne.forward.compute_depth_prior"]], "compute_orient_prior() (in module mne.forward)": [[456, "mne.forward.compute_orient_prior"]], "restrict_forward_to_label() (in module mne.forward)": [[457, "mne.forward.restrict_forward_to_label"]], "restrict_forward_to_stc() (in module mne.forward)": [[458, "mne.forward.restrict_forward_to_stc"]], "get_config() (in module mne)": [[459, "mne.get_config"]], "get_config_path() (in module mne)": [[460, "mne.get_config_path"]], "get_head_surf() (in module mne)": [[461, "mne.get_head_surf"]], "get_meg_helmet_surf() (in module mne)": [[462, "mne.get_meg_helmet_surf"]], "get_montage_volume_labels() (in module mne)": [[463, "mne.get_montage_volume_labels"]], "get_volume_labels_from_aseg() (in module mne)": [[464, "mne.get_volume_labels_from_aseg"]], "get_volume_labels_from_src() (in module mne)": [[465, "mne.get_volume_labels_from_src"]], "grade_to_tris() (in module mne)": [[466, "mne.grade_to_tris"]], "grade_to_vertices() (in module mne)": [[467, "mne.grade_to_vertices"]], "grand_average() (in module mne)": [[468, "mne.grand_average"]], "grow_labels() (in module mne)": [[469, "mne.grow_labels"]], "coregistration() (in module mne.gui)": [[470, "mne.gui.coregistration"]], "locate_ieeg() (in module mne.gui)": [[471, "mne.gui.locate_ieeg"]], "head_to_mni() (in module mne)": [[472, "mne.head_to_mni"]], "head_to_mri() (in module mne)": [[473, "mne.head_to_mri"]], "gamma_map() (in module mne.inverse_sparse)": [[474, "mne.inverse_sparse.gamma_map"]], "make_stc_from_dipoles() (in module mne.inverse_sparse)": [[475, "mne.inverse_sparse.make_stc_from_dipoles"]], "mixed_norm() (in module mne.inverse_sparse)": [[476, "mne.inverse_sparse.mixed_norm"]], "tf_mixed_norm() (in module mne.inverse_sparse)": [[477, "mne.inverse_sparse.tf_mixed_norm"]], "baseraw (class in mne.io)": [[478, "mne.io.BaseRaw"]], "raw (class in mne.io)": [[479, "mne.io.Raw"]], "__contains__() (mne.io.raw method)": [[479, "mne.io.Raw.__contains__"]], "__getitem__() (mne.io.raw method)": [[479, "mne.io.Raw.__getitem__"]], "__len__() (mne.io.raw method)": [[479, "mne.io.Raw.__len__"]], "acqparser (mne.io.raw property)": [[479, "mne.io.Raw.acqparser"]], "add_channels() (mne.io.raw method)": [[479, "mne.io.Raw.add_channels"]], "add_events() (mne.io.raw method)": [[479, "mne.io.Raw.add_events"]], "add_proj() (mne.io.raw method)": [[479, "mne.io.Raw.add_proj"]], "add_reference_channels() (mne.io.raw method)": [[479, "mne.io.Raw.add_reference_channels"]], "annotations (mne.io.raw property)": [[479, "mne.io.Raw.annotations"]], "anonymize() (mne.io.raw method)": [[479, "mne.io.Raw.anonymize"]], "append() (mne.io.raw method)": [[479, "mne.io.Raw.append"]], "apply_function() (mne.io.raw method)": [[479, "mne.io.Raw.apply_function"]], "apply_gradient_compensation() (mne.io.raw method)": [[479, "mne.io.Raw.apply_gradient_compensation"]], "apply_hilbert() (mne.io.raw method)": [[479, "mne.io.Raw.apply_hilbert"]], "apply_proj() (mne.io.raw method)": [[479, "mne.io.Raw.apply_proj"]], "ch_names (mne.io.raw property)": [[479, "mne.io.Raw.ch_names"]], "close() (mne.io.raw method)": [[479, "mne.io.Raw.close"]], "compensation_grade (mne.io.raw property)": [[479, "mne.io.Raw.compensation_grade"]], "compute_psd() (mne.io.raw method)": [[479, "mne.io.Raw.compute_psd"]], "copy() (mne.io.raw method)": [[479, "mne.io.Raw.copy"]], "crop() (mne.io.raw method)": [[479, "mne.io.Raw.crop"]], "crop_by_annotations() (mne.io.raw method)": [[479, "mne.io.Raw.crop_by_annotations"]], "decimate() (mne.io.raw method)": [[479, "mne.io.Raw.decimate"]], "del_proj() (mne.io.raw method)": [[479, "mne.io.Raw.del_proj"]], "describe() (mne.io.raw method)": [[479, "mne.io.Raw.describe"]], "drop_channels() (mne.io.raw method)": [[479, "mne.io.Raw.drop_channels"]], "export() (mne.io.raw method)": [[479, "mne.io.Raw.export"]], "filenames (mne.io.raw property)": [[479, "mne.io.Raw.filenames"]], "filter() (mne.io.raw method)": [[479, "mne.io.Raw.filter"]], "first_samp (mne.io.raw property)": [[479, "mne.io.Raw.first_samp"]], "first_time (mne.io.raw property)": [[479, "mne.io.Raw.first_time"]], "fix_mag_coil_types() (mne.io.raw method)": [[479, "mne.io.Raw.fix_mag_coil_types"]], "get_channel_types() (mne.io.raw method)": [[479, "mne.io.Raw.get_channel_types"]], "get_data() (mne.io.raw method)": [[479, "mne.io.Raw.get_data"]], "get_montage() (mne.io.raw method)": [[479, "mne.io.Raw.get_montage"]], "interpolate_bads() (mne.io.raw method)": [[479, "mne.io.Raw.interpolate_bads"]], "last_samp (mne.io.raw property)": [[479, "mne.io.Raw.last_samp"]], "load_bad_channels() (mne.io.raw method)": [[479, "mne.io.Raw.load_bad_channels"]], "load_data() (mne.io.raw method)": [[479, "mne.io.Raw.load_data"]], "n_times (mne.io.raw property)": [[479, "mne.io.Raw.n_times"]], "notch_filter() (mne.io.raw method)": [[479, "mne.io.Raw.notch_filter"]], "pick() (mne.io.raw method)": [[479, "mne.io.Raw.pick"]], "pick_channels() (mne.io.raw method)": [[479, "mne.io.Raw.pick_channels"]], "pick_types() (mne.io.raw method)": [[479, "mne.io.Raw.pick_types"]], "plot() (mne.io.raw method)": [[479, "mne.io.Raw.plot"]], "plot_projs_topomap() (mne.io.raw method)": [[479, "mne.io.Raw.plot_projs_topomap"]], "plot_psd() (mne.io.raw method)": [[479, "mne.io.Raw.plot_psd"]], "plot_psd_topo() (mne.io.raw method)": [[479, "mne.io.Raw.plot_psd_topo"]], "plot_psd_topomap() (mne.io.raw method)": [[479, "mne.io.Raw.plot_psd_topomap"]], "plot_sensors() (mne.io.raw method)": [[479, "mne.io.Raw.plot_sensors"]], "proj (mne.io.raw property)": [[479, "mne.io.Raw.proj"]], "rename_channels() (mne.io.raw method)": [[479, "mne.io.Raw.rename_channels"]], "reorder_channels() (mne.io.raw method)": [[479, "mne.io.Raw.reorder_channels"]], "resample() (mne.io.raw method)": [[479, "mne.io.Raw.resample"]], "save() (mne.io.raw method)": [[479, "mne.io.Raw.save"]], "savgol_filter() (mne.io.raw method)": [[479, "mne.io.Raw.savgol_filter"]], "set_annotations() (mne.io.raw method)": [[479, "mne.io.Raw.set_annotations"]], "set_channel_types() (mne.io.raw method)": [[479, "mne.io.Raw.set_channel_types"]], "set_eeg_reference() (mne.io.raw method)": [[479, "mne.io.Raw.set_eeg_reference"]], "set_meas_date() (mne.io.raw method)": [[479, "mne.io.Raw.set_meas_date"]], "set_montage() (mne.io.raw method)": [[479, "mne.io.Raw.set_montage"]], "shift_time() (mne.io.raw method)": [[479, "mne.io.Raw.shift_time"]], "time_as_index() (mne.io.raw method)": [[479, "mne.io.Raw.time_as_index"]], "times (mne.io.raw property)": [[479, "mne.io.Raw.times"]], "tmax (mne.io.raw property)": [[479, "mne.io.Raw.tmax"]], "tmin (mne.io.raw property)": [[479, "mne.io.Raw.tmin"]], "to_data_frame() (mne.io.raw method)": [[479, "mne.io.Raw.to_data_frame"]], "rawarray (class in mne.io)": [[480, "mne.io.RawArray"]], "__contains__() (mne.io.rawarray method)": [[480, "mne.io.RawArray.__contains__"]], "__getitem__() (mne.io.rawarray method)": [[480, "mne.io.RawArray.__getitem__"]], "__len__() (mne.io.rawarray method)": [[480, "mne.io.RawArray.__len__"]], "add_channels() (mne.io.rawarray method)": [[480, "mne.io.RawArray.add_channels"]], "add_events() (mne.io.rawarray method)": [[480, "mne.io.RawArray.add_events"]], "add_proj() (mne.io.rawarray method)": [[480, "mne.io.RawArray.add_proj"]], "add_reference_channels() (mne.io.rawarray method)": [[480, "mne.io.RawArray.add_reference_channels"]], "annotations (mne.io.rawarray property)": [[480, "mne.io.RawArray.annotations"]], "anonymize() (mne.io.rawarray method)": [[480, "mne.io.RawArray.anonymize"]], "append() (mne.io.rawarray method)": [[480, "mne.io.RawArray.append"]], "apply_function() (mne.io.rawarray method)": [[480, "mne.io.RawArray.apply_function"]], "apply_gradient_compensation() (mne.io.rawarray method)": [[480, "mne.io.RawArray.apply_gradient_compensation"]], "apply_hilbert() (mne.io.rawarray method)": [[480, "mne.io.RawArray.apply_hilbert"]], "apply_proj() (mne.io.rawarray method)": [[480, "mne.io.RawArray.apply_proj"]], "ch_names (mne.io.rawarray property)": [[480, "mne.io.RawArray.ch_names"]], "close() (mne.io.rawarray method)": [[480, "mne.io.RawArray.close"]], "compensation_grade (mne.io.rawarray property)": [[480, "mne.io.RawArray.compensation_grade"]], "compute_psd() (mne.io.rawarray method)": [[480, "mne.io.RawArray.compute_psd"]], "copy() (mne.io.rawarray method)": [[480, "mne.io.RawArray.copy"]], "crop() (mne.io.rawarray method)": [[480, "mne.io.RawArray.crop"]], "crop_by_annotations() (mne.io.rawarray method)": [[480, "mne.io.RawArray.crop_by_annotations"]], "decimate() (mne.io.rawarray method)": [[480, "mne.io.RawArray.decimate"]], "del_proj() (mne.io.rawarray method)": [[480, "mne.io.RawArray.del_proj"]], "describe() (mne.io.rawarray method)": [[480, "mne.io.RawArray.describe"]], "drop_channels() (mne.io.rawarray method)": [[480, "mne.io.RawArray.drop_channels"]], "export() (mne.io.rawarray method)": [[480, "mne.io.RawArray.export"]], "filenames (mne.io.rawarray property)": [[480, "mne.io.RawArray.filenames"]], "filter() (mne.io.rawarray method)": [[480, "mne.io.RawArray.filter"]], "first_samp (mne.io.rawarray property)": [[480, "mne.io.RawArray.first_samp"]], "first_time (mne.io.rawarray property)": [[480, "mne.io.RawArray.first_time"]], "get_channel_types() (mne.io.rawarray method)": [[480, "mne.io.RawArray.get_channel_types"]], "get_data() (mne.io.rawarray method)": [[480, "mne.io.RawArray.get_data"]], "get_montage() (mne.io.rawarray method)": [[480, "mne.io.RawArray.get_montage"]], "interpolate_bads() (mne.io.rawarray method)": [[480, "mne.io.RawArray.interpolate_bads"]], "last_samp (mne.io.rawarray property)": [[480, "mne.io.RawArray.last_samp"]], "load_bad_channels() (mne.io.rawarray method)": [[480, "mne.io.RawArray.load_bad_channels"]], "load_data() (mne.io.rawarray method)": [[480, "mne.io.RawArray.load_data"]], "n_times (mne.io.rawarray property)": [[480, "mne.io.RawArray.n_times"]], "notch_filter() (mne.io.rawarray method)": [[480, "mne.io.RawArray.notch_filter"]], "pick() (mne.io.rawarray method)": [[480, "mne.io.RawArray.pick"]], "pick_channels() (mne.io.rawarray method)": [[480, "mne.io.RawArray.pick_channels"]], "pick_types() (mne.io.rawarray method)": [[480, "mne.io.RawArray.pick_types"]], "plot() (mne.io.rawarray method)": [[480, "mne.io.RawArray.plot"]], "plot_projs_topomap() (mne.io.rawarray method)": [[480, "mne.io.RawArray.plot_projs_topomap"]], "plot_psd() (mne.io.rawarray method)": [[480, "mne.io.RawArray.plot_psd"]], "plot_psd_topo() (mne.io.rawarray method)": [[480, "mne.io.RawArray.plot_psd_topo"]], "plot_psd_topomap() (mne.io.rawarray method)": [[480, "mne.io.RawArray.plot_psd_topomap"]], "plot_sensors() (mne.io.rawarray method)": [[480, "mne.io.RawArray.plot_sensors"]], "proj (mne.io.rawarray property)": [[480, "mne.io.RawArray.proj"]], "rename_channels() (mne.io.rawarray method)": [[480, "mne.io.RawArray.rename_channels"]], "reorder_channels() (mne.io.rawarray method)": [[480, "mne.io.RawArray.reorder_channels"]], "resample() (mne.io.rawarray method)": [[480, "mne.io.RawArray.resample"]], "save() (mne.io.rawarray method)": [[480, "mne.io.RawArray.save"]], "savgol_filter() (mne.io.rawarray method)": [[480, "mne.io.RawArray.savgol_filter"]], "set_annotations() (mne.io.rawarray method)": [[480, "mne.io.RawArray.set_annotations"]], "set_channel_types() (mne.io.rawarray method)": [[480, "mne.io.RawArray.set_channel_types"]], "set_eeg_reference() (mne.io.rawarray method)": [[480, "mne.io.RawArray.set_eeg_reference"]], "set_meas_date() (mne.io.rawarray method)": [[480, "mne.io.RawArray.set_meas_date"]], "set_montage() (mne.io.rawarray method)": [[480, "mne.io.RawArray.set_montage"]], "shift_time() (mne.io.rawarray method)": [[480, "mne.io.RawArray.shift_time"]], "time_as_index() (mne.io.rawarray method)": [[480, "mne.io.RawArray.time_as_index"]], "times (mne.io.rawarray property)": [[480, "mne.io.RawArray.times"]], "tmax (mne.io.rawarray property)": [[480, "mne.io.RawArray.tmax"]], "tmin (mne.io.rawarray property)": [[480, "mne.io.RawArray.tmin"]], "to_data_frame() (mne.io.rawarray method)": [[480, "mne.io.RawArray.to_data_frame"]], "anonymize_info() (in module mne.io)": [[481, "mne.io.anonymize_info"]], "read_mrk() (in module mne.io.kit)": [[482, "mne.io.kit.read_mrk"]], "read_fiducials() (in module mne.io)": [[483, "mne.io.read_fiducials"]], "read_info() (in module mne.io)": [[484, "mne.io.read_info"]], "read_raw() (in module mne.io)": [[485, "mne.io.read_raw"]], "read_raw_artemis123() (in module mne.io)": [[486, "mne.io.read_raw_artemis123"]], "read_raw_bdf() (in module mne.io)": [[487, "mne.io.read_raw_bdf"]], "read_raw_boxy() (in module mne.io)": [[488, "mne.io.read_raw_boxy"]], "read_raw_brainvision() (in module mne.io)": [[489, "mne.io.read_raw_brainvision"]], "read_raw_bti() (in module mne.io)": [[490, "mne.io.read_raw_bti"]], "read_raw_cnt() (in module mne.io)": [[491, "mne.io.read_raw_cnt"]], "read_raw_ctf() (in module mne.io)": [[492, "mne.io.read_raw_ctf"]], "read_raw_curry() (in module mne.io)": [[493, "mne.io.read_raw_curry"]], "read_raw_edf() (in module mne.io)": [[494, "mne.io.read_raw_edf"]], "read_raw_eeglab() (in module mne.io)": [[495, "mne.io.read_raw_eeglab"]], "read_raw_egi() (in module mne.io)": [[496, "mne.io.read_raw_egi"]], "read_raw_eximia() (in module mne.io)": [[497, "mne.io.read_raw_eximia"]], "read_raw_eyelink() (in module mne.io)": [[498, "mne.io.read_raw_eyelink"]], "read_raw_fieldtrip() (in module mne.io)": [[499, "mne.io.read_raw_fieldtrip"]], "read_raw_fif() (in module mne.io)": [[500, "mne.io.read_raw_fif"]], "read_raw_fil() (in module mne.io)": [[501, "mne.io.read_raw_fil"]], "read_raw_gdf() (in module mne.io)": [[502, "mne.io.read_raw_gdf"]], "read_raw_hitachi() (in module mne.io)": [[503, "mne.io.read_raw_hitachi"]], "read_raw_kit() (in module mne.io)": [[504, "mne.io.read_raw_kit"]], "read_raw_nedf() (in module mne.io)": [[505, "mne.io.read_raw_nedf"]], "read_raw_nicolet() (in module mne.io)": [[506, "mne.io.read_raw_nicolet"]], "read_raw_nihon() (in module mne.io)": [[507, "mne.io.read_raw_nihon"]], "read_raw_nirx() (in module mne.io)": [[508, "mne.io.read_raw_nirx"]], "read_raw_persyst() (in module mne.io)": [[509, "mne.io.read_raw_persyst"]], "read_raw_snirf() (in module mne.io)": [[510, "mne.io.read_raw_snirf"]], "show_fiff() (in module mne.io)": [[511, "mne.io.show_fiff"]], "write_fiducials() (in module mne.io)": [[512, "mne.io.write_fiducials"]], "select_sources() (in module mne.label)": [[513, "mne.label.select_sources"]], "label_sign_flip() (in module mne)": [[514, "mne.label_sign_flip"]], "labels_to_stc() (in module mne)": [[515, "mne.labels_to_stc"]], "make_ad_hoc_cov() (in module mne)": [[516, "mne.make_ad_hoc_cov"]], "make_bem_model() (in module mne)": [[517, "mne.make_bem_model"]], "make_bem_solution() (in module mne)": [[518, "mne.make_bem_solution"]], "make_field_map() (in module mne)": [[519, "mne.make_field_map"]], "make_fixed_length_epochs() (in module mne)": [[520, "mne.make_fixed_length_epochs"]], "make_fixed_length_events() (in module mne)": [[521, "mne.make_fixed_length_events"]], "make_forward_dipole() (in module mne)": [[522, "mne.make_forward_dipole"]], "make_forward_solution() (in module mne)": [[523, "mne.make_forward_solution"]], "make_sphere_model() (in module mne)": [[524, "mne.make_sphere_model"]], "match_channel_orders() (in module mne)": [[525, "mne.match_channel_orders"]], "merge_events() (in module mne)": [[526, "mne.merge_events"]], "inverseoperator (class in mne.minimum_norm)": [[527, "mne.minimum_norm.InverseOperator"]], "__contains__() (mne.minimum_norm.inverseoperator method)": [[527, "mne.minimum_norm.InverseOperator.__contains__"]], "__getitem__() (mne.minimum_norm.inverseoperator method)": [[527, "mne.minimum_norm.InverseOperator.__getitem__"]], "__iter__() (mne.minimum_norm.inverseoperator method)": [[527, "mne.minimum_norm.InverseOperator.__iter__"]], "__len__() (mne.minimum_norm.inverseoperator method)": [[527, "mne.minimum_norm.InverseOperator.__len__"]], "clear() (mne.minimum_norm.inverseoperator method)": [[527, "mne.minimum_norm.InverseOperator.clear"]], "copy() (mne.minimum_norm.inverseoperator method)": [[527, "mne.minimum_norm.InverseOperator.copy"]], "fromkeys() (mne.minimum_norm.inverseoperator method)": [[527, "mne.minimum_norm.InverseOperator.fromkeys"]], "get() (mne.minimum_norm.inverseoperator method)": [[527, "mne.minimum_norm.InverseOperator.get"]], "items() (mne.minimum_norm.inverseoperator method)": [[527, "mne.minimum_norm.InverseOperator.items"]], "keys() (mne.minimum_norm.inverseoperator method)": [[527, "mne.minimum_norm.InverseOperator.keys"]], "pop() (mne.minimum_norm.inverseoperator method)": [[527, "mne.minimum_norm.InverseOperator.pop"]], "popitem() (mne.minimum_norm.inverseoperator method)": [[527, "mne.minimum_norm.InverseOperator.popitem"]], "setdefault() (mne.minimum_norm.inverseoperator method)": [[527, "mne.minimum_norm.InverseOperator.setdefault"]], "update() (mne.minimum_norm.inverseoperator method)": [[527, "mne.minimum_norm.InverseOperator.update"]], "values() (mne.minimum_norm.inverseoperator method)": [[527, "mne.minimum_norm.InverseOperator.values"]], "apply_inverse() (in module mne.minimum_norm)": [[528, "mne.minimum_norm.apply_inverse"]], "apply_inverse_cov() (in module mne.minimum_norm)": [[529, "mne.minimum_norm.apply_inverse_cov"]], "apply_inverse_epochs() (in module mne.minimum_norm)": [[530, "mne.minimum_norm.apply_inverse_epochs"]], "apply_inverse_raw() (in module mne.minimum_norm)": [[531, "mne.minimum_norm.apply_inverse_raw"]], "apply_inverse_tfr_epochs() (in module mne.minimum_norm)": [[532, "mne.minimum_norm.apply_inverse_tfr_epochs"]], "compute_rank_inverse() (in module mne.minimum_norm)": [[533, "mne.minimum_norm.compute_rank_inverse"]], "compute_source_psd() (in module mne.minimum_norm)": [[534, "mne.minimum_norm.compute_source_psd"]], "compute_source_psd_epochs() (in module mne.minimum_norm)": [[535, "mne.minimum_norm.compute_source_psd_epochs"]], "estimate_snr() (in module mne.minimum_norm)": [[536, "mne.minimum_norm.estimate_snr"]], "get_cross_talk() (in module mne.minimum_norm)": [[537, "mne.minimum_norm.get_cross_talk"]], "get_point_spread() (in module mne.minimum_norm)": [[538, "mne.minimum_norm.get_point_spread"]], "make_inverse_operator() (in module mne.minimum_norm)": [[539, "mne.minimum_norm.make_inverse_operator"]], "make_inverse_resolution_matrix() (in module mne.minimum_norm)": [[540, "mne.minimum_norm.make_inverse_resolution_matrix"]], "prepare_inverse_operator() (in module mne.minimum_norm)": [[541, "mne.minimum_norm.prepare_inverse_operator"]], "read_inverse_operator() (in module mne.minimum_norm)": [[542, "mne.minimum_norm.read_inverse_operator"]], "resolution_metrics() (in module mne.minimum_norm)": [[543, "mne.minimum_norm.resolution_metrics"]], "source_band_induced_power() (in module mne.minimum_norm)": [[544, "mne.minimum_norm.source_band_induced_power"]], "source_induced_power() (in module mne.minimum_norm)": [[545, "mne.minimum_norm.source_induced_power"]], "write_inverse_operator() (in module mne.minimum_norm)": [[546, "mne.minimum_norm.write_inverse_operator"]], "morph_labels() (in module mne)": [[547, "mne.morph_labels"]], "morph_source_spaces() (in module mne)": [[548, "mne.morph_source_spaces"]], "open_docs() (in module mne)": [[549, "mne.open_docs"]], "open_report() (in module mne)": [[550, "mne.open_report"]], "parse_config() (in module mne)": [[551, "mne.parse_config"]], "pick_channels() (in module mne)": [[552, "mne.pick_channels"]], "pick_channels_cov() (in module mne)": [[553, "mne.pick_channels_cov"]], "pick_channels_forward() (in module mne)": [[554, "mne.pick_channels_forward"]], "pick_channels_regexp() (in module mne)": [[555, "mne.pick_channels_regexp"]], "pick_events() (in module mne)": [[556, "mne.pick_events"]], "pick_info() (in module mne)": [[557, "mne.pick_info"]], "pick_types() (in module mne)": [[558, "mne.pick_types"]], "pick_types_forward() (in module mne)": [[559, "mne.pick_types_forward"]], "eogregression (class in mne.preprocessing)": [[560, "mne.preprocessing.EOGRegression"]], "apply() (mne.preprocessing.eogregression method)": [[560, "mne.preprocessing.EOGRegression.apply"]], "fit() (mne.preprocessing.eogregression method)": [[560, "mne.preprocessing.EOGRegression.fit"]], "plot() (mne.preprocessing.eogregression method)": [[560, "mne.preprocessing.EOGRegression.plot"]], "save() (mne.preprocessing.eogregression method)": [[560, "mne.preprocessing.EOGRegression.save"]], "ica (class in mne.preprocessing)": [[561, "mne.preprocessing.ICA"]], "__contains__() (mne.preprocessing.ica method)": [[561, "mne.preprocessing.ICA.__contains__"]], "apply() (mne.preprocessing.ica method)": [[561, "mne.preprocessing.ICA.apply"]], "compensation_grade (mne.preprocessing.ica property)": [[561, "mne.preprocessing.ICA.compensation_grade"]], "copy() (mne.preprocessing.ica method)": [[561, "mne.preprocessing.ICA.copy"]], "find_bads_ecg() (mne.preprocessing.ica method)": [[561, "mne.preprocessing.ICA.find_bads_ecg"]], "find_bads_eog() (mne.preprocessing.ica method)": [[561, "mne.preprocessing.ICA.find_bads_eog"]], "find_bads_muscle() (mne.preprocessing.ica method)": [[561, "mne.preprocessing.ICA.find_bads_muscle"]], "find_bads_ref() (mne.preprocessing.ica method)": [[561, "mne.preprocessing.ICA.find_bads_ref"]], "fit() (mne.preprocessing.ica method)": [[561, "mne.preprocessing.ICA.fit"]], "get_channel_types() (mne.preprocessing.ica method)": [[561, "mne.preprocessing.ICA.get_channel_types"]], "get_components() (mne.preprocessing.ica method)": [[561, "mne.preprocessing.ICA.get_components"]], "get_explained_variance_ratio() (mne.preprocessing.ica method)": [[561, "mne.preprocessing.ICA.get_explained_variance_ratio"]], "get_sources() (mne.preprocessing.ica method)": [[561, "mne.preprocessing.ICA.get_sources"]], "plot_components() (mne.preprocessing.ica method)": [[561, "mne.preprocessing.ICA.plot_components"]], "plot_overlay() (mne.preprocessing.ica method)": [[561, "mne.preprocessing.ICA.plot_overlay"]], "plot_properties() (mne.preprocessing.ica method)": [[561, "mne.preprocessing.ICA.plot_properties"]], "plot_scores() (mne.preprocessing.ica method)": [[561, "mne.preprocessing.ICA.plot_scores"]], "plot_sources() (mne.preprocessing.ica method)": [[561, "mne.preprocessing.ICA.plot_sources"]], "save() (mne.preprocessing.ica method)": [[561, "mne.preprocessing.ICA.save"]], "score_sources() (mne.preprocessing.ica method)": [[561, "mne.preprocessing.ICA.score_sources"]], "xdawn (class in mne.preprocessing)": [[562, "mne.preprocessing.Xdawn"]], "apply() (mne.preprocessing.xdawn method)": [[562, "mne.preprocessing.Xdawn.apply"]], "fit() (mne.preprocessing.xdawn method)": [[562, "mne.preprocessing.Xdawn.fit"]], "fit_transform() (mne.preprocessing.xdawn method)": [[562, "mne.preprocessing.Xdawn.fit_transform"]], "get_params() (mne.preprocessing.xdawn method)": [[562, "mne.preprocessing.Xdawn.get_params"]], "inverse_transform() (mne.preprocessing.xdawn method)": [[562, "mne.preprocessing.Xdawn.inverse_transform"]], "set_params() (mne.preprocessing.xdawn method)": [[562, "mne.preprocessing.Xdawn.set_params"]], "transform() (mne.preprocessing.xdawn method)": [[562, "mne.preprocessing.Xdawn.transform"]], "annotate_amplitude() (in module mne.preprocessing)": [[563, "mne.preprocessing.annotate_amplitude"]], "annotate_break() (in module mne.preprocessing)": [[564, "mne.preprocessing.annotate_break"]], "annotate_movement() (in module mne.preprocessing)": [[565, "mne.preprocessing.annotate_movement"]], "annotate_muscle_zscore() (in module mne.preprocessing)": [[566, "mne.preprocessing.annotate_muscle_zscore"]], "annotate_nan() (in module mne.preprocessing)": [[567, "mne.preprocessing.annotate_nan"]], "compute_average_dev_head_t() (in module mne.preprocessing)": [[568, "mne.preprocessing.compute_average_dev_head_t"]], "compute_bridged_electrodes() (in module mne.preprocessing)": [[569, "mne.preprocessing.compute_bridged_electrodes"]], "compute_current_source_density() (in module mne.preprocessing)": [[570, "mne.preprocessing.compute_current_source_density"]], "compute_fine_calibration() (in module mne.preprocessing)": [[571, "mne.preprocessing.compute_fine_calibration"]], "compute_maxwell_basis() (in module mne.preprocessing)": [[572, "mne.preprocessing.compute_maxwell_basis"]], "compute_proj_ecg() (in module mne.preprocessing)": [[573, "mne.preprocessing.compute_proj_ecg"]], "compute_proj_eog() (in module mne.preprocessing)": [[574, "mne.preprocessing.compute_proj_eog"]], "compute_proj_hfc() (in module mne.preprocessing)": [[575, "mne.preprocessing.compute_proj_hfc"]], "corrmap() (in module mne.preprocessing)": [[576, "mne.preprocessing.corrmap"]], "cortical_signal_suppression() (in module mne.preprocessing)": [[577, "mne.preprocessing.cortical_signal_suppression"]], "create_ecg_epochs() (in module mne.preprocessing)": [[578, "mne.preprocessing.create_ecg_epochs"]], "create_eog_epochs() (in module mne.preprocessing)": [[579, "mne.preprocessing.create_eog_epochs"]], "equalize_bads() (in module mne.preprocessing)": [[580, "mne.preprocessing.equalize_bads"]], "set_channel_types_eyetrack() (in module mne.preprocessing.eyetracking)": [[581, "mne.preprocessing.eyetracking.set_channel_types_eyetrack"]], "find_bad_channels_maxwell() (in module mne.preprocessing)": [[582, "mne.preprocessing.find_bad_channels_maxwell"]], "find_ecg_events() (in module mne.preprocessing)": [[583, "mne.preprocessing.find_ecg_events"]], "find_eog_events() (in module mne.preprocessing)": [[584, "mne.preprocessing.find_eog_events"]], "fix_stim_artifact() (in module mne.preprocessing)": [[585, "mne.preprocessing.fix_stim_artifact"]], "ica_find_ecg_events() (in module mne.preprocessing)": [[586, "mne.preprocessing.ica_find_ecg_events"]], "ica_find_eog_events() (in module mne.preprocessing)": [[587, "mne.preprocessing.ica_find_eog_events"]], "make_montage_volume() (in module mne.preprocessing.ieeg)": [[588, "mne.preprocessing.ieeg.make_montage_volume"]], "project_sensors_onto_brain() (in module mne.preprocessing.ieeg)": [[589, "mne.preprocessing.ieeg.project_sensors_onto_brain"]], "warp_montage() (in module mne.preprocessing.ieeg)": [[590, "mne.preprocessing.ieeg.warp_montage"]], "infomax() (in module mne.preprocessing)": [[591, "mne.preprocessing.infomax"]], "interpolate_bridged_electrodes() (in module mne.preprocessing)": [[592, "mne.preprocessing.interpolate_bridged_electrodes"]], "maxwell_filter() (in module mne.preprocessing)": [[593, "mne.preprocessing.maxwell_filter"]], "maxwell_filter_prepare_emptyroom() (in module mne.preprocessing)": [[594, "mne.preprocessing.maxwell_filter_prepare_emptyroom"]], "beer_lambert_law() (in module mne.preprocessing.nirs)": [[595, "mne.preprocessing.nirs.beer_lambert_law"]], "optical_density() (in module mne.preprocessing.nirs)": [[596, "mne.preprocessing.nirs.optical_density"]], "scalp_coupling_index() (in module mne.preprocessing.nirs)": [[597, "mne.preprocessing.nirs.scalp_coupling_index"]], "short_channels() (in module mne.preprocessing.nirs)": [[598, "mne.preprocessing.nirs.short_channels"]], "source_detector_distances() (in module mne.preprocessing.nirs)": [[599, "mne.preprocessing.nirs.source_detector_distances"]], "temporal_derivative_distribution_repair() (in module mne.preprocessing.nirs)": [[600, "mne.preprocessing.nirs.temporal_derivative_distribution_repair"]], "oversampled_temporal_projection() (in module mne.preprocessing)": [[601, "mne.preprocessing.oversampled_temporal_projection"]], "peak_finder() (in module mne.preprocessing)": [[602, "mne.preprocessing.peak_finder"]], "read_eog_regression() (in module mne.preprocessing)": [[603, "mne.preprocessing.read_eog_regression"]], "read_fine_calibration() (in module mne.preprocessing)": [[604, "mne.preprocessing.read_fine_calibration"]], "read_ica() (in module mne.preprocessing)": [[605, "mne.preprocessing.read_ica"]], "read_ica_eeglab() (in module mne.preprocessing)": [[606, "mne.preprocessing.read_ica_eeglab"]], "realign_raw() (in module mne.preprocessing)": [[607, "mne.preprocessing.realign_raw"]], "regress_artifact() (in module mne.preprocessing)": [[608, "mne.preprocessing.regress_artifact"]], "write_fine_calibration() (in module mne.preprocessing)": [[609, "mne.preprocessing.write_fine_calibration"]], "random_parcellation() (in module mne)": [[610, "mne.random_parcellation"]], "read_annotations() (in module mne)": [[611, "mne.read_annotations"]], "read_bem_solution() (in module mne)": [[612, "mne.read_bem_solution"]], "read_bem_surfaces() (in module mne)": [[613, "mne.read_bem_surfaces"]], "read_cov() (in module mne)": [[614, "mne.read_cov"]], "read_dipole() (in module mne)": [[615, "mne.read_dipole"]], "read_epochs() (in module mne)": [[616, "mne.read_epochs"]], "read_epochs_eeglab() (in module mne)": [[617, "mne.read_epochs_eeglab"]], "read_epochs_fieldtrip() (in module mne)": [[618, "mne.read_epochs_fieldtrip"]], "read_epochs_kit() (in module mne)": [[619, "mne.read_epochs_kit"]], "read_events() (in module mne)": [[620, "mne.read_events"]], "read_evoked_besa() (in module mne)": [[621, "mne.read_evoked_besa"]], "read_evoked_fieldtrip() (in module mne)": [[622, "mne.read_evoked_fieldtrip"]], "read_evokeds() (in module mne)": [[623, "mne.read_evokeds"]], "read_evokeds_mff() (in module mne)": [[624, "mne.read_evokeds_mff"]], "read_forward_solution() (in module mne)": [[625, "mne.read_forward_solution"]], "read_freesurfer_lut() (in module mne)": [[626, "mne.read_freesurfer_lut"]], "read_label() (in module mne)": [[627, "mne.read_label"]], "read_labels_from_annot() (in module mne)": [[628, "mne.read_labels_from_annot"]], "read_lta() (in module mne)": [[629, "mne.read_lta"]], "read_morph_map() (in module mne)": [[630, "mne.read_morph_map"]], "read_proj() (in module mne)": [[631, "mne.read_proj"]], "read_reject_parameters() (in module mne)": [[632, "mne.read_reject_parameters"]], "read_source_estimate() (in module mne)": [[633, "mne.read_source_estimate"]], "read_source_morph() (in module mne)": [[634, "mne.read_source_morph"]], "read_source_spaces() (in module mne)": [[635, "mne.read_source_spaces"]], "read_surface() (in module mne)": [[636, "mne.read_surface"]], "read_talxfm() (in module mne)": [[637, "mne.read_talxfm"]], "read_trans() (in module mne)": [[638, "mne.read_trans"]], "read_tri() (in module mne)": [[639, "mne.read_tri"]], "read_vectorview_selection() (in module mne)": [[640, "mne.read_vectorview_selection"]], "rename_channels() (in module mne)": [[641, "mne.rename_channels"]], "scale_bem() (in module mne)": [[642, "mne.scale_bem"]], "scale_labels() (in module mne)": [[643, "mne.scale_labels"]], "scale_mri() (in module mne)": [[644, "mne.scale_mri"]], "scale_source_space() (in module mne)": [[645, "mne.scale_source_space"]], "sensitivity_map() (in module mne)": [[646, "mne.sensitivity_map"]], "set_bipolar_reference() (in module mne)": [[647, "mne.set_bipolar_reference"]], "set_cache_dir() (in module mne)": [[648, "mne.set_cache_dir"]], "set_config() (in module mne)": [[649, "mne.set_config"]], "set_eeg_reference() (in module mne)": [[650, "mne.set_eeg_reference"]], "set_log_file() (in module mne)": [[651, "mne.set_log_file"]], "set_log_level() (in module mne)": [[652, "mne.set_log_level"]], "set_memmap_min_size() (in module mne)": [[653, "mne.set_memmap_min_size"]], "setup_source_space() (in module mne)": [[654, "mne.setup_source_space"]], "setup_volume_source_space() (in module mne)": [[655, "mne.setup_volume_source_space"]], "sourcesimulator (class in mne.simulation)": [[656, "mne.simulation.SourceSimulator"]], "__iter__() (mne.simulation.sourcesimulator method)": [[656, "mne.simulation.SourceSimulator.__iter__"]], "add_data() (mne.simulation.sourcesimulator method)": [[656, "mne.simulation.SourceSimulator.add_data"]], "duration (mne.simulation.sourcesimulator property)": [[656, "mne.simulation.SourceSimulator.duration"]], "get_stc() (mne.simulation.sourcesimulator method)": [[656, "mne.simulation.SourceSimulator.get_stc"]], "get_stim_channel() (mne.simulation.sourcesimulator method)": [[656, "mne.simulation.SourceSimulator.get_stim_channel"]], "n_times (mne.simulation.sourcesimulator property)": [[656, "mne.simulation.SourceSimulator.n_times"]], "add_chpi() (in module mne.simulation)": [[657, "mne.simulation.add_chpi"]], "add_ecg() (in module mne.simulation)": [[658, "mne.simulation.add_ecg"]], "add_eog() (in module mne.simulation)": [[659, "mne.simulation.add_eog"]], "add_noise() (in module mne.simulation)": [[660, "mne.simulation.add_noise"]], "cosine_score() (in module mne.simulation.metrics)": [[661, "mne.simulation.metrics.cosine_score"]], "f1_score() (in module mne.simulation.metrics)": [[662, "mne.simulation.metrics.f1_score"]], "peak_position_error() (in module mne.simulation.metrics)": [[663, "mne.simulation.metrics.peak_position_error"]], "precision_score() (in module mne.simulation.metrics)": [[664, "mne.simulation.metrics.precision_score"]], "recall_score() (in module mne.simulation.metrics)": [[665, "mne.simulation.metrics.recall_score"]], "region_localization_error() (in module mne.simulation.metrics)": [[666, "mne.simulation.metrics.region_localization_error"]], "roc_auc_score() (in module mne.simulation.metrics)": [[667, "mne.simulation.metrics.roc_auc_score"]], "spatial_deviation_error() (in module mne.simulation.metrics)": [[668, "mne.simulation.metrics.spatial_deviation_error"]], "select_source_in_label() (in module mne.simulation)": [[669, "mne.simulation.select_source_in_label"]], "simulate_evoked() (in module mne.simulation)": [[670, "mne.simulation.simulate_evoked"]], "simulate_raw() (in module mne.simulation)": [[671, "mne.simulation.simulate_raw"]], "simulate_sparse_stc() (in module mne.simulation)": [[672, "mne.simulation.simulate_sparse_stc"]], "simulate_stc() (in module mne.simulation)": [[673, "mne.simulation.simulate_stc"]], "compute_distance_to_sensors() (in module mne.source_space)": [[674, "mne.source_space.compute_distance_to_sensors"]], "get_decimated_surfaces() (in module mne.source_space)": [[675, "mne.source_space.get_decimated_surfaces"]], "spatial_dist_adjacency() (in module mne)": [[676, "mne.spatial_dist_adjacency"]], "spatial_inter_hemi_adjacency() (in module mne)": [[677, "mne.spatial_inter_hemi_adjacency"]], "spatial_src_adjacency() (in module mne)": [[678, "mne.spatial_src_adjacency"]], "spatial_tris_adjacency() (in module mne)": [[679, "mne.spatial_tris_adjacency"]], "spatio_temporal_dist_adjacency() (in module mne)": [[680, "mne.spatio_temporal_dist_adjacency"]], "spatio_temporal_src_adjacency() (in module mne)": [[681, "mne.spatio_temporal_src_adjacency"]], "spatio_temporal_tris_adjacency() (in module mne)": [[682, "mne.spatio_temporal_tris_adjacency"]], "split_label() (in module mne)": [[683, "mne.split_label"]], "bonferroni_correction() (in module mne.stats)": [[684, "mne.stats.bonferroni_correction"]], "bootstrap_confidence_interval() (in module mne.stats)": [[685, "mne.stats.bootstrap_confidence_interval"]], "combine_adjacency() (in module mne.stats)": [[686, "mne.stats.combine_adjacency"]], "f_mway_rm() (in module mne.stats)": [[687, "mne.stats.f_mway_rm"]], "f_oneway() (in module mne.stats)": [[688, "mne.stats.f_oneway"]], "f_threshold_mway_rm() (in module mne.stats)": [[689, "mne.stats.f_threshold_mway_rm"]], "fdr_correction() (in module mne.stats)": [[690, "mne.stats.fdr_correction"]], "linear_regression() (in module mne.stats)": [[691, "mne.stats.linear_regression"]], "linear_regression_raw() (in module mne.stats)": [[692, "mne.stats.linear_regression_raw"]], "permutation_cluster_1samp_test() (in module mne.stats)": [[693, "mne.stats.permutation_cluster_1samp_test"]], "permutation_cluster_test() (in module mne.stats)": [[694, "mne.stats.permutation_cluster_test"]], "permutation_t_test() (in module mne.stats)": [[695, "mne.stats.permutation_t_test"]], "spatio_temporal_cluster_1samp_test() (in module mne.stats)": [[696, "mne.stats.spatio_temporal_cluster_1samp_test"]], "spatio_temporal_cluster_test() (in module mne.stats)": [[697, "mne.stats.spatio_temporal_cluster_test"]], "summarize_clusters_stc() (in module mne.stats)": [[698, "mne.stats.summarize_clusters_stc"]], "ttest_1samp_no_p() (in module mne.stats)": [[699, "mne.stats.ttest_1samp_no_p"]], "ttest_ind_no_p() (in module mne.stats)": [[700, "mne.stats.ttest_ind_no_p"]], "stc_near_sensors() (in module mne)": [[701, "mne.stc_near_sensors"]], "stc_to_label() (in module mne)": [[702, "mne.stc_to_label"]], "complete_surface_info() (in module mne.surface)": [[703, "mne.surface.complete_surface_info"]], "read_curvature() (in module mne.surface)": [[704, "mne.surface.read_curvature"]], "sys_info() (in module mne)": [[705, "mne.sys_info"]], "averagetfr (class in mne.time_frequency)": [[706, "mne.time_frequency.AverageTFR"]], "__add__() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.__add__"]], "__contains__() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.__contains__"]], "__mul__() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.__mul__"]], "__sub__() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.__sub__"]], "add_channels() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.apply_baseline"]], "ch_names (mne.time_frequency.averagetfr property)": [[706, "mne.time_frequency.AverageTFR.ch_names"]], "compensation_grade (mne.time_frequency.averagetfr property)": [[706, "mne.time_frequency.AverageTFR.compensation_grade"]], "copy() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.copy"]], "crop() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.crop"]], "decimate() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.decimate"]], "drop_channels() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.get_channel_types"]], "pick() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.pick"]], "pick_channels() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.pick_channels"]], "pick_types() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.pick_types"]], "plot() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.plot"]], "plot_joint() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.plot_joint"]], "plot_topo() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.plot_topo"]], "plot_topomap() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.plot_topomap"]], "reorder_channels() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.reorder_channels"]], "save() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.save"]], "shift_time() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.shift_time"]], "time_as_index() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.time_as_index"]], "times (mne.time_frequency.averagetfr property)": [[706, "mne.time_frequency.AverageTFR.times"]], "tmax (mne.time_frequency.averagetfr property)": [[706, "mne.time_frequency.AverageTFR.tmax"]], "tmin (mne.time_frequency.averagetfr property)": [[706, "mne.time_frequency.AverageTFR.tmin"]], "to_data_frame() (mne.time_frequency.averagetfr method)": [[706, "mne.time_frequency.AverageTFR.to_data_frame"]], "crossspectraldensity (class in mne.time_frequency)": [[707, "mne.time_frequency.CrossSpectralDensity"]], "__getitem__() (mne.time_frequency.crossspectraldensity method)": [[707, "mne.time_frequency.CrossSpectralDensity.__getitem__"]], "__len__() (mne.time_frequency.crossspectraldensity method)": [[707, "mne.time_frequency.CrossSpectralDensity.__len__"]], "copy() (mne.time_frequency.crossspectraldensity method)": [[707, "mne.time_frequency.CrossSpectralDensity.copy"]], "get_data() (mne.time_frequency.crossspectraldensity method)": [[707, "mne.time_frequency.CrossSpectralDensity.get_data"]], "mean() (mne.time_frequency.crossspectraldensity method)": [[707, "mne.time_frequency.CrossSpectralDensity.mean"]], "n_channels (mne.time_frequency.crossspectraldensity property)": [[707, "mne.time_frequency.CrossSpectralDensity.n_channels"]], "pick_channels() (mne.time_frequency.crossspectraldensity method)": [[707, "mne.time_frequency.CrossSpectralDensity.pick_channels"]], "pick_frequency() (mne.time_frequency.crossspectraldensity method)": [[707, "mne.time_frequency.CrossSpectralDensity.pick_frequency"]], "plot() (mne.time_frequency.crossspectraldensity method)": [[707, "mne.time_frequency.CrossSpectralDensity.plot"]], "save() (mne.time_frequency.crossspectraldensity method)": [[707, "mne.time_frequency.CrossSpectralDensity.save"]], "sum() (mne.time_frequency.crossspectraldensity method)": [[707, "mne.time_frequency.CrossSpectralDensity.sum"]], "epochsspectrum (class in mne.time_frequency)": [[708, "mne.time_frequency.EpochsSpectrum"]], "__contains__() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.__contains__"]], "__getitem__() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.__getitem__"]], "__iter__() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.__iter__"]], "__len__() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.__len__"]], "add_channels() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.add_reference_channels"]], "average() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.average"]], "compensation_grade (mne.time_frequency.epochsspectrum property)": [[708, "mne.time_frequency.EpochsSpectrum.compensation_grade"]], "copy() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.copy"]], "drop_channels() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.get_channel_types"]], "get_data() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.get_data"]], "metadata (mne.time_frequency.epochsspectrum property)": [[708, "mne.time_frequency.EpochsSpectrum.metadata"]], "next() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.next"]], "pick() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.pick"]], "pick_channels() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.pick_channels"]], "pick_types() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.pick_types"]], "plot() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.plot"]], "plot_topo() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.reorder_channels"]], "save() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.save"]], "to_data_frame() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.to_data_frame"]], "units() (mne.time_frequency.epochsspectrum method)": [[708, "mne.time_frequency.EpochsSpectrum.units"]], "epochstfr (class in mne.time_frequency)": [[709, "mne.time_frequency.EpochsTFR"]], "__contains__() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.__contains__"]], "__getitem__() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.__getitem__"]], "__iter__() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.__iter__"]], "__len__() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.__len__"]], "add_channels() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.add_channels"]], "add_reference_channels() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.add_reference_channels"]], "apply_baseline() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.apply_baseline"]], "average() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.average"]], "ch_names (mne.time_frequency.epochstfr property)": [[709, "mne.time_frequency.EpochsTFR.ch_names"]], "compensation_grade (mne.time_frequency.epochstfr property)": [[709, "mne.time_frequency.EpochsTFR.compensation_grade"]], "copy() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.copy"]], "crop() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.crop"]], "decimate() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.decimate"]], "drop_channels() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.drop_channels"]], "get_channel_types() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.get_channel_types"]], "metadata (mne.time_frequency.epochstfr property)": [[709, "mne.time_frequency.EpochsTFR.metadata"]], "next() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.next"]], "pick() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.pick"]], "pick_channels() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.pick_channels"]], "pick_types() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.pick_types"]], "reorder_channels() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.reorder_channels"]], "save() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.save"]], "shift_time() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.shift_time"]], "time_as_index() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.time_as_index"]], "times (mne.time_frequency.epochstfr property)": [[709, "mne.time_frequency.EpochsTFR.times"]], "tmax (mne.time_frequency.epochstfr property)": [[709, "mne.time_frequency.EpochsTFR.tmax"]], "tmin (mne.time_frequency.epochstfr property)": [[709, "mne.time_frequency.EpochsTFR.tmin"]], "to_data_frame() (mne.time_frequency.epochstfr method)": [[709, "mne.time_frequency.EpochsTFR.to_data_frame"]], "spectrum (class in mne.time_frequency)": [[710, "mne.time_frequency.Spectrum"]], "__contains__() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.__contains__"]], "__getitem__() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.__getitem__"]], "add_channels() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.add_channels"]], "add_reference_channels() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.add_reference_channels"]], "compensation_grade (mne.time_frequency.spectrum property)": [[710, "mne.time_frequency.Spectrum.compensation_grade"]], "copy() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.copy"]], "drop_channels() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.drop_channels"]], "get_channel_types() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.get_channel_types"]], "get_data() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.get_data"]], "pick() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.pick"]], "pick_channels() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.pick_channels"]], "pick_types() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.pick_types"]], "plot() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.plot"]], "plot_topo() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.plot_topo"]], "plot_topomap() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.plot_topomap"]], "reorder_channels() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.reorder_channels"]], "save() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.save"]], "to_data_frame() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.to_data_frame"]], "units() (mne.time_frequency.spectrum method)": [[710, "mne.time_frequency.Spectrum.units"]], "csd_array_fourier() (in module mne.time_frequency)": [[711, "mne.time_frequency.csd_array_fourier"]], "csd_array_morlet() (in module mne.time_frequency)": [[712, "mne.time_frequency.csd_array_morlet"]], "csd_array_multitaper() (in module mne.time_frequency)": [[713, "mne.time_frequency.csd_array_multitaper"]], "csd_fourier() (in module mne.time_frequency)": [[714, "mne.time_frequency.csd_fourier"]], "csd_morlet() (in module mne.time_frequency)": [[715, "mne.time_frequency.csd_morlet"]], "csd_multitaper() (in module mne.time_frequency)": [[716, "mne.time_frequency.csd_multitaper"]], "csd_tfr() (in module mne.time_frequency)": [[717, "mne.time_frequency.csd_tfr"]], "dpss_windows() (in module mne.time_frequency)": [[718, "mne.time_frequency.dpss_windows"]], "fit_iir_model_raw() (in module mne.time_frequency)": [[719, "mne.time_frequency.fit_iir_model_raw"]], "fwhm() (in module mne.time_frequency)": [[720, "mne.time_frequency.fwhm"]], "istft() (in module mne.time_frequency)": [[721, "mne.time_frequency.istft"]], "morlet() (in module mne.time_frequency)": [[722, "mne.time_frequency.morlet"]], "pick_channels_csd() (in module mne.time_frequency)": [[723, "mne.time_frequency.pick_channels_csd"]], "psd_array_multitaper() (in module mne.time_frequency)": [[724, "mne.time_frequency.psd_array_multitaper"]], "psd_array_welch() (in module mne.time_frequency)": [[725, "mne.time_frequency.psd_array_welch"]], "read_csd() (in module mne.time_frequency)": [[726, "mne.time_frequency.read_csd"]], "read_spectrum() (in module mne.time_frequency)": [[727, "mne.time_frequency.read_spectrum"]], "read_tfrs() (in module mne.time_frequency)": [[728, "mne.time_frequency.read_tfrs"]], "stft() (in module mne.time_frequency)": [[729, "mne.time_frequency.stft"]], "stftfreq() (in module mne.time_frequency)": [[730, "mne.time_frequency.stftfreq"]], "cwt() (in module mne.time_frequency.tfr)": [[731, "mne.time_frequency.tfr.cwt"]], "morlet() (in module mne.time_frequency.tfr)": [[732, "mne.time_frequency.tfr.morlet"]], "tfr_array_morlet() (in module mne.time_frequency)": [[733, "mne.time_frequency.tfr_array_morlet"]], "tfr_array_multitaper() (in module mne.time_frequency)": [[734, "mne.time_frequency.tfr_array_multitaper"]], "tfr_array_stockwell() (in module mne.time_frequency)": [[735, "mne.time_frequency.tfr_array_stockwell"]], "tfr_morlet() (in module mne.time_frequency)": [[736, "mne.time_frequency.tfr_morlet"]], "tfr_multitaper() (in module mne.time_frequency)": [[737, "mne.time_frequency.tfr_multitaper"]], "tfr_stockwell() (in module mne.time_frequency)": [[738, "mne.time_frequency.tfr_stockwell"]], "write_tfrs() (in module mne.time_frequency)": [[739, "mne.time_frequency.write_tfrs"]], "transform_surface_to() (in module mne)": [[740, "mne.transform_surface_to"]], "transform (class in mne.transforms)": [[741, "mne.transforms.Transform"]], "__contains__() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.__contains__"]], "__getitem__() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.__getitem__"]], "__iter__() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.__iter__"]], "__len__() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.__len__"]], "clear() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.clear"]], "copy() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.copy"]], "from_str (mne.transforms.transform property)": [[741, "mne.transforms.Transform.from_str"]], "fromkeys() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.fromkeys"]], "get() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.get"]], "items() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.items"]], "keys() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.keys"]], "pop() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.pop"]], "popitem() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.popitem"]], "save() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.save"]], "setdefault() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.setdefault"]], "to_str (mne.transforms.transform property)": [[741, "mne.transforms.Transform.to_str"]], "update() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.update"]], "values() (mne.transforms.transform method)": [[741, "mne.transforms.Transform.values"]], "apply_volume_registration() (in module mne.transforms)": [[742, "mne.transforms.apply_volume_registration"]], "apply_volume_registration_points() (in module mne.transforms)": [[743, "mne.transforms.apply_volume_registration_points"]], "compute_volume_registration() (in module mne.transforms)": [[744, "mne.transforms.compute_volume_registration"]], "quat_to_rot() (in module mne.transforms)": [[745, "mne.transforms.quat_to_rot"]], "read_ras_mni_t() (in module mne.transforms)": [[746, "mne.transforms.read_ras_mni_t"]], "rot_to_quat() (in module mne.transforms)": [[747, "mne.transforms.rot_to_quat"]], "use_coil_def() (in module mne)": [[748, "mne.use_coil_def"]], "use_log_level (class in mne)": [[749, "mne.use_log_level"]], "deprecated (class in mne.utils)": [[750, "mne.utils.deprecated"]], "warn() (in module mne.utils)": [[751, "mne.utils.warn"]], "verbose() (in module mne)": [[752, "mne.verbose"]], "vertex_to_mni() (in module mne)": [[753, "mne.vertex_to_mni"]], "brain (class in mne.viz)": [[754, "mne.viz.Brain"]], "add_annotation() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_annotation"]], "add_data() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_data"]], "add_dipole() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_dipole"]], "add_foci() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_foci"]], "add_forward() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_forward"]], "add_head() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_head"]], "add_label() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_label"]], "add_sensors() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_sensors"]], "add_skull() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_skull"]], "add_text() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_text"]], "add_volume_labels() (mne.viz.brain method)": [[754, "mne.viz.Brain.add_volume_labels"]], "apply_auto_scaling() (mne.viz.brain method)": [[754, "mne.viz.Brain.apply_auto_scaling"]], "clear_glyphs() (mne.viz.brain method)": [[754, "mne.viz.Brain.clear_glyphs"]], "close() (mne.viz.brain method)": [[754, "mne.viz.Brain.close"]], "data (mne.viz.brain property)": [[754, "mne.viz.Brain.data"]], "get_picked_points() (mne.viz.brain method)": [[754, "mne.viz.Brain.get_picked_points"]], "get_view() (mne.viz.brain method)": [[754, "mne.viz.Brain.get_view"]], "help() (mne.viz.brain method)": [[754, "mne.viz.Brain.help"]], "interaction (mne.viz.brain property)": [[754, "mne.viz.Brain.interaction"]], "plot_time_course() (mne.viz.brain method)": [[754, "mne.viz.Brain.plot_time_course"]], "plot_time_line() (mne.viz.brain method)": [[754, "mne.viz.Brain.plot_time_line"]], "remove_annotations() (mne.viz.brain method)": [[754, "mne.viz.Brain.remove_annotations"]], "remove_data() (mne.viz.brain method)": [[754, "mne.viz.Brain.remove_data"]], "remove_dipole() (mne.viz.brain method)": [[754, "mne.viz.Brain.remove_dipole"]], "remove_forward() (mne.viz.brain method)": [[754, "mne.viz.Brain.remove_forward"]], "remove_head() (mne.viz.brain method)": [[754, "mne.viz.Brain.remove_head"]], "remove_labels() (mne.viz.brain method)": [[754, "mne.viz.Brain.remove_labels"]], "remove_sensors() (mne.viz.brain method)": [[754, "mne.viz.Brain.remove_sensors"]], "remove_skull() (mne.viz.brain method)": [[754, "mne.viz.Brain.remove_skull"]], "remove_text() (mne.viz.brain method)": [[754, "mne.viz.Brain.remove_text"]], "remove_volume_labels() (mne.viz.brain method)": [[754, "mne.viz.Brain.remove_volume_labels"]], "reset() (mne.viz.brain method)": [[754, "mne.viz.Brain.reset"]], "reset_view() (mne.viz.brain method)": [[754, "mne.viz.Brain.reset_view"]], "restore_user_scaling() (mne.viz.brain method)": [[754, "mne.viz.Brain.restore_user_scaling"]], "save_image() (mne.viz.brain method)": [[754, "mne.viz.Brain.save_image"]], "save_movie() (mne.viz.brain method)": [[754, "mne.viz.Brain.save_movie"]], "screenshot() (mne.viz.brain method)": [[754, "mne.viz.Brain.screenshot"]], "set_data_smoothing() (mne.viz.brain method)": [[754, "mne.viz.Brain.set_data_smoothing"]], "set_playback_speed() (mne.viz.brain method)": [[754, "mne.viz.Brain.set_playback_speed"]], "set_time() (mne.viz.brain method)": [[754, "mne.viz.Brain.set_time"]], "set_time_interpolation() (mne.viz.brain method)": [[754, "mne.viz.Brain.set_time_interpolation"]], "set_time_point() (mne.viz.brain method)": [[754, "mne.viz.Brain.set_time_point"]], "setup_time_viewer() (mne.viz.brain method)": [[754, "mne.viz.Brain.setup_time_viewer"]], "show() (mne.viz.brain method)": [[754, "mne.viz.Brain.show"]], "show_view() (mne.viz.brain method)": [[754, "mne.viz.Brain.show_view"]], "time_interpolation (mne.viz.brain property)": [[754, "mne.viz.Brain.time_interpolation"]], "toggle_interface() (mne.viz.brain method)": [[754, "mne.viz.Brain.toggle_interface"]], "toggle_playback() (mne.viz.brain method)": [[754, "mne.viz.Brain.toggle_playback"]], "update_lut() (mne.viz.brain method)": [[754, "mne.viz.Brain.update_lut"]], "clickableimage (class in mne.viz)": [[755, "mne.viz.ClickableImage"]], "onclick() (mne.viz.clickableimage method)": [[755, "mne.viz.ClickableImage.onclick"]], "plot_clicks() (mne.viz.clickableimage method)": [[755, "mne.viz.ClickableImage.plot_clicks"]], "to_layout() (mne.viz.clickableimage method)": [[755, "mne.viz.ClickableImage.to_layout"]], "figure3d (class in mne.viz)": [[756, "mne.viz.Figure3D"]], "plotter (mne.viz.figure3d property)": [[756, "mne.viz.Figure3D.plotter"]], "add_background_image() (in module mne.viz)": [[757, "mne.viz.add_background_image"]], "centers_to_edges() (in module mne.viz)": [[758, "mne.viz.centers_to_edges"]], "circular_layout() (in module mne.viz)": [[759, "mne.viz.circular_layout"]], "close_3d_figure() (in module mne.viz)": [[760, "mne.viz.close_3d_figure"]], "close_all_3d_figures() (in module mne.viz)": [[761, "mne.viz.close_all_3d_figures"]], "compare_fiff() (in module mne.viz)": [[762, "mne.viz.compare_fiff"]], "create_3d_figure() (in module mne.viz)": [[763, "mne.viz.create_3d_figure"]], "get_3d_backend() (in module mne.viz)": [[764, "mne.viz.get_3d_backend"]], "get_brain_class() (in module mne.viz)": [[765, "mne.viz.get_brain_class"]], "get_browser_backend() (in module mne.viz)": [[766, "mne.viz.get_browser_backend"]], "iter_topography() (in module mne.viz)": [[767, "mne.viz.iter_topography"]], "link_brains() (in module mne.viz)": [[768, "mne.viz.link_brains"]], "mne_analyze_colormap() (in module mne.viz)": [[769, "mne.viz.mne_analyze_colormap"]], "plot_alignment() (in module mne.viz)": [[770, "mne.viz.plot_alignment"]], "plot_arrowmap() (in module mne.viz)": [[771, "mne.viz.plot_arrowmap"]], "plot_bem() (in module mne.viz)": [[772, "mne.viz.plot_bem"]], "plot_brain_colorbar() (in module mne.viz)": [[773, "mne.viz.plot_brain_colorbar"]], "plot_bridged_electrodes() (in module mne.viz)": [[774, "mne.viz.plot_bridged_electrodes"]], "plot_ch_adjacency() (in module mne.viz)": [[775, "mne.viz.plot_ch_adjacency"]], "plot_channel_labels_circle() (in module mne.viz)": [[776, "mne.viz.plot_channel_labels_circle"]], "plot_chpi_snr() (in module mne.viz)": [[777, "mne.viz.plot_chpi_snr"]], "plot_compare_evokeds() (in module mne.viz)": [[778, "mne.viz.plot_compare_evokeds"]], "plot_cov() (in module mne.viz)": [[779, "mne.viz.plot_cov"]], "plot_csd() (in module mne.viz)": [[780, "mne.viz.plot_csd"]], "plot_dipole_amplitudes() (in module mne.viz)": [[781, "mne.viz.plot_dipole_amplitudes"]], "plot_dipole_locations() (in module mne.viz)": [[782, "mne.viz.plot_dipole_locations"]], "plot_drop_log() (in module mne.viz)": [[783, "mne.viz.plot_drop_log"]], "plot_epochs() (in module mne.viz)": [[784, "mne.viz.plot_epochs"]], "plot_epochs_image() (in module mne.viz)": [[785, "mne.viz.plot_epochs_image"]], "plot_epochs_psd_topomap() (in module mne.viz)": [[786, "mne.viz.plot_epochs_psd_topomap"]], "plot_events() (in module mne.viz)": [[787, "mne.viz.plot_events"]], "plot_evoked() (in module mne.viz)": [[788, "mne.viz.plot_evoked"]], "plot_evoked_field() (in module mne.viz)": [[789, "mne.viz.plot_evoked_field"]], "plot_evoked_image() (in module mne.viz)": [[790, "mne.viz.plot_evoked_image"]], "plot_evoked_joint() (in module mne.viz)": [[791, "mne.viz.plot_evoked_joint"]], "plot_evoked_topo() (in module mne.viz)": [[792, "mne.viz.plot_evoked_topo"]], "plot_evoked_topomap() (in module mne.viz)": [[793, "mne.viz.plot_evoked_topomap"]], "plot_evoked_white() (in module mne.viz)": [[794, "mne.viz.plot_evoked_white"]], "plot_filter() (in module mne.viz)": [[795, "mne.viz.plot_filter"]], "plot_head_positions() (in module mne.viz)": [[796, "mne.viz.plot_head_positions"]], "plot_ica_components() (in module mne.viz)": [[797, "mne.viz.plot_ica_components"]], "plot_ica_overlay() (in module mne.viz)": [[798, "mne.viz.plot_ica_overlay"]], "plot_ica_properties() (in module mne.viz)": [[799, "mne.viz.plot_ica_properties"]], "plot_ica_scores() (in module mne.viz)": [[800, "mne.viz.plot_ica_scores"]], "plot_ica_sources() (in module mne.viz)": [[801, "mne.viz.plot_ica_sources"]], "plot_ideal_filter() (in module mne.viz)": [[802, "mne.viz.plot_ideal_filter"]], "plot_layout() (in module mne.viz)": [[803, "mne.viz.plot_layout"]], "plot_montage() (in module mne.viz)": [[804, "mne.viz.plot_montage"]], "plot_projs_joint() (in module mne.viz)": [[805, "mne.viz.plot_projs_joint"]], "plot_projs_topomap() (in module mne.viz)": [[806, "mne.viz.plot_projs_topomap"]], "plot_raw() (in module mne.viz)": [[807, "mne.viz.plot_raw"]], "plot_raw_psd() (in module mne.viz)": [[808, "mne.viz.plot_raw_psd"]], "plot_regression_weights() (in module mne.viz)": [[809, "mne.viz.plot_regression_weights"]], "plot_sensors() (in module mne.viz)": [[810, "mne.viz.plot_sensors"]], "plot_snr_estimate() (in module mne.viz)": [[811, "mne.viz.plot_snr_estimate"]], "plot_source_estimates() (in module mne.viz)": [[812, "mne.viz.plot_source_estimates"]], "plot_sparse_source_estimates() (in module mne.viz)": [[813, "mne.viz.plot_sparse_source_estimates"]], "plot_tfr_topomap() (in module mne.viz)": [[814, "mne.viz.plot_tfr_topomap"]], "plot_topo_image_epochs() (in module mne.viz)": [[815, "mne.viz.plot_topo_image_epochs"]], "plot_topomap() (in module mne.viz)": [[816, "mne.viz.plot_topomap"]], "plot_vector_source_estimates() (in module mne.viz)": [[817, "mne.viz.plot_vector_source_estimates"]], "plot_volume_source_estimates() (in module mne.viz)": [[818, "mne.viz.plot_volume_source_estimates"]], "set_3d_backend() (in module mne.viz)": [[819, "mne.viz.set_3d_backend"]], "set_3d_options() (in module mne.viz)": [[820, "mne.viz.set_3d_options"]], "set_3d_title() (in module mne.viz)": [[821, "mne.viz.set_3d_title"]], "set_3d_view() (in module mne.viz)": [[822, "mne.viz.set_3d_view"]], "set_browser_backend() (in module mne.viz)": [[823, "mne.viz.set_browser_backend"]], "snapshot_brain_montage() (in module mne.viz)": [[824, "mne.viz.snapshot_brain_montage"]], "use_3d_backend() (in module mne.viz)": [[825, "mne.viz.use_3d_backend"]], "use_browser_backend() (in module mne.viz)": [[826, "mne.viz.use_browser_backend"]], "what() (in module mne)": [[827, "mne.what"]], "write_bem_solution() (in module mne)": [[828, "mne.write_bem_solution"]], "write_bem_surfaces() (in module mne)": [[829, "mne.write_bem_surfaces"]], "write_cov() (in module mne)": [[830, "mne.write_cov"]], "write_events() (in module mne)": [[831, "mne.write_events"]], "write_evokeds() (in module mne)": [[832, "mne.write_evokeds"]], "write_forward_solution() (in module mne)": [[833, "mne.write_forward_solution"]], "write_head_bem() (in module mne)": [[834, "mne.write_head_bem"]], "write_label() (in module mne)": [[835, "mne.write_label"]], "write_labels_to_annot() (in module mne)": [[836, "mne.write_labels_to_annot"]], "write_proj() (in module mne)": [[837, "mne.write_proj"]], "write_source_spaces() (in module mne)": [[838, "mne.write_source_spaces"]], "write_surface() (in module mne)": [[839, "mne.write_surface"]], "write_trans() (in module mne)": [[840, "mne.write_trans"]], "bem": [[841, "term-BEM"]], "dc": [[841, "term-DC"]], "dics": [[841, "term-DICS"]], "ecd": [[841, "term-ECD"]], "freesurfer lut": [[841, "term-FreeSurfer-LUT"]], "gfp": [[841, "term-GFP"]], "hed": [[841, "term-HED"]], "hpi": [[841, "term-HPI"]], "lcmv": [[841, "term-LCMV"]], "lcmv beamformer": [[841, "term-LCMV-beamformer"]], "lut": [[841, "term-LUT"]], "mne": [[841, "term-MNE"], [876, "module-mne"]], "opm": [[841, "term-OPM"]], "ras": [[841, "term-RAS"]], "roi": [[841, "term-ROI"]], "squid": [[841, "term-SQUID"]], "ssp": [[841, "term-SSP"]], "stc": [[841, "term-STC"]], "anatomical landmark": [[841, "term-anatomical-landmark"]], "annotations": [[841, "term-annotations"]], "beamformer": [[841, "term-beamformer"]], "boundary element method": [[841, "term-boundary-element-method"]], "boundary element model": [[841, "term-boundary-element-model"]], "chpi": [[841, "term-cHPI"]], "channels": [[841, "term-channels"]], "dspm": [[841, "term-dSPM"]], "data channels": [[841, "term-data-channels"]], "digitization": [[841, "term-digitization"]], "dipole": [[841, "term-dipole"]], "direct current": [[841, "term-direct-current"]], "dynamic imaging of coherent sources": [[841, "term-dynamic-imaging-of-coherent-sources"]], "dynamic statistical parametric mapping": [[841, "term-dynamic-statistical-parametric-mapping"]], "eloreta": [[841, "term-eLORETA"]], "epochs": [[841, "term-epochs"]], "equivalent current dipole": [[841, "term-equivalent-current-dipole"]], "events": [[841, "term-events"]], "evoked": [[841, "term-evoked"]], "fiducial": [[841, "term-fiducial"]], "fiducial point": [[841, "term-fiducial-point"]], "first_samp": [[841, "term-first_samp"]], "forward": [[841, "term-forward"]], "forward solution": [[841, "term-forward-solution"]], "global field power": [[841, "term-global-field-power"]], "head position indicator": [[841, "term-head-position-indicator"]], "hierarchical event descriptors": [[841, "term-hierarchical-event-descriptors"]], "info": [[841, "term-info"]], "inverse": [[841, "term-inverse"]], "inverse operator": [[841, "term-inverse-operator"]], "label": [[841, "term-label"]], "last_samp": [[841, "term-last_samp"]], "layout": [[841, "term-layout"]], "maximum intensity projection": [[841, "term-maximum-intensity-projection"]], "measurement info": [[841, "term-measurement-info"]], "minimum-norm estimate": [[841, "term-minimum-norm-estimate"]], "minimum-norm estimation": [[841, "term-minimum-norm-estimation"]], "montage": [[841, "term-montage"]], "morphing": [[841, "term-morphing"]], "noise covariance": [[841, "term-noise-covariance"]], "optically pumped magnetometer": [[841, "term-optically-pumped-magnetometer"]], "path-like": [[841, "term-path-like"]], "pick": [[841, "term-pick"]], "projector": [[841, "term-projector"]], "raw": [[841, "term-raw"]], "region of interest": [[841, "term-region-of-interest"]], "sloreta": [[841, "term-sLORETA"]], "selection": [[841, "term-selection"]], "source estimate": [[841, "term-source-estimate"]], "source space": [[841, "term-source-space"]], "source time course": [[841, "term-source-time-course"]], "stim channel": [[841, "term-stim-channel"]], "superconducting quantum interference device": [[841, "term-superconducting-quantum-interference-device"]], "template montage": [[841, "term-template-montage"]], "tfr": [[841, "term-tfr"]], "trans": [[841, "term-trans"]], "trigger channel": [[841, "term-trigger-channel"]], "whitening": [[841, "term-whitening"]], "mne.beamformer": [[854, "module-mne.beamformer"]], "mne.dipole": [[854, "module-mne.dipole"]], "mne.inverse_sparse": [[854, "module-mne.inverse_sparse"]], "mne.minimum_norm": [[854, "module-mne.minimum_norm"]], "mne.cuda": [[855, "module-mne.cuda"]], "mne.utils": [[855, "module-mne.utils"]], "mne.channels": [[875, "module-mne.channels"]], "mne.chpi": [[875, "module-mne.chpi"]], "mne.filter": [[875, "module-mne.filter"]], "mne.preprocessing": [[875, "module-mne.preprocessing"]], "mne.preprocessing.eyetracking": [[875, "module-mne.preprocessing.eyetracking"]], "mne.preprocessing.ieeg": [[875, "module-mne.preprocessing.ieeg"]], "mne.preprocessing.nirs": [[875, "module-mne.preprocessing.nirs"]], "mne.transforms": [[875, "module-mne.transforms"]], "mne.io": [[877, "module-mne.io"]], "mne.io.kit": [[877, "module-mne.io.kit"]], "mne.baseline": [[880, "module-mne.baseline"]], "mne.simulation": [[881, "module-mne.simulation"]], "mne.simulation.metrics": [[881, "module-mne.simulation.metrics"]], "mne.stats": [[883, "module-mne.stats"]], "mne.time_frequency": [[884, "module-mne.time_frequency"]], "mne.time_frequency.tfr": [[884, "module-mne.time_frequency.tfr"]], "mne.viz": [[885, "module-mne.viz"]]}})